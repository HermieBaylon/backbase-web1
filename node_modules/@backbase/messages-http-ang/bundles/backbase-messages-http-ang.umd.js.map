{"version":3,"file":"backbase-messages-http-ang.umd.js","sources":["../../model/mailoutStatus.ts","../../model/markAsReadUnreadPutRequestBody.ts","../../model/workflowStatus.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../../../node_modules/tslib/tslib.es6.js","../../encoder.ts","../../api/employee.service.ts","../../api/employee.service.mocks.ts","../../api/mailout.service.ts","../../api/mailout.service.mocks.ts","../../api/messagecenter.service.ts","../../api/messagecenter.service.mocks.ts"],"sourcesContent":["/**\n * Messages client v4\n * Create, read, update, and delete messages as a bank customer or employee. Manage drafts, mailouts, topics, and subscriptions.\n *\n * The version of the OpenAPI document: 4.0.15\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Mailout status\n */\nexport type MailoutStatus = 'CREATED' | 'PREPARING' | 'READY' | 'PROCESSING' | 'DONE' | 'ERROR' | 'CANCELLATION_IN_PROCESS' | 'CANCELLED';\n\nexport const MailoutStatus = {\n    CREATED: 'CREATED' as MailoutStatus,\n    PREPARING: 'PREPARING' as MailoutStatus,\n    READY: 'READY' as MailoutStatus,\n    PROCESSING: 'PROCESSING' as MailoutStatus,\n    DONE: 'DONE' as MailoutStatus,\n    ERROR: 'ERROR' as MailoutStatus,\n    CANCELLATIONINPROCESS: 'CANCELLATION_IN_PROCESS' as MailoutStatus,\n    CANCELLED: 'CANCELLED' as MailoutStatus\n};\n\n","/**\n * Messages client v4\n * Create, read, update, and delete messages as a bank customer or employee. Manage drafts, mailouts, topics, and subscriptions.\n *\n * The version of the OpenAPI document: 4.0.15\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Mark conversations as read/unread\n */\nexport interface MarkAsReadUnreadPutRequestBody { \n    /**\n     * Type of status: read or unread\n     */\n    [\"status\"]: MarkAsReadUnreadPutRequestBody.StatusEnum;\n    /**\n     * Identifiers of conversations\n     */\n    [\"ids\"]: Array<string>;\n    /**\n     * Additional properties\n     */\n    [\"additions\"]?: { [key: string]: string; };\n}\nexport namespace MarkAsReadUnreadPutRequestBody {\n    export type StatusEnum = 'READ' | 'UNREAD';\n    export const StatusEnum = {\n        READ: 'READ' as StatusEnum,\n        UNREAD: 'UNREAD' as StatusEnum\n    };\n}\n\n\n","/**\n * Messages client v4\n * Create, read, update, and delete messages as a bank customer or employee. Manage drafts, mailouts, topics, and subscriptions.\n *\n * The version of the OpenAPI document: 4.0.15\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Message thread workflow status\n */\nexport type WorkflowStatus = 'NEW' | 'IN_PROGRESS' | 'RESOLVED';\n\nexport const WorkflowStatus = {\n    NEW: 'NEW' as WorkflowStatus,\n    INPROGRESS: 'IN_PROGRESS' as WorkflowStatus,\n    RESOLVED: 'RESOLVED' as WorkflowStatus\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const MESSAGES_BASE_PATH = new InjectionToken<string>('MESSAGES_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface MessagesConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class MessagesConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: MessagesConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link MessagesConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link MessagesConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module MessagesConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { MessagesConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class MessagesApiModule {\n    public static forRoot(configurationFactory: () => MessagesConfiguration): ModuleWithProviders<MessagesApiModule> {\n        return {\n            ngModule: MessagesApiModule,\n            providers: [ { provide: MessagesConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: MessagesApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: MessagesConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('MessagesApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Messages client v4\n * Create, read, update, and delete messages as a bank customer or employee. Manage drafts, mailouts, topics, and subscriptions.\n *\n * The version of the OpenAPI document: 4.0.15\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ConversationAssignmentDeleteResponseBody } from '../model/models';\nimport { ConversationCounterResponseBody } from '../model/models';\nimport { ConversationsThread } from '../model/models';\nimport { DeleteResponseBody } from '../model/models';\nimport { EmployeeConversationThread } from '../model/models';\nimport { ExtendedTopicsPostResponseBody } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { MarkAsReadUnreadPutRequestBody } from '../model/models';\nimport { MarkAsReadUnreadPutResponseBody } from '../model/models';\nimport { MessageReplyPostRequestBody } from '../model/models';\nimport { MessageThreadAssignmentRequestBody } from '../model/models';\nimport { MessageThreadAssignmentResponseBody } from '../model/models';\nimport { MessageThreadBulkAssignmentRequestBody } from '../model/models';\nimport { MessageThreadBulkAssignmentResponseBody } from '../model/models';\nimport { MessageThreadBulkResolutionRequestBody } from '../model/models';\nimport { MessageThreadBulkResolutionResponseBody } from '../model/models';\nimport { MessageThreadResolutionRequestBody } from '../model/models';\nimport { MessageThreadResolutionResponseBody } from '../model/models';\nimport { MessageThreadsReport } from '../model/models';\nimport { Metadata } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PresentationMessageEmployeePostRequestBody } from '../model/models';\nimport { PresentationMessagePostResponseBody } from '../model/models';\nimport { SubscribersPostRequestBody } from '../model/models';\nimport { SubscribersPostResponseBody } from '../model/models';\nimport { SubscriptionsGetResponseBody } from '../model/models';\nimport { SubscriptionsPostRequestBody } from '../model/models';\nimport { SubscriptionsPostResponseBody } from '../model/models';\nimport { TopicGetResponseBody } from '../model/models';\nimport { TopicPutRequestBody } from '../model/models';\nimport { TopicPutResponseBody } from '../model/models';\nimport { TopicsGetEmployeeResponseBody } from '../model/models';\nimport { TopicsPostRequestBody } from '../model/models';\nimport { UnauthorizedError } from '../model/models';\nimport { UpdateMessageTopicRequestBody } from '../model/models';\nimport { WorkflowStatus } from '../model/models';\n\nimport { MESSAGES_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { MessagesConfiguration }                                     from '../configuration';\n\n\nexport interface DeleteConversationAssignmentRequestParams {\n    /** Array of conversation root message ids to de unassigned */\n    [\"ids\"]: Array<string>;\n}\n\nexport interface DeleteMessageAttachmentsEmployeeRequestParams {\n    /** Array of attachments to delete */\n    [\"ids\"]: Array<string>;\n}\n\nexport interface DeleteSubscriptionRequestParams {\n    /** Uniquely identifies a subscription that is to be managed */\n    [\"subscriptionId\"]: string;\n    /** Uniquely identifies a topic that is to be managed */\n    [\"topicId\"]: string;\n}\n\nexport interface DeleteTopicRequestParams {\n    /** Uniquely identifies a topic that is to be managed */\n    [\"topicId\"]: string;\n}\n\nexport interface GetConversationThreadsEmployeeRequestParams {\n    /** Specifies which &#x60;messages mailbox&#x60; should be retrieved: inbox or outbox. All: returns all conversations. Outbox: returns conversations  where at least one sent message from bank employee (any bank employee) exists. Inbox: returns conversations where at least one sent message from bank client exists.  */\n    [\"mailboxType\"]?: string;\n    /** Specifies which &#x60;messages mailbox view&#x60; should be retrieved: all, assigned, unassigned, resolved, my-resolved. All: returns all conversations for all topics bank employee is subscribed to (excluding resolved ones). Unassigned: returns all unassigned conversations that are neither resolved nor assigned to any bank employee for all topics bank employee is subscribed to. Assigned: returns assigned to the bank employee conversations (excluding resolved ones). Resolved: returns all conversation that have workflow status RESOLVED for all topics the bank employee is subscribed to. My-resolved: returns conversation that have workflow status RESOLVED and assigned to the bank employee.  */\n    [\"viewType\"]?: string;\n    /** The from parameter defines the offset from the first result you want to fetch. Increasing from value by 1 means fetching the next result. It should be utilized in order to control pagination.  */\n    [\"from\"]?: number;\n    /** The size parameter allows you to configure the maximum amount of hits to be returned. It should be utilized in order to control pagination.  */\n    [\"size\"]?: number;\n    /** Order by field: sender, topic, important  */\n    [\"orderBy\"]?: string;\n    /** Direction */\n    [\"direction\"]?: 'ASC' | 'DESC';\n}\n\nexport interface GetConversationsReportRequestParams {\n    /** Restricts search result only to conversations that have messages sent or received on or after the specified date.  */\n    [\"startDate\"]?: string;\n    /** Restricts search result only to conversations that have messages sent or received before or on the specified date.  */\n    [\"endDate\"]?: string;\n    /** Internal identifier of a client. When supplied, the search result will include conversations where this client participates.  */\n    [\"clientId\"]?: string;\n    /** Restricts results to include only conversations where the user with such name participates.  */\n    [\"clientFullName\"]?: string;\n    /** Restricts results to include only conversations from the topic with specified uuid. If the parameter is not set, results include threads from all topics.  */\n    [\"category\"]?: string;\n    /** Restricts results to include only conversations with specified workflow status. If the parameter is not set, result includes threads with all statuses.  */\n    [\"status\"]?: WorkflowStatus;\n    /** The from parameter defines the offset from the first result you want to fetch. Increasing from value by 1 means fetching the next result. It should be utilized in order to control pagination.  */\n    [\"from\"]?: number;\n    /** The size parameter allows you to configure the maximum amount of hits to be returned. It should be utilized in order to control pagination.  */\n    [\"size\"]?: number;\n}\n\nexport interface GetEmployeeMessageThreadRequestParams {\n    /** Uniquely identifies the root message */\n    [\"messageId\"]: string;\n}\n\nexport interface GetMessageAttachmentEmployeeRequestParams {\n    /** Uniquely identifies message attachment */\n    [\"attachmentId\"]: string;\n}\n\nexport interface GetSearchConversationsRequestParams {\n    /** Internal identifier of a customer. When supplied, the search result will include conversations where this customer participates. If userId is missing, no conversations are returned.  */\n    [\"userId\"]?: string;\n    /** Restricts results to include only conversations from the specified topic. If the parameter not set, results include threads from all topics subscribed by the employee.  */\n    [\"topicId\"]?: string;\n    /** Restricts search result only to conversations that have messages sent or received on or after the specified date.  */\n    [\"startDate\"]?: string;\n    /** Restricts search result only to conversations that have messages sent or received before or on the specified date.  */\n    [\"endDate\"]?: string;\n    /** The from parameter defines the offset from the first result you want to fetch. Increasing from value by 1 means fetching the next result. It should be utilized in order to control pagination.  */\n    [\"from\"]?: number;\n    /** The size parameter allows you to configure the maximum amount of hits to be returned. It should be utilized in order to control pagination.  */\n    [\"size\"]?: number;\n}\n\nexport interface GetSubscriptionsRequestParams {\n    /** Uniquely identifies a topic that is to be managed */\n    [\"topicId\"]: string;\n    /** Allow to search by a subscriber employee name. Searches items where subscriber full name contains a string passed as subscriberName parameter. Wildcards are not supported: any wildcards symbols are counted as part of subscriberName.  */\n    [\"subscriberName\"]?: string;\n    /** The from parameter defines the offset from the first result you want to fetch. Increasing from value by 1 means fetching the next result. It should be utilized in order to control pagination.  */\n    [\"from\"]?: number;\n    /** The size parameter allows you to configure the maximum amount of hits to be returned. It should be utilized in order to control pagination.  */\n    [\"size\"]?: number;\n}\n\nexport interface GetTopicRequestParams {\n    /** Uniquely identifies a topic that is to be managed */\n    [\"topicId\"]: string;\n}\n\nexport interface GetTopicsEmployeeRequestParams {\n    /** If this parameter value is true then endpoint returns only topics on which current user is subscribed to.  */\n    [\"subscribed\"]?: boolean;\n    /** If this parameter value is true then endpoint returns only deleted topics.  */\n    [\"deleted\"]?: boolean;\n    /** Specifies which &#x60;topics&#x60; should be retrieved, all, public or mailout. With \\&#39;all\\&#39; value return list will contain public and mailout topics. With \\&#39;public\\&#39; value return list will contain only public topics. With \\&#39;mailout\\&#39; value return list will contain only mailout topics. Mailout topics cannot be retrieved with \\&#39;deleted&#x3D;true\\&#39; or \\&#39;subscribed&#x3D;true\\&#39; params.  */\n    [\"topicType\"]?: string;\n    /** The from parameter defines the offset from the first result you want to fetch. Increasing from value by 1 means fetching the next result. It should be utilized in order to control pagination.  */\n    [\"from\"]?: number;\n    /** The size parameter allows you to configure the maximum amount of hits to be returned. It should be utilized in order to control pagination.  */\n    [\"size\"]?: number;\n}\n\nexport interface PostMessageAttachmentsEmployeeRequestParams {\n    /** Binary attachment represented as binary stream */\n    [\"attachment\"]?: Blob;\n}\n\nexport interface PostMessageReplyEmployeeRequestParams {\n    /** Uniquely identifies the root message */\n    [\"messageId\"]: string;\n    /** Send a reply message within message thread/conversation */\n    [\"messageReplyPostRequestBody\"]?: MessageReplyPostRequestBody;\n}\n\nexport interface PostMessagesEmployeeRequestParams {\n    /** Create a root message of a conversation. Recipient is required. */\n    [\"presentationMessageEmployeePostRequestBody\"]?: PresentationMessageEmployeePostRequestBody;\n}\n\nexport interface PostSubscribersRequestParams {\n    /** Uniquely identifies a topic that is to be managed */\n    [\"topicId\"]: string;\n    /** Check if users are subscribed to the topic */\n    [\"subscribersPostRequestBody\"]?: SubscribersPostRequestBody;\n}\n\nexport interface PostSubscriptionsRequestParams {\n    /** Uniquely identifies a topic that is to be managed */\n    [\"topicId\"]: string;\n    /** Adds a new subscription to the given topic */\n    [\"subscriptionsPostRequestBody\"]?: SubscriptionsPostRequestBody;\n}\n\nexport interface PostTopicsRequestParams {\n    /** Creates a new topic */\n    [\"topicsPostRequestBody\"]?: TopicsPostRequestBody;\n}\n\nexport interface PutAssignConversationRequestParams {\n    /** Uniquely identifies the root message */\n    [\"messageId\"]: string;\n    /** Assigns message thread/conversation to bank employee with given internal user id. Assignment to other employees only possible for users with supervisor permission. User with manager permission can assign thread/conversation only to himself. If given internal user id is empty, message thread is assigned to caller internal user id.  */\n    [\"messageThreadAssignmentRequestBody\"]?: MessageThreadAssignmentRequestBody;\n}\n\nexport interface PutConversationAssignmentRequestParams {\n    /** Assigns multiple message threads/conversations to bank employee with given internal user id. Assignment to other employees only possible for users with supervisor permission. User with manager permission can assign threads/conversations only to himself. If given internal user id is empty, message threads is assigned to caller internal user id.  */\n    [\"messageThreadBulkAssignmentRequestBody\"]?: MessageThreadBulkAssignmentRequestBody;\n}\n\nexport interface PutConversationResolutionRequestParams {\n    /** Uniquely identifies the root message */\n    [\"messageId\"]: string;\n    /** Sets message thread/conversation resolution. */\n    [\"messageThreadResolutionRequestBody\"]?: MessageThreadResolutionRequestBody;\n}\n\nexport interface PutConversationResolutionEmployeeRequestParams {\n    /** Sets message threads/conversations resolution. */\n    [\"messageThreadBulkResolutionRequestBody\"]?: MessageThreadBulkResolutionRequestBody;\n}\n\nexport interface PutMarkAsReadUnreadEmployeeRequestParams {\n    /** Mark assigned to the employee conversations as read or unread. */\n    [\"markAsReadUnreadPutRequestBody\"]?: MarkAsReadUnreadPutRequestBody;\n}\n\nexport interface PutMessageThreadTopicRequestParams {\n    /** Uniquely identifies the root message */\n    [\"messageId\"]: string;\n    [\"updateMessageTopicRequestBody\"]?: UpdateMessageTopicRequestBody;\n}\n\nexport interface PutTopicRequestParams {\n    /** Uniquely identifies a topic that is to be managed */\n    [\"topicId\"]: string;\n    /** Uniquely identifies a request. It is utilized in order to support idempotency. In case of an uncertain state of a response, a client is expected to be able to retry the request by providing the same request identifier.  */\n    [\"xBBSVCRequestId\"]?: string;\n    /** Updates a topic with the given id */\n    [\"topicPutRequestBody\"]?: TopicPutRequestBody;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new MessagesConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(MESSAGES_BASE_PATH) basePath: string, @Optional() configuration: MessagesConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Unassign the bank employee from the message threads/conversations.\n     * Unassign the bank employee from the message threads/conversations. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteConversationAssignment(requestParameters: DeleteConversationAssignmentRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ConversationAssignmentDeleteResponseBody>;\n    /**\n     * Unassign the bank employee from the message threads/conversations.\n     * Unassign the bank employee from the message threads/conversations. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteConversationAssignment(requestParameters: DeleteConversationAssignmentRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ConversationAssignmentDeleteResponseBody>>;\n    /**\n     * Unassign the bank employee from the message threads/conversations.\n     * Unassign the bank employee from the message threads/conversations. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteConversationAssignment(requestParameters: DeleteConversationAssignmentRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ConversationAssignmentDeleteResponseBody>>;\n    /**\n     * Unassign the bank employee from the message threads/conversations.\n     * Unassign the bank employee from the message threads/conversations. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteConversationAssignment(requestParameters: DeleteConversationAssignmentRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _ids = requestParameters[\"ids\"];\n        if (_ids === null || _ids === undefined) {\n            throw new Error('Required parameter ids was null or undefined when calling deleteConversationAssignment.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_ids) {\n            _ids.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ids');\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<ConversationAssignmentDeleteResponseBody>(`${this.configuration.basePath}/client-api/v4/employee/messages/assignment`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteConversationAssignmentUrl(requestParameters: DeleteConversationAssignmentRequestParams): string {\n        const _ids = requestParameters[\"ids\"];\n        if (_ids === null || _ids === undefined) {\n            throw new Error('Required parameter ids was null or undefined when calling deleteConversationAssignment.');\n        }\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_ids) {\n            _ids.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ids');\n            })\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v4/employee/messages/assignment${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Deletes message binary attachment. Attachment can only be deleted if it\\&#39;s not added to the conversation.\n     * Deletes message binary attachment. Attachment can only be deleted if it\\&#39;s not added to the conversation. Attachment can only be deleted by its owner \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMessageAttachmentsEmployee(requestParameters: DeleteMessageAttachmentsEmployeeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<DeleteResponseBody>;\n    /**\n     * Deletes message binary attachment. Attachment can only be deleted if it\\&#39;s not added to the conversation.\n     * Deletes message binary attachment. Attachment can only be deleted if it\\&#39;s not added to the conversation. Attachment can only be deleted by its owner \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMessageAttachmentsEmployee(requestParameters: DeleteMessageAttachmentsEmployeeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<DeleteResponseBody>>;\n    /**\n     * Deletes message binary attachment. Attachment can only be deleted if it\\&#39;s not added to the conversation.\n     * Deletes message binary attachment. Attachment can only be deleted if it\\&#39;s not added to the conversation. Attachment can only be deleted by its owner \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMessageAttachmentsEmployee(requestParameters: DeleteMessageAttachmentsEmployeeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<DeleteResponseBody>>;\n    /**\n     * Deletes message binary attachment. Attachment can only be deleted if it\\&#39;s not added to the conversation.\n     * Deletes message binary attachment. Attachment can only be deleted if it\\&#39;s not added to the conversation. Attachment can only be deleted by its owner \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMessageAttachmentsEmployee(requestParameters: DeleteMessageAttachmentsEmployeeRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _ids = requestParameters[\"ids\"];\n        if (_ids === null || _ids === undefined) {\n            throw new Error('Required parameter ids was null or undefined when calling deleteMessageAttachmentsEmployee.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_ids) {\n            _ids.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ids');\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<DeleteResponseBody>(`${this.configuration.basePath}/client-api/v4/employee/attachments`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteMessageAttachmentsEmployeeUrl(requestParameters: DeleteMessageAttachmentsEmployeeRequestParams): string {\n        const _ids = requestParameters[\"ids\"];\n        if (_ids === null || _ids === undefined) {\n            throw new Error('Required parameter ids was null or undefined when calling deleteMessageAttachmentsEmployee.');\n        }\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_ids) {\n            _ids.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ids');\n            })\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v4/employee/attachments${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Remove a subscription for a topic.\n     * Remove a subscription for a topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteSubscription(requestParameters: DeleteSubscriptionRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Remove a subscription for a topic.\n     * Remove a subscription for a topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteSubscription(requestParameters: DeleteSubscriptionRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Remove a subscription for a topic.\n     * Remove a subscription for a topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteSubscription(requestParameters: DeleteSubscriptionRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Remove a subscription for a topic.\n     * Remove a subscription for a topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteSubscription(requestParameters: DeleteSubscriptionRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _subscriptionId = requestParameters[\"subscriptionId\"];\n        if (_subscriptionId === null || _subscriptionId === undefined) {\n            throw new Error('Required parameter subscriptionId was null or undefined when calling deleteSubscription.');\n        }\n        const _topicId = requestParameters[\"topicId\"];\n        if (_topicId === null || _topicId === undefined) {\n            throw new Error('Required parameter topicId was null or undefined when calling deleteSubscription.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v4/employee/topics/${encodeURIComponent(String(_topicId))}/subscriptions/${encodeURIComponent(String(_subscriptionId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteSubscriptionUrl(requestParameters: DeleteSubscriptionRequestParams): string {\n        const _subscriptionId = requestParameters[\"subscriptionId\"];\n        if (_subscriptionId === null || _subscriptionId === undefined) {\n            throw new Error('Required parameter subscriptionId was null or undefined when calling deleteSubscription.');\n        }\n        const _topicId = requestParameters[\"topicId\"];\n        if (_topicId === null || _topicId === undefined) {\n            throw new Error('Required parameter topicId was null or undefined when calling deleteSubscription.');\n        }\n        return `${this.configuration.basePath}/client-api/v4/employee/topics/${encodeURIComponent(String(_topicId))}/subscriptions/${encodeURIComponent(String(_subscriptionId))}`;\n    }\n\n    /**\n     * Deletes a topic of the given ID.\n     * Deletes a topic of the given ID\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteTopic(requestParameters: DeleteTopicRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Deletes a topic of the given ID.\n     * Deletes a topic of the given ID\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteTopic(requestParameters: DeleteTopicRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Deletes a topic of the given ID.\n     * Deletes a topic of the given ID\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteTopic(requestParameters: DeleteTopicRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Deletes a topic of the given ID.\n     * Deletes a topic of the given ID\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteTopic(requestParameters: DeleteTopicRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _topicId = requestParameters[\"topicId\"];\n        if (_topicId === null || _topicId === undefined) {\n            throw new Error('Required parameter topicId was null or undefined when calling deleteTopic.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v4/employee/topics/${encodeURIComponent(String(_topicId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteTopicUrl(requestParameters: DeleteTopicRequestParams): string {\n        const _topicId = requestParameters[\"topicId\"];\n        if (_topicId === null || _topicId === undefined) {\n            throw new Error('Required parameter topicId was null or undefined when calling deleteTopic.');\n        }\n        return `${this.configuration.basePath}/client-api/v4/employee/topics/${encodeURIComponent(String(_topicId))}`;\n    }\n\n    /**\n     * Returns a list of conversations available for a bank employee.\n     * Returns a list of conversations available for a bank employee. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversationThreadsEmployee(requestParameters: GetConversationThreadsEmployeeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<EmployeeConversationThread>>;\n    /**\n     * Returns a list of conversations available for a bank employee.\n     * Returns a list of conversations available for a bank employee. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversationThreadsEmployee(requestParameters: GetConversationThreadsEmployeeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<EmployeeConversationThread>>>;\n    /**\n     * Returns a list of conversations available for a bank employee.\n     * Returns a list of conversations available for a bank employee. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversationThreadsEmployee(requestParameters: GetConversationThreadsEmployeeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<EmployeeConversationThread>>>;\n    /**\n     * Returns a list of conversations available for a bank employee.\n     * Returns a list of conversations available for a bank employee. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversationThreadsEmployee(requestParameters: GetConversationThreadsEmployeeRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _mailboxType = requestParameters[\"mailboxType\"];\n        const _viewType = requestParameters[\"viewType\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_mailboxType !== undefined && _mailboxType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_mailboxType, 'mailboxType');\n        }\n        if (_viewType !== undefined && _viewType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_viewType, 'viewType');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<EmployeeConversationThread>>(`${this.configuration.basePath}/client-api/v4/employee/conversations`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getConversationThreadsEmployeeUrl(requestParameters: GetConversationThreadsEmployeeRequestParams): string {\n        const _mailboxType = requestParameters[\"mailboxType\"];\n        const _viewType = requestParameters[\"viewType\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_mailboxType !== undefined && _mailboxType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_mailboxType, 'mailboxType');\n        }\n        if (_viewType !== undefined && _viewType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_viewType, 'viewType');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v4/employee/conversations${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Returns counts for different types of conversations (e.g. number of unassigned message threads).\n     * Returns counts for different types of conversations (e.g. number of unassigned message threads)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversationsCounter(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ConversationCounterResponseBody>;\n    /**\n     * Returns counts for different types of conversations (e.g. number of unassigned message threads).\n     * Returns counts for different types of conversations (e.g. number of unassigned message threads)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversationsCounter(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ConversationCounterResponseBody>>;\n    /**\n     * Returns counts for different types of conversations (e.g. number of unassigned message threads).\n     * Returns counts for different types of conversations (e.g. number of unassigned message threads)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversationsCounter(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ConversationCounterResponseBody>>;\n    /**\n     * Returns counts for different types of conversations (e.g. number of unassigned message threads).\n     * Returns counts for different types of conversations (e.g. number of unassigned message threads)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversationsCounter(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ConversationCounterResponseBody>(`${this.configuration.basePath}/client-api/v4/employee/conversations/counters`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getConversationsCounterUrl(): string {\n        return `${this.configuration.basePath}/client-api/v4/employee/conversations/counters`;\n    }\n\n    /**\n     * Returns list of conversations filtered by parameters.\n     * Returns list of conversations filtered by parameters. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversationsReport(requestParameters: GetConversationsReportRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<MessageThreadsReport>>;\n    /**\n     * Returns list of conversations filtered by parameters.\n     * Returns list of conversations filtered by parameters. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversationsReport(requestParameters: GetConversationsReportRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<MessageThreadsReport>>>;\n    /**\n     * Returns list of conversations filtered by parameters.\n     * Returns list of conversations filtered by parameters. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversationsReport(requestParameters: GetConversationsReportRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<MessageThreadsReport>>>;\n    /**\n     * Returns list of conversations filtered by parameters.\n     * Returns list of conversations filtered by parameters. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversationsReport(requestParameters: GetConversationsReportRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _clientId = requestParameters[\"clientId\"];\n        const _clientFullName = requestParameters[\"clientFullName\"];\n        const _category = requestParameters[\"category\"];\n        const _status = requestParameters[\"status\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_startDate !== undefined && _startDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_endDate, 'endDate');\n        }\n        if (_clientId !== undefined && _clientId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_clientId, 'clientId');\n        }\n        if (_clientFullName !== undefined && _clientFullName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_clientFullName, 'clientFullName');\n        }\n        if (_category !== undefined && _category !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_category, 'category');\n        }\n        if (_status !== undefined && _status !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_status, 'status');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<MessageThreadsReport>>(`${this.configuration.basePath}/client-api/v4/employee/conversations/report`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getConversationsReportUrl(requestParameters: GetConversationsReportRequestParams): string {\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _clientId = requestParameters[\"clientId\"];\n        const _clientFullName = requestParameters[\"clientFullName\"];\n        const _category = requestParameters[\"category\"];\n        const _status = requestParameters[\"status\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_startDate !== undefined && _startDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_endDate, 'endDate');\n        }\n        if (_clientId !== undefined && _clientId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_clientId, 'clientId');\n        }\n        if (_clientFullName !== undefined && _clientFullName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_clientFullName, 'clientFullName');\n        }\n        if (_category !== undefined && _category !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_category, 'category');\n        }\n        if (_status !== undefined && _status !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_status, 'status');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v4/employee/conversations/report${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Returns a message thread (conversation) by root message in conversation id.\n     * Returns a message thread (conversation) by root message in conversation id. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getEmployeeMessageThread(requestParameters: GetEmployeeMessageThreadRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ConversationsThread>;\n    /**\n     * Returns a message thread (conversation) by root message in conversation id.\n     * Returns a message thread (conversation) by root message in conversation id. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getEmployeeMessageThread(requestParameters: GetEmployeeMessageThreadRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ConversationsThread>>;\n    /**\n     * Returns a message thread (conversation) by root message in conversation id.\n     * Returns a message thread (conversation) by root message in conversation id. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getEmployeeMessageThread(requestParameters: GetEmployeeMessageThreadRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ConversationsThread>>;\n    /**\n     * Returns a message thread (conversation) by root message in conversation id.\n     * Returns a message thread (conversation) by root message in conversation id. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getEmployeeMessageThread(requestParameters: GetEmployeeMessageThreadRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _messageId = requestParameters[\"messageId\"];\n        if (_messageId === null || _messageId === undefined) {\n            throw new Error('Required parameter messageId was null or undefined when calling getEmployeeMessageThread.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ConversationsThread>(`${this.configuration.basePath}/client-api/v4/employee/messages/${encodeURIComponent(String(_messageId))}/conversation`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getEmployeeMessageThreadUrl(requestParameters: GetEmployeeMessageThreadRequestParams): string {\n        const _messageId = requestParameters[\"messageId\"];\n        if (_messageId === null || _messageId === undefined) {\n            throw new Error('Required parameter messageId was null or undefined when calling getEmployeeMessageThread.');\n        }\n        return `${this.configuration.basePath}/client-api/v4/employee/messages/${encodeURIComponent(String(_messageId))}/conversation`;\n    }\n\n    /**\n     * Returns message binary attachment.\n     * Returns message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageAttachmentEmployee(requestParameters: GetMessageAttachmentEmployeeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/octet-stream'}): Observable<Blob>;\n    /**\n     * Returns message binary attachment.\n     * Returns message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageAttachmentEmployee(requestParameters: GetMessageAttachmentEmployeeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/octet-stream'}): Observable<HttpResponse<Blob>>;\n    /**\n     * Returns message binary attachment.\n     * Returns message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageAttachmentEmployee(requestParameters: GetMessageAttachmentEmployeeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/octet-stream'}): Observable<HttpEvent<Blob>>;\n    /**\n     * Returns message binary attachment.\n     * Returns message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageAttachmentEmployee(requestParameters: GetMessageAttachmentEmployeeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Blob>;\n    /**\n     * Returns message binary attachment.\n     * Returns message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageAttachmentEmployee(requestParameters: GetMessageAttachmentEmployeeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Blob>>;\n    /**\n     * Returns message binary attachment.\n     * Returns message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageAttachmentEmployee(requestParameters: GetMessageAttachmentEmployeeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Blob>>;\n    /**\n     * Returns message binary attachment.\n     * Returns message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageAttachmentEmployee(requestParameters: GetMessageAttachmentEmployeeRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/octet-stream' | 'application/json'}): Observable<any> {\n        const _attachmentId = requestParameters[\"attachmentId\"];\n        if (_attachmentId === null || _attachmentId === undefined) {\n            throw new Error('Required parameter attachmentId was null or undefined when calling getMessageAttachmentEmployee.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/octet-stream',\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v4/employee/attachments/${encodeURIComponent(String(_attachmentId))}`,\n            {\n                responseType: \"blob\",\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getMessageAttachmentEmployeeUrl(requestParameters: GetMessageAttachmentEmployeeRequestParams): string {\n        const _attachmentId = requestParameters[\"attachmentId\"];\n        if (_attachmentId === null || _attachmentId === undefined) {\n            throw new Error('Required parameter attachmentId was null or undefined when calling getMessageAttachmentEmployee.');\n        }\n        return `${this.configuration.basePath}/client-api/v4/employee/attachments/${encodeURIComponent(String(_attachmentId))}`;\n    }\n\n    /**\n     * Returns a list of conversations available to employee and filtered by search parameteres.\n     * Returns a list of conversations available to employee and filtered by search parameteres. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSearchConversations(requestParameters: GetSearchConversationsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<EmployeeConversationThread>>;\n    /**\n     * Returns a list of conversations available to employee and filtered by search parameteres.\n     * Returns a list of conversations available to employee and filtered by search parameteres. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSearchConversations(requestParameters: GetSearchConversationsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<EmployeeConversationThread>>>;\n    /**\n     * Returns a list of conversations available to employee and filtered by search parameteres.\n     * Returns a list of conversations available to employee and filtered by search parameteres. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSearchConversations(requestParameters: GetSearchConversationsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<EmployeeConversationThread>>>;\n    /**\n     * Returns a list of conversations available to employee and filtered by search parameteres.\n     * Returns a list of conversations available to employee and filtered by search parameteres. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSearchConversations(requestParameters: GetSearchConversationsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _userId = requestParameters[\"userId\"];\n        const _topicId = requestParameters[\"topicId\"];\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_userId !== undefined && _userId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_userId, 'userId');\n        }\n        if (_topicId !== undefined && _topicId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_topicId, 'topicId');\n        }\n        if (_startDate !== undefined && _startDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_endDate, 'endDate');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<EmployeeConversationThread>>(`${this.configuration.basePath}/client-api/v4/employee/conversations/search`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getSearchConversationsUrl(requestParameters: GetSearchConversationsRequestParams): string {\n        const _userId = requestParameters[\"userId\"];\n        const _topicId = requestParameters[\"topicId\"];\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_userId !== undefined && _userId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_userId, 'userId');\n        }\n        if (_topicId !== undefined && _topicId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_topicId, 'topicId');\n        }\n        if (_startDate !== undefined && _startDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_endDate, 'endDate');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v4/employee/conversations/search${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Returns a list of subscriptions that are associated with the specified topic.\n     * Returns a list of subscriptions that are associated with the specified topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSubscriptions(requestParameters: GetSubscriptionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<SubscriptionsGetResponseBody>>;\n    /**\n     * Returns a list of subscriptions that are associated with the specified topic.\n     * Returns a list of subscriptions that are associated with the specified topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSubscriptions(requestParameters: GetSubscriptionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<SubscriptionsGetResponseBody>>>;\n    /**\n     * Returns a list of subscriptions that are associated with the specified topic.\n     * Returns a list of subscriptions that are associated with the specified topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSubscriptions(requestParameters: GetSubscriptionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<SubscriptionsGetResponseBody>>>;\n    /**\n     * Returns a list of subscriptions that are associated with the specified topic.\n     * Returns a list of subscriptions that are associated with the specified topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSubscriptions(requestParameters: GetSubscriptionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _topicId = requestParameters[\"topicId\"];\n        if (_topicId === null || _topicId === undefined) {\n            throw new Error('Required parameter topicId was null or undefined when calling getSubscriptions.');\n        }\n        const _subscriberName = requestParameters[\"subscriberName\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_subscriberName !== undefined && _subscriberName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_subscriberName, 'subscriberName');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<SubscriptionsGetResponseBody>>(`${this.configuration.basePath}/client-api/v4/employee/topics/${encodeURIComponent(String(_topicId))}/subscriptions`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getSubscriptionsUrl(requestParameters: GetSubscriptionsRequestParams): string {\n        const _topicId = requestParameters[\"topicId\"];\n        if (_topicId === null || _topicId === undefined) {\n            throw new Error('Required parameter topicId was null or undefined when calling getSubscriptions.');\n        }\n        const _subscriberName = requestParameters[\"subscriberName\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_subscriberName !== undefined && _subscriberName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_subscriberName, 'subscriberName');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v4/employee/topics/${encodeURIComponent(String(_topicId))}/subscriptions${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Returns a topic with the given id.\n     * Returns a topic with the given id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTopic(requestParameters: GetTopicRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<TopicGetResponseBody>;\n    /**\n     * Returns a topic with the given id.\n     * Returns a topic with the given id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTopic(requestParameters: GetTopicRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<TopicGetResponseBody>>;\n    /**\n     * Returns a topic with the given id.\n     * Returns a topic with the given id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTopic(requestParameters: GetTopicRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<TopicGetResponseBody>>;\n    /**\n     * Returns a topic with the given id.\n     * Returns a topic with the given id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTopic(requestParameters: GetTopicRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _topicId = requestParameters[\"topicId\"];\n        if (_topicId === null || _topicId === undefined) {\n            throw new Error('Required parameter topicId was null or undefined when calling getTopic.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<TopicGetResponseBody>(`${this.configuration.basePath}/client-api/v4/employee/topics/${encodeURIComponent(String(_topicId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getTopicUrl(requestParameters: GetTopicRequestParams): string {\n        const _topicId = requestParameters[\"topicId\"];\n        if (_topicId === null || _topicId === undefined) {\n            throw new Error('Required parameter topicId was null or undefined when calling getTopic.');\n        }\n        return `${this.configuration.basePath}/client-api/v4/employee/topics/${encodeURIComponent(String(_topicId))}`;\n    }\n\n    /**\n     * Returns a list of available topics. Each topic is associated with a list of subscribers. Selection of a topic.\n     * Returns a list of available topics. Each topic is associated with a list of subscribers. Selection of a topic determines a target destination of a message as well. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTopicsEmployee(requestParameters: GetTopicsEmployeeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<TopicsGetEmployeeResponseBody>>;\n    /**\n     * Returns a list of available topics. Each topic is associated with a list of subscribers. Selection of a topic.\n     * Returns a list of available topics. Each topic is associated with a list of subscribers. Selection of a topic determines a target destination of a message as well. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTopicsEmployee(requestParameters: GetTopicsEmployeeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<TopicsGetEmployeeResponseBody>>>;\n    /**\n     * Returns a list of available topics. Each topic is associated with a list of subscribers. Selection of a topic.\n     * Returns a list of available topics. Each topic is associated with a list of subscribers. Selection of a topic determines a target destination of a message as well. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTopicsEmployee(requestParameters: GetTopicsEmployeeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<TopicsGetEmployeeResponseBody>>>;\n    /**\n     * Returns a list of available topics. Each topic is associated with a list of subscribers. Selection of a topic.\n     * Returns a list of available topics. Each topic is associated with a list of subscribers. Selection of a topic determines a target destination of a message as well. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTopicsEmployee(requestParameters: GetTopicsEmployeeRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _subscribed = requestParameters[\"subscribed\"];\n        const _deleted = requestParameters[\"deleted\"];\n        const _topicType = requestParameters[\"topicType\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_subscribed !== undefined && _subscribed !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_subscribed, 'subscribed');\n        }\n        if (_deleted !== undefined && _deleted !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_deleted, 'deleted');\n        }\n        if (_topicType !== undefined && _topicType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_topicType, 'topicType');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<TopicsGetEmployeeResponseBody>>(`${this.configuration.basePath}/client-api/v4/employee/topics`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getTopicsEmployeeUrl(requestParameters: GetTopicsEmployeeRequestParams): string {\n        const _subscribed = requestParameters[\"subscribed\"];\n        const _deleted = requestParameters[\"deleted\"];\n        const _topicType = requestParameters[\"topicType\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_subscribed !== undefined && _subscribed !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_subscribed, 'subscribed');\n        }\n        if (_deleted !== undefined && _deleted !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_deleted, 'deleted');\n        }\n        if (_topicType !== undefined && _topicType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_topicType, 'topicType');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v4/employee/topics${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Uploads message binary attachment.\n     * Uploads message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageAttachmentsEmployee(requestParameters: PostMessageAttachmentsEmployeeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Metadata>;\n    /**\n     * Uploads message binary attachment.\n     * Uploads message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageAttachmentsEmployee(requestParameters: PostMessageAttachmentsEmployeeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Metadata>>;\n    /**\n     * Uploads message binary attachment.\n     * Uploads message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageAttachmentsEmployee(requestParameters: PostMessageAttachmentsEmployeeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Metadata>>;\n    /**\n     * Uploads message binary attachment.\n     * Uploads message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageAttachmentsEmployee(requestParameters: PostMessageAttachmentsEmployeeRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _attachment = requestParameters[\"attachment\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'multipart/form-data'\n        ];\n\n        const canConsumeForm = this.canConsumeForm(consumes);\n\n        let formParams: { append(param: string, value: any): any; };\n        let useForm = false;\n        let convertFormParamsToString = false;\n        // use FormData to transmit files using content-type \"multipart/form-data\"\n        // see https://stackoverflow.com/questions/4007969/application-x-www-form-urlencoded-or-multipart-form-data\n        useForm = canConsumeForm;\n        if (useForm) {\n            formParams = new FormData();\n        } else {\n            formParams = new HttpParams({encoder: this.encoder});\n        }\n\n        if (_attachment !== undefined) {\n            formParams = formParams.append('attachment', <any>_attachment) as any || formParams;\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<Metadata>(`${this.configuration.basePath}/client-api/v4/employee/attachments`,\n            convertFormParamsToString ? formParams.toString() : formParams,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postMessageAttachmentsEmployeeUrl(requestParameters: PostMessageAttachmentsEmployeeRequestParams): string {\n        const _attachment = requestParameters[\"attachment\"];\n        return `${this.configuration.basePath}/client-api/v4/employee/attachments`;\n    }\n\n    /**\n     * Send a reply message within message thread/conversation.\n     * Send a reply message within message thread/conversation\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageReplyEmployee(requestParameters: PostMessageReplyEmployeeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationMessagePostResponseBody>;\n    /**\n     * Send a reply message within message thread/conversation.\n     * Send a reply message within message thread/conversation\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageReplyEmployee(requestParameters: PostMessageReplyEmployeeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationMessagePostResponseBody>>;\n    /**\n     * Send a reply message within message thread/conversation.\n     * Send a reply message within message thread/conversation\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageReplyEmployee(requestParameters: PostMessageReplyEmployeeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationMessagePostResponseBody>>;\n    /**\n     * Send a reply message within message thread/conversation.\n     * Send a reply message within message thread/conversation\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageReplyEmployee(requestParameters: PostMessageReplyEmployeeRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _messageId = requestParameters[\"messageId\"];\n        if (_messageId === null || _messageId === undefined) {\n            throw new Error('Required parameter messageId was null or undefined when calling postMessageReplyEmployee.');\n        }\n        const _messageReplyPostRequestBody = requestParameters[\"messageReplyPostRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<PresentationMessagePostResponseBody>(`${this.configuration.basePath}/client-api/v4/employee/messages/${encodeURIComponent(String(_messageId))}/reply`,\n            _messageReplyPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postMessageReplyEmployeeUrl(requestParameters: PostMessageReplyEmployeeRequestParams): string {\n        const _messageId = requestParameters[\"messageId\"];\n        if (_messageId === null || _messageId === undefined) {\n            throw new Error('Required parameter messageId was null or undefined when calling postMessageReplyEmployee.');\n        }\n        const _messageReplyPostRequestBody = requestParameters[\"messageReplyPostRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/employee/messages/${encodeURIComponent(String(_messageId))}/reply`;\n    }\n\n    /**\n     * Create a root message of a conversation. Recipient is required.\n     * Create a root message of a conversation. Recipient is required.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessagesEmployee(requestParameters: PostMessagesEmployeeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationMessagePostResponseBody>;\n    /**\n     * Create a root message of a conversation. Recipient is required.\n     * Create a root message of a conversation. Recipient is required.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessagesEmployee(requestParameters: PostMessagesEmployeeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationMessagePostResponseBody>>;\n    /**\n     * Create a root message of a conversation. Recipient is required.\n     * Create a root message of a conversation. Recipient is required.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessagesEmployee(requestParameters: PostMessagesEmployeeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationMessagePostResponseBody>>;\n    /**\n     * Create a root message of a conversation. Recipient is required.\n     * Create a root message of a conversation. Recipient is required.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessagesEmployee(requestParameters: PostMessagesEmployeeRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _presentationMessageEmployeePostRequestBody = requestParameters[\"presentationMessageEmployeePostRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<PresentationMessagePostResponseBody>(`${this.configuration.basePath}/client-api/v4/employee/messages`,\n            _presentationMessageEmployeePostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postMessagesEmployeeUrl(requestParameters: PostMessagesEmployeeRequestParams): string {\n        const _presentationMessageEmployeePostRequestBody = requestParameters[\"presentationMessageEmployeePostRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/employee/messages`;\n    }\n\n    /**\n     * Check if users are subscribed to the topic.\n     * Check if users are subscribed to the topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postSubscribers(requestParameters: PostSubscribersRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<SubscribersPostResponseBody>>;\n    /**\n     * Check if users are subscribed to the topic.\n     * Check if users are subscribed to the topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postSubscribers(requestParameters: PostSubscribersRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<SubscribersPostResponseBody>>>;\n    /**\n     * Check if users are subscribed to the topic.\n     * Check if users are subscribed to the topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postSubscribers(requestParameters: PostSubscribersRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<SubscribersPostResponseBody>>>;\n    /**\n     * Check if users are subscribed to the topic.\n     * Check if users are subscribed to the topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postSubscribers(requestParameters: PostSubscribersRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _topicId = requestParameters[\"topicId\"];\n        if (_topicId === null || _topicId === undefined) {\n            throw new Error('Required parameter topicId was null or undefined when calling postSubscribers.');\n        }\n        const _subscribersPostRequestBody = requestParameters[\"subscribersPostRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<Array<SubscribersPostResponseBody>>(`${this.configuration.basePath}/client-api/v4/employee/topics/${encodeURIComponent(String(_topicId))}/subscribers`,\n            _subscribersPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postSubscribersUrl(requestParameters: PostSubscribersRequestParams): string {\n        const _topicId = requestParameters[\"topicId\"];\n        if (_topicId === null || _topicId === undefined) {\n            throw new Error('Required parameter topicId was null or undefined when calling postSubscribers.');\n        }\n        const _subscribersPostRequestBody = requestParameters[\"subscribersPostRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/employee/topics/${encodeURIComponent(String(_topicId))}/subscribers`;\n    }\n\n    /**\n     * Adds a new subscription to the given topic.\n     * Adds a new subscription to the given topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postSubscriptions(requestParameters: PostSubscriptionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<SubscriptionsPostResponseBody>;\n    /**\n     * Adds a new subscription to the given topic.\n     * Adds a new subscription to the given topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postSubscriptions(requestParameters: PostSubscriptionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<SubscriptionsPostResponseBody>>;\n    /**\n     * Adds a new subscription to the given topic.\n     * Adds a new subscription to the given topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postSubscriptions(requestParameters: PostSubscriptionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<SubscriptionsPostResponseBody>>;\n    /**\n     * Adds a new subscription to the given topic.\n     * Adds a new subscription to the given topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postSubscriptions(requestParameters: PostSubscriptionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _topicId = requestParameters[\"topicId\"];\n        if (_topicId === null || _topicId === undefined) {\n            throw new Error('Required parameter topicId was null or undefined when calling postSubscriptions.');\n        }\n        const _subscriptionsPostRequestBody = requestParameters[\"subscriptionsPostRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<SubscriptionsPostResponseBody>(`${this.configuration.basePath}/client-api/v4/employee/topics/${encodeURIComponent(String(_topicId))}/subscriptions`,\n            _subscriptionsPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postSubscriptionsUrl(requestParameters: PostSubscriptionsRequestParams): string {\n        const _topicId = requestParameters[\"topicId\"];\n        if (_topicId === null || _topicId === undefined) {\n            throw new Error('Required parameter topicId was null or undefined when calling postSubscriptions.');\n        }\n        const _subscriptionsPostRequestBody = requestParameters[\"subscriptionsPostRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/employee/topics/${encodeURIComponent(String(_topicId))}/subscriptions`;\n    }\n\n    /**\n     * Creates a new topic.\n     * Creates a new topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postTopics(requestParameters: PostTopicsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ExtendedTopicsPostResponseBody>;\n    /**\n     * Creates a new topic.\n     * Creates a new topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postTopics(requestParameters: PostTopicsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ExtendedTopicsPostResponseBody>>;\n    /**\n     * Creates a new topic.\n     * Creates a new topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postTopics(requestParameters: PostTopicsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ExtendedTopicsPostResponseBody>>;\n    /**\n     * Creates a new topic.\n     * Creates a new topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postTopics(requestParameters: PostTopicsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _topicsPostRequestBody = requestParameters[\"topicsPostRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<ExtendedTopicsPostResponseBody>(`${this.configuration.basePath}/client-api/v4/employee/topics`,\n            _topicsPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postTopicsUrl(requestParameters: PostTopicsRequestParams): string {\n        const _topicsPostRequestBody = requestParameters[\"topicsPostRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/employee/topics`;\n    }\n\n    /**\n     * Assigns message thread/conversation to bank employee with given internal user id.\n     * Assigns message thread/conversation to bank employee with given internal user id. Assignment to other employees only possible for users with supervisor permission. User with manager permission can assign thread/conversation only to himself. If given internal user id is empty, message thread is assigned to caller internal user id. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putAssignConversation(requestParameters: PutAssignConversationRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<MessageThreadAssignmentResponseBody>;\n    /**\n     * Assigns message thread/conversation to bank employee with given internal user id.\n     * Assigns message thread/conversation to bank employee with given internal user id. Assignment to other employees only possible for users with supervisor permission. User with manager permission can assign thread/conversation only to himself. If given internal user id is empty, message thread is assigned to caller internal user id. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putAssignConversation(requestParameters: PutAssignConversationRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<MessageThreadAssignmentResponseBody>>;\n    /**\n     * Assigns message thread/conversation to bank employee with given internal user id.\n     * Assigns message thread/conversation to bank employee with given internal user id. Assignment to other employees only possible for users with supervisor permission. User with manager permission can assign thread/conversation only to himself. If given internal user id is empty, message thread is assigned to caller internal user id. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putAssignConversation(requestParameters: PutAssignConversationRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<MessageThreadAssignmentResponseBody>>;\n    /**\n     * Assigns message thread/conversation to bank employee with given internal user id.\n     * Assigns message thread/conversation to bank employee with given internal user id. Assignment to other employees only possible for users with supervisor permission. User with manager permission can assign thread/conversation only to himself. If given internal user id is empty, message thread is assigned to caller internal user id. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putAssignConversation(requestParameters: PutAssignConversationRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _messageId = requestParameters[\"messageId\"];\n        if (_messageId === null || _messageId === undefined) {\n            throw new Error('Required parameter messageId was null or undefined when calling putAssignConversation.');\n        }\n        const _messageThreadAssignmentRequestBody = requestParameters[\"messageThreadAssignmentRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<MessageThreadAssignmentResponseBody>(`${this.configuration.basePath}/client-api/v4/employee/messages/${encodeURIComponent(String(_messageId))}/assign`,\n            _messageThreadAssignmentRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putAssignConversationUrl(requestParameters: PutAssignConversationRequestParams): string {\n        const _messageId = requestParameters[\"messageId\"];\n        if (_messageId === null || _messageId === undefined) {\n            throw new Error('Required parameter messageId was null or undefined when calling putAssignConversation.');\n        }\n        const _messageThreadAssignmentRequestBody = requestParameters[\"messageThreadAssignmentRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/employee/messages/${encodeURIComponent(String(_messageId))}/assign`;\n    }\n\n    /**\n     * Assigns multiple message threads/conversations to bank employee with given internal user id.\n     * Assigns multiple message threads/conversations to bank employee with given internal user id. Assignment to other employees only possible for users with supervisor permission. User with manager permission can assign threads/conversations only to himself. If given internal user id is empty, message threads is assigned to caller internal user id. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putConversationAssignment(requestParameters: PutConversationAssignmentRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<MessageThreadBulkAssignmentResponseBody>;\n    /**\n     * Assigns multiple message threads/conversations to bank employee with given internal user id.\n     * Assigns multiple message threads/conversations to bank employee with given internal user id. Assignment to other employees only possible for users with supervisor permission. User with manager permission can assign threads/conversations only to himself. If given internal user id is empty, message threads is assigned to caller internal user id. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putConversationAssignment(requestParameters: PutConversationAssignmentRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<MessageThreadBulkAssignmentResponseBody>>;\n    /**\n     * Assigns multiple message threads/conversations to bank employee with given internal user id.\n     * Assigns multiple message threads/conversations to bank employee with given internal user id. Assignment to other employees only possible for users with supervisor permission. User with manager permission can assign threads/conversations only to himself. If given internal user id is empty, message threads is assigned to caller internal user id. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putConversationAssignment(requestParameters: PutConversationAssignmentRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<MessageThreadBulkAssignmentResponseBody>>;\n    /**\n     * Assigns multiple message threads/conversations to bank employee with given internal user id.\n     * Assigns multiple message threads/conversations to bank employee with given internal user id. Assignment to other employees only possible for users with supervisor permission. User with manager permission can assign threads/conversations only to himself. If given internal user id is empty, message threads is assigned to caller internal user id. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putConversationAssignment(requestParameters: PutConversationAssignmentRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _messageThreadBulkAssignmentRequestBody = requestParameters[\"messageThreadBulkAssignmentRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<MessageThreadBulkAssignmentResponseBody>(`${this.configuration.basePath}/client-api/v4/employee/messages/assignment`,\n            _messageThreadBulkAssignmentRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putConversationAssignmentUrl(requestParameters: PutConversationAssignmentRequestParams): string {\n        const _messageThreadBulkAssignmentRequestBody = requestParameters[\"messageThreadBulkAssignmentRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/employee/messages/assignment`;\n    }\n\n    /**\n     * Sets message thread/conversation resolution.\n     * Sets message thread/conversation resolution.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putConversationResolution(requestParameters: PutConversationResolutionRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<MessageThreadResolutionResponseBody>;\n    /**\n     * Sets message thread/conversation resolution.\n     * Sets message thread/conversation resolution.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putConversationResolution(requestParameters: PutConversationResolutionRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<MessageThreadResolutionResponseBody>>;\n    /**\n     * Sets message thread/conversation resolution.\n     * Sets message thread/conversation resolution.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putConversationResolution(requestParameters: PutConversationResolutionRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<MessageThreadResolutionResponseBody>>;\n    /**\n     * Sets message thread/conversation resolution.\n     * Sets message thread/conversation resolution.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putConversationResolution(requestParameters: PutConversationResolutionRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _messageId = requestParameters[\"messageId\"];\n        if (_messageId === null || _messageId === undefined) {\n            throw new Error('Required parameter messageId was null or undefined when calling putConversationResolution.');\n        }\n        const _messageThreadResolutionRequestBody = requestParameters[\"messageThreadResolutionRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<MessageThreadResolutionResponseBody>(`${this.configuration.basePath}/client-api/v4/employee/messages/${encodeURIComponent(String(_messageId))}/resolution`,\n            _messageThreadResolutionRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putConversationResolutionUrl(requestParameters: PutConversationResolutionRequestParams): string {\n        const _messageId = requestParameters[\"messageId\"];\n        if (_messageId === null || _messageId === undefined) {\n            throw new Error('Required parameter messageId was null or undefined when calling putConversationResolution.');\n        }\n        const _messageThreadResolutionRequestBody = requestParameters[\"messageThreadResolutionRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/employee/messages/${encodeURIComponent(String(_messageId))}/resolution`;\n    }\n\n    /**\n     * Sets message threads/conversations resolution.\n     * Sets message threads/conversations resolution.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putConversationResolutionEmployee(requestParameters: PutConversationResolutionEmployeeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<MessageThreadBulkResolutionResponseBody>;\n    /**\n     * Sets message threads/conversations resolution.\n     * Sets message threads/conversations resolution.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putConversationResolutionEmployee(requestParameters: PutConversationResolutionEmployeeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<MessageThreadBulkResolutionResponseBody>>;\n    /**\n     * Sets message threads/conversations resolution.\n     * Sets message threads/conversations resolution.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putConversationResolutionEmployee(requestParameters: PutConversationResolutionEmployeeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<MessageThreadBulkResolutionResponseBody>>;\n    /**\n     * Sets message threads/conversations resolution.\n     * Sets message threads/conversations resolution.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putConversationResolutionEmployee(requestParameters: PutConversationResolutionEmployeeRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _messageThreadBulkResolutionRequestBody = requestParameters[\"messageThreadBulkResolutionRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<MessageThreadBulkResolutionResponseBody>(`${this.configuration.basePath}/client-api/v4/employee/messages/resolution`,\n            _messageThreadBulkResolutionRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putConversationResolutionEmployeeUrl(requestParameters: PutConversationResolutionEmployeeRequestParams): string {\n        const _messageThreadBulkResolutionRequestBody = requestParameters[\"messageThreadBulkResolutionRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/employee/messages/resolution`;\n    }\n\n    /**\n     * Mark assigned to the employee conversations as read or unread.\n     * Mark assigned to the employee conversations as read or unread.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMarkAsReadUnreadEmployee(requestParameters: PutMarkAsReadUnreadEmployeeRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<MarkAsReadUnreadPutResponseBody>;\n    /**\n     * Mark assigned to the employee conversations as read or unread.\n     * Mark assigned to the employee conversations as read or unread.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMarkAsReadUnreadEmployee(requestParameters: PutMarkAsReadUnreadEmployeeRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<MarkAsReadUnreadPutResponseBody>>;\n    /**\n     * Mark assigned to the employee conversations as read or unread.\n     * Mark assigned to the employee conversations as read or unread.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMarkAsReadUnreadEmployee(requestParameters: PutMarkAsReadUnreadEmployeeRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<MarkAsReadUnreadPutResponseBody>>;\n    /**\n     * Mark assigned to the employee conversations as read or unread.\n     * Mark assigned to the employee conversations as read or unread.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMarkAsReadUnreadEmployee(requestParameters: PutMarkAsReadUnreadEmployeeRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _markAsReadUnreadPutRequestBody = requestParameters[\"markAsReadUnreadPutRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<MarkAsReadUnreadPutResponseBody>(`${this.configuration.basePath}/client-api/v4/employee/conversations/read`,\n            _markAsReadUnreadPutRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putMarkAsReadUnreadEmployeeUrl(requestParameters: PutMarkAsReadUnreadEmployeeRequestParams): string {\n        const _markAsReadUnreadPutRequestBody = requestParameters[\"markAsReadUnreadPutRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/employee/conversations/read`;\n    }\n\n    /**\n     * Puts message thread topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMessageThreadTopic(requestParameters: PutMessageThreadTopicRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Puts message thread topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMessageThreadTopic(requestParameters: PutMessageThreadTopicRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Puts message thread topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMessageThreadTopic(requestParameters: PutMessageThreadTopicRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Puts message thread topic\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMessageThreadTopic(requestParameters: PutMessageThreadTopicRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _messageId = requestParameters[\"messageId\"];\n        if (_messageId === null || _messageId === undefined) {\n            throw new Error('Required parameter messageId was null or undefined when calling putMessageThreadTopic.');\n        }\n        const _updateMessageTopicRequestBody = requestParameters[\"updateMessageTopicRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v4/employee/messages/${encodeURIComponent(String(_messageId))}/topic`,\n            _updateMessageTopicRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putMessageThreadTopicUrl(requestParameters: PutMessageThreadTopicRequestParams): string {\n        const _messageId = requestParameters[\"messageId\"];\n        if (_messageId === null || _messageId === undefined) {\n            throw new Error('Required parameter messageId was null or undefined when calling putMessageThreadTopic.');\n        }\n        const _updateMessageTopicRequestBody = requestParameters[\"updateMessageTopicRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/employee/messages/${encodeURIComponent(String(_messageId))}/topic`;\n    }\n\n    /**\n     * Updates a topic with the given id.\n     * Updates a topic with the given id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putTopic(requestParameters: PutTopicRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<TopicPutResponseBody>;\n    /**\n     * Updates a topic with the given id.\n     * Updates a topic with the given id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putTopic(requestParameters: PutTopicRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<TopicPutResponseBody>>;\n    /**\n     * Updates a topic with the given id.\n     * Updates a topic with the given id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putTopic(requestParameters: PutTopicRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<TopicPutResponseBody>>;\n    /**\n     * Updates a topic with the given id.\n     * Updates a topic with the given id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putTopic(requestParameters: PutTopicRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _topicId = requestParameters[\"topicId\"];\n        if (_topicId === null || _topicId === undefined) {\n            throw new Error('Required parameter topicId was null or undefined when calling putTopic.');\n        }\n        const _xBBSVCRequestId = requestParameters[\"xBBSVCRequestId\"];\n        const _topicPutRequestBody = requestParameters[\"topicPutRequestBody\"];\n\n        let headers = this.defaultHeaders;\n        if (_xBBSVCRequestId !== undefined && _xBBSVCRequestId !== null) {\n            headers = headers.set('X-BBSVC-Request-Id', String(_xBBSVCRequestId));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<TopicPutResponseBody>(`${this.configuration.basePath}/client-api/v4/employee/topics/${encodeURIComponent(String(_topicId))}`,\n            _topicPutRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putTopicUrl(requestParameters: PutTopicRequestParams): string {\n        const _topicId = requestParameters[\"topicId\"];\n        if (_topicId === null || _topicId === undefined) {\n            throw new Error('Required parameter topicId was null or undefined when calling putTopic.');\n        }\n        const _xBBSVCRequestId = requestParameters[\"xBBSVCRequestId\"];\n        const _topicPutRequestBody = requestParameters[\"topicPutRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/employee/topics/${encodeURIComponent(String(_topicId))}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v4/employee/messages/assignment URL pattern\n*/\nexport const EmployeeHttpServiceDeleteConversationAssignmentMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/messages/assignment\",\n        method: \"DELETE\",\n        responses: [\n                {\n                    status: 202,\n                    body: {\n  \"failedItems\" : [ \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\" ],\n  \"unassignedItems\" : [ \"e92bbe7d-10cf-4d7c-b7b5-eadb7632812a\", \"58ee5037-8dce-43ab-b734-e2b90a189b81\" ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/attachments URL pattern\n*/\nexport const EmployeeHttpServiceDeleteMessageAttachmentsEmployeeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/attachments\",\n        method: \"DELETE\",\n        responses: [\n                {\n                    status: 202,\n                    body: {\n  \"deleted\" : [ \"deleted\", \"deleted\" ],\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"failed\" : [ \"failed\", \"failed\" ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/topics/{topicId}/subscriptions/{subscriptionId} URL pattern\n*/\nexport const EmployeeHttpServiceDeleteSubscriptionMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/topics/{topicId}/subscriptions/{subscriptionId}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                    status: 202,\n                    body: { }\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/topics/{topicId} URL pattern\n*/\nexport const EmployeeHttpServiceDeleteTopicMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/topics/{topicId}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                    status: 200,\n                    body: { }\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/conversations URL pattern\n*/\nexport const EmployeeHttpServiceGetConversationThreadsEmployeeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/conversations\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"assignee\" : {\n    \"fullName\" : \"John Snow\",\n    \"internalId\" : \"1234-5678-9012-3456\",\n    \"isRequester\" : true\n  },\n  \"body\" : \"VG8gZ2l2ZSByZWFsIHNlcnZpY2UgeW91IG11c3QgYWRkIHNvbWV0aGluZyB3aGljaCBjYW5ub3QgYmUgYm91Z2h0IG9yIG1lYXN1cmVkIHdpdGggbW9uZXksIGFuZCB0aGF0IGlzIHNpbmNlcml0eSBhbmQgaW50ZWdyaXR5Cg==\",\n  \"client\" : {\n    \"fullName\" : \"John Doe\",\n    \"internalId\" : \"97234tyi23rfiy325r3i7r\"\n  },\n  \"deletable\" : true,\n  \"hasAttachments\" : true,\n  \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\",\n  \"important\" : false,\n  \"read\" : false,\n  \"read-only\" : false,\n  \"sender\" : {\n    \"deleted\" : false,\n    \"id\" : \"97234tyi23rfiy325r3i7r\",\n    \"name\" : \"John Doe\"\n  },\n  \"subject\" : \"Application Rejected\",\n  \"timestamp\" : \"2017-10-02T10:51:30.275+0000\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n    \"name\" : \"Savings\"\n  }\n}, {\n  \"assignee\" : {\n    \"fullName\" : \"Ned Stark\",\n    \"internalId\" : \"0987-6543-2109-8765\",\n    \"isRequester\" : false\n  },\n  \"body\" : \"VG8gZ2l2ZSByZWFsIHNlcnZpY2UgeW91IG11c3QgYWRkIHNvbWV0aGluZyB3aGljaCBjYW5ub3QgYmUgYm91Z2h0IG9yIG1lYXN1cmVkIHdpdGggbW9uZXksIGFuZCB0aGF0IGlzIHNpbmNlcml0eSBhbmQgaW50ZWdyaXR5Cg==\",\n  \"client\" : {\n    \"fullName\" : \"John Doe\",\n    \"internalId\" : \"97234tyi23rfiy325r3i7r\"\n  },\n  \"deletable\" : true,\n  \"hasAttachments\" : false,\n  \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\",\n  \"important\" : false,\n  \"read\" : true,\n  \"read-only\" : false,\n  \"sender\" : {\n    \"deleted\" : false,\n    \"id\" : \"97234tyi23rfiy325r3i8o\",\n    \"name\" : \"John Snow\"\n  },\n  \"subject\" : \"Loan Rejected\",\n  \"timestamp\" : \"2019-01-02T10:51:30.000+0000\",\n  \"topic\" : {\n    \"deleted\" : true,\n    \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064b7\",\n    \"name\" : \"Loan rejected\"\n  }\n}, {\n  \"assignee\" : {\n    \"fullName\" : \"John Snow\",\n    \"internalId\" : \"1234-5678-9012-3456\",\n    \"isRequester\" : true\n  },\n  \"body\" : \"VG8gZ2l2ZSByZWFsIHNlcnZpY2UgeW91IG11c3QgYWRkIHNvbWV0aGluZyB3aGljaCBjYW5ub3QgYmUgYm91Z2h0IG9yIG1lYXN1cmVkIHdpdGggbW9uZXksIGFuZCB0aGF0IGlzIHNpbmNlcml0eSBhbmQgaW50ZWdyaXR5Cg==\",\n  \"client\" : {\n    \"fullName\" : \"John Doe\",\n    \"internalId\" : \"97234tyi23rfiy325r3i7r\"\n  },\n  \"deletable\" : true,\n  \"hasAttachments\" : false,\n  \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\",\n  \"important\" : true,\n  \"read\" : false,\n  \"read-only\" : false,\n  \"sender\" : {\n    \"deleted\" : false,\n    \"id\" : \"97234tyi23rfiy325r3i7r\",\n    \"name\" : \"John Doe\"\n  },\n  \"subject\" : \"Important Application\",\n  \"timestamp\" : \"2017-10-02T10:51:30.000+0000\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n    \"name\" : \"Savings\"\n  }\n} ]\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/conversations/counters URL pattern\n*/\nexport const EmployeeHttpServiceGetConversationsCounterMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/conversations/counters\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"unassigned\" : 2,\n  \"unreadAssigned\" : 5\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/conversations/report URL pattern\n*/\nexport const EmployeeHttpServiceGetConversationsReportMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/conversations/report\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"clientUserFullName\" : \"Ned Stark\",\n  \"clientUserId\" : \"417a289c-5011-4dbc-a3ee-c00ed914f5fe\",\n  \"rootMessageSentDate\" : \"2021-09-28T12:47:40.000+0000\",\n  \"lastMessageSentDate\" : \"2021-09-29T13:50:40.000+0000\",\n  \"status\" : \"NEW\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"8e368e8f-f99c-4edb-8edb-b935b97faa60\",\n    \"name\" : \"Living social deals\"\n  },\n  \"subject\" : \"Important Application\",\n  \"bankAssigneeId\" : \"43ca9de8-ac20-43bd-9c7d-bfa9e4ce16f8\",\n  \"bankAssigneeFullName\" : \"John Snow\"\n}, {\n  \"clientUserFullName\" : \"Robert Johnson\",\n  \"clientUserId\" : \"417a289c-5011-4dbc-a3ee-c00ed914f5fe\",\n  \"rootMessageSentDate\" : \"2021-10-11T18:24:17.000+0000\",\n  \"lastMessageSentDate\" : \"2021-10-11T20:27:19.000+0000\",\n  \"status\" : \"IN_PROGRESS\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"96aeb836-d5c1-4303-826c-5424012ba09f\",\n    \"name\" : \"Prize\"\n  },\n  \"subject\" : \"Vacation on Mars\",\n  \"bankAssigneeId\" : \"bc32371a-2c5a-4fd9-b78e-ffe5c95e1a42\",\n  \"bankAssigneeFullName\" : \"Maria Flores\"\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/messages/{messageId}/conversation URL pattern\n*/\nexport const EmployeeHttpServiceGetEmployeeMessageThreadMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/messages/{messageId}/conversation\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"assignee\" : {\n    \"fullName\" : \"John Snow\",\n    \"internalId\" : \"1234-5678-9012-3456\",\n    \"isRequester\" : true\n  },\n  \"attachments\" : [ {\n    \"createdAt\" : \"2017-10-02T10:51:50.000+0000\",\n    \"filename\" : \"message-attachment-filename.pdf\",\n    \"id\" : \"5d869ea0-d3a3-4b83-888f-767bdcdcd565\",\n    \"size\" : 2592836\n  }, {\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"filename\" : \"another-message-attachment-filename.pdf\",\n    \"id\" : \"ae4658a4-073c-4d8b-ab5d-55e9238d3ff0\",\n    \"size\" : 15982836\n  } ],\n  \"deletable\" : true,\n  \"important\" : true,\n  \"messages\" : [ {\n    \"body\" : \"VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+\",\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\",\n    \"isMyMessage\" : true,\n    \"sender\" : {\n      \"id\" : \"97234tyi23rfiy325r3i7r\",\n      \"name\" : \"John Doe\"\n    }\n  }, {\n    \"body\" : \"PGRpdj48b2w+PGxpPkNhc3RsZXMgaW4gR3JlYXQgQnJpdGFpbiBhbmQgSXJlbGFuZDxicj48L2xpPjxsaT5MaXN0IG9mIGNhc3RsZXMgaW4gV2FsZXM8YnI+PC9saT48bGk+TGlzdCBvZiBnYXJkZW5zIGluIFdhbGVzPGJyPjwvbGk+PC9vbD48L2Rpdj4=\",\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e1\",\n    \"isMyMessage\" : false,\n    \"sender\" : {\n      \"id\" : \"97234tyi23rfiy325r3i72\",\n      \"name\" : \"John Doe 2\"\n    }\n  }, {\n    \"attachments\" : [ {\n      \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n      \"filename\" : \"another-message-attachment-filename.pdf\",\n      \"id\" : \"ae4658a4-073c-4d8b-ab5d-55e9238d3ff0\",\n      \"size\" : 15982836\n    } ],\n    \"body\" : \"PGRpdj48b2w+PGxpPiA8Yj4iQ2hpcmsgQ2FzdGxlLCBDaGlyayI8L2I+LiBCcml0aXNoIExpc3RlZCBidWlsZGluZ3MuIFJldHJpZXZlZCAyMyBKdWx5IDIwMTUuPGJyPjwvbGk+PGxpPiA8Yj4iQ2hpcmsgQ2FzdGxlIOKAkyBPZmZpY2lhbCBHdWlkZWJvb2siLjwvYj4gQ2FzdGxlIFdhbGVzLjxicj48L2xpPjxsaT4gPGI+IkNoaXJrIENhc3RsZSIuPC9iPiBOYXRpb25hbCBUcnVzdC48YnI+PC9saT48bGk+IDxiPiJUaGUgT2FrIGF0IHRoZSBHYXRlIG9mIHRoZSBEZWFkIjwvYj4uIFBlb3BsZSdzIENvbGxlY3Rpb24gV2FsZXMuIFJldHJpZXZlZCAxIE1hcmNoIDIwMTguPGJyPjwvbGk+PC9vbD48L2Rpdj4=\",\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e2\",\n    \"isMyMessage\" : true,\n    \"sender\" : {\n      \"id\" : \"97234tyi23rfiy325r3i73\",\n      \"name\" : \"John Doe 3\"\n    }\n  }, {\n    \"attachments\" : [ {\n      \"createdAt\" : \"2017-10-02T10:51:50.000+0000\",\n      \"filename\" : \"message-attachment-filename.pdf\",\n      \"id\" : \"5d869ea0-d3a3-4b83-888f-767bdcdcd565\",\n      \"size\" : 2592836\n    } ],\n    \"body\" : \"VGhlIGNhc3RsZSB3YXMgdXNlZCBhcyBhIHNwZWNpYWwgc3RhZ2UgaW4gdGhlIDxiPjIwMTM8L2I+IFdhbGVzIFJhbGx5IEdCLiA8ZGl2PjxpPjxiPjx1Pjxicj48L3U+PC9iPjwvaT48L2Rpdj48ZGl2PjxpPjxiPjx1PlRoZSBPYWsgYXQgdGhlIEdhdGUgb2YgdGhlIERlYWQ8L3U+PC9iPjwvaT4gbGllcyAzMDBtIGZyb20gPGI+Q2hpcmsgQ2FzdGxlPC9iPiBhbmQgbWFya3MgdGhlIHNpdGUgb2YgdGhlIDExNjUgPGI+QmF0dGxlIG9mIENyb2dlbjwvYj4uPC9kaXY+\",\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e3\",\n    \"isMyMessage\" : false,\n    \"sender\" : {\n      \"id\" : \"97234tyi23rfiy325r3i74\",\n      \"name\" : \"John Doe 4\"\n    }\n  } ],\n  \"read\" : false,\n  \"read-only\" : false,\n  \"rootMessageId\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\",\n  \"subject\" : \"Application Rejected (your efforts are futile)\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n    \"name\" : \"Savings\"\n  },\n  \"workflowStatus\" : \"NEW\"\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/attachments/{attachmentId} URL pattern\n*/\nexport const EmployeeHttpServiceGetMessageAttachmentEmployeeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/attachments/{attachmentId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/conversations/search URL pattern\n*/\nexport const EmployeeHttpServiceGetSearchConversationsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/conversations/search\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"assignee\" : {\n    \"fullName\" : \"John Snow\",\n    \"internalId\" : \"1234-5678-9012-3456\",\n    \"isRequester\" : true\n  },\n  \"body\" : \"VG8gZ2l2ZSByZWFsIHNlcnZpY2UgeW91IG11c3QgYWRkIHNvbWV0aGluZyB3aGljaCBjYW5ub3QgYmUgYm91Z2h0IG9yIG1lYXN1cmVkIHdpdGggbW9uZXksIGFuZCB0aGF0IGlzIHNpbmNlcml0eSBhbmQgaW50ZWdyaXR5Cg==\",\n  \"client\" : {\n    \"fullName\" : \"John Doe\",\n    \"internalId\" : \"97234tyi23rfiy325r3i7r\"\n  },\n  \"deletable\" : true,\n  \"hasAttachments\" : true,\n  \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\",\n  \"important\" : false,\n  \"read\" : false,\n  \"read-only\" : false,\n  \"sender\" : {\n    \"deleted\" : false,\n    \"id\" : \"97234tyi23rfiy325r3i7r\",\n    \"name\" : \"John Doe\"\n  },\n  \"subject\" : \"Application Rejected\",\n  \"timestamp\" : \"2017-10-02T10:51:30.275+0000\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n    \"name\" : \"Savings\"\n  }\n}, {\n  \"assignee\" : {\n    \"fullName\" : \"Ned Stark\",\n    \"internalId\" : \"0987-6543-2109-8765\",\n    \"isRequester\" : false\n  },\n  \"body\" : \"VG8gZ2l2ZSByZWFsIHNlcnZpY2UgeW91IG11c3QgYWRkIHNvbWV0aGluZyB3aGljaCBjYW5ub3QgYmUgYm91Z2h0IG9yIG1lYXN1cmVkIHdpdGggbW9uZXksIGFuZCB0aGF0IGlzIHNpbmNlcml0eSBhbmQgaW50ZWdyaXR5Cg==\",\n  \"client\" : {\n    \"fullName\" : \"John Doe\",\n    \"internalId\" : \"97234tyi23rfiy325r3i7r\"\n  },\n  \"deletable\" : true,\n  \"hasAttachments\" : false,\n  \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\",\n  \"important\" : false,\n  \"read\" : true,\n  \"read-only\" : false,\n  \"sender\" : {\n    \"deleted\" : false,\n    \"id\" : \"97234tyi23rfiy325r3i8o\",\n    \"name\" : \"John Snow\"\n  },\n  \"subject\" : \"Loan Rejected\",\n  \"timestamp\" : \"2019-01-02T10:51:30.000+0000\",\n  \"topic\" : {\n    \"deleted\" : true,\n    \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064b7\",\n    \"name\" : \"Loan rejected\"\n  }\n}, {\n  \"assignee\" : {\n    \"fullName\" : \"John Snow\",\n    \"internalId\" : \"1234-5678-9012-3456\",\n    \"isRequester\" : true\n  },\n  \"body\" : \"VG8gZ2l2ZSByZWFsIHNlcnZpY2UgeW91IG11c3QgYWRkIHNvbWV0aGluZyB3aGljaCBjYW5ub3QgYmUgYm91Z2h0IG9yIG1lYXN1cmVkIHdpdGggbW9uZXksIGFuZCB0aGF0IGlzIHNpbmNlcml0eSBhbmQgaW50ZWdyaXR5Cg==\",\n  \"client\" : {\n    \"fullName\" : \"John Doe\",\n    \"internalId\" : \"97234tyi23rfiy325r3i7r\"\n  },\n  \"deletable\" : true,\n  \"hasAttachments\" : false,\n  \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\",\n  \"important\" : true,\n  \"read\" : false,\n  \"read-only\" : false,\n  \"sender\" : {\n    \"deleted\" : false,\n    \"id\" : \"97234tyi23rfiy325r3i7r\",\n    \"name\" : \"John Doe\"\n  },\n  \"subject\" : \"Important Application\",\n  \"timestamp\" : \"2017-10-02T10:51:30.000+0000\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n    \"name\" : \"Savings\"\n  }\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/topics/{topicId}/subscriptions URL pattern\n*/\nexport const EmployeeHttpServiceGetSubscriptionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/topics/{topicId}/subscriptions\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"08ee5037-8dce-43ab-b734-e2b90a189b82\",\n  \"internalUserId\" : \"03185355-649e-4ab5-97c8-a02555c7a4b2\",\n  \"subscriberName\" : \"Britney Spears\",\n  \"subscriptionDate\" : \"2017-08-22T11:07:27.000+0000\"\n}, {\n  \"id\" : \"58ee5037-8dce-43ab-b734-e2b90a189b81\",\n  \"internalUserId\" : \"d462caa4-edfb-4776-a4b4-9f7e5834d2ae\",\n  \"subscriberName\" : \"Lady Gaga\",\n  \"subscriptionDate\" : \"2017-08-22T11:07:27.000+0000\"\n} ]\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/topics/{topicId} URL pattern\n*/\nexport const EmployeeHttpServiceGetTopicMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/topics/{topicId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/topics URL pattern\n*/\nexport const EmployeeHttpServiceGetTopicsEmployeeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/topics\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"code\" : \"40219526-aa79-4a81-a0a5-ffd12ffed8a3\",\n  \"id\" : \"40219526-aa79-4a81-a0a5-ffd12ffed8a3\",\n  \"mailoutTopic\" : true,\n  \"name\" : \"Mortgage application\",\n  \"subscribersCount\" : 21\n}, {\n  \"code\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n  \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n  \"mailoutTopic\" : true,\n  \"name\" : \"Loans\",\n  \"subscribersCount\" : 102\n}, {\n  \"code\" : \"4fb026ec-62e5-41c8-aa28-149d7544b704\",\n  \"id\" : \"4fb026ec-62e5-41c8-aa28-149d7544b704\",\n  \"mailoutTopic\" : false,\n  \"name\" : \"Problems with making a payment\",\n  \"subscribersCount\" : 4\n} ]\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/attachments URL pattern\n*/\nexport const EmployeeHttpServicePostMessageAttachmentsEmployeeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/attachments\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n  \"filename\" : \"message-attachment-filename.pdf\",\n  \"id\" : \"ae4658a4-073c-4d8b-ab5d-55e9238d3ff0\",\n  \"size\" : 15982836\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"filename\" : \"filename\",\n  \"size\" : 0.8008281904610115,\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"id\" : \"id\"\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/messages/{messageId}/reply URL pattern\n*/\nexport const EmployeeHttpServicePostMessageReplyEmployeeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/messages/{messageId}/reply\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 202,\n                    body: {\n  \"id\" : \"2ca7990f-bcda-4eba-8763-03bf7c66cf3f\"\n}\n                },\n                {\n                    status: 202,\n                    body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"id\" : \"id\"\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/messages URL pattern\n*/\nexport const EmployeeHttpServicePostMessagesEmployeeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/messages\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"2ca7990f-bcda-4eba-8763-03bf7c66cf3f\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"id\" : \"id\"\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/topics/{topicId}/subscribers URL pattern\n*/\nexport const EmployeeHttpServicePostSubscribersMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/topics/{topicId}/subscribers\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"isSubscribed\" : true,\n  \"subscriberId\" : \"08ee5037-8dce-43ab-b734-e2b90a189b82\"\n}, {\n  \"isSubscribed\" : false,\n  \"subscriberId\" : \"58ee5037-8dce-43ab-b734-e2b90a189b81\"\n} ]\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/topics/{topicId}/subscriptions URL pattern\n*/\nexport const EmployeeHttpServicePostSubscriptionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/topics/{topicId}/subscriptions\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 202,\n                    body: {\n  \"id\" : \"79754562-57f6-4cf7-81dc-ec757e4d4c04\"\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/topics URL pattern\n*/\nexport const EmployeeHttpServicePostTopicsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/topics\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"failedSubscriberIds\" : [ \"nonExistentId\" ],\n  \"id\" : \"79754562-57f6-4cf7-81dc-ec757e4d4c04\",\n  \"name\" : \"New topic\",\n  \"subscribers\" : [ \"d462caa4-edfb-4776-a4b4-9f7e5834d2ae\", \"03185355-649e-4ab5-97c8-a02555c7a4b2\" ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/messages/{messageId}/assign URL pattern\n*/\nexport const EmployeeHttpServicePutAssignConversationMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/messages/{messageId}/assign\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"fullName\" : \"John Smith\",\n  \"internalId\" : \"5123-1123-12322\",\n  \"isRequester\" : true\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/messages/assignment URL pattern\n*/\nexport const EmployeeHttpServicePutConversationAssignmentMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/messages/assignment\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"assignedItems\" : [ \"e92bbe7d-10cf-4d7c-b7b5-eadb7632812a\", \"58ee5037-8dce-43ab-b734-e2b90a189b81\" ],\n  \"failedItems\" : [ \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\" ],\n  \"fullName\" : \"John Smith\",\n  \"internalId\" : \"5123-1123-12322\",\n  \"isRequester\" : true\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/messages/{messageId}/resolution URL pattern\n*/\nexport const EmployeeHttpServicePutConversationResolutionMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/messages/{messageId}/resolution\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"resolutionStatus\" : \"RESOLVED\"\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/messages/resolution URL pattern\n*/\nexport const EmployeeHttpServicePutConversationResolutionEmployeeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/messages/resolution\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"failedItems\" : [ \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\" ],\n  \"resolutionStatus\" : \"RESOLVED\",\n  \"successfulItems\" : [ \"e92bbe7d-10cf-4d7c-b7b5-eadb7632812a\", \"58ee5037-8dce-43ab-b734-e2b90a189b81\" ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/conversations/read URL pattern\n*/\nexport const EmployeeHttpServicePutMarkAsReadUnreadEmployeeMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/conversations/read\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"changedItems\" : [ \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395b7\" ],\n  \"failedItems\" : [ \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\" ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"changedItems\" : [ \"changedItems\", \"changedItems\" ],\n  \"failedItems\" : [ \"failedItems\", \"failedItems\" ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/messages/{messageId}/topic URL pattern\n*/\nexport const EmployeeHttpServicePutMessageThreadTopicMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/messages/{messageId}/topic\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: { }\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/topics/{topicId} URL pattern\n*/\nexport const EmployeeHttpServicePutTopicMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/topics/{topicId}\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"code\" : \"4fb026ec-62e5-41c8-aa28-149d7544b704\",\n  \"id\" : \"4fb026ec-62e5-41c8-aa28-149d7544b704\",\n  \"name\" : \"Problems with making a payment\"\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const EmployeeHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v4/employee/messages/assignment\",\n        method: \"DELETE\",\n        responses: [\n\n            {\n                status: 202,\n                body: {\n  \"failedItems\" : [ \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\" ],\n  \"unassignedItems\" : [ \"e92bbe7d-10cf-4d7c-b7b5-eadb7632812a\", \"58ee5037-8dce-43ab-b734-e2b90a189b81\" ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/attachments\",\n        method: \"DELETE\",\n        responses: [\n\n            {\n                status: 202,\n                body: {\n  \"deleted\" : [ \"deleted\", \"deleted\" ],\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"failed\" : [ \"failed\", \"failed\" ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/topics/{topicId}/subscriptions/{subscriptionId}\",\n        method: \"DELETE\",\n        responses: [\n\n            {\n                status: 202,\n                body: { }\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/topics/{topicId}\",\n        method: \"DELETE\",\n        responses: [\n\n            {\n                status: 200,\n                body: { }\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/conversations\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"assignee\" : {\n    \"fullName\" : \"John Snow\",\n    \"internalId\" : \"1234-5678-9012-3456\",\n    \"isRequester\" : true\n  },\n  \"body\" : \"VG8gZ2l2ZSByZWFsIHNlcnZpY2UgeW91IG11c3QgYWRkIHNvbWV0aGluZyB3aGljaCBjYW5ub3QgYmUgYm91Z2h0IG9yIG1lYXN1cmVkIHdpdGggbW9uZXksIGFuZCB0aGF0IGlzIHNpbmNlcml0eSBhbmQgaW50ZWdyaXR5Cg==\",\n  \"client\" : {\n    \"fullName\" : \"John Doe\",\n    \"internalId\" : \"97234tyi23rfiy325r3i7r\"\n  },\n  \"deletable\" : true,\n  \"hasAttachments\" : true,\n  \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\",\n  \"important\" : false,\n  \"read\" : false,\n  \"read-only\" : false,\n  \"sender\" : {\n    \"deleted\" : false,\n    \"id\" : \"97234tyi23rfiy325r3i7r\",\n    \"name\" : \"John Doe\"\n  },\n  \"subject\" : \"Application Rejected\",\n  \"timestamp\" : \"2017-10-02T10:51:30.275+0000\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n    \"name\" : \"Savings\"\n  }\n}, {\n  \"assignee\" : {\n    \"fullName\" : \"Ned Stark\",\n    \"internalId\" : \"0987-6543-2109-8765\",\n    \"isRequester\" : false\n  },\n  \"body\" : \"VG8gZ2l2ZSByZWFsIHNlcnZpY2UgeW91IG11c3QgYWRkIHNvbWV0aGluZyB3aGljaCBjYW5ub3QgYmUgYm91Z2h0IG9yIG1lYXN1cmVkIHdpdGggbW9uZXksIGFuZCB0aGF0IGlzIHNpbmNlcml0eSBhbmQgaW50ZWdyaXR5Cg==\",\n  \"client\" : {\n    \"fullName\" : \"John Doe\",\n    \"internalId\" : \"97234tyi23rfiy325r3i7r\"\n  },\n  \"deletable\" : true,\n  \"hasAttachments\" : false,\n  \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\",\n  \"important\" : false,\n  \"read\" : true,\n  \"read-only\" : false,\n  \"sender\" : {\n    \"deleted\" : false,\n    \"id\" : \"97234tyi23rfiy325r3i8o\",\n    \"name\" : \"John Snow\"\n  },\n  \"subject\" : \"Loan Rejected\",\n  \"timestamp\" : \"2019-01-02T10:51:30.000+0000\",\n  \"topic\" : {\n    \"deleted\" : true,\n    \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064b7\",\n    \"name\" : \"Loan rejected\"\n  }\n}, {\n  \"assignee\" : {\n    \"fullName\" : \"John Snow\",\n    \"internalId\" : \"1234-5678-9012-3456\",\n    \"isRequester\" : true\n  },\n  \"body\" : \"VG8gZ2l2ZSByZWFsIHNlcnZpY2UgeW91IG11c3QgYWRkIHNvbWV0aGluZyB3aGljaCBjYW5ub3QgYmUgYm91Z2h0IG9yIG1lYXN1cmVkIHdpdGggbW9uZXksIGFuZCB0aGF0IGlzIHNpbmNlcml0eSBhbmQgaW50ZWdyaXR5Cg==\",\n  \"client\" : {\n    \"fullName\" : \"John Doe\",\n    \"internalId\" : \"97234tyi23rfiy325r3i7r\"\n  },\n  \"deletable\" : true,\n  \"hasAttachments\" : false,\n  \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\",\n  \"important\" : true,\n  \"read\" : false,\n  \"read-only\" : false,\n  \"sender\" : {\n    \"deleted\" : false,\n    \"id\" : \"97234tyi23rfiy325r3i7r\",\n    \"name\" : \"John Doe\"\n  },\n  \"subject\" : \"Important Application\",\n  \"timestamp\" : \"2017-10-02T10:51:30.000+0000\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n    \"name\" : \"Savings\"\n  }\n} ]\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/conversations/counters\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"unassigned\" : 2,\n  \"unreadAssigned\" : 5\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/conversations/report\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"clientUserFullName\" : \"Ned Stark\",\n  \"clientUserId\" : \"417a289c-5011-4dbc-a3ee-c00ed914f5fe\",\n  \"rootMessageSentDate\" : \"2021-09-28T12:47:40.000+0000\",\n  \"lastMessageSentDate\" : \"2021-09-29T13:50:40.000+0000\",\n  \"status\" : \"NEW\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"8e368e8f-f99c-4edb-8edb-b935b97faa60\",\n    \"name\" : \"Living social deals\"\n  },\n  \"subject\" : \"Important Application\",\n  \"bankAssigneeId\" : \"43ca9de8-ac20-43bd-9c7d-bfa9e4ce16f8\",\n  \"bankAssigneeFullName\" : \"John Snow\"\n}, {\n  \"clientUserFullName\" : \"Robert Johnson\",\n  \"clientUserId\" : \"417a289c-5011-4dbc-a3ee-c00ed914f5fe\",\n  \"rootMessageSentDate\" : \"2021-10-11T18:24:17.000+0000\",\n  \"lastMessageSentDate\" : \"2021-10-11T20:27:19.000+0000\",\n  \"status\" : \"IN_PROGRESS\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"96aeb836-d5c1-4303-826c-5424012ba09f\",\n    \"name\" : \"Prize\"\n  },\n  \"subject\" : \"Vacation on Mars\",\n  \"bankAssigneeId\" : \"bc32371a-2c5a-4fd9-b78e-ffe5c95e1a42\",\n  \"bankAssigneeFullName\" : \"Maria Flores\"\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/messages/{messageId}/conversation\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"assignee\" : {\n    \"fullName\" : \"John Snow\",\n    \"internalId\" : \"1234-5678-9012-3456\",\n    \"isRequester\" : true\n  },\n  \"attachments\" : [ {\n    \"createdAt\" : \"2017-10-02T10:51:50.000+0000\",\n    \"filename\" : \"message-attachment-filename.pdf\",\n    \"id\" : \"5d869ea0-d3a3-4b83-888f-767bdcdcd565\",\n    \"size\" : 2592836\n  }, {\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"filename\" : \"another-message-attachment-filename.pdf\",\n    \"id\" : \"ae4658a4-073c-4d8b-ab5d-55e9238d3ff0\",\n    \"size\" : 15982836\n  } ],\n  \"deletable\" : true,\n  \"important\" : true,\n  \"messages\" : [ {\n    \"body\" : \"VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+\",\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\",\n    \"isMyMessage\" : true,\n    \"sender\" : {\n      \"id\" : \"97234tyi23rfiy325r3i7r\",\n      \"name\" : \"John Doe\"\n    }\n  }, {\n    \"body\" : \"PGRpdj48b2w+PGxpPkNhc3RsZXMgaW4gR3JlYXQgQnJpdGFpbiBhbmQgSXJlbGFuZDxicj48L2xpPjxsaT5MaXN0IG9mIGNhc3RsZXMgaW4gV2FsZXM8YnI+PC9saT48bGk+TGlzdCBvZiBnYXJkZW5zIGluIFdhbGVzPGJyPjwvbGk+PC9vbD48L2Rpdj4=\",\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e1\",\n    \"isMyMessage\" : false,\n    \"sender\" : {\n      \"id\" : \"97234tyi23rfiy325r3i72\",\n      \"name\" : \"John Doe 2\"\n    }\n  }, {\n    \"attachments\" : [ {\n      \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n      \"filename\" : \"another-message-attachment-filename.pdf\",\n      \"id\" : \"ae4658a4-073c-4d8b-ab5d-55e9238d3ff0\",\n      \"size\" : 15982836\n    } ],\n    \"body\" : \"PGRpdj48b2w+PGxpPiA8Yj4iQ2hpcmsgQ2FzdGxlLCBDaGlyayI8L2I+LiBCcml0aXNoIExpc3RlZCBidWlsZGluZ3MuIFJldHJpZXZlZCAyMyBKdWx5IDIwMTUuPGJyPjwvbGk+PGxpPiA8Yj4iQ2hpcmsgQ2FzdGxlIOKAkyBPZmZpY2lhbCBHdWlkZWJvb2siLjwvYj4gQ2FzdGxlIFdhbGVzLjxicj48L2xpPjxsaT4gPGI+IkNoaXJrIENhc3RsZSIuPC9iPiBOYXRpb25hbCBUcnVzdC48YnI+PC9saT48bGk+IDxiPiJUaGUgT2FrIGF0IHRoZSBHYXRlIG9mIHRoZSBEZWFkIjwvYj4uIFBlb3BsZSdzIENvbGxlY3Rpb24gV2FsZXMuIFJldHJpZXZlZCAxIE1hcmNoIDIwMTguPGJyPjwvbGk+PC9vbD48L2Rpdj4=\",\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e2\",\n    \"isMyMessage\" : true,\n    \"sender\" : {\n      \"id\" : \"97234tyi23rfiy325r3i73\",\n      \"name\" : \"John Doe 3\"\n    }\n  }, {\n    \"attachments\" : [ {\n      \"createdAt\" : \"2017-10-02T10:51:50.000+0000\",\n      \"filename\" : \"message-attachment-filename.pdf\",\n      \"id\" : \"5d869ea0-d3a3-4b83-888f-767bdcdcd565\",\n      \"size\" : 2592836\n    } ],\n    \"body\" : \"VGhlIGNhc3RsZSB3YXMgdXNlZCBhcyBhIHNwZWNpYWwgc3RhZ2UgaW4gdGhlIDxiPjIwMTM8L2I+IFdhbGVzIFJhbGx5IEdCLiA8ZGl2PjxpPjxiPjx1Pjxicj48L3U+PC9iPjwvaT48L2Rpdj48ZGl2PjxpPjxiPjx1PlRoZSBPYWsgYXQgdGhlIEdhdGUgb2YgdGhlIERlYWQ8L3U+PC9iPjwvaT4gbGllcyAzMDBtIGZyb20gPGI+Q2hpcmsgQ2FzdGxlPC9iPiBhbmQgbWFya3MgdGhlIHNpdGUgb2YgdGhlIDExNjUgPGI+QmF0dGxlIG9mIENyb2dlbjwvYj4uPC9kaXY+\",\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e3\",\n    \"isMyMessage\" : false,\n    \"sender\" : {\n      \"id\" : \"97234tyi23rfiy325r3i74\",\n      \"name\" : \"John Doe 4\"\n    }\n  } ],\n  \"read\" : false,\n  \"read-only\" : false,\n  \"rootMessageId\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\",\n  \"subject\" : \"Application Rejected (your efforts are futile)\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n    \"name\" : \"Savings\"\n  },\n  \"workflowStatus\" : \"NEW\"\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/attachments/{attachmentId}\",\n        method: \"GET\",\n        responses: [\n\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/conversations/search\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"assignee\" : {\n    \"fullName\" : \"John Snow\",\n    \"internalId\" : \"1234-5678-9012-3456\",\n    \"isRequester\" : true\n  },\n  \"body\" : \"VG8gZ2l2ZSByZWFsIHNlcnZpY2UgeW91IG11c3QgYWRkIHNvbWV0aGluZyB3aGljaCBjYW5ub3QgYmUgYm91Z2h0IG9yIG1lYXN1cmVkIHdpdGggbW9uZXksIGFuZCB0aGF0IGlzIHNpbmNlcml0eSBhbmQgaW50ZWdyaXR5Cg==\",\n  \"client\" : {\n    \"fullName\" : \"John Doe\",\n    \"internalId\" : \"97234tyi23rfiy325r3i7r\"\n  },\n  \"deletable\" : true,\n  \"hasAttachments\" : true,\n  \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\",\n  \"important\" : false,\n  \"read\" : false,\n  \"read-only\" : false,\n  \"sender\" : {\n    \"deleted\" : false,\n    \"id\" : \"97234tyi23rfiy325r3i7r\",\n    \"name\" : \"John Doe\"\n  },\n  \"subject\" : \"Application Rejected\",\n  \"timestamp\" : \"2017-10-02T10:51:30.275+0000\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n    \"name\" : \"Savings\"\n  }\n}, {\n  \"assignee\" : {\n    \"fullName\" : \"Ned Stark\",\n    \"internalId\" : \"0987-6543-2109-8765\",\n    \"isRequester\" : false\n  },\n  \"body\" : \"VG8gZ2l2ZSByZWFsIHNlcnZpY2UgeW91IG11c3QgYWRkIHNvbWV0aGluZyB3aGljaCBjYW5ub3QgYmUgYm91Z2h0IG9yIG1lYXN1cmVkIHdpdGggbW9uZXksIGFuZCB0aGF0IGlzIHNpbmNlcml0eSBhbmQgaW50ZWdyaXR5Cg==\",\n  \"client\" : {\n    \"fullName\" : \"John Doe\",\n    \"internalId\" : \"97234tyi23rfiy325r3i7r\"\n  },\n  \"deletable\" : true,\n  \"hasAttachments\" : false,\n  \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\",\n  \"important\" : false,\n  \"read\" : true,\n  \"read-only\" : false,\n  \"sender\" : {\n    \"deleted\" : false,\n    \"id\" : \"97234tyi23rfiy325r3i8o\",\n    \"name\" : \"John Snow\"\n  },\n  \"subject\" : \"Loan Rejected\",\n  \"timestamp\" : \"2019-01-02T10:51:30.000+0000\",\n  \"topic\" : {\n    \"deleted\" : true,\n    \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064b7\",\n    \"name\" : \"Loan rejected\"\n  }\n}, {\n  \"assignee\" : {\n    \"fullName\" : \"John Snow\",\n    \"internalId\" : \"1234-5678-9012-3456\",\n    \"isRequester\" : true\n  },\n  \"body\" : \"VG8gZ2l2ZSByZWFsIHNlcnZpY2UgeW91IG11c3QgYWRkIHNvbWV0aGluZyB3aGljaCBjYW5ub3QgYmUgYm91Z2h0IG9yIG1lYXN1cmVkIHdpdGggbW9uZXksIGFuZCB0aGF0IGlzIHNpbmNlcml0eSBhbmQgaW50ZWdyaXR5Cg==\",\n  \"client\" : {\n    \"fullName\" : \"John Doe\",\n    \"internalId\" : \"97234tyi23rfiy325r3i7r\"\n  },\n  \"deletable\" : true,\n  \"hasAttachments\" : false,\n  \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\",\n  \"important\" : true,\n  \"read\" : false,\n  \"read-only\" : false,\n  \"sender\" : {\n    \"deleted\" : false,\n    \"id\" : \"97234tyi23rfiy325r3i7r\",\n    \"name\" : \"John Doe\"\n  },\n  \"subject\" : \"Important Application\",\n  \"timestamp\" : \"2017-10-02T10:51:30.000+0000\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n    \"name\" : \"Savings\"\n  }\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/topics/{topicId}/subscriptions\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"08ee5037-8dce-43ab-b734-e2b90a189b82\",\n  \"internalUserId\" : \"03185355-649e-4ab5-97c8-a02555c7a4b2\",\n  \"subscriberName\" : \"Britney Spears\",\n  \"subscriptionDate\" : \"2017-08-22T11:07:27.000+0000\"\n}, {\n  \"id\" : \"58ee5037-8dce-43ab-b734-e2b90a189b81\",\n  \"internalUserId\" : \"d462caa4-edfb-4776-a4b4-9f7e5834d2ae\",\n  \"subscriberName\" : \"Lady Gaga\",\n  \"subscriptionDate\" : \"2017-08-22T11:07:27.000+0000\"\n} ]\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/topics/{topicId}\",\n        method: \"GET\",\n        responses: [\n\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/topics\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"code\" : \"40219526-aa79-4a81-a0a5-ffd12ffed8a3\",\n  \"id\" : \"40219526-aa79-4a81-a0a5-ffd12ffed8a3\",\n  \"mailoutTopic\" : true,\n  \"name\" : \"Mortgage application\",\n  \"subscribersCount\" : 21\n}, {\n  \"code\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n  \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n  \"mailoutTopic\" : true,\n  \"name\" : \"Loans\",\n  \"subscribersCount\" : 102\n}, {\n  \"code\" : \"4fb026ec-62e5-41c8-aa28-149d7544b704\",\n  \"id\" : \"4fb026ec-62e5-41c8-aa28-149d7544b704\",\n  \"mailoutTopic\" : false,\n  \"name\" : \"Problems with making a payment\",\n  \"subscribersCount\" : 4\n} ]\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/attachments\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n  \"filename\" : \"message-attachment-filename.pdf\",\n  \"id\" : \"ae4658a4-073c-4d8b-ab5d-55e9238d3ff0\",\n  \"size\" : 15982836\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"filename\" : \"filename\",\n  \"size\" : 0.8008281904610115,\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"id\" : \"id\"\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/messages/{messageId}/reply\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 202,\n                body: {\n  \"id\" : \"2ca7990f-bcda-4eba-8763-03bf7c66cf3f\"\n}\n            },\n            {\n                status: 202,\n                body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"id\" : \"id\"\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/messages\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"2ca7990f-bcda-4eba-8763-03bf7c66cf3f\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"id\" : \"id\"\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/topics/{topicId}/subscribers\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"isSubscribed\" : true,\n  \"subscriberId\" : \"08ee5037-8dce-43ab-b734-e2b90a189b82\"\n}, {\n  \"isSubscribed\" : false,\n  \"subscriberId\" : \"58ee5037-8dce-43ab-b734-e2b90a189b81\"\n} ]\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/topics/{topicId}/subscriptions\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 202,\n                body: {\n  \"id\" : \"79754562-57f6-4cf7-81dc-ec757e4d4c04\"\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/topics\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"failedSubscriberIds\" : [ \"nonExistentId\" ],\n  \"id\" : \"79754562-57f6-4cf7-81dc-ec757e4d4c04\",\n  \"name\" : \"New topic\",\n  \"subscribers\" : [ \"d462caa4-edfb-4776-a4b4-9f7e5834d2ae\", \"03185355-649e-4ab5-97c8-a02555c7a4b2\" ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/messages/{messageId}/assign\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"fullName\" : \"John Smith\",\n  \"internalId\" : \"5123-1123-12322\",\n  \"isRequester\" : true\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/messages/assignment\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"assignedItems\" : [ \"e92bbe7d-10cf-4d7c-b7b5-eadb7632812a\", \"58ee5037-8dce-43ab-b734-e2b90a189b81\" ],\n  \"failedItems\" : [ \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\" ],\n  \"fullName\" : \"John Smith\",\n  \"internalId\" : \"5123-1123-12322\",\n  \"isRequester\" : true\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/messages/{messageId}/resolution\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"resolutionStatus\" : \"RESOLVED\"\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/messages/resolution\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"failedItems\" : [ \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\" ],\n  \"resolutionStatus\" : \"RESOLVED\",\n  \"successfulItems\" : [ \"e92bbe7d-10cf-4d7c-b7b5-eadb7632812a\", \"58ee5037-8dce-43ab-b734-e2b90a189b81\" ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/conversations/read\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"changedItems\" : [ \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395b7\" ],\n  \"failedItems\" : [ \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\" ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"changedItems\" : [ \"changedItems\", \"changedItems\" ],\n  \"failedItems\" : [ \"failedItems\", \"failedItems\" ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/messages/{messageId}/topic\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: { }\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/topics/{topicId}\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"code\" : \"4fb026ec-62e5-41c8-aa28-149d7544b704\",\n  \"id\" : \"4fb026ec-62e5-41c8-aa28-149d7544b704\",\n  \"name\" : \"Problems with making a payment\"\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Messages client v4\n * Create, read, update, and delete messages as a bank customer or employee. Manage drafts, mailouts, topics, and subscriptions.\n *\n * The version of the OpenAPI document: 4.0.15\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { MailoutBase } from '../model/models';\nimport { MailoutGetResponseBody } from '../model/models';\nimport { MailoutPostRequestBody } from '../model/models';\nimport { MailoutPostResponseBody } from '../model/models';\nimport { MailoutPreviewRequestBody } from '../model/models';\nimport { MailoutPreviewResponseBody } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { UnauthorizedError } from '../model/models';\n\nimport { MESSAGES_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { MessagesConfiguration }                                     from '../configuration';\n\n\nexport interface DeleteMailoutRequestParams {\n    /** Mailout unique identifier */\n    [\"mailoutId\"]: string;\n}\n\nexport interface GetMailoutRequestParams {\n    /** Mailout unique identifier */\n    [\"mailoutId\"]: string;\n}\n\nexport interface GetMailoutsRequestParams {\n    /** The from parameter defines the offset from the first result you want to fetch. Increasing from value by 1 means fetching the next result. It should be utilized in order to control pagination.  */\n    [\"from\"]?: number;\n    /** The size parameter allows you to configure the maximum amount of hits to be returned. It should be utilized in order to control pagination.  */\n    [\"size\"]?: number;\n}\n\nexport interface PostMailoutRequestParams {\n    /** Initiate a new mailout */\n    [\"mailoutPostRequestBody\"]?: MailoutPostRequestBody;\n}\n\nexport interface PostMailoutPreviewRequestParams {\n    /** Preview of what mailout message will be like in case of mailout creation with given details */\n    [\"mailoutPreviewRequestBody\"]?: MailoutPreviewRequestBody;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MailoutHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new MessagesConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(MESSAGES_BASE_PATH) basePath: string, @Optional() configuration: MessagesConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Deletes a mailout of the given ID.\n     * Deletes a mailout of the given ID\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMailout(requestParameters: DeleteMailoutRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Deletes a mailout of the given ID.\n     * Deletes a mailout of the given ID\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMailout(requestParameters: DeleteMailoutRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Deletes a mailout of the given ID.\n     * Deletes a mailout of the given ID\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMailout(requestParameters: DeleteMailoutRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Deletes a mailout of the given ID.\n     * Deletes a mailout of the given ID\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMailout(requestParameters: DeleteMailoutRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _mailoutId = requestParameters[\"mailoutId\"];\n        if (_mailoutId === null || _mailoutId === undefined) {\n            throw new Error('Required parameter mailoutId was null or undefined when calling deleteMailout.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v4/employee/mailouts/${encodeURIComponent(String(_mailoutId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteMailoutUrl(requestParameters: DeleteMailoutRequestParams): string {\n        const _mailoutId = requestParameters[\"mailoutId\"];\n        if (_mailoutId === null || _mailoutId === undefined) {\n            throw new Error('Required parameter mailoutId was null or undefined when calling deleteMailout.');\n        }\n        return `${this.configuration.basePath}/client-api/v4/employee/mailouts/${encodeURIComponent(String(_mailoutId))}`;\n    }\n\n    /**\n     * Get a mailout by id.\n     * Get a mailout by id. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMailout(requestParameters: GetMailoutRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<MailoutGetResponseBody>;\n    /**\n     * Get a mailout by id.\n     * Get a mailout by id. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMailout(requestParameters: GetMailoutRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<MailoutGetResponseBody>>;\n    /**\n     * Get a mailout by id.\n     * Get a mailout by id. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMailout(requestParameters: GetMailoutRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<MailoutGetResponseBody>>;\n    /**\n     * Get a mailout by id.\n     * Get a mailout by id. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMailout(requestParameters: GetMailoutRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _mailoutId = requestParameters[\"mailoutId\"];\n        if (_mailoutId === null || _mailoutId === undefined) {\n            throw new Error('Required parameter mailoutId was null or undefined when calling getMailout.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<MailoutGetResponseBody>(`${this.configuration.basePath}/client-api/v4/employee/mailouts/${encodeURIComponent(String(_mailoutId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getMailoutUrl(requestParameters: GetMailoutRequestParams): string {\n        const _mailoutId = requestParameters[\"mailoutId\"];\n        if (_mailoutId === null || _mailoutId === undefined) {\n            throw new Error('Required parameter mailoutId was null or undefined when calling getMailout.');\n        }\n        return `${this.configuration.basePath}/client-api/v4/employee/mailouts/${encodeURIComponent(String(_mailoutId))}`;\n    }\n\n    /**\n     * Get a mailouts list.\n     * Get a mailouts list. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMailouts(requestParameters: GetMailoutsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<MailoutBase>>;\n    /**\n     * Get a mailouts list.\n     * Get a mailouts list. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMailouts(requestParameters: GetMailoutsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<MailoutBase>>>;\n    /**\n     * Get a mailouts list.\n     * Get a mailouts list. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMailouts(requestParameters: GetMailoutsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<MailoutBase>>>;\n    /**\n     * Get a mailouts list.\n     * Get a mailouts list. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMailouts(requestParameters: GetMailoutsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<MailoutBase>>(`${this.configuration.basePath}/client-api/v4/employee/mailouts`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getMailoutsUrl(requestParameters: GetMailoutsRequestParams): string {\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v4/employee/mailouts${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Initiate a new mailout.\n     * Initiate a new mailout\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMailout(requestParameters: PostMailoutRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<MailoutPostResponseBody>;\n    /**\n     * Initiate a new mailout.\n     * Initiate a new mailout\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMailout(requestParameters: PostMailoutRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<MailoutPostResponseBody>>;\n    /**\n     * Initiate a new mailout.\n     * Initiate a new mailout\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMailout(requestParameters: PostMailoutRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<MailoutPostResponseBody>>;\n    /**\n     * Initiate a new mailout.\n     * Initiate a new mailout\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMailout(requestParameters: PostMailoutRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _mailoutPostRequestBody = requestParameters[\"mailoutPostRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<MailoutPostResponseBody>(`${this.configuration.basePath}/client-api/v4/employee/mailouts`,\n            _mailoutPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postMailoutUrl(requestParameters: PostMailoutRequestParams): string {\n        const _mailoutPostRequestBody = requestParameters[\"mailoutPostRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/employee/mailouts`;\n    }\n\n    /**\n     * Preview of what mailout message will be like in case of mailout creation with given details.\n     * Preview of what mailout message will be like in case of mailout creation with given details\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMailoutPreview(requestParameters: PostMailoutPreviewRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<MailoutPreviewResponseBody>;\n    /**\n     * Preview of what mailout message will be like in case of mailout creation with given details.\n     * Preview of what mailout message will be like in case of mailout creation with given details\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMailoutPreview(requestParameters: PostMailoutPreviewRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<MailoutPreviewResponseBody>>;\n    /**\n     * Preview of what mailout message will be like in case of mailout creation with given details.\n     * Preview of what mailout message will be like in case of mailout creation with given details\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMailoutPreview(requestParameters: PostMailoutPreviewRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<MailoutPreviewResponseBody>>;\n    /**\n     * Preview of what mailout message will be like in case of mailout creation with given details.\n     * Preview of what mailout message will be like in case of mailout creation with given details\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMailoutPreview(requestParameters: PostMailoutPreviewRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _mailoutPreviewRequestBody = requestParameters[\"mailoutPreviewRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<MailoutPreviewResponseBody>(`${this.configuration.basePath}/client-api/v4/employee/mailouts/preview`,\n            _mailoutPreviewRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postMailoutPreviewUrl(requestParameters: PostMailoutPreviewRequestParams): string {\n        const _mailoutPreviewRequestBody = requestParameters[\"mailoutPreviewRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/employee/mailouts/preview`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v4/employee/mailouts/{mailoutId} URL pattern\n*/\nexport const MailoutHttpServiceDeleteMailoutMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/mailouts/{mailoutId}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                    status: 202,\n                    body: { }\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/mailouts/{mailoutId} URL pattern\n*/\nexport const MailoutHttpServiceGetMailoutMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/mailouts/{mailoutId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"attachments\" : [ {\n    \"createdAt\" : \"2017-10-02T10:51:50.000+0000\",\n    \"filename\" : \"message-attachment-filename.pdf\",\n    \"id\" : \"5d869ea0-d3a3-4b83-888f-767bdcdcd565\",\n    \"size\" : 2592836\n  }, {\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"filename\" : \"another-message-attachment-filename.pdf\",\n    \"id\" : \"ae4658a4-073c-4d8b-ab5d-55e9238d3ff0\",\n    \"size\" : 15982836\n  } ],\n  \"body\" : \"PHRhYmxlIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCI+CiAgPHRyPgogICAgPHRkIGFsaWduPSJjZW50ZXIiIHZhbGlnbj0ibWlkZGxlIiBzdHlsZT0iZm9udC1mYW1pbHk6J0dlb3JnaWEnLCAnVGltZXMgTmV3IFJvbWFuJywgJ1RpbWVzJywgc2VyaWY7IGNvbG9yOiMwMDAwMDA7IGZvbnQtc2l6ZToyNHB4OyBwYWRkaW5nLWJvdHRvbTo1cHgiPgogICAgICA8aT5XZWxjb21lICAke3VzZXJ9CiAgICAgIDwvaT4KICA8dHI+CiAgICA8dGQgYWxpZ249ImxlZnQiIHZhbGlnbj0ibWlkZGxlIiBzdHlsZT0iZm9udC1mYW1pbHk6J0dlb3JnaWEnLCAnVGltZXMgTmV3IFJvbWFuJywgJ1RpbWVzJywgc2VyaWY7IGNvbG9yOiMwMDAwMDA7IGZvbnQtc2l6ZToxNXB4Ij4KICAgICAgdG8gdGhlICR7d29ybGR9IFdvcmxkCiAgICAgIFRoaXMgaXMgb3VyIHdpc2ggZm9yIHlvdS4uLiAke3dpc2h9CiAgPHRyPgo8L3RhYmxlPg==\",\n  \"deletable\" : true,\n  \"deliveredMessagesNumber\" : 493,\n  \"id\" : \"20a52c18-c4b1-4c1e-8f27-9e0998ff3ef7\",\n  \"important\" : false,\n  \"initiationDate\" : \"2020-03-04T10:51:30.275+0000\",\n  \"isBodyHtml\" : true,\n  \"mailoutName\" : \"Happy b-day to users\",\n  \"readMessagesNumber\" : 42,\n  \"sender\" : {\n    \"id\" : \"3d72a290-00f8-4f65-a16d-65d8f0b29b5a\",\n    \"name\" : \"John Snow\"\n  },\n  \"senderDisplayName\" : \"The bank you love\",\n  \"status\" : \"PROCESSING\",\n  \"subject\" : \"Happy Birthday!\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"ea151612-e2f9-403e-825d-9169afa0d2ac\",\n    \"name\" : \"News\"\n  },\n  \"totalRecipientsCount\" : 500\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/mailouts URL pattern\n*/\nexport const MailoutHttpServiceGetMailoutsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/mailouts\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"20a52c18-c4b1-4c1e-8f27-9e0998ff3ef7\",\n  \"initiationDate\" : \"2020-03-04T10:51:30.275+0000\",\n  \"mailoutName\" : \"Happy b-day to users\",\n  \"senderDisplayName\" : \"The bank you love\",\n  \"status\" : \"READY\",\n  \"subject\" : \"Happy Birthday!\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"ea151612-e2f9-403e-825d-9169afa0d2ac\",\n    \"name\" : \"News\"\n  }\n}, {\n  \"id\" : \"122ca40f-1671-4d1d-9925-ca4df3d34617\",\n  \"initiationDate\" : \"2020-03-02T12:40:30+0000\",\n  \"senderDisplayName\" : \"The bank you love\",\n  \"status\" : \"DONE\",\n  \"subject\" : \"Special proposal\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"ea151612-e2f9-403e-825d-9169afa0d2ac\",\n    \"name\" : \"News\"\n  }\n}, {\n  \"id\" : \"2738c5dd-88fa-436e-abd3-140f53c5cc08\",\n  \"initiationDate\" : \"2020-03-02T18:30:10+0000\",\n  \"senderDisplayName\" : \"The bank you love\",\n  \"status\" : \"ERROR\",\n  \"subject\" : \"Extended credit limit\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"ea151612-e2f9-403e-825d-9169afa0d2ac\",\n    \"name\" : \"News\"\n  }\n}, {\n  \"id\" : \"6ad3b1f0-d1e8-4c9e-9231-870bac707f21\",\n  \"initiationDate\" : \"2020-03-01T11:25:30+0000\",\n  \"senderDisplayName\" : \"The bank you love\",\n  \"status\" : \"CANCELLED\",\n  \"subject\" : \"New terms of deposits\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"ea151612-e2f9-403e-825d-9169afa0d2ac\",\n    \"name\" : \"News\"\n  }\n}, {\n  \"id\" : \"0c5bcdee-f76e-4737-b0d1-3c8fc696c86f\",\n  \"initiationDate\" : \"2020-03-01T11:25:30+0000\",\n  \"senderDisplayName\" : \"The bank you love\",\n  \"status\" : \"CANCELLATION_IN_PROCESS\",\n  \"subject\" : \"New terms of deposits\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"ea151612-e2f9-403e-825d-9169afa0d2ac\",\n    \"name\" : \"News\"\n  }\n} ]\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/mailouts URL pattern\n*/\nexport const MailoutHttpServicePostMailoutMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/mailouts\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 202,\n                    body: {\n  \"id\" : \"3d72a290-00f8-4f65-a16d-65d8f0b29b5a\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/employee/mailouts/preview URL pattern\n*/\nexport const MailoutHttpServicePostMailoutPreviewMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/employee/mailouts/preview\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"body\" : \"PHRhYmxlIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCI+PHRib2R5Pjx0cj48dGQgYWxpZ249ImNlbnRlciIgdmFsaWduPSJtaWRkbGUiIHN0eWxlPSJmb250LWZhbWlseTomIzM5O2dlb3JnaWEmIzM5OyAsICYjMzk7dGltZXMgbmV3IHJvbWFuJiMzOTsgLCAmIzM5O3RpbWVzJiMzOTsgLCBzZXJpZjtjb2xvcjojMDAwMDAwO2ZvbnQtc2l6ZToyNHB4O3BhZGRpbmctYm90dG9tOjVweCI+CiAgPGk+V2VsY29tZSAgJHt1c2VyfQogIDwvaT4KPC90ZD48L3RyPjx0cj48dGQgYWxpZ249ImxlZnQiIHZhbGlnbj0ibWlkZGxlIiBzdHlsZT0iZm9udC1mYW1pbHk6JiMzOTtnZW9yZ2lhJiMzOTsgLCAmIzM5O3RpbWVzIG5ldyByb21hbiYjMzk7ICwgJiMzOTt0aW1lcyYjMzk7ICwgc2VyaWY7Y29sb3I6IzAwMDAwMDtmb250LXNpemU6MTVweCI+CiAgPHA+dG8gdGhlICR7d29ybGR9IFdvcmxkCiAgICBUaGlzIGlzIG91ciB3aXNoIGZvciB5b3UuLi4gJHt3aXNofQogIDwvcD4KPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4=\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const MailoutHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v4/employee/mailouts/{mailoutId}\",\n        method: \"DELETE\",\n        responses: [\n\n            {\n                status: 202,\n                body: { }\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/mailouts/{mailoutId}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"attachments\" : [ {\n    \"createdAt\" : \"2017-10-02T10:51:50.000+0000\",\n    \"filename\" : \"message-attachment-filename.pdf\",\n    \"id\" : \"5d869ea0-d3a3-4b83-888f-767bdcdcd565\",\n    \"size\" : 2592836\n  }, {\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"filename\" : \"another-message-attachment-filename.pdf\",\n    \"id\" : \"ae4658a4-073c-4d8b-ab5d-55e9238d3ff0\",\n    \"size\" : 15982836\n  } ],\n  \"body\" : \"PHRhYmxlIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCI+CiAgPHRyPgogICAgPHRkIGFsaWduPSJjZW50ZXIiIHZhbGlnbj0ibWlkZGxlIiBzdHlsZT0iZm9udC1mYW1pbHk6J0dlb3JnaWEnLCAnVGltZXMgTmV3IFJvbWFuJywgJ1RpbWVzJywgc2VyaWY7IGNvbG9yOiMwMDAwMDA7IGZvbnQtc2l6ZToyNHB4OyBwYWRkaW5nLWJvdHRvbTo1cHgiPgogICAgICA8aT5XZWxjb21lICAke3VzZXJ9CiAgICAgIDwvaT4KICA8dHI+CiAgICA8dGQgYWxpZ249ImxlZnQiIHZhbGlnbj0ibWlkZGxlIiBzdHlsZT0iZm9udC1mYW1pbHk6J0dlb3JnaWEnLCAnVGltZXMgTmV3IFJvbWFuJywgJ1RpbWVzJywgc2VyaWY7IGNvbG9yOiMwMDAwMDA7IGZvbnQtc2l6ZToxNXB4Ij4KICAgICAgdG8gdGhlICR7d29ybGR9IFdvcmxkCiAgICAgIFRoaXMgaXMgb3VyIHdpc2ggZm9yIHlvdS4uLiAke3dpc2h9CiAgPHRyPgo8L3RhYmxlPg==\",\n  \"deletable\" : true,\n  \"deliveredMessagesNumber\" : 493,\n  \"id\" : \"20a52c18-c4b1-4c1e-8f27-9e0998ff3ef7\",\n  \"important\" : false,\n  \"initiationDate\" : \"2020-03-04T10:51:30.275+0000\",\n  \"isBodyHtml\" : true,\n  \"mailoutName\" : \"Happy b-day to users\",\n  \"readMessagesNumber\" : 42,\n  \"sender\" : {\n    \"id\" : \"3d72a290-00f8-4f65-a16d-65d8f0b29b5a\",\n    \"name\" : \"John Snow\"\n  },\n  \"senderDisplayName\" : \"The bank you love\",\n  \"status\" : \"PROCESSING\",\n  \"subject\" : \"Happy Birthday!\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"ea151612-e2f9-403e-825d-9169afa0d2ac\",\n    \"name\" : \"News\"\n  },\n  \"totalRecipientsCount\" : 500\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/mailouts\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"20a52c18-c4b1-4c1e-8f27-9e0998ff3ef7\",\n  \"initiationDate\" : \"2020-03-04T10:51:30.275+0000\",\n  \"mailoutName\" : \"Happy b-day to users\",\n  \"senderDisplayName\" : \"The bank you love\",\n  \"status\" : \"READY\",\n  \"subject\" : \"Happy Birthday!\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"ea151612-e2f9-403e-825d-9169afa0d2ac\",\n    \"name\" : \"News\"\n  }\n}, {\n  \"id\" : \"122ca40f-1671-4d1d-9925-ca4df3d34617\",\n  \"initiationDate\" : \"2020-03-02T12:40:30+0000\",\n  \"senderDisplayName\" : \"The bank you love\",\n  \"status\" : \"DONE\",\n  \"subject\" : \"Special proposal\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"ea151612-e2f9-403e-825d-9169afa0d2ac\",\n    \"name\" : \"News\"\n  }\n}, {\n  \"id\" : \"2738c5dd-88fa-436e-abd3-140f53c5cc08\",\n  \"initiationDate\" : \"2020-03-02T18:30:10+0000\",\n  \"senderDisplayName\" : \"The bank you love\",\n  \"status\" : \"ERROR\",\n  \"subject\" : \"Extended credit limit\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"ea151612-e2f9-403e-825d-9169afa0d2ac\",\n    \"name\" : \"News\"\n  }\n}, {\n  \"id\" : \"6ad3b1f0-d1e8-4c9e-9231-870bac707f21\",\n  \"initiationDate\" : \"2020-03-01T11:25:30+0000\",\n  \"senderDisplayName\" : \"The bank you love\",\n  \"status\" : \"CANCELLED\",\n  \"subject\" : \"New terms of deposits\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"ea151612-e2f9-403e-825d-9169afa0d2ac\",\n    \"name\" : \"News\"\n  }\n}, {\n  \"id\" : \"0c5bcdee-f76e-4737-b0d1-3c8fc696c86f\",\n  \"initiationDate\" : \"2020-03-01T11:25:30+0000\",\n  \"senderDisplayName\" : \"The bank you love\",\n  \"status\" : \"CANCELLATION_IN_PROCESS\",\n  \"subject\" : \"New terms of deposits\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"ea151612-e2f9-403e-825d-9169afa0d2ac\",\n    \"name\" : \"News\"\n  }\n} ]\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/mailouts\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 202,\n                body: {\n  \"id\" : \"3d72a290-00f8-4f65-a16d-65d8f0b29b5a\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/employee/mailouts/preview\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"body\" : \"PHRhYmxlIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCI+PHRib2R5Pjx0cj48dGQgYWxpZ249ImNlbnRlciIgdmFsaWduPSJtaWRkbGUiIHN0eWxlPSJmb250LWZhbWlseTomIzM5O2dlb3JnaWEmIzM5OyAsICYjMzk7dGltZXMgbmV3IHJvbWFuJiMzOTsgLCAmIzM5O3RpbWVzJiMzOTsgLCBzZXJpZjtjb2xvcjojMDAwMDAwO2ZvbnQtc2l6ZToyNHB4O3BhZGRpbmctYm90dG9tOjVweCI+CiAgPGk+V2VsY29tZSAgJHt1c2VyfQogIDwvaT4KPC90ZD48L3RyPjx0cj48dGQgYWxpZ249ImxlZnQiIHZhbGlnbj0ibWlkZGxlIiBzdHlsZT0iZm9udC1mYW1pbHk6JiMzOTtnZW9yZ2lhJiMzOTsgLCAmIzM5O3RpbWVzIG5ldyByb21hbiYjMzk7ICwgJiMzOTt0aW1lcyYjMzk7ICwgc2VyaWY7Y29sb3I6IzAwMDAwMDtmb250LXNpemU6MTVweCI+CiAgPHA+dG8gdGhlICR7d29ybGR9IFdvcmxkCiAgICBUaGlzIGlzIG91ciB3aXNoIGZvciB5b3UuLi4gJHt3aXNofQogIDwvcD4KPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4=\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Messages client v4\n * Create, read, update, and delete messages as a bank customer or employee. Manage drafts, mailouts, topics, and subscriptions.\n *\n * The version of the OpenAPI document: 4.0.15\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ConversationDraftRequest } from '../model/models';\nimport { ConversationMessageDraftPostRequestBody } from '../model/models';\nimport { ConversationMessageDraftPutRequestBody } from '../model/models';\nimport { ConversationThread } from '../model/models';\nimport { ConversationThreadsDeleteResponseBody } from '../model/models';\nimport { DeleteDraftsResponseBody } from '../model/models';\nimport { DeleteResponseBody } from '../model/models';\nimport { DraftBaseRequest } from '../model/models';\nimport { DraftPostResponseBody } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { MarkAsReadUnreadPutRequestBody } from '../model/models';\nimport { MarkAsReadUnreadPutResponseBody } from '../model/models';\nimport { MessageDraftGetResponseBody } from '../model/models';\nimport { MessageDraftPutRequestBody } from '../model/models';\nimport { MessageDraftsGetResponseBody } from '../model/models';\nimport { MessageDraftsPostRequestBody } from '../model/models';\nimport { MessageReplyPostRequestBody } from '../model/models';\nimport { MessageThreadGetResponseBody } from '../model/models';\nimport { Metadata } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PresentationMessagePostRequestBody } from '../model/models';\nimport { PresentationMessagePostResponseBody } from '../model/models';\nimport { TopicsGetResponseBody } from '../model/models';\nimport { UnauthorizedError } from '../model/models';\nimport { UnreadConversationsGetResponseBody } from '../model/models';\n\nimport { MESSAGES_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { MessagesConfiguration }                                     from '../configuration';\n\n\nexport interface DeleteConversationThreadsRequestParams {\n    /** Array of conversation root message ids to de deleted */\n    [\"ids\"]: Array<string>;\n    /** Uniquely identifies a request. It is utilized in order to support idempotency. In case of an uncertain state of a response, a client is expected to be able to retry the request by providing the same request identifier.  */\n    [\"xBBSVCRequestId\"]?: string;\n}\n\nexport interface DeleteMessageAttachmentsRequestParams {\n    /** Array of attachments to delete */\n    [\"ids\"]: Array<string>;\n}\n\nexport interface DeleteMessageDraftsRequestParams {\n    /** Array of draft to delete */\n    [\"ids\"]: Array<string>;\n}\n\nexport interface GetConversationThreadsRequestParams {\n    /** This endpoint is for bank client only! Specifies which &#x60;messages mailbox&#x60; should be retrieved, inbox or outbox. Outbox: will return all conversartions where bank client either conversation starter or replied to someone in existing conversation. Inbox: will return all conversations where FI employee set bank client as a recipient.  */\n    [\"mailboxType\"]?: string;\n    /** The from parameter defines the offset from the first result you want to fetch. Increasing from value by 1 means fetching the next result. It should be utilized in order to control pagination.  */\n    [\"from\"]?: number;\n    /** The size parameter allows you to configure the maximum amount of hits to be returned. It should be utilized in order to control pagination.  */\n    [\"size\"]?: number;\n    /** Order by field: sender, topic, important  */\n    [\"orderBy\"]?: string;\n    /** Direction */\n    [\"direction\"]?: 'ASC' | 'DESC';\n}\n\nexport interface GetMessageAttachmentRequestParams {\n    /** Uniquely identifies message attachment */\n    [\"attachmentId\"]: string;\n}\n\nexport interface GetMessageDraftRequestParams {\n    /** Uniquely identifies a draft to be managed */\n    [\"draftId\"]: string;\n}\n\nexport interface GetMessageDraftsRequestParams {\n    /** The from parameter defines the offset from the first result you want to fetch. Increasing from value by 1 means fetching the next result. It should be utilized in order to control pagination.  */\n    [\"from\"]?: number;\n    /** The size parameter allows you to configure the maximum amount of hits to be returned. It should be utilized in order to control pagination.  */\n    [\"size\"]?: number;\n}\n\nexport interface GetMessageThreadRequestParams {\n    /** Uniquely identifies the root message */\n    [\"messageId\"]: string;\n}\n\nexport interface PostConversationMessageDraftRequestParams {\n    /** Uniquely identifies the root message */\n    [\"messageId\"]: string;\n    /** Creates the conversation draft */\n    [\"conversationMessageDraftPostRequestBody\"]?: ConversationMessageDraftPostRequestBody;\n}\n\nexport interface PostMessageAttachmentsRequestParams {\n    /** Identifier of a message that receives attachment. The parameter is not used by DBS message center. It is added for custom implementations of Message Center  */\n    [\"messageId\"]?: string;\n    /** Binary attachment represented as binary stream */\n    [\"attachment\"]?: Blob;\n}\n\nexport interface PostMessageDraftsRequestParams {\n    /** Creates a draft */\n    [\"messageDraftsPostRequestBody\"]?: MessageDraftsPostRequestBody;\n}\n\nexport interface PostMessageReplyRequestParams {\n    /** Uniquely identifies the root message */\n    [\"messageId\"]: string;\n    /** Send a reply message within message thread/conversation */\n    [\"messageReplyPostRequestBody\"]?: MessageReplyPostRequestBody;\n}\n\nexport interface PostMessagesRequestParams {\n    /** Create a root message of a conversation. */\n    [\"presentationMessagePostRequestBody\"]?: PresentationMessagePostRequestBody;\n}\n\nexport interface PutConversationMessageDraftRequestParams {\n    /** Uniquely identifies the root message */\n    [\"messageId\"]: string;\n    [\"conversationMessageDraftPutRequestBody\"]?: ConversationMessageDraftPutRequestBody;\n}\n\nexport interface PutMarkAsReadUnreadRequestParams {\n    /** Mark conversations as read or unread. */\n    [\"markAsReadUnreadPutRequestBody\"]?: MarkAsReadUnreadPutRequestBody;\n}\n\nexport interface PutMessageDraftRequestParams {\n    /** Uniquely identifies a draft to be managed */\n    [\"draftId\"]: string;\n    [\"messageDraftPutRequestBody\"]?: MessageDraftPutRequestBody;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagecenterHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new MessagesConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(MESSAGES_BASE_PATH) basePath: string, @Optional() configuration: MessagesConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Mark threads as deleted. This operation is user-bound which means that it affects one specific user only.\n     * Mark threads as deleted. This operation is user-bound which means that it affects one specific user only. All other participants will continue to see this thread. If, however, other participant decides to send a new message to the thread \\&#39;deleted\\&#39; by some user, then the whole thread gets reinstated for that user as well. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteConversationThreads(requestParameters: DeleteConversationThreadsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ConversationThreadsDeleteResponseBody>;\n    /**\n     * Mark threads as deleted. This operation is user-bound which means that it affects one specific user only.\n     * Mark threads as deleted. This operation is user-bound which means that it affects one specific user only. All other participants will continue to see this thread. If, however, other participant decides to send a new message to the thread \\&#39;deleted\\&#39; by some user, then the whole thread gets reinstated for that user as well. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteConversationThreads(requestParameters: DeleteConversationThreadsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ConversationThreadsDeleteResponseBody>>;\n    /**\n     * Mark threads as deleted. This operation is user-bound which means that it affects one specific user only.\n     * Mark threads as deleted. This operation is user-bound which means that it affects one specific user only. All other participants will continue to see this thread. If, however, other participant decides to send a new message to the thread \\&#39;deleted\\&#39; by some user, then the whole thread gets reinstated for that user as well. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteConversationThreads(requestParameters: DeleteConversationThreadsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ConversationThreadsDeleteResponseBody>>;\n    /**\n     * Mark threads as deleted. This operation is user-bound which means that it affects one specific user only.\n     * Mark threads as deleted. This operation is user-bound which means that it affects one specific user only. All other participants will continue to see this thread. If, however, other participant decides to send a new message to the thread \\&#39;deleted\\&#39; by some user, then the whole thread gets reinstated for that user as well. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteConversationThreads(requestParameters: DeleteConversationThreadsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _ids = requestParameters[\"ids\"];\n        if (_ids === null || _ids === undefined) {\n            throw new Error('Required parameter ids was null or undefined when calling deleteConversationThreads.');\n        }\n        const _xBBSVCRequestId = requestParameters[\"xBBSVCRequestId\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_ids) {\n            _ids.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ids');\n            })\n        }\n\n        let headers = this.defaultHeaders;\n        if (_xBBSVCRequestId !== undefined && _xBBSVCRequestId !== null) {\n            headers = headers.set('X-BBSVC-Request-Id', String(_xBBSVCRequestId));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<ConversationThreadsDeleteResponseBody>(`${this.configuration.basePath}/client-api/v4/message-center/messages/conversations`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteConversationThreadsUrl(requestParameters: DeleteConversationThreadsRequestParams): string {\n        const _ids = requestParameters[\"ids\"];\n        if (_ids === null || _ids === undefined) {\n            throw new Error('Required parameter ids was null or undefined when calling deleteConversationThreads.');\n        }\n        const _xBBSVCRequestId = requestParameters[\"xBBSVCRequestId\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_ids) {\n            _ids.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ids');\n            })\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v4/message-center/messages/conversations${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Deletes message binary attachments. Attachment can only be deleted if it\\&#39;s not added to the conversation.\n     * Deletes message binary attachments. Attachment can only be deleted if it\\&#39;s not added to the conversation. Attachment can only be deleted by its owner \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMessageAttachments(requestParameters: DeleteMessageAttachmentsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<DeleteResponseBody>;\n    /**\n     * Deletes message binary attachments. Attachment can only be deleted if it\\&#39;s not added to the conversation.\n     * Deletes message binary attachments. Attachment can only be deleted if it\\&#39;s not added to the conversation. Attachment can only be deleted by its owner \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMessageAttachments(requestParameters: DeleteMessageAttachmentsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<DeleteResponseBody>>;\n    /**\n     * Deletes message binary attachments. Attachment can only be deleted if it\\&#39;s not added to the conversation.\n     * Deletes message binary attachments. Attachment can only be deleted if it\\&#39;s not added to the conversation. Attachment can only be deleted by its owner \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMessageAttachments(requestParameters: DeleteMessageAttachmentsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<DeleteResponseBody>>;\n    /**\n     * Deletes message binary attachments. Attachment can only be deleted if it\\&#39;s not added to the conversation.\n     * Deletes message binary attachments. Attachment can only be deleted if it\\&#39;s not added to the conversation. Attachment can only be deleted by its owner \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMessageAttachments(requestParameters: DeleteMessageAttachmentsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _ids = requestParameters[\"ids\"];\n        if (_ids === null || _ids === undefined) {\n            throw new Error('Required parameter ids was null or undefined when calling deleteMessageAttachments.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_ids) {\n            _ids.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ids');\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<DeleteResponseBody>(`${this.configuration.basePath}/client-api/v4/message-center/attachments`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteMessageAttachmentsUrl(requestParameters: DeleteMessageAttachmentsRequestParams): string {\n        const _ids = requestParameters[\"ids\"];\n        if (_ids === null || _ids === undefined) {\n            throw new Error('Required parameter ids was null or undefined when calling deleteMessageAttachments.');\n        }\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_ids) {\n            _ids.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ids');\n            })\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v4/message-center/attachments${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Delete drafts in a batch.\n     * Delete drafts in a batch\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMessageDrafts(requestParameters: DeleteMessageDraftsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<DeleteDraftsResponseBody>;\n    /**\n     * Delete drafts in a batch.\n     * Delete drafts in a batch\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMessageDrafts(requestParameters: DeleteMessageDraftsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<DeleteDraftsResponseBody>>;\n    /**\n     * Delete drafts in a batch.\n     * Delete drafts in a batch\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMessageDrafts(requestParameters: DeleteMessageDraftsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<DeleteDraftsResponseBody>>;\n    /**\n     * Delete drafts in a batch.\n     * Delete drafts in a batch\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMessageDrafts(requestParameters: DeleteMessageDraftsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _ids = requestParameters[\"ids\"];\n        if (_ids === null || _ids === undefined) {\n            throw new Error('Required parameter ids was null or undefined when calling deleteMessageDrafts.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_ids) {\n            _ids.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ids');\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<DeleteDraftsResponseBody>(`${this.configuration.basePath}/client-api/v4/message-center/messages/drafts`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteMessageDraftsUrl(requestParameters: DeleteMessageDraftsRequestParams): string {\n        const _ids = requestParameters[\"ids\"];\n        if (_ids === null || _ids === undefined) {\n            throw new Error('Required parameter ids was null or undefined when calling deleteMessageDrafts.');\n        }\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_ids) {\n            _ids.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'ids');\n            })\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v4/message-center/messages/drafts${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Returns a list of conversations available for a bank client.\n     * Returns a list of conversations available for a bank client. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversationThreads(requestParameters: GetConversationThreadsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<ConversationThread>>;\n    /**\n     * Returns a list of conversations available for a bank client.\n     * Returns a list of conversations available for a bank client. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversationThreads(requestParameters: GetConversationThreadsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<ConversationThread>>>;\n    /**\n     * Returns a list of conversations available for a bank client.\n     * Returns a list of conversations available for a bank client. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversationThreads(requestParameters: GetConversationThreadsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<ConversationThread>>>;\n    /**\n     * Returns a list of conversations available for a bank client.\n     * Returns a list of conversations available for a bank client. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversationThreads(requestParameters: GetConversationThreadsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _mailboxType = requestParameters[\"mailboxType\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_mailboxType !== undefined && _mailboxType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_mailboxType, 'mailboxType');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<ConversationThread>>(`${this.configuration.basePath}/client-api/v4/message-center/messages/conversations`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getConversationThreadsUrl(requestParameters: GetConversationThreadsRequestParams): string {\n        const _mailboxType = requestParameters[\"mailboxType\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_mailboxType !== undefined && _mailboxType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_mailboxType, 'mailboxType');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v4/message-center/messages/conversations${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Returns message binary attachment.\n     * Returns message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageAttachment(requestParameters: GetMessageAttachmentRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/octet-stream'}): Observable<Blob>;\n    /**\n     * Returns message binary attachment.\n     * Returns message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageAttachment(requestParameters: GetMessageAttachmentRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/octet-stream'}): Observable<HttpResponse<Blob>>;\n    /**\n     * Returns message binary attachment.\n     * Returns message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageAttachment(requestParameters: GetMessageAttachmentRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/octet-stream'}): Observable<HttpEvent<Blob>>;\n    /**\n     * Returns message binary attachment.\n     * Returns message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageAttachment(requestParameters: GetMessageAttachmentRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Blob>;\n    /**\n     * Returns message binary attachment.\n     * Returns message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageAttachment(requestParameters: GetMessageAttachmentRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Blob>>;\n    /**\n     * Returns message binary attachment.\n     * Returns message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageAttachment(requestParameters: GetMessageAttachmentRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Blob>>;\n    /**\n     * Returns message binary attachment.\n     * Returns message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageAttachment(requestParameters: GetMessageAttachmentRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/octet-stream' | 'application/json'}): Observable<any> {\n        const _attachmentId = requestParameters[\"attachmentId\"];\n        if (_attachmentId === null || _attachmentId === undefined) {\n            throw new Error('Required parameter attachmentId was null or undefined when calling getMessageAttachment.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/octet-stream',\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v4/message-center/attachments/${encodeURIComponent(String(_attachmentId))}`,\n            {\n                responseType: \"blob\",\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getMessageAttachmentUrl(requestParameters: GetMessageAttachmentRequestParams): string {\n        const _attachmentId = requestParameters[\"attachmentId\"];\n        if (_attachmentId === null || _attachmentId === undefined) {\n            throw new Error('Required parameter attachmentId was null or undefined when calling getMessageAttachment.');\n        }\n        return `${this.configuration.basePath}/client-api/v4/message-center/attachments/${encodeURIComponent(String(_attachmentId))}`;\n    }\n\n    /**\n     * Gets draft by id. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageDraft(requestParameters: GetMessageDraftRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<MessageDraftGetResponseBody>;\n    /**\n     * Gets draft by id. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageDraft(requestParameters: GetMessageDraftRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<MessageDraftGetResponseBody>>;\n    /**\n     * Gets draft by id. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageDraft(requestParameters: GetMessageDraftRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<MessageDraftGetResponseBody>>;\n    /**\n     * Gets draft by id. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageDraft(requestParameters: GetMessageDraftRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _draftId = requestParameters[\"draftId\"];\n        if (_draftId === null || _draftId === undefined) {\n            throw new Error('Required parameter draftId was null or undefined when calling getMessageDraft.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<MessageDraftGetResponseBody>(`${this.configuration.basePath}/client-api/v4/message-center/messages/drafts/${encodeURIComponent(String(_draftId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getMessageDraftUrl(requestParameters: GetMessageDraftRequestParams): string {\n        const _draftId = requestParameters[\"draftId\"];\n        if (_draftId === null || _draftId === undefined) {\n            throw new Error('Required parameter draftId was null or undefined when calling getMessageDraft.');\n        }\n        return `${this.configuration.basePath}/client-api/v4/message-center/messages/drafts/${encodeURIComponent(String(_draftId))}`;\n    }\n\n    /**\n     * Returns a list of drafts.\n     * Returns a list of drafts. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageDrafts(requestParameters: GetMessageDraftsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<MessageDraftsGetResponseBody>>;\n    /**\n     * Returns a list of drafts.\n     * Returns a list of drafts. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageDrafts(requestParameters: GetMessageDraftsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<MessageDraftsGetResponseBody>>>;\n    /**\n     * Returns a list of drafts.\n     * Returns a list of drafts. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageDrafts(requestParameters: GetMessageDraftsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<MessageDraftsGetResponseBody>>>;\n    /**\n     * Returns a list of drafts.\n     * Returns a list of drafts. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageDrafts(requestParameters: GetMessageDraftsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<MessageDraftsGetResponseBody>>(`${this.configuration.basePath}/client-api/v4/message-center/messages/drafts`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getMessageDraftsUrl(requestParameters: GetMessageDraftsRequestParams): string {\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v4/message-center/messages/drafts${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Returns message thread (conversation) by root message in conversation id.\n     * Returns message thread (conversation) by root message in conversation id. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageThread(requestParameters: GetMessageThreadRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<MessageThreadGetResponseBody>;\n    /**\n     * Returns message thread (conversation) by root message in conversation id.\n     * Returns message thread (conversation) by root message in conversation id. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageThread(requestParameters: GetMessageThreadRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<MessageThreadGetResponseBody>>;\n    /**\n     * Returns message thread (conversation) by root message in conversation id.\n     * Returns message thread (conversation) by root message in conversation id. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageThread(requestParameters: GetMessageThreadRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<MessageThreadGetResponseBody>>;\n    /**\n     * Returns message thread (conversation) by root message in conversation id.\n     * Returns message thread (conversation) by root message in conversation id. Content of messages is Base64 encoded and contains HTML tags. Subjects may contain Unicode characters. Both should be treated as HTML (e.g. set with innerHTML). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessageThread(requestParameters: GetMessageThreadRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _messageId = requestParameters[\"messageId\"];\n        if (_messageId === null || _messageId === undefined) {\n            throw new Error('Required parameter messageId was null or undefined when calling getMessageThread.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<MessageThreadGetResponseBody>(`${this.configuration.basePath}/client-api/v4/message-center/messages/${encodeURIComponent(String(_messageId))}/conversation`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getMessageThreadUrl(requestParameters: GetMessageThreadRequestParams): string {\n        const _messageId = requestParameters[\"messageId\"];\n        if (_messageId === null || _messageId === undefined) {\n            throw new Error('Required parameter messageId was null or undefined when calling getMessageThread.');\n        }\n        return `${this.configuration.basePath}/client-api/v4/message-center/messages/${encodeURIComponent(String(_messageId))}/conversation`;\n    }\n\n    /**\n     * Returns a list of available topics. Each topic is associated with a list of subscribers. Selection of a topic.\n     * Returns a list of available topics. Each topic is associated with a list of subscribers. Selection of a topic determines a target destination of a message as well. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTopics(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<TopicsGetResponseBody>>;\n    /**\n     * Returns a list of available topics. Each topic is associated with a list of subscribers. Selection of a topic.\n     * Returns a list of available topics. Each topic is associated with a list of subscribers. Selection of a topic determines a target destination of a message as well. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTopics(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<TopicsGetResponseBody>>>;\n    /**\n     * Returns a list of available topics. Each topic is associated with a list of subscribers. Selection of a topic.\n     * Returns a list of available topics. Each topic is associated with a list of subscribers. Selection of a topic determines a target destination of a message as well. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTopics(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<TopicsGetResponseBody>>>;\n    /**\n     * Returns a list of available topics. Each topic is associated with a list of subscribers. Selection of a topic.\n     * Returns a list of available topics. Each topic is associated with a list of subscribers. Selection of a topic determines a target destination of a message as well. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTopics(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<TopicsGetResponseBody>>(`${this.configuration.basePath}/client-api/v4/message-center/topics`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getTopicsUrl(): string {\n        return `${this.configuration.basePath}/client-api/v4/message-center/topics`;\n    }\n\n    /**\n     * Returns a total number of unread conversations for the given user.\n     * Returns a total number of unread conversations for the given user\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUnreadConversationsCount(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<UnreadConversationsGetResponseBody>;\n    /**\n     * Returns a total number of unread conversations for the given user.\n     * Returns a total number of unread conversations for the given user\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUnreadConversationsCount(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<UnreadConversationsGetResponseBody>>;\n    /**\n     * Returns a total number of unread conversations for the given user.\n     * Returns a total number of unread conversations for the given user\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUnreadConversationsCount(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<UnreadConversationsGetResponseBody>>;\n    /**\n     * Returns a total number of unread conversations for the given user.\n     * Returns a total number of unread conversations for the given user\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUnreadConversationsCount(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<UnreadConversationsGetResponseBody>(`${this.configuration.basePath}/client-api/v4/message-center/messages/unread-conversation-count`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getUnreadConversationsCountUrl(): string {\n        return `${this.configuration.basePath}/client-api/v4/message-center/messages/unread-conversation-count`;\n    }\n\n    /**\n     * Creates the conversation draft.\n     * Creates the conversation draft\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postConversationMessageDraft(requestParameters: PostConversationMessageDraftRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<DraftPostResponseBody>;\n    /**\n     * Creates the conversation draft.\n     * Creates the conversation draft\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postConversationMessageDraft(requestParameters: PostConversationMessageDraftRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<DraftPostResponseBody>>;\n    /**\n     * Creates the conversation draft.\n     * Creates the conversation draft\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postConversationMessageDraft(requestParameters: PostConversationMessageDraftRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<DraftPostResponseBody>>;\n    /**\n     * Creates the conversation draft.\n     * Creates the conversation draft\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postConversationMessageDraft(requestParameters: PostConversationMessageDraftRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _messageId = requestParameters[\"messageId\"];\n        if (_messageId === null || _messageId === undefined) {\n            throw new Error('Required parameter messageId was null or undefined when calling postConversationMessageDraft.');\n        }\n        const _conversationMessageDraftPostRequestBody = requestParameters[\"conversationMessageDraftPostRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<DraftPostResponseBody>(`${this.configuration.basePath}/client-api/v4/message-center/messages/${encodeURIComponent(String(_messageId))}/conversation/drafts`,\n            _conversationMessageDraftPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postConversationMessageDraftUrl(requestParameters: PostConversationMessageDraftRequestParams): string {\n        const _messageId = requestParameters[\"messageId\"];\n        if (_messageId === null || _messageId === undefined) {\n            throw new Error('Required parameter messageId was null or undefined when calling postConversationMessageDraft.');\n        }\n        const _conversationMessageDraftPostRequestBody = requestParameters[\"conversationMessageDraftPostRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/message-center/messages/${encodeURIComponent(String(_messageId))}/conversation/drafts`;\n    }\n\n    /**\n     * Uploads message binary attachment.\n     * Uploads message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageAttachments(requestParameters: PostMessageAttachmentsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Metadata>;\n    /**\n     * Uploads message binary attachment.\n     * Uploads message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageAttachments(requestParameters: PostMessageAttachmentsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Metadata>>;\n    /**\n     * Uploads message binary attachment.\n     * Uploads message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageAttachments(requestParameters: PostMessageAttachmentsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Metadata>>;\n    /**\n     * Uploads message binary attachment.\n     * Uploads message binary attachment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageAttachments(requestParameters: PostMessageAttachmentsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _messageId = requestParameters[\"messageId\"];\n        const _attachment = requestParameters[\"attachment\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_messageId !== undefined && _messageId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_messageId, 'messageId');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'multipart/form-data'\n        ];\n\n        const canConsumeForm = this.canConsumeForm(consumes);\n\n        let formParams: { append(param: string, value: any): any; };\n        let useForm = false;\n        let convertFormParamsToString = false;\n        // use FormData to transmit files using content-type \"multipart/form-data\"\n        // see https://stackoverflow.com/questions/4007969/application-x-www-form-urlencoded-or-multipart-form-data\n        useForm = canConsumeForm;\n        if (useForm) {\n            formParams = new FormData();\n        } else {\n            formParams = new HttpParams({encoder: this.encoder});\n        }\n\n        if (_attachment !== undefined) {\n            formParams = formParams.append('attachment', <any>_attachment) as any || formParams;\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<Metadata>(`${this.configuration.basePath}/client-api/v4/message-center/attachments`,\n            convertFormParamsToString ? formParams.toString() : formParams,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postMessageAttachmentsUrl(requestParameters: PostMessageAttachmentsRequestParams): string {\n        const _messageId = requestParameters[\"messageId\"];\n        const _attachment = requestParameters[\"attachment\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_messageId !== undefined && _messageId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_messageId, 'messageId');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v4/message-center/attachments${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Creates a draft.\n     * Creates a draft\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageDrafts(requestParameters: PostMessageDraftsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<DraftPostResponseBody>;\n    /**\n     * Creates a draft.\n     * Creates a draft\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageDrafts(requestParameters: PostMessageDraftsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<DraftPostResponseBody>>;\n    /**\n     * Creates a draft.\n     * Creates a draft\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageDrafts(requestParameters: PostMessageDraftsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<DraftPostResponseBody>>;\n    /**\n     * Creates a draft.\n     * Creates a draft\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageDrafts(requestParameters: PostMessageDraftsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _messageDraftsPostRequestBody = requestParameters[\"messageDraftsPostRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<DraftPostResponseBody>(`${this.configuration.basePath}/client-api/v4/message-center/messages/drafts`,\n            _messageDraftsPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postMessageDraftsUrl(requestParameters: PostMessageDraftsRequestParams): string {\n        const _messageDraftsPostRequestBody = requestParameters[\"messageDraftsPostRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/message-center/messages/drafts`;\n    }\n\n    /**\n     * Send a reply message within message thread/conversation.\n     * Send a reply message within message thread/conversation\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageReply(requestParameters: PostMessageReplyRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationMessagePostResponseBody>;\n    /**\n     * Send a reply message within message thread/conversation.\n     * Send a reply message within message thread/conversation\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageReply(requestParameters: PostMessageReplyRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationMessagePostResponseBody>>;\n    /**\n     * Send a reply message within message thread/conversation.\n     * Send a reply message within message thread/conversation\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageReply(requestParameters: PostMessageReplyRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationMessagePostResponseBody>>;\n    /**\n     * Send a reply message within message thread/conversation.\n     * Send a reply message within message thread/conversation\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessageReply(requestParameters: PostMessageReplyRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _messageId = requestParameters[\"messageId\"];\n        if (_messageId === null || _messageId === undefined) {\n            throw new Error('Required parameter messageId was null or undefined when calling postMessageReply.');\n        }\n        const _messageReplyPostRequestBody = requestParameters[\"messageReplyPostRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<PresentationMessagePostResponseBody>(`${this.configuration.basePath}/client-api/v4/message-center/messages/${encodeURIComponent(String(_messageId))}/reply`,\n            _messageReplyPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postMessageReplyUrl(requestParameters: PostMessageReplyRequestParams): string {\n        const _messageId = requestParameters[\"messageId\"];\n        if (_messageId === null || _messageId === undefined) {\n            throw new Error('Required parameter messageId was null or undefined when calling postMessageReply.');\n        }\n        const _messageReplyPostRequestBody = requestParameters[\"messageReplyPostRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/message-center/messages/${encodeURIComponent(String(_messageId))}/reply`;\n    }\n\n    /**\n     * Create a root message of a conversation.\n     * Create a root message of a conversation.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessages(requestParameters: PostMessagesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PresentationMessagePostResponseBody>;\n    /**\n     * Create a root message of a conversation.\n     * Create a root message of a conversation.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessages(requestParameters: PostMessagesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PresentationMessagePostResponseBody>>;\n    /**\n     * Create a root message of a conversation.\n     * Create a root message of a conversation.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessages(requestParameters: PostMessagesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PresentationMessagePostResponseBody>>;\n    /**\n     * Create a root message of a conversation.\n     * Create a root message of a conversation.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postMessages(requestParameters: PostMessagesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _presentationMessagePostRequestBody = requestParameters[\"presentationMessagePostRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<PresentationMessagePostResponseBody>(`${this.configuration.basePath}/client-api/v4/message-center/messages`,\n            _presentationMessagePostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postMessagesUrl(requestParameters: PostMessagesRequestParams): string {\n        const _presentationMessagePostRequestBody = requestParameters[\"presentationMessagePostRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/message-center/messages`;\n    }\n\n    /**\n     * Updates the conversation draft\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putConversationMessageDraft(requestParameters: PutConversationMessageDraftRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Updates the conversation draft\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putConversationMessageDraft(requestParameters: PutConversationMessageDraftRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Updates the conversation draft\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putConversationMessageDraft(requestParameters: PutConversationMessageDraftRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Updates the conversation draft\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putConversationMessageDraft(requestParameters: PutConversationMessageDraftRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _messageId = requestParameters[\"messageId\"];\n        if (_messageId === null || _messageId === undefined) {\n            throw new Error('Required parameter messageId was null or undefined when calling putConversationMessageDraft.');\n        }\n        const _conversationMessageDraftPutRequestBody = requestParameters[\"conversationMessageDraftPutRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v4/message-center/messages/${encodeURIComponent(String(_messageId))}/conversation/drafts`,\n            _conversationMessageDraftPutRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putConversationMessageDraftUrl(requestParameters: PutConversationMessageDraftRequestParams): string {\n        const _messageId = requestParameters[\"messageId\"];\n        if (_messageId === null || _messageId === undefined) {\n            throw new Error('Required parameter messageId was null or undefined when calling putConversationMessageDraft.');\n        }\n        const _conversationMessageDraftPutRequestBody = requestParameters[\"conversationMessageDraftPutRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/message-center/messages/${encodeURIComponent(String(_messageId))}/conversation/drafts`;\n    }\n\n    /**\n     * Mark conversations as read or unread.\n     * Mark conversations as read or unread.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMarkAsReadUnread(requestParameters: PutMarkAsReadUnreadRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<MarkAsReadUnreadPutResponseBody>;\n    /**\n     * Mark conversations as read or unread.\n     * Mark conversations as read or unread.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMarkAsReadUnread(requestParameters: PutMarkAsReadUnreadRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<MarkAsReadUnreadPutResponseBody>>;\n    /**\n     * Mark conversations as read or unread.\n     * Mark conversations as read or unread.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMarkAsReadUnread(requestParameters: PutMarkAsReadUnreadRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<MarkAsReadUnreadPutResponseBody>>;\n    /**\n     * Mark conversations as read or unread.\n     * Mark conversations as read or unread.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMarkAsReadUnread(requestParameters: PutMarkAsReadUnreadRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _markAsReadUnreadPutRequestBody = requestParameters[\"markAsReadUnreadPutRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<MarkAsReadUnreadPutResponseBody>(`${this.configuration.basePath}/client-api/v4/message-center/messages/conversations/read`,\n            _markAsReadUnreadPutRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putMarkAsReadUnreadUrl(requestParameters: PutMarkAsReadUnreadRequestParams): string {\n        const _markAsReadUnreadPutRequestBody = requestParameters[\"markAsReadUnreadPutRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/message-center/messages/conversations/read`;\n    }\n\n    /**\n     * Puts draft by id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMessageDraft(requestParameters: PutMessageDraftRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Puts draft by id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMessageDraft(requestParameters: PutMessageDraftRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Puts draft by id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMessageDraft(requestParameters: PutMessageDraftRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Puts draft by id\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMessageDraft(requestParameters: PutMessageDraftRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _draftId = requestParameters[\"draftId\"];\n        if (_draftId === null || _draftId === undefined) {\n            throw new Error('Required parameter draftId was null or undefined when calling putMessageDraft.');\n        }\n        const _messageDraftPutRequestBody = requestParameters[\"messageDraftPutRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v4/message-center/messages/drafts/${encodeURIComponent(String(_draftId))}`,\n            _messageDraftPutRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putMessageDraftUrl(requestParameters: PutMessageDraftRequestParams): string {\n        const _draftId = requestParameters[\"draftId\"];\n        if (_draftId === null || _draftId === undefined) {\n            throw new Error('Required parameter draftId was null or undefined when calling putMessageDraft.');\n        }\n        const _messageDraftPutRequestBody = requestParameters[\"messageDraftPutRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v4/message-center/messages/drafts/${encodeURIComponent(String(_draftId))}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v4/message-center/messages/conversations URL pattern\n*/\nexport const MessagecenterHttpServiceDeleteConversationThreadsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/message-center/messages/conversations\",\n        method: \"DELETE\",\n        responses: [\n                {\n                    status: 202,\n                    body: {\n  \"deletedItems\" : [ \"e92bbe7d-10cf-4d7c-b7b5-eadb7632812a\", \"58ee5037-8dce-43ab-b734-e2b90a189b81\" ],\n  \"failedItems\" : [ \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\" ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/message-center/attachments URL pattern\n*/\nexport const MessagecenterHttpServiceDeleteMessageAttachmentsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/message-center/attachments\",\n        method: \"DELETE\",\n        responses: [\n                {\n                    status: 202,\n                    body: {\n  \"deleted\" : [ \"e92bbe7d-10cf-4d7c-b7b5-eadb7632812a\", \"58ee5037-8dce-43ab-b734-e2b90a189b81\" ],\n  \"failed\" : [ \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\" ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/message-center/messages/drafts URL pattern\n*/\nexport const MessagecenterHttpServiceDeleteMessageDraftsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/message-center/messages/drafts\",\n        method: \"DELETE\",\n        responses: [\n                {\n                    status: 202,\n                    body: {\n  \"deleted\" : [ \"e92bbe7d-10cf-4d7c-b7b5-eadb7632812a\", \"58ee5037-8dce-43ab-b734-e2b90a189b81\" ],\n  \"failed\" : [ \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\" ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/message-center/messages/conversations URL pattern\n*/\nexport const MessagecenterHttpServiceGetConversationThreadsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/message-center/messages/conversations\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"uuid\" : \"2ca7990f-bcda-4eba-8763-03bf7c66cf3f\"\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/message-center/attachments/{attachmentId} URL pattern\n*/\nexport const MessagecenterHttpServiceGetMessageAttachmentMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/message-center/attachments/{attachmentId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/message-center/messages/drafts/{draftId} URL pattern\n*/\nexport const MessagecenterHttpServiceGetMessageDraftMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/message-center/messages/drafts/{draftId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"attachments\" : [ {\n    \"createdAt\" : \"2017-10-02T10:51:50.000+0000\",\n    \"filename\" : \"message-attachment-filename.pdf\",\n    \"id\" : \"5d869ea0-d3a3-4b83-888f-767bdcdcd565\",\n    \"size\" : 2592836\n  }, {\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"filename\" : \"another-message-attachment-filename.pdf\",\n    \"id\" : \"ae4658a4-073c-4d8b-ab5d-55e9238d3ff0\",\n    \"size\" : 15982836\n  } ],\n  \"body\" : \"VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+\",\n  \"id\" : \"754cd7fd-a9dd-489e-9933-4f0ef556a5cd\",\n  \"subject\" : \"Draft subject\",\n  \"timestamp\" : \"2019-11-18T10:51:50.000+0000\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"40219526-aa79-4a81-a0a5-ffd12ffed8a3\",\n    \"name\" : \"Mortgage application\"\n  }\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/message-center/messages/drafts URL pattern\n*/\nexport const MessagecenterHttpServiceGetMessageDraftsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/message-center/messages/drafts\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"body\" : \"VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+\",\n  \"conversationId\" : \"f57684de-2a63-4646-ace3-bf83b3ef74ct\",\n  \"hasAttachments\" : false,\n  \"id\" : \"7da6b793-bb3b-411d-b10e-21c0ca205cb2\",\n  \"subject\" : \"Conversation with draft\",\n  \"timestamp\" : \"2019-11-18T11:23:50.000+0000\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"4fb026ec-62e5-41c8-aa28-149d7544b704\",\n    \"name\" : \"Problems with making a payment\"\n  }\n}, {\n  \"body\" : \"VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+\",\n  \"hasAttachments\" : true,\n  \"id\" : \"754cd7fd-a9dd-489e-9933-4f0ef556a5cd\",\n  \"subject\" : \"Draft subject\",\n  \"timestamp\" : \"2019-11-17T10:51:50.000+0000\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"40219526-aa79-4a81-a0a5-ffd12ffed8a3\",\n    \"name\" : \"Mortgage application\"\n  }\n}, {\n  \"body\" : \"VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+\",\n  \"hasAttachments\" : false,\n  \"id\" : \"f57684de-2a63-4646-ace3-bf83b3ef74cc\",\n  \"subject\" : \"Draft 2 subject\",\n  \"timestamp\" : \"2019-11-18T11:23:50.000+0000\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"40219526-aa79-4a81-a0a5-ffd12ffed8a3\",\n    \"name\" : \"Mortgage application\"\n  }\n}, {\n  \"body\" : \"VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+\",\n  \"conversationId\" : \"f57684de-2a63-4646-ace3-bf83b3ef74ce\",\n  \"hasAttachments\" : true,\n  \"id\" : \"f29d7a93-337b-4bb4-856d-5a65ba4d1038\",\n  \"subject\" : \"Conversation with draft 2\",\n  \"timestamp\" : \"2019-11-18T11:23:50.000+0000\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n    \"name\" : \"Loans\"\n  }\n} ]\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/message-center/messages/{messageId}/conversation URL pattern\n*/\nexport const MessagecenterHttpServiceGetMessageThreadMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/message-center/messages/{messageId}/conversation\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"attachments\" : [ {\n    \"createdAt\" : \"2017-10-02T10:51:50.000+0000\",\n    \"filename\" : \"message-attachment-filename.pdf\",\n    \"id\" : \"5d869ea0-d3a3-4b83-888f-767bdcdcd565\",\n    \"size\" : 2592836\n  }, {\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"filename\" : \"another-message-attachment-filename.pdf\",\n    \"id\" : \"ae4658a4-073c-4d8b-ab5d-55e9238d3ff0\",\n    \"size\" : 15982836\n  } ],\n  \"deletable\" : true,\n  \"draft\" : {\n    \"attachments\" : [ {\n      \"createdAt\" : \"2017-10-10T17:21:30.000+0000\",\n      \"filename\" : \"draft-message-attachment-filename.pdf\",\n      \"id\" : \"1b4e4fa5-51b7-4907-b130-ea4f26e36a3d\",\n      \"size\" : 15982836\n    } ],\n    \"body\" : \"VGhlIGNhc3RsZSB3YXMgdXNlZCBhcyBhIHNwZWNpYWwgc3RhZ2UgaW4gdGhlIDxiPjIwMTM8L2I+IFdhbGVzIFJhbGx5IEdCLiA8ZGl2PjxpPjxiPjx1Pjxicj48L3U+PC9iPjwvaT48L2Rpdj48ZGl2PjxpPjxiPjx1PlRoZSBPYWsgYXQgdGhlIEdhdGUgb2YgdGhlIERlYWQ8L3U+PC9iPjwvaT4gbGllcyAzMDBtIGZyb20gPGI+Q2hpcmsgQ2FzdGxlPC9iPiBhbmQgbWFya3MgdGhlIHNpdGUgb2YgdGhlIDExNjUgPGI+QmF0dGxlIG9mIENyb2dlbjwvYj4uPC9kaXY+\",\n    \"createdAt\" : \"2017-10-10T17:51:35.000+0000\",\n    \"id\" : \"jfg94kf-f4ed-4a6e-bc19-6ennt17395e3\"\n  },\n  \"important\" : true,\n  \"messages\" : [ {\n    \"body\" : \"VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+\",\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\",\n    \"isMyMessage\" : true,\n    \"sender\" : {\n      \"id\" : \"97234tyi23rfiy325r3i7r\",\n      \"name\" : \"John Doe\"\n    }\n  }, {\n    \"body\" : \"PGRpdj48b2w+PGxpPkNhc3RsZXMgaW4gR3JlYXQgQnJpdGFpbiBhbmQgSXJlbGFuZDxicj48L2xpPjxsaT5MaXN0IG9mIGNhc3RsZXMgaW4gV2FsZXM8YnI+PC9saT48bGk+TGlzdCBvZiBnYXJkZW5zIGluIFdhbGVzPGJyPjwvbGk+PC9vbD48L2Rpdj4=\",\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e1\",\n    \"isMyMessage\" : false,\n    \"sender\" : {\n      \"id\" : \"97234tyi23rfiy325r3i72\",\n      \"name\" : \"John Doe 2\"\n    }\n  }, {\n    \"attachments\" : [ {\n      \"createdAt\" : \"2017-10-02T10:51:50.000+0000\",\n      \"filename\" : \"message-attachment-filename.pdf\",\n      \"id\" : \"5d869ea0-d3a3-4b83-888f-767bdcdcd565\",\n      \"size\" : 2592836\n    } ],\n    \"body\" : \"PGRpdj48b2w+PGxpPiA8Yj4iQ2hpcmsgQ2FzdGxlLCBDaGlyayI8L2I+LiBCcml0aXNoIExpc3RlZCBidWlsZGluZ3MuIFJldHJpZXZlZCAyMyBKdWx5IDIwMTUuPGJyPjwvbGk+PGxpPiA8Yj4iQ2hpcmsgQ2FzdGxlIOKAkyBPZmZpY2lhbCBHdWlkZWJvb2siLjwvYj4gQ2FzdGxlIFdhbGVzLjxicj48L2xpPjxsaT4gPGI+IkNoaXJrIENhc3RsZSIuPC9iPiBOYXRpb25hbCBUcnVzdC48YnI+PC9saT48bGk+IDxiPiJUaGUgT2FrIGF0IHRoZSBHYXRlIG9mIHRoZSBEZWFkIjwvYj4uIFBlb3BsZSdzIENvbGxlY3Rpb24gV2FsZXMuIFJldHJpZXZlZCAxIE1hcmNoIDIwMTguPGJyPjwvbGk+PC9vbD48L2Rpdj4=\",\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e2\",\n    \"isMyMessage\" : true,\n    \"sender\" : {\n      \"id\" : \"97234tyi23rfiy325r3i73\",\n      \"name\" : \"John Doe 3\"\n    }\n  }, {\n    \"attachments\" : [ {\n      \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n      \"filename\" : \"another-message-attachment-filename.pdf\",\n      \"id\" : \"ae4658a4-073c-4d8b-ab5d-55e9238d3ff0\",\n      \"size\" : 15982836\n    } ],\n    \"body\" : \"VGhlIGNhc3RsZSB3YXMgdXNlZCBhcyBhIHNwZWNpYWwgc3RhZ2UgaW4gdGhlIDxiPjIwMTM8L2I+IFdhbGVzIFJhbGx5IEdCLiA8ZGl2PjxpPjxiPjx1Pjxicj48L3U+PC9iPjwvaT48L2Rpdj48ZGl2PjxpPjxiPjx1PlRoZSBPYWsgYXQgdGhlIEdhdGUgb2YgdGhlIERlYWQ8L3U+PC9iPjwvaT4gbGllcyAzMDBtIGZyb20gPGI+Q2hpcmsgQ2FzdGxlPC9iPiBhbmQgbWFya3MgdGhlIHNpdGUgb2YgdGhlIDExNjUgPGI+QmF0dGxlIG9mIENyb2dlbjwvYj4uPC9kaXY+\",\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e3\",\n    \"isMyMessage\" : false,\n    \"sender\" : {\n      \"id\" : \"97234tyi23rfiy325r3i74\",\n      \"name\" : \"John Doe 4\"\n    }\n  } ],\n  \"read\" : false,\n  \"read-only\" : false,\n  \"rootMessageId\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\",\n  \"subject\" : \"Application Rejected (your efforts are futile)\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n    \"name\" : \"Savings\"\n  }\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/message-center/topics URL pattern\n*/\nexport const MessagecenterHttpServiceGetTopicsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/message-center/topics\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"code\" : \"40219526-aa79-4a81-a0a5-ffd12ffed8a3\",\n  \"id\" : \"40219526-aa79-4a81-a0a5-ffd12ffed8a3\",\n  \"name\" : \"Mortgage application\"\n}, {\n  \"code\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n  \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n  \"name\" : \"Loans\"\n}, {\n  \"code\" : \"4fb026ec-62e5-41c8-aa28-149d7544b704\",\n  \"id\" : \"4fb026ec-62e5-41c8-aa28-149d7544b704\",\n  \"name\" : \"Problems with making a payment\"\n} ]\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/message-center/messages/unread-conversation-count URL pattern\n*/\nexport const MessagecenterHttpServiceGetUnreadConversationsCountMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/message-center/messages/unread-conversation-count\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"unreadCount\" : 5\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/message-center/messages/{messageId}/conversation/drafts URL pattern\n*/\nexport const MessagecenterHttpServicePostConversationMessageDraftMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/message-center/messages/{messageId}/conversation/drafts\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"id\" : \"754cd7fd-a9dd-489e-9933-4f0ef556a5cd\"\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/message-center/attachments URL pattern\n*/\nexport const MessagecenterHttpServicePostMessageAttachmentsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/message-center/attachments\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n  \"filename\" : \"message-attachment-filename.pdf\",\n  \"id\" : \"ae4658a4-073c-4d8b-ab5d-55e9238d3ff0\",\n  \"size\" : 15982836\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/message-center/messages/drafts URL pattern\n*/\nexport const MessagecenterHttpServicePostMessageDraftsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/message-center/messages/drafts\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"id\" : \"754cd7fd-a9dd-489e-9933-4f0ef556a5cd\"\n}\n                },\n                {\n                    status: 201,\n                    body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"id\" : \"id\"\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/message-center/messages/{messageId}/reply URL pattern\n*/\nexport const MessagecenterHttpServicePostMessageReplyMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/message-center/messages/{messageId}/reply\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 202,\n                    body: {\n  \"id\" : \"2ca7990f-bcda-4eba-8763-03bf7c66cf3f\"\n}\n                },\n                {\n                    status: 202,\n                    body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"id\" : \"id\"\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/message-center/messages URL pattern\n*/\nexport const MessagecenterHttpServicePostMessagesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/message-center/messages\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"2ca7990f-bcda-4eba-8763-03bf7c66cf3f\"\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/message-center/messages/{messageId}/conversation/drafts URL pattern\n*/\nexport const MessagecenterHttpServicePutConversationMessageDraftMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/message-center/messages/{messageId}/conversation/drafts\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 202,\n                    body: { }\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/message-center/messages/conversations/read URL pattern\n*/\nexport const MessagecenterHttpServicePutMarkAsReadUnreadMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/message-center/messages/conversations/read\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"changedItems\" : [ \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395b7\" ],\n  \"failedItems\" : [ \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\" ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v4/message-center/messages/drafts/{draftId} URL pattern\n*/\nexport const MessagecenterHttpServicePutMessageDraftMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v4/message-center/messages/drafts/{draftId}\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 202,\n                    body: { }\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const MessagecenterHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v4/message-center/messages/conversations\",\n        method: \"DELETE\",\n        responses: [\n\n            {\n                status: 202,\n                body: {\n  \"deletedItems\" : [ \"e92bbe7d-10cf-4d7c-b7b5-eadb7632812a\", \"58ee5037-8dce-43ab-b734-e2b90a189b81\" ],\n  \"failedItems\" : [ \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\" ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/message-center/attachments\",\n        method: \"DELETE\",\n        responses: [\n\n            {\n                status: 202,\n                body: {\n  \"deleted\" : [ \"e92bbe7d-10cf-4d7c-b7b5-eadb7632812a\", \"58ee5037-8dce-43ab-b734-e2b90a189b81\" ],\n  \"failed\" : [ \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\" ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/message-center/messages/drafts\",\n        method: \"DELETE\",\n        responses: [\n\n            {\n                status: 202,\n                body: {\n  \"deleted\" : [ \"e92bbe7d-10cf-4d7c-b7b5-eadb7632812a\", \"58ee5037-8dce-43ab-b734-e2b90a189b81\" ],\n  \"failed\" : [ \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\" ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/message-center/messages/conversations\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"uuid\" : \"2ca7990f-bcda-4eba-8763-03bf7c66cf3f\"\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/message-center/attachments/{attachmentId}\",\n        method: \"GET\",\n        responses: [\n\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/message-center/messages/drafts/{draftId}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"attachments\" : [ {\n    \"createdAt\" : \"2017-10-02T10:51:50.000+0000\",\n    \"filename\" : \"message-attachment-filename.pdf\",\n    \"id\" : \"5d869ea0-d3a3-4b83-888f-767bdcdcd565\",\n    \"size\" : 2592836\n  }, {\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"filename\" : \"another-message-attachment-filename.pdf\",\n    \"id\" : \"ae4658a4-073c-4d8b-ab5d-55e9238d3ff0\",\n    \"size\" : 15982836\n  } ],\n  \"body\" : \"VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+\",\n  \"id\" : \"754cd7fd-a9dd-489e-9933-4f0ef556a5cd\",\n  \"subject\" : \"Draft subject\",\n  \"timestamp\" : \"2019-11-18T10:51:50.000+0000\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"40219526-aa79-4a81-a0a5-ffd12ffed8a3\",\n    \"name\" : \"Mortgage application\"\n  }\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/message-center/messages/drafts\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"body\" : \"VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+\",\n  \"conversationId\" : \"f57684de-2a63-4646-ace3-bf83b3ef74ct\",\n  \"hasAttachments\" : false,\n  \"id\" : \"7da6b793-bb3b-411d-b10e-21c0ca205cb2\",\n  \"subject\" : \"Conversation with draft\",\n  \"timestamp\" : \"2019-11-18T11:23:50.000+0000\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"4fb026ec-62e5-41c8-aa28-149d7544b704\",\n    \"name\" : \"Problems with making a payment\"\n  }\n}, {\n  \"body\" : \"VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+\",\n  \"hasAttachments\" : true,\n  \"id\" : \"754cd7fd-a9dd-489e-9933-4f0ef556a5cd\",\n  \"subject\" : \"Draft subject\",\n  \"timestamp\" : \"2019-11-17T10:51:50.000+0000\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"40219526-aa79-4a81-a0a5-ffd12ffed8a3\",\n    \"name\" : \"Mortgage application\"\n  }\n}, {\n  \"body\" : \"VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+\",\n  \"hasAttachments\" : false,\n  \"id\" : \"f57684de-2a63-4646-ace3-bf83b3ef74cc\",\n  \"subject\" : \"Draft 2 subject\",\n  \"timestamp\" : \"2019-11-18T11:23:50.000+0000\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"40219526-aa79-4a81-a0a5-ffd12ffed8a3\",\n    \"name\" : \"Mortgage application\"\n  }\n}, {\n  \"body\" : \"VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+\",\n  \"conversationId\" : \"f57684de-2a63-4646-ace3-bf83b3ef74ce\",\n  \"hasAttachments\" : true,\n  \"id\" : \"f29d7a93-337b-4bb4-856d-5a65ba4d1038\",\n  \"subject\" : \"Conversation with draft 2\",\n  \"timestamp\" : \"2019-11-18T11:23:50.000+0000\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n    \"name\" : \"Loans\"\n  }\n} ]\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/message-center/messages/{messageId}/conversation\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"attachments\" : [ {\n    \"createdAt\" : \"2017-10-02T10:51:50.000+0000\",\n    \"filename\" : \"message-attachment-filename.pdf\",\n    \"id\" : \"5d869ea0-d3a3-4b83-888f-767bdcdcd565\",\n    \"size\" : 2592836\n  }, {\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"filename\" : \"another-message-attachment-filename.pdf\",\n    \"id\" : \"ae4658a4-073c-4d8b-ab5d-55e9238d3ff0\",\n    \"size\" : 15982836\n  } ],\n  \"deletable\" : true,\n  \"draft\" : {\n    \"attachments\" : [ {\n      \"createdAt\" : \"2017-10-10T17:21:30.000+0000\",\n      \"filename\" : \"draft-message-attachment-filename.pdf\",\n      \"id\" : \"1b4e4fa5-51b7-4907-b130-ea4f26e36a3d\",\n      \"size\" : 15982836\n    } ],\n    \"body\" : \"VGhlIGNhc3RsZSB3YXMgdXNlZCBhcyBhIHNwZWNpYWwgc3RhZ2UgaW4gdGhlIDxiPjIwMTM8L2I+IFdhbGVzIFJhbGx5IEdCLiA8ZGl2PjxpPjxiPjx1Pjxicj48L3U+PC9iPjwvaT48L2Rpdj48ZGl2PjxpPjxiPjx1PlRoZSBPYWsgYXQgdGhlIEdhdGUgb2YgdGhlIERlYWQ8L3U+PC9iPjwvaT4gbGllcyAzMDBtIGZyb20gPGI+Q2hpcmsgQ2FzdGxlPC9iPiBhbmQgbWFya3MgdGhlIHNpdGUgb2YgdGhlIDExNjUgPGI+QmF0dGxlIG9mIENyb2dlbjwvYj4uPC9kaXY+\",\n    \"createdAt\" : \"2017-10-10T17:51:35.000+0000\",\n    \"id\" : \"jfg94kf-f4ed-4a6e-bc19-6ennt17395e3\"\n  },\n  \"important\" : true,\n  \"messages\" : [ {\n    \"body\" : \"VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+\",\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\",\n    \"isMyMessage\" : true,\n    \"sender\" : {\n      \"id\" : \"97234tyi23rfiy325r3i7r\",\n      \"name\" : \"John Doe\"\n    }\n  }, {\n    \"body\" : \"PGRpdj48b2w+PGxpPkNhc3RsZXMgaW4gR3JlYXQgQnJpdGFpbiBhbmQgSXJlbGFuZDxicj48L2xpPjxsaT5MaXN0IG9mIGNhc3RsZXMgaW4gV2FsZXM8YnI+PC9saT48bGk+TGlzdCBvZiBnYXJkZW5zIGluIFdhbGVzPGJyPjwvbGk+PC9vbD48L2Rpdj4=\",\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e1\",\n    \"isMyMessage\" : false,\n    \"sender\" : {\n      \"id\" : \"97234tyi23rfiy325r3i72\",\n      \"name\" : \"John Doe 2\"\n    }\n  }, {\n    \"attachments\" : [ {\n      \"createdAt\" : \"2017-10-02T10:51:50.000+0000\",\n      \"filename\" : \"message-attachment-filename.pdf\",\n      \"id\" : \"5d869ea0-d3a3-4b83-888f-767bdcdcd565\",\n      \"size\" : 2592836\n    } ],\n    \"body\" : \"PGRpdj48b2w+PGxpPiA8Yj4iQ2hpcmsgQ2FzdGxlLCBDaGlyayI8L2I+LiBCcml0aXNoIExpc3RlZCBidWlsZGluZ3MuIFJldHJpZXZlZCAyMyBKdWx5IDIwMTUuPGJyPjwvbGk+PGxpPiA8Yj4iQ2hpcmsgQ2FzdGxlIOKAkyBPZmZpY2lhbCBHdWlkZWJvb2siLjwvYj4gQ2FzdGxlIFdhbGVzLjxicj48L2xpPjxsaT4gPGI+IkNoaXJrIENhc3RsZSIuPC9iPiBOYXRpb25hbCBUcnVzdC48YnI+PC9saT48bGk+IDxiPiJUaGUgT2FrIGF0IHRoZSBHYXRlIG9mIHRoZSBEZWFkIjwvYj4uIFBlb3BsZSdzIENvbGxlY3Rpb24gV2FsZXMuIFJldHJpZXZlZCAxIE1hcmNoIDIwMTguPGJyPjwvbGk+PC9vbD48L2Rpdj4=\",\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e2\",\n    \"isMyMessage\" : true,\n    \"sender\" : {\n      \"id\" : \"97234tyi23rfiy325r3i73\",\n      \"name\" : \"John Doe 3\"\n    }\n  }, {\n    \"attachments\" : [ {\n      \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n      \"filename\" : \"another-message-attachment-filename.pdf\",\n      \"id\" : \"ae4658a4-073c-4d8b-ab5d-55e9238d3ff0\",\n      \"size\" : 15982836\n    } ],\n    \"body\" : \"VGhlIGNhc3RsZSB3YXMgdXNlZCBhcyBhIHNwZWNpYWwgc3RhZ2UgaW4gdGhlIDxiPjIwMTM8L2I+IFdhbGVzIFJhbGx5IEdCLiA8ZGl2PjxpPjxiPjx1Pjxicj48L3U+PC9iPjwvaT48L2Rpdj48ZGl2PjxpPjxiPjx1PlRoZSBPYWsgYXQgdGhlIEdhdGUgb2YgdGhlIERlYWQ8L3U+PC9iPjwvaT4gbGllcyAzMDBtIGZyb20gPGI+Q2hpcmsgQ2FzdGxlPC9iPiBhbmQgbWFya3MgdGhlIHNpdGUgb2YgdGhlIDExNjUgPGI+QmF0dGxlIG9mIENyb2dlbjwvYj4uPC9kaXY+\",\n    \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n    \"id\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e3\",\n    \"isMyMessage\" : false,\n    \"sender\" : {\n      \"id\" : \"97234tyi23rfiy325r3i74\",\n      \"name\" : \"John Doe 4\"\n    }\n  } ],\n  \"read\" : false,\n  \"read-only\" : false,\n  \"rootMessageId\" : \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\",\n  \"subject\" : \"Application Rejected (your efforts are futile)\",\n  \"topic\" : {\n    \"deleted\" : false,\n    \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n    \"name\" : \"Savings\"\n  }\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/message-center/topics\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"code\" : \"40219526-aa79-4a81-a0a5-ffd12ffed8a3\",\n  \"id\" : \"40219526-aa79-4a81-a0a5-ffd12ffed8a3\",\n  \"name\" : \"Mortgage application\"\n}, {\n  \"code\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n  \"id\" : \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\",\n  \"name\" : \"Loans\"\n}, {\n  \"code\" : \"4fb026ec-62e5-41c8-aa28-149d7544b704\",\n  \"id\" : \"4fb026ec-62e5-41c8-aa28-149d7544b704\",\n  \"name\" : \"Problems with making a payment\"\n} ]\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/message-center/messages/unread-conversation-count\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"unreadCount\" : 5\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/message-center/messages/{messageId}/conversation/drafts\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"id\" : \"754cd7fd-a9dd-489e-9933-4f0ef556a5cd\"\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/message-center/attachments\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"createdAt\" : \"2017-10-02T10:51:30.000+0000\",\n  \"filename\" : \"message-attachment-filename.pdf\",\n  \"id\" : \"ae4658a4-073c-4d8b-ab5d-55e9238d3ff0\",\n  \"size\" : 15982836\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/message-center/messages/drafts\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"id\" : \"754cd7fd-a9dd-489e-9933-4f0ef556a5cd\"\n}\n            },\n            {\n                status: 201,\n                body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"id\" : \"id\"\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/message-center/messages/{messageId}/reply\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 202,\n                body: {\n  \"id\" : \"2ca7990f-bcda-4eba-8763-03bf7c66cf3f\"\n}\n            },\n            {\n                status: 202,\n                body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"id\" : \"id\"\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/message-center/messages\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"2ca7990f-bcda-4eba-8763-03bf7c66cf3f\"\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/message-center/messages/{messageId}/conversation/drafts\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 202,\n                body: { }\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/message-center/messages/conversations/read\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"changedItems\" : [ \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395b7\" ],\n  \"failedItems\" : [ \"b0069a89-3dcb-4bdc-b7da-fc65643064a6\", \"ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9\" ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v4/message-center/messages/drafts/{draftId}\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 202,\n                body: { }\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":["MarkAsReadUnreadPutRequestBody","InjectionToken","NgModule","Optional","SkipSelf","HttpHeaders","HttpParams","Injectable","Inject","createMocks"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;QAmBa,aAAa,GAAG;QACzB,OAAO,EAAE,SAA0B;QACnC,SAAS,EAAE,WAA4B;QACvC,KAAK,EAAE,OAAwB;QAC/B,UAAU,EAAE,YAA6B;QACzC,IAAI,EAAE,MAAuB;QAC7B,KAAK,EAAE,OAAwB;QAC/B,qBAAqB,EAAE,yBAA0C;QACjE,SAAS,EAAE,WAA4B;;;ACI1BA,oDAMhB;IAND,WAAiB,8BAA8B;QAE9B,yCAAU,GAAG;YACtB,IAAI,EAAE,MAAoB;YAC1B,MAAM,EAAE,QAAsB;SACjC,CAAC;IACN,CAAC,EANgBA,sCAA8B,KAA9BA,sCAA8B;;QCZlC,cAAc,GAAG;QAC1B,GAAG,EAAE,KAAuB;QAC5B,UAAU,EAAE,aAA+B;QAC3C,QAAQ,EAAE,UAA4B;;;QCpB7B,kBAAkB,GAAG,IAAIC,iBAAc,CAAS,oBAAoB,EAAE;QACtE,kBAAkB,GAAG;QAC9B,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,GAAG;QACV,OAAO,EAAE,GAAG;;;;QC4BZ,+BAAY,uBAA6D;YAA7D,wCAAA,EAAA,4BAA6D;YACrE,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC,OAAO,CAAC;YAC/C,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC,QAAQ,CAAC;YACjD,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC,QAAQ,CAAC;YACjD,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC,WAAW,CAAC;YACvD,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC,QAAQ,CAAC;YACjD,IAAI,CAAC,eAAe,GAAG,uBAAuB,CAAC,eAAe,CAAC;YAC/D,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC,OAAO,CAAC;YAC/C,IAAI,uBAAuB,CAAC,WAAW,EAAE;gBACrC,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC,WAAW,CAAC;aAC1D;iBACI;gBACD,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;aACzB;SACJ;QASM,uDAAuB,GAAvB,UAAyB,YAAsB;YAA/C,iBAUN;YATG,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC3B,OAAO,SAAS,CAAC;aACpB;YAED,IAAM,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,UAAC,CAAS,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;YAClE,IAAI,IAAI,KAAK,SAAS,EAAE;gBACpB,OAAO,YAAY,CAAC,CAAC,CAAC,CAAC;aAC1B;YACD,OAAO,IAAI,CAAC;SACf;QASM,kDAAkB,GAAlB,UAAmB,OAAiB;YAApC,iBAUN;YATG,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtB,OAAO,SAAS,CAAC;aACpB;YAED,IAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,UAAC,CAAS,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;YAC7D,IAAI,IAAI,KAAK,SAAS,EAAE;gBACpB,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;aACrB;YACD,OAAO,IAAI,CAAC;SACf;QAYM,0CAAU,GAAV,UAAW,IAAY;YAC1B,IAAM,QAAQ,GAAW,IAAI,MAAM,CAAC,+DAA+D,EAAE,GAAG,CAAC,CAAC;YAC1G,OAAO,IAAI,KAAK,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE,KAAK,6BAA6B,CAAC,CAAC;SACzG;QAEM,gDAAgB,GAAhB,UAAiB,GAAW;YAC/B,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACpC,OAAO,OAAO,KAAK,KAAK,UAAU;kBAC5B,KAAK,EAAE;kBACP,KAAK,CAAC;SACf;oCACJ;KAAA,IAAA;QAEY,YAAY,GAAG,IAAIA,iBAAc,CAAC,uCAAuC;;;QC5FlF,2BAAqC,YAA+B,EAC3C,IAAgB,EAChB,kBAA6C,EACzD,MAA6B;YAGtC,IAAI,YAAY,EAAE;gBACd,MAAM,IAAI,KAAK,CAAC,0EAA0E,CAAC,CAAC;aAC/F;YACD,IAAI,CAAC,IAAI,EAAE;gBACP,MAAM,IAAI,KAAK,CAAC,+DAA+D;oBAC/E,0DAA0D,CAAC,CAAC;aAC/D;YAED,IAAI,kBAAkB,EAAE;gBACpB,kBAAkB,CAAC,eAAe,CAAC,YAAY,EAAE;oBAC7C,OAAO,EAAE,EAAE;oBACX,WAAW,EAAE,MAAM,CAAC,QAAQ,IAAI,EAAE;oBAClC,OAAO,EAAE,EAAE;iBACd,CAAC,CAAC;aACN;SACJ;QA5Ba,yBAAO,GAAd,UAAe,oBAAiD;YACnE,OAAO;gBACH,QAAQ,EAAE,iBAAiB;gBAC3B,SAAS,EAAE,CAAE,EAAE,OAAO,EAAE,qBAAqB,EAAE,UAAU,EAAE,oBAAoB,EAAE,CAAE;aACtF,CAAC;SACL;;;yIANQ,iBAAiB,kBAQyB,iBAAiB;0IAR3D,iBAAiB;0IAAjB,iBAAiB,aAFd,EAAE,YAHF,EAAE;sHAKL,iBAAiB;sBAN7BC,WAAQ;uBAAC;wBACR,OAAO,EAAO,EAAE;wBAChB,YAAY,EAAE,EAAE;wBAChB,OAAO,EAAO,EAAE;wBAChB,SAAS,EAAK,EAAE;qBACjB;;4BASsD,iBAAiB;kCAAtDC,WAAQ;;kCAAIC,WAAQ;;kCACpBD,WAAQ;;kCACRA,WAAQ;;;;ICtB1B;;;;;;;;;;;;;;IAcA;IAEA,IAAI,aAAa,GAAG,UAAS,CAAC,EAAE,CAAC;QAC7B,aAAa,GAAG,MAAM,CAAC,cAAc;aAChC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;YAC5E,UAAU,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;gBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;oBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACtG,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;aAEc,SAAS,CAAC,CAAC,EAAE,CAAC;QAC1B,IAAI,OAAO,CAAC,KAAK,UAAU,IAAI,CAAC,KAAK,IAAI;YACrC,MAAM,IAAI,SAAS,CAAC,sBAAsB,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,+BAA+B,CAAC,CAAC;QAC9F,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,SAAS,EAAE,KAAK,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;QACvC,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;IAEM,IAAI,QAAQ,GAAG;QAClB,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAC;YAC3C,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjD,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAK,IAAI,CAAC,IAAI,CAAC;oBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;wBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aAChF;YACD,OAAO,CAAC,CAAC;SACZ,CAAA;QACD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3C,CAAC,CAAA;aAEe,MAAM,CAAC,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,KAAK,IAAI,CAAC,IAAI,CAAC;YAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;gBAC/E,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,IAAI,IAAI,OAAO,MAAM,CAAC,qBAAqB,KAAK,UAAU;YAC/D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpE,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACzB;QACL,OAAO,CAAC,CAAC;IACb,CAAC;aAEe,UAAU,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI;QACpD,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;QAC7H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;YAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;;YAC1H,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;gBAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;oBAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;QAClJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClE,CAAC;aAEe,OAAO,CAAC,UAAU,EAAE,SAAS;QACzC,OAAO,UAAU,MAAM,EAAE,GAAG,IAAI,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,CAAA;IACzE,CAAC;aAEe,UAAU,CAAC,WAAW,EAAE,aAAa;QACjD,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;YAAE,OAAO,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IACnI,CAAC;aAEe,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS;QACvD,SAAS,KAAK,CAAC,KAAK,IAAI,OAAO,KAAK,YAAY,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;QAC5G,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM;YACrD,SAAS,SAAS,CAAC,KAAK,IAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aAAE;YAAC,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aAAE,EAAE;YAC3F,SAAS,QAAQ,CAAC,KAAK,IAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aAAE;YAAC,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aAAE,EAAE;YAC9F,SAAS,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;YAC9G,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;SACzE,CAAC,CAAC;IACP,CAAC;aAEe,WAAW,CAAC,OAAO,EAAE,IAAI;QACrC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,cAAa,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACjH,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,MAAM,KAAK,UAAU,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,cAAa,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACzJ,SAAS,IAAI,CAAC,CAAC,IAAI,OAAO,UAAU,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;QAClE,SAAS,IAAI,CAAC,EAAE;YACZ,IAAI,CAAC;gBAAE,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAC;YAC9D,OAAO,CAAC;gBAAE,IAAI;oBACV,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI;wBAAE,OAAO,CAAC,CAAC;oBAC7J,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;wBAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;oBACxC,QAAQ,EAAE,CAAC,CAAC,CAAC;wBACT,KAAK,CAAC,CAAC;wBAAC,KAAK,CAAC;4BAAE,CAAC,GAAG,EAAE,CAAC;4BAAC,MAAM;wBAC9B,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;4BAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;wBACxD,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;4BAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;4BAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;4BAAC,SAAS;wBACjD,KAAK,CAAC;4BAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;4BAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;wBACjD;4BACI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;gCAAE,CAAC,GAAG,CAAC,CAAC;gCAAC,SAAS;6BAAE;4BAC5G,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gCAAC,MAAM;6BAAE;4BACtF,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAAC,CAAC,GAAG,EAAE,CAAC;gCAAC,MAAM;6BAAE;4BACrE,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gCAAC,MAAM;6BAAE;4BACnE,IAAI,CAAC,CAAC,CAAC,CAAC;gCAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;4BACtB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;qBAC9B;oBACD,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;iBAC9B;gBAAC,OAAO,CAAC,EAAE;oBAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAAC,CAAC,GAAG,CAAC,CAAC;iBAAE;wBAAS;oBAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBAAE;YAC1D,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;YAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;SACpF;IACL,CAAC;IAEM,IAAI,eAAe,GAAG,MAAM,CAAC,MAAM,IAAI,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;QAC9D,IAAI,EAAE,KAAK,SAAS;YAAE,EAAE,GAAG,CAAC,CAAC;QAC7B,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,cAAa,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC,KAAK,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;QACtB,IAAI,EAAE,KAAK,SAAS;YAAE,EAAE,GAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC;aAEa,YAAY,CAAC,CAAC,EAAE,CAAC;QAC7B,KAAK,IAAI,CAAC,IAAI,CAAC;YAAE,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;gBAAE,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAClH,CAAC;aAEe,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAC9E,IAAI,CAAC;YAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ;YAAE,OAAO;gBAC1C,IAAI,EAAE;oBACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM;wBAAE,CAAC,GAAG,KAAK,CAAC,CAAC;oBACnC,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;iBAC3C;aACJ,CAAC;QACF,MAAM,IAAI,SAAS,CAAC,CAAC,GAAG,yBAAyB,GAAG,iCAAiC,CAAC,CAAC;IAC3F,CAAC;aAEe,MAAM,CAAC,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,CAAC;YAAE,OAAO,CAAC,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACjC,IAAI;YACA,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;gBAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SAC9E;QACD,OAAO,KAAK,EAAE;YAAE,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;SAAE;gBAC/B;YACJ,IAAI;gBACA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACpD;oBACO;gBAAE,IAAI,CAAC;oBAAE,MAAM,CAAC,CAAC,KAAK,CAAC;aAAE;SACpC;QACD,OAAO,EAAE,CAAC;IACd,CAAC;IAED;aACgB,QAAQ;QACpB,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;YAC9C,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,OAAO,EAAE,CAAC;IACd,CAAC;IAED;aACgB,cAAc;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;YAAE,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QACpF,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;YAC5C,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;gBAC7D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,OAAO,CAAC,CAAC;IACb,CAAC;aAEe,aAAa,CAAC,EAAE,EAAE,IAAI;QAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;YAC7D,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,OAAO,EAAE,CAAC;IACd,CAAC;aAEe,OAAO,CAAC,CAAC;QACrB,OAAO,IAAI,YAAY,OAAO,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;IACzE,CAAC;aAEe,gBAAgB,CAAC,OAAO,EAAE,UAAU,EAAE,SAAS;QAC3D,IAAI,CAAC,MAAM,CAAC,aAAa;YAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;QACvF,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QAC9D,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QACtH,SAAS,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;YAAE,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;QAC1I,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI;YAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAAE;QAAC,OAAO,CAAC,EAAE;YAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAAE,EAAE;QAClF,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,YAAY,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;QACxH,SAAS,OAAO,CAAC,KAAK,IAAI,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,EAAE;QAClD,SAAS,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,EAAE;QAClD,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,MAAM;YAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACtF,CAAC;aAEe,gBAAgB,CAAC,CAAC;QAC9B,IAAI,CAAC,EAAE,CAAC,CAAC;QACT,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5I,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IACnJ,CAAC;aAEe,aAAa,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,aAAa;YAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;QACvF,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACjN,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;QAChK,SAAS,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAS,CAAC,IAAI,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE;IAChI,CAAC;aAEe,oBAAoB,CAAC,MAAM,EAAE,GAAG;QAC5C,IAAI,MAAM,CAAC,cAAc,EAAE;YAAE,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;SAAE;aAAM;YAAE,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;SAAE;QAC/G,OAAO,MAAM,CAAC;IAClB,CAAC;IAAA,CAAC;IAEF,IAAI,kBAAkB,GAAG,MAAM,CAAC,MAAM,IAAI,UAAS,CAAC,EAAE,CAAC;QACnD,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IACxE,CAAC,IAAI,UAAS,CAAC,EAAE,CAAC;QACd,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC,CAAC;aAEc,YAAY,CAAC,GAAG;QAC5B,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU;YAAE,OAAO,GAAG,CAAC;QACtC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,GAAG,IAAI,IAAI;YAAE,KAAK,IAAI,CAAC,IAAI,GAAG;gBAAE,IAAI,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;oBAAE,eAAe,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACzI,kBAAkB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAChC,OAAO,MAAM,CAAC;IAClB,CAAC;aAEe,eAAe,CAAC,GAAG;QAC/B,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;IAC5D,CAAC;aAEe,sBAAsB,CAAC,QAAQ,EAAE,UAAU;QACvD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YAC3B,MAAM,IAAI,SAAS,CAAC,gDAAgD,CAAC,CAAC;SACzE;QACD,OAAO,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;aAEe,sBAAsB,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK;QAC9D,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YAC3B,MAAM,IAAI,SAAS,CAAC,gDAAgD,CAAC,CAAC;SACzE;QACD,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAChC,OAAO,KAAK,CAAC;IACjB;;ICtOA;QAAA;SAaC;QAZG,4CAAS,GAAT,UAAU,CAAS;YACf,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;SAChC;QACD,8CAAW,GAAX,UAAY,CAAS;YACjB,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;SAChC;QACD,4CAAS,GAAT,UAAU,CAAS;YACf,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;SAChC;QACD,8CAAW,GAAX,UAAY,CAAS;YACjB,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;SAChC;uCACJ;KAAA;;;QCqPG,6BAAsB,UAAsB,EAA0C,QAAgB,EAAc,aAAoC;YAAlI,eAAU,GAAV,UAAU,CAAY;YALlC,aAAQ,GAAG,EAAE,CAAC;YACjB,mBAAc,GAAG,IAAIE,cAAW,EAAE,CAAC;YACnC,kBAAa,GAAG,IAAI,qBAAqB,EAAE,CAAC;YAI/C,IAAI,aAAa,EAAE;gBACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;aACtC;YACD,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBACjD,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;oBAC9B,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;iBAC5B;gBACD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;aAC1C;YACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,wBAAwB,EAAE,CAAC;SAC/E;QAMO,4CAAc,GAAd,UAAe,QAAkB;;YACrC,IAAM,IAAI,GAAG,qBAAqB,CAAC;;gBACnC,KAAsB,IAAA,aAAA,SAAA,QAAQ,CAAA,kCAAA,wDAAE;oBAA3B,IAAM,OAAO,qBAAA;oBACd,IAAI,IAAI,KAAK,OAAO,EAAE;wBAClB,OAAO,IAAI,CAAC;qBACf;iBACJ;;;;;;;;;YACD,OAAO,KAAK,CAAC;SAChB;QAEO,6CAAe,GAAf,UAAgB,UAAsB,EAAE,KAAU,EAAE,GAAY;YACpE,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,YAAY,IAAI,KAAK,KAAK,EAAE;gBAC9D,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;aACjE;iBAAM;gBACH,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;aACtE;YACD,OAAO,UAAU,CAAC;SACrB;QAEO,sDAAwB,GAAxB,UAAyB,UAAsB,EAAE,KAAW,EAAE,GAAY;YAA1E,iBAyBP;YAxBG,IAAI,KAAK,IAAI,IAAI,EAAE;gBACf,OAAO,UAAU,CAAC;aACrB;YAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACrB,KAAe,CAAC,OAAO,CAAE,UAAA,IAAI,IAAI,OAAA,UAAU,GAAG,KAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,IAAI,EAAE,GAAG,CAAC,GAAA,CAAC,CAAC;iBACxG;qBAAM,IAAI,KAAK,YAAY,IAAI,EAAE;oBAC9B,IAAI,GAAG,IAAI,IAAI,EAAE;wBACb,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAC7B,KAAc,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;qBACpD;yBAAM;wBACJ,MAAM,KAAK,CAAC,sCAAsC,CAAC,CAAC;qBACtD;iBACJ;qBAAM;oBACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAE,UAAA,CAAC,IAAI,OAAA,UAAU,GAAG,KAAI,CAAC,wBAAwB,CACvE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,IAAI,GAAM,GAAG,SAAI,CAAG,GAAG,CAAC,CAAC,GAAA,CAAC,CAAC;iBAC/D;aACJ;iBAAM,IAAI,GAAG,IAAI,IAAI,EAAE;gBACpB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;aAC9C;iBAAM;gBACH,MAAM,KAAK,CAAC,qDAAqD,CAAC,CAAC;aACtE;YACD,OAAO,UAAU,CAAC;SACrB;QAiCM,0DAA4B,GAA5B,UAA6B,iBAA4D,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAApM,iBA4CN;YA5CiG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACpJ,IAAM,IAAI,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACrC,MAAM,IAAI,KAAK,CAAC,yFAAyF,CAAC,CAAC;aAC9G;YAED,IAAI,eAAe,GAAG,IAAIC,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,OAAO,CAAC,UAAC,OAAO;oBACjB,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,OAAO,EAAE,KAAK,CAAC,CAAC;iBAC1B,CAAC,CAAA;aACL;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAA8C,IAAI,CAAC,aAAa,CAAC,QAAQ,gDAA6C,EAC/I;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,6DAA+B,GAA/B,UAAgC,iBAA4D;YAA5F,iBAcN;YAbG,IAAM,IAAI,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACrC,MAAM,IAAI,KAAK,CAAC,yFAAyF,CAAC,CAAC;aAC9G;YACD,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,OAAO,CAAC,UAAC,OAAO;oBACjB,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,OAAO,EAAE,KAAK,CAAC,CAAC;iBAC1B,CAAC,CAAA;aACL;YACD,IAAM,WAAW,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;YAC/C,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,oDAA8C,WAAW,GAAG,MAAI,WAAa,GAAG,EAAE,CAAE,CAAC;SAC7H;QAiCM,8DAAgC,GAAhC,UAAiC,iBAAgE,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAA5M,iBA4CN;YA5CyG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC5J,IAAM,IAAI,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACrC,MAAM,IAAI,KAAK,CAAC,6FAA6F,CAAC,CAAC;aAClH;YAED,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,OAAO,CAAC,UAAC,OAAO;oBACjB,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,OAAO,EAAE,KAAK,CAAC,CAAC;iBAC1B,CAAC,CAAA;aACL;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAwB,IAAI,CAAC,aAAa,CAAC,QAAQ,wCAAqC,EACjH;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,iEAAmC,GAAnC,UAAoC,iBAAgE;YAApG,iBAcN;YAbG,IAAM,IAAI,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACrC,MAAM,IAAI,KAAK,CAAC,6FAA6F,CAAC,CAAC;aAClH;YACD,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,OAAO,CAAC,UAAC,OAAO;oBACjB,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,OAAO,EAAE,KAAK,CAAC,CAAC;iBAC1B,CAAC,CAAA;aACL;YACD,IAAM,WAAW,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;YAC/C,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,4CAAsC,WAAW,GAAG,MAAI,WAAa,GAAG,EAAE,CAAE,CAAC;SACrH;QAiCM,gDAAkB,GAAlB,UAAmB,iBAAkD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAChI,IAAM,eAAe,GAAG,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;YAC5D,IAAI,eAAe,KAAK,IAAI,IAAI,eAAe,KAAK,SAAS,EAAE;gBAC3D,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;aAC/G;YACD,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC,CAAC;aACxG;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAS,IAAI,CAAC,aAAa,CAAC,QAAQ,uCAAkC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAkB,kBAAkB,CAAC,MAAM,CAAC,eAAe,CAAC,CAAG,EAClM;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,mDAAqB,GAArB,UAAsB,iBAAkD;YAC3E,IAAM,eAAe,GAAG,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;YAC5D,IAAI,eAAe,KAAK,IAAI,IAAI,eAAe,KAAK,SAAS,EAAE;gBAC3D,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;aAC/G;YACD,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC,CAAC;aACxG;YACD,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,uCAAkC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAkB,kBAAkB,CAAC,MAAM,CAAC,eAAe,CAAC,CAAG,CAAC;SAC9K;QAiCM,yCAAW,GAAX,UAAY,iBAA2C,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAClH,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,4EAA4E,CAAC,CAAC;aACjG;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAS,IAAI,CAAC,aAAa,CAAC,QAAQ,uCAAkC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAG,EACrI;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,4CAAc,GAAd,UAAe,iBAA2C;YAC7D,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,4EAA4E,CAAC,CAAC;aACjG;YACD,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,uCAAkC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAG,CAAC;SACjH;QAiCM,4DAA8B,GAA9B,UAA+B,iBAA8D,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACxJ,IAAM,YAAY,GAAG,iBAAiB,CAAC,aAAa,CAAC,CAAC;YACtD,IAAM,SAAS,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAC;YAChD,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAElD,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACvD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,YAAY,EAAE,aAAa,CAAC,CAAC;aACrC;YACD,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBACjD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,SAAS,EAAE,UAAU,CAAC,CAAC;aAC/B;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAC/C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,QAAQ,EAAE,SAAS,CAAC,CAAC;aAC7B;YACD,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE;gBACnD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,UAAU,EAAE,WAAW,CAAC,CAAC;aACjC;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAuC,IAAI,CAAC,aAAa,CAAC,QAAQ,0CAAuC,EAC/H;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,+DAAiC,GAAjC,UAAkC,iBAA8D;YACnG,IAAM,YAAY,GAAG,iBAAiB,CAAC,aAAa,CAAC,CAAC;YACtD,IAAM,SAAS,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAC;YAChD,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACvD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,YAAY,EAAE,aAAa,CAAC,CAAC;aACrC;YACD,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBACjD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,SAAS,EAAE,UAAU,CAAC,CAAC;aAC/B;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAC/C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,QAAQ,EAAE,SAAS,CAAC,CAAC;aAC7B;YACD,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE;gBACnD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,UAAU,EAAE,WAAW,CAAC,CAAC;aACjC;YACD,IAAM,WAAW,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;YAC/C,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,8CAAwC,WAAW,GAAG,MAAI,WAAa,GAAG,EAAE,CAAE,CAAC;SACvH;QA6BM,qDAAuB,GAAvB,UAAwB,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAEjF,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAqC,IAAI,CAAC,aAAa,CAAC,QAAQ,mDAAgD,EACtI;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,wDAA0B,GAA1B;YACH,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,mDAAgD,CAAC;SACzF;QAiCM,oDAAsB,GAAtB,UAAuB,iBAAsD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACxI,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAM,SAAS,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAC;YAChD,IAAM,eAAe,GAAG,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;YAC5D,IAAM,SAAS,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAC;YAChD,IAAM,OAAO,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YAC5C,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YAExC,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE;gBACnD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,UAAU,EAAE,WAAW,CAAC,CAAC;aACjC;YACD,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAC/C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,QAAQ,EAAE,SAAS,CAAC,CAAC;aAC7B;YACD,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBACjD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,SAAS,EAAE,UAAU,CAAC,CAAC;aAC/B;YACD,IAAI,eAAe,KAAK,SAAS,IAAI,eAAe,KAAK,IAAI,EAAE;gBAC7D,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,eAAe,EAAE,gBAAgB,CAAC,CAAC;aAC3C;YACD,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBACjD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,SAAS,EAAE,UAAU,CAAC,CAAC;aAC/B;YACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC7C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,OAAO,EAAE,QAAQ,CAAC,CAAC;aAC3B;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAiC,IAAI,CAAC,aAAa,CAAC,QAAQ,iDAA8C,EAChI;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,uDAAyB,GAAzB,UAA0B,iBAAsD;YACnF,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAM,SAAS,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAC;YAChD,IAAM,eAAe,GAAG,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;YAC5D,IAAM,SAAS,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAC;YAChD,IAAM,OAAO,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YAC5C,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE;gBACnD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,UAAU,EAAE,WAAW,CAAC,CAAC;aACjC;YACD,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAC/C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,QAAQ,EAAE,SAAS,CAAC,CAAC;aAC7B;YACD,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBACjD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,SAAS,EAAE,UAAU,CAAC,CAAC;aAC/B;YACD,IAAI,eAAe,KAAK,SAAS,IAAI,eAAe,KAAK,IAAI,EAAE;gBAC7D,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,eAAe,EAAE,gBAAgB,CAAC,CAAC;aAC3C;YACD,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBACjD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,SAAS,EAAE,UAAU,CAAC,CAAC;aAC/B;YACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC7C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,OAAO,EAAE,QAAQ,CAAC,CAAC;aAC3B;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAM,WAAW,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;YAC/C,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,qDAA+C,WAAW,GAAG,MAAI,WAAa,GAAG,EAAE,CAAE,CAAC;SAC9H;QAiCM,sDAAwB,GAAxB,UAAyB,iBAAwD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC5I,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,2FAA2F,CAAC,CAAC;aAChH;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAyB,IAAI,CAAC,aAAa,CAAC,QAAQ,yCAAoC,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,kBAAe,EACnK;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,yDAA2B,GAA3B,UAA4B,iBAAwD;YACvF,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,2FAA2F,CAAC,CAAC;aAChH;YACD,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,yCAAoC,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,kBAAe,CAAC;SAClI;QAyDM,0DAA4B,GAA5B,UAA6B,iBAA4D,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAA8E;YAAtI,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACpJ,IAAM,aAAa,GAAG,iBAAiB,CAAC,cAAc,CAAC,CAAC;YACxD,IAAI,aAAa,KAAK,IAAI,IAAI,aAAa,KAAK,SAAS,EAAE;gBACvD,MAAM,IAAI,KAAK,CAAC,kGAAkG,CAAC,CAAC;aACvH;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,0BAA0B;oBAC1B,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,4CAAuC,kBAAkB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAG,EACvI;gBACI,YAAY,EAAE,MAAM;gBACpB,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,6DAA+B,GAA/B,UAAgC,iBAA4D;YAC/F,IAAM,aAAa,GAAG,iBAAiB,CAAC,cAAc,CAAC,CAAC;YACxD,IAAI,aAAa,KAAK,IAAI,IAAI,aAAa,KAAK,SAAS,EAAE;gBACvD,MAAM,IAAI,KAAK,CAAC,kGAAkG,CAAC,CAAC;aACvH;YACD,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,4CAAuC,kBAAkB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAG,CAAC;SAC3H;QAiCM,oDAAsB,GAAtB,UAAuB,iBAAsD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACxI,IAAM,OAAO,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YAC5C,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YAExC,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC7C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,OAAO,EAAE,QAAQ,CAAC,CAAC;aAC3B;YACD,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAC/C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,QAAQ,EAAE,SAAS,CAAC,CAAC;aAC7B;YACD,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE;gBACnD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,UAAU,EAAE,WAAW,CAAC,CAAC;aACjC;YACD,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAC/C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,QAAQ,EAAE,SAAS,CAAC,CAAC;aAC7B;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAuC,IAAI,CAAC,aAAa,CAAC,QAAQ,iDAA8C,EACtI;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,uDAAyB,GAAzB,UAA0B,iBAAsD;YACnF,IAAM,OAAO,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YAC5C,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC7C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,OAAO,EAAE,QAAQ,CAAC,CAAC;aAC3B;YACD,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAC/C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,QAAQ,EAAE,SAAS,CAAC,CAAC;aAC7B;YACD,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE;gBACnD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,UAAU,EAAE,WAAW,CAAC,CAAC;aACjC;YACD,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAC/C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,QAAQ,EAAE,SAAS,CAAC,CAAC;aAC7B;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAM,WAAW,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;YAC/C,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,qDAA+C,WAAW,GAAG,MAAI,WAAa,GAAG,EAAE,CAAE,CAAC;SAC9H;QAiCM,8CAAgB,GAAhB,UAAiB,iBAAgD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC5H,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,iFAAiF,CAAC,CAAC;aACtG;YACD,IAAM,eAAe,GAAG,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;YAC5D,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YAExC,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,eAAe,KAAK,SAAS,IAAI,eAAe,KAAK,IAAI,EAAE;gBAC7D,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,eAAe,EAAE,gBAAgB,CAAC,CAAC;aAC3C;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAyC,IAAI,CAAC,aAAa,CAAC,QAAQ,uCAAkC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAgB,EAChL;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,iDAAmB,GAAnB,UAAoB,iBAAgD;YACvE,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,iFAAiF,CAAC,CAAC;aACtG;YACD,IAAM,eAAe,GAAG,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;YAC5D,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,eAAe,KAAK,SAAS,IAAI,eAAe,KAAK,IAAI,EAAE;gBAC7D,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,eAAe,EAAE,gBAAgB,CAAC,CAAC;aAC3C;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAM,WAAW,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;YAC/C,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,uCAAkC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAiB,WAAW,GAAG,MAAI,WAAa,GAAG,EAAE,CAAE,CAAC;SACtK;QAiCM,sCAAQ,GAAR,UAAS,iBAAwC,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC5G,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,yEAAyE,CAAC,CAAC;aAC9F;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA0B,IAAI,CAAC,aAAa,CAAC,QAAQ,uCAAkC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAG,EACnJ;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,yCAAW,GAAX,UAAY,iBAAwC;YACvD,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,yEAAyE,CAAC,CAAC;aAC9F;YACD,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,uCAAkC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAG,CAAC;SACjH;QAiCM,+CAAiB,GAAjB,UAAkB,iBAAiD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC9H,IAAM,WAAW,GAAG,iBAAiB,CAAC,YAAY,CAAC,CAAC;YACpD,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YAExC,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACrD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,WAAW,EAAE,YAAY,CAAC,CAAC;aACnC;YACD,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAC/C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,QAAQ,EAAE,SAAS,CAAC,CAAC;aAC7B;YACD,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE;gBACnD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,UAAU,EAAE,WAAW,CAAC,CAAC;aACjC;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA0C,IAAI,CAAC,aAAa,CAAC,QAAQ,mCAAgC,EAC3H;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,kDAAoB,GAApB,UAAqB,iBAAiD;YACzE,IAAM,WAAW,GAAG,iBAAiB,CAAC,YAAY,CAAC,CAAC;YACpD,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACrD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,WAAW,EAAE,YAAY,CAAC,CAAC;aACnC;YACD,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAC/C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,QAAQ,EAAE,SAAS,CAAC,CAAC;aAC7B;YACD,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE;gBACnD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,UAAU,EAAE,WAAW,CAAC,CAAC;aACjC;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAM,WAAW,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;YAC/C,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,uCAAiC,WAAW,GAAG,MAAI,WAAa,GAAG,EAAE,CAAE,CAAC;SAChH;QAiCM,4DAA8B,GAA9B,UAA+B,iBAA8D,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACxJ,IAAM,WAAW,GAAG,iBAAiB,CAAC,YAAY,CAAC,CAAC;YAEpD,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAM,QAAQ,GAAa;gBACvB,qBAAqB;aACxB,CAAC;YAEF,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAErD,IAAI,UAAuD,CAAC;YAC5D,IAAI,OAAO,GAAG,KAAK,CAAC;YACpB,IAAI,yBAAyB,GAAG,KAAK,CAAC;YAGtC,OAAO,GAAG,cAAc,CAAC;YACzB,IAAI,OAAO,EAAE;gBACT,UAAU,GAAG,IAAI,QAAQ,EAAE,CAAC;aAC/B;iBAAM;gBACH,UAAU,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;aACxD;YAED,IAAI,WAAW,KAAK,SAAS,EAAE;gBAC3B,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,YAAY,EAAO,WAAW,CAAQ,IAAI,UAAU,CAAC;aACvF;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAc,IAAI,CAAC,aAAa,CAAC,QAAQ,wCAAqC,EACrG,yBAAyB,GAAG,UAAU,CAAC,QAAQ,EAAE,GAAG,UAAU,EAC9D;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,+DAAiC,GAAjC,UAAkC,iBAA8D;YACnG,IAAM,WAAW,GAAG,iBAAiB,CAAC,YAAY,CAAC,CAAC;YACpD,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,wCAAqC,CAAC;SAC9E;QAiCM,sDAAwB,GAAxB,UAAyB,iBAAwD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC5I,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,2FAA2F,CAAC,CAAC;aAChH;YACD,IAAM,4BAA4B,GAAG,iBAAiB,CAAC,6BAA6B,CAAC,CAAC;YAEtF,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAyC,IAAI,CAAC,aAAa,CAAC,QAAQ,yCAAoC,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,WAAQ,EAC7K,4BAA4B,EAC5B;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,yDAA2B,GAA3B,UAA4B,iBAAwD;YACvF,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,2FAA2F,CAAC,CAAC;aAChH;YACD,IAAM,4BAA4B,GAAG,iBAAiB,CAAC,6BAA6B,CAAC,CAAC;YACtF,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,yCAAoC,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,WAAQ,CAAC;SAC3H;QAiCM,kDAAoB,GAApB,UAAqB,iBAAoD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACpI,IAAM,2CAA2C,GAAG,iBAAiB,CAAC,4CAA4C,CAAC,CAAC;YAEpH,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAyC,IAAI,CAAC,aAAa,CAAC,QAAQ,qCAAkC,EAC7H,2CAA2C,EAC3C;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,qDAAuB,GAAvB,UAAwB,iBAAoD;YAC/E,IAAM,2CAA2C,GAAG,iBAAiB,CAAC,4CAA4C,CAAC,CAAC;YACpH,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,qCAAkC,CAAC;SAC3E;QAiCM,6CAAe,GAAf,UAAgB,iBAA+C,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC1H,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;aACrG;YACD,IAAM,2BAA2B,GAAG,iBAAiB,CAAC,4BAA4B,CAAC,CAAC;YAEpF,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAwC,IAAI,CAAC,aAAa,CAAC,QAAQ,uCAAkC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAc,EAC9K,2BAA2B,EAC3B;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,gDAAkB,GAAlB,UAAmB,iBAA+C;YACrE,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;aACrG;YACD,IAAM,2BAA2B,GAAG,iBAAiB,CAAC,4BAA4B,CAAC,CAAC;YACpF,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,uCAAkC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAc,CAAC;SAC7H;QAiCM,+CAAiB,GAAjB,UAAkB,iBAAiD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC9H,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,kFAAkF,CAAC,CAAC;aACvG;YACD,IAAM,6BAA6B,GAAG,iBAAiB,CAAC,8BAA8B,CAAC,CAAC;YAExF,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAmC,IAAI,CAAC,aAAa,CAAC,QAAQ,uCAAkC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAgB,EAC3K,6BAA6B,EAC7B;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,kDAAoB,GAApB,UAAqB,iBAAiD;YACzE,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,kFAAkF,CAAC,CAAC;aACvG;YACD,IAAM,6BAA6B,GAAG,iBAAiB,CAAC,8BAA8B,CAAC,CAAC;YACxF,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,uCAAkC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAgB,CAAC;SAC/H;QAiCM,wCAAU,GAAV,UAAW,iBAA0C,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAChH,IAAM,sBAAsB,GAAG,iBAAiB,CAAC,uBAAuB,CAAC,CAAC;YAE1E,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAoC,IAAI,CAAC,aAAa,CAAC,QAAQ,mCAAgC,EACtH,sBAAsB,EACtB;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,2CAAa,GAAb,UAAc,iBAA0C;YAC3D,IAAM,sBAAsB,GAAG,iBAAiB,CAAC,uBAAuB,CAAC,CAAC;YAC1E,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,mCAAgC,CAAC;SACzE;QAiCM,mDAAqB,GAArB,UAAsB,iBAAqD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACtI,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,wFAAwF,CAAC,CAAC;aAC7G;YACD,IAAM,mCAAmC,GAAG,iBAAiB,CAAC,oCAAoC,CAAC,CAAC;YAEpG,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAyC,IAAI,CAAC,aAAa,CAAC,QAAQ,yCAAoC,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,YAAS,EAC7K,mCAAmC,EACnC;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,sDAAwB,GAAxB,UAAyB,iBAAqD;YACjF,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,wFAAwF,CAAC,CAAC;aAC7G;YACD,IAAM,mCAAmC,GAAG,iBAAiB,CAAC,oCAAoC,CAAC,CAAC;YACpG,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,yCAAoC,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,YAAS,CAAC;SAC5H;QAiCM,uDAAyB,GAAzB,UAA0B,iBAAyD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC9I,IAAM,uCAAuC,GAAG,iBAAiB,CAAC,wCAAwC,CAAC,CAAC;YAE5G,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA6C,IAAI,CAAC,aAAa,CAAC,QAAQ,gDAA6C,EAC3I,uCAAuC,EACvC;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,0DAA4B,GAA5B,UAA6B,iBAAyD;YACzF,IAAM,uCAAuC,GAAG,iBAAiB,CAAC,wCAAwC,CAAC,CAAC;YAC5G,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,gDAA6C,CAAC;SACtF;QAiCM,uDAAyB,GAAzB,UAA0B,iBAAyD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC9I,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,4FAA4F,CAAC,CAAC;aACjH;YACD,IAAM,mCAAmC,GAAG,iBAAiB,CAAC,oCAAoC,CAAC,CAAC;YAEpG,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAyC,IAAI,CAAC,aAAa,CAAC,QAAQ,yCAAoC,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,gBAAa,EACjL,mCAAmC,EACnC;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,0DAA4B,GAA5B,UAA6B,iBAAyD;YACzF,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,4FAA4F,CAAC,CAAC;aACjH;YACD,IAAM,mCAAmC,GAAG,iBAAiB,CAAC,oCAAoC,CAAC,CAAC;YACpG,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,yCAAoC,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,gBAAa,CAAC;SAChI;QAiCM,+DAAiC,GAAjC,UAAkC,iBAAiE,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC9J,IAAM,uCAAuC,GAAG,iBAAiB,CAAC,wCAAwC,CAAC,CAAC;YAE5G,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA6C,IAAI,CAAC,aAAa,CAAC,QAAQ,gDAA6C,EAC3I,uCAAuC,EACvC;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,kEAAoC,GAApC,UAAqC,iBAAiE;YACzG,IAAM,uCAAuC,GAAG,iBAAiB,CAAC,wCAAwC,CAAC,CAAC;YAC5G,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,gDAA6C,CAAC;SACtF;QAiCM,yDAA2B,GAA3B,UAA4B,iBAA2D,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAClJ,IAAM,+BAA+B,GAAG,iBAAiB,CAAC,gCAAgC,CAAC,CAAC;YAE5F,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAqC,IAAI,CAAC,aAAa,CAAC,QAAQ,+CAA4C,EAClI,+BAA+B,EAC/B;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,4DAA8B,GAA9B,UAA+B,iBAA2D;YAC7F,IAAM,+BAA+B,GAAG,iBAAiB,CAAC,gCAAgC,CAAC,CAAC;YAC5F,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,+CAA4C,CAAC;SACrF;QA6BM,mDAAqB,GAArB,UAAsB,iBAAqD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACtI,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,wFAAwF,CAAC,CAAC;aAC7G;YACD,IAAM,8BAA8B,GAAG,iBAAiB,CAAC,+BAA+B,CAAC,CAAC;YAE1F,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,IAAI,CAAC,aAAa,CAAC,QAAQ,yCAAoC,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,WAAQ,EAC5I,8BAA8B,EAC9B;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,sDAAwB,GAAxB,UAAyB,iBAAqD;YACjF,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,wFAAwF,CAAC,CAAC;aAC7G;YACD,IAAM,8BAA8B,GAAG,iBAAiB,CAAC,+BAA+B,CAAC,CAAC;YAC1F,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,yCAAoC,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,WAAQ,CAAC;SAC3H;QAiCM,sCAAQ,GAAR,UAAS,iBAAwC,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC5G,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,yEAAyE,CAAC,CAAC;aAC9F;YACD,IAAM,gBAAgB,GAAG,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;YAC9D,IAAM,oBAAoB,GAAG,iBAAiB,CAAC,qBAAqB,CAAC,CAAC;YAEtE,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAClC,IAAI,gBAAgB,KAAK,SAAS,IAAI,gBAAgB,KAAK,IAAI,EAAE;gBAC7D,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;aACzE;YAED,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA0B,IAAI,CAAC,aAAa,CAAC,QAAQ,uCAAkC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAG,EACnJ,oBAAoB,EACpB;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,yCAAW,GAAX,UAAY,iBAAwC;YACvD,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,yEAAyE,CAAC,CAAC;aAC9F;YACD,IAAM,gBAAgB,GAAG,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;YAC9D,IAAM,oBAAoB,GAAG,iBAAiB,CAAC,qBAAqB,CAAC,CAAC;YACtE,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,uCAAkC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAG,CAAC;SACjH;;;2IAz7EQ,mBAAmB,uDAOsC,kBAAkB;+IAP3E,mBAAmB,cAFlB,MAAM;sHAEP,mBAAmB;sBAH/BC,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;kCAQkDJ,WAAQ;;kCAAIK,SAAM;mCAAC,kBAAkB;;kCAAqBL,WAAQ;;;;QClQxG,4DAA4D,GAAaM,cAAW,CAAC,CAAC;YAC3F,UAAU,EAAE,6CAA6C;YACzD,MAAM,EAAE,QAAQ;YAChB,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,aAAa,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;wBAClG,iBAAiB,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;qBACvG;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,gEAAgE,GAAaA,cAAW,CAAC,CAAC;YAC/F,UAAU,EAAE,qCAAqC;YACjD,MAAM,EAAE,QAAQ;YAChB,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,CAAE,SAAS,EAAE,SAAS,CAAE;wBACpC,WAAW,EAAG;4BACZ,KAAK,EAAG,WAAW;yBACpB;wBACD,QAAQ,EAAG,CAAE,QAAQ,EAAE,QAAQ,CAAE;qBAClC;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,kDAAkD,GAAaA,cAAW,CAAC,CAAC;YACjF,UAAU,EAAE,yEAAyE;YACrF,MAAM,EAAE,QAAQ;YAChB,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,EAAG;iBACZ;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,2CAA2C,GAAaA,cAAW,CAAC,CAAC;YAC1E,UAAU,EAAE,0CAA0C;YACtD,MAAM,EAAE,QAAQ;YAChB,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,EAAG;iBACZ;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,8DAA8D,GAAaA,cAAW,CAAC,CAAC;YAC7F,UAAU,EAAE,uCAAuC;YACnD,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,CAAE;4BAC1B,UAAU,EAAG;gCACX,UAAU,EAAG,WAAW;gCACxB,YAAY,EAAG,qBAAqB;gCACpC,aAAa,EAAG,IAAI;6BACrB;4BACD,MAAM,EAAG,8KAA8K;4BACvL,QAAQ,EAAG;gCACT,UAAU,EAAG,UAAU;gCACvB,YAAY,EAAG,wBAAwB;6BACxC;4BACD,WAAW,EAAG,IAAI;4BAClB,gBAAgB,EAAG,IAAI;4BACvB,IAAI,EAAG,sCAAsC;4BAC7C,WAAW,EAAG,KAAK;4BACnB,MAAM,EAAG,KAAK;4BACd,WAAW,EAAG,KAAK;4BACnB,QAAQ,EAAG;gCACT,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,wBAAwB;gCAC/B,MAAM,EAAG,UAAU;6BACpB;4BACD,SAAS,EAAG,sBAAsB;4BAClC,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,SAAS;6BACnB;yBACF,EAAE;4BACD,UAAU,EAAG;gCACX,UAAU,EAAG,WAAW;gCACxB,YAAY,EAAG,qBAAqB;gCACpC,aAAa,EAAG,KAAK;6BACtB;4BACD,MAAM,EAAG,8KAA8K;4BACvL,QAAQ,EAAG;gCACT,UAAU,EAAG,UAAU;gCACvB,YAAY,EAAG,wBAAwB;6BACxC;4BACD,WAAW,EAAG,IAAI;4BAClB,gBAAgB,EAAG,KAAK;4BACxB,IAAI,EAAG,sCAAsC;4BAC7C,WAAW,EAAG,KAAK;4BACnB,MAAM,EAAG,IAAI;4BACb,WAAW,EAAG,KAAK;4BACnB,QAAQ,EAAG;gCACT,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,wBAAwB;gCAC/B,MAAM,EAAG,WAAW;6BACrB;4BACD,SAAS,EAAG,eAAe;4BAC3B,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,IAAI;gCAChB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,eAAe;6BACzB;yBACF,EAAE;4BACD,UAAU,EAAG;gCACX,UAAU,EAAG,WAAW;gCACxB,YAAY,EAAG,qBAAqB;gCACpC,aAAa,EAAG,IAAI;6BACrB;4BACD,MAAM,EAAG,8KAA8K;4BACvL,QAAQ,EAAG;gCACT,UAAU,EAAG,UAAU;gCACvB,YAAY,EAAG,wBAAwB;6BACxC;4BACD,WAAW,EAAG,IAAI;4BAClB,gBAAgB,EAAG,KAAK;4BACxB,IAAI,EAAG,sCAAsC;4BAC7C,WAAW,EAAG,IAAI;4BAClB,MAAM,EAAG,KAAK;4BACd,WAAW,EAAG,KAAK;4BACnB,QAAQ,EAAG;gCACT,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,wBAAwB;gCAC/B,MAAM,EAAG,UAAU;6BACpB;4BACD,SAAS,EAAG,uBAAuB;4BACnC,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,SAAS;6BACnB;yBACF,CAAE;iBACc;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,uDAAuD,GAAaA,cAAW,CAAC,CAAC;YACtF,UAAU,EAAE,gDAAgD;YAC5D,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,YAAY,EAAG,CAAC;wBAChB,gBAAgB,EAAG,CAAC;qBACrB;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,sDAAsD,GAAaA,cAAW,CAAC,CAAC;YACrF,UAAU,EAAE,8CAA8C;YAC1D,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,CAAE;4BAC1B,oBAAoB,EAAG,WAAW;4BAClC,cAAc,EAAG,sCAAsC;4BACvD,qBAAqB,EAAG,8BAA8B;4BACtD,qBAAqB,EAAG,8BAA8B;4BACtD,QAAQ,EAAG,KAAK;4BAChB,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,qBAAqB;6BAC/B;4BACD,SAAS,EAAG,uBAAuB;4BACnC,gBAAgB,EAAG,sCAAsC;4BACzD,sBAAsB,EAAG,WAAW;yBACrC,EAAE;4BACD,oBAAoB,EAAG,gBAAgB;4BACvC,cAAc,EAAG,sCAAsC;4BACvD,qBAAqB,EAAG,8BAA8B;4BACtD,qBAAqB,EAAG,8BAA8B;4BACtD,QAAQ,EAAG,aAAa;4BACxB,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,OAAO;6BACjB;4BACD,SAAS,EAAG,kBAAkB;4BAC9B,gBAAgB,EAAG,sCAAsC;4BACzD,sBAAsB,EAAG,cAAc;yBACxC,CAAE;iBACc;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,wDAAwD,GAAaA,cAAW,CAAC,CAAC;YACvF,UAAU,EAAE,2DAA2D;YACvE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,UAAU,EAAG;4BACX,UAAU,EAAG,WAAW;4BACxB,YAAY,EAAG,qBAAqB;4BACpC,aAAa,EAAG,IAAI;yBACrB;wBACD,aAAa,EAAG,CAAE;gCAChB,WAAW,EAAG,8BAA8B;gCAC5C,UAAU,EAAG,iCAAiC;gCAC9C,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,OAAO;6BACjB,EAAE;gCACD,WAAW,EAAG,8BAA8B;gCAC5C,UAAU,EAAG,yCAAyC;gCACtD,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,QAAQ;6BAClB,CAAE;wBACH,WAAW,EAAG,IAAI;wBAClB,WAAW,EAAG,IAAI;wBAClB,UAAU,EAAG,CAAE;gCACb,MAAM,EAAG,kdAAkd;gCAC3d,WAAW,EAAG,8BAA8B;gCAC5C,IAAI,EAAG,sCAAsC;gCAC7C,aAAa,EAAG,IAAI;gCACpB,QAAQ,EAAG;oCACT,IAAI,EAAG,wBAAwB;oCAC/B,MAAM,EAAG,UAAU;iCACpB;6BACF,EAAE;gCACD,MAAM,EAAG,kMAAkM;gCAC3M,WAAW,EAAG,8BAA8B;gCAC5C,IAAI,EAAG,sCAAsC;gCAC7C,aAAa,EAAG,KAAK;gCACrB,QAAQ,EAAG;oCACT,IAAI,EAAG,wBAAwB;oCAC/B,MAAM,EAAG,YAAY;iCACtB;6BACF,EAAE;gCACD,aAAa,EAAG,CAAE;wCAChB,WAAW,EAAG,8BAA8B;wCAC5C,UAAU,EAAG,yCAAyC;wCACtD,IAAI,EAAG,sCAAsC;wCAC7C,MAAM,EAAG,QAAQ;qCAClB,CAAE;gCACH,MAAM,EAAG,8cAA8c;gCACvd,WAAW,EAAG,8BAA8B;gCAC5C,IAAI,EAAG,sCAAsC;gCAC7C,aAAa,EAAG,IAAI;gCACpB,QAAQ,EAAG;oCACT,IAAI,EAAG,wBAAwB;oCAC/B,MAAM,EAAG,YAAY;iCACtB;6BACF,EAAE;gCACD,aAAa,EAAG,CAAE;wCAChB,WAAW,EAAG,8BAA8B;wCAC5C,UAAU,EAAG,iCAAiC;wCAC9C,IAAI,EAAG,sCAAsC;wCAC7C,MAAM,EAAG,OAAO;qCACjB,CAAE;gCACH,MAAM,EAAG,kWAAkW;gCAC3W,WAAW,EAAG,8BAA8B;gCAC5C,IAAI,EAAG,sCAAsC;gCAC7C,aAAa,EAAG,KAAK;gCACrB,QAAQ,EAAG;oCACT,IAAI,EAAG,wBAAwB;oCAC/B,MAAM,EAAG,YAAY;iCACtB;6BACF,CAAE;wBACH,MAAM,EAAG,KAAK;wBACd,WAAW,EAAG,KAAK;wBACnB,eAAe,EAAG,sCAAsC;wBACxD,SAAS,EAAG,gDAAgD;wBAC5D,OAAO,EAAG;4BACR,SAAS,EAAG,KAAK;4BACjB,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,SAAS;yBACnB;wBACD,gBAAgB,EAAG,KAAK;qBACzB;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,4DAA4D,GAAaA,cAAW,CAAC,CAAC;YAC3F,UAAU,EAAE,oDAAoD;YAChE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,sDAAsD,GAAaA,cAAW,CAAC,CAAC;YACrF,UAAU,EAAE,8CAA8C;YAC1D,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,CAAE;4BAC1B,UAAU,EAAG;gCACX,UAAU,EAAG,WAAW;gCACxB,YAAY,EAAG,qBAAqB;gCACpC,aAAa,EAAG,IAAI;6BACrB;4BACD,MAAM,EAAG,8KAA8K;4BACvL,QAAQ,EAAG;gCACT,UAAU,EAAG,UAAU;gCACvB,YAAY,EAAG,wBAAwB;6BACxC;4BACD,WAAW,EAAG,IAAI;4BAClB,gBAAgB,EAAG,IAAI;4BACvB,IAAI,EAAG,sCAAsC;4BAC7C,WAAW,EAAG,KAAK;4BACnB,MAAM,EAAG,KAAK;4BACd,WAAW,EAAG,KAAK;4BACnB,QAAQ,EAAG;gCACT,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,wBAAwB;gCAC/B,MAAM,EAAG,UAAU;6BACpB;4BACD,SAAS,EAAG,sBAAsB;4BAClC,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,SAAS;6BACnB;yBACF,EAAE;4BACD,UAAU,EAAG;gCACX,UAAU,EAAG,WAAW;gCACxB,YAAY,EAAG,qBAAqB;gCACpC,aAAa,EAAG,KAAK;6BACtB;4BACD,MAAM,EAAG,8KAA8K;4BACvL,QAAQ,EAAG;gCACT,UAAU,EAAG,UAAU;gCACvB,YAAY,EAAG,wBAAwB;6BACxC;4BACD,WAAW,EAAG,IAAI;4BAClB,gBAAgB,EAAG,KAAK;4BACxB,IAAI,EAAG,sCAAsC;4BAC7C,WAAW,EAAG,KAAK;4BACnB,MAAM,EAAG,IAAI;4BACb,WAAW,EAAG,KAAK;4BACnB,QAAQ,EAAG;gCACT,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,wBAAwB;gCAC/B,MAAM,EAAG,WAAW;6BACrB;4BACD,SAAS,EAAG,eAAe;4BAC3B,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,IAAI;gCAChB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,eAAe;6BACzB;yBACF,EAAE;4BACD,UAAU,EAAG;gCACX,UAAU,EAAG,WAAW;gCACxB,YAAY,EAAG,qBAAqB;gCACpC,aAAa,EAAG,IAAI;6BACrB;4BACD,MAAM,EAAG,8KAA8K;4BACvL,QAAQ,EAAG;gCACT,UAAU,EAAG,UAAU;gCACvB,YAAY,EAAG,wBAAwB;6BACxC;4BACD,WAAW,EAAG,IAAI;4BAClB,gBAAgB,EAAG,KAAK;4BACxB,IAAI,EAAG,sCAAsC;4BAC7C,WAAW,EAAG,IAAI;4BAClB,MAAM,EAAG,KAAK;4BACd,WAAW,EAAG,KAAK;4BACnB,QAAQ,EAAG;gCACT,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,wBAAwB;gCAC/B,MAAM,EAAG,UAAU;6BACpB;4BACD,SAAS,EAAG,uBAAuB;4BACnC,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,SAAS;6BACnB;yBACF,CAAE;iBACc;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,gDAAgD,GAAaA,cAAW,CAAC,CAAC;YAC/E,UAAU,EAAE,wDAAwD;YACpE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,CAAE;4BAC1B,IAAI,EAAG,sCAAsC;4BAC7C,gBAAgB,EAAG,sCAAsC;4BACzD,gBAAgB,EAAG,gBAAgB;4BACnC,kBAAkB,EAAG,8BAA8B;yBACpD,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,gBAAgB,EAAG,sCAAsC;4BACzD,gBAAgB,EAAG,WAAW;4BAC9B,kBAAkB,EAAG,8BAA8B;yBACpD,CAAE;iBACc;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,wCAAwC,GAAaA,cAAW,CAAC,CAAC;YACvE,UAAU,EAAE,0CAA0C;YACtD,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,iDAAiD,GAAaA,cAAW,CAAC,CAAC;YAChF,UAAU,EAAE,gCAAgC;YAC5C,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,CAAE;4BAC1B,MAAM,EAAG,sCAAsC;4BAC/C,IAAI,EAAG,sCAAsC;4BAC7C,cAAc,EAAG,IAAI;4BACrB,MAAM,EAAG,sBAAsB;4BAC/B,kBAAkB,EAAG,EAAE;yBACxB,EAAE;4BACD,MAAM,EAAG,sCAAsC;4BAC/C,IAAI,EAAG,sCAAsC;4BAC7C,cAAc,EAAG,IAAI;4BACrB,MAAM,EAAG,OAAO;4BAChB,kBAAkB,EAAG,GAAG;yBACzB,EAAE;4BACD,MAAM,EAAG,sCAAsC;4BAC/C,IAAI,EAAG,sCAAsC;4BAC7C,cAAc,EAAG,KAAK;4BACtB,MAAM,EAAG,gCAAgC;4BACzC,kBAAkB,EAAG,CAAC;yBACvB,CAAE;iBACc;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,8DAA8D,GAAaA,cAAW,CAAC,CAAC;YAC7F,UAAU,EAAE,qCAAqC;YACjD,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,WAAW,EAAG,8BAA8B;wBAC5C,UAAU,EAAG,iCAAiC;wBAC9C,IAAI,EAAG,sCAAsC;wBAC7C,MAAM,EAAG,QAAQ;qBAClB;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,WAAW,EAAG,+BAA+B;wBAC7C,UAAU,EAAG,UAAU;wBACvB,MAAM,EAAG,kBAAkB;wBAC3B,WAAW,EAAG;4BACZ,KAAK,EAAG,WAAW;yBACpB;wBACD,IAAI,EAAG,IAAI;qBACZ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sBAAsB;qBACnC;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,wDAAwD,GAAaA,cAAW,CAAC,CAAC;YACvF,UAAU,EAAE,oDAAoD;YAChE,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,IAAI,EAAG,sCAAsC;qBAC9C;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,WAAW,EAAG;4BACZ,KAAK,EAAG,WAAW;yBACpB;wBACD,IAAI,EAAG,IAAI;qBACZ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,oDAAoD,GAAaA,cAAW,CAAC,CAAC;YACnF,UAAU,EAAE,kCAAkC;YAC9C,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,IAAI,EAAG,sCAAsC;qBAC9C;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,WAAW,EAAG;4BACZ,KAAK,EAAG,WAAW;yBACpB;wBACD,IAAI,EAAG,IAAI;qBACZ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,+CAA+C,GAAaA,cAAW,CAAC,CAAC;YAC9E,UAAU,EAAE,sDAAsD;YAClE,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,CAAE;4BAC1B,cAAc,EAAG,IAAI;4BACrB,cAAc,EAAG,sCAAsC;yBACxD,EAAE;4BACD,cAAc,EAAG,KAAK;4BACtB,cAAc,EAAG,sCAAsC;yBACxD,CAAE;iBACc;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,iDAAiD,GAAaA,cAAW,CAAC,CAAC;YAChF,UAAU,EAAE,wDAAwD;YACpE,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,IAAI,EAAG,sCAAsC;qBAC9C;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,0CAA0C,GAAaA,cAAW,CAAC,CAAC;YACzE,UAAU,EAAE,gCAAgC;YAC5C,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,qBAAqB,EAAG,CAAE,eAAe,CAAE;wBAC3C,IAAI,EAAG,sCAAsC;wBAC7C,MAAM,EAAG,WAAW;wBACpB,aAAa,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;qBACnG;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,qDAAqD,GAAaA,cAAW,CAAC,CAAC;YACpF,UAAU,EAAE,qDAAqD;YACjE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,UAAU,EAAG,YAAY;wBACzB,YAAY,EAAG,iBAAiB;wBAChC,aAAa,EAAG,IAAI;qBACrB;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,yDAAyD,GAAaA,cAAW,CAAC,CAAC;YACxF,UAAU,EAAE,6CAA6C;YACzD,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,eAAe,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;wBACpG,aAAa,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;wBAClG,UAAU,EAAG,YAAY;wBACzB,YAAY,EAAG,iBAAiB;wBAChC,aAAa,EAAG,IAAI;qBACrB;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,yDAAyD,GAAaA,cAAW,CAAC,CAAC;YACxF,UAAU,EAAE,yDAAyD;YACrE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,kBAAkB,EAAG,UAAU;qBAChC;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,iEAAiE,GAAaA,cAAW,CAAC,CAAC;YAChG,UAAU,EAAE,6CAA6C;YACzD,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,aAAa,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;wBAClG,kBAAkB,EAAG,UAAU;wBAC/B,iBAAiB,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;qBACvG;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,2DAA2D,GAAaA,cAAW,CAAC,CAAC;YAC1F,UAAU,EAAE,4CAA4C;YACxD,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,cAAc,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;wBACnG,aAAa,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;qBACnG;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,WAAW,EAAG;4BACZ,KAAK,EAAG,WAAW;yBACpB;wBACD,cAAc,EAAG,CAAE,cAAc,EAAE,cAAc,CAAE;wBACnD,aAAa,EAAG,CAAE,aAAa,EAAE,aAAa,CAAE;qBACjD;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,qDAAqD,GAAaA,cAAW,CAAC,CAAC;YACpF,UAAU,EAAE,oDAAoD;YAChE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,EAAG;iBACZ;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,wCAAwC,GAAaA,cAAW,CAAC,CAAC;YACvE,UAAU,EAAE,0CAA0C;YACtD,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,MAAM,EAAG,sCAAsC;wBAC/C,IAAI,EAAG,sCAAsC;wBAC7C,MAAM,EAAG,gCAAgC;qBAC1C;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAES,gCAAgC,GAAaA,cAAW,CACjE;QACA;YACI,UAAU,EAAE,6CAA6C;YACzD,MAAM,EAAE,QAAQ;YAChB,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,aAAa,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;wBAClG,iBAAiB,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;qBACvG;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,qCAAqC;YACjD,MAAM,EAAE,QAAQ;YAChB,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,CAAE,SAAS,EAAE,SAAS,CAAE;wBACpC,WAAW,EAAG;4BACZ,KAAK,EAAG,WAAW;yBACpB;wBACD,QAAQ,EAAG,CAAE,QAAQ,EAAE,QAAQ,CAAE;qBAClC;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,yEAAyE;YACrF,MAAM,EAAE,QAAQ;YAChB,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,EAAG;iBACZ;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,0CAA0C;YACtD,MAAM,EAAE,QAAQ;YAChB,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,EAAG;iBACZ;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,uCAAuC;YACnD,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,CAAE;4BACtB,UAAU,EAAG;gCACX,UAAU,EAAG,WAAW;gCACxB,YAAY,EAAG,qBAAqB;gCACpC,aAAa,EAAG,IAAI;6BACrB;4BACD,MAAM,EAAG,8KAA8K;4BACvL,QAAQ,EAAG;gCACT,UAAU,EAAG,UAAU;gCACvB,YAAY,EAAG,wBAAwB;6BACxC;4BACD,WAAW,EAAG,IAAI;4BAClB,gBAAgB,EAAG,IAAI;4BACvB,IAAI,EAAG,sCAAsC;4BAC7C,WAAW,EAAG,KAAK;4BACnB,MAAM,EAAG,KAAK;4BACd,WAAW,EAAG,KAAK;4BACnB,QAAQ,EAAG;gCACT,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,wBAAwB;gCAC/B,MAAM,EAAG,UAAU;6BACpB;4BACD,SAAS,EAAG,sBAAsB;4BAClC,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,SAAS;6BACnB;yBACF,EAAE;4BACD,UAAU,EAAG;gCACX,UAAU,EAAG,WAAW;gCACxB,YAAY,EAAG,qBAAqB;gCACpC,aAAa,EAAG,KAAK;6BACtB;4BACD,MAAM,EAAG,8KAA8K;4BACvL,QAAQ,EAAG;gCACT,UAAU,EAAG,UAAU;gCACvB,YAAY,EAAG,wBAAwB;6BACxC;4BACD,WAAW,EAAG,IAAI;4BAClB,gBAAgB,EAAG,KAAK;4BACxB,IAAI,EAAG,sCAAsC;4BAC7C,WAAW,EAAG,KAAK;4BACnB,MAAM,EAAG,IAAI;4BACb,WAAW,EAAG,KAAK;4BACnB,QAAQ,EAAG;gCACT,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,wBAAwB;gCAC/B,MAAM,EAAG,WAAW;6BACrB;4BACD,SAAS,EAAG,eAAe;4BAC3B,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,IAAI;gCAChB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,eAAe;6BACzB;yBACF,EAAE;4BACD,UAAU,EAAG;gCACX,UAAU,EAAG,WAAW;gCACxB,YAAY,EAAG,qBAAqB;gCACpC,aAAa,EAAG,IAAI;6BACrB;4BACD,MAAM,EAAG,8KAA8K;4BACvL,QAAQ,EAAG;gCACT,UAAU,EAAG,UAAU;gCACvB,YAAY,EAAG,wBAAwB;6BACxC;4BACD,WAAW,EAAG,IAAI;4BAClB,gBAAgB,EAAG,KAAK;4BACxB,IAAI,EAAG,sCAAsC;4BAC7C,WAAW,EAAG,IAAI;4BAClB,MAAM,EAAG,KAAK;4BACd,WAAW,EAAG,KAAK;4BACnB,QAAQ,EAAG;gCACT,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,wBAAwB;gCAC/B,MAAM,EAAG,UAAU;6BACpB;4BACD,SAAS,EAAG,uBAAuB;4BACnC,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,SAAS;6BACnB;yBACF,CAAE;iBACU;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,gDAAgD;YAC5D,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,YAAY,EAAG,CAAC;wBAChB,gBAAgB,EAAG,CAAC;qBACrB;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,8CAA8C;YAC1D,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,CAAE;4BACtB,oBAAoB,EAAG,WAAW;4BAClC,cAAc,EAAG,sCAAsC;4BACvD,qBAAqB,EAAG,8BAA8B;4BACtD,qBAAqB,EAAG,8BAA8B;4BACtD,QAAQ,EAAG,KAAK;4BAChB,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,qBAAqB;6BAC/B;4BACD,SAAS,EAAG,uBAAuB;4BACnC,gBAAgB,EAAG,sCAAsC;4BACzD,sBAAsB,EAAG,WAAW;yBACrC,EAAE;4BACD,oBAAoB,EAAG,gBAAgB;4BACvC,cAAc,EAAG,sCAAsC;4BACvD,qBAAqB,EAAG,8BAA8B;4BACtD,qBAAqB,EAAG,8BAA8B;4BACtD,QAAQ,EAAG,aAAa;4BACxB,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,OAAO;6BACjB;4BACD,SAAS,EAAG,kBAAkB;4BAC9B,gBAAgB,EAAG,sCAAsC;4BACzD,sBAAsB,EAAG,cAAc;yBACxC,CAAE;iBACU;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,2DAA2D;YACvE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,UAAU,EAAG;4BACX,UAAU,EAAG,WAAW;4BACxB,YAAY,EAAG,qBAAqB;4BACpC,aAAa,EAAG,IAAI;yBACrB;wBACD,aAAa,EAAG,CAAE;gCAChB,WAAW,EAAG,8BAA8B;gCAC5C,UAAU,EAAG,iCAAiC;gCAC9C,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,OAAO;6BACjB,EAAE;gCACD,WAAW,EAAG,8BAA8B;gCAC5C,UAAU,EAAG,yCAAyC;gCACtD,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,QAAQ;6BAClB,CAAE;wBACH,WAAW,EAAG,IAAI;wBAClB,WAAW,EAAG,IAAI;wBAClB,UAAU,EAAG,CAAE;gCACb,MAAM,EAAG,kdAAkd;gCAC3d,WAAW,EAAG,8BAA8B;gCAC5C,IAAI,EAAG,sCAAsC;gCAC7C,aAAa,EAAG,IAAI;gCACpB,QAAQ,EAAG;oCACT,IAAI,EAAG,wBAAwB;oCAC/B,MAAM,EAAG,UAAU;iCACpB;6BACF,EAAE;gCACD,MAAM,EAAG,kMAAkM;gCAC3M,WAAW,EAAG,8BAA8B;gCAC5C,IAAI,EAAG,sCAAsC;gCAC7C,aAAa,EAAG,KAAK;gCACrB,QAAQ,EAAG;oCACT,IAAI,EAAG,wBAAwB;oCAC/B,MAAM,EAAG,YAAY;iCACtB;6BACF,EAAE;gCACD,aAAa,EAAG,CAAE;wCAChB,WAAW,EAAG,8BAA8B;wCAC5C,UAAU,EAAG,yCAAyC;wCACtD,IAAI,EAAG,sCAAsC;wCAC7C,MAAM,EAAG,QAAQ;qCAClB,CAAE;gCACH,MAAM,EAAG,8cAA8c;gCACvd,WAAW,EAAG,8BAA8B;gCAC5C,IAAI,EAAG,sCAAsC;gCAC7C,aAAa,EAAG,IAAI;gCACpB,QAAQ,EAAG;oCACT,IAAI,EAAG,wBAAwB;oCAC/B,MAAM,EAAG,YAAY;iCACtB;6BACF,EAAE;gCACD,aAAa,EAAG,CAAE;wCAChB,WAAW,EAAG,8BAA8B;wCAC5C,UAAU,EAAG,iCAAiC;wCAC9C,IAAI,EAAG,sCAAsC;wCAC7C,MAAM,EAAG,OAAO;qCACjB,CAAE;gCACH,MAAM,EAAG,kWAAkW;gCAC3W,WAAW,EAAG,8BAA8B;gCAC5C,IAAI,EAAG,sCAAsC;gCAC7C,aAAa,EAAG,KAAK;gCACrB,QAAQ,EAAG;oCACT,IAAI,EAAG,wBAAwB;oCAC/B,MAAM,EAAG,YAAY;iCACtB;6BACF,CAAE;wBACH,MAAM,EAAG,KAAK;wBACd,WAAW,EAAG,KAAK;wBACnB,eAAe,EAAG,sCAAsC;wBACxD,SAAS,EAAG,gDAAgD;wBAC5D,OAAO,EAAG;4BACR,SAAS,EAAG,KAAK;4BACjB,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,SAAS;yBACnB;wBACD,gBAAgB,EAAG,KAAK;qBACzB;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,oDAAoD;YAChE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAGP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,8CAA8C;YAC1D,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,CAAE;4BACtB,UAAU,EAAG;gCACX,UAAU,EAAG,WAAW;gCACxB,YAAY,EAAG,qBAAqB;gCACpC,aAAa,EAAG,IAAI;6BACrB;4BACD,MAAM,EAAG,8KAA8K;4BACvL,QAAQ,EAAG;gCACT,UAAU,EAAG,UAAU;gCACvB,YAAY,EAAG,wBAAwB;6BACxC;4BACD,WAAW,EAAG,IAAI;4BAClB,gBAAgB,EAAG,IAAI;4BACvB,IAAI,EAAG,sCAAsC;4BAC7C,WAAW,EAAG,KAAK;4BACnB,MAAM,EAAG,KAAK;4BACd,WAAW,EAAG,KAAK;4BACnB,QAAQ,EAAG;gCACT,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,wBAAwB;gCAC/B,MAAM,EAAG,UAAU;6BACpB;4BACD,SAAS,EAAG,sBAAsB;4BAClC,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,SAAS;6BACnB;yBACF,EAAE;4BACD,UAAU,EAAG;gCACX,UAAU,EAAG,WAAW;gCACxB,YAAY,EAAG,qBAAqB;gCACpC,aAAa,EAAG,KAAK;6BACtB;4BACD,MAAM,EAAG,8KAA8K;4BACvL,QAAQ,EAAG;gCACT,UAAU,EAAG,UAAU;gCACvB,YAAY,EAAG,wBAAwB;6BACxC;4BACD,WAAW,EAAG,IAAI;4BAClB,gBAAgB,EAAG,KAAK;4BACxB,IAAI,EAAG,sCAAsC;4BAC7C,WAAW,EAAG,KAAK;4BACnB,MAAM,EAAG,IAAI;4BACb,WAAW,EAAG,KAAK;4BACnB,QAAQ,EAAG;gCACT,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,wBAAwB;gCAC/B,MAAM,EAAG,WAAW;6BACrB;4BACD,SAAS,EAAG,eAAe;4BAC3B,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,IAAI;gCAChB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,eAAe;6BACzB;yBACF,EAAE;4BACD,UAAU,EAAG;gCACX,UAAU,EAAG,WAAW;gCACxB,YAAY,EAAG,qBAAqB;gCACpC,aAAa,EAAG,IAAI;6BACrB;4BACD,MAAM,EAAG,8KAA8K;4BACvL,QAAQ,EAAG;gCACT,UAAU,EAAG,UAAU;gCACvB,YAAY,EAAG,wBAAwB;6BACxC;4BACD,WAAW,EAAG,IAAI;4BAClB,gBAAgB,EAAG,KAAK;4BACxB,IAAI,EAAG,sCAAsC;4BAC7C,WAAW,EAAG,IAAI;4BAClB,MAAM,EAAG,KAAK;4BACd,WAAW,EAAG,KAAK;4BACnB,QAAQ,EAAG;gCACT,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,wBAAwB;gCAC/B,MAAM,EAAG,UAAU;6BACpB;4BACD,SAAS,EAAG,uBAAuB;4BACnC,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,SAAS;6BACnB;yBACF,CAAE;iBACU;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,wDAAwD;YACpE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,CAAE;4BACtB,IAAI,EAAG,sCAAsC;4BAC7C,gBAAgB,EAAG,sCAAsC;4BACzD,gBAAgB,EAAG,gBAAgB;4BACnC,kBAAkB,EAAG,8BAA8B;yBACpD,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,gBAAgB,EAAG,sCAAsC;4BACzD,gBAAgB,EAAG,WAAW;4BAC9B,kBAAkB,EAAG,8BAA8B;yBACpD,CAAE;iBACU;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,0CAA0C;YACtD,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAGP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,gCAAgC;YAC5C,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,CAAE;4BACtB,MAAM,EAAG,sCAAsC;4BAC/C,IAAI,EAAG,sCAAsC;4BAC7C,cAAc,EAAG,IAAI;4BACrB,MAAM,EAAG,sBAAsB;4BAC/B,kBAAkB,EAAG,EAAE;yBACxB,EAAE;4BACD,MAAM,EAAG,sCAAsC;4BAC/C,IAAI,EAAG,sCAAsC;4BAC7C,cAAc,EAAG,IAAI;4BACrB,MAAM,EAAG,OAAO;4BAChB,kBAAkB,EAAG,GAAG;yBACzB,EAAE;4BACD,MAAM,EAAG,sCAAsC;4BAC/C,IAAI,EAAG,sCAAsC;4BAC7C,cAAc,EAAG,KAAK;4BACtB,MAAM,EAAG,gCAAgC;4BACzC,kBAAkB,EAAG,CAAC;yBACvB,CAAE;iBACU;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,qCAAqC;YACjD,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,WAAW,EAAG,8BAA8B;wBAC5C,UAAU,EAAG,iCAAiC;wBAC9C,IAAI,EAAG,sCAAsC;wBAC7C,MAAM,EAAG,QAAQ;qBAClB;iBACY;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,WAAW,EAAG,+BAA+B;wBAC7C,UAAU,EAAG,UAAU;wBACvB,MAAM,EAAG,kBAAkB;wBAC3B,WAAW,EAAG;4BACZ,KAAK,EAAG,WAAW;yBACpB;wBACD,IAAI,EAAG,IAAI;qBACZ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sBAAsB;qBACnC;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,oDAAoD;YAChE,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,IAAI,EAAG,sCAAsC;qBAC9C;iBACY;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,WAAW,EAAG;4BACZ,KAAK,EAAG,WAAW;yBACpB;wBACD,IAAI,EAAG,IAAI;qBACZ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,kCAAkC;YAC9C,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,IAAI,EAAG,sCAAsC;qBAC9C;iBACY;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,WAAW,EAAG;4BACZ,KAAK,EAAG,WAAW;yBACpB;wBACD,IAAI,EAAG,IAAI;qBACZ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,sDAAsD;YAClE,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,CAAE;4BACtB,cAAc,EAAG,IAAI;4BACrB,cAAc,EAAG,sCAAsC;yBACxD,EAAE;4BACD,cAAc,EAAG,KAAK;4BACtB,cAAc,EAAG,sCAAsC;yBACxD,CAAE;iBACU;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,wDAAwD;YACpE,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,IAAI,EAAG,sCAAsC;qBAC9C;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,gCAAgC;YAC5C,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,qBAAqB,EAAG,CAAE,eAAe,CAAE;wBAC3C,IAAI,EAAG,sCAAsC;wBAC7C,MAAM,EAAG,WAAW;wBACpB,aAAa,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;qBACnG;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,qDAAqD;YACjE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,UAAU,EAAG,YAAY;wBACzB,YAAY,EAAG,iBAAiB;wBAChC,aAAa,EAAG,IAAI;qBACrB;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,6CAA6C;YACzD,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,eAAe,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;wBACpG,aAAa,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;wBAClG,UAAU,EAAG,YAAY;wBACzB,YAAY,EAAG,iBAAiB;wBAChC,aAAa,EAAG,IAAI;qBACrB;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,yDAAyD;YACrE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,kBAAkB,EAAG,UAAU;qBAChC;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,6CAA6C;YACzD,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,aAAa,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;wBAClG,kBAAkB,EAAG,UAAU;wBAC/B,iBAAiB,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;qBACvG;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,4CAA4C;YACxD,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,cAAc,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;wBACnG,aAAa,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;qBACnG;iBACY;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,WAAW,EAAG;4BACZ,KAAK,EAAG,WAAW;yBACpB;wBACD,cAAc,EAAG,CAAE,cAAc,EAAE,cAAc,CAAE;wBACnD,aAAa,EAAG,CAAE,aAAa,EAAE,aAAa,CAAE;qBACjD;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,oDAAoD;YAChE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,EAAG;iBACZ;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,0CAA0C;YACtD,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,MAAM,EAAG,sCAAsC;wBAC/C,IAAI,EAAG,sCAAsC;wBAC7C,MAAM,EAAG,gCAAgC;qBAC1C;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;KACA;;;QC/uGG,4BAAsB,UAAsB,EAA0C,QAAgB,EAAc,aAAoC;YAAlI,eAAU,GAAV,UAAU,CAAY;YALlC,aAAQ,GAAG,EAAE,CAAC;YACjB,mBAAc,GAAG,IAAIJ,cAAW,EAAE,CAAC;YACnC,kBAAa,GAAG,IAAI,qBAAqB,EAAE,CAAC;YAI/C,IAAI,aAAa,EAAE;gBACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;aACtC;YACD,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBACjD,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;oBAC9B,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;iBAC5B;gBACD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;aAC1C;YACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,wBAAwB,EAAE,CAAC;SAC/E;QAGO,4CAAe,GAAf,UAAgB,UAAsB,EAAE,KAAU,EAAE,GAAY;YACpE,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,YAAY,IAAI,KAAK,KAAK,EAAE;gBAC9D,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;aACjE;iBAAM;gBACH,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;aACtE;YACD,OAAO,UAAU,CAAC;SACrB;QAEO,qDAAwB,GAAxB,UAAyB,UAAsB,EAAE,KAAW,EAAE,GAAY;YAA1E,iBAyBP;YAxBG,IAAI,KAAK,IAAI,IAAI,EAAE;gBACf,OAAO,UAAU,CAAC;aACrB;YAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACrB,KAAe,CAAC,OAAO,CAAE,UAAA,IAAI,IAAI,OAAA,UAAU,GAAG,KAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,IAAI,EAAE,GAAG,CAAC,GAAA,CAAC,CAAC;iBACxG;qBAAM,IAAI,KAAK,YAAY,IAAI,EAAE;oBAC9B,IAAI,GAAG,IAAI,IAAI,EAAE;wBACb,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAC7B,KAAc,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;qBACpD;yBAAM;wBACJ,MAAM,KAAK,CAAC,sCAAsC,CAAC,CAAC;qBACtD;iBACJ;qBAAM;oBACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAE,UAAA,CAAC,IAAI,OAAA,UAAU,GAAG,KAAI,CAAC,wBAAwB,CACvE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,IAAI,GAAM,GAAG,SAAI,CAAG,GAAG,CAAC,CAAC,GAAA,CAAC,CAAC;iBAC/D;aACJ;iBAAM,IAAI,GAAG,IAAI,IAAI,EAAE;gBACpB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;aAC9C;iBAAM;gBACH,MAAM,KAAK,CAAC,qDAAqD,CAAC,CAAC;aACtE;YACD,OAAO,UAAU,CAAC;SACrB;QAiCM,0CAAa,GAAb,UAAc,iBAA6C,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACtH,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;aACrG;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAS,IAAI,CAAC,aAAa,CAAC,QAAQ,yCAAoC,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAG,EACzI;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,6CAAgB,GAAhB,UAAiB,iBAA6C;YACjE,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;aACrG;YACD,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,yCAAoC,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAG,CAAC;SACrH;QAiCM,uCAAU,GAAV,UAAW,iBAA0C,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAChH,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,6EAA6E,CAAC,CAAC;aAClG;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA4B,IAAI,CAAC,aAAa,CAAC,QAAQ,yCAAoC,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAG,EACzJ;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,0CAAa,GAAb,UAAc,iBAA0C;YAC3D,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,6EAA6E,CAAC,CAAC;aAClG;YACD,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,yCAAoC,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAG,CAAC;SACrH;QAiCM,wCAAW,GAAX,UAAY,iBAA2C,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAClH,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YAExC,IAAI,eAAe,GAAG,IAAIC,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAwB,IAAI,CAAC,aAAa,CAAC,QAAQ,qCAAkC,EAC3G;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,2CAAc,GAAd,UAAe,iBAA2C;YAC7D,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAM,WAAW,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;YAC/C,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,yCAAmC,WAAW,GAAG,MAAI,WAAa,GAAG,EAAE,CAAE,CAAC;SAClH;QAiCM,wCAAW,GAAX,UAAY,iBAA2C,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAClH,IAAM,uBAAuB,GAAG,iBAAiB,CAAC,wBAAwB,CAAC,CAAC;YAE5E,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAA6B,IAAI,CAAC,aAAa,CAAC,QAAQ,qCAAkC,EACjH,uBAAuB,EACvB;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,2CAAc,GAAd,UAAe,iBAA2C;YAC7D,IAAM,uBAAuB,GAAG,iBAAiB,CAAC,wBAAwB,CAAC,CAAC;YAC5E,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,qCAAkC,CAAC;SAC3E;QAiCM,+CAAkB,GAAlB,UAAmB,iBAAkD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAChI,IAAM,0BAA0B,GAAG,iBAAiB,CAAC,2BAA2B,CAAC,CAAC;YAElF,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAgC,IAAI,CAAC,aAAa,CAAC,QAAQ,6CAA0C,EAC5H,0BAA0B,EAC1B;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,kDAAqB,GAArB,UAAsB,iBAAkD;YAC3E,IAAM,0BAA0B,GAAG,iBAAiB,CAAC,2BAA2B,CAAC,CAAC;YAClF,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,6CAA0C,CAAC;SACnF;;;0IA5cQ,kBAAkB,uDAOuC,kBAAkB;8IAP3E,kBAAkB,cAFjB,MAAM;sHAEP,kBAAkB;sBAH9BC,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;kCAQkDJ,WAAQ;;kCAAIK,SAAM;mCAAC,kBAAkB;;kCAAqBL,WAAQ;;;;QCnExG,4CAA4C,GAAaM,cAAW,CAAC,CAAC;YAC3E,UAAU,EAAE,8CAA8C;YAC1D,MAAM,EAAE,QAAQ;YAChB,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,EAAG;iBACZ;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,yCAAyC,GAAaA,cAAW,CAAC,CAAC;YACxE,UAAU,EAAE,8CAA8C;YAC1D,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,aAAa,EAAG,CAAE;gCAChB,WAAW,EAAG,8BAA8B;gCAC5C,UAAU,EAAG,iCAAiC;gCAC9C,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,OAAO;6BACjB,EAAE;gCACD,WAAW,EAAG,8BAA8B;gCAC5C,UAAU,EAAG,yCAAyC;gCACtD,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,QAAQ;6BAClB,CAAE;wBACH,MAAM,EAAG,kpBAAkpB;wBAC3pB,WAAW,EAAG,IAAI;wBAClB,yBAAyB,EAAG,GAAG;wBAC/B,IAAI,EAAG,sCAAsC;wBAC7C,WAAW,EAAG,KAAK;wBACnB,gBAAgB,EAAG,8BAA8B;wBACjD,YAAY,EAAG,IAAI;wBACnB,aAAa,EAAG,sBAAsB;wBACtC,oBAAoB,EAAG,EAAE;wBACzB,QAAQ,EAAG;4BACT,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,WAAW;yBACrB;wBACD,mBAAmB,EAAG,mBAAmB;wBACzC,QAAQ,EAAG,YAAY;wBACvB,SAAS,EAAG,iBAAiB;wBAC7B,OAAO,EAAG;4BACR,SAAS,EAAG,KAAK;4BACjB,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,MAAM;yBAChB;wBACD,sBAAsB,EAAG,GAAG;qBAC7B;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,0CAA0C,GAAaA,cAAW,CAAC,CAAC;YACzE,UAAU,EAAE,kCAAkC;YAC9C,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,CAAE;4BAC1B,IAAI,EAAG,sCAAsC;4BAC7C,gBAAgB,EAAG,8BAA8B;4BACjD,aAAa,EAAG,sBAAsB;4BACtC,mBAAmB,EAAG,mBAAmB;4BACzC,QAAQ,EAAG,OAAO;4BAClB,SAAS,EAAG,iBAAiB;4BAC7B,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,MAAM;6BAChB;yBACF,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,gBAAgB,EAAG,0BAA0B;4BAC7C,mBAAmB,EAAG,mBAAmB;4BACzC,QAAQ,EAAG,MAAM;4BACjB,SAAS,EAAG,kBAAkB;4BAC9B,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,MAAM;6BAChB;yBACF,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,gBAAgB,EAAG,0BAA0B;4BAC7C,mBAAmB,EAAG,mBAAmB;4BACzC,QAAQ,EAAG,OAAO;4BAClB,SAAS,EAAG,uBAAuB;4BACnC,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,MAAM;6BAChB;yBACF,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,gBAAgB,EAAG,0BAA0B;4BAC7C,mBAAmB,EAAG,mBAAmB;4BACzC,QAAQ,EAAG,WAAW;4BACtB,SAAS,EAAG,uBAAuB;4BACnC,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,MAAM;6BAChB;yBACF,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,gBAAgB,EAAG,0BAA0B;4BAC7C,mBAAmB,EAAG,mBAAmB;4BACzC,QAAQ,EAAG,yBAAyB;4BACpC,SAAS,EAAG,uBAAuB;4BACnC,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,MAAM;6BAChB;yBACF,CAAE;iBACc;aACZ;SACJ,CAAC,EAAE;QAIS,0CAA0C,GAAaA,cAAW,CAAC,CAAC;YACzE,UAAU,EAAE,kCAAkC;YAC9C,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,IAAI,EAAG,sCAAsC;qBAC9C;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,iDAAiD,GAAaA,cAAW,CAAC,CAAC;YAChF,UAAU,EAAE,0CAA0C;YACtD,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,MAAM,EAAG,8tBAA8tB;qBACxuB;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAES,+BAA+B,GAAaA,cAAW,CAChE;QACA;YACI,UAAU,EAAE,8CAA8C;YAC1D,MAAM,EAAE,QAAQ;YAChB,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,EAAG;iBACZ;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,8CAA8C;YAC1D,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,aAAa,EAAG,CAAE;gCAChB,WAAW,EAAG,8BAA8B;gCAC5C,UAAU,EAAG,iCAAiC;gCAC9C,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,OAAO;6BACjB,EAAE;gCACD,WAAW,EAAG,8BAA8B;gCAC5C,UAAU,EAAG,yCAAyC;gCACtD,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,QAAQ;6BAClB,CAAE;wBACH,MAAM,EAAG,kpBAAkpB;wBAC3pB,WAAW,EAAG,IAAI;wBAClB,yBAAyB,EAAG,GAAG;wBAC/B,IAAI,EAAG,sCAAsC;wBAC7C,WAAW,EAAG,KAAK;wBACnB,gBAAgB,EAAG,8BAA8B;wBACjD,YAAY,EAAG,IAAI;wBACnB,aAAa,EAAG,sBAAsB;wBACtC,oBAAoB,EAAG,EAAE;wBACzB,QAAQ,EAAG;4BACT,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,WAAW;yBACrB;wBACD,mBAAmB,EAAG,mBAAmB;wBACzC,QAAQ,EAAG,YAAY;wBACvB,SAAS,EAAG,iBAAiB;wBAC7B,OAAO,EAAG;4BACR,SAAS,EAAG,KAAK;4BACjB,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,MAAM;yBAChB;wBACD,sBAAsB,EAAG,GAAG;qBAC7B;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,kCAAkC;YAC9C,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,CAAE;4BACtB,IAAI,EAAG,sCAAsC;4BAC7C,gBAAgB,EAAG,8BAA8B;4BACjD,aAAa,EAAG,sBAAsB;4BACtC,mBAAmB,EAAG,mBAAmB;4BACzC,QAAQ,EAAG,OAAO;4BAClB,SAAS,EAAG,iBAAiB;4BAC7B,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,MAAM;6BAChB;yBACF,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,gBAAgB,EAAG,0BAA0B;4BAC7C,mBAAmB,EAAG,mBAAmB;4BACzC,QAAQ,EAAG,MAAM;4BACjB,SAAS,EAAG,kBAAkB;4BAC9B,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,MAAM;6BAChB;yBACF,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,gBAAgB,EAAG,0BAA0B;4BAC7C,mBAAmB,EAAG,mBAAmB;4BACzC,QAAQ,EAAG,OAAO;4BAClB,SAAS,EAAG,uBAAuB;4BACnC,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,MAAM;6BAChB;yBACF,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,gBAAgB,EAAG,0BAA0B;4BAC7C,mBAAmB,EAAG,mBAAmB;4BACzC,QAAQ,EAAG,WAAW;4BACtB,SAAS,EAAG,uBAAuB;4BACnC,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,MAAM;6BAChB;yBACF,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,gBAAgB,EAAG,0BAA0B;4BAC7C,mBAAmB,EAAG,mBAAmB;4BACzC,QAAQ,EAAG,yBAAyB;4BACpC,SAAS,EAAG,uBAAuB;4BACnC,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,MAAM;6BAChB;yBACF,CAAE;iBACU;aACR;SACJ;QACG;YACI,UAAU,EAAE,kCAAkC;YAC9C,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,IAAI,EAAG,sCAAsC;qBAC9C;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,0CAA0C;YACtD,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,MAAM,EAAG,8tBAA8tB;qBACxuB;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;KACA;;;QC7TG,kCAAsB,UAAsB,EAA0C,QAAgB,EAAc,aAAoC;YAAlI,eAAU,GAAV,UAAU,CAAY;YALlC,aAAQ,GAAG,EAAE,CAAC;YACjB,mBAAc,GAAG,IAAIJ,cAAW,EAAE,CAAC;YACnC,kBAAa,GAAG,IAAI,qBAAqB,EAAE,CAAC;YAI/C,IAAI,aAAa,EAAE;gBACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;aACtC;YACD,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBACjD,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;oBAC9B,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;iBAC5B;gBACD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;aAC1C;YACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,wBAAwB,EAAE,CAAC;SAC/E;QAMO,iDAAc,GAAd,UAAe,QAAkB;;YACrC,IAAM,IAAI,GAAG,qBAAqB,CAAC;;gBACnC,KAAsB,IAAA,aAAA,SAAA,QAAQ,CAAA,kCAAA,wDAAE;oBAA3B,IAAM,OAAO,qBAAA;oBACd,IAAI,IAAI,KAAK,OAAO,EAAE;wBAClB,OAAO,IAAI,CAAC;qBACf;iBACJ;;;;;;;;;YACD,OAAO,KAAK,CAAC;SAChB;QAEO,kDAAe,GAAf,UAAgB,UAAsB,EAAE,KAAU,EAAE,GAAY;YACpE,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,YAAY,IAAI,KAAK,KAAK,EAAE;gBAC9D,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;aACjE;iBAAM;gBACH,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;aACtE;YACD,OAAO,UAAU,CAAC;SACrB;QAEO,2DAAwB,GAAxB,UAAyB,UAAsB,EAAE,KAAW,EAAE,GAAY;YAA1E,iBAyBP;YAxBG,IAAI,KAAK,IAAI,IAAI,EAAE;gBACf,OAAO,UAAU,CAAC;aACrB;YAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACrB,KAAe,CAAC,OAAO,CAAE,UAAA,IAAI,IAAI,OAAA,UAAU,GAAG,KAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,IAAI,EAAE,GAAG,CAAC,GAAA,CAAC,CAAC;iBACxG;qBAAM,IAAI,KAAK,YAAY,IAAI,EAAE;oBAC9B,IAAI,GAAG,IAAI,IAAI,EAAE;wBACb,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAC7B,KAAc,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;qBACpD;yBAAM;wBACJ,MAAM,KAAK,CAAC,sCAAsC,CAAC,CAAC;qBACtD;iBACJ;qBAAM;oBACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAE,UAAA,CAAC,IAAI,OAAA,UAAU,GAAG,KAAI,CAAC,wBAAwB,CACvE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,IAAI,GAAM,GAAG,SAAI,CAAG,GAAG,CAAC,CAAC,GAAA,CAAC,CAAC;iBAC/D;aACJ;iBAAM,IAAI,GAAG,IAAI,IAAI,EAAE;gBACpB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;aAC9C;iBAAM;gBACH,MAAM,KAAK,CAAC,qDAAqD,CAAC,CAAC;aACtE;YACD,OAAO,UAAU,CAAC;SACrB;QAiCM,4DAAyB,GAAzB,UAA0B,iBAAyD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAA9L,iBAgDN;YAhD2F,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC9I,IAAM,IAAI,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACrC,MAAM,IAAI,KAAK,CAAC,sFAAsF,CAAC,CAAC;aAC3G;YACD,IAAM,gBAAgB,GAAG,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;YAE9D,IAAI,eAAe,GAAG,IAAIC,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,OAAO,CAAC,UAAC,OAAO;oBACjB,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,OAAO,EAAE,KAAK,CAAC,CAAC;iBAC1B,CAAC,CAAA;aACL;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAClC,IAAI,gBAAgB,KAAK,SAAS,IAAI,gBAAgB,KAAK,IAAI,EAAE;gBAC7D,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;aACzE;YAED,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAA2C,IAAI,CAAC,aAAa,CAAC,QAAQ,yDAAsD,EACrJ;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,+DAA4B,GAA5B,UAA6B,iBAAyD;YAAtF,iBAeN;YAdG,IAAM,IAAI,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACrC,MAAM,IAAI,KAAK,CAAC,sFAAsF,CAAC,CAAC;aAC3G;YACD,IAAM,gBAAgB,GAAG,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;YAC9D,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,OAAO,CAAC,UAAC,OAAO;oBACjB,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,OAAO,EAAE,KAAK,CAAC,CAAC;iBAC1B,CAAC,CAAA;aACL;YACD,IAAM,WAAW,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;YAC/C,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,6DAAuD,WAAW,GAAG,MAAI,WAAa,GAAG,EAAE,CAAE,CAAC;SACtI;QAiCM,2DAAwB,GAAxB,UAAyB,iBAAwD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAA5L,iBA4CN;YA5CyF,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC5I,IAAM,IAAI,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACrC,MAAM,IAAI,KAAK,CAAC,qFAAqF,CAAC,CAAC;aAC1G;YAED,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,OAAO,CAAC,UAAC,OAAO;oBACjB,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,OAAO,EAAE,KAAK,CAAC,CAAC;iBAC1B,CAAC,CAAA;aACL;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAwB,IAAI,CAAC,aAAa,CAAC,QAAQ,8CAA2C,EACvH;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,8DAA2B,GAA3B,UAA4B,iBAAwD;YAApF,iBAcN;YAbG,IAAM,IAAI,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACrC,MAAM,IAAI,KAAK,CAAC,qFAAqF,CAAC,CAAC;aAC1G;YACD,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,OAAO,CAAC,UAAC,OAAO;oBACjB,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,OAAO,EAAE,KAAK,CAAC,CAAC;iBAC1B,CAAC,CAAA;aACL;YACD,IAAM,WAAW,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;YAC/C,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,kDAA4C,WAAW,GAAG,MAAI,WAAa,GAAG,EAAE,CAAE,CAAC;SAC3H;QAiCM,sDAAmB,GAAnB,UAAoB,iBAAmD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAlL,iBA4CN;YA5C+E,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAClI,IAAM,IAAI,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACrC,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;aACrG;YAED,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,OAAO,CAAC,UAAC,OAAO;oBACjB,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,OAAO,EAAE,KAAK,CAAC,CAAC;iBAC1B,CAAC,CAAA;aACL;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAA8B,IAAI,CAAC,aAAa,CAAC,QAAQ,kDAA+C,EACjI;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,yDAAsB,GAAtB,UAAuB,iBAAmD;YAA1E,iBAcN;YAbG,IAAM,IAAI,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACrC,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;aACrG;YACD,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,OAAO,CAAC,UAAC,OAAO;oBACjB,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,OAAO,EAAE,KAAK,CAAC,CAAC;iBAC1B,CAAC,CAAA;aACL;YACD,IAAM,WAAW,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;YAC/C,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,sDAAgD,WAAW,GAAG,MAAI,WAAa,GAAG,EAAE,CAAE,CAAC;SAC/H;QAiCM,yDAAsB,GAAtB,UAAuB,iBAAsD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACxI,IAAM,YAAY,GAAG,iBAAiB,CAAC,aAAa,CAAC,CAAC;YACtD,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAElD,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACvD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,YAAY,EAAE,aAAa,CAAC,CAAC;aACrC;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAC/C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,QAAQ,EAAE,SAAS,CAAC,CAAC;aAC7B;YACD,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE;gBACnD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,UAAU,EAAE,WAAW,CAAC,CAAC;aACjC;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA+B,IAAI,CAAC,aAAa,CAAC,QAAQ,yDAAsD,EACtI;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,4DAAyB,GAAzB,UAA0B,iBAAsD;YACnF,IAAM,YAAY,GAAG,iBAAiB,CAAC,aAAa,CAAC,CAAC;YACtD,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACvD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,YAAY,EAAE,aAAa,CAAC,CAAC;aACrC;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAC/C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,QAAQ,EAAE,SAAS,CAAC,CAAC;aAC7B;YACD,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE;gBACnD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,UAAU,EAAE,WAAW,CAAC,CAAC;aACjC;YACD,IAAM,WAAW,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;YAC/C,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,6DAAuD,WAAW,GAAG,MAAI,WAAa,GAAG,EAAE,CAAE,CAAC;SACtI;QAyDM,uDAAoB,GAApB,UAAqB,iBAAoD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAA8E;YAAtI,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACpI,IAAM,aAAa,GAAG,iBAAiB,CAAC,cAAc,CAAC,CAAC;YACxD,IAAI,aAAa,KAAK,IAAI,IAAI,aAAa,KAAK,SAAS,EAAE;gBACvD,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;aAC/G;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,0BAA0B;oBAC1B,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,kDAA6C,kBAAkB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAG,EAC7I;gBACI,YAAY,EAAE,MAAM;gBACpB,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,0DAAuB,GAAvB,UAAwB,iBAAoD;YAC/E,IAAM,aAAa,GAAG,iBAAiB,CAAC,cAAc,CAAC,CAAC;YACxD,IAAI,aAAa,KAAK,IAAI,IAAI,aAAa,KAAK,SAAS,EAAE;gBACvD,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;aAC/G;YACD,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,kDAA6C,kBAAkB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAG,CAAC;SACjI;QA6BM,kDAAe,GAAf,UAAgB,iBAA+C,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC1H,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;aACrG;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAiC,IAAI,CAAC,aAAa,CAAC,QAAQ,sDAAiD,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAG,EACzK;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,qDAAkB,GAAlB,UAAmB,iBAA+C;YACrE,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;aACrG;YACD,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,sDAAiD,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAG,CAAC;SAChI;QAiCM,mDAAgB,GAAhB,UAAiB,iBAAgD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC5H,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YAExC,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAyC,IAAI,CAAC,aAAa,CAAC,QAAQ,kDAA+C,EACzI;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,sDAAmB,GAAnB,UAAoB,iBAAgD;YACvE,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,KAAK,EAAE,MAAM,CAAC,CAAC;aACvB;YACD,IAAM,WAAW,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;YAC/C,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,sDAAgD,WAAW,GAAG,MAAI,WAAa,GAAG,EAAE,CAAE,CAAC;SAC/H;QAiCM,mDAAgB,GAAhB,UAAiB,iBAAgD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC5H,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC,CAAC;aACxG;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAkC,IAAI,CAAC,aAAa,CAAC,QAAQ,+CAA0C,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,kBAAe,EAClL;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,sDAAmB,GAAnB,UAAoB,iBAAgD;YACvE,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC,CAAC;aACxG;YACD,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,+CAA0C,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,kBAAe,CAAC;SACxI;QA6BM,4CAAS,GAAT,UAAU,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAEnE,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAkC,IAAI,CAAC,aAAa,CAAC,QAAQ,yCAAsC,EACzH;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,+CAAY,GAAZ;YACH,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,yCAAsC,CAAC;SAC/E;QA6BM,8DAA2B,GAA3B,UAA4B,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAErF,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAwC,IAAI,CAAC,aAAa,CAAC,QAAQ,qEAAkE,EAC3J;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,iEAA8B,GAA9B;YACH,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,qEAAkE,CAAC;SAC3G;QAiCM,+DAA4B,GAA5B,UAA6B,iBAA4D,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACpJ,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,+FAA+F,CAAC,CAAC;aACpH;YACD,IAAM,wCAAwC,GAAG,iBAAiB,CAAC,yCAAyC,CAAC,CAAC;YAE9G,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAA2B,IAAI,CAAC,aAAa,CAAC,QAAQ,+CAA0C,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,yBAAsB,EACnL,wCAAwC,EACxC;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,kEAA+B,GAA/B,UAAgC,iBAA4D;YAC/F,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,+FAA+F,CAAC,CAAC;aACpH;YACD,IAAM,wCAAwC,GAAG,iBAAiB,CAAC,yCAAyC,CAAC,CAAC;YAC9G,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,+CAA0C,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,yBAAsB,CAAC;SAC/I;QAiCM,yDAAsB,GAAtB,UAAuB,iBAAsD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACxI,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAM,WAAW,GAAG,iBAAiB,CAAC,YAAY,CAAC,CAAC;YAEpD,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE;gBACnD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,UAAU,EAAE,WAAW,CAAC,CAAC;aACjC;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAGD,IAAM,QAAQ,GAAa;gBACvB,qBAAqB;aACxB,CAAC;YAEF,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAErD,IAAI,UAAuD,CAAC;YAC5D,IAAI,OAAO,GAAG,KAAK,CAAC;YACpB,IAAI,yBAAyB,GAAG,KAAK,CAAC;YAGtC,OAAO,GAAG,cAAc,CAAC;YACzB,IAAI,OAAO,EAAE;gBACT,UAAU,GAAG,IAAI,QAAQ,EAAE,CAAC;aAC/B;iBAAM;gBACH,UAAU,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;aACxD;YAED,IAAI,WAAW,KAAK,SAAS,EAAE;gBAC3B,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,YAAY,EAAO,WAAW,CAAQ,IAAI,UAAU,CAAC;aACvF;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAc,IAAI,CAAC,aAAa,CAAC,QAAQ,8CAA2C,EAC3G,yBAAyB,GAAG,UAAU,CAAC,QAAQ,EAAE,GAAG,UAAU,EAC9D;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,4DAAyB,GAAzB,UAA0B,iBAAsD;YACnF,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAM,WAAW,GAAG,iBAAiB,CAAC,YAAY,CAAC,CAAC;YACpD,IAAI,eAAe,GAAG,IAAIA,aAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;YAC9D,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE;gBACnD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAC/C,UAAU,EAAE,WAAW,CAAC,CAAC;aACjC;YACD,IAAM,WAAW,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;YAC/C,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,kDAA4C,WAAW,GAAG,MAAI,WAAa,GAAG,EAAE,CAAE,CAAC;SAC3H;QAiCM,oDAAiB,GAAjB,UAAkB,iBAAiD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC9H,IAAM,6BAA6B,GAAG,iBAAiB,CAAC,8BAA8B,CAAC,CAAC;YAExF,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAA2B,IAAI,CAAC,aAAa,CAAC,QAAQ,kDAA+C,EAC5H,6BAA6B,EAC7B;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,uDAAoB,GAApB,UAAqB,iBAAiD;YACzE,IAAM,6BAA6B,GAAG,iBAAiB,CAAC,8BAA8B,CAAC,CAAC;YACxF,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,kDAA+C,CAAC;SACxF;QAiCM,mDAAgB,GAAhB,UAAiB,iBAAgD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC5H,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC,CAAC;aACxG;YACD,IAAM,4BAA4B,GAAG,iBAAiB,CAAC,6BAA6B,CAAC,CAAC;YAEtF,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAyC,IAAI,CAAC,aAAa,CAAC,QAAQ,+CAA0C,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,WAAQ,EACnL,4BAA4B,EAC5B;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,sDAAmB,GAAnB,UAAoB,iBAAgD;YACvE,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC,CAAC;aACxG;YACD,IAAM,4BAA4B,GAAG,iBAAiB,CAAC,6BAA6B,CAAC,CAAC;YACtF,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,+CAA0C,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,WAAQ,CAAC;SACjI;QAiCM,+CAAY,GAAZ,UAAa,iBAA4C,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACpH,IAAM,mCAAmC,GAAG,iBAAiB,CAAC,oCAAoC,CAAC,CAAC;YAEpG,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAyC,IAAI,CAAC,aAAa,CAAC,QAAQ,2CAAwC,EACnI,mCAAmC,EACnC;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,kDAAe,GAAf,UAAgB,iBAA4C;YAC/D,IAAM,mCAAmC,GAAG,iBAAiB,CAAC,oCAAoC,CAAC,CAAC;YACpG,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,2CAAwC,CAAC;SACjF;QA6BM,8DAA2B,GAA3B,UAA4B,iBAA2D,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAClJ,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,8FAA8F,CAAC,CAAC;aACnH;YACD,IAAM,uCAAuC,GAAG,iBAAiB,CAAC,wCAAwC,CAAC,CAAC;YAE5G,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,IAAI,CAAC,aAAa,CAAC,QAAQ,+CAA0C,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,yBAAsB,EAChK,uCAAuC,EACvC;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,iEAA8B,GAA9B,UAA+B,iBAA2D;YAC7F,IAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,8FAA8F,CAAC,CAAC;aACnH;YACD,IAAM,uCAAuC,GAAG,iBAAiB,CAAC,wCAAwC,CAAC,CAAC;YAC5G,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,+CAA0C,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,yBAAsB,CAAC;SAC/I;QAiCM,sDAAmB,GAAnB,UAAoB,iBAAmD,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAClI,IAAM,+BAA+B,GAAG,iBAAiB,CAAC,gCAAgC,CAAC,CAAC;YAE5F,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAqC,IAAI,CAAC,aAAa,CAAC,QAAQ,8DAA2D,EACjJ,+BAA+B,EAC/B;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,yDAAsB,GAAtB,UAAuB,iBAAmD;YAC7E,IAAM,+BAA+B,GAAG,iBAAiB,CAAC,gCAAgC,CAAC,CAAC;YAC5F,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,8DAA2D,CAAC;SACpG;QA6BM,kDAAe,GAAf,UAAgB,iBAA+C,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC1H,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;aACrG;YACD,IAAM,2BAA2B,GAAG,iBAAiB,CAAC,4BAA4B,CAAC,CAAC;YAEpF,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;YACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBAExC,IAAM,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB,CAAC;gBACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;YAID,IAAM,QAAQ,GAAa;gBACvB,kBAAkB;aACrB,CAAC;YACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;YAED,IAAI,YAAY,GAAoB,MAAM,CAAC;YAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,IAAI,CAAC,aAAa,CAAC,QAAQ,sDAAiD,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAG,EACjJ,2BAA2B,EAC3B;gBACI,YAAY,EAAO,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;QAEM,qDAAkB,GAAlB,UAAmB,iBAA+C;YACrE,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;aACrG;YACD,IAAM,2BAA2B,GAAG,iBAAiB,CAAC,4BAA4B,CAAC,CAAC;YACpF,OAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,sDAAiD,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAG,CAAC;SAChI;;;gJAhmDQ,wBAAwB,uDAOiC,kBAAkB;oJAP3E,wBAAwB,cAFvB,MAAM;sHAEP,wBAAwB;sBAHpCC,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;kCAQkDJ,WAAQ;;kCAAIK,SAAM;mCAAC,kBAAkB;;kCAAqBL,WAAQ;;;;QC7JxG,8DAA8D,GAAaM,cAAW,CAAC,CAAC;YAC7F,UAAU,EAAE,sDAAsD;YAClE,MAAM,EAAE,QAAQ;YAChB,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,cAAc,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;wBACnG,aAAa,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;qBACnG;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,6DAA6D,GAAaA,cAAW,CAAC,CAAC;YAC5F,UAAU,EAAE,2CAA2C;YACvD,MAAM,EAAE,QAAQ;YAChB,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;wBAC9F,QAAQ,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;qBAC9F;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,wDAAwD,GAAaA,cAAW,CAAC,CAAC;YACvF,UAAU,EAAE,+CAA+C;YAC3D,MAAM,EAAE,QAAQ;YAChB,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;wBAC9F,QAAQ,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;qBAC9F;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,2DAA2D,GAAaA,cAAW,CAAC,CAAC;YAC1F,UAAU,EAAE,sDAAsD;YAClE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,MAAM,EAAG,sCAAsC;qBAChD;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,yDAAyD,GAAaA,cAAW,CAAC,CAAC;YACxF,UAAU,EAAE,0DAA0D;YACtE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,oDAAoD,GAAaA,cAAW,CAAC,CAAC;YACnF,UAAU,EAAE,yDAAyD;YACrE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,aAAa,EAAG,CAAE;gCAChB,WAAW,EAAG,8BAA8B;gCAC5C,UAAU,EAAG,iCAAiC;gCAC9C,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,OAAO;6BACjB,EAAE;gCACD,WAAW,EAAG,8BAA8B;gCAC5C,UAAU,EAAG,yCAAyC;gCACtD,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,QAAQ;6BAClB,CAAE;wBACH,MAAM,EAAG,kdAAkd;wBAC3d,IAAI,EAAG,sCAAsC;wBAC7C,SAAS,EAAG,eAAe;wBAC3B,WAAW,EAAG,8BAA8B;wBAC5C,OAAO,EAAG;4BACR,SAAS,EAAG,KAAK;4BACjB,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,sBAAsB;yBAChC;qBACF;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,qDAAqD,GAAaA,cAAW,CAAC,CAAC;YACpF,UAAU,EAAE,+CAA+C;YAC3D,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,CAAE;4BAC1B,MAAM,EAAG,kdAAkd;4BAC3d,gBAAgB,EAAG,sCAAsC;4BACzD,gBAAgB,EAAG,KAAK;4BACxB,IAAI,EAAG,sCAAsC;4BAC7C,SAAS,EAAG,yBAAyB;4BACrC,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,gCAAgC;6BAC1C;yBACF,EAAE;4BACD,MAAM,EAAG,kdAAkd;4BAC3d,gBAAgB,EAAG,IAAI;4BACvB,IAAI,EAAG,sCAAsC;4BAC7C,SAAS,EAAG,eAAe;4BAC3B,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,sBAAsB;6BAChC;yBACF,EAAE;4BACD,MAAM,EAAG,kdAAkd;4BAC3d,gBAAgB,EAAG,KAAK;4BACxB,IAAI,EAAG,sCAAsC;4BAC7C,SAAS,EAAG,iBAAiB;4BAC7B,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,sBAAsB;6BAChC;yBACF,EAAE;4BACD,MAAM,EAAG,kdAAkd;4BAC3d,gBAAgB,EAAG,sCAAsC;4BACzD,gBAAgB,EAAG,IAAI;4BACvB,IAAI,EAAG,sCAAsC;4BAC7C,SAAS,EAAG,2BAA2B;4BACvC,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,OAAO;6BACjB;yBACF,CAAE;iBACc;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,qDAAqD,GAAaA,cAAW,CAAC,CAAC;YACpF,UAAU,EAAE,iEAAiE;YAC7E,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,aAAa,EAAG,CAAE;gCAChB,WAAW,EAAG,8BAA8B;gCAC5C,UAAU,EAAG,iCAAiC;gCAC9C,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,OAAO;6BACjB,EAAE;gCACD,WAAW,EAAG,8BAA8B;gCAC5C,UAAU,EAAG,yCAAyC;gCACtD,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,QAAQ;6BAClB,CAAE;wBACH,WAAW,EAAG,IAAI;wBAClB,OAAO,EAAG;4BACR,aAAa,EAAG,CAAE;oCAChB,WAAW,EAAG,8BAA8B;oCAC5C,UAAU,EAAG,uCAAuC;oCACpD,IAAI,EAAG,sCAAsC;oCAC7C,MAAM,EAAG,QAAQ;iCAClB,CAAE;4BACH,MAAM,EAAG,kWAAkW;4BAC3W,WAAW,EAAG,8BAA8B;4BAC5C,IAAI,EAAG,qCAAqC;yBAC7C;wBACD,WAAW,EAAG,IAAI;wBAClB,UAAU,EAAG,CAAE;gCACb,MAAM,EAAG,kdAAkd;gCAC3d,WAAW,EAAG,8BAA8B;gCAC5C,IAAI,EAAG,sCAAsC;gCAC7C,aAAa,EAAG,IAAI;gCACpB,QAAQ,EAAG;oCACT,IAAI,EAAG,wBAAwB;oCAC/B,MAAM,EAAG,UAAU;iCACpB;6BACF,EAAE;gCACD,MAAM,EAAG,kMAAkM;gCAC3M,WAAW,EAAG,8BAA8B;gCAC5C,IAAI,EAAG,sCAAsC;gCAC7C,aAAa,EAAG,KAAK;gCACrB,QAAQ,EAAG;oCACT,IAAI,EAAG,wBAAwB;oCAC/B,MAAM,EAAG,YAAY;iCACtB;6BACF,EAAE;gCACD,aAAa,EAAG,CAAE;wCAChB,WAAW,EAAG,8BAA8B;wCAC5C,UAAU,EAAG,iCAAiC;wCAC9C,IAAI,EAAG,sCAAsC;wCAC7C,MAAM,EAAG,OAAO;qCACjB,CAAE;gCACH,MAAM,EAAG,8cAA8c;gCACvd,WAAW,EAAG,8BAA8B;gCAC5C,IAAI,EAAG,sCAAsC;gCAC7C,aAAa,EAAG,IAAI;gCACpB,QAAQ,EAAG;oCACT,IAAI,EAAG,wBAAwB;oCAC/B,MAAM,EAAG,YAAY;iCACtB;6BACF,EAAE;gCACD,aAAa,EAAG,CAAE;wCAChB,WAAW,EAAG,8BAA8B;wCAC5C,UAAU,EAAG,yCAAyC;wCACtD,IAAI,EAAG,sCAAsC;wCAC7C,MAAM,EAAG,QAAQ;qCAClB,CAAE;gCACH,MAAM,EAAG,kWAAkW;gCAC3W,WAAW,EAAG,8BAA8B;gCAC5C,IAAI,EAAG,sCAAsC;gCAC7C,aAAa,EAAG,KAAK;gCACrB,QAAQ,EAAG;oCACT,IAAI,EAAG,wBAAwB;oCAC/B,MAAM,EAAG,YAAY;iCACtB;6BACF,CAAE;wBACH,MAAM,EAAG,KAAK;wBACd,WAAW,EAAG,KAAK;wBACnB,eAAe,EAAG,sCAAsC;wBACxD,SAAS,EAAG,gDAAgD;wBAC5D,OAAO,EAAG;4BACR,SAAS,EAAG,KAAK;4BACjB,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,SAAS;yBACnB;qBACF;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,8CAA8C,GAAaA,cAAW,CAAC,CAAC;YAC7E,UAAU,EAAE,sCAAsC;YAClD,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,CAAE;4BAC1B,MAAM,EAAG,sCAAsC;4BAC/C,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,sBAAsB;yBAChC,EAAE;4BACD,MAAM,EAAG,sCAAsC;4BAC/C,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,OAAO;yBACjB,EAAE;4BACD,MAAM,EAAG,sCAAsC;4BAC/C,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,gCAAgC;yBAC1C,CAAE;iBACc;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,gEAAgE,GAAaA,cAAW,CAAC,CAAC;YAC/F,UAAU,EAAE,kEAAkE;YAC9E,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,aAAa,EAAG,CAAC;qBAClB;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,iEAAiE,GAAaA,cAAW,CAAC,CAAC;YAChG,UAAU,EAAE,wEAAwE;YACpF,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,IAAI,EAAG,sCAAsC;qBAC9C;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,2DAA2D,GAAaA,cAAW,CAAC,CAAC;YAC1F,UAAU,EAAE,2CAA2C;YACvD,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,WAAW,EAAG,8BAA8B;wBAC5C,UAAU,EAAG,iCAAiC;wBAC9C,IAAI,EAAG,sCAAsC;wBAC7C,MAAM,EAAG,QAAQ;qBAClB;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sBAAsB;qBACnC;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,sDAAsD,GAAaA,cAAW,CAAC,CAAC;YACrF,UAAU,EAAE,+CAA+C;YAC3D,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,IAAI,EAAG,sCAAsC;qBAC9C;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,WAAW,EAAG;4BACZ,KAAK,EAAG,WAAW;yBACpB;wBACD,IAAI,EAAG,IAAI;qBACZ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,qDAAqD,GAAaA,cAAW,CAAC,CAAC;YACpF,UAAU,EAAE,0DAA0D;YACtE,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,IAAI,EAAG,sCAAsC;qBAC9C;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,WAAW,EAAG;4BACZ,KAAK,EAAG,WAAW;yBACpB;wBACD,IAAI,EAAG,IAAI;qBACZ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,iDAAiD,GAAaA,cAAW,CAAC,CAAC;YAChF,UAAU,EAAE,wCAAwC;YACpD,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,IAAI,EAAG,sCAAsC;qBAC9C;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,gEAAgE,GAAaA,cAAW,CAAC,CAAC;YAC/F,UAAU,EAAE,wEAAwE;YACpF,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,EAAG;iBACZ;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,wDAAwD,GAAaA,cAAW,CAAC,CAAC;YACvF,UAAU,EAAE,2DAA2D;YACvE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,cAAc,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;wBACnG,aAAa,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;qBACnG;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAIS,oDAAoD,GAAaA,cAAW,CAAC,CAAC;YACnF,UAAU,EAAE,yDAAyD;YACrE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBACH;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,EAAG;iBACZ;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACgB;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACxB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACgB;aACZ;SACJ,CAAC,EAAE;QAES,qCAAqC,GAAaA,cAAW,CACtE;QACA;YACI,UAAU,EAAE,sDAAsD;YAClE,MAAM,EAAE,QAAQ;YAChB,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,cAAc,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;wBACnG,aAAa,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;qBACnG;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,2CAA2C;YACvD,MAAM,EAAE,QAAQ;YAChB,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;wBAC9F,QAAQ,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;qBAC9F;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,+CAA+C;YAC3D,MAAM,EAAE,QAAQ;YAChB,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;wBAC9F,QAAQ,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;qBAC9F;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,sDAAsD;YAClE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,MAAM,EAAG,sCAAsC;qBAChD;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,0DAA0D;YACtE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAGP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,yDAAyD;YACrE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,aAAa,EAAG,CAAE;gCAChB,WAAW,EAAG,8BAA8B;gCAC5C,UAAU,EAAG,iCAAiC;gCAC9C,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,OAAO;6BACjB,EAAE;gCACD,WAAW,EAAG,8BAA8B;gCAC5C,UAAU,EAAG,yCAAyC;gCACtD,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,QAAQ;6BAClB,CAAE;wBACH,MAAM,EAAG,kdAAkd;wBAC3d,IAAI,EAAG,sCAAsC;wBAC7C,SAAS,EAAG,eAAe;wBAC3B,WAAW,EAAG,8BAA8B;wBAC5C,OAAO,EAAG;4BACR,SAAS,EAAG,KAAK;4BACjB,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,sBAAsB;yBAChC;qBACF;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,+CAA+C;YAC3D,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,CAAE;4BACtB,MAAM,EAAG,kdAAkd;4BAC3d,gBAAgB,EAAG,sCAAsC;4BACzD,gBAAgB,EAAG,KAAK;4BACxB,IAAI,EAAG,sCAAsC;4BAC7C,SAAS,EAAG,yBAAyB;4BACrC,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,gCAAgC;6BAC1C;yBACF,EAAE;4BACD,MAAM,EAAG,kdAAkd;4BAC3d,gBAAgB,EAAG,IAAI;4BACvB,IAAI,EAAG,sCAAsC;4BAC7C,SAAS,EAAG,eAAe;4BAC3B,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,sBAAsB;6BAChC;yBACF,EAAE;4BACD,MAAM,EAAG,kdAAkd;4BAC3d,gBAAgB,EAAG,KAAK;4BACxB,IAAI,EAAG,sCAAsC;4BAC7C,SAAS,EAAG,iBAAiB;4BAC7B,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,sBAAsB;6BAChC;yBACF,EAAE;4BACD,MAAM,EAAG,kdAAkd;4BAC3d,gBAAgB,EAAG,sCAAsC;4BACzD,gBAAgB,EAAG,IAAI;4BACvB,IAAI,EAAG,sCAAsC;4BAC7C,SAAS,EAAG,2BAA2B;4BACvC,WAAW,EAAG,8BAA8B;4BAC5C,OAAO,EAAG;gCACR,SAAS,EAAG,KAAK;gCACjB,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,OAAO;6BACjB;yBACF,CAAE;iBACU;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,iEAAiE;YAC7E,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,aAAa,EAAG,CAAE;gCAChB,WAAW,EAAG,8BAA8B;gCAC5C,UAAU,EAAG,iCAAiC;gCAC9C,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,OAAO;6BACjB,EAAE;gCACD,WAAW,EAAG,8BAA8B;gCAC5C,UAAU,EAAG,yCAAyC;gCACtD,IAAI,EAAG,sCAAsC;gCAC7C,MAAM,EAAG,QAAQ;6BAClB,CAAE;wBACH,WAAW,EAAG,IAAI;wBAClB,OAAO,EAAG;4BACR,aAAa,EAAG,CAAE;oCAChB,WAAW,EAAG,8BAA8B;oCAC5C,UAAU,EAAG,uCAAuC;oCACpD,IAAI,EAAG,sCAAsC;oCAC7C,MAAM,EAAG,QAAQ;iCAClB,CAAE;4BACH,MAAM,EAAG,kWAAkW;4BAC3W,WAAW,EAAG,8BAA8B;4BAC5C,IAAI,EAAG,qCAAqC;yBAC7C;wBACD,WAAW,EAAG,IAAI;wBAClB,UAAU,EAAG,CAAE;gCACb,MAAM,EAAG,kdAAkd;gCAC3d,WAAW,EAAG,8BAA8B;gCAC5C,IAAI,EAAG,sCAAsC;gCAC7C,aAAa,EAAG,IAAI;gCACpB,QAAQ,EAAG;oCACT,IAAI,EAAG,wBAAwB;oCAC/B,MAAM,EAAG,UAAU;iCACpB;6BACF,EAAE;gCACD,MAAM,EAAG,kMAAkM;gCAC3M,WAAW,EAAG,8BAA8B;gCAC5C,IAAI,EAAG,sCAAsC;gCAC7C,aAAa,EAAG,KAAK;gCACrB,QAAQ,EAAG;oCACT,IAAI,EAAG,wBAAwB;oCAC/B,MAAM,EAAG,YAAY;iCACtB;6BACF,EAAE;gCACD,aAAa,EAAG,CAAE;wCAChB,WAAW,EAAG,8BAA8B;wCAC5C,UAAU,EAAG,iCAAiC;wCAC9C,IAAI,EAAG,sCAAsC;wCAC7C,MAAM,EAAG,OAAO;qCACjB,CAAE;gCACH,MAAM,EAAG,8cAA8c;gCACvd,WAAW,EAAG,8BAA8B;gCAC5C,IAAI,EAAG,sCAAsC;gCAC7C,aAAa,EAAG,IAAI;gCACpB,QAAQ,EAAG;oCACT,IAAI,EAAG,wBAAwB;oCAC/B,MAAM,EAAG,YAAY;iCACtB;6BACF,EAAE;gCACD,aAAa,EAAG,CAAE;wCAChB,WAAW,EAAG,8BAA8B;wCAC5C,UAAU,EAAG,yCAAyC;wCACtD,IAAI,EAAG,sCAAsC;wCAC7C,MAAM,EAAG,QAAQ;qCAClB,CAAE;gCACH,MAAM,EAAG,kWAAkW;gCAC3W,WAAW,EAAG,8BAA8B;gCAC5C,IAAI,EAAG,sCAAsC;gCAC7C,aAAa,EAAG,KAAK;gCACrB,QAAQ,EAAG;oCACT,IAAI,EAAG,wBAAwB;oCAC/B,MAAM,EAAG,YAAY;iCACtB;6BACF,CAAE;wBACH,MAAM,EAAG,KAAK;wBACd,WAAW,EAAG,KAAK;wBACnB,eAAe,EAAG,sCAAsC;wBACxD,SAAS,EAAG,gDAAgD;wBAC5D,OAAO,EAAG;4BACR,SAAS,EAAG,KAAK;4BACjB,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,SAAS;yBACnB;qBACF;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,sCAAsC;YAClD,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,CAAE;4BACtB,MAAM,EAAG,sCAAsC;4BAC/C,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,sBAAsB;yBAChC,EAAE;4BACD,MAAM,EAAG,sCAAsC;4BAC/C,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,OAAO;yBACjB,EAAE;4BACD,MAAM,EAAG,sCAAsC;4BAC/C,IAAI,EAAG,sCAAsC;4BAC7C,MAAM,EAAG,gCAAgC;yBAC1C,CAAE;iBACU;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,kEAAkE;YAC9E,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,aAAa,EAAG,CAAC;qBAClB;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,wEAAwE;YACpF,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,IAAI,EAAG,sCAAsC;qBAC9C;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,2CAA2C;YACvD,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,WAAW,EAAG,8BAA8B;wBAC5C,UAAU,EAAG,iCAAiC;wBAC9C,IAAI,EAAG,sCAAsC;wBAC7C,MAAM,EAAG,QAAQ;qBAClB;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sBAAsB;qBACnC;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,+CAA+C;YAC3D,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,IAAI,EAAG,sCAAsC;qBAC9C;iBACY;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,WAAW,EAAG;4BACZ,KAAK,EAAG,WAAW;yBACpB;wBACD,IAAI,EAAG,IAAI;qBACZ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,0DAA0D;YACtE,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,IAAI,EAAG,sCAAsC;qBAC9C;iBACY;gBACD;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,WAAW,EAAG;4BACZ,KAAK,EAAG,WAAW;yBACpB;wBACD,IAAI,EAAG,IAAI;qBACZ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,wCAAwC;YACpD,MAAM,EAAE,MAAM;YACd,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,IAAI,EAAG,sCAAsC;qBAC9C;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,wEAAwE;YACpF,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,EAAG;iBACZ;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,2DAA2D;YACvE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,cAAc,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;wBACnG,aAAa,EAAG,CAAE,sCAAsC,EAAE,sCAAsC,CAAE;qBACnG;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;QACG;YACI,UAAU,EAAE,yDAAyD;YACrE,MAAM,EAAE,KAAK;YACb,SAAS,EAAE;gBAEP;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE,EAAG;iBACZ;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,oDAAoD;gCAChE,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,aAAa,EAAG,SAAS;iCAC1B;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACY;gBAED;oBACI,MAAM,EAAE,GAAG;oBACX,IAAI,EAAE;wBACpB,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACY;aACR;SACJ;KACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}