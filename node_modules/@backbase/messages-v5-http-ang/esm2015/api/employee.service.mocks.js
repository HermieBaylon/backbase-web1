import { createMocks } from '@backbase/foundation-ang/data-http';
export const EmployeeHttpServiceDeleteConversationAssignmentMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/messages/assignment",
        method: "DELETE",
        responses: [
            {
                status: 200,
                body: {
                    "failedItems": ["b0069a89-3dcb-4bdc-b7da-fc65643064a6", "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9"],
                    "unassignedItems": ["e92bbe7d-10cf-4d7c-b7b5-eadb7632812a", "58ee5037-8dce-43ab-b734-e2b90a189b81"]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServiceDeleteMessageAttachmentsEmployeeMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/attachments",
        method: "DELETE",
        responses: [
            {
                status: 200,
                body: {
                    "deleted": ["e92bbe7d-10cf-4d7c-b7b5-eadb7632812a", "58ee5037-8dce-43ab-b734-e2b90a189b81"],
                    "failed": ["b0069a89-3dcb-4bdc-b7da-fc65643064a6", "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9"]
                }
            },
            {
                status: 200,
                body: {
                    "deleted": ["deleted", "deleted"],
                    "additions": {
                        "key": "additions"
                    },
                    "failed": ["failed", "failed"]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServiceDeleteSubscriptionMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/topics/{topicId}/subscriptions/{subscriptionId}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: {}
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServiceDeleteTopicMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/topics/{topicId}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: {}
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServiceGetConversationThreadsEmployeeMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/conversations",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "assignee": {
                            "fullName": "John Snow",
                            "internalId": "1234-5678-9012-3456",
                            "isRequester": true
                        },
                        "client": {
                            "fullName": "John Doe",
                            "internalId": "97234tyi23rfiy325r3i7r"
                        },
                        "deletable": true,
                        "hasAttachments": true,
                        "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7",
                        "important": false,
                        "read": false,
                        "read-only": false,
                        "sender": {
                            "deleted": false,
                            "id": "97234tyi23rfiy325r3i7r",
                            "name": "John Doe"
                        },
                        "subject": "Application Rejected",
                        "timestamp": "2017-10-02T10:51:30.275+0000",
                        "topic": {
                            "deleted": false,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                            "name": "Savings"
                        }
                    }, {
                        "assignee": {
                            "fullName": "Ned Stark",
                            "internalId": "0987-6543-2109-8765",
                            "isRequester": false
                        },
                        "client": {
                            "fullName": "John Doe",
                            "internalId": "97234tyi23rfiy325r3i7r"
                        },
                        "deletable": true,
                        "hasAttachments": false,
                        "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9",
                        "important": false,
                        "read": true,
                        "read-only": false,
                        "sender": {
                            "deleted": false,
                            "id": "97234tyi23rfiy325r3i8o",
                            "name": "John Snow"
                        },
                        "subject": "Loan Rejected",
                        "timestamp": "2019-01-02T10:51:30.000+0000",
                        "topic": {
                            "deleted": true,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064b7",
                            "name": "Loan rejected"
                        }
                    }, {
                        "assignee": {
                            "fullName": "John Snow",
                            "internalId": "1234-5678-9012-3456",
                            "isRequester": true
                        },
                        "client": {
                            "fullName": "John Doe",
                            "internalId": "97234tyi23rfiy325r3i7r"
                        },
                        "deletable": true,
                        "hasAttachments": false,
                        "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7",
                        "important": true,
                        "read": false,
                        "read-only": false,
                        "sender": {
                            "deleted": false,
                            "id": "97234tyi23rfiy325r3i7r",
                            "name": "John Doe"
                        },
                        "subject": "Important Application",
                        "timestamp": "2017-10-02T10:51:30.000+0000",
                        "topic": {
                            "deleted": false,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                            "name": "Savings"
                        }
                    }]
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServiceGetConversationsCounterMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/conversations/counters",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "unassigned": 2,
                    "unreadAssigned": 5
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServiceGetConversationsReportMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/conversations/report",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "clientUserFullName": "Ned Stark",
                        "clientUserId": "417a289c-5011-4dbc-a3ee-c00ed914f5fe",
                        "rootMessageSentDate": "2021-09-28T12:47:40.000+0000",
                        "lastMessageSentDate": "2021-09-29T13:50:40.000+0000",
                        "status": "NEW",
                        "topic": {
                            "deleted": false,
                            "id": "8e368e8f-f99c-4edb-8edb-b935b97faa60",
                            "name": "Living social deals"
                        },
                        "subject": "Important Application",
                        "bankAssigneeId": "43ca9de8-ac20-43bd-9c7d-bfa9e4ce16f8",
                        "bankAssigneeFullName": "John Snow"
                    }, {
                        "clientUserFullName": "Robert Johnson",
                        "clientUserId": "417a289c-5011-4dbc-a3ee-c00ed914f5fe",
                        "rootMessageSentDate": "2021-10-11T18:24:17.000+0000",
                        "lastMessageSentDate": "2021-10-11T20:27:19.000+0000",
                        "status": "IN_PROGRESS",
                        "topic": {
                            "deleted": false,
                            "id": "96aeb836-d5c1-4303-826c-5424012ba09f",
                            "name": "Prize"
                        },
                        "subject": "Vacation on Mars",
                        "bankAssigneeId": "bc32371a-2c5a-4fd9-b78e-ffe5c95e1a42",
                        "bankAssigneeFullName": "Maria Flores"
                    }]
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServiceGetEmployeeMessageThreadMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/messages/{messageId}/conversation",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "assignee": {
                        "fullName": "John Snow",
                        "internalId": "1234-5678-9012-3456",
                        "isRequester": true
                    },
                    "attachments": [{
                            "createdAt": "2017-10-02T10:51:50.000+0000",
                            "filename": "message-attachment-filename.pdf",
                            "id": "5d869ea0-d3a3-4b83-888f-767bdcdcd565",
                            "size": 2592836
                        }, {
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "filename": "another-message-attachment-filename.pdf",
                            "id": "ae4658a4-073c-4d8b-ab5d-55e9238d3ff0",
                            "size": 15982836
                        }],
                    "deletable": true,
                    "important": true,
                    "messages": [{
                            "body": "VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+",
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7",
                            "isMyMessage": true,
                            "sender": {
                                "id": "97234tyi23rfiy325r3i7r",
                                "name": "John Doe"
                            }
                        }, {
                            "body": "PGRpdj48b2w+PGxpPkNhc3RsZXMgaW4gR3JlYXQgQnJpdGFpbiBhbmQgSXJlbGFuZDxicj48L2xpPjxsaT5MaXN0IG9mIGNhc3RsZXMgaW4gV2FsZXM8YnI+PC9saT48bGk+TGlzdCBvZiBnYXJkZW5zIGluIFdhbGVzPGJyPjwvbGk+PC9vbD48L2Rpdj4=",
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e1",
                            "isMyMessage": false,
                            "sender": {
                                "id": "97234tyi23rfiy325r3i72",
                                "name": "John Doe 2"
                            }
                        }, {
                            "attachments": [{
                                    "createdAt": "2017-10-02T10:51:30.000+0000",
                                    "filename": "another-message-attachment-filename.pdf",
                                    "id": "ae4658a4-073c-4d8b-ab5d-55e9238d3ff0",
                                    "size": 15982836
                                }],
                            "body": "PGRpdj48b2w+PGxpPiA8Yj4iQ2hpcmsgQ2FzdGxlLCBDaGlyayI8L2I+LiBCcml0aXNoIExpc3RlZCBidWlsZGluZ3MuIFJldHJpZXZlZCAyMyBKdWx5IDIwMTUuPGJyPjwvbGk+PGxpPiA8Yj4iQ2hpcmsgQ2FzdGxlIOKAkyBPZmZpY2lhbCBHdWlkZWJvb2siLjwvYj4gQ2FzdGxlIFdhbGVzLjxicj48L2xpPjxsaT4gPGI+IkNoaXJrIENhc3RsZSIuPC9iPiBOYXRpb25hbCBUcnVzdC48YnI+PC9saT48bGk+IDxiPiJUaGUgT2FrIGF0IHRoZSBHYXRlIG9mIHRoZSBEZWFkIjwvYj4uIFBlb3BsZSdzIENvbGxlY3Rpb24gV2FsZXMuIFJldHJpZXZlZCAxIE1hcmNoIDIwMTguPGJyPjwvbGk+PC9vbD48L2Rpdj4=",
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e2",
                            "isMyMessage": true,
                            "sender": {
                                "id": "97234tyi23rfiy325r3i73",
                                "name": "John Doe 3"
                            }
                        }, {
                            "attachments": [{
                                    "createdAt": "2017-10-02T10:51:50.000+0000",
                                    "filename": "message-attachment-filename.pdf",
                                    "id": "5d869ea0-d3a3-4b83-888f-767bdcdcd565",
                                    "size": 2592836
                                }],
                            "body": "VGhlIGNhc3RsZSB3YXMgdXNlZCBhcyBhIHNwZWNpYWwgc3RhZ2UgaW4gdGhlIDxiPjIwMTM8L2I+IFdhbGVzIFJhbGx5IEdCLiA8ZGl2PjxpPjxiPjx1Pjxicj48L3U+PC9iPjwvaT48L2Rpdj48ZGl2PjxpPjxiPjx1PlRoZSBPYWsgYXQgdGhlIEdhdGUgb2YgdGhlIERlYWQ8L3U+PC9iPjwvaT4gbGllcyAzMDBtIGZyb20gPGI+Q2hpcmsgQ2FzdGxlPC9iPiBhbmQgbWFya3MgdGhlIHNpdGUgb2YgdGhlIDExNjUgPGI+QmF0dGxlIG9mIENyb2dlbjwvYj4uPC9kaXY+",
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e3",
                            "isMyMessage": false,
                            "sender": {
                                "id": "97234tyi23rfiy325r3i74",
                                "name": "John Doe 4"
                            }
                        }],
                    "read": false,
                    "read-only": false,
                    "rootMessageId": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7",
                    "subject": "Application Rejected (your efforts are futile)",
                    "topic": {
                        "deleted": false,
                        "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                        "name": "Savings"
                    },
                    "workflowStatus": "NEW"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServiceGetMessageAttachmentEmployeeMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/attachments/{attachmentId}",
        method: "GET",
        responses: [
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServiceGetSearchConversationsMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/conversations/search",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "assignee": {
                            "fullName": "John Snow",
                            "internalId": "1234-5678-9012-3456",
                            "isRequester": true
                        },
                        "client": {
                            "fullName": "John Doe",
                            "internalId": "97234tyi23rfiy325r3i7r"
                        },
                        "deletable": true,
                        "hasAttachments": true,
                        "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7",
                        "important": false,
                        "read": false,
                        "read-only": false,
                        "sender": {
                            "deleted": false,
                            "id": "97234tyi23rfiy325r3i7r",
                            "name": "John Doe"
                        },
                        "subject": "Application Rejected",
                        "timestamp": "2017-10-02T10:51:30.275+0000",
                        "topic": {
                            "deleted": false,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                            "name": "Savings"
                        }
                    }, {
                        "assignee": {
                            "fullName": "Ned Stark",
                            "internalId": "0987-6543-2109-8765",
                            "isRequester": false
                        },
                        "client": {
                            "fullName": "John Doe",
                            "internalId": "97234tyi23rfiy325r3i7r"
                        },
                        "deletable": true,
                        "hasAttachments": false,
                        "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9",
                        "important": false,
                        "read": true,
                        "read-only": false,
                        "sender": {
                            "deleted": false,
                            "id": "97234tyi23rfiy325r3i8o",
                            "name": "John Snow"
                        },
                        "subject": "Loan Rejected",
                        "timestamp": "2019-01-02T10:51:30.000+0000",
                        "topic": {
                            "deleted": true,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064b7",
                            "name": "Loan rejected"
                        }
                    }, {
                        "assignee": {
                            "fullName": "John Snow",
                            "internalId": "1234-5678-9012-3456",
                            "isRequester": true
                        },
                        "client": {
                            "fullName": "John Doe",
                            "internalId": "97234tyi23rfiy325r3i7r"
                        },
                        "deletable": true,
                        "hasAttachments": false,
                        "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7",
                        "important": true,
                        "read": false,
                        "read-only": false,
                        "sender": {
                            "deleted": false,
                            "id": "97234tyi23rfiy325r3i7r",
                            "name": "John Doe"
                        },
                        "subject": "Important Application",
                        "timestamp": "2017-10-02T10:51:30.000+0000",
                        "topic": {
                            "deleted": false,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                            "name": "Savings"
                        }
                    }]
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServiceGetSubscriptionsMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/topics/{topicId}/subscriptions",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "id": "08ee5037-8dce-43ab-b734-e2b90a189b82",
                        "internalUserId": "03185355-649e-4ab5-97c8-a02555c7a4b2",
                        "subscriberName": "Britney Spears",
                        "subscriptionDate": "2017-08-22T11:07:27.000+0000"
                    }, {
                        "id": "58ee5037-8dce-43ab-b734-e2b90a189b81",
                        "internalUserId": "d462caa4-edfb-4776-a4b4-9f7e5834d2ae",
                        "subscriberName": "Lady Gaga",
                        "subscriptionDate": "2017-08-22T11:07:27.000+0000"
                    }]
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServiceGetTopicMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/topics/{topicId}",
        method: "GET",
        responses: [
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServiceGetTopicsEmployeeMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/topics",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "code": "40219526-aa79-4a81-a0a5-ffd12ffed8a3",
                        "id": "40219526-aa79-4a81-a0a5-ffd12ffed8a3",
                        "mailoutTopic": true,
                        "name": "Mortgage application",
                        "subscribersCount": 21
                    }, {
                        "code": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                        "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                        "mailoutTopic": true,
                        "name": "Loans",
                        "subscribersCount": 102
                    }, {
                        "code": "4fb026ec-62e5-41c8-aa28-149d7544b704",
                        "id": "4fb026ec-62e5-41c8-aa28-149d7544b704",
                        "mailoutTopic": false,
                        "name": "Problems with making a payment",
                        "subscribersCount": 4
                    }]
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServicePostMessageAttachmentsEmployeeMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/attachments",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "createdAt": "2000-01-23T04:56:07.000+00:00",
                    "filename": "filename",
                    "size": 0.8008281904610115,
                    "additions": {
                        "key": "additions"
                    },
                    "id": "id"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const EmployeeHttpServicePostMessageReplyEmployeeMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/messages/{messageId}/reply",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "2ca7990f-bcda-4eba-8763-03bf7c66cf3f"
                }
            },
            {
                status: 201,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "id": "id"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServicePostMessagesEmployeeMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/messages",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "2ca7990f-bcda-4eba-8763-03bf7c66cf3f"
                }
            },
            {
                status: 201,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "id": "id"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServicePostSubscribersMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/topics/{topicId}/subscribers",
        method: "POST",
        responses: [
            {
                status: 201,
                body: [{
                        "isSubscribed": true,
                        "subscriberId": "08ee5037-8dce-43ab-b734-e2b90a189b82"
                    }, {
                        "isSubscribed": false,
                        "subscriberId": "58ee5037-8dce-43ab-b734-e2b90a189b81"
                    }]
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServicePostSubscriptionsMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/topics/{topicId}/subscriptions",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "79754562-57f6-4cf7-81dc-ec757e4d4c04"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServicePostTopicsMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/topics",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "failedSubscriberIds": ["nonExistentId"],
                    "id": "79754562-57f6-4cf7-81dc-ec757e4d4c04",
                    "name": "New topic",
                    "subscribers": ["d462caa4-edfb-4776-a4b4-9f7e5834d2ae", "03185355-649e-4ab5-97c8-a02555c7a4b2"]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServicePutAssignConversationMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/messages/{messageId}/assign",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "fullName": "John Smith",
                    "internalId": "5123-1123-12322",
                    "isRequester": true
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServicePutConversationAssignmentMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/messages/assignment",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "assignedItems": ["e92bbe7d-10cf-4d7c-b7b5-eadb7632812a", "58ee5037-8dce-43ab-b734-e2b90a189b81"],
                    "failedItems": ["b0069a89-3dcb-4bdc-b7da-fc65643064a6", "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9"],
                    "fullName": "John Smith",
                    "internalId": "5123-1123-12322",
                    "isRequester": true
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServicePutConversationResolutionMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/messages/{messageId}/resolution",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "resolutionStatus": "RESOLVED"
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServicePutConversationResolutionEmployeeMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/messages/resolution",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "failedItems": ["b0069a89-3dcb-4bdc-b7da-fc65643064a6", "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9"],
                    "resolutionStatus": "RESOLVED",
                    "successfulItems": ["e92bbe7d-10cf-4d7c-b7b5-eadb7632812a", "58ee5037-8dce-43ab-b734-e2b90a189b81"]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServicePutMarkAsReadUnreadEmployeeMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/conversations/read",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "changedItems": ["changedItems", "changedItems"],
                    "failedItems": ["failedItems", "failedItems"]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServicePutMessageThreadTopicMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/messages/{messageId}/topic",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {}
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServicePutTopicMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/employee/topics/{topicId}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "code": "4fb026ec-62e5-41c8-aa28-149d7544b704",
                    "id": "4fb026ec-62e5-41c8-aa28-149d7544b704",
                    "name": "Problems with making a payment"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const EmployeeHttpServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v5/employee/messages/assignment",
        method: "DELETE",
        responses: [
            {
                status: 200,
                body: {
                    "failedItems": ["b0069a89-3dcb-4bdc-b7da-fc65643064a6", "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9"],
                    "unassignedItems": ["e92bbe7d-10cf-4d7c-b7b5-eadb7632812a", "58ee5037-8dce-43ab-b734-e2b90a189b81"]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/attachments",
        method: "DELETE",
        responses: [
            {
                status: 200,
                body: {
                    "deleted": ["e92bbe7d-10cf-4d7c-b7b5-eadb7632812a", "58ee5037-8dce-43ab-b734-e2b90a189b81"],
                    "failed": ["b0069a89-3dcb-4bdc-b7da-fc65643064a6", "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9"]
                }
            },
            {
                status: 200,
                body: {
                    "deleted": ["deleted", "deleted"],
                    "additions": {
                        "key": "additions"
                    },
                    "failed": ["failed", "failed"]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/topics/{topicId}/subscriptions/{subscriptionId}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: {}
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/topics/{topicId}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: {}
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/conversations",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "assignee": {
                            "fullName": "John Snow",
                            "internalId": "1234-5678-9012-3456",
                            "isRequester": true
                        },
                        "client": {
                            "fullName": "John Doe",
                            "internalId": "97234tyi23rfiy325r3i7r"
                        },
                        "deletable": true,
                        "hasAttachments": true,
                        "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7",
                        "important": false,
                        "read": false,
                        "read-only": false,
                        "sender": {
                            "deleted": false,
                            "id": "97234tyi23rfiy325r3i7r",
                            "name": "John Doe"
                        },
                        "subject": "Application Rejected",
                        "timestamp": "2017-10-02T10:51:30.275+0000",
                        "topic": {
                            "deleted": false,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                            "name": "Savings"
                        }
                    }, {
                        "assignee": {
                            "fullName": "Ned Stark",
                            "internalId": "0987-6543-2109-8765",
                            "isRequester": false
                        },
                        "client": {
                            "fullName": "John Doe",
                            "internalId": "97234tyi23rfiy325r3i7r"
                        },
                        "deletable": true,
                        "hasAttachments": false,
                        "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9",
                        "important": false,
                        "read": true,
                        "read-only": false,
                        "sender": {
                            "deleted": false,
                            "id": "97234tyi23rfiy325r3i8o",
                            "name": "John Snow"
                        },
                        "subject": "Loan Rejected",
                        "timestamp": "2019-01-02T10:51:30.000+0000",
                        "topic": {
                            "deleted": true,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064b7",
                            "name": "Loan rejected"
                        }
                    }, {
                        "assignee": {
                            "fullName": "John Snow",
                            "internalId": "1234-5678-9012-3456",
                            "isRequester": true
                        },
                        "client": {
                            "fullName": "John Doe",
                            "internalId": "97234tyi23rfiy325r3i7r"
                        },
                        "deletable": true,
                        "hasAttachments": false,
                        "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7",
                        "important": true,
                        "read": false,
                        "read-only": false,
                        "sender": {
                            "deleted": false,
                            "id": "97234tyi23rfiy325r3i7r",
                            "name": "John Doe"
                        },
                        "subject": "Important Application",
                        "timestamp": "2017-10-02T10:51:30.000+0000",
                        "topic": {
                            "deleted": false,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                            "name": "Savings"
                        }
                    }]
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/conversations/counters",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "unassigned": 2,
                    "unreadAssigned": 5
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/conversations/report",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "clientUserFullName": "Ned Stark",
                        "clientUserId": "417a289c-5011-4dbc-a3ee-c00ed914f5fe",
                        "rootMessageSentDate": "2021-09-28T12:47:40.000+0000",
                        "lastMessageSentDate": "2021-09-29T13:50:40.000+0000",
                        "status": "NEW",
                        "topic": {
                            "deleted": false,
                            "id": "8e368e8f-f99c-4edb-8edb-b935b97faa60",
                            "name": "Living social deals"
                        },
                        "subject": "Important Application",
                        "bankAssigneeId": "43ca9de8-ac20-43bd-9c7d-bfa9e4ce16f8",
                        "bankAssigneeFullName": "John Snow"
                    }, {
                        "clientUserFullName": "Robert Johnson",
                        "clientUserId": "417a289c-5011-4dbc-a3ee-c00ed914f5fe",
                        "rootMessageSentDate": "2021-10-11T18:24:17.000+0000",
                        "lastMessageSentDate": "2021-10-11T20:27:19.000+0000",
                        "status": "IN_PROGRESS",
                        "topic": {
                            "deleted": false,
                            "id": "96aeb836-d5c1-4303-826c-5424012ba09f",
                            "name": "Prize"
                        },
                        "subject": "Vacation on Mars",
                        "bankAssigneeId": "bc32371a-2c5a-4fd9-b78e-ffe5c95e1a42",
                        "bankAssigneeFullName": "Maria Flores"
                    }]
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/messages/{messageId}/conversation",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "assignee": {
                        "fullName": "John Snow",
                        "internalId": "1234-5678-9012-3456",
                        "isRequester": true
                    },
                    "attachments": [{
                            "createdAt": "2017-10-02T10:51:50.000+0000",
                            "filename": "message-attachment-filename.pdf",
                            "id": "5d869ea0-d3a3-4b83-888f-767bdcdcd565",
                            "size": 2592836
                        }, {
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "filename": "another-message-attachment-filename.pdf",
                            "id": "ae4658a4-073c-4d8b-ab5d-55e9238d3ff0",
                            "size": 15982836
                        }],
                    "deletable": true,
                    "important": true,
                    "messages": [{
                            "body": "VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+",
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7",
                            "isMyMessage": true,
                            "sender": {
                                "id": "97234tyi23rfiy325r3i7r",
                                "name": "John Doe"
                            }
                        }, {
                            "body": "PGRpdj48b2w+PGxpPkNhc3RsZXMgaW4gR3JlYXQgQnJpdGFpbiBhbmQgSXJlbGFuZDxicj48L2xpPjxsaT5MaXN0IG9mIGNhc3RsZXMgaW4gV2FsZXM8YnI+PC9saT48bGk+TGlzdCBvZiBnYXJkZW5zIGluIFdhbGVzPGJyPjwvbGk+PC9vbD48L2Rpdj4=",
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e1",
                            "isMyMessage": false,
                            "sender": {
                                "id": "97234tyi23rfiy325r3i72",
                                "name": "John Doe 2"
                            }
                        }, {
                            "attachments": [{
                                    "createdAt": "2017-10-02T10:51:30.000+0000",
                                    "filename": "another-message-attachment-filename.pdf",
                                    "id": "ae4658a4-073c-4d8b-ab5d-55e9238d3ff0",
                                    "size": 15982836
                                }],
                            "body": "PGRpdj48b2w+PGxpPiA8Yj4iQ2hpcmsgQ2FzdGxlLCBDaGlyayI8L2I+LiBCcml0aXNoIExpc3RlZCBidWlsZGluZ3MuIFJldHJpZXZlZCAyMyBKdWx5IDIwMTUuPGJyPjwvbGk+PGxpPiA8Yj4iQ2hpcmsgQ2FzdGxlIOKAkyBPZmZpY2lhbCBHdWlkZWJvb2siLjwvYj4gQ2FzdGxlIFdhbGVzLjxicj48L2xpPjxsaT4gPGI+IkNoaXJrIENhc3RsZSIuPC9iPiBOYXRpb25hbCBUcnVzdC48YnI+PC9saT48bGk+IDxiPiJUaGUgT2FrIGF0IHRoZSBHYXRlIG9mIHRoZSBEZWFkIjwvYj4uIFBlb3BsZSdzIENvbGxlY3Rpb24gV2FsZXMuIFJldHJpZXZlZCAxIE1hcmNoIDIwMTguPGJyPjwvbGk+PC9vbD48L2Rpdj4=",
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e2",
                            "isMyMessage": true,
                            "sender": {
                                "id": "97234tyi23rfiy325r3i73",
                                "name": "John Doe 3"
                            }
                        }, {
                            "attachments": [{
                                    "createdAt": "2017-10-02T10:51:50.000+0000",
                                    "filename": "message-attachment-filename.pdf",
                                    "id": "5d869ea0-d3a3-4b83-888f-767bdcdcd565",
                                    "size": 2592836
                                }],
                            "body": "VGhlIGNhc3RsZSB3YXMgdXNlZCBhcyBhIHNwZWNpYWwgc3RhZ2UgaW4gdGhlIDxiPjIwMTM8L2I+IFdhbGVzIFJhbGx5IEdCLiA8ZGl2PjxpPjxiPjx1Pjxicj48L3U+PC9iPjwvaT48L2Rpdj48ZGl2PjxpPjxiPjx1PlRoZSBPYWsgYXQgdGhlIEdhdGUgb2YgdGhlIERlYWQ8L3U+PC9iPjwvaT4gbGllcyAzMDBtIGZyb20gPGI+Q2hpcmsgQ2FzdGxlPC9iPiBhbmQgbWFya3MgdGhlIHNpdGUgb2YgdGhlIDExNjUgPGI+QmF0dGxlIG9mIENyb2dlbjwvYj4uPC9kaXY+",
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e3",
                            "isMyMessage": false,
                            "sender": {
                                "id": "97234tyi23rfiy325r3i74",
                                "name": "John Doe 4"
                            }
                        }],
                    "read": false,
                    "read-only": false,
                    "rootMessageId": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7",
                    "subject": "Application Rejected (your efforts are futile)",
                    "topic": {
                        "deleted": false,
                        "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                        "name": "Savings"
                    },
                    "workflowStatus": "NEW"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/attachments/{attachmentId}",
        method: "GET",
        responses: [
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/conversations/search",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "assignee": {
                            "fullName": "John Snow",
                            "internalId": "1234-5678-9012-3456",
                            "isRequester": true
                        },
                        "client": {
                            "fullName": "John Doe",
                            "internalId": "97234tyi23rfiy325r3i7r"
                        },
                        "deletable": true,
                        "hasAttachments": true,
                        "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7",
                        "important": false,
                        "read": false,
                        "read-only": false,
                        "sender": {
                            "deleted": false,
                            "id": "97234tyi23rfiy325r3i7r",
                            "name": "John Doe"
                        },
                        "subject": "Application Rejected",
                        "timestamp": "2017-10-02T10:51:30.275+0000",
                        "topic": {
                            "deleted": false,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                            "name": "Savings"
                        }
                    }, {
                        "assignee": {
                            "fullName": "Ned Stark",
                            "internalId": "0987-6543-2109-8765",
                            "isRequester": false
                        },
                        "client": {
                            "fullName": "John Doe",
                            "internalId": "97234tyi23rfiy325r3i7r"
                        },
                        "deletable": true,
                        "hasAttachments": false,
                        "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9",
                        "important": false,
                        "read": true,
                        "read-only": false,
                        "sender": {
                            "deleted": false,
                            "id": "97234tyi23rfiy325r3i8o",
                            "name": "John Snow"
                        },
                        "subject": "Loan Rejected",
                        "timestamp": "2019-01-02T10:51:30.000+0000",
                        "topic": {
                            "deleted": true,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064b7",
                            "name": "Loan rejected"
                        }
                    }, {
                        "assignee": {
                            "fullName": "John Snow",
                            "internalId": "1234-5678-9012-3456",
                            "isRequester": true
                        },
                        "client": {
                            "fullName": "John Doe",
                            "internalId": "97234tyi23rfiy325r3i7r"
                        },
                        "deletable": true,
                        "hasAttachments": false,
                        "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7",
                        "important": true,
                        "read": false,
                        "read-only": false,
                        "sender": {
                            "deleted": false,
                            "id": "97234tyi23rfiy325r3i7r",
                            "name": "John Doe"
                        },
                        "subject": "Important Application",
                        "timestamp": "2017-10-02T10:51:30.000+0000",
                        "topic": {
                            "deleted": false,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                            "name": "Savings"
                        }
                    }]
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/topics/{topicId}/subscriptions",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "id": "08ee5037-8dce-43ab-b734-e2b90a189b82",
                        "internalUserId": "03185355-649e-4ab5-97c8-a02555c7a4b2",
                        "subscriberName": "Britney Spears",
                        "subscriptionDate": "2017-08-22T11:07:27.000+0000"
                    }, {
                        "id": "58ee5037-8dce-43ab-b734-e2b90a189b81",
                        "internalUserId": "d462caa4-edfb-4776-a4b4-9f7e5834d2ae",
                        "subscriberName": "Lady Gaga",
                        "subscriptionDate": "2017-08-22T11:07:27.000+0000"
                    }]
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/topics/{topicId}",
        method: "GET",
        responses: [
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/topics",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "code": "40219526-aa79-4a81-a0a5-ffd12ffed8a3",
                        "id": "40219526-aa79-4a81-a0a5-ffd12ffed8a3",
                        "mailoutTopic": true,
                        "name": "Mortgage application",
                        "subscribersCount": 21
                    }, {
                        "code": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                        "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                        "mailoutTopic": true,
                        "name": "Loans",
                        "subscribersCount": 102
                    }, {
                        "code": "4fb026ec-62e5-41c8-aa28-149d7544b704",
                        "id": "4fb026ec-62e5-41c8-aa28-149d7544b704",
                        "mailoutTopic": false,
                        "name": "Problems with making a payment",
                        "subscribersCount": 4
                    }]
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/attachments",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "createdAt": "2000-01-23T04:56:07.000+00:00",
                    "filename": "filename",
                    "size": 0.8008281904610115,
                    "additions": {
                        "key": "additions"
                    },
                    "id": "id"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/messages/{messageId}/reply",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "2ca7990f-bcda-4eba-8763-03bf7c66cf3f"
                }
            },
            {
                status: 201,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "id": "id"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/messages",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "2ca7990f-bcda-4eba-8763-03bf7c66cf3f"
                }
            },
            {
                status: 201,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "id": "id"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/topics/{topicId}/subscribers",
        method: "POST",
        responses: [
            {
                status: 201,
                body: [{
                        "isSubscribed": true,
                        "subscriberId": "08ee5037-8dce-43ab-b734-e2b90a189b82"
                    }, {
                        "isSubscribed": false,
                        "subscriberId": "58ee5037-8dce-43ab-b734-e2b90a189b81"
                    }]
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/topics/{topicId}/subscriptions",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "79754562-57f6-4cf7-81dc-ec757e4d4c04"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/topics",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "failedSubscriberIds": ["nonExistentId"],
                    "id": "79754562-57f6-4cf7-81dc-ec757e4d4c04",
                    "name": "New topic",
                    "subscribers": ["d462caa4-edfb-4776-a4b4-9f7e5834d2ae", "03185355-649e-4ab5-97c8-a02555c7a4b2"]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/messages/{messageId}/assign",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "fullName": "John Smith",
                    "internalId": "5123-1123-12322",
                    "isRequester": true
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/messages/assignment",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "assignedItems": ["e92bbe7d-10cf-4d7c-b7b5-eadb7632812a", "58ee5037-8dce-43ab-b734-e2b90a189b81"],
                    "failedItems": ["b0069a89-3dcb-4bdc-b7da-fc65643064a6", "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9"],
                    "fullName": "John Smith",
                    "internalId": "5123-1123-12322",
                    "isRequester": true
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/messages/{messageId}/resolution",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "resolutionStatus": "RESOLVED"
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/messages/resolution",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "failedItems": ["b0069a89-3dcb-4bdc-b7da-fc65643064a6", "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9"],
                    "resolutionStatus": "RESOLVED",
                    "successfulItems": ["e92bbe7d-10cf-4d7c-b7b5-eadb7632812a", "58ee5037-8dce-43ab-b734-e2b90a189b81"]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/conversations/read",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "changedItems": ["changedItems", "changedItems"],
                    "failedItems": ["failedItems", "failedItems"]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/messages/{messageId}/topic",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {}
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/employee/topics/{topicId}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "code": "4fb026ec-62e5-41c8-aa28-149d7544b704",
                    "id": "4fb026ec-62e5-41c8-aa28-149d7544b704",
                    "name": "Problems with making a payment"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,