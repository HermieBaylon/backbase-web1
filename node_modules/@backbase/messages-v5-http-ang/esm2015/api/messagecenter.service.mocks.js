import { createMocks } from '@backbase/foundation-ang/data-http';
export const MessagecenterHttpServiceDeleteConversationThreadsMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/message-center/messages/conversations",
        method: "DELETE",
        responses: [
            {
                status: 200,
                body: {
                    "deletedItems": ["e92bbe7d-10cf-4d7c-b7b5-eadb7632812a", "58ee5037-8dce-43ab-b734-e2b90a189b81"],
                    "failedItems": ["b0069a89-3dcb-4bdc-b7da-fc65643064a6", "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9"]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
        ]
    }]);
export const MessagecenterHttpServiceDeleteMessageAttachmentsMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/message-center/attachments",
        method: "DELETE",
        responses: [
            {
                status: 200,
                body: {
                    "deleted": ["e92bbe7d-10cf-4d7c-b7b5-eadb7632812a", "58ee5037-8dce-43ab-b734-e2b90a189b81"],
                    "failed": ["b0069a89-3dcb-4bdc-b7da-fc65643064a6", "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9"]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const MessagecenterHttpServiceDeleteMessageDraftsMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/message-center/messages/drafts",
        method: "DELETE",
        responses: [
            {
                status: 200,
                body: {
                    "deleted": ["e92bbe7d-10cf-4d7c-b7b5-eadb7632812a", "58ee5037-8dce-43ab-b734-e2b90a189b81"],
                    "failed": ["b0069a89-3dcb-4bdc-b7da-fc65643064a6", "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9"]
                }
            },
        ]
    }]);
export const MessagecenterHttpServiceGetConversationThreadsMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/message-center/messages/conversations",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "deletable": true,
                        "hasAttachments": true,
                        "hasDraft": true,
                        "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7",
                        "important": false,
                        "read": false,
                        "read-only": false,
                        "sender": {
                            "deleted": false,
                            "id": "97234tyi23rfiy325r3i7r",
                            "name": "John Doe"
                        },
                        "subject": "Application Rejected",
                        "timestamp": "2017-10-02T10:51:30.000+0000",
                        "topic": {
                            "deleted": false,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                            "name": "Savings"
                        }
                    }, {
                        "deletable": true,
                        "hasAttachments": false,
                        "hasDraft": false,
                        "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9",
                        "important": false,
                        "read": true,
                        "read-only": false,
                        "sender": {
                            "deleted": false,
                            "id": "97234tyi23rfiy325r3i8o",
                            "name": "John Snow"
                        },
                        "subject": "Loan Rejected",
                        "timestamp": "2019-01-02T10:51:30.000+0000",
                        "topic": {
                            "deleted": true,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064b7",
                            "name": "Loan rejected"
                        }
                    }, {
                        "deletable": true,
                        "hasAttachments": true,
                        "hasDraft": false,
                        "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395b7",
                        "important": true,
                        "read": false,
                        "read-only": false,
                        "sender": {
                            "deleted": false,
                            "id": "97234tyi23rfiy325r3i7r",
                            "name": "John Doe"
                        },
                        "subject": "Application Rejected",
                        "timestamp": "2017-10-02T10:51:30.000+0000",
                        "topic": {
                            "deleted": false,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                            "name": "Savings"
                        }
                    }]
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
        ]
    }]);
export const MessagecenterHttpServiceGetMessageAttachmentMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/message-center/attachments/{attachmentId}",
        method: "GET",
        responses: [
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const MessagecenterHttpServiceGetMessageDraftMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/message-center/messages/drafts/{draftId}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "attachments": [{
                            "createdAt": "2017-10-02T10:51:50.000+0000",
                            "filename": "message-attachment-filename.pdf",
                            "id": "5d869ea0-d3a3-4b83-888f-767bdcdcd565",
                            "size": 2592836
                        }, {
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "filename": "another-message-attachment-filename.pdf",
                            "id": "ae4658a4-073c-4d8b-ab5d-55e9238d3ff0",
                            "size": 15982836
                        }],
                    "body": "VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+",
                    "id": "754cd7fd-a9dd-489e-9933-4f0ef556a5cd",
                    "subject": "Draft subject",
                    "timestamp": "2019-11-18T10:51:50.000+0000",
                    "topic": {
                        "deleted": false,
                        "id": "40219526-aa79-4a81-a0a5-ffd12ffed8a3",
                        "name": "Mortgage application"
                    }
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const MessagecenterHttpServiceGetMessageDraftsMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/message-center/messages/drafts",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "body": "VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+",
                        "conversationId": "f57684de-2a63-4646-ace3-bf83b3ef74ct",
                        "hasAttachments": false,
                        "id": "7da6b793-bb3b-411d-b10e-21c0ca205cb2",
                        "subject": "Conversation with draft",
                        "timestamp": "2019-11-18T11:23:50.000+0000",
                        "topic": {
                            "deleted": false,
                            "id": "4fb026ec-62e5-41c8-aa28-149d7544b704",
                            "name": "Problems with making a payment"
                        }
                    }, {
                        "body": "VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+",
                        "hasAttachments": true,
                        "id": "754cd7fd-a9dd-489e-9933-4f0ef556a5cd",
                        "subject": "Draft subject",
                        "timestamp": "2019-11-17T10:51:50.000+0000",
                        "topic": {
                            "deleted": false,
                            "id": "40219526-aa79-4a81-a0a5-ffd12ffed8a3",
                            "name": "Mortgage application"
                        }
                    }, {
                        "body": "VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+",
                        "hasAttachments": false,
                        "id": "f57684de-2a63-4646-ace3-bf83b3ef74cc",
                        "subject": "Draft 2 subject",
                        "timestamp": "2019-11-18T11:23:50.000+0000",
                        "topic": {
                            "deleted": false,
                            "id": "40219526-aa79-4a81-a0a5-ffd12ffed8a3",
                            "name": "Mortgage application"
                        }
                    }, {
                        "body": "VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+",
                        "conversationId": "f57684de-2a63-4646-ace3-bf83b3ef74ce",
                        "hasAttachments": true,
                        "id": "f29d7a93-337b-4bb4-856d-5a65ba4d1038",
                        "subject": "Conversation with draft 2",
                        "timestamp": "2019-11-18T11:23:50.000+0000",
                        "topic": {
                            "deleted": false,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                            "name": "Loans"
                        }
                    }]
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
        ]
    }]);
export const MessagecenterHttpServiceGetMessageThreadMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/message-center/messages/{messageId}/conversation",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "attachments": [{
                            "createdAt": "2017-10-02T10:51:50.000+0000",
                            "filename": "message-attachment-filename.pdf",
                            "id": "5d869ea0-d3a3-4b83-888f-767bdcdcd565",
                            "size": 2592836
                        }, {
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "filename": "another-message-attachment-filename.pdf",
                            "id": "ae4658a4-073c-4d8b-ab5d-55e9238d3ff0",
                            "size": 15982836
                        }],
                    "deletable": true,
                    "draft": {
                        "attachments": [{
                                "createdAt": "2017-10-10T17:21:30.000+0000",
                                "filename": "draft-message-attachment-filename.pdf",
                                "id": "1b4e4fa5-51b7-4907-b130-ea4f26e36a3d",
                                "size": 15982836
                            }],
                        "body": "VGhlIGNhc3RsZSB3YXMgdXNlZCBhcyBhIHNwZWNpYWwgc3RhZ2UgaW4gdGhlIDxiPjIwMTM8L2I+IFdhbGVzIFJhbGx5IEdCLiA8ZGl2PjxpPjxiPjx1Pjxicj48L3U+PC9iPjwvaT48L2Rpdj48ZGl2PjxpPjxiPjx1PlRoZSBPYWsgYXQgdGhlIEdhdGUgb2YgdGhlIERlYWQ8L3U+PC9iPjwvaT4gbGllcyAzMDBtIGZyb20gPGI+Q2hpcmsgQ2FzdGxlPC9iPiBhbmQgbWFya3MgdGhlIHNpdGUgb2YgdGhlIDExNjUgPGI+QmF0dGxlIG9mIENyb2dlbjwvYj4uPC9kaXY+",
                        "createdAt": "2017-10-10T17:51:35.000+0000",
                        "id": "jfg94kf-f4ed-4a6e-bc19-6ennt17395e3"
                    },
                    "important": true,
                    "messages": [{
                            "body": "VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+",
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7",
                            "isMyMessage": true,
                            "sender": {
                                "id": "97234tyi23rfiy325r3i7r",
                                "name": "John Doe"
                            }
                        }, {
                            "body": "PGRpdj48b2w+PGxpPkNhc3RsZXMgaW4gR3JlYXQgQnJpdGFpbiBhbmQgSXJlbGFuZDxicj48L2xpPjxsaT5MaXN0IG9mIGNhc3RsZXMgaW4gV2FsZXM8YnI+PC9saT48bGk+TGlzdCBvZiBnYXJkZW5zIGluIFdhbGVzPGJyPjwvbGk+PC9vbD48L2Rpdj4=",
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e1",
                            "isMyMessage": false,
                            "sender": {
                                "id": "97234tyi23rfiy325r3i72",
                                "name": "John Doe 2"
                            }
                        }, {
                            "attachments": [{
                                    "createdAt": "2017-10-02T10:51:50.000+0000",
                                    "filename": "message-attachment-filename.pdf",
                                    "id": "5d869ea0-d3a3-4b83-888f-767bdcdcd565",
                                    "size": 2592836
                                }],
                            "body": "PGRpdj48b2w+PGxpPiA8Yj4iQ2hpcmsgQ2FzdGxlLCBDaGlyayI8L2I+LiBCcml0aXNoIExpc3RlZCBidWlsZGluZ3MuIFJldHJpZXZlZCAyMyBKdWx5IDIwMTUuPGJyPjwvbGk+PGxpPiA8Yj4iQ2hpcmsgQ2FzdGxlIOKAkyBPZmZpY2lhbCBHdWlkZWJvb2siLjwvYj4gQ2FzdGxlIFdhbGVzLjxicj48L2xpPjxsaT4gPGI+IkNoaXJrIENhc3RsZSIuPC9iPiBOYXRpb25hbCBUcnVzdC48YnI+PC9saT48bGk+IDxiPiJUaGUgT2FrIGF0IHRoZSBHYXRlIG9mIHRoZSBEZWFkIjwvYj4uIFBlb3BsZSdzIENvbGxlY3Rpb24gV2FsZXMuIFJldHJpZXZlZCAxIE1hcmNoIDIwMTguPGJyPjwvbGk+PC9vbD48L2Rpdj4=",
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e2",
                            "isMyMessage": true,
                            "sender": {
                                "id": "97234tyi23rfiy325r3i73",
                                "name": "John Doe 3"
                            }
                        }, {
                            "attachments": [{
                                    "createdAt": "2017-10-02T10:51:30.000+0000",
                                    "filename": "another-message-attachment-filename.pdf",
                                    "id": "ae4658a4-073c-4d8b-ab5d-55e9238d3ff0",
                                    "size": 15982836
                                }],
                            "body": "VGhlIGNhc3RsZSB3YXMgdXNlZCBhcyBhIHNwZWNpYWwgc3RhZ2UgaW4gdGhlIDxiPjIwMTM8L2I+IFdhbGVzIFJhbGx5IEdCLiA8ZGl2PjxpPjxiPjx1Pjxicj48L3U+PC9iPjwvaT48L2Rpdj48ZGl2PjxpPjxiPjx1PlRoZSBPYWsgYXQgdGhlIEdhdGUgb2YgdGhlIERlYWQ8L3U+PC9iPjwvaT4gbGllcyAzMDBtIGZyb20gPGI+Q2hpcmsgQ2FzdGxlPC9iPiBhbmQgbWFya3MgdGhlIHNpdGUgb2YgdGhlIDExNjUgPGI+QmF0dGxlIG9mIENyb2dlbjwvYj4uPC9kaXY+",
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e3",
                            "isMyMessage": false,
                            "sender": {
                                "id": "97234tyi23rfiy325r3i74",
                                "name": "John Doe 4"
                            }
                        }],
                    "read": false,
                    "read-only": false,
                    "rootMessageId": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7",
                    "subject": "Application Rejected (your efforts are futile)",
                    "topic": {
                        "deleted": false,
                        "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                        "name": "Savings"
                    }
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const MessagecenterHttpServiceGetTopicsMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/message-center/topics",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "code": "40219526-aa79-4a81-a0a5-ffd12ffed8a3",
                        "id": "40219526-aa79-4a81-a0a5-ffd12ffed8a3",
                        "name": "Mortgage application"
                    }, {
                        "code": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                        "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                        "name": "Loans"
                    }, {
                        "code": "4fb026ec-62e5-41c8-aa28-149d7544b704",
                        "id": "4fb026ec-62e5-41c8-aa28-149d7544b704",
                        "name": "Problems with making a payment"
                    }]
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
        ]
    }]);
export const MessagecenterHttpServiceGetUnreadConversationsCountMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/message-center/messages/unread-conversation-count",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "unreadCount": 5
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
        ]
    }]);
export const MessagecenterHttpServicePostConversationMessageDraftMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/message-center/messages/{messageId}/conversation/drafts",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "754cd7fd-a9dd-489e-9933-4f0ef556a5cd"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const MessagecenterHttpServicePostMessageAttachmentsMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/message-center/attachments",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "createdAt": "2017-10-02T10:51:30.000+0000",
                    "filename": "message-attachment-filename.pdf",
                    "id": "ae4658a4-073c-4d8b-ab5d-55e9238d3ff0",
                    "size": 15982836
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const MessagecenterHttpServicePostMessageDraftsMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/message-center/messages/drafts",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "754cd7fd-a9dd-489e-9933-4f0ef556a5cd"
                }
            },
            {
                status: 201,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "id": "id"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
        ]
    }]);
export const MessagecenterHttpServicePostMessageReplyMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/message-center/messages/{messageId}/reply",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "2ca7990f-bcda-4eba-8763-03bf7c66cf3f"
                }
            },
            {
                status: 201,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "id": "id"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const MessagecenterHttpServicePostMessagesMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/message-center/messages",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "2ca7990f-bcda-4eba-8763-03bf7c66cf3f"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const MessagecenterHttpServicePutConversationMessageDraftMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/message-center/messages/{messageId}/conversation/drafts",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {}
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const MessagecenterHttpServicePutMarkAsReadUnreadMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/message-center/messages/conversations/read",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "changedItems": ["ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7", "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395b7"],
                    "failedItems": ["b0069a89-3dcb-4bdc-b7da-fc65643064a6", "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9"]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const MessagecenterHttpServicePutMessageDraftMocksProvider = createMocks([{
        urlPattern: "/client-api/v5/message-center/messages/drafts/{draftId}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {}
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const MessagecenterHttpServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v5/message-center/messages/conversations",
        method: "DELETE",
        responses: [
            {
                status: 200,
                body: {
                    "deletedItems": ["e92bbe7d-10cf-4d7c-b7b5-eadb7632812a", "58ee5037-8dce-43ab-b734-e2b90a189b81"],
                    "failedItems": ["b0069a89-3dcb-4bdc-b7da-fc65643064a6", "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9"]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/message-center/attachments",
        method: "DELETE",
        responses: [
            {
                status: 200,
                body: {
                    "deleted": ["e92bbe7d-10cf-4d7c-b7b5-eadb7632812a", "58ee5037-8dce-43ab-b734-e2b90a189b81"],
                    "failed": ["b0069a89-3dcb-4bdc-b7da-fc65643064a6", "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9"]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/message-center/messages/drafts",
        method: "DELETE",
        responses: [
            {
                status: 200,
                body: {
                    "deleted": ["e92bbe7d-10cf-4d7c-b7b5-eadb7632812a", "58ee5037-8dce-43ab-b734-e2b90a189b81"],
                    "failed": ["b0069a89-3dcb-4bdc-b7da-fc65643064a6", "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9"]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/message-center/messages/conversations",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "deletable": true,
                        "hasAttachments": true,
                        "hasDraft": true,
                        "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7",
                        "important": false,
                        "read": false,
                        "read-only": false,
                        "sender": {
                            "deleted": false,
                            "id": "97234tyi23rfiy325r3i7r",
                            "name": "John Doe"
                        },
                        "subject": "Application Rejected",
                        "timestamp": "2017-10-02T10:51:30.000+0000",
                        "topic": {
                            "deleted": false,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                            "name": "Savings"
                        }
                    }, {
                        "deletable": true,
                        "hasAttachments": false,
                        "hasDraft": false,
                        "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9",
                        "important": false,
                        "read": true,
                        "read-only": false,
                        "sender": {
                            "deleted": false,
                            "id": "97234tyi23rfiy325r3i8o",
                            "name": "John Snow"
                        },
                        "subject": "Loan Rejected",
                        "timestamp": "2019-01-02T10:51:30.000+0000",
                        "topic": {
                            "deleted": true,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064b7",
                            "name": "Loan rejected"
                        }
                    }, {
                        "deletable": true,
                        "hasAttachments": true,
                        "hasDraft": false,
                        "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395b7",
                        "important": true,
                        "read": false,
                        "read-only": false,
                        "sender": {
                            "deleted": false,
                            "id": "97234tyi23rfiy325r3i7r",
                            "name": "John Doe"
                        },
                        "subject": "Application Rejected",
                        "timestamp": "2017-10-02T10:51:30.000+0000",
                        "topic": {
                            "deleted": false,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                            "name": "Savings"
                        }
                    }]
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/message-center/attachments/{attachmentId}",
        method: "GET",
        responses: [
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/message-center/messages/drafts/{draftId}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "attachments": [{
                            "createdAt": "2017-10-02T10:51:50.000+0000",
                            "filename": "message-attachment-filename.pdf",
                            "id": "5d869ea0-d3a3-4b83-888f-767bdcdcd565",
                            "size": 2592836
                        }, {
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "filename": "another-message-attachment-filename.pdf",
                            "id": "ae4658a4-073c-4d8b-ab5d-55e9238d3ff0",
                            "size": 15982836
                        }],
                    "body": "VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+",
                    "id": "754cd7fd-a9dd-489e-9933-4f0ef556a5cd",
                    "subject": "Draft subject",
                    "timestamp": "2019-11-18T10:51:50.000+0000",
                    "topic": {
                        "deleted": false,
                        "id": "40219526-aa79-4a81-a0a5-ffd12ffed8a3",
                        "name": "Mortgage application"
                    }
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/message-center/messages/drafts",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "body": "VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+",
                        "conversationId": "f57684de-2a63-4646-ace3-bf83b3ef74ct",
                        "hasAttachments": false,
                        "id": "7da6b793-bb3b-411d-b10e-21c0ca205cb2",
                        "subject": "Conversation with draft",
                        "timestamp": "2019-11-18T11:23:50.000+0000",
                        "topic": {
                            "deleted": false,
                            "id": "4fb026ec-62e5-41c8-aa28-149d7544b704",
                            "name": "Problems with making a payment"
                        }
                    }, {
                        "body": "VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+",
                        "hasAttachments": true,
                        "id": "754cd7fd-a9dd-489e-9933-4f0ef556a5cd",
                        "subject": "Draft subject",
                        "timestamp": "2019-11-17T10:51:50.000+0000",
                        "topic": {
                            "deleted": false,
                            "id": "40219526-aa79-4a81-a0a5-ffd12ffed8a3",
                            "name": "Mortgage application"
                        }
                    }, {
                        "body": "VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+",
                        "hasAttachments": false,
                        "id": "f57684de-2a63-4646-ace3-bf83b3ef74cc",
                        "subject": "Draft 2 subject",
                        "timestamp": "2019-11-18T11:23:50.000+0000",
                        "topic": {
                            "deleted": false,
                            "id": "40219526-aa79-4a81-a0a5-ffd12ffed8a3",
                            "name": "Mortgage application"
                        }
                    }, {
                        "body": "VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+",
                        "conversationId": "f57684de-2a63-4646-ace3-bf83b3ef74ce",
                        "hasAttachments": true,
                        "id": "f29d7a93-337b-4bb4-856d-5a65ba4d1038",
                        "subject": "Conversation with draft 2",
                        "timestamp": "2019-11-18T11:23:50.000+0000",
                        "topic": {
                            "deleted": false,
                            "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                            "name": "Loans"
                        }
                    }]
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/message-center/messages/{messageId}/conversation",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "attachments": [{
                            "createdAt": "2017-10-02T10:51:50.000+0000",
                            "filename": "message-attachment-filename.pdf",
                            "id": "5d869ea0-d3a3-4b83-888f-767bdcdcd565",
                            "size": 2592836
                        }, {
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "filename": "another-message-attachment-filename.pdf",
                            "id": "ae4658a4-073c-4d8b-ab5d-55e9238d3ff0",
                            "size": 15982836
                        }],
                    "deletable": true,
                    "draft": {
                        "attachments": [{
                                "createdAt": "2017-10-10T17:21:30.000+0000",
                                "filename": "draft-message-attachment-filename.pdf",
                                "id": "1b4e4fa5-51b7-4907-b130-ea4f26e36a3d",
                                "size": 15982836
                            }],
                        "body": "VGhlIGNhc3RsZSB3YXMgdXNlZCBhcyBhIHNwZWNpYWwgc3RhZ2UgaW4gdGhlIDxiPjIwMTM8L2I+IFdhbGVzIFJhbGx5IEdCLiA8ZGl2PjxpPjxiPjx1Pjxicj48L3U+PC9iPjwvaT48L2Rpdj48ZGl2PjxpPjxiPjx1PlRoZSBPYWsgYXQgdGhlIEdhdGUgb2YgdGhlIERlYWQ8L3U+PC9iPjwvaT4gbGllcyAzMDBtIGZyb20gPGI+Q2hpcmsgQ2FzdGxlPC9iPiBhbmQgbWFya3MgdGhlIHNpdGUgb2YgdGhlIDExNjUgPGI+QmF0dGxlIG9mIENyb2dlbjwvYj4uPC9kaXY+",
                        "createdAt": "2017-10-10T17:51:35.000+0000",
                        "id": "jfg94kf-f4ed-4a6e-bc19-6ennt17395e3"
                    },
                    "important": true,
                    "messages": [{
                            "body": "VGhlIGNhc3RsZSB3YXMgYnVpbHQgaW4gPGI+MTI5NTwvYj4gYnkgPHU+Um9nZXIgTW9ydGltZXIgZGUgQ2hpcms8L3U+LCB1bmNsZSBvZiA8dT5Sb2dlciBNb3J0aW1lcjwvdT4sIDFzdCBFYXJsIG9mIE1hcmNoIGFzIHBhcnQgb2YgS2luZyBFZHdhcmQgSSdzIGNoYWluIG9mIGZvcnRyZXNzZXMgYWNyb3NzIHRoZSBub3J0aCBvZiBXYWxlcy4gPGRpdj5JdCBndWFyZHMgdGhlIGVudHJhbmNlIHRvIHRoZSA8dT5DZWlyaW9nIFZhbGxleTwvdT4uIDxkaXY+SXQgd2FzIHRoZSBhZG1pbmlzdHJhdGl2ZSBjZW50cmUgZm9yIHRoZSA8dT5NYXJjaGVyIExvcmRzaGlwIG9mIENoaXJrbGFuZDwvdT4uPC9kaXY+PC9kaXY+",
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7",
                            "isMyMessage": true,
                            "sender": {
                                "id": "97234tyi23rfiy325r3i7r",
                                "name": "John Doe"
                            }
                        }, {
                            "body": "PGRpdj48b2w+PGxpPkNhc3RsZXMgaW4gR3JlYXQgQnJpdGFpbiBhbmQgSXJlbGFuZDxicj48L2xpPjxsaT5MaXN0IG9mIGNhc3RsZXMgaW4gV2FsZXM8YnI+PC9saT48bGk+TGlzdCBvZiBnYXJkZW5zIGluIFdhbGVzPGJyPjwvbGk+PC9vbD48L2Rpdj4=",
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e1",
                            "isMyMessage": false,
                            "sender": {
                                "id": "97234tyi23rfiy325r3i72",
                                "name": "John Doe 2"
                            }
                        }, {
                            "attachments": [{
                                    "createdAt": "2017-10-02T10:51:50.000+0000",
                                    "filename": "message-attachment-filename.pdf",
                                    "id": "5d869ea0-d3a3-4b83-888f-767bdcdcd565",
                                    "size": 2592836
                                }],
                            "body": "PGRpdj48b2w+PGxpPiA8Yj4iQ2hpcmsgQ2FzdGxlLCBDaGlyayI8L2I+LiBCcml0aXNoIExpc3RlZCBidWlsZGluZ3MuIFJldHJpZXZlZCAyMyBKdWx5IDIwMTUuPGJyPjwvbGk+PGxpPiA8Yj4iQ2hpcmsgQ2FzdGxlIOKAkyBPZmZpY2lhbCBHdWlkZWJvb2siLjwvYj4gQ2FzdGxlIFdhbGVzLjxicj48L2xpPjxsaT4gPGI+IkNoaXJrIENhc3RsZSIuPC9iPiBOYXRpb25hbCBUcnVzdC48YnI+PC9saT48bGk+IDxiPiJUaGUgT2FrIGF0IHRoZSBHYXRlIG9mIHRoZSBEZWFkIjwvYj4uIFBlb3BsZSdzIENvbGxlY3Rpb24gV2FsZXMuIFJldHJpZXZlZCAxIE1hcmNoIDIwMTguPGJyPjwvbGk+PC9vbD48L2Rpdj4=",
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e2",
                            "isMyMessage": true,
                            "sender": {
                                "id": "97234tyi23rfiy325r3i73",
                                "name": "John Doe 3"
                            }
                        }, {
                            "attachments": [{
                                    "createdAt": "2017-10-02T10:51:30.000+0000",
                                    "filename": "another-message-attachment-filename.pdf",
                                    "id": "ae4658a4-073c-4d8b-ab5d-55e9238d3ff0",
                                    "size": 15982836
                                }],
                            "body": "VGhlIGNhc3RsZSB3YXMgdXNlZCBhcyBhIHNwZWNpYWwgc3RhZ2UgaW4gdGhlIDxiPjIwMTM8L2I+IFdhbGVzIFJhbGx5IEdCLiA8ZGl2PjxpPjxiPjx1Pjxicj48L3U+PC9iPjwvaT48L2Rpdj48ZGl2PjxpPjxiPjx1PlRoZSBPYWsgYXQgdGhlIEdhdGUgb2YgdGhlIERlYWQ8L3U+PC9iPjwvaT4gbGllcyAzMDBtIGZyb20gPGI+Q2hpcmsgQ2FzdGxlPC9iPiBhbmQgbWFya3MgdGhlIHNpdGUgb2YgdGhlIDExNjUgPGI+QmF0dGxlIG9mIENyb2dlbjwvYj4uPC9kaXY+",
                            "createdAt": "2017-10-02T10:51:30.000+0000",
                            "id": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e3",
                            "isMyMessage": false,
                            "sender": {
                                "id": "97234tyi23rfiy325r3i74",
                                "name": "John Doe 4"
                            }
                        }],
                    "read": false,
                    "read-only": false,
                    "rootMessageId": "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7",
                    "subject": "Application Rejected (your efforts are futile)",
                    "topic": {
                        "deleted": false,
                        "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                        "name": "Savings"
                    }
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/message-center/topics",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "code": "40219526-aa79-4a81-a0a5-ffd12ffed8a3",
                        "id": "40219526-aa79-4a81-a0a5-ffd12ffed8a3",
                        "name": "Mortgage application"
                    }, {
                        "code": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                        "id": "b0069a89-3dcb-4bdc-b7da-fc65643064a6",
                        "name": "Loans"
                    }, {
                        "code": "4fb026ec-62e5-41c8-aa28-149d7544b704",
                        "id": "4fb026ec-62e5-41c8-aa28-149d7544b704",
                        "name": "Problems with making a payment"
                    }]
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/message-center/messages/unread-conversation-count",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "unreadCount": 5
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/message-center/messages/{messageId}/conversation/drafts",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "754cd7fd-a9dd-489e-9933-4f0ef556a5cd"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/message-center/attachments",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "createdAt": "2017-10-02T10:51:30.000+0000",
                    "filename": "message-attachment-filename.pdf",
                    "id": "ae4658a4-073c-4d8b-ab5d-55e9238d3ff0",
                    "size": 15982836
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/message-center/messages/drafts",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "754cd7fd-a9dd-489e-9933-4f0ef556a5cd"
                }
            },
            {
                status: 201,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "id": "id"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/message-center/messages/{messageId}/reply",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "2ca7990f-bcda-4eba-8763-03bf7c66cf3f"
                }
            },
            {
                status: 201,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "id": "id"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/message-center/messages",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "2ca7990f-bcda-4eba-8763-03bf7c66cf3f"
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/message-center/messages/{messageId}/conversation/drafts",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {}
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/message-center/messages/conversations/read",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "changedItems": ["ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395e7", "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395b7"],
                    "failedItems": ["b0069a89-3dcb-4bdc-b7da-fc65643064a6", "ae9f9fdd-f4ed-4a6e-bc19-9eeeb17395c9"]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v5/message-center/messages/drafts/{draftId}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {}
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,