{"version":3,"file":"backbase-notifications-popups-widget-ang.js","sources":["../../../../libs/notifications-popups-widget-ang/src/lib/constants/notification-local.ts","../../../../libs/notifications-popups-widget-ang/src/lib/helpers/mappers.ts","../../../../libs/notifications-popups-widget-ang/src/lib/services/widget-properties.service.ts","../../../../libs/notifications-popups-widget-ang/src/lib/services/notifications-popups-data.service.ts","../../../../libs/notifications-popups-widget-ang/src/lib/services/notifications-popups-router.service.ts","../../../../libs/notifications-popups-widget-ang/src/lib/components/notifications-sticky-list-item/notifications-sticky-list-item.component.ts","../../../../libs/notifications-popups-widget-ang/src/lib/components/notifications-sticky-list-item/notifications-sticky-list-item.component.html","../../../../libs/notifications-popups-widget-ang/src/lib/components/notifications-sticky-list/notifications-sticky-list.component.ts","../../../../libs/notifications-popups-widget-ang/src/lib/components/notifications-sticky-list/notifications-sticky-list.component.html","../../../../libs/notifications-popups-widget-ang/src/lib/components/notifications-popups-item/notifications-popups-item.component.ts","../../../../libs/notifications-popups-widget-ang/src/lib/components/notifications-popups-item/notifications-popups-item.component.html","../../../../libs/notifications-popups-widget-ang/src/lib/components/notifications-popups-list/notifications-popups-list.component.ts","../../../../libs/notifications-popups-widget-ang/src/lib/components/notifications-popups-list/notifications-popups-list.component.html","../../../../libs/notifications-popups-widget-ang/src/lib/components/notifications-popups-widget/notifications-popups-widget.component.ts","../../../../libs/notifications-popups-widget-ang/src/lib/notifications-popups-widget.module.ts","../../../../libs/notifications-popups-widget-ang/src/backbase-notifications-popups-widget-ang.ts"],"sourcesContent":["export const NOTIFICATION_LOCAL = 'NOTIFICATION_LOCAL';\n","import { HttpResponse } from '@angular/common/http';\nimport { NotificationStreamItem } from '@backbase/notifications-common-ang';\nimport { SeverityLevel } from '@backbase/data-ang/notifications';\nimport { NotificationSeverityType } from '../models/notification-severity-type.model';\nimport { NotificationLocalItem } from '../models/notifications-local-item.model';\nimport { NOTIFICATION_LOCAL } from '../constants/notification-local';\n\nexport const secondsToMilliseconds = (seconds: number) => seconds * 1000;\n\nexport const fromHttpResponse = <T>(response: HttpResponse<T>) => {\n  if (response.body === null) {\n    throw new Error('Response body not set');\n  }\n\n  return response.body;\n};\n\nexport const notificationsStreamToSticky = (notificationsStream: NotificationStreamItem[]): NotificationStreamItem[] =>\n  notificationsStream.filter(item => !!item.expiresOn);\nexport const notificationsStreamToPopups = (notificationsStream: NotificationStreamItem[]): NotificationStreamItem[] =>\n  notificationsStream.filter(item => !item.expiresOn);\n\n// eslint-disable-next-line arrow-body-style\nexport const parseNotificationSeverityLevel = (level: SeverityLevel): NotificationSeverityType => {\n  return level === 'ALERT' ? 'error' : (level.toLowerCase() as NotificationSeverityType);\n};\n\n// eslint-disable-next-line arrow-body-style\nexport const severityTypeToSeverityLevel = (type: NotificationSeverityType): SeverityLevel => {\n  return type === 'error' ? 'ALERT' : (type.toUpperCase() as SeverityLevel);\n};\n\nexport const notificationLocalToStreamItem = (notification: NotificationLocalItem): NotificationStreamItem => {\n  const timestamp = Date.now();\n  const date = new Date(timestamp).toISOString();\n\n  return {\n    id: `${NOTIFICATION_LOCAL}_${timestamp + Math.floor(Math.random() * 1000)}`,\n    createdOn: date,\n    title: notification.title,\n    message: notification.message,\n    level: severityTypeToSeverityLevel(notification.level),\n    ...(notification.sticky && { expiresOn: date }),\n  };\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\nimport {\n  getPropertyValue,\n  modelItemToBoolean,\n  secondsToMilliseconds,\n  BaseWidgetPropertiesService,\n  shareReplayOnce,\n} from '@backbase/notifications-common-ang';\nimport { ItemModel } from '@backbase/foundation-ang/core';\n\nexport interface WidgetProperties {\n  allowedRoutes: string[];\n  autofocus: boolean;\n  popupMessageLineAmount: number;\n  displayShowMoreButtonInPopup: boolean;\n  origins: string[];\n  severityLevels: string[];\n  pollingInterval: number;\n}\n\nexport const DefaultWidgetProperties: WidgetProperties = {\n  allowedRoutes: [],\n  autofocus: true,\n  popupMessageLineAmount: 2,\n  displayShowMoreButtonInPopup: false,\n  origins: [],\n  severityLevels: [],\n  pollingInterval: 15,\n};\n\n@Injectable()\nexport class WidgetPropertiesService extends BaseWidgetPropertiesService {\n  constructor(@Optional() protected readonly itemModel?: ItemModel) {\n    super(itemModel);\n  }\n\n  private readonly autofocus$$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly popupMessageLineAmount$$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly displayShowMoreButtonInPopup$$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly pollingInterval$$ = new BehaviorSubject<number | undefined>(undefined);\n\n  readonly autofocus$ = getPropertyValue(this.autofocus$$, this.autofocus);\n  readonly popupMessageLineAmount$ = getPropertyValue(this.popupMessageLineAmount$$, this.popupMessageLineAmount);\n  readonly displayShowMoreButtonInPopup$ = getPropertyValue(\n    this.displayShowMoreButtonInPopup$$,\n    this.displayShowMoreButtonInPopup,\n  );\n  readonly pollingInterval$ = getPropertyValue(this.pollingInterval$$, this.pollingInterval);\n\n  private get autofocus(): Observable<boolean> {\n    if (!this.itemModel) {\n      return this.defaultModelObservable(DefaultWidgetProperties.autofocus);\n    }\n\n    return this.itemModel\n      .property('autofocus', DefaultWidgetProperties.autofocus)\n      .pipe(map(modelItemToBoolean), first());\n  }\n\n  private get popupMessageLineAmount(): Observable<number> {\n    if (!this.itemModel) {\n      return this.defaultModelObservable(DefaultWidgetProperties.popupMessageLineAmount);\n    }\n\n    return this.itemModel.property('popupMessageLineAmount', '').pipe(map(Number), first());\n  }\n\n  private get displayShowMoreButtonInPopup(): Observable<boolean> {\n    if (!this.itemModel) {\n      return this.defaultModelObservable(DefaultWidgetProperties.displayShowMoreButtonInPopup);\n    }\n\n    return this.itemModel\n      .property('displayShowMoreButtonInPopup', DefaultWidgetProperties.displayShowMoreButtonInPopup)\n      .pipe(map(modelItemToBoolean), first());\n  }\n\n  private get pollingInterval(): Observable<number> {\n    if (!this.itemModel) {\n      return this.defaultModelObservable(DefaultWidgetProperties.pollingInterval * 1000);\n    }\n\n    return this.itemModel.property('pollingInterval', DefaultWidgetProperties.pollingInterval).pipe(\n      map(Number),\n      map(n => n * 1000),\n      shareReplayOnce(),\n    );\n  }\n\n  setAutofocus(value: string | boolean): void {\n    this.autofocus$$.next(modelItemToBoolean(value));\n  }\n\n  setPopupMessageLineAmount(value: string | number): void {\n    this.popupMessageLineAmount$$.next(Number(value));\n  }\n\n  setDisplayShowMoreButtonInPopup(value: string | boolean): void {\n    this.displayShowMoreButtonInPopup$$.next(modelItemToBoolean(value));\n  }\n\n  setPollingInterval(value: string | number): void {\n    const pollingInterval = Number(value);\n    if (!isNaN(pollingInterval) && pollingInterval > 0) {\n      this.pollingInterval$$.next(secondsToMilliseconds(pollingInterval));\n    }\n  }\n}\n","import { Inject, Injectable, NgZone } from '@angular/core';\nimport { NotificationsHttpService } from '@backbase/data-ang/notifications';\nimport { NotificationStreamItem, shareReplayOnce } from '@backbase/notifications-common-ang';\nimport { delay, delayWhen, first, map, observeOn, switchMap, take, tap } from 'rxjs/operators';\nimport { asyncScheduler, combineLatest, merge, Observable, of, Subject } from 'rxjs';\nimport {\n  enterZone,\n  leaveZone,\n  NOTIFICATIONS_BADGE_FORCE_UPDATE_EVENT,\n  NOTIFICATIONS_CREATE_LOCAL_EVENT,\n  BadgeForceUpdateEventPayload,\n} from '@backbase/notifications-common-ang';\n\nimport {\n  fromHttpResponse,\n  notificationsStreamToPopups,\n  notificationsStreamToSticky,\n  notificationLocalToStreamItem,\n} from '../helpers/mappers';\nimport { PUBSUB, Pubsub } from '@backbase/foundation-ang/web-sdk';\nimport { NotificationLocalItem } from '../models/notifications-local-item.model';\nimport { NOTIFICATION_LOCAL } from '../constants/notification-local';\nimport { WidgetPropertiesService } from './widget-properties.service';\n\nexport const DEFAULT_POLLING_INTERVAL = 15;\n\n@Injectable()\nexport class NotificationsPopupsDataService {\n  /**\n   * Sticky notifications stream\n   */\n  readonly stickyNotificationsStream$: Observable<NotificationStreamItem[]>;\n\n  /**\n   * Popup notifications stream\n   */\n  readonly popupsNotificationsStream$: Observable<NotificationStreamItem[]>;\n\n  /**\n   * Mark notification as read stream\n   */\n  readonly markNotificationAsRead$ = new Subject<NotificationStreamItem | string>();\n\n  private readonly notificationsStream$: Observable<NotificationStreamItem[]>;\n  private readonly notificationsStreamForceUpdate$ = new Subject<NotificationStreamItem[]>();\n  private readonly polling$ = new Subject<void>();\n  private readonly notificationsLocalStickySource = new Map<string, NotificationStreamItem>();\n\n  private readonly origins$ = this.properties.origins$;\n  private readonly severityLevels$ = this.properties.severityLevels$;\n  private readonly pollingInterval$ = this.properties.pollingInterval$;\n\n  constructor(\n    private readonly dataHttpService: NotificationsHttpService,\n    private readonly ngZone: NgZone,\n    private readonly properties: WidgetPropertiesService,\n    @Inject(PUBSUB) private readonly pubSub: Pubsub,\n  ) {\n    this.notificationsStream$ = this.initializeNotificationsStreamPolling();\n    this.stickyNotificationsStream$ = this.notificationsStream$.pipe(map(notificationsStreamToSticky));\n    this.popupsNotificationsStream$ = this.notificationsStream$.pipe(map(notificationsStreamToPopups));\n\n    this.markNotificationAsRead$.subscribe((payload: NotificationStreamItem | string) => {\n      this.pubSub.publish<undefined | BadgeForceUpdateEventPayload>(\n        NOTIFICATIONS_BADGE_FORCE_UPDATE_EVENT,\n        typeof payload === 'object'\n          ? {\n              origin: payload.origin,\n              level: payload.level,\n            }\n          : undefined,\n      );\n    });\n\n    this.pubSub.subscribe(NOTIFICATIONS_CREATE_LOCAL_EVENT, (notification: NotificationLocalItem) => {\n      const parsedNotification = notificationLocalToStreamItem(notification);\n\n      if (notification.sticky) {\n        this.notificationsLocalStickySource.set(parsedNotification.id, parsedNotification);\n      }\n\n      this.notificationsStream$\n        .pipe(\n          switchMap(stream => {\n            const popup = (!notification.sticky && [parsedNotification]) || [];\n            const stickies = this.notificationsLocalSticky;\n\n            return of([...stream, ...stickies, ...popup]);\n          }),\n          map(concatenatedStream => Array.from(new Map(concatenatedStream.map(item => [item.id, item])).values())),\n          take(1),\n        )\n        .subscribe(notificationsStream => this.notificationsStreamForceUpdate$.next(notificationsStream));\n    });\n  }\n\n  private get notificationsLocalSticky(): NotificationStreamItem[] {\n    return Array.from(this.notificationsLocalStickySource.values());\n  }\n\n  /**\n   * Mark notification as read\n   *\n   * @param notification Notification data\n   */\n  markNotificationAsRead(notification: NotificationStreamItem | string): void {\n    const id = typeof notification === 'string' ? notification : notification.id;\n\n    if (id.match(NOTIFICATION_LOCAL)) {\n      this.removeNotificationItemFromStream(id);\n      this.notificationsLocalStickySource.delete(id);\n    } else {\n      this.dataHttpService.putMarkAsRead({ id, markAsReadPutRequestBody: { read: true } }).subscribe(() => {\n        this.removeNotificationItemFromStream(id);\n        this.markNotificationAsRead$.next(notification);\n      });\n    }\n  }\n\n  private requestNotificationsStream(): Observable<NotificationStreamItem[]> {\n    return combineLatest([this.pollingInterval$, this.origins$, this.severityLevels$]).pipe(\n      first(),\n      switchMap(([interval, origins, levels]) =>\n        this.dataHttpService.getNotificationsStream(\n          {\n            interval,\n            ...(origins.length && { origins }),\n            ...(levels && { levels: levels.join(', ') }),\n          },\n          'response',\n        ),\n      ),\n      map(fromHttpResponse),\n    );\n  }\n\n  private removeNotificationItemFromStream(notificationId: string) {\n    this.notificationsStream$\n      .pipe(\n        first(),\n        map(notificationsStream => notificationsStream.filter(({ id }) => id !== notificationId)),\n      )\n      .subscribe(notificationsStream => this.notificationsStreamForceUpdate$.next(notificationsStream));\n  }\n\n  private initializeNotificationsStreamPolling(): Observable<NotificationStreamItem[]> {\n    const pollAndRequest$ = of(undefined).pipe(\n      tap(() => this.polling$.next()),\n      switchMap(() => this.requestNotificationsStream()),\n    );\n    const pollingNotificationsStream$ = this.polling$.pipe(\n      switchMap(() => this.pollingInterval$),\n      delayWhen(pollingInterval => of().pipe(delay(pollingInterval, leaveZone(this.ngZone, asyncScheduler)))),\n      switchMap(() => pollAndRequest$),\n      observeOn(enterZone(this.ngZone, asyncScheduler)),\n    );\n\n    return merge(\n      this.notificationsStreamForceUpdate$,\n      pollingNotificationsStream$.pipe(switchMap(stream => of([...stream, ...this.notificationsLocalSticky]))),\n      pollAndRequest$.pipe(switchMap(stream => of([...stream, ...this.notificationsLocalSticky]))),\n    ).pipe(shareReplayOnce());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { NotificationRouting } from '@backbase/notifications-common-ang';\n\n@Injectable()\nexport class NotificationsPopupsRouterService {\n  private readonly popupsRoutingSubject = new Subject<NotificationRouting>();\n  /**\n   * Popups notification routing stream\n   */\n  readonly popupsRouting$: Observable<NotificationRouting> = this.popupsRoutingSubject.asObservable();\n\n  /**\n   * Emit popups routing\n   *\n   * @param routing Notification routing data\n   */\n  emitPopupsRouting(routing: NotificationRouting) {\n    this.popupsRoutingSubject.next(routing);\n  }\n}\n","import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { NotificationStreamItem } from '@backbase/notifications-common-ang';\nimport { SeverityLevel } from '@backbase/data-ang/notifications';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { parseNotificationSeverityLevel } from '../../helpers/mappers';\nimport { NotificationSeverityType } from '../../models/notification-severity-type.model';\n\n@Component({\n  selector: 'bb-notifications-sticky-list-item',\n  templateUrl: './notifications-sticky-list-item.component.html',\n})\nexport class NotificationsStickyListItemComponent {\n  /**\n   * Notification stream item\n   */\n  @Input() notification?: NotificationStreamItem;\n  /**\n   * Notification stream item close event\n   * Emits notification stream item id\n   */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() close: EventEmitter<NotificationStreamItem | string> = new EventEmitter();\n\n  /**\n   * Method to handle close event from alert component\n   *\n   * @param notification Notification data\n   */\n  onClose(notification: NotificationStreamItem | string) {\n    this.close.emit(notification);\n  }\n\n  /**\n   * Method to parse severity level into alert modifier\n   *\n   * @param level Severity level\n   * @returns Notification severity level type\n   */\n  parseNotificationSeverityLevel(level: SeverityLevel): NotificationSeverityType {\n    return parseNotificationSeverityLevel(level);\n  }\n}\n\n@Directive({\n  selector: '[bbNotificationsStickyListItemCustomizable]',\n})\nexport class NotificationsStickyListItemCustomizableDirective extends BbTemplate<\n  NotificationsStickyListItemComponent,\n  NotificationStreamItem | undefined\n> {}\n","<ng-container\n  bbNotificationsStickyListItemCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"notification\"\n></ng-container>\n\n<ng-template bbNotificationsStickyListItemCustomizable let-host let-notification=\"context\">\n  <bb-alert-ui\n    [dismissible]=\"true\"\n    [modifier]=\"host.parseNotificationSeverityLevel(notification?.level)\"\n    [title]=\"notification?.title || ''\"\n    (close)=\"host.onClose(notification)\"\n  >\n    <div\n      class=\"bb-subtitle\"\n      data-role=\"notification-sticky-message\"\n      [innerHTML]=\"notification?.message | interpolateLink: notification:true:'alert-link'\"\n    ></div>\n  </bb-alert-ui>\n</ng-template>\n","import { Component, Directive, ElementRef } from '@angular/core';\nimport { NotificationItem, NotificationStreamItem } from '@backbase/notifications-common-ang';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { NotificationsPopupsDataService } from '../../services/notifications-popups-data.service';\nimport { first, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'bb-notifications-sticky-list',\n  templateUrl: './notifications-sticky-list.component.html',\n})\nexport class NotificationsStickyListComponent {\n  /**\n   * Element that focused before notification is open, for back focus when notification is closed\n   */\n  private previousFocusedElement?: HTMLElement;\n\n  /**\n   * Notification sticky stream data\n   */\n  readonly notifications$: Observable<NotificationStreamItem[]> = this.dataService.stickyNotificationsStream$;\n\n  constructor(private readonly dataService: NotificationsPopupsDataService, private readonly elem: ElementRef) {}\n\n  /**\n   * Method to call mark notification as read request by id\n   *\n   * @param notification Notification data\n   */\n  onReadNotification(notification: NotificationStreamItem | string): void {\n    this.dataService.markNotificationAsRead(notification);\n\n    const notifications = this.elem.nativeElement.querySelectorAll('bb-notifications-sticky-list-item');\n    const deletedNotificationIndex$ = this.notifications$.pipe(\n      map((notificationElements: NotificationStreamItem[]) =>\n        notificationElements.findIndex(item =>\n          typeof notification === 'string' ? notification === item.id : notification.id === item.id,\n        ),\n      ),\n    );\n\n    deletedNotificationIndex$.pipe(first()).subscribe(index => {\n      if (notifications[index + 1]) {\n        notifications[index + 1].getElementsByTagName('button')[0].focus();\n      } else if (notifications[index - 1]) {\n        notifications[index - 1].getElementsByTagName('button')[0].focus();\n      } else if (this.previousFocusedElement) {\n        this.previousFocusedElement.focus();\n      }\n    });\n  }\n\n  /**\n   * Method to differentiate notifications by IDs.\n   *\n   * @param _index List item index\n   * @param notification Notification list item\n   * @returns Notification id\n   */\n  trackById(_index: number, notification: NotificationItem): string {\n    return notification.id;\n  }\n\n  /**\n   * Method to change focus.\n   *\n   * @param event Focus event\n   */\n  onFocus(event: { relatedTarget: HTMLElement }) {\n    if (!this.previousFocusedElement) {\n      this.previousFocusedElement = event.relatedTarget;\n    }\n  }\n}\n\n@Directive({\n  selector: '[bbNotificationsStickyListCustomizable]',\n})\nexport class NotificationsStickyListCustomizableDirective extends BbTemplate<\n  NotificationsStickyListComponent,\n  {\n    notifications: NotificationStreamItem[];\n  }\n> {}\n","<ng-container\n  bbNotificationsStickyListCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    notifications: notifications$ | async\n  }\"\n></ng-container>\n\n<ng-template bbNotificationsStickyListCustomizable let-host let-notifications=\"context.notifications\">\n  <bb-notifications-sticky-list-item\n    (focusin)=\"host.onFocus($event)\"\n    *ngFor=\"let item of notifications; trackBy: host.trackById\"\n    [notification]=\"item\"\n    (close)=\"host.onReadNotification($event)\"\n  ></bb-notifications-sticky-list-item>\n</ng-template>\n","import { AfterViewInit, Component, Directive, Input, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { CheckTruncation, NotificationStreamItem } from '@backbase/notifications-common-ang';\nimport { parseNotificationSeverityLevel, secondsToMilliseconds } from '../../helpers/mappers';\nimport { NotificationsPopupsDataService } from '../../services/notifications-popups-data.service';\nimport { NotificationsPopupsRouterService } from '../../services/notifications-popups-router.service';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { Routing } from '@backbase/data-ang/notifications';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { WidgetPropertiesService } from '../../services/widget-properties.service';\n/** @dynamic */\n@Component({\n  selector: 'bb-notifications-popups-item',\n  templateUrl: './notifications-popups-item.component.html',\n})\nexport class NotificationsPopupsItemComponent implements AfterViewInit, OnDestroy, CheckTruncation {\n  /**\n   * Notification popup item\n   */\n  @Input() notification!: NotificationStreamItem;\n\n  /**\n   * Notification close delay timeout\n   */\n  @Input() notificationTimeout = 0;\n\n  /**\n   * Notification header template\n   */\n  @ViewChild('popupHeader') popupHeaderTemplate?: TemplateRef<any>;\n\n  /**\n   * Notification message template\n   */\n  @ViewChild('popupMessage') popupMessageTemplate?: TemplateRef<any>;\n\n  private hideNotification!: () => void;\n\n  /**\n   * Routes available for navigation.\n   */\n  readonly allowedRoutes$: Observable<string[]> = this.properties.allowedRoutes$;\n\n  /**\n   * Stream of widget property with a flag that defines if notification popup should be auto-focused.\n   */\n  readonly autofocus$: Observable<boolean> = this.properties.autofocus$;\n\n  /**\n   * Stream of widget property with a flag that defines if we should display Show More button.\n   */\n  readonly displayShowMoreButtonInPopup$: Observable<boolean> = this.properties.displayShowMoreButtonInPopup$;\n\n  /**\n   * Stream of widget property with the number of lines to show as a notification message.\n   */\n  readonly popupMessageLineAmount$: Observable<number> = this.properties.popupMessageLineAmount$;\n\n  /**\n   * The boolean flag that shows if the notification message text exceeds the number of visible lines and is truncated.\n   */\n  isMessageTruncated = false;\n\n  /**\n   * destroy$ should emit only when component is destroyed to\n   * signal subscriptions to unsubscribe.\n   */\n  private readonly destroy$ = new Subject<void>();\n\n  constructor(\n    private readonly notificationService: NotificationService,\n    private readonly dataService: NotificationsPopupsDataService,\n    private readonly routerService: NotificationsPopupsRouterService,\n    private readonly properties: WidgetPropertiesService,\n  ) {}\n\n  ngAfterViewInit() {\n    if (this.notification) {\n      combineLatest([this.allowedRoutes$, this.displayShowMoreButtonInPopup$, this.autofocus$])\n        .pipe(\n          map(([routes, isShowMoreButtonEnabled, autofocus]) => [\n            this.hasRouting(routes),\n            isShowMoreButtonEnabled,\n            autofocus,\n          ]),\n          takeUntil(this.destroy$),\n        )\n        .subscribe((preferences: boolean[]) => {\n          this.createNotificationPopup(preferences);\n        });\n    }\n  }\n\n  /**\n   * Open notification details in external widget\n   *\n   * @param event Click event\n   */\n  openNotificationDetails(event: Event): void {\n    event.stopPropagation();\n    const routing: Routing = {\n      ['where-to']: 'notification-details',\n      data: this.notification,\n    };\n    this.readNotification(this.notification);\n    this.routerService.emitPopupsRouting(routing);\n    this.hideNotification();\n  }\n\n  /**\n   * Set truncation status of notification message\n   *\n   * @param isMessageTruncated Is message truncated flag\n   */\n  setIsContentTruncated(isMessageTruncated: boolean) {\n    this.isMessageTruncated = isMessageTruncated;\n  }\n\n  private createNotificationPopup([hasRouting, isShowMoreButtonEnabled, autofocus]: boolean[]): void {\n    this.hideNotification = this.notificationService.showNotification({\n      modifier: parseNotificationSeverityLevel(this.notification.level),\n      header: this.popupHeaderTemplate as TemplateRef<any>,\n      message: this.popupMessageTemplate as TemplateRef<any>,\n      ttl: secondsToMilliseconds(this.notificationTimeout),\n      closeAction: this.readNotification.bind(this, this.notification),\n      ...(hasRouting && {\n        hostAction: this.navigateFromPopup.bind(this),\n      }),\n      ...(!hasRouting &&\n        isShowMoreButtonEnabled && {\n          hostAction: this.openNotificationDetails.bind(this),\n        }),\n      autofocus,\n    });\n  }\n\n  private readNotification(notification: NotificationStreamItem) {\n    this.dataService.markNotificationAsRead(notification);\n  }\n\n  private hasRouting(routes: string[]): boolean {\n    const route = this.notification.routing && this.notification.routing['where-to'];\n\n    return Boolean(this.notification.routing) && routes.some(allowedRoute => route === allowedRoute);\n  }\n\n  private navigateFromPopup() {\n    this.readNotification(this.notification);\n    if (this.notification.routing) {\n      this.routerService.emitPopupsRouting(this.notification.routing);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n\n@Directive({\n  selector: '[bbNotificationsPopupsItemHeaderCustomizable]',\n})\nexport class NotificationsPopupsItemHeaderCustomizableDirective extends BbTemplate<\n  NotificationsPopupsItemComponent,\n  NotificationStreamItem | undefined\n> {}\n\n@Directive({\n  selector: '[bbNotificationsPopupsItemMessageCustomizable]',\n})\nexport class NotificationsPopupsItemMessageCustomizableDirective extends BbTemplate<\n  NotificationsPopupsItemComponent,\n  NotificationStreamItem | undefined\n> {}\n","<ng-template #popupHeader>\n  <ng-container\n    bbNotificationsPopupsItemHeaderCustomizable\n    [bbHostRef]=\"this\"\n    [bbTemplateContext]=\"notification\"\n  ></ng-container>\n</ng-template>\n\n<ng-template #popupMessage>\n  <ng-container bbNotificationsPopupsItemMessageCustomizable [bbHostRef]=\"this\" [bbTemplateContext]=\"notification\">\n  </ng-container>\n</ng-template>\n\n<ng-template bbNotificationsPopupsItemHeaderCustomizable let-hostRef let-notification=\"context\">\n  <span class=\"sr-only\"> {{ notification?.level || '' }}, </span>\n  <span [innerHTML]=\"notification | notificationLocalization: 'title'\"></span>\n</ng-template>\n\n<ng-template bbNotificationsPopupsItemMessageCustomizable let-hostRef let-notification=\"context\">\n  <ng-container\n    *ngTemplateOutlet=\"(hostRef.popupMessageLineAmount$ | async) ? truncatedMessageContent : messageContent\"\n  ></ng-container>\n  <bb-notifications-capability-icon [origin]=\"notification?.origin\"></bb-notifications-capability-icon>\n  <button\n    type=\"button\"\n    *ngIf=\"hostRef.isMessageTruncated && (hostRef.displayShowMoreButtonInPopup$ | async)\"\n    class=\"btn-link-text bb-text-bold bb-notification__details-button\"\n    (click)=\"hostRef.openNotificationDetails($event)\"\n    aria-label=\"See more notification details\"\n    i18n=\"Notification pop-up See more button@notification.popup.see-more.button\"\n    i18n-aria-label=\"Aria-label for See more button@@notification.popup.see-more.button.aria-label\"\n  >\n    <span>See more</span>\n  </button>\n\n  <ng-template #messageContent>\n    <div class=\"bb-block\" bbIsElementContentTruncated [hostRef]=\"hostRef\">\n      <div\n        [innerHTML]=\"\n          notification\n            | notificationLocalization: 'message'\n            | interpolateLink: notification:true:'bb-notification__message-link'\n        \"\n      ></div>\n    </div>\n  </ng-template>\n\n  <ng-template #truncatedMessageContent>\n    <bb-ellipsis-ui [tooltipTriggers]=\"''\" [lineClamp]=\"hostRef.popupMessageLineAmount$ | async\">\n      <ng-container *ngTemplateOutlet=\"messageContent\"></ng-container>\n    </bb-ellipsis-ui>\n  </ng-template>\n</ng-template>\n","import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core/';\nimport { NotificationStreamItem } from '@backbase/notifications-common-ang';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { NotificationsPopupsDataService } from '../../services/notifications-popups-data.service';\n\nexport const DEFAULT_NOTIFICATION_TIMEOUT = 5;\n\n@Component({\n  selector: 'bb-notifications-popups-list',\n  templateUrl: './notifications-popups-list.component.html',\n})\nexport class NotificationsPopupsListComponent {\n  /**\n   * Notification popups stream data in reversed order\n   */\n  readonly popups$: Observable<NotificationStreamItem[]> = this.dataService.popupsNotificationsStream$.pipe(\n    map(this.parsePopupsData),\n  );\n\n  constructor(private readonly dataService: NotificationsPopupsDataService) {}\n\n  /**\n   * Method to parse popups stream data in reversed order\n   * for correct rendering by show notificaton service\n   */\n  private parsePopupsData(array: NotificationStreamItem[]): NotificationStreamItem[] {\n    return array.reverse();\n  }\n\n  /**\n   * Method to get close notification timeout value for each popup\n   *\n   * @param index List item index\n   * @param length List length\n   * @returns Number of seconds before notification popup close\n   */\n  getNotificationTimeoutByIndex(index: number, length: number): number {\n    return DEFAULT_NOTIFICATION_TIMEOUT + length - index - 1;\n  }\n}\n\n@Directive({\n  selector: '[bbNotificationsPopupsListCustomizable]',\n})\nexport class NotificationsPopupsListCustomizableDirective extends BbTemplate<\n  NotificationsPopupsListComponent,\n  NotificationStreamItem[]\n> {}\n","<ng-container\n  bbNotificationsPopupsListCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"popups$ | async\"\n></ng-container>\n\n<ng-template bbNotificationsPopupsListCustomizable let-hostRef let-notifications=\"context\">\n  <bb-notifications-popups-item\n    *ngFor=\"let notification of notifications; index as i\"\n    [notification]=\"notification\"\n    [notificationTimeout]=\"hostRef.getNotificationTimeoutByIndex(i, notifications.length)\"\n  >\n  </bb-notifications-popups-item>\n</ng-template>\n","/* eslint-disable @angular-eslint/no-input-rename */\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { NotificationsPopupsDataService } from '../../services/notifications-popups-data.service';\nimport { NotificationRouting } from '@backbase/notifications-common-ang';\nimport { NotificationsPopupsRouterService } from '../../services/notifications-popups-router.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { WidgetPropertiesService } from '../../services/widget-properties.service';\n\n@Component({\n  selector: 'bb-notifications-popups-widget',\n  template: `\n    <bb-notifications-sticky-list></bb-notifications-sticky-list>\n    <bb-notifications-popups-list></bb-notifications-popups-list>\n  `,\n  providers: [NotificationsPopupsDataService, NotificationsPopupsRouterService, WidgetPropertiesService],\n})\nexport class NotificationsPopupsWidgetComponent implements OnInit, OnDestroy {\n  /**\n   * Comma-separated list of notifications origins to process (empty for all).\n   */\n  @Input('origins') set originsValue(value: string) {\n    if (value !== undefined) {\n      this.properties.setOrigins(value);\n    }\n  }\n\n  /**\n   * Comma-separated list of notifications severity levels to process (empty for all).\n   */\n  @Input('severityLevels') set severityLevelsValue(value: string) {\n    if (value !== undefined) {\n      this.properties.setSeverityLevels(value);\n    }\n  }\n\n  /**\n   * Polling interval (in seconds).\n   */\n  @Input('pollingInterval') set pollingIntervalValue(value: string | number) {\n    if (value !== undefined) {\n      this.properties.setPollingInterval(value);\n    }\n  }\n\n  /**\n   * String of allowed routes for navigation (conversation-view, arrangement-view, transaction-view, party-view, etc.).\n   */\n  @Input('allowedRoutes') set allowedRoutesValue(value: string) {\n    if (value !== undefined) {\n      this.properties.setAllowedRoutes(value);\n    }\n  }\n\n  /**\n   * Auto-focus.\n   */\n  @Input('autofocus') set autofocusValue(value: string | boolean) {\n    if (value !== undefined) {\n      this.properties.setAutofocus(value);\n    }\n  }\n\n  /**\n   * Display See More button.\n   */\n  @Input('displayShowMoreButtonInPopup') set displayShowMoreButtonInPopupValue(value: string | boolean) {\n    if (value !== undefined) {\n      this.properties.setDisplayShowMoreButtonInPopup(value);\n    }\n  }\n\n  /**\n   * Number of displayed lines in notification message emitter.\n   */\n  @Input('popupMessageLineAmount') set popupMessageLineAmountValue(value: string | number) {\n    if (value !== undefined) {\n      this.properties.setPopupMessageLineAmount(value);\n    }\n  }\n\n  /**\n   * Navigation Data emitter.\n   */\n  @Output() notificationRouting = new EventEmitter<NotificationRouting>();\n\n  private readonly destroy$ = new Subject<void>();\n\n  constructor(\n    private readonly routerService: NotificationsPopupsRouterService,\n    private readonly properties: WidgetPropertiesService,\n  ) {}\n\n  ngOnInit() {\n    this.routerService.popupsRouting$.pipe(takeUntil(this.destroy$)).subscribe(this.notificationRouting);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\n\nimport { NotificationsPopupsWidgetComponent } from './components/notifications-popups-widget/notifications-popups-widget.component';\nimport {\n  NotificationsStickyListComponent,\n  NotificationsStickyListCustomizableDirective,\n} from './components/notifications-sticky-list/notifications-sticky-list.component';\nimport {\n  NotificationsStickyListItemComponent,\n  NotificationsStickyListItemCustomizableDirective,\n} from './components/notifications-sticky-list-item/notifications-sticky-list-item.component';\nimport { NotificationsCommonModule } from '@backbase/notifications-common-ang';\nimport {\n  NotificationsPopupsListComponent,\n  NotificationsPopupsListCustomizableDirective,\n} from './components/notifications-popups-list/notifications-popups-list.component';\nimport {\n  NotificationsPopupsItemComponent,\n  NotificationsPopupsItemHeaderCustomizableDirective,\n  NotificationsPopupsItemMessageCustomizableDirective,\n} from './components/notifications-popups-item/notifications-popups-item.component';\n\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { EllipsisModule } from '@backbase/ui-ang/ellipsis';\n\nconst components = [\n  NotificationsPopupsWidgetComponent,\n  NotificationsStickyListComponent,\n  NotificationsStickyListItemComponent,\n  NotificationsPopupsListComponent,\n  NotificationsPopupsItemComponent,\n];\n\nconst directives = [\n  NotificationsStickyListCustomizableDirective,\n  NotificationsStickyListItemCustomizableDirective,\n  NotificationsPopupsItemHeaderCustomizableDirective,\n  NotificationsPopupsItemMessageCustomizableDirective,\n  NotificationsPopupsListCustomizableDirective,\n];\n\nconst uiModules = [AlertModule, EllipsisModule];\n\n@NgModule({\n  declarations: [...components, ...directives],\n  imports: [\n    CommonModule,\n    NotificationsCommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { NotificationsPopupsWidgetComponent },\n    }),\n    ...uiModules,\n  ],\n  exports: [NotificationsCommonModule, ...components, ...directives, ...uiModules],\n})\nexport class NotificationsPopupsWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["secondsToMilliseconds","i1","i2","i1.NotificationsPopupsDataService","i2.NotificationsStickyListItemComponent","i2.NotificationsPopupsDataService","i3.NotificationsPopupsRouterService","i4.WidgetPropertiesService","i7","i2.NotificationsPopupsItemComponent","BbTemplate","i1.NotificationsPopupsRouterService","i2.WidgetPropertiesService","i3.NotificationsStickyListComponent","i4.NotificationsPopupsListComponent"],"mappings":"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"}