{"version":3,"file":"notifications-popups-item.component.js","sourceRoot":"","sources":["../../../../../../../libs/notifications-popups-widget-ang/src/lib/components/notifications-popups-item/notifications-popups-item.component.ts","../../../../../../../libs/notifications-popups-widget-ang/src/lib/components/notifications-popups-item/notifications-popups-item.component.html"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, Component, Directive, Input, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { CheckTruncation, NotificationStreamItem } from '@backbase/notifications-common-ang';\nimport { parseNotificationSeverityLevel, secondsToMilliseconds } from '../../helpers/mappers';\nimport { NotificationsPopupsDataService } from '../../services/notifications-popups-data.service';\nimport { NotificationsPopupsRouterService } from '../../services/notifications-popups-router.service';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { Routing } from '@backbase/data-ang/notifications';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { WidgetPropertiesService } from '../../services/widget-properties.service';\n/** @dynamic */\n@Component({\n  selector: 'bb-notifications-popups-item',\n  templateUrl: './notifications-popups-item.component.html',\n})\nexport class NotificationsPopupsItemComponent implements AfterViewInit, OnDestroy, CheckTruncation {\n  /**\n   * Notification popup item\n   */\n  @Input() notification!: NotificationStreamItem;\n\n  /**\n   * Notification close delay timeout\n   */\n  @Input() notificationTimeout = 0;\n\n  /**\n   * Notification header template\n   */\n  @ViewChild('popupHeader') popupHeaderTemplate?: TemplateRef<any>;\n\n  /**\n   * Notification message template\n   */\n  @ViewChild('popupMessage') popupMessageTemplate?: TemplateRef<any>;\n\n  private hideNotification!: () => void;\n\n  /**\n   * Routes available for navigation.\n   */\n  readonly allowedRoutes$: Observable<string[]> = this.properties.allowedRoutes$;\n\n  /**\n   * Stream of widget property with a flag that defines if notification popup should be auto-focused.\n   */\n  readonly autofocus$: Observable<boolean> = this.properties.autofocus$;\n\n  /**\n   * Stream of widget property with a flag that defines if we should display Show More button.\n   */\n  readonly displayShowMoreButtonInPopup$: Observable<boolean> = this.properties.displayShowMoreButtonInPopup$;\n\n  /**\n   * Stream of widget property with the number of lines to show as a notification message.\n   */\n  readonly popupMessageLineAmount$: Observable<number> = this.properties.popupMessageLineAmount$;\n\n  /**\n   * The boolean flag that shows if the notification message text exceeds the number of visible lines and is truncated.\n   */\n  isMessageTruncated = false;\n\n  /**\n   * destroy$ should emit only when component is destroyed to\n   * signal subscriptions to unsubscribe.\n   */\n  private readonly destroy$ = new Subject<void>();\n\n  constructor(\n    private readonly notificationService: NotificationService,\n    private readonly dataService: NotificationsPopupsDataService,\n    private readonly routerService: NotificationsPopupsRouterService,\n    private readonly properties: WidgetPropertiesService,\n  ) {}\n\n  ngAfterViewInit() {\n    if (this.notification) {\n      combineLatest([this.allowedRoutes$, this.displayShowMoreButtonInPopup$, this.autofocus$])\n        .pipe(\n          map(([routes, isShowMoreButtonEnabled, autofocus]) => [\n            this.hasRouting(routes),\n            isShowMoreButtonEnabled,\n            autofocus,\n          ]),\n          takeUntil(this.destroy$),\n        )\n        .subscribe((preferences: boolean[]) => {\n          this.createNotificationPopup(preferences);\n        });\n    }\n  }\n\n  /**\n   * Open notification details in external widget\n   *\n   * @param event Click event\n   */\n  openNotificationDetails(event: Event): void {\n    event.stopPropagation();\n    const routing: Routing = {\n      ['where-to']: 'notification-details',\n      data: this.notification,\n    };\n    this.readNotification(this.notification);\n    this.routerService.emitPopupsRouting(routing);\n    this.hideNotification();\n  }\n\n  /**\n   * Set truncation status of notification message\n   *\n   * @param isMessageTruncated Is message truncated flag\n   */\n  setIsContentTruncated(isMessageTruncated: boolean) {\n    this.isMessageTruncated = isMessageTruncated;\n  }\n\n  private createNotificationPopup([hasRouting, isShowMoreButtonEnabled, autofocus]: boolean[]): void {\n    this.hideNotification = this.notificationService.showNotification({\n      modifier: parseNotificationSeverityLevel(this.notification.level),\n      header: this.popupHeaderTemplate as TemplateRef<any>,\n      message: this.popupMessageTemplate as TemplateRef<any>,\n      ttl: secondsToMilliseconds(this.notificationTimeout),\n      closeAction: this.readNotification.bind(this, this.notification),\n      ...(hasRouting && {\n        hostAction: this.navigateFromPopup.bind(this),\n      }),\n      ...(!hasRouting &&\n        isShowMoreButtonEnabled && {\n          hostAction: this.openNotificationDetails.bind(this),\n        }),\n      autofocus,\n    });\n  }\n\n  private readNotification(notification: NotificationStreamItem) {\n    this.dataService.markNotificationAsRead(notification);\n  }\n\n  private hasRouting(routes: string[]): boolean {\n    const route = this.notification.routing && this.notification.routing['where-to'];\n\n    return Boolean(this.notification.routing) && routes.some(allowedRoute => route === allowedRoute);\n  }\n\n  private navigateFromPopup() {\n    this.readNotification(this.notification);\n    if (this.notification.routing) {\n      this.routerService.emitPopupsRouting(this.notification.routing);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n\n@Directive({\n  selector: '[bbNotificationsPopupsItemHeaderCustomizable]',\n})\nexport class NotificationsPopupsItemHeaderCustomizableDirective extends BbTemplate<\n  NotificationsPopupsItemComponent,\n  NotificationStreamItem | undefined\n> {}\n\n@Directive({\n  selector: '[bbNotificationsPopupsItemMessageCustomizable]',\n})\nexport class NotificationsPopupsItemMessageCustomizableDirective extends BbTemplate<\n  NotificationsPopupsItemComponent,\n  NotificationStreamItem | undefined\n> {}\n","<ng-template #popupHeader>\n  <ng-container\n    bbNotificationsPopupsItemHeaderCustomizable\n    [bbHostRef]=\"this\"\n    [bbTemplateContext]=\"notification\"\n  ></ng-container>\n</ng-template>\n\n<ng-template #popupMessage>\n  <ng-container bbNotificationsPopupsItemMessageCustomizable [bbHostRef]=\"this\" [bbTemplateContext]=\"notification\">\n  </ng-container>\n</ng-template>\n\n<ng-template bbNotificationsPopupsItemHeaderCustomizable let-hostRef let-notification=\"context\">\n  <span class=\"sr-only\"> {{ notification?.level || '' }}, </span>\n  <span [innerHTML]=\"notification | notificationLocalization: 'title'\"></span>\n</ng-template>\n\n<ng-template bbNotificationsPopupsItemMessageCustomizable let-hostRef let-notification=\"context\">\n  <ng-container\n    *ngTemplateOutlet=\"(hostRef.popupMessageLineAmount$ | async) ? truncatedMessageContent : messageContent\"\n  ></ng-container>\n  <bb-notifications-capability-icon [origin]=\"notification?.origin\"></bb-notifications-capability-icon>\n  <button\n    type=\"button\"\n    *ngIf=\"hostRef.isMessageTruncated && (hostRef.displayShowMoreButtonInPopup$ | async)\"\n    class=\"btn-link-text bb-text-bold bb-notification__details-button\"\n    (click)=\"hostRef.openNotificationDetails($event)\"\n    aria-label=\"See more notification details\"\n    i18n=\"Notification pop-up See more button@notification.popup.see-more.button\"\n    i18n-aria-label=\"Aria-label for See more button@@notification.popup.see-more.button.aria-label\"\n  >\n    <span>See more</span>\n  </button>\n\n  <ng-template #messageContent>\n    <div class=\"bb-block\" bbIsElementContentTruncated [hostRef]=\"hostRef\">\n      <div\n        [innerHTML]=\"\n          notification\n            | notificationLocalization: 'message'\n            | interpolateLink: notification:true:'bb-notification__message-link'\n        \"\n      ></div>\n    </div>\n  </ng-template>\n\n  <ng-template #truncatedMessageContent>\n    <bb-ellipsis-ui [tooltipTriggers]=\"''\" [lineClamp]=\"hostRef.popupMessageLineAmount$ | async\">\n      <ng-container *ngTemplateOutlet=\"messageContent\"></ng-container>\n    </bb-ellipsis-ui>\n  </ng-template>\n</ng-template>\n"]}