{"version":3,"file":"notifications-popups-list.component.js","sourceRoot":"","sources":["../../../../../../../libs/notifications-popups-widget-ang/src/lib/components/notifications-popups-list/notifications-popups-list.component.ts","../../../../../../../libs/notifications-popups-widget-ang/src/lib/components/notifications-popups-list/notifications-popups-list.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AACrD,OAAO,EAAE,UAAU,EAAE,MAAM,gCAAgC,CAAC;AAG5D,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAErC,OAAO,EAAE,8BAA8B,EAAE,MAAM,kDAAkD,CAAC;;;;;AAElG,MAAM,CAAC,MAAM,4BAA4B,GAAG,CAAC,CAAC;AAM9C,MAAM,OAAO,gCAAgC;IAQ3C,YAA6B,WAA2C;QAA3C,gBAAW,GAAX,WAAW,CAAgC;QAPxE;;WAEG;QACM,YAAO,GAAyC,IAAI,CAAC,WAAW,CAAC,0BAA0B,CAAC,IAAI,CACvG,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAC1B,CAAC;IAEyE,CAAC;IAE5E;;;OAGG;IACK,eAAe,CAAC,KAA+B;QACrD,OAAO,KAAK,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAED;;;;;;OAMG;IACH,6BAA6B,CAAC,KAAa,EAAE,MAAc;QACzD,OAAO,4BAA4B,GAAG,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC;IAC3D,CAAC;;iJA3BU,gCAAgC;qIAAhC,gCAAgC,oECd7C,0gBAcA,yPDiCa,4CAA4C;4FAjC5C,gCAAgC;kBAJ5C,SAAS;mBAAC;oBACT,QAAQ,EAAE,8BAA8B;oBACxC,WAAW,EAAE,4CAA4C;iBAC1D;;AAkCD,MAAM,OAAO,4CAA6C,SAAQ,UAGjE;;6JAHY,4CAA4C;iJAA5C,4CAA4C;4FAA5C,4CAA4C;kBAHxD,SAAS;mBAAC;oBACT,QAAQ,EAAE,yCAAyC;iBACpD","sourcesContent":["import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core/';\nimport { NotificationStreamItem } from '@backbase/notifications-common-ang';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { NotificationsPopupsDataService } from '../../services/notifications-popups-data.service';\n\nexport const DEFAULT_NOTIFICATION_TIMEOUT = 5;\n\n@Component({\n  selector: 'bb-notifications-popups-list',\n  templateUrl: './notifications-popups-list.component.html',\n})\nexport class NotificationsPopupsListComponent {\n  /**\n   * Notification popups stream data in reversed order\n   */\n  readonly popups$: Observable<NotificationStreamItem[]> = this.dataService.popupsNotificationsStream$.pipe(\n    map(this.parsePopupsData),\n  );\n\n  constructor(private readonly dataService: NotificationsPopupsDataService) {}\n\n  /**\n   * Method to parse popups stream data in reversed order\n   * for correct rendering by show notificaton service\n   */\n  private parsePopupsData(array: NotificationStreamItem[]): NotificationStreamItem[] {\n    return array.reverse();\n  }\n\n  /**\n   * Method to get close notification timeout value for each popup\n   *\n   * @param index List item index\n   * @param length List length\n   * @returns Number of seconds before notification popup close\n   */\n  getNotificationTimeoutByIndex(index: number, length: number): number {\n    return DEFAULT_NOTIFICATION_TIMEOUT + length - index - 1;\n  }\n}\n\n@Directive({\n  selector: '[bbNotificationsPopupsListCustomizable]',\n})\nexport class NotificationsPopupsListCustomizableDirective extends BbTemplate<\n  NotificationsPopupsListComponent,\n  NotificationStreamItem[]\n> {}\n","<ng-container\n  bbNotificationsPopupsListCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"popups$ | async\"\n></ng-container>\n\n<ng-template bbNotificationsPopupsListCustomizable let-hostRef let-notifications=\"context\">\n  <bb-notifications-popups-item\n    *ngFor=\"let notification of notifications; index as i\"\n    [notification]=\"notification\"\n    [notificationTimeout]=\"hostRef.getNotificationTimeoutByIndex(i, notifications.length)\"\n  >\n  </bb-notifications-popups-item>\n</ng-template>\n"]}