import { NgZone } from '@angular/core';
import { NotificationsHttpService } from '@backbase/data-ang/notifications';
import { NotificationStreamItem } from '@backbase/notifications-common-ang';
import { Observable, Subject } from 'rxjs';
import { Pubsub } from '@backbase/foundation-ang/web-sdk';
import { WidgetPropertiesService } from './widget-properties.service';
import * as i0 from "@angular/core";
export declare const DEFAULT_POLLING_INTERVAL = 15;
export declare class NotificationsPopupsDataService {
    private readonly dataHttpService;
    private readonly ngZone;
    private readonly properties;
    private readonly pubSub;
    /**
     * Sticky notifications stream
     */
    readonly stickyNotificationsStream$: Observable<NotificationStreamItem[]>;
    /**
     * Popup notifications stream
     */
    readonly popupsNotificationsStream$: Observable<NotificationStreamItem[]>;
    /**
     * Mark notification as read stream
     */
    readonly markNotificationAsRead$: Subject<string | NotificationStreamItem>;
    private readonly notificationsStream$;
    private readonly notificationsStreamForceUpdate$;
    private readonly polling$;
    private readonly notificationsLocalStickySource;
    private readonly origins$;
    private readonly severityLevels$;
    private readonly pollingInterval$;
    constructor(dataHttpService: NotificationsHttpService, ngZone: NgZone, properties: WidgetPropertiesService, pubSub: Pubsub);
    private get notificationsLocalSticky();
    /**
     * Mark notification as read
     *
     * @param notification Notification data
     */
    markNotificationAsRead(notification: NotificationStreamItem | string): void;
    private requestNotificationsStream;
    private removeNotificationItemFromStream;
    private initializeNotificationsStreamPolling;
    static ɵfac: i0.ɵɵFactoryDeclaration<NotificationsPopupsDataService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<NotificationsPopupsDataService>;
}
