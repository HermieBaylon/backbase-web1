import { Observable } from 'rxjs';
import { BaseWidgetPropertiesService } from '@backbase/notifications-common-ang';
import { ItemModel } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
export interface WidgetProperties {
    allowedRoutes: string[];
    autofocus: boolean;
    popupMessageLineAmount: number;
    displayShowMoreButtonInPopup: boolean;
    origins: string[];
    severityLevels: string[];
    pollingInterval: number;
}
export declare const DefaultWidgetProperties: WidgetProperties;
export declare class WidgetPropertiesService extends BaseWidgetPropertiesService {
    protected readonly itemModel?: ItemModel | undefined;
    constructor(itemModel?: ItemModel | undefined);
    private readonly autofocus$$;
    private readonly popupMessageLineAmount$$;
    private readonly displayShowMoreButtonInPopup$$;
    private readonly pollingInterval$$;
    readonly autofocus$: Observable<boolean>;
    readonly popupMessageLineAmount$: Observable<number>;
    readonly displayShowMoreButtonInPopup$: Observable<boolean>;
    readonly pollingInterval$: Observable<number>;
    private get autofocus();
    private get popupMessageLineAmount();
    private get displayShowMoreButtonInPopup();
    private get pollingInterval();
    setAutofocus(value: string | boolean): void;
    setPopupMessageLineAmount(value: string | number): void;
    setDisplayShowMoreButtonInPopup(value: string | boolean): void;
    setPollingInterval(value: string | number): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<WidgetPropertiesService, [{ optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<WidgetPropertiesService>;
}
