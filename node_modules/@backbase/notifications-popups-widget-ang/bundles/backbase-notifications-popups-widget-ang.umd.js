(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@backbase/foundation-ang/core'), require('@backbase/notifications-common-ang'), require('rxjs/operators'), require('rxjs'), require('@backbase/foundation-ang/web-sdk'), require('@backbase/data-ang/notifications'), require('@backbase/ui-ang/alert'), require('@backbase/foundation-ang/core/'), require('@backbase/ui-ang/notification'), require('@backbase/ui-ang/ellipsis')) :
    typeof define === 'function' && define.amd ? define('@backbase/notifications-popups-widget-ang', ['exports', '@angular/core', '@angular/common', '@backbase/foundation-ang/core', '@backbase/notifications-common-ang', 'rxjs/operators', 'rxjs', '@backbase/foundation-ang/web-sdk', '@backbase/data-ang/notifications', '@backbase/ui-ang/alert', '@backbase/foundation-ang/core/', '@backbase/ui-ang/notification', '@backbase/ui-ang/ellipsis'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["notifications-popups-widget-ang"] = {}), global.ng.core, global.ng.common, global.i1, global.i5, global.rxjs.operators, global.rxjs, global.webSdk, global.i1$1, global.i1$2, global._, global.i1$3, global.i6));
})(this, (function (exports, i0, i3, i1, i5, operators, rxjs, webSdk, i1$1, i1$2, _, i1$3, i6) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$2);
    var i1__namespace$3 = /*#__PURE__*/_interopNamespace(i1$3);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var NOTIFICATION_LOCAL = 'NOTIFICATION_LOCAL';

    var secondsToMilliseconds = function (seconds) { return seconds * 1000; };
    var fromHttpResponse = function (response) {
        if (response.body === null) {
            throw new Error('Response body not set');
        }
        return response.body;
    };
    var notificationsStreamToSticky = function (notificationsStream) { return notificationsStream.filter(function (item) { return !!item.expiresOn; }); };
    var notificationsStreamToPopups = function (notificationsStream) { return notificationsStream.filter(function (item) { return !item.expiresOn; }); };
    // eslint-disable-next-line arrow-body-style
    var parseNotificationSeverityLevel = function (level) {
        return level === 'ALERT' ? 'error' : level.toLowerCase();
    };
    // eslint-disable-next-line arrow-body-style
    var severityTypeToSeverityLevel = function (type) {
        return type === 'error' ? 'ALERT' : type.toUpperCase();
    };
    var notificationLocalToStreamItem = function (notification) {
        var timestamp = Date.now();
        var date = new Date(timestamp).toISOString();
        return Object.assign({ id: NOTIFICATION_LOCAL + "_" + (timestamp + Math.floor(Math.random() * 1000)), createdOn: date, title: notification.title, message: notification.message, level: severityTypeToSeverityLevel(notification.level) }, (notification.sticky && { expiresOn: date }));
    };

    var DefaultWidgetProperties = {
        allowedRoutes: [],
        autofocus: true,
        popupMessageLineAmount: 2,
        displayShowMoreButtonInPopup: false,
        origins: [],
        severityLevels: [],
        pollingInterval: 15,
    };
    var WidgetPropertiesService = /** @class */ (function (_super) {
        __extends(WidgetPropertiesService, _super);
        function WidgetPropertiesService(itemModel) {
            var _this = _super.call(this, itemModel) || this;
            _this.itemModel = itemModel;
            _this.autofocus$$ = new rxjs.BehaviorSubject(undefined);
            _this.popupMessageLineAmount$$ = new rxjs.BehaviorSubject(undefined);
            _this.displayShowMoreButtonInPopup$$ = new rxjs.BehaviorSubject(undefined);
            _this.pollingInterval$$ = new rxjs.BehaviorSubject(undefined);
            _this.autofocus$ = i5.getPropertyValue(_this.autofocus$$, _this.autofocus);
            _this.popupMessageLineAmount$ = i5.getPropertyValue(_this.popupMessageLineAmount$$, _this.popupMessageLineAmount);
            _this.displayShowMoreButtonInPopup$ = i5.getPropertyValue(_this.displayShowMoreButtonInPopup$$, _this.displayShowMoreButtonInPopup);
            _this.pollingInterval$ = i5.getPropertyValue(_this.pollingInterval$$, _this.pollingInterval);
            return _this;
        }
        Object.defineProperty(WidgetPropertiesService.prototype, "autofocus", {
            get: function () {
                if (!this.itemModel) {
                    return this.defaultModelObservable(DefaultWidgetProperties.autofocus);
                }
                return this.itemModel
                    .property('autofocus', DefaultWidgetProperties.autofocus)
                    .pipe(operators.map(i5.modelItemToBoolean), operators.first());
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WidgetPropertiesService.prototype, "popupMessageLineAmount", {
            get: function () {
                if (!this.itemModel) {
                    return this.defaultModelObservable(DefaultWidgetProperties.popupMessageLineAmount);
                }
                return this.itemModel.property('popupMessageLineAmount', '').pipe(operators.map(Number), operators.first());
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WidgetPropertiesService.prototype, "displayShowMoreButtonInPopup", {
            get: function () {
                if (!this.itemModel) {
                    return this.defaultModelObservable(DefaultWidgetProperties.displayShowMoreButtonInPopup);
                }
                return this.itemModel
                    .property('displayShowMoreButtonInPopup', DefaultWidgetProperties.displayShowMoreButtonInPopup)
                    .pipe(operators.map(i5.modelItemToBoolean), operators.first());
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WidgetPropertiesService.prototype, "pollingInterval", {
            get: function () {
                if (!this.itemModel) {
                    return this.defaultModelObservable(DefaultWidgetProperties.pollingInterval * 1000);
                }
                return this.itemModel.property('pollingInterval', DefaultWidgetProperties.pollingInterval).pipe(operators.map(Number), operators.map(function (n) { return n * 1000; }), i5.shareReplayOnce());
            },
            enumerable: false,
            configurable: true
        });
        WidgetPropertiesService.prototype.setAutofocus = function (value) {
            this.autofocus$$.next(i5.modelItemToBoolean(value));
        };
        WidgetPropertiesService.prototype.setPopupMessageLineAmount = function (value) {
            this.popupMessageLineAmount$$.next(Number(value));
        };
        WidgetPropertiesService.prototype.setDisplayShowMoreButtonInPopup = function (value) {
            this.displayShowMoreButtonInPopup$$.next(i5.modelItemToBoolean(value));
        };
        WidgetPropertiesService.prototype.setPollingInterval = function (value) {
            var pollingInterval = Number(value);
            if (!isNaN(pollingInterval) && pollingInterval > 0) {
                this.pollingInterval$$.next(i5.secondsToMilliseconds(pollingInterval));
            }
        };
        return WidgetPropertiesService;
    }(i5.BaseWidgetPropertiesService));
    /** @nocollapse */ WidgetPropertiesService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: WidgetPropertiesService, deps: [{ token: i1__namespace.ItemModel, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ WidgetPropertiesService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: WidgetPropertiesService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: WidgetPropertiesService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: i1__namespace.ItemModel, decorators: [{
                            type: i0.Optional
                        }] }];
        } });

    var DEFAULT_POLLING_INTERVAL = 15;
    var NotificationsPopupsDataService = /** @class */ (function () {
        function NotificationsPopupsDataService(dataHttpService, ngZone, properties, pubSub) {
            var _this = this;
            this.dataHttpService = dataHttpService;
            this.ngZone = ngZone;
            this.properties = properties;
            this.pubSub = pubSub;
            /**
             * Mark notification as read stream
             */
            this.markNotificationAsRead$ = new rxjs.Subject();
            this.notificationsStreamForceUpdate$ = new rxjs.Subject();
            this.polling$ = new rxjs.Subject();
            this.notificationsLocalStickySource = new Map();
            this.origins$ = this.properties.origins$;
            this.severityLevels$ = this.properties.severityLevels$;
            this.pollingInterval$ = this.properties.pollingInterval$;
            this.notificationsStream$ = this.initializeNotificationsStreamPolling();
            this.stickyNotificationsStream$ = this.notificationsStream$.pipe(operators.map(notificationsStreamToSticky));
            this.popupsNotificationsStream$ = this.notificationsStream$.pipe(operators.map(notificationsStreamToPopups));
            this.markNotificationAsRead$.subscribe(function (payload) {
                _this.pubSub.publish(i5.NOTIFICATIONS_BADGE_FORCE_UPDATE_EVENT, typeof payload === 'object'
                    ? {
                        origin: payload.origin,
                        level: payload.level,
                    }
                    : undefined);
            });
            this.pubSub.subscribe(i5.NOTIFICATIONS_CREATE_LOCAL_EVENT, function (notification) {
                var parsedNotification = notificationLocalToStreamItem(notification);
                if (notification.sticky) {
                    _this.notificationsLocalStickySource.set(parsedNotification.id, parsedNotification);
                }
                _this.notificationsStream$
                    .pipe(operators.switchMap(function (stream) {
                    var popup = (!notification.sticky && [parsedNotification]) || [];
                    var stickies = _this.notificationsLocalSticky;
                    return rxjs.of(__spreadArray(__spreadArray(__spreadArray([], __read(stream)), __read(stickies)), __read(popup)));
                }), operators.map(function (concatenatedStream) { return Array.from(new Map(concatenatedStream.map(function (item) { return [item.id, item]; })).values()); }), operators.take(1))
                    .subscribe(function (notificationsStream) { return _this.notificationsStreamForceUpdate$.next(notificationsStream); });
            });
        }
        Object.defineProperty(NotificationsPopupsDataService.prototype, "notificationsLocalSticky", {
            get: function () {
                return Array.from(this.notificationsLocalStickySource.values());
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Mark notification as read
         *
         * @param notification Notification data
         */
        NotificationsPopupsDataService.prototype.markNotificationAsRead = function (notification) {
            var _this = this;
            var id = typeof notification === 'string' ? notification : notification.id;
            if (id.match(NOTIFICATION_LOCAL)) {
                this.removeNotificationItemFromStream(id);
                this.notificationsLocalStickySource.delete(id);
            }
            else {
                this.dataHttpService.putMarkAsRead({ id: id, markAsReadPutRequestBody: { read: true } }).subscribe(function () {
                    _this.removeNotificationItemFromStream(id);
                    _this.markNotificationAsRead$.next(notification);
                });
            }
        };
        NotificationsPopupsDataService.prototype.requestNotificationsStream = function () {
            var _this = this;
            return rxjs.combineLatest([this.pollingInterval$, this.origins$, this.severityLevels$]).pipe(operators.first(), operators.switchMap(function (_a) {
                var _b = __read(_a, 3), interval = _b[0], origins = _b[1], levels = _b[2];
                return _this.dataHttpService.getNotificationsStream(Object.assign(Object.assign({ interval: interval }, (origins.length && { origins: origins })), (levels && { levels: levels.join(', ') })), 'response');
            }), operators.map(fromHttpResponse));
        };
        NotificationsPopupsDataService.prototype.removeNotificationItemFromStream = function (notificationId) {
            var _this = this;
            this.notificationsStream$
                .pipe(operators.first(), operators.map(function (notificationsStream) { return notificationsStream.filter(function (_a) {
                var id = _a.id;
                return id !== notificationId;
            }); }))
                .subscribe(function (notificationsStream) { return _this.notificationsStreamForceUpdate$.next(notificationsStream); });
        };
        NotificationsPopupsDataService.prototype.initializeNotificationsStreamPolling = function () {
            var _this = this;
            var pollAndRequest$ = rxjs.of(undefined).pipe(operators.tap(function () { return _this.polling$.next(); }), operators.switchMap(function () { return _this.requestNotificationsStream(); }));
            var pollingNotificationsStream$ = this.polling$.pipe(operators.switchMap(function () { return _this.pollingInterval$; }), operators.delayWhen(function (pollingInterval) { return rxjs.of().pipe(operators.delay(pollingInterval, i5.leaveZone(_this.ngZone, rxjs.asyncScheduler))); }), operators.switchMap(function () { return pollAndRequest$; }), operators.observeOn(i5.enterZone(this.ngZone, rxjs.asyncScheduler)));
            return rxjs.merge(this.notificationsStreamForceUpdate$, pollingNotificationsStream$.pipe(operators.switchMap(function (stream) { return rxjs.of(__spreadArray(__spreadArray([], __read(stream)), __read(_this.notificationsLocalSticky))); })), pollAndRequest$.pipe(operators.switchMap(function (stream) { return rxjs.of(__spreadArray(__spreadArray([], __read(stream)), __read(_this.notificationsLocalSticky))); }))).pipe(i5.shareReplayOnce());
        };
        return NotificationsPopupsDataService;
    }());
    /** @nocollapse */ NotificationsPopupsDataService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsDataService, deps: [{ token: i1__namespace$1.NotificationsHttpService }, { token: i0__namespace.NgZone }, { token: WidgetPropertiesService }, { token: webSdk.PUBSUB }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ NotificationsPopupsDataService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsDataService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsDataService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: i1__namespace$1.NotificationsHttpService }, { type: i0__namespace.NgZone }, { type: WidgetPropertiesService }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [webSdk.PUBSUB]
                        }] }];
        } });

    var NotificationsPopupsRouterService = /** @class */ (function () {
        function NotificationsPopupsRouterService() {
            this.popupsRoutingSubject = new rxjs.Subject();
            /**
             * Popups notification routing stream
             */
            this.popupsRouting$ = this.popupsRoutingSubject.asObservable();
        }
        /**
         * Emit popups routing
         *
         * @param routing Notification routing data
         */
        NotificationsPopupsRouterService.prototype.emitPopupsRouting = function (routing) {
            this.popupsRoutingSubject.next(routing);
        };
        return NotificationsPopupsRouterService;
    }());
    /** @nocollapse */ NotificationsPopupsRouterService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsRouterService, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ NotificationsPopupsRouterService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsRouterService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsRouterService, decorators: [{
                type: i0.Injectable
            }] });

    var NotificationsStickyListItemComponent = /** @class */ (function () {
        function NotificationsStickyListItemComponent() {
            /**
             * Notification stream item close event
             * Emits notification stream item id
             */
            // eslint-disable-next-line @angular-eslint/no-output-native
            this.close = new i0.EventEmitter();
        }
        /**
         * Method to handle close event from alert component
         *
         * @param notification Notification data
         */
        NotificationsStickyListItemComponent.prototype.onClose = function (notification) {
            this.close.emit(notification);
        };
        /**
         * Method to parse severity level into alert modifier
         *
         * @param level Severity level
         * @returns Notification severity level type
         */
        NotificationsStickyListItemComponent.prototype.parseNotificationSeverityLevel = function (level) {
            return parseNotificationSeverityLevel(level);
        };
        return NotificationsStickyListItemComponent;
    }());
    /** @nocollapse */ NotificationsStickyListItemComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsStickyListItemComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ NotificationsStickyListItemComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: NotificationsStickyListItemComponent, selector: "bb-notifications-sticky-list-item", inputs: { notification: "notification" }, outputs: { close: "close" }, ngImport: i0__namespace, template: "<ng-container\n  bbNotificationsStickyListItemCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"notification\"\n></ng-container>\n\n<ng-template bbNotificationsStickyListItemCustomizable let-host let-notification=\"context\">\n  <bb-alert-ui\n    [dismissible]=\"true\"\n    [modifier]=\"host.parseNotificationSeverityLevel(notification?.level)\"\n    [title]=\"notification?.title || ''\"\n    (close)=\"host.onClose(notification)\"\n  >\n    <div\n      class=\"bb-subtitle\"\n      data-role=\"notification-sticky-message\"\n      [innerHTML]=\"notification?.message | interpolateLink: notification:true:'alert-link'\"\n    ></div>\n  </bb-alert-ui>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace$2.AlertComponent; }), selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }], directives: [{ type: i0__namespace.forwardRef(function () { return NotificationsStickyListItemCustomizableDirective; }), selector: "[bbNotificationsStickyListItemCustomizable]" }], pipes: { "interpolateLink": i0__namespace.forwardRef(function () { return i5__namespace.ӨInterpolateLinkPipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsStickyListItemComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-notifications-sticky-list-item',
                        templateUrl: './notifications-sticky-list-item.component.html',
                    }]
            }], propDecorators: { notification: [{
                    type: i0.Input
                }], close: [{
                    type: i0.Output
                }] } });
    var NotificationsStickyListItemCustomizableDirective = /** @class */ (function (_super) {
        __extends(NotificationsStickyListItemCustomizableDirective, _super);
        function NotificationsStickyListItemCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return NotificationsStickyListItemCustomizableDirective;
    }(i1.BbTemplate));
    /** @nocollapse */ NotificationsStickyListItemCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsStickyListItemCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ NotificationsStickyListItemCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: NotificationsStickyListItemCustomizableDirective, selector: "[bbNotificationsStickyListItemCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsStickyListItemCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbNotificationsStickyListItemCustomizable]',
                    }]
            }] });

    var NotificationsStickyListComponent = /** @class */ (function () {
        function NotificationsStickyListComponent(dataService, elem) {
            this.dataService = dataService;
            this.elem = elem;
            /**
             * Notification sticky stream data
             */
            this.notifications$ = this.dataService.stickyNotificationsStream$;
        }
        /**
         * Method to call mark notification as read request by id
         *
         * @param notification Notification data
         */
        NotificationsStickyListComponent.prototype.onReadNotification = function (notification) {
            var _this = this;
            this.dataService.markNotificationAsRead(notification);
            var notifications = this.elem.nativeElement.querySelectorAll('bb-notifications-sticky-list-item');
            var deletedNotificationIndex$ = this.notifications$.pipe(operators.map(function (notificationElements) { return notificationElements.findIndex(function (item) { return typeof notification === 'string' ? notification === item.id : notification.id === item.id; }); }));
            deletedNotificationIndex$.pipe(operators.first()).subscribe(function (index) {
                if (notifications[index + 1]) {
                    notifications[index + 1].getElementsByTagName('button')[0].focus();
                }
                else if (notifications[index - 1]) {
                    notifications[index - 1].getElementsByTagName('button')[0].focus();
                }
                else if (_this.previousFocusedElement) {
                    _this.previousFocusedElement.focus();
                }
            });
        };
        /**
         * Method to differentiate notifications by IDs.
         *
         * @param _index List item index
         * @param notification Notification list item
         * @returns Notification id
         */
        NotificationsStickyListComponent.prototype.trackById = function (_index, notification) {
            return notification.id;
        };
        /**
         * Method to change focus.
         *
         * @param event Focus event
         */
        NotificationsStickyListComponent.prototype.onFocus = function (event) {
            if (!this.previousFocusedElement) {
                this.previousFocusedElement = event.relatedTarget;
            }
        };
        return NotificationsStickyListComponent;
    }());
    /** @nocollapse */ NotificationsStickyListComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsStickyListComponent, deps: [{ token: NotificationsPopupsDataService }, { token: i0__namespace.ElementRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ NotificationsStickyListComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: NotificationsStickyListComponent, selector: "bb-notifications-sticky-list", ngImport: i0__namespace, template: "<ng-container\n  bbNotificationsStickyListCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    notifications: notifications$ | async\n  }\"\n></ng-container>\n\n<ng-template bbNotificationsStickyListCustomizable let-host let-notifications=\"context.notifications\">\n  <bb-notifications-sticky-list-item\n    (focusin)=\"host.onFocus($event)\"\n    *ngFor=\"let item of notifications; trackBy: host.trackById\"\n    [notification]=\"item\"\n    (close)=\"host.onReadNotification($event)\"\n  ></bb-notifications-sticky-list-item>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return NotificationsStickyListItemComponent; }), selector: "bb-notifications-sticky-list-item", inputs: ["notification"], outputs: ["close"] }], directives: [{ type: i0__namespace.forwardRef(function () { return NotificationsStickyListCustomizableDirective; }), selector: "[bbNotificationsStickyListCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "async": i0__namespace.forwardRef(function () { return i3__namespace.AsyncPipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsStickyListComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-notifications-sticky-list',
                        templateUrl: './notifications-sticky-list.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: NotificationsPopupsDataService }, { type: i0__namespace.ElementRef }]; } });
    var NotificationsStickyListCustomizableDirective = /** @class */ (function (_super) {
        __extends(NotificationsStickyListCustomizableDirective, _super);
        function NotificationsStickyListCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return NotificationsStickyListCustomizableDirective;
    }(i1.BbTemplate));
    /** @nocollapse */ NotificationsStickyListCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsStickyListCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ NotificationsStickyListCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: NotificationsStickyListCustomizableDirective, selector: "[bbNotificationsStickyListCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsStickyListCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbNotificationsStickyListCustomizable]',
                    }]
            }] });

    /** @dynamic */
    var NotificationsPopupsItemComponent = /** @class */ (function () {
        function NotificationsPopupsItemComponent(notificationService, dataService, routerService, properties) {
            this.notificationService = notificationService;
            this.dataService = dataService;
            this.routerService = routerService;
            this.properties = properties;
            /**
             * Notification close delay timeout
             */
            this.notificationTimeout = 0;
            /**
             * Routes available for navigation.
             */
            this.allowedRoutes$ = this.properties.allowedRoutes$;
            /**
             * Stream of widget property with a flag that defines if notification popup should be auto-focused.
             */
            this.autofocus$ = this.properties.autofocus$;
            /**
             * Stream of widget property with a flag that defines if we should display Show More button.
             */
            this.displayShowMoreButtonInPopup$ = this.properties.displayShowMoreButtonInPopup$;
            /**
             * Stream of widget property with the number of lines to show as a notification message.
             */
            this.popupMessageLineAmount$ = this.properties.popupMessageLineAmount$;
            /**
             * The boolean flag that shows if the notification message text exceeds the number of visible lines and is truncated.
             */
            this.isMessageTruncated = false;
            /**
             * destroy$ should emit only when component is destroyed to
             * signal subscriptions to unsubscribe.
             */
            this.destroy$ = new rxjs.Subject();
        }
        NotificationsPopupsItemComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            if (this.notification) {
                rxjs.combineLatest([this.allowedRoutes$, this.displayShowMoreButtonInPopup$, this.autofocus$])
                    .pipe(operators.map(function (_a) {
                    var _b = __read(_a, 3), routes = _b[0], isShowMoreButtonEnabled = _b[1], autofocus = _b[2];
                    return [
                        _this.hasRouting(routes),
                        isShowMoreButtonEnabled,
                        autofocus,
                    ];
                }), operators.takeUntil(this.destroy$))
                    .subscribe(function (preferences) {
                    _this.createNotificationPopup(preferences);
                });
            }
        };
        /**
         * Open notification details in external widget
         *
         * @param event Click event
         */
        NotificationsPopupsItemComponent.prototype.openNotificationDetails = function (event) {
            var _a;
            event.stopPropagation();
            var routing = (_a = {},
                _a['where-to'] = 'notification-details',
                _a.data = this.notification,
                _a);
            this.readNotification(this.notification);
            this.routerService.emitPopupsRouting(routing);
            this.hideNotification();
        };
        /**
         * Set truncation status of notification message
         *
         * @param isMessageTruncated Is message truncated flag
         */
        NotificationsPopupsItemComponent.prototype.setIsContentTruncated = function (isMessageTruncated) {
            this.isMessageTruncated = isMessageTruncated;
        };
        NotificationsPopupsItemComponent.prototype.createNotificationPopup = function (_a) {
            var _b = __read(_a, 3), hasRouting = _b[0], isShowMoreButtonEnabled = _b[1], autofocus = _b[2];
            this.hideNotification = this.notificationService.showNotification(Object.assign(Object.assign(Object.assign({ modifier: parseNotificationSeverityLevel(this.notification.level), header: this.popupHeaderTemplate, message: this.popupMessageTemplate, ttl: secondsToMilliseconds(this.notificationTimeout), closeAction: this.readNotification.bind(this, this.notification) }, (hasRouting && {
                hostAction: this.navigateFromPopup.bind(this),
            })), (!hasRouting &&
                isShowMoreButtonEnabled && {
                hostAction: this.openNotificationDetails.bind(this),
            })), { autofocus: autofocus }));
        };
        NotificationsPopupsItemComponent.prototype.readNotification = function (notification) {
            this.dataService.markNotificationAsRead(notification);
        };
        NotificationsPopupsItemComponent.prototype.hasRouting = function (routes) {
            var route = this.notification.routing && this.notification.routing['where-to'];
            return Boolean(this.notification.routing) && routes.some(function (allowedRoute) { return route === allowedRoute; });
        };
        NotificationsPopupsItemComponent.prototype.navigateFromPopup = function () {
            this.readNotification(this.notification);
            if (this.notification.routing) {
                this.routerService.emitPopupsRouting(this.notification.routing);
            }
        };
        NotificationsPopupsItemComponent.prototype.ngOnDestroy = function () {
            this.destroy$.next();
            this.destroy$.complete();
        };
        return NotificationsPopupsItemComponent;
    }());
    /** @nocollapse */ NotificationsPopupsItemComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsItemComponent, deps: [{ token: i1__namespace$3.NotificationService }, { token: NotificationsPopupsDataService }, { token: NotificationsPopupsRouterService }, { token: WidgetPropertiesService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ NotificationsPopupsItemComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: NotificationsPopupsItemComponent, selector: "bb-notifications-popups-item", inputs: { notification: "notification", notificationTimeout: "notificationTimeout" }, viewQueries: [{ propertyName: "popupHeaderTemplate", first: true, predicate: ["popupHeader"], descendants: true }, { propertyName: "popupMessageTemplate", first: true, predicate: ["popupMessage"], descendants: true }], ngImport: i0__namespace, template: "<ng-template #popupHeader>\n  <ng-container\n    bbNotificationsPopupsItemHeaderCustomizable\n    [bbHostRef]=\"this\"\n    [bbTemplateContext]=\"notification\"\n  ></ng-container>\n</ng-template>\n\n<ng-template #popupMessage>\n  <ng-container bbNotificationsPopupsItemMessageCustomizable [bbHostRef]=\"this\" [bbTemplateContext]=\"notification\">\n  </ng-container>\n</ng-template>\n\n<ng-template bbNotificationsPopupsItemHeaderCustomizable let-hostRef let-notification=\"context\">\n  <span class=\"sr-only\"> {{ notification?.level || '' }}, </span>\n  <span [innerHTML]=\"notification | notificationLocalization: 'title'\"></span>\n</ng-template>\n\n<ng-template bbNotificationsPopupsItemMessageCustomizable let-hostRef let-notification=\"context\">\n  <ng-container\n    *ngTemplateOutlet=\"(hostRef.popupMessageLineAmount$ | async) ? truncatedMessageContent : messageContent\"\n  ></ng-container>\n  <bb-notifications-capability-icon [origin]=\"notification?.origin\"></bb-notifications-capability-icon>\n  <button\n    type=\"button\"\n    *ngIf=\"hostRef.isMessageTruncated && (hostRef.displayShowMoreButtonInPopup$ | async)\"\n    class=\"btn-link-text bb-text-bold bb-notification__details-button\"\n    (click)=\"hostRef.openNotificationDetails($event)\"\n    aria-label=\"See more notification details\"\n    i18n=\"Notification pop-up See more button@notification.popup.see-more.button\"\n    i18n-aria-label=\"Aria-label for See more button@@notification.popup.see-more.button.aria-label\"\n  >\n    <span>See more</span>\n  </button>\n\n  <ng-template #messageContent>\n    <div class=\"bb-block\" bbIsElementContentTruncated [hostRef]=\"hostRef\">\n      <div\n        [innerHTML]=\"\n          notification\n            | notificationLocalization: 'message'\n            | interpolateLink: notification:true:'bb-notification__message-link'\n        \"\n      ></div>\n    </div>\n  </ng-template>\n\n  <ng-template #truncatedMessageContent>\n    <bb-ellipsis-ui [tooltipTriggers]=\"''\" [lineClamp]=\"hostRef.popupMessageLineAmount$ | async\">\n      <ng-container *ngTemplateOutlet=\"messageContent\"></ng-container>\n    </bb-ellipsis-ui>\n  </ng-template>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i5__namespace.NotificationsCapabilityIconComponent; }), selector: "bb-notifications-capability-icon", inputs: ["origin"] }, { type: i0__namespace.forwardRef(function () { return i6__namespace.EllipsisComponent; }), selector: "bb-ellipsis-ui", inputs: ["text", "tooltipTriggers", "lineClamp"] }], directives: [{ type: i0__namespace.forwardRef(function () { return NotificationsPopupsItemHeaderCustomizableDirective; }), selector: "[bbNotificationsPopupsItemHeaderCustomizable]" }, { type: i0__namespace.forwardRef(function () { return NotificationsPopupsItemMessageCustomizableDirective; }), selector: "[bbNotificationsPopupsItemMessageCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgTemplateOutlet; }), selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i5__namespace.ӨIsElementContentTruncatedDirective; }), selector: "[bbIsElementContentTruncated]", inputs: ["hostRef"] }], pipes: { "notificationLocalization": i0__namespace.forwardRef(function () { return i5__namespace.ӨNotificationLocalizationPipe; }), "async": i0__namespace.forwardRef(function () { return i3__namespace.AsyncPipe; }), "interpolateLink": i0__namespace.forwardRef(function () { return i5__namespace.ӨInterpolateLinkPipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsItemComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-notifications-popups-item',
                        templateUrl: './notifications-popups-item.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$3.NotificationService }, { type: NotificationsPopupsDataService }, { type: NotificationsPopupsRouterService }, { type: WidgetPropertiesService }]; }, propDecorators: { notification: [{
                    type: i0.Input
                }], notificationTimeout: [{
                    type: i0.Input
                }], popupHeaderTemplate: [{
                    type: i0.ViewChild,
                    args: ['popupHeader']
                }], popupMessageTemplate: [{
                    type: i0.ViewChild,
                    args: ['popupMessage']
                }] } });
    var NotificationsPopupsItemHeaderCustomizableDirective = /** @class */ (function (_super) {
        __extends(NotificationsPopupsItemHeaderCustomizableDirective, _super);
        function NotificationsPopupsItemHeaderCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return NotificationsPopupsItemHeaderCustomizableDirective;
    }(i1.BbTemplate));
    /** @nocollapse */ NotificationsPopupsItemHeaderCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsItemHeaderCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ NotificationsPopupsItemHeaderCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: NotificationsPopupsItemHeaderCustomizableDirective, selector: "[bbNotificationsPopupsItemHeaderCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsItemHeaderCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbNotificationsPopupsItemHeaderCustomizable]',
                    }]
            }] });
    var NotificationsPopupsItemMessageCustomizableDirective = /** @class */ (function (_super) {
        __extends(NotificationsPopupsItemMessageCustomizableDirective, _super);
        function NotificationsPopupsItemMessageCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return NotificationsPopupsItemMessageCustomizableDirective;
    }(i1.BbTemplate));
    /** @nocollapse */ NotificationsPopupsItemMessageCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsItemMessageCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ NotificationsPopupsItemMessageCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: NotificationsPopupsItemMessageCustomizableDirective, selector: "[bbNotificationsPopupsItemMessageCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsItemMessageCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbNotificationsPopupsItemMessageCustomizable]',
                    }]
            }] });

    var DEFAULT_NOTIFICATION_TIMEOUT = 5;
    var NotificationsPopupsListComponent = /** @class */ (function () {
        function NotificationsPopupsListComponent(dataService) {
            this.dataService = dataService;
            /**
             * Notification popups stream data in reversed order
             */
            this.popups$ = this.dataService.popupsNotificationsStream$.pipe(operators.map(this.parsePopupsData));
        }
        /**
         * Method to parse popups stream data in reversed order
         * for correct rendering by show notificaton service
         */
        NotificationsPopupsListComponent.prototype.parsePopupsData = function (array) {
            return array.reverse();
        };
        /**
         * Method to get close notification timeout value for each popup
         *
         * @param index List item index
         * @param length List length
         * @returns Number of seconds before notification popup close
         */
        NotificationsPopupsListComponent.prototype.getNotificationTimeoutByIndex = function (index, length) {
            return DEFAULT_NOTIFICATION_TIMEOUT + length - index - 1;
        };
        return NotificationsPopupsListComponent;
    }());
    /** @nocollapse */ NotificationsPopupsListComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsListComponent, deps: [{ token: NotificationsPopupsDataService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ NotificationsPopupsListComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: NotificationsPopupsListComponent, selector: "bb-notifications-popups-list", ngImport: i0__namespace, template: "<ng-container\n  bbNotificationsPopupsListCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"popups$ | async\"\n></ng-container>\n\n<ng-template bbNotificationsPopupsListCustomizable let-hostRef let-notifications=\"context\">\n  <bb-notifications-popups-item\n    *ngFor=\"let notification of notifications; index as i\"\n    [notification]=\"notification\"\n    [notificationTimeout]=\"hostRef.getNotificationTimeoutByIndex(i, notifications.length)\"\n  >\n  </bb-notifications-popups-item>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return NotificationsPopupsItemComponent; }), selector: "bb-notifications-popups-item", inputs: ["notification", "notificationTimeout"] }], directives: [{ type: i0__namespace.forwardRef(function () { return NotificationsPopupsListCustomizableDirective; }), selector: "[bbNotificationsPopupsListCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "async": i0__namespace.forwardRef(function () { return i3__namespace.AsyncPipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsListComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-notifications-popups-list',
                        templateUrl: './notifications-popups-list.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: NotificationsPopupsDataService }]; } });
    var NotificationsPopupsListCustomizableDirective = /** @class */ (function (_super) {
        __extends(NotificationsPopupsListCustomizableDirective, _super);
        function NotificationsPopupsListCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return NotificationsPopupsListCustomizableDirective;
    }(_.BbTemplate));
    /** @nocollapse */ NotificationsPopupsListCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsListCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ NotificationsPopupsListCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: NotificationsPopupsListCustomizableDirective, selector: "[bbNotificationsPopupsListCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsListCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbNotificationsPopupsListCustomizable]',
                    }]
            }] });

    /* eslint-disable @angular-eslint/no-input-rename */
    var NotificationsPopupsWidgetComponent = /** @class */ (function () {
        function NotificationsPopupsWidgetComponent(routerService, properties) {
            this.routerService = routerService;
            this.properties = properties;
            /**
             * Navigation Data emitter.
             */
            this.notificationRouting = new i0.EventEmitter();
            this.destroy$ = new rxjs.Subject();
        }
        Object.defineProperty(NotificationsPopupsWidgetComponent.prototype, "originsValue", {
            /**
             * Comma-separated list of notifications origins to process (empty for all).
             */
            set: function (value) {
                if (value !== undefined) {
                    this.properties.setOrigins(value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NotificationsPopupsWidgetComponent.prototype, "severityLevelsValue", {
            /**
             * Comma-separated list of notifications severity levels to process (empty for all).
             */
            set: function (value) {
                if (value !== undefined) {
                    this.properties.setSeverityLevels(value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NotificationsPopupsWidgetComponent.prototype, "pollingIntervalValue", {
            /**
             * Polling interval (in seconds).
             */
            set: function (value) {
                if (value !== undefined) {
                    this.properties.setPollingInterval(value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NotificationsPopupsWidgetComponent.prototype, "allowedRoutesValue", {
            /**
             * String of allowed routes for navigation (conversation-view, arrangement-view, transaction-view, party-view, etc.).
             */
            set: function (value) {
                if (value !== undefined) {
                    this.properties.setAllowedRoutes(value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NotificationsPopupsWidgetComponent.prototype, "autofocusValue", {
            /**
             * Auto-focus.
             */
            set: function (value) {
                if (value !== undefined) {
                    this.properties.setAutofocus(value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NotificationsPopupsWidgetComponent.prototype, "displayShowMoreButtonInPopupValue", {
            /**
             * Display See More button.
             */
            set: function (value) {
                if (value !== undefined) {
                    this.properties.setDisplayShowMoreButtonInPopup(value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NotificationsPopupsWidgetComponent.prototype, "popupMessageLineAmountValue", {
            /**
             * Number of displayed lines in notification message emitter.
             */
            set: function (value) {
                if (value !== undefined) {
                    this.properties.setPopupMessageLineAmount(value);
                }
            },
            enumerable: false,
            configurable: true
        });
        NotificationsPopupsWidgetComponent.prototype.ngOnInit = function () {
            this.routerService.popupsRouting$.pipe(operators.takeUntil(this.destroy$)).subscribe(this.notificationRouting);
        };
        NotificationsPopupsWidgetComponent.prototype.ngOnDestroy = function () {
            this.destroy$.next();
            this.destroy$.complete();
        };
        return NotificationsPopupsWidgetComponent;
    }());
    /** @nocollapse */ NotificationsPopupsWidgetComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsWidgetComponent, deps: [{ token: NotificationsPopupsRouterService }, { token: WidgetPropertiesService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ NotificationsPopupsWidgetComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: NotificationsPopupsWidgetComponent, selector: "bb-notifications-popups-widget", inputs: { originsValue: ["origins", "originsValue"], severityLevelsValue: ["severityLevels", "severityLevelsValue"], pollingIntervalValue: ["pollingInterval", "pollingIntervalValue"], allowedRoutesValue: ["allowedRoutes", "allowedRoutesValue"], autofocusValue: ["autofocus", "autofocusValue"], displayShowMoreButtonInPopupValue: ["displayShowMoreButtonInPopup", "displayShowMoreButtonInPopupValue"], popupMessageLineAmountValue: ["popupMessageLineAmount", "popupMessageLineAmountValue"] }, outputs: { notificationRouting: "notificationRouting" }, providers: [NotificationsPopupsDataService, NotificationsPopupsRouterService, WidgetPropertiesService], ngImport: i0__namespace, template: "\n    <bb-notifications-sticky-list></bb-notifications-sticky-list>\n    <bb-notifications-popups-list></bb-notifications-popups-list>\n  ", isInline: true, components: [{ type: NotificationsStickyListComponent, selector: "bb-notifications-sticky-list" }, { type: NotificationsPopupsListComponent, selector: "bb-notifications-popups-list" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsWidgetComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-notifications-popups-widget',
                        template: "\n    <bb-notifications-sticky-list></bb-notifications-sticky-list>\n    <bb-notifications-popups-list></bb-notifications-popups-list>\n  ",
                        providers: [NotificationsPopupsDataService, NotificationsPopupsRouterService, WidgetPropertiesService],
                    }]
            }], ctorParameters: function () { return [{ type: NotificationsPopupsRouterService }, { type: WidgetPropertiesService }]; }, propDecorators: { originsValue: [{
                    type: i0.Input,
                    args: ['origins']
                }], severityLevelsValue: [{
                    type: i0.Input,
                    args: ['severityLevels']
                }], pollingIntervalValue: [{
                    type: i0.Input,
                    args: ['pollingInterval']
                }], allowedRoutesValue: [{
                    type: i0.Input,
                    args: ['allowedRoutes']
                }], autofocusValue: [{
                    type: i0.Input,
                    args: ['autofocus']
                }], displayShowMoreButtonInPopupValue: [{
                    type: i0.Input,
                    args: ['displayShowMoreButtonInPopup']
                }], popupMessageLineAmountValue: [{
                    type: i0.Input,
                    args: ['popupMessageLineAmount']
                }], notificationRouting: [{
                    type: i0.Output
                }] } });

    var components = [
        NotificationsPopupsWidgetComponent,
        NotificationsStickyListComponent,
        NotificationsStickyListItemComponent,
        NotificationsPopupsListComponent,
        NotificationsPopupsItemComponent,
    ];
    var directives = [
        NotificationsStickyListCustomizableDirective,
        NotificationsStickyListItemCustomizableDirective,
        NotificationsPopupsItemHeaderCustomizableDirective,
        NotificationsPopupsItemMessageCustomizableDirective,
        NotificationsPopupsListCustomizableDirective,
    ];
    var uiModules = [i1$2.AlertModule, i6.EllipsisModule];
    var NotificationsPopupsWidgetModule = /** @class */ (function () {
        function NotificationsPopupsWidgetModule() {
        }
        return NotificationsPopupsWidgetModule;
    }());
    /** @nocollapse */ NotificationsPopupsWidgetModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsWidgetModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    /** @nocollapse */ NotificationsPopupsWidgetModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsWidgetModule, declarations: [NotificationsPopupsWidgetComponent,
            NotificationsStickyListComponent,
            NotificationsStickyListItemComponent,
            NotificationsPopupsListComponent,
            NotificationsPopupsItemComponent, NotificationsStickyListCustomizableDirective,
            NotificationsStickyListItemCustomizableDirective,
            NotificationsPopupsItemHeaderCustomizableDirective,
            NotificationsPopupsItemMessageCustomizableDirective,
            NotificationsPopupsListCustomizableDirective], imports: [i3.CommonModule,
            i5.NotificationsCommonModule, i1__namespace.BackbaseCoreModule, i1$2.AlertModule, i6.EllipsisModule], exports: [i5.NotificationsCommonModule, NotificationsPopupsWidgetComponent,
            NotificationsStickyListComponent,
            NotificationsStickyListItemComponent,
            NotificationsPopupsListComponent,
            NotificationsPopupsItemComponent, NotificationsStickyListCustomizableDirective,
            NotificationsStickyListItemCustomizableDirective,
            NotificationsPopupsItemHeaderCustomizableDirective,
            NotificationsPopupsItemMessageCustomizableDirective,
            NotificationsPopupsListCustomizableDirective, i1$2.AlertModule, i6.EllipsisModule] });
    /** @nocollapse */ NotificationsPopupsWidgetModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsWidgetModule, imports: [__spreadArray([
                i3.CommonModule,
                i5.NotificationsCommonModule,
                i1.BackbaseCoreModule.withConfig({
                    classMap: { NotificationsPopupsWidgetComponent: NotificationsPopupsWidgetComponent },
                })
            ], __read(uiModules)), i5.NotificationsCommonModule, i1$2.AlertModule, i6.EllipsisModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationsPopupsWidgetModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: __spreadArray(__spreadArray([], __read(components)), __read(directives)),
                        imports: __spreadArray([
                            i3.CommonModule,
                            i5.NotificationsCommonModule,
                            i1.BackbaseCoreModule.withConfig({
                                classMap: { NotificationsPopupsWidgetComponent: NotificationsPopupsWidgetComponent },
                            })
                        ], __read(uiModules)),
                        exports: __spreadArray(__spreadArray(__spreadArray([i5.NotificationsCommonModule], __read(components)), __read(directives)), __read(uiModules)),
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.NotificationsPopupsWidgetComponent = NotificationsPopupsWidgetComponent;
    exports.NotificationsPopupsWidgetModule = NotificationsPopupsWidgetModule;
    exports.WidgetPropertiesService = WidgetPropertiesService;
    exports["ӨNotificationsPopupsItemComponent"] = NotificationsPopupsItemComponent;
    exports["ӨNotificationsPopupsItemHeaderCustomizableDirective"] = NotificationsPopupsItemHeaderCustomizableDirective;
    exports["ӨNotificationsPopupsItemMessageCustomizableDirective"] = NotificationsPopupsItemMessageCustomizableDirective;
    exports["ӨNotificationsPopupsListComponent"] = NotificationsPopupsListComponent;
    exports["ӨNotificationsPopupsListCustomizableDirective"] = NotificationsPopupsListCustomizableDirective;
    exports["ӨNotificationsStickyListComponent"] = NotificationsStickyListComponent;
    exports["ӨNotificationsStickyListCustomizableDirective"] = NotificationsStickyListCustomizableDirective;
    exports["ӨNotificationsStickyListItemComponent"] = NotificationsStickyListItemComponent;
    exports["ӨNotificationsStickyListItemCustomizableDirective"] = NotificationsStickyListItemCustomizableDirective;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-notifications-popups-widget-ang.umd.js.map
