{"version":3,"file":"backbase-messages-create-message-modal-widget-ang.js","sources":["../../../../libs/messages-create-message-modal-widget-ang/src/create-message-form/create-message-form.service.ts","../../../../libs/messages-create-message-modal-widget-ang/src/create-message-form/create-message-form.component.ts","../../../../libs/messages-create-message-modal-widget-ang/src/create-message-form/create-message-form.component.html","../../../../libs/messages-create-message-modal-widget-ang/src/messages-create-message-modal-widget-ang.component.ts","../../../../libs/messages-create-message-modal-widget-ang/src/messages-create-message-modal-widget-ang.component.html","../../../../libs/messages-create-message-modal-widget-ang/src/create-message-form/create-message-form.module.ts","../../../../libs/messages-create-message-modal-widget-ang/src/messages-create-message-modal-widget-ang.module.ts","../../../../libs/messages-create-message-modal-widget-ang/backbase-messages-create-message-modal-widget-ang.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { BaseCreateMessageFormService } from '@backbase/messages-common';\nimport {\n  DeleteDraftsResponseBody,\n  DraftPostResponseBody,\n  MessageDraftGetResponseBody,\n  MessageDraftPutRequestBody,\n  MessageDraftsPostRequestBody,\n  PresentationMessagePostRequestBody,\n  PresentationMessagePostResponseBody,\n  TopicsGetResponseBody,\n  MessagecenterHttpService,\n} from '@backbase/messages-v5-http-ang';\n\n@Injectable()\nexport class CreateMessageFormService implements BaseCreateMessageFormService<PresentationMessagePostRequestBody> {\n  constructor(private readonly messagesService: MessagecenterHttpService) {}\n\n  /**\n   * Get topics\n   *\n   * @returns Topics stream\n   */\n  getTopics(): Observable<TopicsGetResponseBody[] | null> {\n    return this.messagesService.getTopics().pipe(catchError(() => of([])));\n  }\n\n  /**\n   * Create message\n   *\n   * @param params Create message request body\n   * @returns Post message stream\n   */\n  createMessage(params: PresentationMessagePostRequestBody): Observable<PresentationMessagePostResponseBody | null> {\n    return this.messagesService.postMessages({ presentationMessagePostRequestBody: params });\n  }\n\n  /**\n   * Save message draft\n   *\n   * @param body Save draft request body\n   * @returns Safe draft stream\n   */\n  saveDraft(body: MessageDraftsPostRequestBody): Observable<DraftPostResponseBody | null> {\n    return this.messagesService.postMessageDrafts({ messageDraftsPostRequestBody: body });\n  }\n\n  /**\n   * Get message draft\n   *\n   * @param draftId Draft id\n   * @returns Draft stream\n   */\n  getDraft(draftId: string): Observable<MessageDraftGetResponseBody | null> {\n    return this.messagesService.getMessageDraft({ draftId });\n  }\n\n  /**\n   * Delete draft\n   *\n   * @param draftId Draft id\n   * @returns Delete draft stream\n   */\n  deleteDraft(draftId: string): Observable<DeleteDraftsResponseBody | null> {\n    return this.messagesService.deleteMessageDrafts({ ids: [draftId] });\n  }\n\n  /**\n   * Update draft\n   *\n   * @param draftId Draft id\n   * @param body Update draft request body\n   * @returns Update draft stream\n   */\n  updateDraft(draftId: string, body: MessageDraftPutRequestBody): Observable<any> {\n    return this.messagesService.putMessageDraft({ draftId, messageDraftPutRequestBody: body });\n  }\n}\n","import { ChangeDetectorRef, Component, Directive } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport {\n  BaseCreateMessageFormComponent,\n  BaseCreateMessageFormService,\n  BaseUploadAttachmentsService,\n  MessagesClientUploadAttachmentsService,\n  MessagesEncodingService,\n  MessagesManipulationConfirmModalService,\n  MessagesUploadAttachmentsService,\n  SharedMethodsService,\n  topicPlaceholderConfig,\n} from '@backbase/messages-common';\nimport { PresentationMessagePostRequestBody, TopicsGetResponseBody } from '@backbase/messages-v5-http-ang';\nimport { CreateMessageFormService } from './create-message-form.service';\n\n@Component({\n  selector: 'bb-create-message-form-ui',\n  templateUrl: './create-message-form.component.html',\n  providers: [\n    {\n      provide: BaseCreateMessageFormService,\n      useClass: CreateMessageFormService,\n    },\n    {\n      provide: BaseUploadAttachmentsService,\n      useClass: MessagesClientUploadAttachmentsService,\n    },\n  ],\n})\nexport class CreateMessageFormComponent extends BaseCreateMessageFormComponent<PresentationMessagePostRequestBody> {\n  /**\n   * Configs for topic selector placeholder\n   */\n  public readonly topicPlaceholderConfig = topicPlaceholderConfig;\n\n  constructor(\n    readonly messagesService: BaseCreateMessageFormService<PresentationMessagePostRequestBody>,\n    readonly encodingService: MessagesEncodingService,\n    readonly fb: FormBuilder,\n    readonly cd: ChangeDetectorRef,\n    readonly sharedService: SharedMethodsService,\n    readonly confirmModalService: MessagesManipulationConfirmModalService,\n    readonly uploadService: MessagesUploadAttachmentsService,\n  ) {\n    super(sharedService, confirmModalService, cd, messagesService, fb, encodingService, uploadService);\n  }\n\n  /**\n   * The method to submit the message form and create a new message.\n   */\n  onConfirm() {\n    this.newMessageFormGroup.markAllAsTouched();\n    this.newMessageFormGroup.markAsDirty();\n\n    const { value, valid } = this.newMessageFormGroup;\n    if (valid) {\n      const finalValue: PresentationMessagePostRequestBody = {\n        subject: '',\n        body: '',\n        topic: '',\n        ...this.getSimpleFormVal(value),\n      };\n      this.createMessage(finalValue);\n    }\n  }\n}\n\n@Directive({\n  selector: '[bbCreateMessageFormCustomizable]',\n})\nexport class CreateMessageFormCustomizableDirective extends BbTemplate<\n  CreateMessageFormComponent,\n  { topics: TopicsGetResponseBody[] }\n> {}\n","<ng-container\n  bbCreateMessageFormCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    topics: topics | async\n  }\"\n></ng-container>\n\n<ng-template bbCreateMessageFormCustomizable let-host let-topics=\"context.topics\">\n  <form [formGroup]=\"host.newMessageFormGroup\" data-role=\"form\" (submit)=\"host.onConfirm()\">\n    <div class=\"form-group\">\n      <div class=\"form-row\">\n        <div class=\"col-12 col-md-8\">\n          <bb-dropdown-single-select-ui\n            *ngIf=\"\n              topics?.length\n                ? topicPlaceholderConfig.selectTopicPlaceholder\n                : topicPlaceholderConfig.noTopicsPlaceholder as topicPlaceholder\n            \"\n            label=\"Topic\"\n            i18n-label=\"Topic label text@@messages.createMessage.composeMessageForm.topicLabel\"\n            aria-label=\"Topic\"\n            data-role=\"topics\"\n            i18n-aria-label=\"Topic aria-label text@@messages.createMessage.composeMessageForm.topicAriaLabel\"\n            [aria-invalid]=\"host.isInvalidControl('topic')\"\n            aria-describedby=\"messages-topic-error-message\"\n            [options]=\"topics\"\n            displayAttributePath=\"name\"\n            [attr.placeholder]=\"topicPlaceholder\"\n            [placeholder]=\"topicPlaceholder\"\n            formControlName=\"topic\"\n            (blur)=\"host.resetFormOnElementBlur()\"\n          ></bb-dropdown-single-select-ui>\n          <bb-input-validation-message-ui\n            id=\"messages-topic-error-message\"\n            [showErrors]=\"host.isInvalidControl('topic')\"\n          >\n            <span\n              data-role=\"messages-topic-required-error-message\"\n              *ngIf=\"host.hasError('topic', 'required')\"\n              i18n=\"\n                Error message if subject field is\n                required@@messages.createMessage.composeMessageForm.errors.subjectRequired\"\n            >\n              Field is required\n            </span>\n          </bb-input-validation-message-ui>\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <bb-input-text-ui\n        data-role=\"subject\"\n        label=\"Subject\"\n        [aria-invalid]=\"host.isInvalidControl('subject')\"\n        i18n-label=\"Subject label text@@messages.createMessage.composeMessageForm.subjectLabel\"\n        aria-label=\"Subject\"\n        i18n-aria-label=\"Subject aria-label text@@messages.createMessage.composeMessageForm.subjectAriaLabel\"\n        aria-describedby=\"messages-subject-error-message\"\n        placeholder=\"Write subject\"\n        i18n-placeholder=\"Subject placeholder text@@messages.createMessage.composeMessageForm.subjectPlaceholder\"\n        formControlName=\"subject\"\n        [maxlength]=\"host.maxSubjectLength\"\n      ></bb-input-text-ui>\n      <bb-input-validation-message-ui\n        id=\"messages-subject-error-message\"\n        [showErrors]=\"host.isInvalidControl('subject')\"\n      >\n        <span\n          *ngIf=\"host.hasError('subject', 'required')\"\n          i18n=\"\n            Error message if subject field is empty@@messages.createMessage.composeMessageForm.errors.subjectRequired\"\n          data-role=\"messages-subject-required-error-message\"\n        >\n          Field is required\n        </span>\n        <span\n          *ngIf=\"host.hasError('subject', 'maxlength')\"\n          i18n=\"\n            Error message if subject value is more then maxlength\n            value@@messages.createMessage.composeMessageForm.errors.subjectMaxlength\"\n          data-role=\"messages-subject-maxlength-exceeded-error-message\"\n        >\n          Your input of {{ newMessageFormGroup?.get('subject')?.value?.length }} characters exceeds the limit of\n          {{ host.maxSubjectLength }}. Please rephrase.\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n    <div class=\"form-group\">\n      <bb-rich-text-editor-ui\n        label=\"Message\"\n        i18n-label=\"Message label text@@messages.createMessage.composeMessageForm.messageLabel\"\n        aria-label=\"Message\"\n        i18n-aria-label=\"Message aria-label text@@messages.createMessage.composeMessageForm.messageAriaLabel\"\n        [aria-invalid]=\"host.isInvalidControl('body')\"\n        aria-describedby=\"messages-body-error-message\"\n        name=\"message\"\n        [maxLength]=\"host.maxMessageLength\"\n        formControlName=\"body\"\n        placeholder=\"Write some text\"\n        i18n-placeholder=\"Message placeholder text@@messages.createMessage.composeMessageForm.messagePlaceholder\"\n        counter=\"true\"\n        [required]=\"true\"\n      >\n        <ng-template #actions bbRichTextEditorActions>\n          <bb-rich-text-editor-bold-action></bb-rich-text-editor-bold-action>\n          <bb-rich-text-editor-italic-action></bb-rich-text-editor-italic-action>\n          <bb-rich-text-editor-underline-action></bb-rich-text-editor-underline-action>\n          <bb-rich-text-editor-strikethrough-action> </bb-rich-text-editor-strikethrough-action>\n          <bb-rich-text-editor-olist-action></bb-rich-text-editor-olist-action>\n          <bb-rich-text-editor-ulist-action> </bb-rich-text-editor-ulist-action>\n          <bb-rich-text-editor-link-action></bb-rich-text-editor-link-action>\n        </ng-template>\n      </bb-rich-text-editor-ui>\n      <bb-input-validation-message-ui [showErrors]=\"host.isInvalidControl('body')\" id=\"messages-body-error-message\">\n        <span\n          *ngIf=\"host.hasError('body', 'required')\"\n          i18n=\"Error message if field is required@@messages.createMessage.composeMessageForm.errors.messageRequired\"\n          data-role=\"messages-body-required-error-message\"\n        >\n          Field is required\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n    <div class=\"form-group\">\n      <bb-messages-upload-attachments\n        [maxSize]=\"host.maxAttachmentSize\"\n        [initAttachments]=\"attachments\"\n        formControlName=\"attachments\"\n      ></bb-messages-upload-attachments>\n    </div>\n    <div class=\"bb-button-bar\">\n      <bb-load-button-ui\n        type=\"submit\"\n        data-role=\"submit\"\n        aria-label=\"Send\"\n        i18n-aria-label=\"Send button aria-label text@@messages.createMessage.composeMessageForm.submitButtonAriaLabel\"\n        i18n=\"Submit button text@@messages.createMessage.composeMessageForm.submitButton\"\n        [isLoading]=\"host.formLoading\"\n      >\n        Send\n      </bb-load-button-ui>\n      <button\n        bbButton\n        bbPreventBubbleDown\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        data-role=\"discard\"\n        aria-label=\"Discard\"\n        i18n-aria-label=\"\n          Discard button aria-label text@@messages.createMessage.composeMessageForm.discardButtonAriaLabel\"\n        i18n=\"Discard button text@@messages.createMessage.composeMessageForm.discardButton\"\n        (click)=\"\n          host.confirmModalService.toggleModal(\n            true,\n            host.manipulationTypes.discard,\n            host.newMessageFormGroup,\n            host.draftFormValue\n          )\n        \"\n      >\n        Discard\n      </button>\n      <button\n        bbButton\n        class=\"bb-button-bar__button--across\"\n        color=\"link\"\n        data-role=\"save-and-close\"\n        aria-label=\"Save and close\"\n        i18n-aria-label=\"\n          Save and close button aria-label@@messages.createMessage.composeMessageForm.saveAsDraftButtonTextAriaLabel\"\n        i18n=\"Save & Close button text@@messages.createMessage.composeMessageForm.saveAsDraftButtonText\"\n        (click)=\"host.onSave(host.getSimpleFormVal(host.newMessageFormGroup.value))\"\n      >\n        Save & Close\n      </button>\n    </div>\n  </form>\n\n  <bb-messages-manipulation-confirm-modal\n    [isOpen]=\"host.confirmationModal.opened\"\n    [type]=\"host.confirmationModal.type\"\n    (cancel)=\"host.confirmModalService.toggleModal(false)\"\n    (confirm)=\"host.confirmConfirmationModal()\"\n  ></bb-messages-manipulation-confirm-modal>\n</ng-template>\n\n<ng-template #messageComposeSuccess>\n  <span\n    i18n=\"\n      Your message has been successfully sent.|Text of successful conversation\n      compose@@messages.createMessage.composeMessageForm.messageSuccessCompose\"\n    >Your message has been successfully sent.</span\n  >\n</ng-template>\n\n<ng-template #messageSaveDraftSuccess>\n  <span\n    i18n=\"\n      Your draft has been successfully saved.|Text of successful conversation\n      saving@@messages.createMessage.composeMessageForm.messageSuccessSaveDraft\"\n    >Your draft has been successfully saved.</span\n  >\n</ng-template>\n\n<ng-template #messageUpdateDraftSuccess>\n  <span\n    i18n=\"\n      Your draft has been successfully updated.|Text of successful conversation\n      saving@@messages.createMessage.composeMessageForm.messageSuccessUpdateDraft\"\n    >Your draft has been successfully updated.</span\n  >\n</ng-template>\n\n<ng-template #messageComposeError>\n  <span\n    i18n=\"\n      There is an error sending message.|Text of failed conversation\n      compose@@messages.createMessage.composeMessageForm.messageErrorCompose\"\n    >There is an error sending message.</span\n  >\n</ng-template>\n\n<ng-template #messageSaveDraftError>\n  <span\n    i18n=\"\n      There is an error saving draft.|Text of failed conversation\n      saving@@messages.createMessage.composeMessageForm.messageErrorSaveDraft\"\n    >There is an error saving draft.</span\n  >\n</ng-template>\n\n<ng-template #messageUpdateDraftError>\n  <span\n    i18n=\"\n      There is an error updating draft.|Text of failed conversation\n      saving@@messages.createMessage.composeMessageForm.messageErrorUpdateDraft\"\n    >There is an error updating draft.</span\n  >\n</ng-template>\n","import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport {\n  BaseCreateMessageModalComponent,\n  BaseCreateMessageModalPropertiesService,\n  SharedMethodsService,\n} from '@backbase/messages-common';\n\nexport interface MessagesCreateMessageModalContext {\n  maxAttachmentSize: string;\n  maxSubjectLength: number;\n  maxMessageLength: number;\n  modalHeader: string;\n  hideComposeButton: boolean;\n}\n\n@Component({\n  selector: 'bb-messages-create-message-modal-widget-ang',\n  providers: [BaseCreateMessageModalPropertiesService],\n  templateUrl: './messages-create-message-modal-widget-ang.component.html',\n})\nexport class MessagesCreateMessageModalWidgetComponent extends BaseCreateMessageModalComponent {\n  constructor(readonly properties: BaseCreateMessageModalPropertiesService, readonly shared: SharedMethodsService) {\n    super(properties, shared);\n  }\n}\n\n@Directive({\n  selector: '[bbMessagesCreateMessageModalCustomizable]',\n})\nexport class MessagesCreateMessageModalCustomizableDirective extends BbTemplate<\n  MessagesCreateMessageModalWidgetComponent,\n  MessagesCreateMessageModalContext\n> {}\n","<ng-container\n  bbMessagesCreateMessageModalCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    maxAttachmentSize: maxAttachmentSize | async,\n    maxSubjectLength: maxSubjectLength | async,\n    maxMessageLength: maxMessageLength | async,\n    modalHeader: modalHeader | async,\n    hideComposeButton: hideComposeButton | async\n  }\"\n></ng-container>\n\n<ng-template\n  bbMessagesCreateMessageModalCustomizable\n  let-host\n  let-maxAttachmentSize=\"context.maxAttachmentSize\"\n  let-maxSubjectLength=\"context.maxSubjectLength\"\n  let-maxMessageLength=\"context.maxMessageLength\"\n  let-modalHeader=\"context.modalHeader\"\n  let-hideComposeButton=\"context.hideComposeButton\"\n>\n  <div class=\"bb-button-bar\" *ngIf=\"!hideComposeButton\">\n    <button\n      bbButton\n      class=\"bb-button-bar__button\"\n      data-role=\"compose-modal\"\n      aria-label=\"Compose\"\n      i18n-aria-label=\"Compose aria-label@@messages.createMessage.composeAriaLabel\"\n      i18n=\"Button title for compose message@@messages.createMessage.compose\"\n      (click)=\"host.openModal()\"\n    >\n      Compose\n    </button>\n  </div>\n\n  <bb-modal-ui [isOpen]=\"host.modalOpened\" (cancel)=\"host.closeModal()\" [modalOptions]=\"host.modalOptions\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui headingType=\"h3\" [heading]=\"modalHeader\" [attr.aria-label]=\"modalHeader\"></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <bb-create-message-form-ui\n          [draftId]=\"host.draftId\"\n          [reset]=\"host.resetStream\"\n          [isModalOpen]=\"host.modalOpened\"\n          [maxAttachmentSize]=\"maxAttachmentSize\"\n          [maxSubjectLength]=\"maxSubjectLength\"\n          [maxMessageLength]=\"maxMessageLength\"\n          (cancel)=\"host.closeModal()\"\n          (confirm)=\"host.closeModal()\"\n        ></bb-create-message-form-ui>\n      </ng-template>\n    </bb-modal-body-ui>\n  </bb-modal-ui>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  MessagesEncodingService,\n  MessagesManipulationConfirmModalModule,\n  MessagesUploadAttachmentsModule,\n  PreventBubbleDownModule,\n} from '@backbase/messages-common';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { RichTextEditorModule } from '@backbase/ui-ang/rich-text-editor';\n\nimport { CreateMessageFormComponent, CreateMessageFormCustomizableDirective } from './create-message-form.component';\n\nconst components = [CreateMessageFormComponent];\nconst directives = [CreateMessageFormCustomizableDirective];\nconst uiModules = [\n  ButtonModule,\n  DropdownSingleSelectModule,\n  InputValidationMessageModule,\n  InputTextModule,\n  LoadButtonModule,\n  RichTextEditorModule,\n];\n\nconst innerModules = [MessagesManipulationConfirmModalModule, MessagesUploadAttachmentsModule];\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, PreventBubbleDownModule, ...uiModules, ...innerModules],\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives, ...uiModules, ...innerModules],\n  providers: [MessagesEncodingService],\n})\nexport class CreateMessageFormModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport {\n  BaseCreateMessageFormModule,\n  BaseCreateMessageModalModule,\n  SharedMethodsModule,\n} from '@backbase/messages-common';\n\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { ModalModule } from '@backbase/ui-ang/modal';\n\nimport {\n  MessagesCreateMessageModalCustomizableDirective,\n  MessagesCreateMessageModalWidgetComponent,\n} from './messages-create-message-modal-widget-ang.component';\nimport { CreateMessageFormModule } from './create-message-form/create-message-form.module';\n\nconst components = [MessagesCreateMessageModalWidgetComponent];\nconst directives = [MessagesCreateMessageModalCustomizableDirective];\nconst uiModules = [ButtonModule, ModalModule, HeaderModule];\nconst innerModules = [CreateMessageFormModule, BaseCreateMessageFormModule];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { MessagesCreateMessageModalWidgetComponent },\n    }),\n    CreateMessageFormModule,\n    SharedMethodsModule,\n    BaseCreateMessageModalModule,\n    ...uiModules,\n  ],\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives, ...uiModules, ...innerModules],\n})\nexport class MessagesCreateMessageModalWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["components","directives","uiModules","innerModules"],"mappings":"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"}