(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@backbase/foundation-ang/core'), require('@backbase/messages-common'), require('@backbase/ui-ang/header'), require('@backbase/ui-ang/button'), require('@backbase/ui-ang/modal'), require('rxjs/operators'), require('rxjs'), require('@backbase/messages-v5-http-ang'), require('@angular/forms'), require('@backbase/ui-ang/dropdown-single-select'), require('@backbase/ui-ang/input-validation-message'), require('@backbase/ui-ang/input-text'), require('@backbase/ui-ang/rich-text-editor'), require('@backbase/ui-ang/load-button')) :
    typeof define === 'function' && define.amd ? define('@backbase/messages-create-message-modal-widget-ang', ['exports', '@angular/core', '@angular/common', '@backbase/foundation-ang/core', '@backbase/messages-common', '@backbase/ui-ang/header', '@backbase/ui-ang/button', '@backbase/ui-ang/modal', 'rxjs/operators', 'rxjs', '@backbase/messages-v5-http-ang', '@angular/forms', '@backbase/ui-ang/dropdown-single-select', '@backbase/ui-ang/input-validation-message', '@backbase/ui-ang/input-text', '@backbase/ui-ang/rich-text-editor', '@backbase/ui-ang/load-button'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["messages-create-message-modal-widget-ang"] = {}), global.ng.core, global.ng.common, global.i1$2, global.i1$1, global.i3$1, global.i9, global.i2$1, global.rxjs.operators, global.rxjs, global.i1, global.ng.forms, global.i3, global.i4, global.i5, global.i6, global.i7));
})(this, (function (exports, i0, i8, i1$2, i1$1, i3$1, i9, i2$1, operators, rxjs, i1, i2, i3, i4, i5, i6, i7) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i8__namespace = /*#__PURE__*/_interopNamespace(i8);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$2);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i3__namespace$1 = /*#__PURE__*/_interopNamespace(i3$1);
    var i9__namespace = /*#__PURE__*/_interopNamespace(i9);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var CreateMessageFormService = /** @class */ (function () {
        function CreateMessageFormService(messagesService) {
            this.messagesService = messagesService;
        }
        /**
         * Get topics
         *
         * @returns Topics stream
         */
        CreateMessageFormService.prototype.getTopics = function () {
            return this.messagesService.getTopics().pipe(operators.catchError(function () { return rxjs.of([]); }));
        };
        /**
         * Create message
         *
         * @param params Create message request body
         * @returns Post message stream
         */
        CreateMessageFormService.prototype.createMessage = function (params) {
            return this.messagesService.postMessages({ presentationMessagePostRequestBody: params });
        };
        /**
         * Save message draft
         *
         * @param body Save draft request body
         * @returns Safe draft stream
         */
        CreateMessageFormService.prototype.saveDraft = function (body) {
            return this.messagesService.postMessageDrafts({ messageDraftsPostRequestBody: body });
        };
        /**
         * Get message draft
         *
         * @param draftId Draft id
         * @returns Draft stream
         */
        CreateMessageFormService.prototype.getDraft = function (draftId) {
            return this.messagesService.getMessageDraft({ draftId: draftId });
        };
        /**
         * Delete draft
         *
         * @param draftId Draft id
         * @returns Delete draft stream
         */
        CreateMessageFormService.prototype.deleteDraft = function (draftId) {
            return this.messagesService.deleteMessageDrafts({ ids: [draftId] });
        };
        /**
         * Update draft
         *
         * @param draftId Draft id
         * @param body Update draft request body
         * @returns Update draft stream
         */
        CreateMessageFormService.prototype.updateDraft = function (draftId, body) {
            return this.messagesService.putMessageDraft({ draftId: draftId, messageDraftPutRequestBody: body });
        };
        return CreateMessageFormService;
    }());
    CreateMessageFormService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: CreateMessageFormService, deps: [{ token: i1__namespace.MessagecenterHttpService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    CreateMessageFormService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: CreateMessageFormService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: CreateMessageFormService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace.MessagecenterHttpService }]; } });

    var CreateMessageFormComponent = /** @class */ (function (_super) {
        __extends(CreateMessageFormComponent, _super);
        function CreateMessageFormComponent(messagesService, encodingService, fb, cd, sharedService, confirmModalService, uploadService) {
            var _this = _super.call(this, sharedService, confirmModalService, cd, messagesService, fb, encodingService, uploadService) || this;
            _this.messagesService = messagesService;
            _this.encodingService = encodingService;
            _this.fb = fb;
            _this.cd = cd;
            _this.sharedService = sharedService;
            _this.confirmModalService = confirmModalService;
            _this.uploadService = uploadService;
            /**
             * Configs for topic selector placeholder
             */
            _this.topicPlaceholderConfig = i1$1.topicPlaceholderConfig;
            return _this;
        }
        /**
         * The method to submit the message form and create a new message.
         */
        CreateMessageFormComponent.prototype.onConfirm = function () {
            this.newMessageFormGroup.markAllAsTouched();
            this.newMessageFormGroup.markAsDirty();
            var _a = this.newMessageFormGroup, value = _a.value, valid = _a.valid;
            if (valid) {
                var finalValue = Object.assign({ subject: '', body: '', topic: '' }, this.getSimpleFormVal(value));
                this.createMessage(finalValue);
            }
        };
        return CreateMessageFormComponent;
    }(i1$1.BaseCreateMessageFormComponent));
    CreateMessageFormComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: CreateMessageFormComponent, deps: [{ token: i1__namespace$1.BaseCreateMessageFormService }, { token: i1__namespace$1.MessagesEncodingService }, { token: i2__namespace.FormBuilder }, { token: i0__namespace.ChangeDetectorRef }, { token: i1__namespace$1.SharedMethodsService }, { token: i1__namespace$1.MessagesManipulationConfirmModalService }, { token: i1__namespace$1.MessagesUploadAttachmentsService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    CreateMessageFormComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.14", type: CreateMessageFormComponent, selector: "bb-create-message-form-ui", providers: [
            {
                provide: i1$1.BaseCreateMessageFormService,
                useClass: CreateMessageFormService,
            },
            {
                provide: i1$1.BaseUploadAttachmentsService,
                useClass: i1$1.MessagesClientUploadAttachmentsService,
            },
        ], usesInheritance: true, ngImport: i0__namespace, template: "<ng-container\n  bbCreateMessageFormCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    topics: topics | async\n  }\"\n></ng-container>\n\n<ng-template bbCreateMessageFormCustomizable let-host let-topics=\"context.topics\">\n  <form [formGroup]=\"host.newMessageFormGroup\" data-role=\"form\" (submit)=\"host.onConfirm()\">\n    <div class=\"form-group\">\n      <div class=\"form-row\">\n        <div class=\"col-12 col-md-8\">\n          <bb-dropdown-single-select-ui\n            *ngIf=\"\n              topics?.length\n                ? topicPlaceholderConfig.selectTopicPlaceholder\n                : topicPlaceholderConfig.noTopicsPlaceholder as topicPlaceholder\n            \"\n            label=\"Topic\"\n            i18n-label=\"Topic label text@@messages.createMessage.composeMessageForm.topicLabel\"\n            aria-label=\"Topic\"\n            data-role=\"topics\"\n            i18n-aria-label=\"Topic aria-label text@@messages.createMessage.composeMessageForm.topicAriaLabel\"\n            [aria-invalid]=\"host.isInvalidControl('topic')\"\n            aria-describedby=\"messages-topic-error-message\"\n            [options]=\"topics\"\n            displayAttributePath=\"name\"\n            [attr.placeholder]=\"topicPlaceholder\"\n            [placeholder]=\"topicPlaceholder\"\n            formControlName=\"topic\"\n            (blur)=\"host.resetFormOnElementBlur()\"\n          ></bb-dropdown-single-select-ui>\n          <bb-input-validation-message-ui\n            id=\"messages-topic-error-message\"\n            [showErrors]=\"host.isInvalidControl('topic')\"\n          >\n            <span\n              data-role=\"messages-topic-required-error-message\"\n              *ngIf=\"host.hasError('topic', 'required')\"\n              i18n=\"\n                Error message if subject field is\n                required@@messages.createMessage.composeMessageForm.errors.subjectRequired\"\n            >\n              Field is required\n            </span>\n          </bb-input-validation-message-ui>\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <bb-input-text-ui\n        data-role=\"subject\"\n        label=\"Subject\"\n        [aria-invalid]=\"host.isInvalidControl('subject')\"\n        i18n-label=\"Subject label text@@messages.createMessage.composeMessageForm.subjectLabel\"\n        aria-label=\"Subject\"\n        i18n-aria-label=\"Subject aria-label text@@messages.createMessage.composeMessageForm.subjectAriaLabel\"\n        aria-describedby=\"messages-subject-error-message\"\n        placeholder=\"Write subject\"\n        i18n-placeholder=\"Subject placeholder text@@messages.createMessage.composeMessageForm.subjectPlaceholder\"\n        formControlName=\"subject\"\n        [maxlength]=\"host.maxSubjectLength\"\n      ></bb-input-text-ui>\n      <bb-input-validation-message-ui\n        id=\"messages-subject-error-message\"\n        [showErrors]=\"host.isInvalidControl('subject')\"\n      >\n        <span\n          *ngIf=\"host.hasError('subject', 'required')\"\n          i18n=\"\n            Error message if subject field is empty@@messages.createMessage.composeMessageForm.errors.subjectRequired\"\n          data-role=\"messages-subject-required-error-message\"\n        >\n          Field is required\n        </span>\n        <span\n          *ngIf=\"host.hasError('subject', 'maxlength')\"\n          i18n=\"\n            Error message if subject value is more then maxlength\n            value@@messages.createMessage.composeMessageForm.errors.subjectMaxlength\"\n          data-role=\"messages-subject-maxlength-exceeded-error-message\"\n        >\n          Your input of {{ newMessageFormGroup?.get('subject')?.value?.length }} characters exceeds the limit of\n          {{ host.maxSubjectLength }}. Please rephrase.\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n    <div class=\"form-group\">\n      <bb-rich-text-editor-ui\n        label=\"Message\"\n        i18n-label=\"Message label text@@messages.createMessage.composeMessageForm.messageLabel\"\n        aria-label=\"Message\"\n        i18n-aria-label=\"Message aria-label text@@messages.createMessage.composeMessageForm.messageAriaLabel\"\n        [aria-invalid]=\"host.isInvalidControl('body')\"\n        aria-describedby=\"messages-body-error-message\"\n        name=\"message\"\n        [maxLength]=\"host.maxMessageLength\"\n        formControlName=\"body\"\n        placeholder=\"Write some text\"\n        i18n-placeholder=\"Message placeholder text@@messages.createMessage.composeMessageForm.messagePlaceholder\"\n        counter=\"true\"\n        [required]=\"true\"\n      >\n        <ng-template #actions bbRichTextEditorActions>\n          <bb-rich-text-editor-bold-action></bb-rich-text-editor-bold-action>\n          <bb-rich-text-editor-italic-action></bb-rich-text-editor-italic-action>\n          <bb-rich-text-editor-underline-action></bb-rich-text-editor-underline-action>\n          <bb-rich-text-editor-strikethrough-action> </bb-rich-text-editor-strikethrough-action>\n          <bb-rich-text-editor-olist-action></bb-rich-text-editor-olist-action>\n          <bb-rich-text-editor-ulist-action> </bb-rich-text-editor-ulist-action>\n          <bb-rich-text-editor-link-action></bb-rich-text-editor-link-action>\n        </ng-template>\n      </bb-rich-text-editor-ui>\n      <bb-input-validation-message-ui [showErrors]=\"host.isInvalidControl('body')\" id=\"messages-body-error-message\">\n        <span\n          *ngIf=\"host.hasError('body', 'required')\"\n          i18n=\"Error message if field is required@@messages.createMessage.composeMessageForm.errors.messageRequired\"\n          data-role=\"messages-body-required-error-message\"\n        >\n          Field is required\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n    <div class=\"form-group\">\n      <bb-messages-upload-attachments\n        [maxSize]=\"host.maxAttachmentSize\"\n        [initAttachments]=\"attachments\"\n        formControlName=\"attachments\"\n      ></bb-messages-upload-attachments>\n    </div>\n    <div class=\"bb-button-bar\">\n      <bb-load-button-ui\n        type=\"submit\"\n        data-role=\"submit\"\n        aria-label=\"Send\"\n        i18n-aria-label=\"Send button aria-label text@@messages.createMessage.composeMessageForm.submitButtonAriaLabel\"\n        i18n=\"Submit button text@@messages.createMessage.composeMessageForm.submitButton\"\n        [isLoading]=\"host.formLoading\"\n      >\n        Send\n      </bb-load-button-ui>\n      <button\n        bbButton\n        bbPreventBubbleDown\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        data-role=\"discard\"\n        aria-label=\"Discard\"\n        i18n-aria-label=\"\n          Discard button aria-label text@@messages.createMessage.composeMessageForm.discardButtonAriaLabel\"\n        i18n=\"Discard button text@@messages.createMessage.composeMessageForm.discardButton\"\n        (click)=\"\n          host.confirmModalService.toggleModal(\n            true,\n            host.manipulationTypes.discard,\n            host.newMessageFormGroup,\n            host.draftFormValue\n          )\n        \"\n      >\n        Discard\n      </button>\n      <button\n        bbButton\n        class=\"bb-button-bar__button--across\"\n        color=\"link\"\n        data-role=\"save-and-close\"\n        aria-label=\"Save and close\"\n        i18n-aria-label=\"\n          Save and close button aria-label@@messages.createMessage.composeMessageForm.saveAsDraftButtonTextAriaLabel\"\n        i18n=\"Save & Close button text@@messages.createMessage.composeMessageForm.saveAsDraftButtonText\"\n        (click)=\"host.onSave(host.getSimpleFormVal(host.newMessageFormGroup.value))\"\n      >\n        Save & Close\n      </button>\n    </div>\n  </form>\n\n  <bb-messages-manipulation-confirm-modal\n    [isOpen]=\"host.confirmationModal.opened\"\n    [type]=\"host.confirmationModal.type\"\n    (cancel)=\"host.confirmModalService.toggleModal(false)\"\n    (confirm)=\"host.confirmConfirmationModal()\"\n  ></bb-messages-manipulation-confirm-modal>\n</ng-template>\n\n<ng-template #messageComposeSuccess>\n  <span\n    i18n=\"\n      Your message has been successfully sent.|Text of successful conversation\n      compose@@messages.createMessage.composeMessageForm.messageSuccessCompose\"\n    >Your message has been successfully sent.</span\n  >\n</ng-template>\n\n<ng-template #messageSaveDraftSuccess>\n  <span\n    i18n=\"\n      Your draft has been successfully saved.|Text of successful conversation\n      saving@@messages.createMessage.composeMessageForm.messageSuccessSaveDraft\"\n    >Your draft has been successfully saved.</span\n  >\n</ng-template>\n\n<ng-template #messageUpdateDraftSuccess>\n  <span\n    i18n=\"\n      Your draft has been successfully updated.|Text of successful conversation\n      saving@@messages.createMessage.composeMessageForm.messageSuccessUpdateDraft\"\n    >Your draft has been successfully updated.</span\n  >\n</ng-template>\n\n<ng-template #messageComposeError>\n  <span\n    i18n=\"\n      There is an error sending message.|Text of failed conversation\n      compose@@messages.createMessage.composeMessageForm.messageErrorCompose\"\n    >There is an error sending message.</span\n  >\n</ng-template>\n\n<ng-template #messageSaveDraftError>\n  <span\n    i18n=\"\n      There is an error saving draft.|Text of failed conversation\n      saving@@messages.createMessage.composeMessageForm.messageErrorSaveDraft\"\n    >There is an error saving draft.</span\n  >\n</ng-template>\n\n<ng-template #messageUpdateDraftError>\n  <span\n    i18n=\"\n      There is an error updating draft.|Text of failed conversation\n      saving@@messages.createMessage.composeMessageForm.messageErrorUpdateDraft\"\n    >There is an error updating draft.</span\n  >\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i3__namespace.DropdownSingleSelectComponent; }), selector: "bb-dropdown-single-select-ui", inputs: ["placeholder", "defaultOptionAsPlaceholder", "options", "displayAttributePath", "iconName", "compareWithFn"] }, { type: i0__namespace.forwardRef(function () { return i4__namespace.InputValidationMessageComponent; }), selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: i0__namespace.forwardRef(function () { return i5__namespace.InputTextComponent; }), selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i0__namespace.forwardRef(function () { return i6__namespace.RichTextEditorComponent; }), selector: "bb-rich-text-editor-ui", inputs: ["maxLength", "minLength", "placeholder", "counter", "readonly", "actionsTooltipPlacement"] }, { type: i0__namespace.forwardRef(function () { return i6__namespace.RichTextEditorBoldActionComponent; }), selector: "bb-rich-text-editor-bold-action" }, { type: i0__namespace.forwardRef(function () { return i6__namespace.RichTextEditorItalicActionComponent; }), selector: "bb-rich-text-editor-italic-action" }, { type: i0__namespace.forwardRef(function () { return i6__namespace.RichTextEditorUnderlineActionComponent; }), selector: "bb-rich-text-editor-underline-action" }, { type: i0__namespace.forwardRef(function () { return i6__namespace.RichTextEditorStrikethroughActionComponent; }), selector: "bb-rich-text-editor-strikethrough-action" }, { type: i0__namespace.forwardRef(function () { return i6__namespace.RichTextEditorOlistActionComponent; }), selector: "bb-rich-text-editor-olist-action" }, { type: i0__namespace.forwardRef(function () { return i6__namespace.RichTextEditorUlistActionComponent; }), selector: "bb-rich-text-editor-ulist-action" }, { type: i0__namespace.forwardRef(function () { return i6__namespace.RichTextEditorLinkActionComponent; }), selector: "bb-rich-text-editor-link-action", inputs: ["contentClassNames"], outputs: ["linkAdded"] }, { type: i0__namespace.forwardRef(function () { return i1__namespace$1.MessagesUploadAttachmentsComponent; }), selector: "bb-messages-upload-attachments-ui, bb-messages-upload-attachments", inputs: ["maxSize", "initAttachments", "disabled", "multiple", "attachmentButtonText", "accept"] }, { type: i0__namespace.forwardRef(function () { return i7__namespace.LoadButtonComponent; }), selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }, { type: i0__namespace.forwardRef(function () { return i1__namespace$1.ӨMessagesManipulationConfirmModalComponent; }), selector: "bb-messages-manipulation-confirm-modal", inputs: ["type"] }], directives: [{ type: i0__namespace.forwardRef(function () { return CreateMessageFormCustomizableDirective; }), selector: "[bbCreateMessageFormCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i2__namespace.ɵNgNoValidate; }), selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i0__namespace.forwardRef(function () { return i2__namespace.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0__namespace.forwardRef(function () { return i2__namespace.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0__namespace.forwardRef(function () { return i8__namespace.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0__namespace.forwardRef(function () { return i2__namespace.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.MaxLengthValidator; }), selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.RequiredValidator; }), selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i0__namespace.forwardRef(function () { return i6__namespace.RichTextEditorActionsDirective; }), selector: "ng-template[bbRichTextEditorActions]" }, { type: i0__namespace.forwardRef(function () { return i9__namespace.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i0__namespace.forwardRef(function () { return i1__namespace$1.PreventBubbleDownDirective; }), selector: "[bbPreventBubbleDown]" }], pipes: { "async": i0__namespace.forwardRef(function () { return i8__namespace.AsyncPipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: CreateMessageFormComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-create-message-form-ui',
                        templateUrl: './create-message-form.component.html',
                        providers: [
                            {
                                provide: i1$1.BaseCreateMessageFormService,
                                useClass: CreateMessageFormService,
                            },
                            {
                                provide: i1$1.BaseUploadAttachmentsService,
                                useClass: i1$1.MessagesClientUploadAttachmentsService,
                            },
                        ],
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$1.BaseCreateMessageFormService }, { type: i1__namespace$1.MessagesEncodingService }, { type: i2__namespace.FormBuilder }, { type: i0__namespace.ChangeDetectorRef }, { type: i1__namespace$1.SharedMethodsService }, { type: i1__namespace$1.MessagesManipulationConfirmModalService }, { type: i1__namespace$1.MessagesUploadAttachmentsService }]; } });
    var CreateMessageFormCustomizableDirective = /** @class */ (function (_super) {
        __extends(CreateMessageFormCustomizableDirective, _super);
        function CreateMessageFormCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return CreateMessageFormCustomizableDirective;
    }(i1$2.BbTemplate));
    CreateMessageFormCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: CreateMessageFormCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    CreateMessageFormCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.14", type: CreateMessageFormCustomizableDirective, selector: "[bbCreateMessageFormCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: CreateMessageFormCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbCreateMessageFormCustomizable]',
                    }]
            }] });

    var MessagesCreateMessageModalWidgetComponent = /** @class */ (function (_super) {
        __extends(MessagesCreateMessageModalWidgetComponent, _super);
        function MessagesCreateMessageModalWidgetComponent(properties, shared) {
            var _this = _super.call(this, properties, shared) || this;
            _this.properties = properties;
            _this.shared = shared;
            return _this;
        }
        return MessagesCreateMessageModalWidgetComponent;
    }(i1$1.BaseCreateMessageModalComponent));
    MessagesCreateMessageModalWidgetComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: MessagesCreateMessageModalWidgetComponent, deps: [{ token: i1__namespace$1.BaseCreateMessageModalPropertiesService }, { token: i1__namespace$1.SharedMethodsService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    MessagesCreateMessageModalWidgetComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.14", type: MessagesCreateMessageModalWidgetComponent, selector: "bb-messages-create-message-modal-widget-ang", providers: [i1$1.BaseCreateMessageModalPropertiesService], usesInheritance: true, ngImport: i0__namespace, template: "<ng-container\n  bbMessagesCreateMessageModalCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    maxAttachmentSize: maxAttachmentSize | async,\n    maxSubjectLength: maxSubjectLength | async,\n    maxMessageLength: maxMessageLength | async,\n    modalHeader: modalHeader | async,\n    hideComposeButton: hideComposeButton | async\n  }\"\n></ng-container>\n\n<ng-template\n  bbMessagesCreateMessageModalCustomizable\n  let-host\n  let-maxAttachmentSize=\"context.maxAttachmentSize\"\n  let-maxSubjectLength=\"context.maxSubjectLength\"\n  let-maxMessageLength=\"context.maxMessageLength\"\n  let-modalHeader=\"context.modalHeader\"\n  let-hideComposeButton=\"context.hideComposeButton\"\n>\n  <div class=\"bb-button-bar\" *ngIf=\"!hideComposeButton\">\n    <button\n      bbButton\n      class=\"bb-button-bar__button\"\n      data-role=\"compose-modal\"\n      aria-label=\"Compose\"\n      i18n-aria-label=\"Compose aria-label@@messages.createMessage.composeAriaLabel\"\n      i18n=\"Button title for compose message@@messages.createMessage.compose\"\n      (click)=\"host.openModal()\"\n    >\n      Compose\n    </button>\n  </div>\n\n  <bb-modal-ui [isOpen]=\"host.modalOpened\" (cancel)=\"host.closeModal()\" [modalOptions]=\"host.modalOptions\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui headingType=\"h3\" [heading]=\"modalHeader\" [attr.aria-label]=\"modalHeader\"></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <bb-create-message-form-ui\n          [draftId]=\"host.draftId\"\n          [reset]=\"host.resetStream\"\n          [isModalOpen]=\"host.modalOpened\"\n          [maxAttachmentSize]=\"maxAttachmentSize\"\n          [maxSubjectLength]=\"maxSubjectLength\"\n          [maxMessageLength]=\"maxMessageLength\"\n          (cancel)=\"host.closeModal()\"\n          (confirm)=\"host.closeModal()\"\n        ></bb-create-message-form-ui>\n      </ng-template>\n    </bb-modal-body-ui>\n  </bb-modal-ui>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i2__namespace$1.ModalComponent; }), selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace$1.ModalHeaderComponent; }), selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i0__namespace.forwardRef(function () { return i3__namespace$1.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace$1.ModalBodyComponent; }), selector: "bb-modal-body-ui" }, { type: i0__namespace.forwardRef(function () { return CreateMessageFormComponent; }), selector: "bb-create-message-form-ui" }], directives: [{ type: i0__namespace.forwardRef(function () { return MessagesCreateMessageModalCustomizableDirective; }), selector: "[bbMessagesCreateMessageModalCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i8__namespace.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i9__namespace.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace$1.CustomModalHeaderDirective; }), selector: "ng-template[bbCustomModalHeader]" }, { type: i0__namespace.forwardRef(function () { return i2__namespace$1.CustomModalBodyDirective; }), selector: "ng-template[bbCustomModalBody]" }], pipes: { "async": i0__namespace.forwardRef(function () { return i8__namespace.AsyncPipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: MessagesCreateMessageModalWidgetComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-messages-create-message-modal-widget-ang',
                        providers: [i1$1.BaseCreateMessageModalPropertiesService],
                        templateUrl: './messages-create-message-modal-widget-ang.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$1.BaseCreateMessageModalPropertiesService }, { type: i1__namespace$1.SharedMethodsService }]; } });
    var MessagesCreateMessageModalCustomizableDirective = /** @class */ (function (_super) {
        __extends(MessagesCreateMessageModalCustomizableDirective, _super);
        function MessagesCreateMessageModalCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return MessagesCreateMessageModalCustomizableDirective;
    }(i1$2.BbTemplate));
    MessagesCreateMessageModalCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: MessagesCreateMessageModalCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    MessagesCreateMessageModalCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.14", type: MessagesCreateMessageModalCustomizableDirective, selector: "[bbMessagesCreateMessageModalCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: MessagesCreateMessageModalCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbMessagesCreateMessageModalCustomizable]',
                    }]
            }] });

    var components$1 = [CreateMessageFormComponent];
    var directives$1 = [CreateMessageFormCustomizableDirective];
    var uiModules$1 = [
        i9.ButtonModule,
        i3.DropdownSingleSelectModule,
        i4.InputValidationMessageModule,
        i5.InputTextModule,
        i7.LoadButtonModule,
        i6.RichTextEditorModule,
    ];
    var innerModules$1 = [i1$1.MessagesManipulationConfirmModalModule, i1$1.MessagesUploadAttachmentsModule];
    var CreateMessageFormModule = /** @class */ (function () {
        function CreateMessageFormModule() {
        }
        return CreateMessageFormModule;
    }());
    CreateMessageFormModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: CreateMessageFormModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    CreateMessageFormModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: CreateMessageFormModule, declarations: [CreateMessageFormComponent, CreateMessageFormCustomizableDirective], imports: [i8.CommonModule, i2.ReactiveFormsModule, i1$1.PreventBubbleDownModule, i9.ButtonModule,
            i3.DropdownSingleSelectModule,
            i4.InputValidationMessageModule,
            i5.InputTextModule,
            i7.LoadButtonModule,
            i6.RichTextEditorModule, i1$1.MessagesManipulationConfirmModalModule, i1$1.MessagesUploadAttachmentsModule], exports: [CreateMessageFormComponent, CreateMessageFormCustomizableDirective, i9.ButtonModule,
            i3.DropdownSingleSelectModule,
            i4.InputValidationMessageModule,
            i5.InputTextModule,
            i7.LoadButtonModule,
            i6.RichTextEditorModule, i1$1.MessagesManipulationConfirmModalModule, i1$1.MessagesUploadAttachmentsModule] });
    CreateMessageFormModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: CreateMessageFormModule, providers: [i1$1.MessagesEncodingService], imports: [__spreadArray(__spreadArray([i8.CommonModule, i2.ReactiveFormsModule, i1$1.PreventBubbleDownModule], __read(uiModules$1)), __read(innerModules$1)), i9.ButtonModule,
            i3.DropdownSingleSelectModule,
            i4.InputValidationMessageModule,
            i5.InputTextModule,
            i7.LoadButtonModule,
            i6.RichTextEditorModule, i1$1.MessagesManipulationConfirmModalModule, i1$1.MessagesUploadAttachmentsModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: CreateMessageFormModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray(__spreadArray([i8.CommonModule, i2.ReactiveFormsModule, i1$1.PreventBubbleDownModule], __read(uiModules$1)), __read(innerModules$1)),
                        declarations: __spreadArray(__spreadArray([], __read(components$1)), __read(directives$1)),
                        exports: __spreadArray(__spreadArray(__spreadArray(__spreadArray([], __read(components$1)), __read(directives$1)), __read(uiModules$1)), __read(innerModules$1)),
                        providers: [i1$1.MessagesEncodingService],
                    }]
            }] });

    var components = [MessagesCreateMessageModalWidgetComponent];
    var directives = [MessagesCreateMessageModalCustomizableDirective];
    var uiModules = [i9.ButtonModule, i2$1.ModalModule, i3$1.HeaderModule];
    var innerModules = [CreateMessageFormModule, i1$1.BaseCreateMessageFormModule];
    var MessagesCreateMessageModalWidgetModule = /** @class */ (function () {
        function MessagesCreateMessageModalWidgetModule() {
        }
        return MessagesCreateMessageModalWidgetModule;
    }());
    MessagesCreateMessageModalWidgetModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: MessagesCreateMessageModalWidgetModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    MessagesCreateMessageModalWidgetModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: MessagesCreateMessageModalWidgetModule, declarations: [MessagesCreateMessageModalWidgetComponent, MessagesCreateMessageModalCustomizableDirective], imports: [i8.CommonModule, i1__namespace$2.BackbaseCoreModule, CreateMessageFormModule,
            i1$1.SharedMethodsModule,
            i1$1.BaseCreateMessageModalModule, i9.ButtonModule, i2$1.ModalModule, i3$1.HeaderModule], exports: [MessagesCreateMessageModalWidgetComponent, MessagesCreateMessageModalCustomizableDirective, i9.ButtonModule, i2$1.ModalModule, i3$1.HeaderModule, CreateMessageFormModule, i1$1.BaseCreateMessageFormModule] });
    MessagesCreateMessageModalWidgetModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: MessagesCreateMessageModalWidgetModule, imports: [__spreadArray([
                i8.CommonModule,
                i1$2.BackbaseCoreModule.withConfig({
                    classMap: { MessagesCreateMessageModalWidgetComponent: MessagesCreateMessageModalWidgetComponent },
                }),
                CreateMessageFormModule,
                i1$1.SharedMethodsModule,
                i1$1.BaseCreateMessageModalModule
            ], __read(uiModules)), i9.ButtonModule, i2$1.ModalModule, i3$1.HeaderModule, CreateMessageFormModule, i1$1.BaseCreateMessageFormModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: MessagesCreateMessageModalWidgetModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([
                            i8.CommonModule,
                            i1$2.BackbaseCoreModule.withConfig({
                                classMap: { MessagesCreateMessageModalWidgetComponent: MessagesCreateMessageModalWidgetComponent },
                            }),
                            CreateMessageFormModule,
                            i1$1.SharedMethodsModule,
                            i1$1.BaseCreateMessageModalModule
                        ], __read(uiModules)),
                        declarations: __spreadArray(__spreadArray([], __read(components)), __read(directives)),
                        exports: __spreadArray(__spreadArray(__spreadArray(__spreadArray([], __read(components)), __read(directives)), __read(uiModules)), __read(innerModules)),
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.CreateMessageFormComponent = CreateMessageFormComponent;
    exports.CreateMessageFormModule = CreateMessageFormModule;
    exports.MessagesCreateMessageModalWidgetComponent = MessagesCreateMessageModalWidgetComponent;
    exports.MessagesCreateMessageModalWidgetModule = MessagesCreateMessageModalWidgetModule;
    exports["ӨCreateMessageFormCustomizableDirective"] = CreateMessageFormCustomizableDirective;
    exports["ӨMessagesCreateMessageModalCustomizableDirective"] = MessagesCreateMessageModalCustomizableDirective;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-messages-create-message-modal-widget-ang.umd.js.map
