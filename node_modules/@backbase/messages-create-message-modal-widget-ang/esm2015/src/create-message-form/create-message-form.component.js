import { Component, Directive } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { BaseCreateMessageFormComponent, BaseCreateMessageFormService, BaseUploadAttachmentsService, MessagesClientUploadAttachmentsService, topicPlaceholderConfig, } from '@backbase/messages-common';
import { CreateMessageFormService } from './create-message-form.service';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/messages-common";
import * as i2 from "@angular/forms";
import * as i3 from "@backbase/ui-ang/dropdown-single-select";
import * as i4 from "@backbase/ui-ang/input-validation-message";
import * as i5 from "@backbase/ui-ang/input-text";
import * as i6 from "@backbase/ui-ang/rich-text-editor";
import * as i7 from "@backbase/ui-ang/load-button";
import * as i8 from "@angular/common";
import * as i9 from "@backbase/ui-ang/button";
export class CreateMessageFormComponent extends BaseCreateMessageFormComponent {
    constructor(messagesService, encodingService, fb, cd, sharedService, confirmModalService, uploadService) {
        super(sharedService, confirmModalService, cd, messagesService, fb, encodingService, uploadService);
        this.messagesService = messagesService;
        this.encodingService = encodingService;
        this.fb = fb;
        this.cd = cd;
        this.sharedService = sharedService;
        this.confirmModalService = confirmModalService;
        this.uploadService = uploadService;
        /**
         * Configs for topic selector placeholder
         */
        this.topicPlaceholderConfig = topicPlaceholderConfig;
    }
    /**
     * The method to submit the message form and create a new message.
     */
    onConfirm() {
        this.newMessageFormGroup.markAllAsTouched();
        this.newMessageFormGroup.markAsDirty();
        const { value, valid } = this.newMessageFormGroup;
        if (valid) {
            const finalValue = Object.assign({ subject: '', body: '', topic: '' }, this.getSimpleFormVal(value));
            this.createMessage(finalValue);
        }
    }
}
CreateMessageFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: CreateMessageFormComponent, deps: [{ token: i1.BaseCreateMessageFormService }, { token: i1.MessagesEncodingService }, { token: i2.FormBuilder }, { token: i0.ChangeDetectorRef }, { token: i1.SharedMethodsService }, { token: i1.MessagesManipulationConfirmModalService }, { token: i1.MessagesUploadAttachmentsService }], target: i0.ɵɵFactoryTarget.Component });
CreateMessageFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.14", type: CreateMessageFormComponent, selector: "bb-create-message-form-ui", providers: [
        {
            provide: BaseCreateMessageFormService,
            useClass: CreateMessageFormService,
        },
        {
            provide: BaseUploadAttachmentsService,
            useClass: MessagesClientUploadAttachmentsService,
        },
    ], usesInheritance: true, ngImport: i0, template: "<ng-container\n  bbCreateMessageFormCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    topics: topics | async\n  }\"\n></ng-container>\n\n<ng-template bbCreateMessageFormCustomizable let-host let-topics=\"context.topics\">\n  <form [formGroup]=\"host.newMessageFormGroup\" data-role=\"form\" (submit)=\"host.onConfirm()\">\n    <div class=\"form-group\">\n      <div class=\"form-row\">\n        <div class=\"col-12 col-md-8\">\n          <bb-dropdown-single-select-ui\n            *ngIf=\"\n              topics?.length\n                ? topicPlaceholderConfig.selectTopicPlaceholder\n                : topicPlaceholderConfig.noTopicsPlaceholder as topicPlaceholder\n            \"\n            label=\"Topic\"\n            i18n-label=\"Topic label text@@messages.createMessage.composeMessageForm.topicLabel\"\n            aria-label=\"Topic\"\n            data-role=\"topics\"\n            i18n-aria-label=\"Topic aria-label text@@messages.createMessage.composeMessageForm.topicAriaLabel\"\n            [aria-invalid]=\"host.isInvalidControl('topic')\"\n            aria-describedby=\"messages-topic-error-message\"\n            [options]=\"topics\"\n            displayAttributePath=\"name\"\n            [attr.placeholder]=\"topicPlaceholder\"\n            [placeholder]=\"topicPlaceholder\"\n            formControlName=\"topic\"\n            (blur)=\"host.resetFormOnElementBlur()\"\n          ></bb-dropdown-single-select-ui>\n          <bb-input-validation-message-ui\n            id=\"messages-topic-error-message\"\n            [showErrors]=\"host.isInvalidControl('topic')\"\n          >\n            <span\n              data-role=\"messages-topic-required-error-message\"\n              *ngIf=\"host.hasError('topic', 'required')\"\n              i18n=\"\n                Error message if subject field is\n                required@@messages.createMessage.composeMessageForm.errors.subjectRequired\"\n            >\n              Field is required\n            </span>\n          </bb-input-validation-message-ui>\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <bb-input-text-ui\n        data-role=\"subject\"\n        label=\"Subject\"\n        [aria-invalid]=\"host.isInvalidControl('subject')\"\n        i18n-label=\"Subject label text@@messages.createMessage.composeMessageForm.subjectLabel\"\n        aria-label=\"Subject\"\n        i18n-aria-label=\"Subject aria-label text@@messages.createMessage.composeMessageForm.subjectAriaLabel\"\n        aria-describedby=\"messages-subject-error-message\"\n        placeholder=\"Write subject\"\n        i18n-placeholder=\"Subject placeholder text@@messages.createMessage.composeMessageForm.subjectPlaceholder\"\n        formControlName=\"subject\"\n        [maxlength]=\"host.maxSubjectLength\"\n      ></bb-input-text-ui>\n      <bb-input-validation-message-ui\n        id=\"messages-subject-error-message\"\n        [showErrors]=\"host.isInvalidControl('subject')\"\n      >\n        <span\n          *ngIf=\"host.hasError('subject', 'required')\"\n          i18n=\"\n            Error message if subject field is empty@@messages.createMessage.composeMessageForm.errors.subjectRequired\"\n          data-role=\"messages-subject-required-error-message\"\n        >\n          Field is required\n        </span>\n        <span\n          *ngIf=\"host.hasError('subject', 'maxlength')\"\n          i18n=\"\n            Error message if subject value is more then maxlength\n            value@@messages.createMessage.composeMessageForm.errors.subjectMaxlength\"\n          data-role=\"messages-subject-maxlength-exceeded-error-message\"\n        >\n          Your input of {{ newMessageFormGroup?.get('subject')?.value?.length }} characters exceeds the limit of\n          {{ host.maxSubjectLength }}. Please rephrase.\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n    <div class=\"form-group\">\n      <bb-rich-text-editor-ui\n        label=\"Message\"\n        i18n-label=\"Message label text@@messages.createMessage.composeMessageForm.messageLabel\"\n        aria-label=\"Message\"\n        i18n-aria-label=\"Message aria-label text@@messages.createMessage.composeMessageForm.messageAriaLabel\"\n        [aria-invalid]=\"host.isInvalidControl('body')\"\n        aria-describedby=\"messages-body-error-message\"\n        name=\"message\"\n        [maxLength]=\"host.maxMessageLength\"\n        formControlName=\"body\"\n        placeholder=\"Write some text\"\n        i18n-placeholder=\"Message placeholder text@@messages.createMessage.composeMessageForm.messagePlaceholder\"\n        counter=\"true\"\n        [required]=\"true\"\n      >\n        <ng-template #actions bbRichTextEditorActions>\n          <bb-rich-text-editor-bold-action></bb-rich-text-editor-bold-action>\n          <bb-rich-text-editor-italic-action></bb-rich-text-editor-italic-action>\n          <bb-rich-text-editor-underline-action></bb-rich-text-editor-underline-action>\n          <bb-rich-text-editor-strikethrough-action> </bb-rich-text-editor-strikethrough-action>\n          <bb-rich-text-editor-olist-action></bb-rich-text-editor-olist-action>\n          <bb-rich-text-editor-ulist-action> </bb-rich-text-editor-ulist-action>\n          <bb-rich-text-editor-link-action></bb-rich-text-editor-link-action>\n        </ng-template>\n      </bb-rich-text-editor-ui>\n      <bb-input-validation-message-ui [showErrors]=\"host.isInvalidControl('body')\" id=\"messages-body-error-message\">\n        <span\n          *ngIf=\"host.hasError('body', 'required')\"\n          i18n=\"Error message if field is required@@messages.createMessage.composeMessageForm.errors.messageRequired\"\n          data-role=\"messages-body-required-error-message\"\n        >\n          Field is required\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n    <div class=\"form-group\">\n      <bb-messages-upload-attachments\n        [maxSize]=\"host.maxAttachmentSize\"\n        [initAttachments]=\"attachments\"\n        formControlName=\"attachments\"\n      ></bb-messages-upload-attachments>\n    </div>\n    <div class=\"bb-button-bar\">\n      <bb-load-button-ui\n        type=\"submit\"\n        data-role=\"submit\"\n        aria-label=\"Send\"\n        i18n-aria-label=\"Send button aria-label text@@messages.createMessage.composeMessageForm.submitButtonAriaLabel\"\n        i18n=\"Submit button text@@messages.createMessage.composeMessageForm.submitButton\"\n        [isLoading]=\"host.formLoading\"\n      >\n        Send\n      </bb-load-button-ui>\n      <button\n        bbButton\n        bbPreventBubbleDown\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        data-role=\"discard\"\n        aria-label=\"Discard\"\n        i18n-aria-label=\"\n          Discard button aria-label text@@messages.createMessage.composeMessageForm.discardButtonAriaLabel\"\n        i18n=\"Discard button text@@messages.createMessage.composeMessageForm.discardButton\"\n        (click)=\"\n          host.confirmModalService.toggleModal(\n            true,\n            host.manipulationTypes.discard,\n            host.newMessageFormGroup,\n            host.draftFormValue\n          )\n        \"\n      >\n        Discard\n      </button>\n      <button\n        bbButton\n        class=\"bb-button-bar__button--across\"\n        color=\"link\"\n        data-role=\"save-and-close\"\n        aria-label=\"Save and close\"\n        i18n-aria-label=\"\n          Save and close button aria-label@@messages.createMessage.composeMessageForm.saveAsDraftButtonTextAriaLabel\"\n        i18n=\"Save & Close button text@@messages.createMessage.composeMessageForm.saveAsDraftButtonText\"\n        (click)=\"host.onSave(host.getSimpleFormVal(host.newMessageFormGroup.value))\"\n      >\n        Save & Close\n      </button>\n    </div>\n  </form>\n\n  <bb-messages-manipulation-confirm-modal\n    [isOpen]=\"host.confirmationModal.opened\"\n    [type]=\"host.confirmationModal.type\"\n    (cancel)=\"host.confirmModalService.toggleModal(false)\"\n    (confirm)=\"host.confirmConfirmationModal()\"\n  ></bb-messages-manipulation-confirm-modal>\n</ng-template>\n\n<ng-template #messageComposeSuccess>\n  <span\n    i18n=\"\n      Your message has been successfully sent.|Text of successful conversation\n      compose@@messages.createMessage.composeMessageForm.messageSuccessCompose\"\n    >Your message has been successfully sent.</span\n  >\n</ng-template>\n\n<ng-template #messageSaveDraftSuccess>\n  <span\n    i18n=\"\n      Your draft has been successfully saved.|Text of successful conversation\n      saving@@messages.createMessage.composeMessageForm.messageSuccessSaveDraft\"\n    >Your draft has been successfully saved.</span\n  >\n</ng-template>\n\n<ng-template #messageUpdateDraftSuccess>\n  <span\n    i18n=\"\n      Your draft has been successfully updated.|Text of successful conversation\n      saving@@messages.createMessage.composeMessageForm.messageSuccessUpdateDraft\"\n    >Your draft has been successfully updated.</span\n  >\n</ng-template>\n\n<ng-template #messageComposeError>\n  <span\n    i18n=\"\n      There is an error sending message.|Text of failed conversation\n      compose@@messages.createMessage.composeMessageForm.messageErrorCompose\"\n    >There is an error sending message.</span\n  >\n</ng-template>\n\n<ng-template #messageSaveDraftError>\n  <span\n    i18n=\"\n      There is an error saving draft.|Text of failed conversation\n      saving@@messages.createMessage.composeMessageForm.messageErrorSaveDraft\"\n    >There is an error saving draft.</span\n  >\n</ng-template>\n\n<ng-template #messageUpdateDraftError>\n  <span\n    i18n=\"\n      There is an error updating draft.|Text of failed conversation\n      saving@@messages.createMessage.composeMessageForm.messageErrorUpdateDraft\"\n    >There is an error updating draft.</span\n  >\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i3.DropdownSingleSelectComponent; }), selector: "bb-dropdown-single-select-ui", inputs: ["placeholder", "defaultOptionAsPlaceholder", "options", "displayAttributePath", "iconName", "compareWithFn"] }, { type: i0.forwardRef(function () { return i4.InputValidationMessageComponent; }), selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: i0.forwardRef(function () { return i5.InputTextComponent; }), selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i0.forwardRef(function () { return i6.RichTextEditorComponent; }), selector: "bb-rich-text-editor-ui", inputs: ["maxLength", "minLength", "placeholder", "counter", "readonly", "actionsTooltipPlacement"] }, { type: i0.forwardRef(function () { return i6.RichTextEditorBoldActionComponent; }), selector: "bb-rich-text-editor-bold-action" }, { type: i0.forwardRef(function () { return i6.RichTextEditorItalicActionComponent; }), selector: "bb-rich-text-editor-italic-action" }, { type: i0.forwardRef(function () { return i6.RichTextEditorUnderlineActionComponent; }), selector: "bb-rich-text-editor-underline-action" }, { type: i0.forwardRef(function () { return i6.RichTextEditorStrikethroughActionComponent; }), selector: "bb-rich-text-editor-strikethrough-action" }, { type: i0.forwardRef(function () { return i6.RichTextEditorOlistActionComponent; }), selector: "bb-rich-text-editor-olist-action" }, { type: i0.forwardRef(function () { return i6.RichTextEditorUlistActionComponent; }), selector: "bb-rich-text-editor-ulist-action" }, { type: i0.forwardRef(function () { return i6.RichTextEditorLinkActionComponent; }), selector: "bb-rich-text-editor-link-action", inputs: ["contentClassNames"], outputs: ["linkAdded"] }, { type: i0.forwardRef(function () { return i1.MessagesUploadAttachmentsComponent; }), selector: "bb-messages-upload-attachments-ui, bb-messages-upload-attachments", inputs: ["maxSize", "initAttachments", "disabled", "multiple", "attachmentButtonText", "accept"] }, { type: i0.forwardRef(function () { return i7.LoadButtonComponent; }), selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }, { type: i0.forwardRef(function () { return i1.ӨMessagesManipulationConfirmModalComponent; }), selector: "bb-messages-manipulation-confirm-modal", inputs: ["type"] }], directives: [{ type: i0.forwardRef(function () { return CreateMessageFormCustomizableDirective; }), selector: "[bbCreateMessageFormCustomizable]" }, { type: i0.forwardRef(function () { return i2.ɵNgNoValidate; }), selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i0.forwardRef(function () { return i2.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i2.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i8.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i2.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i2.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0.forwardRef(function () { return i2.MaxLengthValidator; }), selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }, { type: i0.forwardRef(function () { return i2.RequiredValidator; }), selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i0.forwardRef(function () { return i6.RichTextEditorActionsDirective; }), selector: "ng-template[bbRichTextEditorActions]" }, { type: i0.forwardRef(function () { return i9.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i0.forwardRef(function () { return i1.PreventBubbleDownDirective; }), selector: "[bbPreventBubbleDown]" }], pipes: { "async": i0.forwardRef(function () { return i8.AsyncPipe; }) } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: CreateMessageFormComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-create-message-form-ui',
                    templateUrl: './create-message-form.component.html',
                    providers: [
                        {
                            provide: BaseCreateMessageFormService,
                            useClass: CreateMessageFormService,
                        },
                        {
                            provide: BaseUploadAttachmentsService,
                            useClass: MessagesClientUploadAttachmentsService,
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i1.BaseCreateMessageFormService }, { type: i1.MessagesEncodingService }, { type: i2.FormBuilder }, { type: i0.ChangeDetectorRef }, { type: i1.SharedMethodsService }, { type: i1.MessagesManipulationConfirmModalService }, { type: i1.MessagesUploadAttachmentsService }]; } });
export class CreateMessageFormCustomizableDirective extends BbTemplate {
}
CreateMessageFormCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: CreateMessageFormCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
CreateMessageFormCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.14", type: CreateMessageFormCustomizableDirective, selector: "[bbCreateMessageFormCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: CreateMessageFormCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbCreateMessageFormCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,