{"version":3,"file":"accounts-transactions-journey-config.service.js","sourceRoot":"","sources":["../../../../../libs/accounts-transactions-journey/src/lib/accounts-transactions-journey-config.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,cAAc,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAC7E,OAAO,EAAE,aAAa,EAAgB,MAAM,MAAM,CAAC;AACnD,OAAO,EAAE,SAAS,EAAE,MAAM,+BAA+B,CAAC;AAC1D,OAAO,EAAE,2BAA2B,EAAE,cAAc,EAAE,MAAM,sCAAsC,CAAC;AACnG,OAAO,EAAE,mBAAmB,EAA0B,YAAY,EAAE,MAAM,mCAAmC,CAAC;AAG9G,OAAO,EAAE,+BAA+B,EAAE,MAAM,0CAA0C,CAAC;;;AAiH3F,2BAA2B;AAC3B,MAAM,CAAC,MAAM,6CAA6C,GACxD,IAAI,cAAc,CAChB,0DAA0D,CAC3D,CAAC;AAEJ,MAAM,cAAc,GAA6C;IAC/D,MAAM,EAAE,EAAE;IACV,YAAY,EAAE,EAAE;IAChB,oBAAoB,EAAE,CAAC;IACvB,cAAc,EAAE,WAAW;IAC3B,YAAY,EAAE,KAAK;IACnB,4BAA4B,EAAE,EAAE;IAChC,uBAAuB,EAAE,kBAAkB;IAC3C,YAAY,EAAE,IAAI;IAClB,kBAAkB,EAAE,IAAI;IACxB,eAAe,EAAE,KAAK;IACtB,kBAAkB,EAAE,YAAY,CAAC,WAAW;IAC5C,uBAAuB,EAAE,IAAI;IAC7B,sBAAsB,EAAE,GAAG;IAC3B,uBAAuB,EAAE,mBAAmB;IAC5C,sBAAsB,EAAE,IAAI;IAC5B,cAAc,EAAE,EAAE;IAClB,cAAc,EAAE,EAAE;IAClB,sBAAsB,EAAE;QACtB,iBAAiB,EAAE;YACjB,mBAAmB,CAAC,IAAI;YACxB,mBAAmB,CAAC,oBAAoB;YACxC,mBAAmB,CAAC,MAAM;YAC1B,mBAAmB,CAAC,KAAK;YACzB,mBAAmB,CAAC,aAAa;YACjC,mBAAmB,CAAC,iBAAiB;SACtC;QACD,iBAAiB,EAAE;YACjB,mBAAmB,CAAC,IAAI;YACxB,mBAAmB,CAAC,oBAAoB;YACxC,mBAAmB,CAAC,MAAM;YAC1B,mBAAmB,CAAC,KAAK;YACzB,mBAAmB,CAAC,aAAa;YACjC,mBAAmB,CAAC,iBAAiB;SACtC;QACD,aAAa,EAAE;YACb,mBAAmB,CAAC,IAAI;YACxB,mBAAmB,CAAC,oBAAoB;YACxC,mBAAmB,CAAC,MAAM;YAC1B,mBAAmB,CAAC,KAAK;YACzB,mBAAmB,CAAC,aAAa;SAClC;QACD,IAAI,EAAE,CAAC,mBAAmB,CAAC,IAAI,EAAE,mBAAmB,CAAC,oBAAoB,EAAE,mBAAmB,CAAC,MAAM,CAAC;QACtG,cAAc,EAAE,CAAC,mBAAmB,CAAC,IAAI,EAAE,mBAAmB,CAAC,oBAAoB,EAAE,mBAAmB,CAAC,MAAM,CAAC;QAChH,YAAY,EAAE,CAAC,mBAAmB,CAAC,IAAI,EAAE,mBAAmB,CAAC,oBAAoB,EAAE,mBAAmB,CAAC,MAAM,CAAC;QAC9G,oBAAoB,EAAE;YACpB,mBAAmB,CAAC,IAAI;YACxB,mBAAmB,CAAC,oBAAoB;YACxC,mBAAmB,CAAC,MAAM;SAC3B;KACF;IACD,gBAAgB,EAAE,IAAI;IACtB,oBAAoB,EAAE,IAAI;IAC1B,oBAAoB,EAAE,IAAI;IAC1B,uCAAuC,EAAE,cAAc,CAAC,WAAW;IACnE,mCAAmC,EAAE,EAAE;IACvC,mBAAmB,EAAE,SAAS;IAC9B,wBAAwB,EAAE,2BAA2B,CAAC,IAAI;IAC1D,qBAAqB,EAAE,+BAA+B;IACtD,oBAAoB,EAAE,SAAS;CAChC,CAAC;AAGF,MAAM,OAAO,kCAAkC;IAG7C,YAGE,MAAyD,EAC5B,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;QAEjD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,mCAAQ,cAAc,GAAK,MAAM,CAAE,CAAC;QAChD,gFAAgF;QAChF,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,eAAe,KAAK,SAAS,CAAC,EAAE;YAC3F,aAAa,CAAC;gBACZ,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAS,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;gBAC9D,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAU,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;aAClF,CAAC;iBACC,SAAS,CAAC;gBACT,IAAI,EAAE,CAAC,MAAyB,EAAE,EAAE;oBAClC,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;wBAC/B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;qBACjC;oBACD,IAAI,MAAM,CAAC,eAAe,KAAK,SAAS,EAAE;wBACxC,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;qBAC5C;gBACH,CAAC;aACiC,CAAC;iBACpC,WAAW,EAAE,CAAC;SAClB;IACH,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,cAAc,CAAC;IACxB,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;IAC7B,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;IACnC,CAAC;IAED,IAAI,oBAAoB;QACtB,OAAO,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;IAC3C,CAAC;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;IACrC,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;IACnC,CAAC;IAED,IAAI,4BAA4B;QAC9B,OAAO,IAAI,CAAC,OAAO,CAAC,4BAA4B,CAAC;IACnD,CAAC;IAED,IAAI,uBAAuB;QACzB,OAAO,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC;IAC9C,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;IACnC,CAAC;IAED,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC;IACzC,CAAC;IAED,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;IACtC,CAAC;IAED,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC;IACzC,CAAC;IAED,IAAI,uBAAuB;QACzB,OAAO,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC;IAC9C,CAAC;IAED,IAAI,sBAAsB;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC;IAC7C,CAAC;IAED,IAAI,uBAAuB;QACzB,OAAO,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC;IAC9C,CAAC;IAED,IAAI,sBAAsB;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC;IAC7C,CAAC;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;IACrC,CAAC;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;IACrC,CAAC;IAED,IAAI,sBAAsB;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC;IAC7C,CAAC;IAED,IAAI,oBAAoB;QACtB,OAAO,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;IAC3C,CAAC;IAED,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;IACvC,CAAC;IAED,IAAI,oBAAoB;QACtB,OAAO,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;IAC3C,CAAC;IAED,IAAI,uCAAuC;QACzC,OAAO,IAAI,CAAC,OAAO,CAAC,uCAAuC,CAAC;IAC9D,CAAC;IAED,IAAI,mCAAmC;QACrC,OAAO,IAAI,CAAC,OAAO,CAAC,mCAAmC,CAAC;IAC1D,CAAC;IAED,IAAI,mBAAmB;QACrB,OAAO,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;IAC1C,CAAC;IAED,IAAI,wBAAwB;QAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC;IAC/C,CAAC;IAED;;OAEG;IACH,IAAI,qBAAqB;QACvB,OAAO,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC;IAC5C,CAAC;IAED,IAAI,oBAAoB;QACtB,OAAO,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;IAC3C,CAAC;;mJAhJU,kCAAkC,kBAKnC,6CAA6C;uJAL5C,kCAAkC;4FAAlC,kCAAkC;kBAD9C,UAAU;;0BAKN,QAAQ;;0BACR,MAAM;2BAAC,6CAA6C;;0BAEpD,QAAQ","sourcesContent":["import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { combineLatest, NextObserver } from 'rxjs';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport { AccountAliasDisplayingLevel, ProductKindUri } from '@backbase/product-summary-common-ang';\nimport { AvailableFilterEnum, AvailableFiltersConfig, EndpointType } from '@backbase/transactions-common-ang';\nimport { CreditLimitViewMode } from '@backbase/product-summary-ui';\nimport { AccountInfoPropertiesConfiguration } from './views/account-info/model/types';\nimport { defaultAccountInfoConfiguration } from './views/account-info/model/configuration';\n\nexport interface AccountsTransactionsJourneyConfiguration {\n  /**\n   * API key for Google Maps\n   */\n  apiKey: string;\n  /**\n   * Number of items loaded initialy and with each load-more request\n   */\n  itemsPerPage: number;\n  /**\n   * Maximum number of pagination pages in transactions\n   */\n  transactionsMaxPages: number;\n  /**\n   * Pagination type for accounts and transactions\n   */\n  paginationType: 'load-more' | 'pagination' | 'infinite-scroll';\n  /**\n   * Pending transactions on top and hides billing status filter\n   */\n  pendingOnTop: boolean;\n  /**\n   * Options to initialize the filter (format as query parameters)\n   */\n  transactionsFilterParameters: string;\n  /**\n   * Options to initialize the sorting (e.g. 'amount ASC' or empty)\n   */\n  transactionsSortOptions: string;\n  /**\n   * Show transactions control such as filter and search\n   */\n  showControls: boolean;\n  /**\n   * Enable change category in transactions details\n   */\n  showChangeCategory: boolean;\n  /**\n   * Display check images in transaction details\n   */\n  showCheckImages: boolean;\n  /**\n   * Making GET or POST requests for transactions\n   */\n  getOrPostEndpoints: EndpointType;\n  /**\n   * Enable dispute and inquiry report in transactions list\n   */\n  enableDisputeAndInquiry: boolean;\n  /**\n   * The transaction is eligible for a dispute based on the eligibility period\n   */\n  disputeEligibilityDays: number;\n  /**\n   * Disputable transaction types\n   */\n  disputeTransactionTypes: string;\n  /**\n   * The billing status of the transaction is disputable\n   */\n  disputeByBillingStatus: boolean;\n  /**\n   * Inquire transaction topic ID\n   */\n  inquireTopicId: string;\n  /**\n   * Dispute transaction topic ID\n   */\n  disputeTopicId: string;\n  /**\n   * Configure available filters based on product kind product type\n   */\n  availableFiltersConfig: AvailableFiltersConfig;\n  /**\n   * Hide/show account type icons\n   */\n  showAccountIcons: boolean;\n  /**\n   * Enable/disable manage accounts\n   */\n  enableManageAccounts: boolean;\n  /**\n   * Enable `make a transfer` button in the account details tab view\n   */\n  enableTransferButton: boolean;\n  /**\n   * Product kinds for which graphical representation should be enabled in account details\n   */\n  productKindsWithGraphicalRepresentation: ProductKindUri | ProductKindUri[];\n  /**\n   * Product kinds for which account details should be displayed on an external page\n   */\n  productKindsWithExternalDetailsPage: string | string[];\n  /**\n   * Credit limit view mode, 'emptied' or 'filled'\n   */\n  creditLimitViewMode: CreditLimitViewMode;\n  /**\n   * Account alias displaying level for accounts\n   */\n  accountAliasDisplayLevel: AccountAliasDisplayingLevel;\n  /**\n   * Account info properties configuration\n   */\n  accountInfoProperties: AccountInfoPropertiesConfiguration;\n  /**\n   * Arrangements view name\n   */\n  arrangementViewsName?: string;\n}\n\n// eslint-disable-next-line\nexport const AccountsTransactionsJourneyConfigurationToken =\n  new InjectionToken<AccountsTransactionsJourneyConfiguration>(\n    'AccountsTransactionsJourneyConfiguration injection token',\n  );\n\nconst configDefaults: AccountsTransactionsJourneyConfiguration = {\n  apiKey: '',\n  itemsPerPage: 10,\n  transactionsMaxPages: 3,\n  paginationType: 'load-more',\n  pendingOnTop: false,\n  transactionsFilterParameters: '',\n  transactionsSortOptions: 'bookingDate DESC',\n  showControls: true,\n  showChangeCategory: true,\n  showCheckImages: false,\n  getOrPostEndpoints: EndpointType.GET_REQUEST,\n  enableDisputeAndInquiry: true,\n  disputeEligibilityDays: 120,\n  disputeTransactionTypes: 'Credit/Debit Card',\n  disputeByBillingStatus: true,\n  disputeTopicId: '',\n  inquireTopicId: '',\n  availableFiltersConfig: {\n    'Current Account': [\n      AvailableFilterEnum.Date,\n      AvailableFilterEnum.CreditDebitIndicator,\n      AvailableFilterEnum.Amount,\n      AvailableFilterEnum.Types,\n      AvailableFilterEnum.BillingStatus,\n      AvailableFilterEnum.CheckSerialNumber,\n    ],\n    'Savings Account': [\n      AvailableFilterEnum.Date,\n      AvailableFilterEnum.CreditDebitIndicator,\n      AvailableFilterEnum.Amount,\n      AvailableFilterEnum.Types,\n      AvailableFilterEnum.BillingStatus,\n      AvailableFilterEnum.CheckSerialNumber,\n    ],\n    'Credit Card': [\n      AvailableFilterEnum.Date,\n      AvailableFilterEnum.CreditDebitIndicator,\n      AvailableFilterEnum.Amount,\n      AvailableFilterEnum.Types,\n      AvailableFilterEnum.BillingStatus,\n    ],\n    Loan: [AvailableFilterEnum.Date, AvailableFilterEnum.CreditDebitIndicator, AvailableFilterEnum.Amount],\n    'Term Deposit': [AvailableFilterEnum.Date, AvailableFilterEnum.CreditDebitIndicator, AvailableFilterEnum.Amount],\n    'Debit Card': [AvailableFilterEnum.Date, AvailableFilterEnum.CreditDebitIndicator, AvailableFilterEnum.Amount],\n    'Investment Account': [\n      AvailableFilterEnum.Date,\n      AvailableFilterEnum.CreditDebitIndicator,\n      AvailableFilterEnum.Amount,\n    ],\n  },\n  showAccountIcons: true,\n  enableManageAccounts: true,\n  enableTransferButton: true,\n  productKindsWithGraphicalRepresentation: ProductKindUri.CREDIT_CARD,\n  productKindsWithExternalDetailsPage: [],\n  creditLimitViewMode: 'emptied',\n  accountAliasDisplayLevel: AccountAliasDisplayingLevel.USER,\n  accountInfoProperties: defaultAccountInfoConfiguration,\n  arrangementViewsName: undefined,\n};\n\n@Injectable()\nexport class AccountsTransactionsJourneyService {\n  private _config: AccountsTransactionsJourneyConfiguration;\n\n  constructor(\n    @Optional()\n    @Inject(AccountsTransactionsJourneyConfigurationToken)\n    config: Partial<AccountsTransactionsJourneyConfiguration>,\n    @Optional() private readonly itemModel: ItemModel,\n  ) {\n    config = config || {};\n    this._config = { ...configDefaults, ...config };\n    // update the API key from ItemModel if it was not provided from a static config\n    if (this.itemModel && (config.apiKey === undefined || config.showCheckImages === undefined)) {\n      combineLatest([\n        this.itemModel.property<string>('apiKey', this._config.apiKey),\n        this.itemModel.property<boolean>('showCheckImages', this._config.showCheckImages),\n      ])\n        .subscribe({\n          next: (values: [string, boolean]) => {\n            if (config.apiKey === undefined) {\n              this._config.apiKey = values[0];\n            }\n            if (config.showCheckImages === undefined) {\n              this._config.showCheckImages = !!values[1];\n            }\n          },\n        } as NextObserver<[string, boolean]>)\n        .unsubscribe();\n    }\n  }\n\n  get defaults(): AccountsTransactionsJourneyConfiguration {\n    return configDefaults;\n  }\n\n  get apiKey(): string {\n    return this._config.apiKey;\n  }\n\n  get itemsPerPage(): number {\n    return this._config.itemsPerPage;\n  }\n\n  get transactionsMaxPages(): number {\n    return this._config.transactionsMaxPages;\n  }\n\n  get paginationType(): string {\n    return this._config.paginationType;\n  }\n\n  get pendingOnTop(): boolean {\n    return this._config.pendingOnTop;\n  }\n\n  get transactionsFilterParameters(): string {\n    return this._config.transactionsFilterParameters;\n  }\n\n  get transactionsSortOptions(): string {\n    return this._config.transactionsSortOptions;\n  }\n\n  get showControls(): boolean {\n    return this._config.showControls;\n  }\n\n  get showChangeCategory(): boolean {\n    return this._config.showChangeCategory;\n  }\n\n  get showCheckImages(): boolean {\n    return this._config.showCheckImages;\n  }\n\n  get getOrPostEndpoints(): EndpointType {\n    return this._config.getOrPostEndpoints;\n  }\n\n  get enableDisputeAndInquiry(): boolean {\n    return this._config.enableDisputeAndInquiry;\n  }\n\n  get disputeEligibilityDays(): number {\n    return this._config.disputeEligibilityDays;\n  }\n\n  get disputeTransactionTypes(): string {\n    return this._config.disputeTransactionTypes;\n  }\n\n  get disputeByBillingStatus(): boolean {\n    return this._config.disputeByBillingStatus;\n  }\n\n  get disputeTopicId(): string {\n    return this._config.disputeTopicId;\n  }\n\n  get inquireTopicId(): string {\n    return this._config.inquireTopicId;\n  }\n\n  get availableFiltersConfig(): AvailableFiltersConfig {\n    return this._config.availableFiltersConfig;\n  }\n\n  get enableManageAccounts(): boolean {\n    return this._config.enableManageAccounts;\n  }\n\n  get showAccountIcons(): boolean {\n    return this._config.showAccountIcons;\n  }\n\n  get enableTransferButton(): boolean {\n    return this._config.enableTransferButton;\n  }\n\n  get productKindsWithGraphicalRepresentation(): ProductKindUri | ProductKindUri[] {\n    return this._config.productKindsWithGraphicalRepresentation;\n  }\n\n  get productKindsWithExternalDetailsPage(): string | string[] {\n    return this._config.productKindsWithExternalDetailsPage;\n  }\n\n  get creditLimitViewMode(): CreditLimitViewMode {\n    return this._config.creditLimitViewMode;\n  }\n\n  get accountAliasDisplayLevel(): AccountAliasDisplayingLevel {\n    return this._config.accountAliasDisplayLevel;\n  }\n\n  /**\n   * Account info properties configuration\n   */\n  get accountInfoProperties(): AccountInfoPropertiesConfiguration {\n    return this._config.accountInfoProperties;\n  }\n\n  get arrangementViewsName(): string | undefined {\n    return this._config.arrangementViewsName;\n  }\n}\n"]}