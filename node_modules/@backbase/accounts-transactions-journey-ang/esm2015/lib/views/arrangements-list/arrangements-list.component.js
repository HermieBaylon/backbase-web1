import { Component, Optional } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { AccountsTransactionsJourneyService } from '../../accounts-transactions-journey-config.service';
import { AccountsCommunicationService } from '../../services/accounts-communication.service';
import { AccountsPaymentsCommunication } from '../../services/accounts-payments-communication';
import { AccountsListBaseComponent } from '../accounts-list-base/accounts-list-base.component';
import * as i0 from "@angular/core";
import * as i1 from "../../accounts-transactions-journey-config.service";
import * as i2 from "@angular/router";
import * as i3 from "../../services/accounts-communication.service";
import * as i4 from "../../services/accounts-payments-communication";
import * as i5 from "@backbase/ui-ang/header";
import * as i6 from "@backbase/product-summary-list-widget-ang";
import * as i7 from "@angular/common";
export class ArrangementsListComponent extends AccountsListBaseComponent {
    /**
     * @internal
     * @param config
     * @param router
     * @param route
     * @param accountsCommunicationService
     * @param accountsPaymentsCommunication
     */
    constructor(
    /**
     * Journey configuration
     */
    config, router, route, accountsCommunicationService, accountsPaymentsCommunication) {
        super(config, router, route, accountsCommunicationService);
        this.accountsPaymentsCommunication = accountsPaymentsCommunication;
    }
    /**
     * Navigates to transfer payment
     *
     * @param arrangementId
     */
    onPayNowClick(arrangementId) {
        var _a;
        (_a = this.accountsPaymentsCommunication) === null || _a === void 0 ? void 0 : _a.payNowEvent(arrangementId);
    }
}
/** @nocollapse */ ArrangementsListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ArrangementsListComponent, deps: [{ token: i1.AccountsTransactionsJourneyService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: i3.AccountsCommunicationService, optional: true }, { token: i4.AccountsPaymentsCommunication, optional: true }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ ArrangementsListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ArrangementsListComponent, selector: "bb-arrangements-list", usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"config.enableManageAccounts; else titleOnly\">\n  <div class=\"bb-heading-widget heading-widget px-0 flex-row align-items-center\">\n    <bb-header-ui headingType=\"h1\" headingClasses=\"bb-heading-widget__heading\" [heading]=\"myAccounts\"></bb-header-ui>\n    <button\n      (click)=\"navigateToAccountManagement()\"\n      class=\"bb-heading-widget__button btn btn-link w-auto bb-button bb-button--xs-hide-text m-0\"\n    >\n      <i aria-hidden=\"true\" class=\"bb-icon bb-icon-settings\"></i>\n      <span>{{ manageAccounts }}</span>\n    </button>\n  </div>\n</ng-container>\n\n<ng-template #titleOnly>\n  <div class=\"bb-heading-widget heading-widget\">\n    <bb-header-ui headingType=\"h1\" headingClasses=\"bb-heading-widget__heading\" [heading]=\"myAccounts\"></bb-header-ui>\n  </div>\n</ng-template>\n\n<bb-arrangements-list-widget\n  [showIcons]=\"config.showAccountIcons\"\n  (selectProduct)=\"onProductSelect($event)\"\n  (payNowClick)=\"onPayNowClick($event)\"\n  [viewName]=\"config.arrangementViewsName\"\n></bb-arrangements-list-widget>\n", components: [{ type: i5.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i6.ArrangementsListWidgetComponent, selector: "bb-arrangements-list-widget", inputs: ["viewName"], outputs: ["payNowClick"] }], directives: [{ type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ArrangementsListComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-arrangements-list',
                    templateUrl: 'arrangements-list.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.AccountsTransactionsJourneyService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: i3.AccountsCommunicationService, decorators: [{
                    type: Optional
                }] }, { type: i4.AccountsPaymentsCommunication, decorators: [{
                    type: Optional
                }] }]; } });
//# sourceMappingURL=arrangements-list.component.js.map