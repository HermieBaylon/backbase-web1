{"version":3,"file":"account-info-container.component.js","sourceRoot":"","sources":["../../../../../../../../libs/accounts-transactions-journey/src/lib/views/account-info/account-info-container/account-info-container.component.ts","../../../../../../../../libs/accounts-transactions-journey/src/lib/views/account-info/account-info-container/account-info-container.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { MaskableAttribute } from '@backbase/data-ang/arrangements';\nimport { AccountArrangementItem, isDefined, ProductMaskableAttribute } from '@backbase/product-summary-common-ang';\nimport { getValue } from '@backbase/accounts-transactions-journeys-shared-util-transform-ang';\nimport {\n  AccountInfoProperty,\n  AccountInfoPropertyType,\n} from '@backbase/accounts-transactions-journeys-shared-ui-account-ang';\nimport { accountNumberToMaskableAttribute } from '@backbase/accounts-transactions-journeys-shared-util-account-ang';\nimport { AccountInfoPropertyGroup } from '../model/types';\n\n@Component({\n  selector: 'bb-account-info-container',\n  templateUrl: './account-info-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AccountInfoContainerComponent implements OnChanges {\n  /**\n   * Account data\n   */\n  @Input() account: AccountArrangementItem | undefined;\n  /**\n   * Account info properties configuration\n   */\n  @Input() propertiesConfiguration: AccountInfoPropertyGroup[] = [];\n  /**\n   * Currency displaying mode\n   */\n  @Input() currencyFormat: 'code' | 'symbol' = 'symbol';\n  /**\n   * Date format\n   */\n  @Input() dateFormat = 'longDate';\n  /**\n   * Attributes configuration\n   */\n  @Input() attributesConfiguration: ProductMaskableAttribute[] = [];\n  /**\n   * Mask attribute event emitter\n   */\n  @Output() mask: EventEmitter<ProductMaskableAttribute> = new EventEmitter<ProductMaskableAttribute>();\n\n  /**\n   * Sanitized properties configuration\n   */\n  propertyGroups: AccountInfoPropertyGroup[] = [];\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.account || changes.propertiesConfiguration) {\n      this.propertyGroups = this.getDefinedPropertyGroups();\n    }\n  }\n\n  isPropertyMaskable(property: AccountInfoProperty): boolean {\n    const attributeName = this.getMaskableAttributeName(property);\n    return (this.account?.unmaskableAttributes ?? []).includes(attributeName);\n  }\n\n  isPropertyMasked(property: AccountInfoProperty): boolean {\n    const attribute = this.getMaskableAttribute(property);\n    return attribute.masked ?? true;\n  }\n\n  onPropertyMasked(property: AccountInfoProperty, isMasked: boolean): void {\n    const attribute = this.getMaskableAttribute(property);\n    this.mask.emit({ ...attribute, masked: isMasked });\n  }\n\n  private getMaskableAttribute(property: AccountInfoProperty): ProductMaskableAttribute {\n    const attributeName = this.getMaskableAttributeName(property);\n    return this.attributesConfiguration.find((item) => item.attributeName === attributeName) || { attributeName };\n  }\n\n  private getMaskableAttributeName(\n    property: AccountInfoProperty,\n    defaultType: MaskableAttribute = 'IBAN',\n  ): MaskableAttribute {\n    return property.type === AccountInfoPropertyType.ACCOUNT_NUMBER\n      ? accountNumberToMaskableAttribute(property.numberType)\n      : defaultType;\n  }\n\n  private getDefinedPropertyGroups(): AccountInfoPropertyGroup[] {\n    return this.propertiesConfiguration\n      .map((group) => {\n        const properties = group.properties.filter((property) => this.hasValue(property));\n        return { ...group, properties };\n      })\n      .filter((group) => group.properties.length > 0);\n  }\n\n  private hasValue(property: AccountInfoProperty): boolean {\n    const value = getValue(this.account, property.key ?? '');\n    return Array.isArray(value) ? value.length > 0 : isDefined(value);\n  }\n}\n","<div class=\"bb-list\" [attr.data-role]=\"'account-info-container-' + account?.product?.productKind?.kindUri\">\n  <ng-container *ngFor=\"let group of propertyGroups\">\n    <div class=\"bb-product-summary-details\" [class.card]=\"!group.hideCard\" data-role=\"account-info-container-group\">\n      <div\n        [ngClass]=\"{ 'card-header': !group.hideCard, 'bb-block bb-block--lg': group.hideCard }\"\n        data-role=\"account-info-container-header\"\n      >\n        <h3>{{ group.title }}</h3>\n      </div>\n      <div [class.card-body]=\"!group.hideCard\" data-role=\"account-info-container-body\">\n        <div\n          *ngFor=\"let row of group.properties | bbSplitArray: 2\"\n          class=\"bb-account-details-row bb-stack bb-stack--wrap bb-stack--align-top\"\n        >\n          <div\n            *ngFor=\"let property of row\"\n            class=\"bb-account-details-item bb-stack__item bb-stack__item--fill\"\n            [attr.data-role]=\"'account-info-container-' + property.type\"\n          >\n            <bb-account-info-property\n              [account]=\"account\"\n              [property]=\"property\"\n              [currencyFormat]=\"currencyFormat\"\n              [dateFormat]=\"dateFormat\"\n              [isMaskable]=\"isPropertyMaskable(property)\"\n              [isMasked]=\"isPropertyMasked(property)\"\n              (masked)=\"onPropertyMasked(property, $event)\"\n            ></bb-account-info-property>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</div>\n"]}