{"version":3,"file":"account-info-view.component.js","sourceRoot":"","sources":["../../../../../../../libs/accounts-transactions-journey/src/lib/views/account-info/account-info-view.component.ts","../../../../../../../libs/accounts-transactions-journey/src/lib/views/account-info/account-info-view.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAC1C,OAAO,EAA0B,6BAA6B,EAAE,MAAM,sCAAsC,CAAC;AAC7G,OAAO,EAAE,cAAc,EAAE,MAAM,8CAA8C,CAAC;AAC9E,OAAO,EAAE,kCAAkC,EAAE,MAAM,oDAAoD,CAAC;;;;;;AAGxG;;GAEG;AAMH,MAAM,OAAO,wBAAwB;IACnC;;;OAGG;IACH,YAA6B,oBAAwD;QAAxD,yBAAoB,GAApB,oBAAoB,CAAoC;IAAG,CAAC;IAEzF;;;OAGG;IACH,oBAAoB,CAAC,OAA+B;;QAClD,MAAM,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC;QACtE,MAAM,OAAO,GAAG,CAAA,MAAA,MAAA,OAAO,CAAC,OAAO,0CAAE,WAAW,0CAAE,OAAO,KAAI,SAAS,CAAC;QACnE,OAAO,OAAO,IAAI,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC;IACnF,CAAC;;yIAfU,wBAAwB;6HAAxB,wBAAwB,0CAFxB,CAAC,cAAc,EAAE,6BAA6B,CAAC,0BCZ5D,k+EA+CA;4FDjCa,wBAAwB;kBALpC,SAAS;mBAAC;oBACT,QAAQ,EAAE,iBAAiB;oBAC3B,WAAW,EAAE,kCAAkC;oBAC/C,SAAS,EAAE,CAAC,cAAc,EAAE,6BAA6B,CAAC;iBAC3D","sourcesContent":["import { Component } from '@angular/core';\nimport { AccountArrangementItem, ProductSummaryAccountsService } from '@backbase/product-summary-common-ang';\nimport { AccountService } from '@backbase/product-summary-details-widget-ang';\nimport { AccountsTransactionsJourneyService } from '../../accounts-transactions-journey-config.service';\nimport { AccountInfoPropertyGroup } from './model/types';\n\n/**\n * Accounts Transactions journey Info View\n */\n@Component({\n  selector: 'bb-account-info',\n  templateUrl: 'account-info-view.component.html',\n  providers: [AccountService, ProductSummaryAccountsService],\n})\nexport class AccountInfoViewComponent {\n  /**\n   * @internal\n   * @param configurationService\n   */\n  constructor(private readonly configurationService: AccountsTransactionsJourneyService) {}\n\n  /**\n   * Returns properties configuration for a given account\n   * @param account\n   */\n  getAccountProperties(account: AccountArrangementItem): AccountInfoPropertyGroup[] {\n    const configuration = this.configurationService.accountInfoProperties;\n    const kindUri = account.product?.productKind?.kindUri || 'default';\n    return kindUri in configuration ? configuration[kindUri] : configuration.default;\n  }\n}\n","<bb-product-summary-details></bb-product-summary-details>\n\n<ng-template bbProductSummaryDetailsViewCustomizable let-hostRef let-account=\"context\">\n  <ng-container\n    bbProductSummaryDetailsHeaderCustomizable\n    [bbHostRef]=\"hostRef\"\n    [bbTemplateContext]=\"account\"\n  ></ng-container>\n  <ng-container bbProductSummaryDetailsCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"account\"></ng-container>\n  <ng-template bbProductSummaryDetailsCreditCardCustomizable>\n    <ng-container *ngTemplateOutlet=\"accountInfo; context: { hostRef: hostRef, account: account }\"></ng-container>\n  </ng-template>\n  <ng-template bbProductSummaryDetailsCurrentAccountCustomizable>\n    <ng-container *ngTemplateOutlet=\"accountInfo; context: { hostRef: hostRef, account: account }\"></ng-container>\n  </ng-template>\n  <ng-template bbProductSummaryDetailsDebitCardCustomizable>\n    <ng-container *ngTemplateOutlet=\"accountInfo; context: { hostRef: hostRef, account: account }\"></ng-container>\n  </ng-template>\n  <ng-template bbProductSummaryDetailsInvestmentAccountCustomizable>\n    <ng-container *ngTemplateOutlet=\"accountInfo; context: { hostRef: hostRef, account: account }\"></ng-container>\n  </ng-template>\n  <ng-template bbProductSummaryDetailsLoanCustomizable>\n    <ng-container *ngTemplateOutlet=\"accountInfo; context: { hostRef: hostRef, account: account }\"></ng-container>\n  </ng-template>\n  <ng-template bbProductSummaryDetailsOtherCustomizable>\n    <ng-container *ngTemplateOutlet=\"accountInfo; context: { hostRef: hostRef, account: account }\"></ng-container>\n  </ng-template>\n  <ng-template bbProductSummaryDetailsSavingsAccountCustomizable>\n    <ng-container *ngTemplateOutlet=\"accountInfo; context: { hostRef: hostRef, account: account }\"></ng-container>\n  </ng-template>\n  <ng-template bbProductSummaryDetailsTermDepositCustomizable>\n    <ng-container *ngTemplateOutlet=\"accountInfo; context: { hostRef: hostRef, account: account }\"></ng-container>\n  </ng-template>\n</ng-template>\n\n<ng-template #accountInfo let-hostRef=\"hostRef\" let-account=\"account\">\n  <bb-account-info-container\n    [account]=\"account\"\n    [propertiesConfiguration]=\"getAccountProperties(account)\"\n    [attributesConfiguration]=\"hostRef.maskableAttributes\"\n    (mask)=\"\n      $event.masked\n        ? hostRef.onMaskAttribute($event.attributeName, account)\n        : hostRef.onUnmaskAttribute($event.attributeName, account)\n    \"\n  ></bb-account-info-container>\n</ng-template>\n"]}