import { Component } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { AccountsTransactionsJourneyService } from '../accounts-transactions-journey-config.service';
import { TransactionsHelperService } from '../transactions-details-helper.service';
import * as i0 from "@angular/core";
import * as i1 from "../accounts-transactions-journey-config.service";
import * as i2 from "@angular/router";
import * as i3 from "../transactions-details-helper.service";
import * as i4 from "@backbase/transactions-list-widget-ang";
export class TransactionsListComponent {
    constructor(config, router, route, shared) {
        this.config = config;
        this.router = router;
        this.route = route;
        this.shared = shared;
        this.shared.onCloseDetail.subscribe((event) => {
            if (event) {
                this.router.navigate(['../list'], { relativeTo: this.route });
            }
        });
    }
    getTransaction(transaction) {
        this.shared.setTransactionId(transaction.id || '');
        this.router.navigate(['./detail', { transactionId: transaction.id }], {
            relativeTo: this.route,
        });
    }
    transactionsLoaded(transactionsList) {
        if (transactionsList) {
            this.shared.setTransactions(transactionsList.items);
        }
    }
    ngOnInit() {
        if (this.route.snapshot.children[0] && this.route.snapshot.children[0].params['transactionId']) {
            this.shared.setTransactionId(this.route.snapshot.children[0].params['transactionId']);
        }
    }
}
/** @nocollapse */ TransactionsListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionsListComponent, deps: [{ token: i1.AccountsTransactionsJourneyService }, { token: i2.Router }, { token: i2.ActivatedRoute }, { token: i3.TransactionsHelperService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ TransactionsListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TransactionsListComponent, selector: "bb-transactions-list-view", ngImport: i0, template: `
    <bb-transactions-list-widget
      [googleAPIKey]="config.apiKey"
      [pageSize]="config.itemsPerPage"
      [maxNavPages]="config.transactionsMaxPages"
      [paginationType]="config.paginationType"
      [showPendingTransactionsOnTop]="config.pendingOnTop"
      [initialFilterOptions]="config.transactionsFilterParameters"
      [initialSortOptions]="config.transactionsSortOptions"
      [showControls]="true"
      [showChangeCategory]="true"
      [showCheckImage]="config.showCheckImages"
      [getOrPostEndpoints]="config.getOrPostEndpoints"
      [enableDisputeAndInquiry]="config.enableDisputeAndInquiry"
      [disputeEligibilityDays]="config.disputeEligibilityDays"
      [disputeTransactionTypes]="config.disputeTransactionTypes"
      [disputeByBillingStatus]="config.disputeByBillingStatus"
      [inquireTopicId]="config.inquireTopicId"
      [disputeTopicId]="config.disputeTopicId"
      [availableFiltersConfig]="config.availableFiltersConfig"
      (transactionSelected)="getTransaction($event)"
      (transactionsLoaded)="transactionsLoaded($event)"
    ></bb-transactions-list-widget>
    <router-outlet></router-outlet>
  `, isInline: true, components: [{ type: i4.TransactionsListWidgetComponent, selector: "bb-transactions-list-widget" }], directives: [{ type: i2.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionsListComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-transactions-list-view',
                    template: `
    <bb-transactions-list-widget
      [googleAPIKey]="config.apiKey"
      [pageSize]="config.itemsPerPage"
      [maxNavPages]="config.transactionsMaxPages"
      [paginationType]="config.paginationType"
      [showPendingTransactionsOnTop]="config.pendingOnTop"
      [initialFilterOptions]="config.transactionsFilterParameters"
      [initialSortOptions]="config.transactionsSortOptions"
      [showControls]="true"
      [showChangeCategory]="true"
      [showCheckImage]="config.showCheckImages"
      [getOrPostEndpoints]="config.getOrPostEndpoints"
      [enableDisputeAndInquiry]="config.enableDisputeAndInquiry"
      [disputeEligibilityDays]="config.disputeEligibilityDays"
      [disputeTransactionTypes]="config.disputeTransactionTypes"
      [disputeByBillingStatus]="config.disputeByBillingStatus"
      [inquireTopicId]="config.inquireTopicId"
      [disputeTopicId]="config.disputeTopicId"
      [availableFiltersConfig]="config.availableFiltersConfig"
      (transactionSelected)="getTransaction($event)"
      (transactionsLoaded)="transactionsLoaded($event)"
    ></bb-transactions-list-widget>
    <router-outlet></router-outlet>
  `,
                }]
        }], ctorParameters: function () { return [{ type: i1.AccountsTransactionsJourneyService }, { type: i2.Router }, { type: i2.ActivatedRoute }, { type: i3.TransactionsHelperService }]; } });
//# sourceMappingURL=transactions-list.component.js.map