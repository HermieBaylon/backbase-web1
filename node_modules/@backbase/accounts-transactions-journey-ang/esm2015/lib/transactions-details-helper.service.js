import { Injectable } from '@angular/core';
import { BehaviorSubject, Subject } from 'rxjs';
import { map, mergeMap } from 'rxjs/operators';
import * as i0 from "@angular/core";
export class TransactionsHelperService {
    constructor() {
        this.transactionIdSubject = new BehaviorSubject('');
        this.transactionsSubject = new BehaviorSubject(undefined);
        this.onCloseDetailSubject = new Subject();
        this.currentTransaction = this.transactionIdSubject.pipe(mergeMap((id) => this.transactionsSubject.pipe(map((transaction) => transaction === null || transaction === void 0 ? void 0 : transaction.find((x) => id === x.id)))));
        this.onCloseDetail = this.onCloseDetailSubject.asObservable();
    }
    setCloseDetail() {
        this.onCloseDetailSubject.next(true);
    }
    setTransactions(transactions) {
        this.transactionsSubject.next(transactions);
    }
    setTransactionId(transactionId) {
        this.transactionIdSubject.next(transactionId);
    }
}
/** @nocollapse */ TransactionsHelperService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionsHelperService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ TransactionsHelperService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionsHelperService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionsHelperService, decorators: [{
            type: Injectable
        }] });
//# sourceMappingURL=transactions-details-helper.service.js.map