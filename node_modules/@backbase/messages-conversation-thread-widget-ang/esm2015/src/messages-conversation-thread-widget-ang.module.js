import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ReactiveFormsModule } from '@angular/forms';
import { BackbaseCoreModule } from '@backbase/foundation-ang/core';
import { BaseMessagesConversationThreadModule, MessagesConversationMessageModule, MessagesManipulationConfirmModalModule, MessagesRequestErrorModule, MessagesUploadAttachmentsModule, } from '@backbase/messages-common';
import { AlertModule } from '@backbase/ui-ang/alert';
import { BadgeModule } from '@backbase/ui-ang/badge';
import { EmptyStateModule } from '@backbase/ui-ang/empty-state';
import { IconModule } from '@backbase/ui-ang/icon';
import { ButtonModule } from '@backbase/ui-ang/button';
import { ModalModule } from '@backbase/ui-ang/modal';
import { TooltipModule } from '@backbase/ui-ang/tooltip-directive';
import { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';
import { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';
import { LoadButtonModule } from '@backbase/ui-ang/load-button';
import { RichTextEditorModule } from '@backbase/ui-ang/rich-text-editor';
import { MessagesConversationThreadCustomizableDirective, MessagesConversationThreadWidgetComponent, } from './messages-conversation-thread-widget-ang.component';
import { MessagesConversationThreadWidgetService } from './services/messages-conversation-thread-widget-ang.service';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/foundation-ang/core";
const components = [MessagesConversationThreadWidgetComponent];
const directives = [MessagesConversationThreadCustomizableDirective];
const uiModules = [
    ButtonModule,
    BadgeModule,
    IconModule,
    RichTextEditorModule,
    ModalModule,
    EmptyStateModule,
    LoadingIndicatorModule,
    TooltipModule,
    LoadButtonModule,
    AlertModule,
    InputValidationMessageModule,
];
const innerModules = [
    BaseMessagesConversationThreadModule,
    MessagesManipulationConfirmModalModule,
    MessagesUploadAttachmentsModule,
    MessagesRequestErrorModule,
    MessagesConversationMessageModule,
];
export class MessagesConversationThreadWidgetModule {
}
MessagesConversationThreadWidgetModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesConversationThreadWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
MessagesConversationThreadWidgetModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesConversationThreadWidgetModule, declarations: [MessagesConversationThreadWidgetComponent, MessagesConversationThreadCustomizableDirective], imports: [CommonModule, i1.BackbaseCoreModule, ReactiveFormsModule, BaseMessagesConversationThreadModule,
        MessagesManipulationConfirmModalModule,
        MessagesUploadAttachmentsModule,
        MessagesRequestErrorModule,
        MessagesConversationMessageModule, ButtonModule,
        BadgeModule,
        IconModule,
        RichTextEditorModule,
        ModalModule,
        EmptyStateModule,
        LoadingIndicatorModule,
        TooltipModule,
        LoadButtonModule,
        AlertModule,
        InputValidationMessageModule], exports: [ReactiveFormsModule, MessagesConversationThreadWidgetComponent, MessagesConversationThreadCustomizableDirective, ButtonModule,
        BadgeModule,
        IconModule,
        RichTextEditorModule,
        ModalModule,
        EmptyStateModule,
        LoadingIndicatorModule,
        TooltipModule,
        LoadButtonModule,
        AlertModule,
        InputValidationMessageModule, BaseMessagesConversationThreadModule,
        MessagesManipulationConfirmModalModule,
        MessagesUploadAttachmentsModule,
        MessagesRequestErrorModule,
        MessagesConversationMessageModule] });
MessagesConversationThreadWidgetModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesConversationThreadWidgetModule, providers: [MessagesConversationThreadWidgetService], imports: [[
            CommonModule,
            BackbaseCoreModule.withConfig({
                classMap: { MessagesConversationThreadWidgetComponent },
            }),
            ReactiveFormsModule,
            ...innerModules,
            ...uiModules,
        ], ReactiveFormsModule, ButtonModule,
        BadgeModule,
        IconModule,
        RichTextEditorModule,
        ModalModule,
        EmptyStateModule,
        LoadingIndicatorModule,
        TooltipModule,
        LoadButtonModule,
        AlertModule,
        InputValidationMessageModule, BaseMessagesConversationThreadModule,
        MessagesManipulationConfirmModalModule,
        MessagesUploadAttachmentsModule,
        MessagesRequestErrorModule,
        MessagesConversationMessageModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesConversationThreadWidgetModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        BackbaseCoreModule.withConfig({
                            classMap: { MessagesConversationThreadWidgetComponent },
                        }),
                        ReactiveFormsModule,
                        ...innerModules,
                        ...uiModules,
                    ],
                    declarations: [...components, ...directives],
                    providers: [MessagesConversationThreadWidgetService],
                    exports: [ReactiveFormsModule, ...components, ...directives, ...uiModules, ...innerModules],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZXMtY29udmVyc2F0aW9uLXRocmVhZC13aWRnZXQtYW5nLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2xpYnMvbWVzc2FnZXMtY29udmVyc2F0aW9uLXRocmVhZC13aWRnZXQtYW5nL3NyYy9tZXNzYWdlcy1jb252ZXJzYXRpb24tdGhyZWFkLXdpZGdldC1hbmcubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXJELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ25FLE9BQU8sRUFDTCxvQ0FBb0MsRUFDcEMsaUNBQWlDLEVBQ2pDLHNDQUFzQyxFQUN0QywwQkFBMEIsRUFDMUIsK0JBQStCLEdBQ2hDLE1BQU0sMkJBQTJCLENBQUM7QUFFbkMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3JELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDbkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDbkUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDNUUsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sMkNBQTJDLENB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LENBQUM7aUJBQzVGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBCYWNrYmFzZUNvcmVNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvY29yZSc7XG5pbXBvcnQge1xuICBCYXNlTWVzc2FnZXNDb252ZXJzYXRpb25UaHJlYWRNb2R1bGUsXG4gIE1lc3NhZ2VzQ29udmVyc2F0aW9uTWVzc2FnZU1vZHVsZSxcbiAgTWVzc2FnZXNNYW5pcHVsYXRpb25Db25maXJtTW9kYWxNb2R1bGUsXG4gIE1lc3NhZ2VzUmVxdWVzdEVycm9yTW9kdWxlLFxuICBNZXNzYWdlc1VwbG9hZEF0dGFjaG1lbnRzTW9kdWxlLFxufSBmcm9tICdAYmFja2Jhc2UvbWVzc2FnZXMtY29tbW9uJztcblxuaW1wb3J0IHsgQWxlcnRNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL2FsZXJ0JztcbmltcG9ydCB7IEJhZGdlTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9iYWRnZSc7XG5pbXBvcnQgeyBFbXB0eVN0YXRlTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9lbXB0eS1zdGF0ZSc7XG5pbXBvcnQgeyBJY29uTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9pY29uJztcbmltcG9ydCB7IEJ1dHRvbk1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvYnV0dG9uJztcbmltcG9ydCB7IE1vZGFsTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9tb2RhbCc7XG5pbXBvcnQgeyBUb29sdGlwTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy90b29sdGlwLWRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBMb2FkaW5nSW5kaWNhdG9yTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9sb2FkaW5nLWluZGljYXRvcic7XG5pbXBvcnQgeyBJbnB1dFZhbGlkYXRpb25NZXNzYWdlTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9pbnB1dC12YWxpZGF0aW9uLW1lc3NhZ2UnO1xuaW1wb3J0IHsgTG9hZEJ1dHRvbk1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvbG9hZC1idXR0b24nO1xuaW1wb3J0IHsgUmljaFRleHRFZGl0b3JNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL3JpY2gtdGV4dC1lZGl0b3InO1xuXG5pbXBvcnQge1xuICBNZXNzYWdlc0NvbnZlcnNhdGlvblRocmVhZEN1c3RvbWl6YWJsZURpcmVjdGl2ZSxcbiAgTWVzc2FnZXNDb252ZXJzYXRpb25UaHJlYWRXaWRnZXRDb21wb25lbnQsXG59IGZyb20gJy4vbWVzc2FnZXMtY29udmVyc2F0aW9uLXRocmVhZC13aWRnZXQtYW5nLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBNZXNzYWdlc0NvbnZlcnNhdGlvblRocmVhZFdpZGdldFNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL21lc3NhZ2VzLWNvbnZlcnNhdGlvbi10aHJlYWQtd2lkZ2V0LWFuZy5zZXJ2aWNlJztcblxuY29uc3QgY29tcG9uZW50cyA9IFtNZXNzYWdlc0NvbnZlcnNhdGlvblRocmVhZFdpZGdldENvbXBvbmVudF07XG5jb25zdCBkaXJlY3RpdmVzID0gW01lc3NhZ2VzQ29udmVyc2F0aW9uVGhyZWFkQ3VzdG9taXphYmxlRGlyZWN0aXZlXTtcbmNvbnN0IHVpTW9kdWxlcyA9IFtcbiAgQnV0dG9uTW9kdWxlLFxuICBCYWRnZU1vZHVsZSxcbiAgSWNvbk1vZHVsZSxcbiAgUmljaFRleHRFZGl0b3JNb2R1bGUsXG4gIE1vZGFsTW9kdWxlLFxuICBFbXB0eVN0YXRlTW9kdWxlLFxuICBMb2FkaW5nSW5kaWNhdG9yTW9kdWxlLFxuICBUb29sdGlwTW9kdWxlLFxuICBMb2FkQnV0dG9uTW9kdWxlLFxuICBBbGVydE1vZHVsZSxcbiAgSW5wdXRWYWxpZGF0aW9uTWVzc2FnZU1vZHVsZSxcbl07XG5cbmNvbnN0IGlubmVyTW9kdWxlcyA9IFtcbiAgQmFzZU1lc3NhZ2VzQ29udmVyc2F0aW9uVGhyZWFkTW9kdWxlLFxuICBNZXNzYWdlc01hbmlwdWxhdGlvbkNvbmZpcm1Nb2RhbE1vZHVsZSxcbiAgTWVzc2FnZXNVcGxvYWRBdHRhY2htZW50c01vZHVsZSxcbiAgTWVzc2FnZXNSZXF1ZXN0RXJyb3JNb2R1bGUsXG4gIE1lc3NhZ2VzQ29udmVyc2F0aW9uTWVzc2FnZU1vZHVsZSxcbl07XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgQmFja2Jhc2VDb3JlTW9kdWxlLndpdGhDb25maWcoe1xuICAgICAgY2xhc3NNYXA6IHsgTWVzc2FnZXNDb252ZXJzYXRpb25UaHJlYWRXaWRnZXRDb21wb25lbnQgfSxcbiAgICB9KSxcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICAgIC4uLmlubmVyTW9kdWxlcyxcbiAgICAuLi51aU1vZHVsZXMsXG4gIF0sXG4gIGRlY2xhcmF0aW9uczogWy4uLmNvbXBvbmVudHMsIC4uLmRpcmVjdGl2ZXNdLFxuICBwcm92aWRlcnM6IFtNZXNzYWdlc0NvbnZlcnNhdGlvblRocmVhZFdpZGdldFNlcnZpY2VdLFxuICBleHBvcnRzOiBbUmVhY3RpdmVGb3Jtc01vZHVsZSwgLi4uY29tcG9uZW50cywgLi4uZGlyZWN0aXZlcywgLi4udWlNb2R1bGVzLCAuLi5pbm5lck1vZHVsZXNdLFxufSlcbmV4cG9ydCBjbGFzcyBNZXNzYWdlc0NvbnZlcnNhdGlvblRocmVhZFdpZGdldE1vZHVsZSB7fVxuIl19