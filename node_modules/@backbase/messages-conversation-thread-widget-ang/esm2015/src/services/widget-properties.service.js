import { Injectable, Optional } from '@angular/core';
import { defaultModelObservable } from '@backbase/messages-common';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/foundation-ang/core";
const DefaultWidgetProperties = {
    customerServiceTitle: 'Customer Service',
    mailboxTypeTitle: 'Inbox',
    maxAttachmentSize: '10',
    replyMessageMaxLength: '300',
};
export class WidgetPropertiesService {
    constructor(itemModel) {
        this.itemModel = itemModel;
    }
    /**
     * Customer service title
     */
    get customerServiceTitle() {
        if (!this.itemModel) {
            return defaultModelObservable(DefaultWidgetProperties.customerServiceTitle);
        }
        return this.itemModel.property('customerServiceTitle', DefaultWidgetProperties.customerServiceTitle);
    }
    /**
     * Mailbox type title
     */
    get mailboxTypeTitle() {
        if (!this.itemModel) {
            return defaultModelObservable(DefaultWidgetProperties.mailboxTypeTitle);
        }
        return this.itemModel.property('mailboxTypeTitle', DefaultWidgetProperties.mailboxTypeTitle);
    }
    /**
     * Max attachment size
     */
    get maxAttachmentSize() {
        if (!this.itemModel) {
            return defaultModelObservable(DefaultWidgetProperties.maxAttachmentSize);
        }
        return this.itemModel.property('maxAttachmentSize', DefaultWidgetProperties.maxAttachmentSize);
    }
    /**
     * Reply message max length
     */
    get replyMessageMaxLength() {
        if (!this.itemModel) {
            return defaultModelObservable(DefaultWidgetProperties.replyMessageMaxLength);
        }
        return this.itemModel.property('replyMessageMaxLength', DefaultWidgetProperties.replyMessageMaxLength);
    }
}
WidgetPropertiesService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: WidgetPropertiesService, deps: [{ token: i1.ItemModel, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
WidgetPropertiesService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: WidgetPropertiesService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: WidgetPropertiesService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.ItemModel, decorators: [{
                    type: Optional
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0LXByb3BlcnRpZXMuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbWVzc2FnZXMtY29udmVyc2F0aW9uLXRocmVhZC13aWRnZXQtYW5nL3NyYy9zZXJ2aWNlcy93aWRnZXQtcHJvcGVydGllcy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXJELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDOzs7QUFHbkUsTUFBTSx1QkFBdUIsR0FBRztJQUM5QixvQkFBb0IsRUFBRSxrQkFBa0I7SUFDeEMsZ0JBQWdCLEVBQUUsT0FBTztJQUN6QixpQkFBaUIsRUFBRSxJQUFJO0lBQ3ZCLHFCQUFxQixFQUFFLEtBQUs7Q0FDN0IsQ0FBQztBQUdGLE1BQU0sT0FBTyx1QkFBdUI7SUFDbEMsWUFBeUMsU0FBcUI7UUFBckIsY0FBUyxHQUFULFNBQVMsQ0FBWTtJQUFHLENBQUM7SUFDbEU7O09BRUc7SUFDSCxJQUFJLG9CQUFvQjtRQUN0QixJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNuQixPQUFPLHNCQUFzQixDQUFDLHVCQUF1QixDQUFDLG9CQUFvQixDQUFDLENBQUM7U0FDN0U7UUFFRCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLHNCQUFzQixFQUFFLHVCQUF1QixDQUFDLG9CQUFvQixDQUFDLENBQUM7SUFDdkcsQ0FBQztJQUVEOztPQUVHO0lBQ0gsSUFBSSxnQkFBZ0I7UUFDbEIsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDbkIsT0FBTyxzQkFBc0IsQ0FBQyx1QkFBdUIsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1NBQ3pFO1FBRUQsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsRUFBRSx1QkFBdUIsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQy9GLENBQUM7SUFFRDs7T0FFRztJQUNILElBQUksaUJBQWlCO1FBQ25CLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ25CLE9BQU8sc0JBQXNCLENBQUMsdUJBQXVCLENBQUMsaUJBQWlCLENBQUMsQ0FBQztTQUMxRTtRQUVELE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsbUJBQW1CLEVBQUUsdUJBQXVCLENBQUMsaUJBQWlCLENBQUMsQ0FBQztJQUNqRyxDQUFDO0lBRUQ7O09BRUc7SUFDSCxJQUFJLHFCQUFxQjtRQUN2QixJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNuQixPQUFPLHNCQUFzQixDQUFDLHVCQUF1QixDQUFDLHFCQUFxQixDQUFDLENBQUM7U0FDOUU7UUFFRCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLHVCQUF1QixFQUFFLHVCQUF1QixDQUFDLHFCQUFxQixDQUFDLENBQUM7SUFDekcsQ0FBQzs7cUhBNUNVLHVCQUF1Qjt5SEFBdkIsdUJBQXVCOzRGQUF2Qix1QkFBdUI7a0JBRG5DLFVBQVU7OzBCQUVJLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSXRlbU1vZGVsIH0gZnJvbSAnQGJhY2tiYXNlL2ZvdW5kYXRpb24tYW5nL2NvcmUnO1xuaW1wb3J0IHsgZGVmYXVsdE1vZGVsT2JzZXJ2YWJsZSB9IGZyb20gJ0BiYWNrYmFzZS9tZXNzYWdlcy1jb21tb24nO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG5jb25zdCBEZWZhdWx0V2lkZ2V0UHJvcGVydGllcyA9IHtcbiAgY3VzdG9tZXJTZXJ2aWNlVGl0bGU6ICdDdXN0b21lciBTZXJ2aWNlJyxcbiAgbWFpbGJveFR5cGVUaXRsZTogJ0luYm94JyxcbiAgbWF4QXR0YWNobWVudFNpemU6ICcxMCcsXG4gIHJlcGx5TWVzc2FnZU1heExlbmd0aDogJzMwMCcsXG59O1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgV2lkZ2V0UHJvcGVydGllc1NlcnZpY2Uge1xuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBwcml2YXRlIHJlYWRvbmx5IGl0ZW1Nb2RlbD86IEl0ZW1Nb2RlbCkge31cbiAgLyoqXG4gICAqIEN1c3RvbWVyIHNlcnZpY2UgdGl0bGVcbiAgICovXG4gIGdldCBjdXN0b21lclNlcnZpY2VUaXRsZSgpOiBPYnNlcnZhYmxlPHN0cmluZz4ge1xuICAgIGlmICghdGhpcy5pdGVtTW9kZWwpIHtcbiAgICAgIHJldHVybiBkZWZhdWx0TW9kZWxPYnNlcnZhYmxlKERlZmF1bHRXaWRnZXRQcm9wZXJ0aWVzLmN1c3RvbWVyU2VydmljZVRpdGxlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5pdGVtTW9kZWwucHJvcGVydHkoJ2N1c3RvbWVyU2VydmljZVRpdGxlJywgRGVmYXVsdFdpZGdldFByb3BlcnRpZXMuY3VzdG9tZXJTZXJ2aWNlVGl0bGUpO1xuICB9XG5cbiAgLyoqXG4gICAqIE1haWxib3ggdHlwZSB0aXRsZVxuICAgKi9cbiAgZ2V0IG1haWxib3hUeXBlVGl0bGUoKTogT2JzZXJ2YWJsZTxzdHJpbmc+IHtcbiAgICBpZiAoIXRoaXMuaXRlbU1vZGVsKSB7XG4gICAgICByZXR1cm4gZGVmYXVsdE1vZGVsT2JzZXJ2YWJsZShEZWZhdWx0V2lkZ2V0UHJvcGVydGllcy5tYWlsYm94VHlwZVRpdGxlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5pdGVtTW9kZWwucHJvcGVydHkoJ21haWxib3hUeXBlVGl0bGUnLCBEZWZhdWx0V2lkZ2V0UHJvcGVydGllcy5tYWlsYm94VHlwZVRpdGxlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBNYXggYXR0YWNobWVudCBzaXplXG4gICAqL1xuICBnZXQgbWF4QXR0YWNobWVudFNpemUoKTogT2JzZXJ2YWJsZTxzdHJpbmc+IHtcbiAgICBpZiAoIXRoaXMuaXRlbU1vZGVsKSB7XG4gICAgICByZXR1cm4gZGVmYXVsdE1vZGVsT2JzZXJ2YWJsZShEZWZhdWx0V2lkZ2V0UHJvcGVydGllcy5tYXhBdHRhY2htZW50U2l6ZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuaXRlbU1vZGVsLnByb3BlcnR5KCdtYXhBdHRhY2htZW50U2l6ZScsIERlZmF1bHRXaWRnZXRQcm9wZXJ0aWVzLm1heEF0dGFjaG1lbnRTaXplKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXBseSBtZXNzYWdlIG1heCBsZW5ndGhcbiAgICovXG4gIGdldCByZXBseU1lc3NhZ2VNYXhMZW5ndGgoKTogT2JzZXJ2YWJsZTxzdHJpbmc+IHtcbiAgICBpZiAoIXRoaXMuaXRlbU1vZGVsKSB7XG4gICAgICByZXR1cm4gZGVmYXVsdE1vZGVsT2JzZXJ2YWJsZShEZWZhdWx0V2lkZ2V0UHJvcGVydGllcy5yZXBseU1lc3NhZ2VNYXhMZW5ndGgpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLml0ZW1Nb2RlbC5wcm9wZXJ0eSgncmVwbHlNZXNzYWdlTWF4TGVuZ3RoJywgRGVmYXVsdFdpZGdldFByb3BlcnRpZXMucmVwbHlNZXNzYWdlTWF4TGVuZ3RoKTtcbiAgfVxufVxuIl19