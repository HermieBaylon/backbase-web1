{"version":3,"file":"backbase-messages-conversation-thread-widget-ang.js","sources":["../../../../libs/messages-conversation-thread-widget-ang/src/services/messages-conversation-thread-widget-ang.service.ts","../../../../libs/messages-conversation-thread-widget-ang/src/services/widget-properties.service.ts","../../../../libs/messages-conversation-thread-widget-ang/src/messages-conversation-thread-widget-ang.component.ts","../../../../libs/messages-conversation-thread-widget-ang/src/messages-conversation-thread-widget-ang.component.html","../../../../libs/messages-conversation-thread-widget-ang/src/messages-conversation-thread-widget-ang.module.ts","../../../../libs/messages-conversation-thread-widget-ang/backbase-messages-conversation-thread-widget-ang.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { PUBSUB, Pubsub } from '@backbase/foundation-ang/web-sdk';\nimport { AbstractBaseMessagesConversationThreadService } from '@backbase/messages-common';\nimport {\n  ConversationMessageDraftPostRequestBody,\n  ConversationMessageDraftPutRequestBody,\n  ConversationThreadsDeleteResponseBody,\n  DeleteDraftsResponseBody,\n  DraftPostResponseBody,\n  MarkAsReadUnreadPutRequestBody,\n  MarkAsReadUnreadPutResponseBody,\n  MessagecenterHttpService,\n  MessageReplyPostRequestBody,\n  MessageThreadGetResponseBody,\n  PresentationMessagePostResponseBody,\n} from '@backbase/messages-v5-http-ang';\n\nconst bbEventUnreadConversationCountUpdate = 'bb.event.unread-conversation-count.update';\n\n@Injectable()\nexport class MessagesConversationThreadWidgetService extends AbstractBaseMessagesConversationThreadService {\n  constructor(\n    private readonly messagesService: MessagecenterHttpService,\n    private readonly http: HttpClient,\n    @Inject(PUBSUB) private readonly pubSub: Pubsub,\n  ) {\n    super();\n  }\n\n  /**\n   * Creat message draft\n   *\n   * @param messageId Message id\n   * @param body Message request body\n   * @returns Create converastion message draft stream\n   */\n  createDraft(\n    messageId: string,\n    body: ConversationMessageDraftPostRequestBody,\n  ): Observable<DraftPostResponseBody | null> {\n    return this.messagesService.postConversationMessageDraft({\n      messageId,\n      conversationMessageDraftPostRequestBody: body,\n    });\n  }\n\n  /**\n   * Delete message draft\n   *\n   * @param draftId Draft id\n   * @returns Delete draft stream\n   */\n  deleteDraft(draftId: string): Observable<DeleteDraftsResponseBody> {\n    return this.messagesService.deleteMessageDrafts({ ids: [draftId] });\n  }\n\n  /**\n   * Update message draft\n   *\n   * @param messageId Message id\n   * @param body Conversation message draft request body\n   * @returns Update draft stream\n   */\n  updateDraft(messageId: string, body: ConversationMessageDraftPutRequestBody): Observable<any> {\n    return this.messagesService.putConversationMessageDraft({\n      messageId,\n      conversationMessageDraftPutRequestBody: body,\n    });\n  }\n\n  /**\n   * Delete conversation\n   *\n   * @param id Conversation id\n   * @returns Delete conversation thread stream\n   */\n  deleteConversation(id: string): Observable<ConversationThreadsDeleteResponseBody | null> {\n    return this.messagesService\n      .deleteConversationThreads({ ids: [id] })\n      .pipe(tap(() => this.pubSub.publish(bbEventUnreadConversationCountUpdate, undefined)));\n  }\n\n  /**\n   * Get conversation thread\n   *\n   * @param messageId Message id\n   * @returns Get conversation thread stream\n   */\n  getConversationThread(messageId: string): Observable<MessageThreadGetResponseBody | undefined> {\n    return this.messagesService.getMessageThread({ messageId });\n  }\n\n  /**\n   * Mark conversation as read or unread\n   *\n   * @param params Mark conversation as read/unread request body\n   * @returns Mark conversation as read/unread stream\n   */\n  markConversationsAsReadUnread(\n    params: MarkAsReadUnreadPutRequestBody,\n  ): Observable<MarkAsReadUnreadPutResponseBody | null> {\n    return this.messagesService\n      .putMarkAsReadUnread({ markAsReadUnreadPutRequestBody: params })\n      .pipe(tap(() => this.pubSub.publish(bbEventUnreadConversationCountUpdate, undefined)));\n  }\n\n  /**\n   * Post reply message\n   *\n   * @param messageId Message id\n   * @param body Message reply post request body\n   * @returns Post reply message stream\n   */\n  postReplyMessage(\n    messageId: string,\n    body: MessageReplyPostRequestBody,\n  ): Observable<PresentationMessagePostResponseBody | undefined> {\n    return this.messagesService.postMessageReply({ messageId, messageReplyPostRequestBody: body });\n  }\n\n  /**\n   * Get url attachment download\n   *\n   * @param attachmentId Attachment id\n   * @returns Download attachment url\n   */\n  getDownloadAttachmentUrl(attachmentId: string): string {\n    return this.messagesService.getMessageAttachmentUrl({ attachmentId });\n  }\n\n  /**\n   * Download attachment\n   *\n   * @param attachmentId Attachment id\n   * @returns Download file stream\n   */\n  downloadFile(attachmentId: string): Observable<ArrayBuffer> {\n    return this.http.get(this.getDownloadAttachmentUrl(attachmentId), { responseType: 'arraybuffer' });\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport { defaultModelObservable } from '@backbase/messages-common';\nimport { Observable } from 'rxjs';\n\nconst DefaultWidgetProperties = {\n  customerServiceTitle: 'Customer Service',\n  mailboxTypeTitle: 'Inbox',\n  maxAttachmentSize: '10',\n  replyMessageMaxLength: '300',\n};\n\n@Injectable()\nexport class WidgetPropertiesService {\n  constructor(@Optional() private readonly itemModel?: ItemModel) {}\n  /**\n   * Customer service title\n   */\n  get customerServiceTitle(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.customerServiceTitle);\n    }\n\n    return this.itemModel.property('customerServiceTitle', DefaultWidgetProperties.customerServiceTitle);\n  }\n\n  /**\n   * Mailbox type title\n   */\n  get mailboxTypeTitle(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.mailboxTypeTitle);\n    }\n\n    return this.itemModel.property('mailboxTypeTitle', DefaultWidgetProperties.mailboxTypeTitle);\n  }\n\n  /**\n   * Max attachment size\n   */\n  get maxAttachmentSize(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.maxAttachmentSize);\n    }\n\n    return this.itemModel.property('maxAttachmentSize', DefaultWidgetProperties.maxAttachmentSize);\n  }\n\n  /**\n   * Reply message max length\n   */\n  get replyMessageMaxLength(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.replyMessageMaxLength);\n    }\n\n    return this.itemModel.property('replyMessageMaxLength', DefaultWidgetProperties.replyMessageMaxLength);\n  }\n}\n","import { ChangeDetectorRef, Component, Directive, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport {\n  catchError,\n  concatMap,\n  finalize,\n  first,\n  map,\n  switchMap,\n  takeUntil,\n  tap,\n  throttleTime,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, EMPTY, merge, Observable, of } from 'rxjs';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport {\n  AbstractBaseMessagesConversationThreadService,\n  BaseConversationThreadComponent,\n  BaseUploadAttachmentsService,\n  getPropertyValue,\n  ManipulationType,\n  MessagesClientUploadAttachmentsService,\n  MessagesEncodingService,\n  MessagesManipulationConfirmModalService,\n  MessagesUploadAttachmentsService,\n  ReadUnreadStatusType,\n  SharedMethodsService,\n  shareReplayOnce,\n} from '@backbase/messages-common';\nimport { DeleteDraftsResponseBody, MessageThreadGetResponseBody } from '@backbase/messages-v5-http-ang';\nimport { MessagesConversationThreadWidgetService } from './services/messages-conversation-thread-widget-ang.service';\nimport { WidgetPropertiesService } from './services/widget-properties.service';\nimport { MessagesConversationThreadWidgetContext } from './model/conversation';\n\n@Component({\n  selector: 'bb-messages-conversation-thread-widget-ang',\n  templateUrl: './messages-conversation-thread-widget-ang.component.html',\n  providers: [\n    MessagesEncodingService,\n    WidgetPropertiesService,\n    MessagesManipulationConfirmModalService,\n    MessagesUploadAttachmentsService,\n    {\n      provide: BaseUploadAttachmentsService,\n      useClass: MessagesClientUploadAttachmentsService,\n    },\n    {\n      provide: AbstractBaseMessagesConversationThreadService,\n      useClass: MessagesConversationThreadWidgetService,\n    },\n  ],\n})\nexport class MessagesConversationThreadWidgetComponent extends BaseConversationThreadComponent implements OnInit {\n  readonly hostRef = this;\n\n  /**\n   * The stream with the mailbox type.\n   */\n  @Input('mailboxTypeTitle') set mailboxTypeTitleValue(value: string) {\n    this.mailboxTypeTitle$$.next(value);\n  }\n\n  /**\n   * The stream with the maximum attachment size.\n   */\n  @Input('maxAttachmentSize') set maxAttachmentSizeValue(value: string | number) {\n    this.maxAttachmentSize$$.next(String(value));\n  }\n\n  /**\n   * The stream with the maximum message length.\n   */\n  @Input('replyMessageMaxLength') set replyMessageMaxLengthValue(value: string | number) {\n    this.replyMessageMaxLength$$.next(String(value));\n  }\n\n  /**\n   * The stream with the customer service title.\n   */\n  @Input('customerServiceTitle') set customerServiceTitleValue(value: string) {\n    this.customerServiceTitle$$.next(value);\n  }\n\n  private readonly replyStream: Observable<DeleteDraftsResponseBody | undefined> = this.getReplyStream();\n\n  /**\n   * The flag indicating if the remove confirmation modal is opened or closed.\n   */\n  removeModalOpened = false;\n\n  private readonly mailboxTypeTitle$$ = new BehaviorSubject<string | undefined>(undefined);\n  private readonly maxAttachmentSize$$ = new BehaviorSubject<string | undefined>(undefined);\n  private readonly replyMessageMaxLength$$ = new BehaviorSubject<string | undefined>(undefined);\n  private readonly customerServiceTitle$$ = new BehaviorSubject<string | undefined>(undefined);\n\n  /**\n   * The stream with the conversation data.\n   */\n  conversation: Observable<MessageThreadGetResponseBody> = this.getConversationStream();\n\n  /**\n   * The stream with the mailbox type.\n   */\n  readonly mailboxTypeTitle: Observable<string> = getPropertyValue(\n    this.mailboxTypeTitle$$,\n    this.properties.mailboxTypeTitle,\n  );\n\n  /**\n   * The stream with the maximum attachment size.\n   */\n  readonly maxAttachmentSize: Observable<string> = getPropertyValue(\n    this.maxAttachmentSize$$,\n    this.properties.maxAttachmentSize,\n  );\n\n  /**\n   * The stream with the maximum message length.\n   */\n  readonly replyMessageMaxLength: Observable<string> = getPropertyValue(\n    this.replyMessageMaxLength$$,\n    this.properties.replyMessageMaxLength,\n  );\n\n  /**\n   * The stream with the maximum message length number.\n   */\n  readonly replyMessageMaxLength$: Observable<number> = getPropertyValue(\n    this.replyMessageMaxLength$$,\n    this.properties.replyMessageMaxLength,\n  ).pipe(map(val => Number(val)));\n\n  /**\n   * The stream with the customer service title.\n   */\n  readonly customerServiceTitle$: Observable<string> = getPropertyValue(\n    this.customerServiceTitle$$,\n    this.properties.customerServiceTitle,\n  );\n\n  constructor(\n    private readonly messagesService: MessagesConversationThreadWidgetService,\n    private readonly properties: WidgetPropertiesService,\n    protected readonly encodingService: MessagesEncodingService,\n    protected readonly uploadService: MessagesUploadAttachmentsService,\n    readonly confirmModalService: MessagesManipulationConfirmModalService,\n    protected readonly apiThreadService: AbstractBaseMessagesConversationThreadService,\n    protected readonly activatedRoute: ActivatedRoute,\n    protected readonly sharedService: SharedMethodsService,\n    private readonly cd: ChangeDetectorRef,\n  ) {\n    super(apiThreadService, activatedRoute, sharedService, confirmModalService, uploadService, encodingService);\n  }\n\n  ngOnInit() {\n    this.conversation.pipe(first(), takeUntil(this.unsubscribe)).subscribe(() => {\n      this.initSubscriptions();\n    });\n  }\n\n  private getReplyStream(): Observable<DeleteDraftsResponseBody | undefined> {\n    return this.replyPressed.pipe(\n      throttleTime(1000),\n      withLatestFrom(this.conversationId),\n      concatMap(([obj, conversationId]) => {\n        this.formLoading = true;\n\n        return this.messagesService.postReplyMessage(conversationId, obj).pipe(\n          switchMap(() =>\n            this.draftResponse ? this.messagesService.deleteDraft(this.draftResponse.id) : of(undefined),\n          ),\n          tap(() => {\n            this.uploadService.reset();\n            this.replyFormGroup.reset();\n            this.sharedService.openNotification(this.replySuccessTpl);\n          }),\n          catchError(error => {\n            this.sharedService.openNotification(this.sharedService.getErrorMessage(error), 'error');\n            this.cd.markForCheck();\n\n            return EMPTY;\n          }),\n          finalize(() => {\n            this.formLoading = false;\n          }),\n        );\n      }),\n    );\n  }\n\n  private getConversationStream(): Observable<MessageThreadGetResponseBody> {\n    return combineLatest([this.conversationId, merge(this.replyStream, of(undefined))]).pipe(\n      tap(() => {\n        this.loading = true;\n        this.errorResponse = undefined;\n      }),\n      switchMap(([conversationId]) =>\n        this.messagesService.getConversationThread(conversationId).pipe(\n          withLatestFrom(this.customerServiceTitle$),\n          map(([conversation, customerName]) => {\n            const messages =\n              conversation &&\n              conversation.messages\n                .map(message => ({\n                  ...message,\n                  body: this.encodingService.b64Decode(message.body),\n                  attachments: message.attachments && this.apiThreadService.attachmentsMapper(message.attachments),\n                  sender: {\n                    ...message.sender,\n                    name: message.sender.id === 'customer.service' ? customerName : message.sender.name,\n                  },\n                }))\n                .reverse();\n\n            return {\n              ...conversation,\n              messages,\n            } as MessageThreadGetResponseBody;\n          }),\n          tap(conversation => {\n            this.draftResponse = conversation.draft && { ...conversation.draft };\n\n            if (this.draftResponse) {\n              this.toggleReplyForm(true);\n\n              if (this.draftResponse.attachments) {\n                this.replyFormGroup.controls['attachments'].setValue([...this.draftResponse.attachments]);\n              }\n\n              if (this.draftResponse.body) {\n                this.replyFormGroup.controls['body'].setValue(this.encodingService.b64Decode(this.draftResponse.body));\n              }\n            }\n          }),\n          catchError((error: HttpErrorResponse) => {\n            this.errorResponse = error;\n            this.cd.markForCheck();\n\n            return EMPTY;\n          }),\n          finalize(() => {\n            this.loading = false;\n          }),\n        ),\n      ),\n      shareReplayOnce(),\n      takeUntil(this.unsubscribe),\n    );\n  }\n\n  /**\n   * The method to discard a message or a draft.\n   */\n  confirmConfirmationModal() {\n    switch (this.confirmationModal && this.confirmationModal.type) {\n      case ManipulationType.discard:\n        this.toggleReplyForm(false);\n        break;\n      case ManipulationType.discardDraft:\n        this.deleteDraft().pipe(takeUntil(this.unsubscribe)).subscribe();\n\n        this.toggleReplyForm(false);\n        break;\n    }\n\n    this.confirmModalService.toggleModal(false);\n  }\n\n  /**\n   * The method to open the removal modal.\n   */\n  openRemoveModal() {\n    this.removeModalOpened = true;\n  }\n\n  /**\n   * The method to close the removal modal.\n   */\n  closeRemoveModal() {\n    this.removeModalOpened = false;\n  }\n\n  /**\n   * The method to remove a conversation.\n   */\n  removeConversation() {\n    this.closeRemoveModal();\n    this.conversationId\n      .pipe(\n        switchMap(id => this.messagesService.deleteConversation(id)),\n        takeUntil(this.unsubscribe),\n      )\n      .subscribe(\n        () => {\n          if (this.deleteSuccessTpl) {\n            this.sharedService.openNotification(this.deleteSuccessTpl);\n          }\n          this.navigateBack();\n        },\n        error => this.sharedService.openNotification(this.sharedService.getErrorMessage(error), 'error'),\n      );\n  }\n\n  /**\n   * The method to toggle the read/unread conversation status.\n   *\n   * @param status Status type\n   */\n  toggleRead(status: ReadUnreadStatusType = ReadUnreadStatusType.UNREAD) {\n    this.markAsReadUnreadSubject.next(status);\n  }\n\n  /**\n   * The method to open the discard confirmation modal.\n   */\n  handleDiscardClick() {\n    const manipulationType = this.draftResponse ? this.manipulationTypes.discardDraft : this.manipulationTypes.discard;\n\n    this.confirmModalService.toggleModal(true, manipulationType, this.replyFormGroup);\n  }\n}\n\n@Directive({\n  selector: '[bbMessagesConversationThreadCustomizable]',\n})\nexport class MessagesConversationThreadCustomizableDirective extends BbTemplate<\n  MessagesConversationThreadWidgetComponent,\n  MessagesConversationThreadWidgetContext\n> {}\n","<ng-container\n  bbMessagesConversationThreadCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    conversation: conversation | async,\n    maxAttachmentSize: maxAttachmentSize | async,\n    replyMessageMaxLength: replyMessageMaxLength$ | async,\n    mailboxType: mailboxTypeTitle | async\n  }\"\n></ng-container>\n\n<ng-template\n  bbMessagesConversationThreadCustomizable\n  let-host\n  let-conversation=\"context.conversation\"\n  let-maxAttachmentSize=\"context.maxAttachmentSize\"\n  let-replyMessageMaxLength=\"context.replyMessageMaxLength\"\n  let-mailboxType=\"context.mailboxType\"\n>\n  <div class=\"card card-lg\">\n    <ng-container *ngIf=\"host.conversationId | async; else errorState\">\n      <ng-container *ngIf=\"!host.loading; else loadingState\">\n        <ng-container *ngIf=\"!host.errorResponse; else errorState\">\n          <ng-container *ngIf=\"conversation?.messages.length; else emptyState\">\n            <div\n              class=\"card-header bb-block--md\"\n              role=\"region\"\n              aria-label=\"Conversation details\"\n              i18n-aria-label=\"Conversation details@@messages.messagesConversationThread.conversationDetails\"\n            >\n              <div class=\"bb-block--md\">\n                <button bbButton color=\"link\" data-role=\"navigate-back\" (click)=\"host.navigateBack()\">\n                  <bb-icon-ui [cropped]=\"true\" name=\"arrow-back\"></bb-icon-ui>\n                  <span\n                    i18n=\"\n                      Back button|Return to list of conversations of specified mailbox\n                      type@@messages.messagesConversationThread.backButton\"\n                    >Back to {{ mailboxType }}</span\n                  >\n                </button>\n              </div>\n              <div class=\"bb-stack\">\n                <div>\n                  <div class=\"bb-block--sm\" role=\"heading\" aria-level=\"3\">\n                    <span\n                      class=\"sr-only\"\n                      i18n=\"Conversation topic@@messages.messagesConversationThread.conversationTopic\"\n                      >Topic:</span\n                    >\n                    <bb-badge-ui\n                      [text]=\"conversation.topic.name\"\n                      [color]=\"conversation.topic.deleted ? 'secondary' : 'primary'\"\n                    ></bb-badge-ui>\n                  </div>\n                  <div class=\"bb-stack\">\n                    <span role=\"heading\" aria-level=\"4\" class=\"bb-stack__item\">\n                      <span\n                        class=\"sr-only\"\n                        i18n=\"Conversation subject@@messages.messagesConversationThread.conversationSubject\"\n                        >Subject:</span\n                      >\n                      <span\n                        class=\"bb-text-semi-bold break-word\"\n                        [innerHTML]=\"conversation.subject\"\n                        data-role=\"subject-name\"\n                      ></span>\n                    </span>\n                    <bb-icon-ui\n                      *ngIf=\"conversation.important\"\n                      name=\"error\"\n                      class=\"bb-stack__item\"\n                      color=\"danger\"\n                      data-role=\"important\"\n                      i18n-bbTooltip=\"High priority@@messages.messagesConversationThread.importantMessage.tooltip\"\n                      bbTooltip=\"High priority\"\n                      container=\"body\"\n                      triggers=\"hover\"\n                      placement=\"top\"\n                      aria-label=\"This conversation has high priority\"\n                      i18n-aria-label=\"\n                        This conversation has high priority@@messages.messagesConversationThread.importantMessage\"\n                    ></bb-icon-ui>\n                  </div>\n                </div>\n                <div class=\"bb-stack__item--push-right\">\n                  <span\n                    bbTooltip=\"Mark as unread\"\n                    i18n-bbTooltip=\"\n                      Mark as unread|Mark as unread button@@messages.messagesConversationThread.markAsUnreadButton\"\n                    container=\"body\"\n                    triggers=\"hover focus\"\n                    placement=\"top\"\n                    class=\"bb-stack__item\"\n                  >\n                    <button\n                      bbButton\n                      color=\"link\"\n                      circle=\"true\"\n                      data-role=\"mark-as-unread-conversation\"\n                      aria-label=\"Mark as unread\"\n                      i18n-aria-label=\"@@messages.messagesConversationThread.markAsUnreadButton\"\n                      (click)=\"host.toggleRead()\"\n                    >\n                      <bb-icon-ui class=\"bb-text-support\" name=\"markunread\"></bb-icon-ui>\n                    </button>\n                  </span>\n\n                  <span\n                    bbTooltip=\"Delete conversation\"\n                    container=\"body\"\n                    i18n-bbTooltip=\"\n                      Delete conversation|Delete conversation\n                      button@@messages.messagesConversationThread.deleteConversationButton\"\n                    triggers=\"hover focus\"\n                    placement=\"top\"\n                  >\n                    <button\n                      bbButton\n                      color=\"link\"\n                      circle=\"true\"\n                      data-role=\"delete-conversation\"\n                      *ngIf=\"conversation.deletable\"\n                      (click)=\"host.openRemoveModal()\"\n                      aria-label=\"Delete conversation\"\n                      i18n-aria-label=\"@@messages.messagesConversationThread.deleteConversationButton\"\n                    >\n                      <bb-icon-ui class=\"bb-text-support\" name=\"delete\"></bb-icon-ui>\n                    </button>\n                  </span>\n                </div>\n              </div>\n\n              <bb-alert-ui\n                role=\"alert\"\n                modifier=\"warning\"\n                [dismissible]=\"true\"\n                *ngIf=\"conversation.topic.deleted && !host.topicAlertClosed\"\n                (close)=\"host.topicAlertClosed = true\"\n                i18n-title=\"Topic no longer exists alert@@messages.messagesConversationThread.alertMessage.topicDeleted\"\n                title=\"This topic no longer exists. Contact support for details.\"\n              ></bb-alert-ui>\n            </div>\n            <div\n              [class.bb-list__item]=\"host.replyOpened\"\n              role=\"list\"\n              aria-label=\"Messages list\"\n              i18n-aria-label=\"Messages list@@messages.messagesConversationThread.conversationMessagesList\"\n            >\n              <bb-messages-conversation-message\n                *ngFor=\"let message of conversation.messages; let last = last\"\n                [sender]=\"message.isMyMessage ? me : message.sender.name\"\n                [created]=\"message.createdAt\"\n                [message]=\"message.body\"\n                [isBodyHtml]=\"message.isBodyHtml\"\n                [opened]=\"last\"\n                [attachments]=\"message.attachments\"\n                role=\"listitem\"\n                aria-label=\"Message\"\n                i18n-aria-label=\"Message@@messages.messagesConversationThread.conversationMessage\"\n              ></bb-messages-conversation-message>\n            </div>\n            <div class=\"card-footer\" *ngIf=\"!conversation['read-only']\">\n              <form [formGroup]=\"host.replyFormGroup\">\n                <div class=\"bb-block--xl\" [attr.id]=\"host.id + 'reply-container'\" [hidden]=\"!host.replyOpened\">\n                  <div class=\"form-group\">\n                    <bb-rich-text-editor-ui\n                      #richTextEditor\n                      i18n-placeholder=\"Write your message@@messages.messagesConversationThread.messagePlaceholder\"\n                      placeholder=\"Write your message\"\n                      i18n-label=\"Message@@messages.messagesConversationThread.messageLabel\"\n                      label=\"Message\"\n                      formControlName=\"body\"\n                      counter=\"true\"\n                      [maxLength]=\"replyMessageMaxLength\"\n                      [required]=\"true\"\n                      [attr.aria-describedby]=\"'conversation-thread-body-error'\"\n                    >\n                      <ng-template #actions bbRichTextEditorActions>\n                        <bb-rich-text-editor-bold-action></bb-rich-text-editor-bold-action>\n                        <bb-rich-text-editor-italic-action></bb-rich-text-editor-italic-action>\n                        <bb-rich-text-editor-underline-action></bb-rich-text-editor-underline-action>\n                        <bb-rich-text-editor-strikethrough-action> </bb-rich-text-editor-strikethrough-action>\n                        <bb-rich-text-editor-olist-action></bb-rich-text-editor-olist-action>\n                        <bb-rich-text-editor-ulist-action> </bb-rich-text-editor-ulist-action>\n                        <bb-rich-text-editor-link-action></bb-rich-text-editor-link-action>\n                      </ng-template>\n                    </bb-rich-text-editor-ui>\n                    <bb-input-validation-message-ui\n                      id=\"conversation-thread-body-error\"\n                      [showErrors]=\"host.isInvalidControl('body')\"\n                    >\n                      <span\n                        *ngIf=\"host.hasError('body', 'required')\"\n                        i18n=\"\n                          Error message if field is required@@messages.messagesConversationThread.errors.messageRequired\"\n                      >\n                        Field is required\n                      </span>\n                    </bb-input-validation-message-ui>\n                  </div>\n                  <div class=\"form-group\">\n                    <bb-messages-upload-attachments\n                      [maxSize]=\"maxAttachmentSize\"\n                      [initAttachments]=\"host.draftResponse?.attachments\"\n                      formControlName=\"attachments\"\n                    >\n                    </bb-messages-upload-attachments>\n                  </div>\n                </div>\n                <div class=\"bb-button-bar bb-button-bar--reverse\">\n                  <bb-load-button-ui\n                    *ngIf=\"host.replyOpened\"\n                    class=\"bb-button-bar__button\"\n                    data-role=\"submit\"\n                    type=\"submit\"\n                    i18n=\"Send@@messages.messagesConversationThread.sendButton\"\n                    [isLoading]=\"host.formLoading\"\n                    (click)=\"host.reply()\"\n                  >\n                    Send\n                  </bb-load-button-ui>\n                  <button\n                    bbButton\n                    [attr.data-role]=\"!host.replyOpened ? 'reply-btn' : 'discard-btn'\"\n                    class=\"bb-button-bar__button\"\n                    [attr.aria-expanded]=\"host.replyOpened\"\n                    [attr.aria-controls]=\"host.id + 'reply-container'\"\n                    color=\"secondary\"\n                    (click)=\"!host.replyOpened ? host.toggleReplyForm(true) : host.handleDiscardClick()\"\n                  >\n                    <span\n                      *ngIf=\"!host.replyOpened; else discardTextButton\"\n                      i18n=\"Reply@@messages.messagesConversationThread.replyButton\"\n                    >\n                      Reply\n                    </span>\n                    <ng-template #discardTextButton>\n                      <span i18n=\"Discard@@messages.messagesConversationThread.discardButton\"> Discard </span>\n                    </ng-template>\n                  </button>\n                  <button\n                    bbButton\n                    data-role=\"save-as-draft\"\n                    class=\"bb-button-bar__button\"\n                    color=\"link\"\n                    *ngIf=\"host.replyOpened\"\n                    (click)=\"host.onSaveDraft()\"\n                    i18n=\"Save as Draft@@messages.messagesConversationThread.saveAsDraftButton\"\n                  >\n                    Save as Draft\n                  </button>\n                </div>\n              </form>\n            </div>\n          </ng-container>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </div>\n\n  <bb-modal-ui\n    [isOpen]=\"host.removeModalOpened\"\n    data-role=\"delete-conversation-modal\"\n    aria-describedby=\"delete-confirmation-modal-subtitle\"\n    (cancel)=\"host.closeRemoveModal()\"\n  >\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <span\n          class=\"text-large bb-text-semi-bold\"\n          i18n=\"\n            Delete conversation|Header title of the confirmation modal to delete\n            conversation@@messages.messagesConversationThread.messagesDeleteModal.headerTitle\"\n          >Delete conversation?</span\n        >\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          id=\"delete-confirmation-modal-subtitle\"\n          i18n=\"\n            Are you sure you want to delete the selected conversation?|Body message of the confirmation modal to delete\n            conversation@@messages.messagesConversationThread.messagesDeleteModal.bodyMessage\"\n          >Are you sure you want to delete the selected conversation?</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <bb-button-ui\n          data-role=\"cancel-delete-conversation\"\n          color=\"secondary\"\n          i18n=\"\n            Cancel|Cancel button inside the confirmation modal\n            footer@@messages.messagesConversationThread.messagesDeleteModal.cancelButton\"\n          (click)=\"host.closeRemoveModal()\"\n          >Cancel\n        </bb-button-ui>\n        <bb-button-ui\n          data-role=\"confirm-delete-conversation\"\n          color=\"danger\"\n          i18n=\"\n            Delete|Delete button inside the confirmation modal\n            footer@@messages.messagesConversationThread.messagesDeleteModal.deleteButton\"\n          (click)=\"host.removeConversation()\"\n          >Delete\n        </bb-button-ui>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n\n  <bb-messages-manipulation-confirm-modal\n    [isOpen]=\"host.confirmationModal.opened\"\n    [type]=\"host.confirmationModal.type\"\n    (cancel)=\"host.confirmModalService.toggleModal(false)\"\n    (confirm)=\"host.confirmConfirmationModal()\"\n  ></bb-messages-manipulation-confirm-modal>\n\n  <ng-template #me>\n    <span i18n=\"Me|Show this string if this is clients message@@messages.messagesConversationThread.me\">Me</span>\n  </ng-template>\n\n  <ng-template #emptyState>\n    <div class=\"bb-state-container\">\n      <bb-empty-state-ui\n        i18n-title=\"Empty state title@@messages.messagesConversationThread.emptyStateTitle\"\n        title=\"No Messages\"\n        i18n-subtitle=\"Empty state subtitle@@messages.messagesConversationThread.emptyStateSubtitle\"\n        subtitle=\"You don't have any messages to be displayed.\"\n        iconModifier=\"email\"\n        iconColor=\"muted\"\n        data-role=\"empty-state\"\n      ></bb-empty-state-ui>\n    </div>\n  </ng-template>\n\n  <ng-template #errorState>\n    <bb-messages-request-error [error]=\"host.errorResponse\"></bb-messages-request-error>\n  </ng-template>\n\n  <ng-template #loadingState>\n    <bb-loading-indicator-ui class=\"py-4\" loaderSize=\"md\"></bb-loading-indicator-ui>\n  </ng-template>\n</ng-template>\n\n<ng-template #messageReplySuccess>\n  <span\n    i18n=\"\n      Your message has been successfully sent.|Text of successful send\n      message@@messages.messagesConversationThread.messageSuccessSent\"\n    >Your message has been successfully sent.</span\n  >\n</ng-template>\n\n<ng-template #messageDeleteSuccess>\n  <span\n    i18n=\"\n      Your conversation has been deleted successfully.|Text of successful deletion of the\n      conversation@@messages.messagesConversationThread.messageSuccessDelete\"\n    >Your conversation has been deleted successfully.</span\n  >\n</ng-template>\n\n<ng-template #draftSaveSuccess>\n  <span\n    i18n=\"\n      Your draft has been successfully saved.|Successfully saved draft\n      text@@messages.messagesConversationThread.draftSuccessSave\"\n    >Your draft has been successfully saved.</span\n  >\n</ng-template>\n\n<ng-template #draftDeleteSuccess>\n  <span\n    i18n=\"\n      Your draft has been successfully deleted.|Successfully deleted draft\n      text@@messages.messagesConversationThread.draftDeleteSuccess\"\n    >Your draft has been successfully deleted.</span\n  >\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport {\n  BaseMessagesConversationThreadModule,\n  MessagesConversationMessageModule,\n  MessagesManipulationConfirmModalModule,\n  MessagesRequestErrorModule,\n  MessagesUploadAttachmentsModule,\n} from '@backbase/messages-common';\n\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { BadgeModule } from '@backbase/ui-ang/badge';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { RichTextEditorModule } from '@backbase/ui-ang/rich-text-editor';\n\nimport {\n  MessagesConversationThreadCustomizableDirective,\n  MessagesConversationThreadWidgetComponent,\n} from './messages-conversation-thread-widget-ang.component';\nimport { MessagesConversationThreadWidgetService } from './services/messages-conversation-thread-widget-ang.service';\n\nconst components = [MessagesConversationThreadWidgetComponent];\nconst directives = [MessagesConversationThreadCustomizableDirective];\nconst uiModules = [\n  ButtonModule,\n  BadgeModule,\n  IconModule,\n  RichTextEditorModule,\n  ModalModule,\n  EmptyStateModule,\n  LoadingIndicatorModule,\n  TooltipModule,\n  LoadButtonModule,\n  AlertModule,\n  InputValidationMessageModule,\n];\n\nconst innerModules = [\n  BaseMessagesConversationThreadModule,\n  MessagesManipulationConfirmModalModule,\n  MessagesUploadAttachmentsModule,\n  MessagesRequestErrorModule,\n  MessagesConversationMessageModule,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { MessagesConversationThreadWidgetComponent },\n    }),\n    ReactiveFormsModule,\n    ...innerModules,\n    ...uiModules,\n  ],\n  declarations: [...components, ...directives],\n  providers: [MessagesConversationThreadWidgetService],\n  exports: [ReactiveFormsModule, ...components, ...directives, ...uiModules, ...innerModules],\n})\nexport class MessagesConversationThreadWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}