import { createMocks } from '@backbase/foundation-ang/data-http';
export const A2aClientHttpService_deleteMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/external-accounts/{externalAccountId}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const A2aClientHttpServiceCreateMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/external-accounts",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "externalAccountId": "31361592",
                    "routingNumber": "091000022",
                    "accountNumber": "12351",
                    "accountType": "Checking",
                    "accountNickName": "NickName",
                    "bankName": "US BANK NA",
                    "accountMask": "2351",
                    "status": "Active"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const A2aClientHttpServiceGetAllMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/external-accounts",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "accounts": [{
                            "externalAccountId": "31361591",
                            "routingNumber": "091000021",
                            "accountNumber": "12351",
                            "accountType": "Checking",
                            "accountNickName": "NickName1",
                            "bankName": "US BANK NA",
                            "maskedAccountNumber": "2351",
                            "status": "Active"
                        }, {
                            "externalAccountId": "31361592",
                            "routingNumber": "091000022",
                            "accountNumber": "12352",
                            "accountType": "Savings",
                            "accountNickName": "NickName2",
                            "bankName": "US BANK NA",
                            "maskedAccountNumber": "2352",
                            "status": "PendingActivation"
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const A2aClientHttpServiceGetByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/external-accounts/{externalAccountId}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "externalAccountId": "31361592",
                    "routingNumber": "091000022",
                    "accountNumber": "12351",
                    "accountType": "Checking",
                    "accountNickName": "NickName",
                    "bankName": "US BANK NA",
                    "accountMask": "2351",
                    "status": "Active"
                }
            },
            {
                status: 200,
                body: {
                    "routingNumber": "routingNumber",
                    "externalAccountId": "externalAccountId",
                    "accountNickName": "accountNickName",
                    "bankName": "bankName",
                    "accountNumber": "accountNumber",
                    "maskedAccountNumber": "maskedAccountNumber"
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const A2aClientHttpServiceUpdateMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/external-accounts/{externalAccountId}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "externalAccountId": "31361592",
                    "routingNumber": "091000022",
                    "accountNumber": "12351",
                    "accountType": "Checking",
                    "accountNickName": "NickName",
                    "bankName": "US BANK NA",
                    "accountMask": "2351",
                    "status": "Active"
                }
            },
            {
                status: 200,
                body: {
                    "routingNumber": "routingNumber",
                    "externalAccountId": "externalAccountId",
                    "accountNickName": "accountNickName",
                    "bankName": "bankName",
                    "accountNumber": "accountNumber",
                    "maskedAccountNumber": "maskedAccountNumber"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const A2aClientHttpServiceVerifyMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/external-accounts/{externalAccountId}/account-verification",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "externalAccountId": "31361592",
                    "routingNumber": "091000022",
                    "accountNumber": "12351",
                    "accountType": "Checking",
                    "accountNickName": "NickName",
                    "bankName": "US BANK NA",
                    "accountMask": "2351",
                    "status": "Active"
                }
            },
            {
                status: 200,
                body: {
                    "routingNumber": "routingNumber",
                    "externalAccountId": "externalAccountId",
                    "accountNickName": "accountNickName",
                    "bankName": "bankName",
                    "accountNumber": "accountNumber",
                    "maskedAccountNumber": "maskedAccountNumber"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    }]);
export const A2aClientHttpServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v1/external-accounts/{externalAccountId}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/external-accounts",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "externalAccountId": "31361592",
                    "routingNumber": "091000022",
                    "accountNumber": "12351",
                    "accountType": "Checking",
                    "accountNickName": "NickName",
                    "bankName": "US BANK NA",
                    "accountMask": "2351",
                    "status": "Active"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/external-accounts",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "accounts": [{
                            "externalAccountId": "31361591",
                            "routingNumber": "091000021",
                            "accountNumber": "12351",
                            "accountType": "Checking",
                            "accountNickName": "NickName1",
                            "bankName": "US BANK NA",
                            "maskedAccountNumber": "2351",
                            "status": "Active"
                        }, {
                            "externalAccountId": "31361592",
                            "routingNumber": "091000022",
                            "accountNumber": "12352",
                            "accountType": "Savings",
                            "accountNickName": "NickName2",
                            "bankName": "US BANK NA",
                            "maskedAccountNumber": "2352",
                            "status": "PendingActivation"
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/external-accounts/{externalAccountId}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "externalAccountId": "31361592",
                    "routingNumber": "091000022",
                    "accountNumber": "12351",
                    "accountType": "Checking",
                    "accountNickName": "NickName",
                    "bankName": "US BANK NA",
                    "accountMask": "2351",
                    "status": "Active"
                }
            },
            {
                status: 200,
                body: {
                    "routingNumber": "routingNumber",
                    "externalAccountId": "externalAccountId",
                    "accountNickName": "accountNickName",
                    "bankName": "bankName",
                    "accountNumber": "accountNumber",
                    "maskedAccountNumber": "maskedAccountNumber"
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/external-accounts/{externalAccountId}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "externalAccountId": "31361592",
                    "routingNumber": "091000022",
                    "accountNumber": "12351",
                    "accountType": "Checking",
                    "accountNickName": "NickName",
                    "bankName": "US BANK NA",
                    "accountMask": "2351",
                    "status": "Active"
                }
            },
            {
                status: 200,
                body: {
                    "routingNumber": "routingNumber",
                    "externalAccountId": "externalAccountId",
                    "accountNickName": "accountNickName",
                    "bankName": "bankName",
                    "accountNumber": "accountNumber",
                    "maskedAccountNumber": "maskedAccountNumber"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/external-accounts/{externalAccountId}/account-verification",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "externalAccountId": "31361592",
                    "routingNumber": "091000022",
                    "accountNumber": "12351",
                    "accountType": "Checking",
                    "accountNickName": "NickName",
                    "bankName": "US BANK NA",
                    "accountMask": "2351",
                    "status": "Active"
                }
            },
            {
                status: 200,
                body: {
                    "routingNumber": "routingNumber",
                    "externalAccountId": "externalAccountId",
                    "accountNickName": "accountNickName",
                    "bankName": "bankName",
                    "accountNumber": "accountNumber",
                    "maskedAccountNumber": "maskedAccountNumber"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,