{"version":3,"file":"backbase-payment-order-a2a-http-ang.js","sources":["../../model/accountStatus.ts","../../model/accountType.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/a2aClient.service.ts","../../api/a2aClient.service.mocks.ts"],"sourcesContent":["/**\n * Payments A2A client\n * Customers add, verify, and delete external accounts.\n *\n * The version of the OpenAPI document: 1.0.4\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Status of the external account, the account can be used for transfers when the status of it is Active.\n */\nexport type AccountStatus = 'Active' | 'InProcess' | 'PendingActivation' | 'FailedVerification' | 'RejectedByExternalBank' | 'DisabledForExcessiveReturns' | 'DisabledForFraud';\n\nexport const AccountStatus = {\n    Active: 'Active' as AccountStatus,\n    InProcess: 'InProcess' as AccountStatus,\n    PendingActivation: 'PendingActivation' as AccountStatus,\n    FailedVerification: 'FailedVerification' as AccountStatus,\n    RejectedByExternalBank: 'RejectedByExternalBank' as AccountStatus,\n    DisabledForExcessiveReturns: 'DisabledForExcessiveReturns' as AccountStatus,\n    DisabledForFraud: 'DisabledForFraud' as AccountStatus\n};\n\n","/**\n * Payments A2A client\n * Customers add, verify, and delete external accounts.\n *\n * The version of the OpenAPI document: 1.0.4\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport type AccountType = 'Checking' | 'Savings';\n\nexport const AccountType = {\n    Checking: 'Checking' as AccountType,\n    Savings: 'Savings' as AccountType\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const PAYMENT_ORDER_A2A_BASE_PATH = new InjectionToken<string>('PAYMENT_ORDER_A2A_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface PaymentOrderA2aConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class PaymentOrderA2aConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: PaymentOrderA2aConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link PaymentOrderA2aConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link PaymentOrderA2aConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module PaymentOrderA2aConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { PaymentOrderA2aConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class PaymentOrderA2aApiModule {\n    public static forRoot(configurationFactory: () => PaymentOrderA2aConfiguration): ModuleWithProviders<PaymentOrderA2aApiModule> {\n        return {\n            ngModule: PaymentOrderA2aApiModule,\n            providers: [ { provide: PaymentOrderA2aConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: PaymentOrderA2aApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: PaymentOrderA2aConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('PaymentOrderA2aApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Payments A2A client\n * Customers add, verify, and delete external accounts.\n *\n * The version of the OpenAPI document: 1.0.4\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { ExternalAccountGetPostPutResponse } from '../model/models';\nimport { ExternalAccountGetResponse } from '../model/models';\nimport { ExternalAccountPostRequest } from '../model/models';\nimport { ExternalAccountPutRequest } from '../model/models';\nimport { ExternalAccountVerificationPutRequest } from '../model/models';\nimport { ModelError } from '../model/models';\n\nimport { PAYMENT_ORDER_A2A_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { PaymentOrderA2aConfiguration }                                     from '../configuration';\n\n\nexport interface DeleteRequestParams {\n    /** The id of the external account */\n    [\"externalAccountId\"]: string;\n}\n\nexport interface CreateRequestParams {\n    /** Create external account. */\n    [\"externalAccountPostRequest\"]: ExternalAccountPostRequest;\n}\n\nexport interface GetByIdRequestParams {\n    /** The id of the external account */\n    [\"externalAccountId\"]: string;\n}\n\nexport interface UpdateRequestParams {\n    /** The id of the external account */\n    [\"externalAccountId\"]: string;\n    /** Modify an external account. */\n    [\"externalAccountPutRequest\"]: ExternalAccountPutRequest;\n}\n\nexport interface VerifyRequestParams {\n    /** The id of the external account */\n    [\"externalAccountId\"]: string;\n    /** Activate external account. */\n    [\"externalAccountVerificationPutRequest\"]: ExternalAccountVerificationPutRequest;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class A2aClientHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new PaymentOrderA2aConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(PAYMENT_ORDER_A2A_BASE_PATH) basePath: string, @Optional() configuration: PaymentOrderA2aConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Delete an external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public _delete(requestParameters: DeleteRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Delete an external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public _delete(requestParameters: DeleteRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Delete an external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public _delete(requestParameters: DeleteRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Delete an external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public _delete(requestParameters: DeleteRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _externalAccountId = requestParameters[\"externalAccountId\"];\n        if (_externalAccountId === null || _externalAccountId === undefined) {\n            throw new Error('Required parameter externalAccountId was null or undefined when calling _delete.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v1/external-accounts/${encodeURIComponent(String(_externalAccountId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public _deleteUrl(requestParameters: DeleteRequestParams): string {\n        const _externalAccountId = requestParameters[\"externalAccountId\"];\n        if (_externalAccountId === null || _externalAccountId === undefined) {\n            throw new Error('Required parameter externalAccountId was null or undefined when calling _delete.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/external-accounts/${encodeURIComponent(String(_externalAccountId))}`;\n    }\n\n    /**\n     * Create external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public create(requestParameters: CreateRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ExternalAccountGetPostPutResponse>;\n    /**\n     * Create external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public create(requestParameters: CreateRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ExternalAccountGetPostPutResponse>>;\n    /**\n     * Create external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public create(requestParameters: CreateRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ExternalAccountGetPostPutResponse>>;\n    /**\n     * Create external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public create(requestParameters: CreateRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _externalAccountPostRequest = requestParameters[\"externalAccountPostRequest\"];\n        if (_externalAccountPostRequest === null || _externalAccountPostRequest === undefined) {\n            throw new Error('Required parameter externalAccountPostRequest was null or undefined when calling create.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<ExternalAccountGetPostPutResponse>(`${this.configuration.basePath}/client-api/v1/external-accounts`,\n            _externalAccountPostRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public createUrl(requestParameters: CreateRequestParams): string {\n        const _externalAccountPostRequest = requestParameters[\"externalAccountPostRequest\"];\n        if (_externalAccountPostRequest === null || _externalAccountPostRequest === undefined) {\n            throw new Error('Required parameter externalAccountPostRequest was null or undefined when calling create.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/external-accounts`;\n    }\n\n    /**\n     * Returns external accounts.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAll(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ExternalAccountGetResponse>;\n    /**\n     * Returns external accounts.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAll(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ExternalAccountGetResponse>>;\n    /**\n     * Returns external accounts.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAll(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ExternalAccountGetResponse>>;\n    /**\n     * Returns external accounts.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAll(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ExternalAccountGetResponse>(`${this.configuration.basePath}/client-api/v1/external-accounts`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getAllUrl(): string {\n        return `${this.configuration.basePath}/client-api/v1/external-accounts`;\n    }\n\n    /**\n     * Retreive an external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getById(requestParameters: GetByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ExternalAccountGetPostPutResponse>;\n    /**\n     * Retreive an external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getById(requestParameters: GetByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ExternalAccountGetPostPutResponse>>;\n    /**\n     * Retreive an external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getById(requestParameters: GetByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ExternalAccountGetPostPutResponse>>;\n    /**\n     * Retreive an external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getById(requestParameters: GetByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _externalAccountId = requestParameters[\"externalAccountId\"];\n        if (_externalAccountId === null || _externalAccountId === undefined) {\n            throw new Error('Required parameter externalAccountId was null or undefined when calling getById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ExternalAccountGetPostPutResponse>(`${this.configuration.basePath}/client-api/v1/external-accounts/${encodeURIComponent(String(_externalAccountId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getByIdUrl(requestParameters: GetByIdRequestParams): string {\n        const _externalAccountId = requestParameters[\"externalAccountId\"];\n        if (_externalAccountId === null || _externalAccountId === undefined) {\n            throw new Error('Required parameter externalAccountId was null or undefined when calling getById.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/external-accounts/${encodeURIComponent(String(_externalAccountId))}`;\n    }\n\n    /**\n     * Modify an external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public update(requestParameters: UpdateRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ExternalAccountGetPostPutResponse>;\n    /**\n     * Modify an external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public update(requestParameters: UpdateRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ExternalAccountGetPostPutResponse>>;\n    /**\n     * Modify an external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public update(requestParameters: UpdateRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ExternalAccountGetPostPutResponse>>;\n    /**\n     * Modify an external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public update(requestParameters: UpdateRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _externalAccountId = requestParameters[\"externalAccountId\"];\n        if (_externalAccountId === null || _externalAccountId === undefined) {\n            throw new Error('Required parameter externalAccountId was null or undefined when calling update.');\n        }\n        const _externalAccountPutRequest = requestParameters[\"externalAccountPutRequest\"];\n        if (_externalAccountPutRequest === null || _externalAccountPutRequest === undefined) {\n            throw new Error('Required parameter externalAccountPutRequest was null or undefined when calling update.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<ExternalAccountGetPostPutResponse>(`${this.configuration.basePath}/client-api/v1/external-accounts/${encodeURIComponent(String(_externalAccountId))}`,\n            _externalAccountPutRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public updateUrl(requestParameters: UpdateRequestParams): string {\n        const _externalAccountId = requestParameters[\"externalAccountId\"];\n        if (_externalAccountId === null || _externalAccountId === undefined) {\n            throw new Error('Required parameter externalAccountId was null or undefined when calling update.');\n        }\n        const _externalAccountPutRequest = requestParameters[\"externalAccountPutRequest\"];\n        if (_externalAccountPutRequest === null || _externalAccountPutRequest === undefined) {\n            throw new Error('Required parameter externalAccountPutRequest was null or undefined when calling update.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/external-accounts/${encodeURIComponent(String(_externalAccountId))}`;\n    }\n\n    /**\n     * Activate external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public verify(requestParameters: VerifyRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ExternalAccountGetPostPutResponse>;\n    /**\n     * Activate external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public verify(requestParameters: VerifyRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ExternalAccountGetPostPutResponse>>;\n    /**\n     * Activate external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public verify(requestParameters: VerifyRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ExternalAccountGetPostPutResponse>>;\n    /**\n     * Activate external account.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public verify(requestParameters: VerifyRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _externalAccountId = requestParameters[\"externalAccountId\"];\n        if (_externalAccountId === null || _externalAccountId === undefined) {\n            throw new Error('Required parameter externalAccountId was null or undefined when calling verify.');\n        }\n        const _externalAccountVerificationPutRequest = requestParameters[\"externalAccountVerificationPutRequest\"];\n        if (_externalAccountVerificationPutRequest === null || _externalAccountVerificationPutRequest === undefined) {\n            throw new Error('Required parameter externalAccountVerificationPutRequest was null or undefined when calling verify.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<ExternalAccountGetPostPutResponse>(`${this.configuration.basePath}/client-api/v1/external-accounts/${encodeURIComponent(String(_externalAccountId))}/account-verification`,\n            _externalAccountVerificationPutRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public verifyUrl(requestParameters: VerifyRequestParams): string {\n        const _externalAccountId = requestParameters[\"externalAccountId\"];\n        if (_externalAccountId === null || _externalAccountId === undefined) {\n            throw new Error('Required parameter externalAccountId was null or undefined when calling verify.');\n        }\n        const _externalAccountVerificationPutRequest = requestParameters[\"externalAccountVerificationPutRequest\"];\n        if (_externalAccountVerificationPutRequest === null || _externalAccountVerificationPutRequest === undefined) {\n            throw new Error('Required parameter externalAccountVerificationPutRequest was null or undefined when calling verify.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/external-accounts/${encodeURIComponent(String(_externalAccountId))}/account-verification`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/external-accounts/{externalAccountId} URL pattern\n*/\nexport const A2aClientHttpService_deleteMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/external-accounts/{externalAccountId}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/external-accounts URL pattern\n*/\nexport const A2aClientHttpServiceCreateMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/external-accounts\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"externalAccountId\" : \"31361592\",\n  \"routingNumber\" : \"091000022\",\n  \"accountNumber\" : \"12351\",\n  \"accountType\" : \"Checking\",\n  \"accountNickName\" : \"NickName\",\n  \"bankName\" : \"US BANK NA\",\n  \"accountMask\" : \"2351\",\n  \"status\" : \"Active\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/external-accounts URL pattern\n*/\nexport const A2aClientHttpServiceGetAllMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/external-accounts\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"accounts\" : [ {\n    \"externalAccountId\" : \"31361591\",\n    \"routingNumber\" : \"091000021\",\n    \"accountNumber\" : \"12351\",\n    \"accountType\" : \"Checking\",\n    \"accountNickName\" : \"NickName1\",\n    \"bankName\" : \"US BANK NA\",\n    \"maskedAccountNumber\" : \"2351\",\n    \"status\" : \"Active\"\n  }, {\n    \"externalAccountId\" : \"31361592\",\n    \"routingNumber\" : \"091000022\",\n    \"accountNumber\" : \"12352\",\n    \"accountType\" : \"Savings\",\n    \"accountNickName\" : \"NickName2\",\n    \"bankName\" : \"US BANK NA\",\n    \"maskedAccountNumber\" : \"2352\",\n    \"status\" : \"PendingActivation\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/external-accounts/{externalAccountId} URL pattern\n*/\nexport const A2aClientHttpServiceGetByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/external-accounts/{externalAccountId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"externalAccountId\" : \"31361592\",\n  \"routingNumber\" : \"091000022\",\n  \"accountNumber\" : \"12351\",\n  \"accountType\" : \"Checking\",\n  \"accountNickName\" : \"NickName\",\n  \"bankName\" : \"US BANK NA\",\n  \"accountMask\" : \"2351\",\n  \"status\" : \"Active\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"routingNumber\" : \"routingNumber\",\n  \"externalAccountId\" : \"externalAccountId\",\n  \"accountNickName\" : \"accountNickName\",\n  \"bankName\" : \"bankName\",\n  \"accountNumber\" : \"accountNumber\",\n  \"maskedAccountNumber\" : \"maskedAccountNumber\"\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/external-accounts/{externalAccountId} URL pattern\n*/\nexport const A2aClientHttpServiceUpdateMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/external-accounts/{externalAccountId}\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"externalAccountId\" : \"31361592\",\n  \"routingNumber\" : \"091000022\",\n  \"accountNumber\" : \"12351\",\n  \"accountType\" : \"Checking\",\n  \"accountNickName\" : \"NickName\",\n  \"bankName\" : \"US BANK NA\",\n  \"accountMask\" : \"2351\",\n  \"status\" : \"Active\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"routingNumber\" : \"routingNumber\",\n  \"externalAccountId\" : \"externalAccountId\",\n  \"accountNickName\" : \"accountNickName\",\n  \"bankName\" : \"bankName\",\n  \"accountNumber\" : \"accountNumber\",\n  \"maskedAccountNumber\" : \"maskedAccountNumber\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/external-accounts/{externalAccountId}/account-verification URL pattern\n*/\nexport const A2aClientHttpServiceVerifyMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/external-accounts/{externalAccountId}/account-verification\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"externalAccountId\" : \"31361592\",\n  \"routingNumber\" : \"091000022\",\n  \"accountNumber\" : \"12351\",\n  \"accountType\" : \"Checking\",\n  \"accountNickName\" : \"NickName\",\n  \"bankName\" : \"US BANK NA\",\n  \"accountMask\" : \"2351\",\n  \"status\" : \"Active\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"routingNumber\" : \"routingNumber\",\n  \"externalAccountId\" : \"externalAccountId\",\n  \"accountNickName\" : \"accountNickName\",\n  \"bankName\" : \"bankName\",\n  \"accountNumber\" : \"accountNumber\",\n  \"maskedAccountNumber\" : \"maskedAccountNumber\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const A2aClientHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/external-accounts/{externalAccountId}\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/external-accounts\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"externalAccountId\" : \"31361592\",\n  \"routingNumber\" : \"091000022\",\n  \"accountNumber\" : \"12351\",\n  \"accountType\" : \"Checking\",\n  \"accountNickName\" : \"NickName\",\n  \"bankName\" : \"US BANK NA\",\n  \"accountMask\" : \"2351\",\n  \"status\" : \"Active\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/external-accounts\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"accounts\" : [ {\n    \"externalAccountId\" : \"31361591\",\n    \"routingNumber\" : \"091000021\",\n    \"accountNumber\" : \"12351\",\n    \"accountType\" : \"Checking\",\n    \"accountNickName\" : \"NickName1\",\n    \"bankName\" : \"US BANK NA\",\n    \"maskedAccountNumber\" : \"2351\",\n    \"status\" : \"Active\"\n  }, {\n    \"externalAccountId\" : \"31361592\",\n    \"routingNumber\" : \"091000022\",\n    \"accountNumber\" : \"12352\",\n    \"accountType\" : \"Savings\",\n    \"accountNickName\" : \"NickName2\",\n    \"bankName\" : \"US BANK NA\",\n    \"maskedAccountNumber\" : \"2352\",\n    \"status\" : \"PendingActivation\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/external-accounts/{externalAccountId}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"externalAccountId\" : \"31361592\",\n  \"routingNumber\" : \"091000022\",\n  \"accountNumber\" : \"12351\",\n  \"accountType\" : \"Checking\",\n  \"accountNickName\" : \"NickName\",\n  \"bankName\" : \"US BANK NA\",\n  \"accountMask\" : \"2351\",\n  \"status\" : \"Active\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"routingNumber\" : \"routingNumber\",\n  \"externalAccountId\" : \"externalAccountId\",\n  \"accountNickName\" : \"accountNickName\",\n  \"bankName\" : \"bankName\",\n  \"accountNumber\" : \"accountNumber\",\n  \"maskedAccountNumber\" : \"maskedAccountNumber\"\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/external-accounts/{externalAccountId}\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"externalAccountId\" : \"31361592\",\n  \"routingNumber\" : \"091000022\",\n  \"accountNumber\" : \"12351\",\n  \"accountType\" : \"Checking\",\n  \"accountNickName\" : \"NickName\",\n  \"bankName\" : \"US BANK NA\",\n  \"accountMask\" : \"2351\",\n  \"status\" : \"Active\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"routingNumber\" : \"routingNumber\",\n  \"externalAccountId\" : \"externalAccountId\",\n  \"accountNickName\" : \"accountNickName\",\n  \"bankName\" : \"bankName\",\n  \"accountNumber\" : \"accountNumber\",\n  \"maskedAccountNumber\" : \"maskedAccountNumber\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/external-accounts/{externalAccountId}/account-verification\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"externalAccountId\" : \"31361592\",\n  \"routingNumber\" : \"091000022\",\n  \"accountNumber\" : \"12351\",\n  \"accountType\" : \"Checking\",\n  \"accountNickName\" : \"NickName\",\n  \"bankName\" : \"US BANK NA\",\n  \"accountMask\" : \"2351\",\n  \"status\" : \"Active\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"routingNumber\" : \"routingNumber\",\n  \"externalAccountId\" : \"externalAccountId\",\n  \"accountNickName\" : \"accountNickName\",\n  \"bankName\" : \"bankName\",\n  \"accountNumber\" : \"accountNumber\",\n  \"maskedAccountNumber\" : \"maskedAccountNumber\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":[],"mappings":";;;;;;;MAmBa,aAAa,GAAG;IACzB,MAAM,EAAE,QAAyB;IACjC,SAAS,EAAE,WAA4B;IACvC,iBAAiB,EAAE,mBAAoC;IACvD,kBAAkB,EAAE,oBAAqC;IACzD,sBAAsB,EAAE,wBAAyC;IACjE,2BAA2B,EAAE,6BAA8C;IAC3E,gBAAgB,EAAE,kBAAmC;;;MCV5C,WAAW,GAAG;IACvB,QAAQ,EAAE,UAAyB;IACnC,OAAO,EAAE,SAAwB;;;MChBxB,2BAA2B,GAAG,IAAI,cAAc,CAAS,6BAA6B,EAAE;MACxF,kBAAkB,GAAG;IAC9B,KAAK,EAAE,GAAG;IACV,KAAK,EAAE,KAAK;IACZ,KAAK,EAAE,GAAG;IACV,OAAO,EAAE,GAAG;;;MCaH,4BAA4B;IAerC,YAAY,0BAAkE,EAAE;QAC5E,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC,OAAO,CAAC;QAC/C,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC,QAAQ,CAAC;QACjD,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC,QAAQ,CAAC;QACjD,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC,WAAW,CAAC;QACvD,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC,QAAQ,CAAC;QACjD,IAAI,CAAC,eAAe,GAAG,uBAAuB,CAAC,eAAe,CAAC;QAC/D,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC,OAAO,CAAC;QAC/C,IAAI,uBAAuB,CAAC,WAAW,EAAE;YACrC,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC,WAAW,CAAC;SAC1D;aACI;YACD,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;SACzB;KACJ;IASM,uBAAuB,CAAE,YAAsB;QAClD,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,OAAO,SAAS,CAAC;SACpB;QAED,MAAM,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAS,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE,IAAI,IAAI,KAAK,SAAS,EAAE;YACpB,OAAO,YAAY,CAAC,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC;KACf;IASM,kBAAkB,CAAC,OAAiB;QACvC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,OAAO,SAAS,CAAC;SACpB;QAED,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAS,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,IAAI,IAAI,KAAK,SAAS,EAAE;YACpB,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;SACrB;QACD,OAAO,IAAI,CAAC;KACf;IAYM,UAAU,CAAC,IAAY;QAC1B,MAAM,QAAQ,GAAW,IAAI,MAAM,CAAC,+DAA+D,EAAE,GAAG,CAAC,CAAC;QAC1G,OAAO,IAAI,KAAK,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE,KAAK,6BAA6B,CAAC,CAAC;KACzG;IAEM,gBAAgB,CAAC,GAAW;QAC/B,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACpC,OAAO,OAAO,KAAK,KAAK,UAAU;cAC5B,KAAK,EAAE;cACP,KAAK,CAAC;KACf;CACJ;MAEY,YAAY,GAAG,IAAI,cAAc,CAAC,8CAA8C;;MCpGhF,wBAAwB;IAQjC,YAAqC,YAAsC,EAClD,IAAgB,EAChB,kBAA6C,EACzD,MAAoC;QAG7C,IAAI,YAAY,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,iFAAiF,CAAC,CAAC;SACtG;QACD,IAAI,CAAC,IAAI,EAAE;YACP,MAAM,IAAI,KAAK,CAAC,+DAA+D;gBAC/E,0DAA0D,CAAC,CAAC;SAC/D;QAED,IAAI,kBAAkB,EAAE;YACpB,kBAAkB,CAAC,eAAe,CAAC,YAAY,EAAE;gBAC7C,OAAO,EAAE,EAAE;gBACX,WAAW,EAAE,MAAM,CAAC,QAAQ,IAAI,EAAE;gBAClC,OAAO,EAAE,EAAE;aACd,CAAC,CAAC;SACN;KACJ;IA5BM,OAAO,OAAO,CAAC,oBAAwD;QAC1E,OAAO;YACH,QAAQ,EAAE,wBAAwB;YAClC,SAAS,EAAE,CAAE,EAAE,OAAO,EAAE,4BAA4B,EAAE,UAAU,EAAE,oBAAoB,EAAE,CAAE;SAC7F,CAAC;KACL;;sHANQ,wBAAwB,kBAQkB,wBAAwB;uHARlE,wBAAwB;uHAAxB,wBAAwB,aAFrB,EAAE,YAHF,EAAE;4FAKL,wBAAwB;kBANpC,QAAQ;mBAAC;oBACR,OAAO,EAAO,EAAE;oBAChB,YAAY,EAAE,EAAE;oBAChB,OAAO,EAAO,EAAE;oBAChB,SAAS,EAAK,EAAE;iBACjB;0DASsD,wBAAwB;0BAA7D,QAAQ;;0BAAI,QAAQ;;0BACpB,QAAQ;;0BACR,QAAQ;;;MChBb,wBAAwB;IACjC,SAAS,CAAC,CAAS;QACf,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;KAChC;IACD,WAAW,CAAC,CAAS;QACjB,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;KAChC;IACD,SAAS,CAAC,CAAS;QACf,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;KAChC;IACD,WAAW,CAAC,CAAS;QACjB,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;KAChC;;;MC8CQ,oBAAoB;IAO7B,YAAsB,UAAsB,EAAmD,QAAgB,EAAc,aAA2C;QAAlJ,eAAU,GAAV,UAAU,CAAY;QALlC,aAAQ,GAAG,EAAE,CAAC;QACjB,mBAAc,GAAG,IAAI,WAAW,EAAE,CAAC;QACnC,kBAAa,GAAG,IAAI,4BAA4B,EAAE,CAAC;QAItD,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;SACtC;QACD,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,QAAQ,EAAE;YACjD,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;gBAC9B,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC5B;YACD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1C;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,wBAAwB,EAAE,CAAC;KAC/E;IAGO,eAAe,CAAC,UAAsB,EAAE,KAAU,EAAE,GAAY;QACpE,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,YAAY,IAAI,KAAK,KAAK,EAAE;YAC9D,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACjE;aAAM;YACH,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;SACtE;QACD,OAAO,UAAU,CAAC;KACrB;IAEO,wBAAwB,CAAC,UAAsB,EAAE,KAAW,EAAE,GAAY;QAC9E,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,OAAO,UAAU,CAAC;SACrB;QAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACrB,KAAe,CAAC,OAAO,CAAE,IAAI,IAAI,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;aACxG;iBAAM,IAAI,KAAK,YAAY,IAAI,EAAE;gBAC9B,IAAI,GAAG,IAAI,IAAI,EAAE;oBACb,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAC7B,KAAc,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;iBACpD;qBAAM;oBACJ,MAAM,KAAK,CAAC,sCAAsC,CAAC,CAAC;iBACtD;aACJ;iBAAM;gBACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAE,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,wBAAwB,CACvE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;aAC/D;SACJ;aAAM,IAAI,GAAG,IAAI,IAAI,EAAE;YACpB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SAC9C;aAAM;YACH,MAAM,KAAK,CAAC,qDAAqD,CAAC,CAAC;SACtE;QACD,OAAO,UAAU,CAAC;KACrB;IA6BM,OAAO,CAAC,iBAAsC,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAC5J,MAAM,kBAAkB,GAAG,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;QAClE,IAAI,kBAAkB,KAAK,IAAI,IAAI,kBAAkB,KAAK,SAAS,EAAE;YACjE,MAAM,IAAI,KAAK,CAAC,kFAAkF,CAAC,CAAC;SACvG;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAM,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,oCAAoC,kBAAkB,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,EAAE,EACjJ;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,UAAU,CAAC,iBAAsC;QACpD,MAAM,kBAAkB,GAAG,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;QAClE,IAAI,kBAAkB,KAAK,IAAI,IAAI,kBAAkB,KAAK,SAAS,EAAE;YACjE,MAAM,IAAI,KAAK,CAAC,kFAAkF,CAAC,CAAC;SACvG;QACD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,oCAAoC,kBAAkB,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC;KAC7H;IA6BM,MAAM,CAAC,iBAAsC,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAC3J,MAAM,2BAA2B,GAAG,iBAAiB,CAAC,4BAA4B,CAAC,CAAC;QACpF,IAAI,2BAA2B,KAAK,IAAI,IAAI,2BAA2B,KAAK,SAAS,EAAE;YACnF,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;SAC/G;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAID,MAAM,QAAQ,GAAa;YACvB,kBAAkB;SACrB,CAAC;QACF,MAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;YACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;SAClE;QAED,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAoC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,kCAAkC,EAC3H,2BAA2B,EAC3B;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,SAAS,CAAC,iBAAsC;QACnD,MAAM,2BAA2B,GAAG,iBAAiB,CAAC,4BAA4B,CAAC,CAAC;QACpF,IAAI,2BAA2B,KAAK,IAAI,IAAI,2BAA2B,KAAK,SAAS,EAAE;YACnF,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;SAC/G;QACD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,kCAAkC,CAAC;KAC3E;IAyBM,MAAM,CAAC,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAEnH,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA6B,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,kCAAkC,EACnH;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,SAAS;QACZ,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,kCAAkC,CAAC;KAC3E;IA6BM,OAAO,CAAC,iBAAuC,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAC7J,MAAM,kBAAkB,GAAG,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;QAClE,IAAI,kBAAkB,KAAK,IAAI,IAAI,kBAAkB,KAAK,SAAS,EAAE;YACjE,MAAM,IAAI,KAAK,CAAC,kFAAkF,CAAC,CAAC;SACvG;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAoC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,oCAAoC,kBAAkB,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,EAAE,EAC5K;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,UAAU,CAAC,iBAAuC;QACrD,MAAM,kBAAkB,GAAG,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;QAClE,IAAI,kBAAkB,KAAK,IAAI,IAAI,kBAAkB,KAAK,SAAS,EAAE;YACjE,MAAM,IAAI,KAAK,CAAC,kFAAkF,CAAC,CAAC;SACvG;QACD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,oCAAoC,kBAAkB,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC;KAC7H;IA6BM,MAAM,CAAC,iBAAsC,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAC3J,MAAM,kBAAkB,GAAG,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;QAClE,IAAI,kBAAkB,KAAK,IAAI,IAAI,kBAAkB,KAAK,SAAS,EAAE;YACjE,MAAM,IAAI,KAAK,CAAC,iFAAiF,CAAC,CAAC;SACtG;QACD,MAAM,0BAA0B,GAAG,iBAAiB,CAAC,2BAA2B,CAAC,CAAC;QAClF,IAAI,0BAA0B,KAAK,IAAI,IAAI,0BAA0B,KAAK,SAAS,EAAE;YACjF,MAAM,IAAI,KAAK,CAAC,yFAAyF,CAAC,CAAC;SAC9G;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAID,MAAM,QAAQ,GAAa;YACvB,kBAAkB;SACrB,CAAC;QACF,MAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;YACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;SAClE;QAED,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAoC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,oCAAoC,kBAAkB,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,EAAE,EAC5K,0BAA0B,EAC1B;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,SAAS,CAAC,iBAAsC;QACnD,MAAM,kBAAkB,GAAG,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;QAClE,IAAI,kBAAkB,KAAK,IAAI,IAAI,kBAAkB,KAAK,SAAS,EAAE;YACjE,MAAM,IAAI,KAAK,CAAC,iFAAiF,CAAC,CAAC;SACtG;QACD,MAAM,0BAA0B,GAAG,iBAAiB,CAAC,2BAA2B,CAAC,CAAC;QAClF,IAAI,0BAA0B,KAAK,IAAI,IAAI,0BAA0B,KAAK,SAAS,EAAE;YACjF,MAAM,IAAI,KAAK,CAAC,yFAAyF,CAAC,CAAC;SAC9G;QACD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,oCAAoC,kBAAkB,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC;KAC7H;IA6BM,MAAM,CAAC,iBAAsC,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAC3J,MAAM,kBAAkB,GAAG,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;QAClE,IAAI,kBAAkB,KAAK,IAAI,IAAI,kBAAkB,KAAK,SAAS,EAAE;YACjE,MAAM,IAAI,KAAK,CAAC,iFAAiF,CAAC,CAAC;SACtG;QACD,MAAM,sCAAsC,GAAG,iBAAiB,CAAC,uCAAuC,CAAC,CAAC;QAC1G,IAAI,sCAAsC,KAAK,IAAI,IAAI,sCAAsC,KAAK,SAAS,EAAE;YACzG,MAAM,IAAI,KAAK,CAAC,qGAAqG,CAAC,CAAC;SAC1H;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAID,MAAM,QAAQ,GAAa;YACvB,kBAAkB;SACrB,CAAC;QACF,MAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;YACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;SAClE;QAED,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAoC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,oCAAoC,kBAAkB,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,uBAAuB,EACjM,sCAAsC,EACtC;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,SAAS,CAAC,iBAAsC;QACnD,MAAM,kBAAkB,GAAG,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;QAClE,IAAI,kBAAkB,KAAK,IAAI,IAAI,kBAAkB,KAAK,SAAS,EAAE;YACjE,MAAM,IAAI,KAAK,CAAC,iFAAiF,CAAC,CAAC;SACtG;QACD,MAAM,sCAAsC,GAAG,iBAAiB,CAAC,uCAAuC,CAAC,CAAC;QAC1G,IAAI,sCAAsC,KAAK,IAAI,IAAI,sCAAsC,KAAK,SAAS,EAAE;YACzG,MAAM,IAAI,KAAK,CAAC,qGAAqG,CAAC,CAAC;SAC1H;QACD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,oCAAoC,kBAAkB,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,uBAAuB,CAAC;KAClJ;;kHAzgBQ,oBAAoB,4CAOqC,2BAA2B;sHAPpF,oBAAoB,cAFnB,MAAM;4FAEP,oBAAoB;kBAHhC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;0BAQkD,QAAQ;;0BAAI,MAAM;2BAAC,2BAA2B;;0BAAqB,QAAQ;;;MCjEjH,wCAAwC,GAAa,WAAW,CAAC,CAAC;QACvE,UAAU,EAAE,sDAAsD;QAClE,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE;YACH;gBACA,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAE;aACP;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,uCAAuC,GAAa,WAAW,CAAC,CAAC;QACtE,UAAU,EAAE,kCAAkC;QAC9C,MAAM,EAAE,MAAM;QACd,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,mBAAmB,EAAG,UAAU;oBAChC,eAAe,EAAG,WAAW;oBAC7B,eAAe,EAAG,OAAO;oBACzB,aAAa,EAAG,UAAU;oBAC1B,iBAAiB,EAAG,UAAU;oBAC9B,UAAU,EAAG,YAAY;oBACzB,aAAa,EAAG,MAAM;oBACtB,QAAQ,EAAG,QAAQ;iBACpB;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,uCAAuC,GAAa,WAAW,CAAC,CAAC;QACtE,UAAU,EAAE,kCAAkC;QAC9C,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,UAAU,EAAG,CAAE;4BACb,mBAAmB,EAAG,UAAU;4BAChC,eAAe,EAAG,WAAW;4BAC7B,eAAe,EAAG,OAAO;4BACzB,aAAa,EAAG,UAAU;4BAC1B,iBAAiB,EAAG,WAAW;4BAC/B,UAAU,EAAG,YAAY;4BACzB,qBAAqB,EAAG,MAAM;4BAC9B,QAAQ,EAAG,QAAQ;yBACpB,EAAE;4BACD,mBAAmB,EAAG,UAAU;4BAChC,eAAe,EAAG,WAAW;4BAC7B,eAAe,EAAG,OAAO;4BACzB,aAAa,EAAG,SAAS;4BACzB,iBAAiB,EAAG,WAAW;4BAC/B,UAAU,EAAG,YAAY;4BACzB,qBAAqB,EAAG,MAAM;4BAC9B,QAAQ,EAAG,mBAAmB;yBAC/B,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,wCAAwC,GAAa,WAAW,CAAC,CAAC;QACvE,UAAU,EAAE,sDAAsD;QAClE,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,mBAAmB,EAAG,UAAU;oBAChC,eAAe,EAAG,WAAW;oBAC7B,eAAe,EAAG,OAAO;oBACzB,aAAa,EAAG,UAAU;oBAC1B,iBAAiB,EAAG,UAAU;oBAC9B,UAAU,EAAG,YAAY;oBACzB,aAAa,EAAG,MAAM;oBACtB,QAAQ,EAAG,QAAQ;iBACpB;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,eAAe,EAAG,eAAe;oBACjC,mBAAmB,EAAG,mBAAmB;oBACzC,iBAAiB,EAAG,iBAAiB;oBACrC,UAAU,EAAG,UAAU;oBACvB,eAAe,EAAG,eAAe;oBACjC,qBAAqB,EAAG,qBAAqB;iBAC9C;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,uCAAuC,GAAa,WAAW,CAAC,CAAC;QACtE,UAAU,EAAE,sDAAsD;QAClE,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,mBAAmB,EAAG,UAAU;oBAChC,eAAe,EAAG,WAAW;oBAC7B,eAAe,EAAG,OAAO;oBACzB,aAAa,EAAG,UAAU;oBAC1B,iBAAiB,EAAG,UAAU;oBAC9B,UAAU,EAAG,YAAY;oBACzB,aAAa,EAAG,MAAM;oBACtB,QAAQ,EAAG,QAAQ;iBACpB;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,eAAe,EAAG,eAAe;oBACjC,mBAAmB,EAAG,mBAAmB;oBACzC,iBAAiB,EAAG,iBAAiB;oBACrC,UAAU,EAAG,UAAU;oBACvB,eAAe,EAAG,eAAe;oBACjC,qBAAqB,EAAG,qBAAqB;iBAC9C;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,uCAAuC,GAAa,WAAW,CAAC,CAAC;QACtE,UAAU,EAAE,2EAA2E;QACvF,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,mBAAmB,EAAG,UAAU;oBAChC,eAAe,EAAG,WAAW;oBAC7B,eAAe,EAAG,OAAO;oBACzB,aAAa,EAAG,UAAU;oBAC1B,iBAAiB,EAAG,UAAU;oBAC9B,UAAU,EAAG,YAAY;oBACzB,aAAa,EAAG,MAAM;oBACtB,QAAQ,EAAG,QAAQ;iBACpB;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,eAAe,EAAG,eAAe;oBACjC,mBAAmB,EAAG,mBAAmB;oBACzC,iBAAiB,EAAG,iBAAiB;oBACrC,UAAU,EAAG,UAAU;oBACvB,eAAe,EAAG,eAAe;oBACjC,qBAAqB,EAAG,qBAAqB;iBAC9C;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACgB;SACZ;KACJ,CAAC,EAAE;MAES,iCAAiC,GAAa,WAAW,CAClE;IACA;QACI,UAAU,EAAE,sDAAsD;QAClE,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE;YAEX;gBACE,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAE;aACT;YAEG;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,kCAAkC;QAC9C,MAAM,EAAE,MAAM;QACd,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,mBAAmB,EAAG,UAAU;oBAChC,eAAe,EAAG,WAAW;oBAC7B,eAAe,EAAG,OAAO;oBACzB,aAAa,EAAG,UAAU;oBAC1B,iBAAiB,EAAG,UAAU;oBAC9B,UAAU,EAAG,YAAY;oBACzB,aAAa,EAAG,MAAM;oBACtB,QAAQ,EAAG,QAAQ;iBACpB;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,kCAAkC;QAC9C,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,UAAU,EAAG,CAAE;4BACb,mBAAmB,EAAG,UAAU;4BAChC,eAAe,EAAG,WAAW;4BAC7B,eAAe,EAAG,OAAO;4BACzB,aAAa,EAAG,UAAU;4BAC1B,iBAAiB,EAAG,WAAW;4BAC/B,UAAU,EAAG,YAAY;4BACzB,qBAAqB,EAAG,MAAM;4BAC9B,QAAQ,EAAG,QAAQ;yBACpB,EAAE;4BACD,mBAAmB,EAAG,UAAU;4BAChC,eAAe,EAAG,WAAW;4BAC7B,eAAe,EAAG,OAAO;4BACzB,aAAa,EAAG,SAAS;4BACzB,iBAAiB,EAAG,WAAW;4BAC/B,UAAU,EAAG,YAAY;4BACzB,qBAAqB,EAAG,MAAM;4BAC9B,QAAQ,EAAG,mBAAmB;yBAC/B,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,sDAAsD;QAClE,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,mBAAmB,EAAG,UAAU;oBAChC,eAAe,EAAG,WAAW;oBAC7B,eAAe,EAAG,OAAO;oBACzB,aAAa,EAAG,UAAU;oBAC1B,iBAAiB,EAAG,UAAU;oBAC9B,UAAU,EAAG,YAAY;oBACzB,aAAa,EAAG,MAAM;oBACtB,QAAQ,EAAG,QAAQ;iBACpB;aACY;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,eAAe,EAAG,eAAe;oBACjC,mBAAmB,EAAG,mBAAmB;oBACzC,iBAAiB,EAAG,iBAAiB;oBACrC,UAAU,EAAG,UAAU;oBACvB,eAAe,EAAG,eAAe;oBACjC,qBAAqB,EAAG,qBAAqB;iBAC9C;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,sDAAsD;QAClE,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,mBAAmB,EAAG,UAAU;oBAChC,eAAe,EAAG,WAAW;oBAC7B,eAAe,EAAG,OAAO;oBACzB,aAAa,EAAG,UAAU;oBAC1B,iBAAiB,EAAG,UAAU;oBAC9B,UAAU,EAAG,YAAY;oBACzB,aAAa,EAAG,MAAM;oBACtB,QAAQ,EAAG,QAAQ;iBACpB;aACY;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,eAAe,EAAG,eAAe;oBACjC,mBAAmB,EAAG,mBAAmB;oBACzC,iBAAiB,EAAG,iBAAiB;oBACrC,UAAU,EAAG,UAAU;oBACvB,eAAe,EAAG,eAAe;oBACjC,qBAAqB,EAAG,qBAAqB;iBAC9C;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,2EAA2E;QACvF,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,mBAAmB,EAAG,UAAU;oBAChC,eAAe,EAAG,WAAW;oBAC7B,eAAe,EAAG,OAAO;oBACzB,aAAa,EAAG,UAAU;oBAC1B,iBAAiB,EAAG,UAAU;oBAC9B,UAAU,EAAG,YAAY;oBACzB,aAAa,EAAG,MAAM;oBACtB,QAAQ,EAAG,QAAQ;iBACpB;aACY;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,eAAe,EAAG,eAAe;oBACjC,mBAAmB,EAAG,mBAAmB;oBACzC,iBAAiB,EAAG,iBAAiB;oBACrC,UAAU,EAAG,UAAU;oBACvB,eAAe,EAAG,eAAe;oBACjC,qBAAqB,EAAG,qBAAqB;iBAC9C;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,aAAa;oBACzB,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,kDAAkD;4BAC9D,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,KAAK,EAAG,IAAI;gCACZ,KAAK,EAAG,GAAG;6BACZ;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,qBAAqB;oBACjC,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,6DAA6D;4BACzE,KAAK,EAAG,qBAAqB;4BAC7B,SAAS,EAAG;gCACV,UAAU,EAAG,WAAW;6BACzB;yBACF,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,SAAS,EAAG,sCAAsC;oBAClD,QAAQ,EAAG,CAAE;4BACX,SAAS,EAAG,sEAAsE;4BAClF,KAAK,EAAG,kBAAkB;4BAC1B,SAAS,EAAG;gCACV,OAAO,EAAG,WAAW;6BACtB;yBACF,CAAE;iBACJ;aACY;SACR;KACJ;CACA;;;;"}