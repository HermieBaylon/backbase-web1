{"version":3,"file":"backbase-user-common.js","sources":["../../../../libs/user-common/src/components/bb-cancel-modal/cancel-modal.component.ts","../../../../libs/user-common/src/components/bb-cancel-modal/cancel-modal.component.html","../../../../libs/user-common/src/components/bb-cancel-modal/cancel-modal.module.ts","../../../../libs/user-common/src/components/input-base/input-base.ts","../../../../libs/user-common/src/services/manage-profile/manage-profile-preferences.service.ts","../../../../libs/user-common/src/components/manage-profile/edit-address/edit-address.component.ts","../../../../libs/user-common/src/components/manage-profile/manage-email-addresses/edit-email-address.component.ts","../../../../libs/user-common/src/components/manage-profile/manage-email-addresses/manage-email-address.component.ts","../../../../libs/user-common/src/components/manage-profile/manage-email-addresses/manage-email-addresses.component.ts","../../../../libs/user-common/src/components/manage-profile/new-address/new-address.component.ts","../../../../libs/user-common/src/components/manage-profile/manage-email-addresses/new-email-address.component.ts","../../../../libs/user-common/src/components/manage-profile/manage-phone-numbers/edit-phone-number.component.ts","../../../../libs/user-common/src/components/manage-profile/manage-phone-numbers/manage-phone-number.component.ts","../../../../libs/user-common/src/components/manage-profile/manage-phone-numbers/manage-phone-numbers.component.ts","../../../../libs/user-common/src/components/manage-profile/manage-phone-numbers/new-phone-number.component.ts","../../../../libs/user-common/src/components/manage-profile/manage-postal-addresses/edit-postal-address.component.ts","../../../../libs/user-common/src/components/manage-profile/manage-postal-addresses/manage-postal-address.component.ts","../../../../libs/user-common/src/components/manage-profile/manage-postal-addresses/manage-postal-addresses.component.ts","../../../../libs/user-common/src/components/manage-profile/manage-postal-addresses/new-postal-address.component.ts","../../../../libs/user-common/src/components/manage-profile/manage-profile-form/manage-profile-form.component.ts","../../../../libs/user-common/src/components/manage-profile/manage-profile-form/manage-profile-email-address-form.component.ts","../../../../libs/user-common/src/components/manage-profile/manage-profile-form/manage-profile-phone-number-form.component.ts","../../../../libs/user-common/src/components/manage-profile/manage-profile-form/manage-profile-postal-address-form.component.ts","../../../../libs/user-common/src/components/manage-profile/manage-profile.component.ts","../../../../libs/user-common/src/components/phone-number-input/phone-number-input-base.ts","../../../../libs/user-common/src/components/user-common.module.ts","../../../../libs/user-common/src/services/id-generator/id-generator.service.ts","../../../../libs/user-common/src/services/legal-entity-data/legal-entity-data.service.ts","../../../../libs/user-common/src/services/manage-profile/manage-profile.service.ts","../../../../libs/user-common/src/services/user-data/user-data.service.ts","../../../../libs/user-common/src/services/user-router/user-router.service.ts","../../../../libs/user-common/src/services/utility/utility.service.ts","../../../../libs/user-common/src/types/user-actions.enum.ts","../../../../libs/user-common/src/types/user-approval-type.enum.ts","../../../../libs/user-common/src/types/user-status.enum.ts","../../../../libs/user-common/src/utils/utils.ts","../../../../libs/user-common/public_api.ts","../../../../libs/user-common/backbase-user-common.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'bb-cancel-modal',\n  templateUrl: './cancel-modal.component.html',\n})\nexport class CancelModalComponent {\n  /**\n   * An event emitter to signal continue has been pressed\n   */\n  @Output() continue = new EventEmitter<void>();\n  /**\n   * An event emitter to signal discard has been pressed\n   */\n  @Output() discard = new EventEmitter<void>();\n  /**\n   * An input which tells the component if it should open the modal\n   */\n  @Input() isOpen: boolean | undefined;\n\n  dismissModal() {\n    this.continue.emit();\n  }\n  closeModal() {\n    this.discard.emit();\n  }\n}\n","\n<bb-modal-ui [isOpen]=\"isOpen\" (cancel)=\"dismissModal()\">\n  <div data-role=\"cancel-confirmation-modal\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h3\"\n          i18n-heading=\"Changes modal title|Title of the confirmation modal for discarding working changes@@bb-cancel-modal.title\"\n          heading=\"Discard Changes\">\n        </bb-header-ui>\n      </ng-template> \n    </bb-modal-header-ui>\n\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody i18n=\"Discard changes modal body|Body text of the confirmation modal for discarding working changes@@bb-cancel-modal.body\">\n        Are you sure you want to cancel and discard all changes?\n      </ng-template>\n    </bb-modal-body-ui>\n\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <button bbButton\n          type=\"button\"\n          color=\"secondary\"\n          data-role=\"cancel-confirmation-modal-continue-button\"\n          (click)=\"dismissModal()\"\n          i18n=\"Dismiss discard modal button|Text of the button that dismisses the discard changes confirmation modal@@bb-cancel-modal.cancel\">\n          Continue editing\n        </button>\n        <button bbButton\n          type=\"button\"\n          color=\"danger\"\n          (click)=\"closeModal()\"\n          data-role=\"cancel-confirmation-modal-discard-button\"\n          i18n=\"Confirm discard modal button|Text of the button that confirms the discard changes confirmation modal@@bb-cancel-modal.confirm\">\n          Discard changes\n        </button>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </div>\n</bb-modal-ui>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { CancelModalComponent } from './cancel-modal.component';\n\nconst uiModules = [ButtonModule, ModalModule, HeaderModule];\n\n@NgModule({\n  imports: [CommonModule, ...uiModules],\n  declarations: [CancelModalComponent],\n  exports: [CancelModalComponent, ...uiModules],\n})\nexport class CancelModalModule {}\n","import { Directive, Input } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\n\n@Directive({\n  selector: '[bbUserInputBase]',\n})\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport class InputBase {\n  /**\n   * The form group used for input model.\n   */\n  @Input() formGroup: FormGroup | undefined;\n  /**\n   * The name of the field in the form group.\n   */\n  @Input() fieldName: string | undefined;\n  /**\n   * A flag to determine if the form has been submitted.\n   * Defaults to false.\n   */\n  @Input() hasBeenSubmitted = false;\n  hasBlurred = false;\n\n  get fieldControl(): AbstractControl {\n    if (!this.formGroup) {\n      throw new Error('formGroup must be initialised to type FormGroup');\n    }\n\n    if (!this.fieldName) {\n      throw new Error('fieldName must be initialised to type FormFieldName');\n    }\n\n    return this.formGroup.controls[this.fieldName];\n  }\n\n  get hasErrors(): boolean {\n    if (this.hasBeenSubmitted) {\n      this.onFieldBlur();\n    }\n\n    return Boolean(this.fieldControl && this.fieldControl.touched && this.fieldControl.errors && this.hasBlurred);\n  }\n\n  onFieldBlur() {\n    this.hasBlurred = true;\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport { CountryCode } from '@backbase/ui-ang/phone-number-format-pipe';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface DefaultProperties {\n  notificationDismissTime: number;\n  enablePhoneNumberFormatter: boolean;\n  phoneNumberCountryCode: CountryCode;\n  phoneNumberDebounceTime: number;\n  lockUnlockUserAccountCommentRequired: boolean;\n  emailAddressTypes: Array<string>;\n  postalAddressTypes: Array<string>;\n  phoneNumberTypes: Array<string>;\n  maxEmailAddresses: number;\n  maxPhoneNumbers: number;\n  maxPostalAddresses: number;\n  legalEntityDebounceTime: number;\n  usernameDebounceTime: number;\n  requiredUserActionsDebounceTime: number;\n  legalEntityResponseSize: number;\n  showWidgetHeader: boolean;\n}\n\nconst defaultProperties: DefaultProperties = {\n  notificationDismissTime: 3,\n  enablePhoneNumberFormatter: true,\n  phoneNumberCountryCode: 'CA',\n  phoneNumberDebounceTime: 1,\n  lockUnlockUserAccountCommentRequired: false,\n  emailAddressTypes: [''],\n  postalAddressTypes: [''],\n  phoneNumberTypes: [''],\n  maxEmailAddresses: 3,\n  maxPhoneNumbers: 3,\n  maxPostalAddresses: 3,\n  legalEntityDebounceTime: 1,\n  usernameDebounceTime: 1,\n  requiredUserActionsDebounceTime: 1,\n  legalEntityResponseSize: 5,\n  showWidgetHeader: true,\n};\n\nexport interface WidgetPreferences {\n  emailAddressTypes: Array<string>;\n  postalAddressTypes: Array<string>;\n  phoneNumberTypes: Array<string>;\n  maxEmailAddresses: number;\n  maxPhoneNumbers: number;\n  maxPostalAddresses: number;\n  showWidgetHeader: boolean;\n}\n\nexport interface PhoneNumberInputPreferences {\n  debounceTime: number;\n  countryCode: CountryCode;\n  enablePhoneNumberFormatter?: boolean;\n}\n\n@Injectable()\nexport class ManageProfilePreferencesService {\n  constructor(@Optional() private readonly model?: ItemModel) {}\n\n  getPhoneNumberInputPreferences(): Observable<PhoneNumberInputPreferences> {\n    return combineLatest([\n      this.getPhoneNumberDebounceTimePreference(),\n      this.getPhoneNumberCountryCodePreference(),\n      this.getPhoneNumberFormatPreference(),\n    ]).pipe(\n      map(([debounceTime, countryCode, enablePhoneNumberFormatter]: [number, CountryCode, boolean]) => ({\n        debounceTime,\n        countryCode,\n        enablePhoneNumberFormatter,\n      })),\n    );\n  }\n\n  private getPhoneNumberDebounceTimePreference(): Observable<number> {\n    return this.model\n      ? this.model.property<number>('phoneNumberDebounceTime', defaultProperties.phoneNumberDebounceTime)\n      : of(defaultProperties.phoneNumberDebounceTime);\n  }\n\n  private getPhoneNumberCountryCodePreference(): Observable<CountryCode> {\n    return this.model ? this.model.property<CountryCode>('phoneNumberCountryCode', 'CA') : of('CA');\n  }\n\n  private getPhoneNumberFormatPreference(): Observable<boolean> {\n    return this.model\n      ? this.model\n          .property<string>('enablePhoneNumberFormatter', JSON.stringify(defaultProperties.enablePhoneNumberFormatter))\n          .pipe(map((value) => value === 'true'))\n      : of(defaultProperties.enablePhoneNumberFormatter);\n  }\n\n  getNotificationDismissTimePreference(): Observable<number> {\n    return this.model\n      ? this.model.property('notificationDismissTime', defaultProperties.notificationDismissTime)\n      : of(defaultProperties.notificationDismissTime);\n  }\n\n  getLockUnlockAccountCommentRequiredPreference(): Observable<boolean> {\n    return this.model\n      ? this.model.property<boolean>(\n          'lockUnlockUserAccountCommentRequired',\n          defaultProperties.lockUnlockUserAccountCommentRequired,\n        )\n      : of(defaultProperties.lockUnlockUserAccountCommentRequired);\n  }\n\n  getWidgetPreferences(): Observable<WidgetPreferences> {\n    const preferenceObservables: Observable<any>[] = [\n      this.getEmailAddressTypePreferences(),\n      this.getPostalAddressTypePreferences(),\n      this.getPhoneNumberTypePreferences(),\n      this.getMaxEmailAddressesPreference(),\n      this.getMaxPhoneNumbersPreference(),\n      this.getMaxPostalAddressesPreference(),\n      this.getShowWidgetHeaderPreference(),\n    ];\n\n    return combineLatest(preferenceObservables).pipe(\n      map(\n        ([\n          emailAddressTypes,\n          postalAddressTypes,\n          phoneNumberTypes,\n          maxEmailAddresses,\n          maxPhoneNumbers,\n          maxPostalAddresses,\n          showWidgetHeader,\n        ]: any[]) => ({\n          emailAddressTypes,\n          postalAddressTypes,\n          phoneNumberTypes,\n          maxEmailAddresses,\n          maxPhoneNumbers,\n          maxPostalAddresses,\n          showWidgetHeader,\n        }),\n      ),\n    );\n  }\n\n  private getEmailAddressTypePreferences(): Observable<Array<string>> {\n    return this.getModelToSeparatedStringArray('emailAddressTypes');\n  }\n\n  private getPostalAddressTypePreferences(): Observable<Array<string>> {\n    return this.getModelToSeparatedStringArray('postalAddressTypes');\n  }\n\n  private getPhoneNumberTypePreferences(): Observable<Array<string>> {\n    return this.getModelToSeparatedStringArray('phoneNumberTypes');\n  }\n\n  private getModelToSeparatedStringArray(\n    modelName: 'emailAddressTypes' | 'postalAddressTypes' | 'phoneNumberTypes',\n  ): Observable<Array<string>> {\n    return this.model\n      ? this.model.property<string>(modelName, '').pipe(map(this.convertCommaSeparatedStringToStringArray))\n      : of(defaultProperties[modelName]);\n  }\n\n  private convertCommaSeparatedStringToStringArray(value: string) {\n    return value ? value.split(',').map((arrayItem) => arrayItem.trim()) : [];\n  }\n\n  private getMaxEmailAddressesPreference(): Observable<number> {\n    return this.model\n      ? this.model.property<number>('maxEmailAddresses', defaultProperties.maxEmailAddresses)\n      : of(defaultProperties.maxEmailAddresses);\n  }\n\n  private getMaxPhoneNumbersPreference(): Observable<number> {\n    return this.model\n      ? this.model.property<number>('maxPhoneNumbers', defaultProperties.maxPhoneNumbers)\n      : of(defaultProperties.maxPhoneNumbers);\n  }\n\n  private getMaxPostalAddressesPreference(): Observable<number> {\n    return this.model\n      ? this.model.property<number>('maxPostalAddresses', defaultProperties.maxPostalAddresses)\n      : of(defaultProperties.maxPostalAddresses);\n  }\n\n  getLegalEntityDebouncePreference(): Observable<number> {\n    return this.model\n      ? this.model.property<number>('legalEntityDebounceTime', defaultProperties.legalEntityDebounceTime)\n      : of(defaultProperties.legalEntityDebounceTime);\n  }\n\n  getUsernameDebouncePreference(): Observable<number> {\n    return this.model\n      ? this.model.property<number>('usernameDebounceTime', defaultProperties.usernameDebounceTime)\n      : of(defaultProperties.usernameDebounceTime);\n  }\n\n  getRequiredUserActionsDebouncePreference(): Observable<number> {\n    return this.model\n      ? this.model.property<number>(\n          'requiredUserActionsDebounceTime',\n          defaultProperties.requiredUserActionsDebounceTime,\n        )\n      : of(defaultProperties.requiredUserActionsDebounceTime);\n  }\n\n  getLegalEntityResponseSizePreference(): Observable<number> {\n    return this.model\n      ? this.model.property<number>('legalEntityResponseSize', defaultProperties.legalEntityResponseSize)\n      : of(defaultProperties.legalEntityResponseSize);\n  }\n\n  getShowWidgetHeaderPreference(): Observable<boolean> {\n    return this.model\n      ? this.model\n          .property<string>('showWidgetHeader', JSON.stringify(defaultProperties.showWidgetHeader))\n          .pipe(map((value) => !!value && value !== 'false'))\n      : of(defaultProperties.showWidgetHeader);\n  }\n}\n","import { HttpResponse } from '@angular/common/http';\nimport {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { BehaviorSubject, combineLatest, Observable, of, Subscription } from 'rxjs';\nimport { catchError, map, publish, tap } from 'rxjs/operators';\nimport { ManageProfilePreferencesService } from '../../../services/manage-profile/manage-profile-preferences.service';\n\n@Component({\n  template: '',\n})\nexport class EditAddressComponent implements OnDestroy {\n  @Output() close = new EventEmitter<void>();\n  @Output() closeAfterSave = new EventEmitter<void>();\n  @ViewChild('notificationUpdateSuccess') notificationUpdateSuccessTemplate: TemplateRef<any> | undefined;\n  @ViewChild('notificationDeleteSuccess') notificationDeleteSuccessTemplate: TemplateRef<any> | undefined;\n  @ViewChild('notificationFailure') notificationFailureTemplate: TemplateRef<any> | undefined;\n\n  @Input() set notificationDismissTime(value: number | undefined) {\n    this.notificationDismissTimeSubject.next(value);\n  }\n\n  isSubmitting = false;\n  private dismissTimeout: number | undefined;\n  private readonly notificationDismissTimeSubject = new BehaviorSubject<number | undefined>(undefined);\n\n  dismissTimeoutPreferenceSubscription: Subscription = combineLatest([\n    this.notificationDismissTimeSubject.asObservable(),\n    this.manageProfilePreferencesService.getNotificationDismissTimePreference(),\n  ])\n    .pipe(map(([input, preference]: [any, any]) => (input !== undefined ? input : preference * 1000)))\n    .subscribe({\n      next: (val) => (this.dismissTimeout = val),\n    });\n\n  constructor(\n    protected readonly manageProfilePreferencesService: ManageProfilePreferencesService,\n    protected readonly cd: ChangeDetectorRef,\n    protected readonly notificationService: NotificationService,\n  ) {}\n\n  handleCancelClick() {\n    this.close.emit();\n  }\n\n  readonly handleUpdateResponse =\n    () =>\n    (source: Observable<HttpResponse<undefined>>): Observable<HttpResponse<undefined> | undefined> =>\n      source.pipe(tap(this.onFormSubmissionSuccessful), catchError(this.onFormSubmissionUnsuccessful), publish());\n\n  readonly handleDeleteResponse =\n    () =>\n    (source: Observable<HttpResponse<undefined>>): Observable<HttpResponse<undefined> | undefined> =>\n      source.pipe(tap(this.onDeletionSuccessful), catchError(this.onFormSubmissionUnsuccessful), publish());\n\n  private readonly onFormSubmissionSuccessful = () => {\n    this.isSubmitting = false;\n    this.onSuccess(this.notificationUpdateSuccessTemplate as TemplateRef<any>);\n  };\n\n  private readonly onDeletionSuccessful = () => {\n    this.isSubmitting = false;\n    this.onSuccess(this.notificationDeleteSuccessTemplate as TemplateRef<any>);\n  };\n\n  private onSuccess(template: TemplateRef<any>) {\n    this.notificationService.showNotification({\n      message: template,\n      modifier: 'success',\n      ttl: this.dismissTimeout,\n    });\n    this.cd.markForCheck();\n    this.closeAfterSave.emit();\n  }\n\n  private readonly onFormSubmissionUnsuccessful = (): Observable<undefined> => {\n    this.isSubmitting = false;\n    this.notificationService.showNotification({\n      message: this.notificationFailureTemplate as TemplateRef<any>,\n      modifier: 'error',\n      ttl: this.dismissTimeout,\n    });\n    this.cd.markForCheck();\n\n    return of(undefined);\n  };\n\n  ngOnDestroy() {\n    this.dismissTimeoutPreferenceSubscription.unsubscribe();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { GetElectronicAddress } from '../../../common-types';\nimport { EditAddressComponent } from '../edit-address/edit-address.component';\n\n@Component({\n  template: '',\n})\nexport class EditEmailAddressComponent extends EditAddressComponent {\n  /**\n   * The list of email address types.\n   */\n  @Input() emailAddressTypes: Array<string> | undefined;\n  /**\n   * The data for the email address entry.\n   */\n  @Input() emailAddressData: GetElectronicAddress | undefined;\n  /**\n   * The number of email addresses stored.\n   */\n  @Input() emailAddressCount: number | undefined;\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GetElectronicAddress } from '../../../common-types';\n\n@Component({\n  template: '',\n})\nexport class ManageEmailAddressComponent {\n  /**\n   * The data for the email address entry.\n   */\n  @Input() electronicAddress: GetElectronicAddress | undefined;\n  /**\n   * The number of email addresses stored.\n   */\n  @Input() emailAddressCount: number | undefined;\n  /**\n   * The list of email address types.\n   */\n  @Input() emailAddressTypes: Array<string> | undefined;\n  /**\n   * Whether the manage button is disabled.\n   */\n  @Input() disableManage: boolean | undefined;\n  @Input() dismissTimeout: number | undefined;\n  @Output() updateProfile = new EventEmitter<void>();\n  @Output() manageEmail = new EventEmitter<void>();\n  @Output() cancelManageEmail = new EventEmitter<void>();\n  managingEmailAddress = false;\n\n  handleManageEmailAddress() {\n    if (this.disableManage) {\n      return;\n    }\n    this.managingEmailAddress = true;\n    this.manageEmail.emit();\n  }\n\n  handleCloseEditEmailAddressAfterSave() {\n    this.updateProfile.emit();\n  }\n\n  handleCloseEditEmailAddress() {\n    this.managingEmailAddress = false;\n    this.disableManage = false;\n    this.cancelManageEmail.emit();\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { GetElectronicAddress } from '../../../common-types';\n\n@Component({\n  template: '',\n})\nexport class ManageEmailAddressesComponent implements OnInit {\n  /**\n   * Whether the manage button is disabled.\n   */\n  @Input() disableManage: boolean | undefined;\n  /**\n   * The list of email addresses stored.\n   */\n  @Input() emailAddresses: Array<GetElectronicAddress> | undefined;\n  /**\n   * The list of email address types.\n   */\n  @Input() emailAddressTypes: Array<string> | undefined;\n  /**\n   * The maximum number of allowed email addresses.\n   */\n  @Input() maxEmailAddresses: number | undefined;\n  @Input() dismissTimeout: number | undefined;\n  @Output() updateProfile = new EventEmitter<void>();\n  @Output() manageEmail = new EventEmitter<void>();\n  @Output() cancelManageEmail = new EventEmitter<void>();\n  isManagingEmailAddressIndex: number | undefined = undefined;\n  isAddingEmailAddress = false;\n  isAddButtonAvailable = true;\n\n  ngOnInit(): void {\n    if (this.emailAddresses && this.maxEmailAddresses) {\n      this.isAddButtonAvailable = this.emailAddresses.length < this.maxEmailAddresses;\n    }\n  }\n\n  handleManageEmailOpen(index?: number) {\n    this.isManagingEmailAddressIndex = index;\n    this.manageEmail.emit();\n  }\n\n  handleManageEmailClosed() {\n    this.isManagingEmailAddressIndex = undefined;\n    this.isAddingEmailAddress = false;\n    this.cancelManageEmail.emit();\n  }\n\n  handleAddNewEmailAddress() {\n    if (this.disableManage) {\n      return;\n    }\n    this.isAddingEmailAddress = true;\n    this.manageEmail.emit();\n  }\n\n  updateUserProfileData() {\n    this.updateProfile.emit();\n  }\n}\n","import { HttpResponse } from '@angular/common/http';\nimport {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { BehaviorSubject, combineLatest, Observable, of, Subscription } from 'rxjs';\nimport { catchError, map, publish, tap } from 'rxjs/operators';\nimport { ManageProfilePreferencesService } from '../../../services/manage-profile/manage-profile-preferences.service';\n\n@Component({\n  template: '',\n})\nexport class NewAddressComponent implements OnDestroy {\n  @Output() close = new EventEmitter<void>();\n  @Output() closeAfterSave = new EventEmitter<void>();\n  @ViewChild('notificationSuccess') notificationSuccessTemplate: TemplateRef<any> | undefined;\n  @ViewChild('notificationFailure') notificationFailureTemplate: TemplateRef<any> | undefined;\n\n  @Input() set notificationDismissTime(value: number | undefined) {\n    this.notificationDismissTimeSubject.next(value);\n  }\n\n  isSubmitting = false;\n  private dismissTimeout: number | undefined;\n  private readonly notificationDismissTimeSubject = new BehaviorSubject<number | undefined>(undefined);\n\n  dismissTimeoutPreferenceSubscription: Subscription = combineLatest([\n    this.notificationDismissTimeSubject.asObservable(),\n    this.manageProfilePreferencesService.getNotificationDismissTimePreference(),\n  ])\n    .pipe(map(([input, preference]: [any, any]) => (input !== undefined ? input : preference * 1000)))\n    .subscribe({\n      next: (val) => (this.dismissTimeout = val),\n    });\n\n  constructor(\n    protected readonly manageProfilePreferencesService: ManageProfilePreferencesService,\n    protected readonly cd: ChangeDetectorRef,\n    protected readonly notificationService: NotificationService,\n  ) {}\n\n  handleCancelClick() {\n    this.close.emit();\n  }\n\n  readonly handleServiceResponse =\n    () =>\n    (source: Observable<HttpResponse<undefined>>): Observable<HttpResponse<undefined> | undefined> =>\n      source.pipe(tap(this.onFormSubmissionSuccessful), catchError(this.onFormSubmissionUnsuccessful), publish());\n\n  private readonly onFormSubmissionSuccessful = () => {\n    this.isSubmitting = false;\n    this.notificationService.showNotification({\n      message: this.notificationSuccessTemplate as TemplateRef<any>,\n      modifier: 'success',\n      ttl: this.dismissTimeout,\n    });\n    this.cd.markForCheck();\n    this.closeAfterSave.emit();\n  };\n\n  private readonly onFormSubmissionUnsuccessful = (): Observable<undefined> => {\n    this.isSubmitting = false;\n    this.notificationService.showNotification({\n      message: this.notificationFailureTemplate as TemplateRef<any>,\n      modifier: 'error',\n      ttl: this.dismissTimeout,\n    });\n    this.cd.markForCheck();\n\n    return of(undefined);\n  };\n\n  ngOnDestroy() {\n    this.dismissTimeoutPreferenceSubscription.unsubscribe();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ElectronicAddress } from '../../../common-types';\nimport { NewAddressComponent } from '../new-address/new-address.component';\n\n@Component({\n  template: '',\n})\nexport class NewEmailAddressComponent extends NewAddressComponent implements OnInit {\n  /**\n   * The list of email address types.\n   */\n  @Input() emailAddressTypes: Array<string> | undefined;\n\n  newEmailAddressData: ElectronicAddress | undefined;\n\n  ngOnInit(): void {\n    this.newEmailAddressData = {\n      type: this.emailAddressTypes && this.emailAddressTypes.length ? this.emailAddressTypes[0] : '',\n      address: '',\n    };\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { GetPhoneAddress } from '../../../common-types';\nimport { EditAddressComponent } from '../edit-address/edit-address.component';\n\n@Component({\n  template: '',\n})\nexport class EditPhoneNumberComponent extends EditAddressComponent {\n  /**\n   * The list of phone number types.\n   */\n  @Input() phoneNumberTypes: Array<string> | undefined;\n  /**\n   * The data for the phone number entry.\n   */\n  @Input() phoneNumberData: GetPhoneAddress | undefined;\n  /**\n   * The number of phone numbers stored.\n   */\n  @Input() phoneNumberCount: number | undefined;\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GetPhoneAddress } from '../../../common-types';\nimport {\n  ManageProfilePreferencesService,\n  PhoneNumberInputPreferences,\n} from '../../../services/manage-profile/manage-profile-preferences.service';\n\n@Component({\n  template: '',\n})\nexport class ManagePhoneNumberComponent {\n  /**\n   * The data for the phone number entry.\n   */\n  @Input() phoneNumber: GetPhoneAddress | undefined;\n  /**\n   * The number of phone numbers stored.\n   */\n  @Input() phoneNumberCount: number | undefined;\n  /**\n   * The list of phone number types.\n   */\n  @Input() phoneNumberTypes: Array<string> | undefined;\n  /**\n   * Whether the manage button is disabled.\n   */\n  @Input() disableManage: boolean | undefined;\n  @Input() dismissTimeout: number | undefined;\n  @Output() updateProfile = new EventEmitter<void>();\n  @Output() managePhoneNumber = new EventEmitter<void>();\n  @Output() cancelManagePhoneNumber = new EventEmitter<void>();\n  managingPhoneNumber = false;\n\n  /** @deprecated */\n  phoneNumberPreferences: Observable<PhoneNumberInputPreferences> =\n    this.manageProfilePreferencesService.getPhoneNumberInputPreferences();\n\n  constructor(protected readonly manageProfilePreferencesService: ManageProfilePreferencesService) {}\n\n  handleManagePhoneNumber() {\n    if (this.disableManage) {\n      return;\n    }\n    this.managingPhoneNumber = true;\n    this.managePhoneNumber.emit();\n  }\n\n  handleCloseEditPhoneNumberAfterSave() {\n    this.updateProfile.emit();\n  }\n\n  handleCloseEditPhoneNumber() {\n    this.managingPhoneNumber = false;\n    this.disableManage = false;\n    this.cancelManagePhoneNumber.emit();\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { GetPhoneAddress } from '../../../common-types';\n\n@Component({\n  template: '',\n})\nexport class ManagePhoneNumbersComponent implements OnInit {\n  /**\n   * The list of phone numbers stored.\n   */\n  @Input() phoneNumbers: Array<GetPhoneAddress> | undefined;\n  /**\n   * The list of phone number types.\n   */\n  @Input() phoneNumberTypes: Array<string> | undefined;\n  /**\n   * The maximum number of allowed phone numbers.\n   */\n  @Input() maxPhoneNumbers: number | undefined;\n  /**\n   * Whether the manage button is disabled.\n   */\n  @Input() disableManage: boolean | undefined;\n  @Input() dismissTimeout: number | undefined;\n  @Output() updateProfile = new EventEmitter<void>();\n  @Output() managePhoneNumber = new EventEmitter<void>();\n  @Output() cancelManagePhoneNumber = new EventEmitter<void>();\n  isManagingPhoneNumberIndex: number | undefined = undefined;\n  isAddingPhoneNumber = false;\n  isAddButtonAvailable = true;\n\n  ngOnInit(): void {\n    if (this.phoneNumbers && this.maxPhoneNumbers) {\n      this.isAddButtonAvailable = this.phoneNumbers.length < this.maxPhoneNumbers;\n    }\n  }\n\n  handleManagePhoneNumberOpen(index?: number) {\n    this.isManagingPhoneNumberIndex = index;\n    this.managePhoneNumber.emit();\n  }\n\n  handleAddNewPhoneNumber() {\n    if (this.disableManage) {\n      return;\n    }\n    this.isAddingPhoneNumber = true;\n    this.managePhoneNumber.emit();\n  }\n\n  handleManagePhoneNumberClosed() {\n    this.isManagingPhoneNumberIndex = undefined;\n    this.isAddingPhoneNumber = false;\n    this.cancelManagePhoneNumber.emit();\n  }\n\n  updateUserProfileData() {\n    this.updateProfile.emit();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { PhoneAddress } from '../../../common-types';\nimport { NewAddressComponent } from '../new-address/new-address.component';\n\n@Component({\n  template: '',\n})\nexport class NewPhoneNumberComponent extends NewAddressComponent implements OnInit {\n  /**\n   * The list of phone number types.\n   */\n  @Input() phoneNumberTypes: Array<string> | undefined;\n\n  newPhoneNumberData: PhoneAddress | undefined;\n\n  ngOnInit(): void {\n    this.newPhoneNumberData = {\n      type: this.phoneNumberTypes && this.phoneNumberTypes.length ? this.phoneNumberTypes[0] : '',\n      number: '',\n    };\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { GetPostalAddress } from '../../../common-types';\nimport { EditAddressComponent } from '../edit-address/edit-address.component';\n\n@Component({\n  template: '',\n})\nexport class EditPostalAddressComponent extends EditAddressComponent {\n  /**\n   * The list of postal address types.\n   */\n  @Input() postalAddressTypes: Array<string> | undefined;\n  /**\n   * The data for the postal address entry.\n   */\n  @Input() postalAddressData: GetPostalAddress | undefined;\n  /**\n   * The number of postal addresses stored.\n   */\n  @Input() postalAddressCount: number | undefined;\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GetPostalAddress } from '../../../common-types';\n\n@Component({\n  template: '',\n})\nexport class ManagePostalAddressComponent {\n  /**\n   * The list of postal addresses stored.\n   */\n  @Input() postalAddress: GetPostalAddress | undefined;\n  /**\n   * The number of postal addresses stored.\n   */\n  @Input() postalAddressCount: number | undefined;\n  /**\n   * The list of postal address types.\n   */\n  @Input() postalAddressTypes: Array<string> | undefined;\n  /**\n   * Whether the manage button is disabled.\n   */\n  @Input() disableManage: boolean | undefined;\n  @Input() dismissTimeout: number | undefined;\n  @Output() updateProfile = new EventEmitter<void>();\n  @Output() managePostalAddress = new EventEmitter<void>();\n  @Output() cancelManagePostalAddress = new EventEmitter<void>();\n  managingPostalAddress = false;\n\n  handleManagePostalAddress() {\n    if (this.disableManage) {\n      return;\n    }\n    this.managingPostalAddress = true;\n    this.managePostalAddress.emit();\n  }\n\n  handleCloseEditPostalAddressAfterSave() {\n    this.updateProfile.emit();\n  }\n\n  handleCloseEditPostalAddress() {\n    this.managingPostalAddress = false;\n    this.disableManage = false;\n    this.cancelManagePostalAddress.emit();\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { GetPostalAddress } from '../../../common-types';\n\n@Component({\n  template: '',\n})\nexport class ManagePostalAddressesComponent implements OnInit {\n  /**\n   * The list of postal addresses stored.\n   */\n  @Input() postalAddresses: Array<GetPostalAddress> | undefined;\n  /**\n   * The list of postal address types.\n   */\n  @Input() postalAddressTypes: Array<string> | undefined;\n  /**\n   * The maximum number of allowed postal addresses.\n   */\n  @Input() maxPostalAddresses: number | undefined;\n  /**\n   * Whether the manage button is disabled.\n   */\n  @Input() disableManage: boolean | undefined;\n  @Input() dismissTimeout: number | undefined;\n  @Output() updateProfile = new EventEmitter<void>();\n  @Output() managePostalAddress = new EventEmitter<void>();\n  @Output() cancelManagePostalAddress = new EventEmitter<void>();\n  isManagingPostalAddressIndex: number | undefined = undefined;\n  isAddingPostalAddress = false;\n  isAddButtonAvailable = true;\n\n  ngOnInit(): void {\n    if (this.postalAddresses && this.maxPostalAddresses) {\n      this.isAddButtonAvailable = this.postalAddresses.length < this.maxPostalAddresses;\n    }\n  }\n\n  handleManagePostalAddressOpen(index?: number) {\n    this.isManagingPostalAddressIndex = index;\n    this.managePostalAddress.emit();\n  }\n\n  handleAddNewPostalAddress() {\n    if (this.disableManage) {\n      return;\n    }\n    this.isAddingPostalAddress = true;\n    this.managePostalAddress.emit();\n  }\n\n  handleManagePostalAddressClosed() {\n    this.isManagingPostalAddressIndex = undefined;\n    this.isAddingPostalAddress = false;\n    this.cancelManagePostalAddress.emit();\n  }\n\n  updateUserProfileData() {\n    this.updateProfile.emit();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { PostalAddress } from '../../../common-types';\nimport { NewAddressComponent } from '../new-address/new-address.component';\n\n@Component({\n  template: '',\n})\nexport class NewPostalAddressComponent extends NewAddressComponent implements OnInit {\n  /**\n   * The list of postal address types.\n   */\n  @Input() postalAddressTypes: Array<string> | undefined;\n\n  newPostalAddressData: PostalAddress | undefined;\n\n  ngOnInit(): void {\n    this.newPostalAddressData = {\n      type: this.postalAddressTypes && this.postalAddressTypes.length ? this.postalAddressTypes[0] : '',\n    };\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GetElectronicAddress, GetPhoneAddress, GetPostalAddress } from '../../../common-types';\n\n@Component({\n  template: '',\n})\nexport class ManageProfileFormComponent implements OnInit {\n  /**\n   * The list of address types.\n   */\n  @Input() types: Array<string> | undefined;\n  /**\n   * The data for the address entry.\n   */\n  @Input() data: GetPhoneAddress | GetElectronicAddress | GetPostalAddress | undefined;\n  /**\n   * The number of addresses stored.\n   */\n  @Input() count: number | undefined;\n  /**\n   * Whether the form is being submitted.\n   * Defaults to false.\n   */\n  @Input() isSubmitting = false;\n  @Output() cancel = new EventEmitter<void>();\n  @Output() delete = new EventEmitter<GetPhoneAddress | GetElectronicAddress | GetPostalAddress>();\n  @Output() save = new EventEmitter<GetPhoneAddress | GetElectronicAddress | GetPostalAddress>();\n\n  formData: FormGroup | undefined;\n  showFormErrors = false;\n  showDeleteButton = false;\n  isCancelModalOpen = false;\n  isDeleteModalOpen = false;\n  hasBeenSubmitted = false;\n\n  ngOnInit() {\n    if ((this.data as GetPhoneAddress | GetElectronicAddress | GetPostalAddress).key) {\n      this.showDeleteButton = !!(this.count && this.count > 1);\n    }\n    this.createForm();\n  }\n\n  get form() {\n    if (!this.formData) {\n      throw new Error('formData is not defined');\n    }\n\n    return this.formData;\n  }\n\n  handleSubmit() {\n    this.hasBeenSubmitted = true;\n    this.markFormAsTouched();\n    this.showErrorsOnForm();\n    if (!this.form.valid) {\n      return;\n    }\n\n    this.form.updateValueAndValidity();\n    this.save.emit(this.form.value);\n  }\n\n  handleCancelClick() {\n    if (this.form.touched) {\n      this.isCancelModalOpen = true;\n    } else {\n      this.cancel.emit();\n    }\n  }\n\n  closeCancelModal() {\n    this.isCancelModalOpen = false;\n    this.cancel.emit();\n  }\n\n  dismissCancelModal() {\n    this.isCancelModalOpen = false;\n    this.markFormAsTouched();\n    this.showErrorsOnForm();\n  }\n\n  handleDelete() {\n    this.isDeleteModalOpen = true;\n  }\n\n  closeDeleteModal() {\n    this.isDeleteModalOpen = false;\n    this.delete.emit(this.form.value);\n  }\n\n  dismissDeleteModal() {\n    this.isDeleteModalOpen = false;\n    this.markFormAsTouched();\n    this.showErrorsOnForm();\n  }\n\n  private showErrorsOnForm() {\n    this.showFormErrors = !this.form.valid;\n  }\n\n  protected markFormAsTouched() {}\n\n  protected createForm() {}\n}\n","import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { GetElectronicAddress } from '../../../common-types';\nimport { ManageProfileFormComponent } from './manage-profile-form.component';\n\n@Component({\n  template: '',\n})\nexport class ManageProfileEmailAddressFormComponent extends ManageProfileFormComponent {\n  constructor(protected readonly formBuilder: FormBuilder) {\n    super();\n  }\n\n  protected markFormAsTouched() {\n    this.form.controls.type.markAsTouched();\n    this.form.controls.address.markAsTouched();\n    this.form.controls.primary.markAsTouched();\n  }\n\n  protected createForm() {\n    const { key, type, address, primary } = this.data as GetElectronicAddress;\n\n    this.formData = this.formBuilder.group({\n      key,\n      type: [type, Validators.required],\n      address: [address, Validators.required],\n      primary,\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { GetPhoneAddress } from '../../../common-types';\nimport { ManageProfileFormComponent } from './manage-profile-form.component';\n\n@Component({\n  template: '',\n})\nexport class ManageProfilePhoneNumberFormComponent extends ManageProfileFormComponent {\n  constructor(protected readonly formBuilder: FormBuilder) {\n    super();\n  }\n\n  protected markFormAsTouched() {\n    this.form.controls.type.markAsTouched();\n    this.form.controls.number.markAsTouched();\n    this.form.controls.primary.markAsTouched();\n  }\n\n  protected createForm() {\n    const { key, type, number, primary } = this.data as GetPhoneAddress;\n\n    this.formData = this.formBuilder.group({\n      key,\n      type: [type, Validators.required],\n      number: [number, Validators.required],\n      primary,\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { GetPostalAddress } from '../../../common-types';\nimport { ManageProfileFormComponent } from './manage-profile-form.component';\n\n@Component({\n  template: '',\n})\nexport class ManageProfilePostalAddressFormComponent extends ManageProfileFormComponent {\n  constructor(protected readonly formBuilder: FormBuilder) {\n    super();\n  }\n\n  protected markFormAsTouched() {\n    this.form.controls.type.markAsTouched();\n    this.form.controls.primary.markAsTouched();\n    this.form.controls.buildingNumber.markAsTouched();\n    this.form.controls.streetName.markAsTouched();\n    this.form.controls.townName.markAsTouched();\n    this.form.controls.postalCode.markAsTouched();\n    this.form.controls.countrySubDivision.markAsTouched();\n  }\n\n  protected createForm() {\n    const { key, type, primary, buildingNumber, streetName, townName, postalCode, countrySubDivision } = this\n      .data as GetPostalAddress;\n\n    this.formData = this.formBuilder.group({\n      key,\n      type: [type, Validators.required],\n      primary,\n      buildingNumber: [buildingNumber, Validators.required],\n      streetName,\n      townName: [townName, Validators.required],\n      postalCode: [postalCode, Validators.required],\n      countrySubDivision: [countrySubDivision, Validators.required],\n    });\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { UserProfile } from '../../common-types';\nimport {\n  ManageProfilePreferencesService,\n  WidgetPreferences,\n} from '../../services/manage-profile/manage-profile-preferences.service';\n\n@Component({\n  template: '',\n})\nexport class ManageProfileComponent implements OnDestroy, OnInit {\n  @Input() notificationDismissTime: number | undefined;\n\n  userProfile: UserProfile | undefined;\n  loadingState = true;\n  loadingErrorState = false;\n  loadingError: HttpErrorResponse | undefined;\n  disableAddressManaging = false;\n\n  /** @deprecated */\n  readonly widgetPreferences: Observable<WidgetPreferences> =\n    this.manageProfilePreferencesService.getWidgetPreferences();\n\n  protected readonly userProfileSubject = new BehaviorSubject(undefined);\n  private userProfileObservable: Observable<UserProfile> | undefined;\n  private userProfileSubscription: Subscription | undefined;\n\n  refreshProfileData() {\n    this.handleManageAddressClose();\n    this.userProfileSubject.next(undefined);\n  }\n\n  handleManageAddressOpen() {\n    this.disableAddressManaging = true;\n  }\n\n  handleManageAddressClose() {\n    this.disableAddressManaging = false;\n  }\n\n  readonly handleProfileError = (error: HttpErrorResponse) => {\n    this.loadingState = false;\n    this.loadingErrorState = true;\n    this.loadingError = error;\n    this.cd.markForCheck();\n\n    return new Observable<UserProfile>();\n  };\n\n  readonly onProfileUpdate = () => {\n    this.loadingState = true;\n    this.loadingError = undefined;\n  };\n\n  protected setUserProfileObservable() {\n    return this.userProfileSubject.asObservable().pipe(\n      map(\n        () =>\n          ({\n            fullName: '',\n          } as UserProfile),\n      ),\n    );\n  }\n\n  constructor(\n    protected readonly manageProfilePreferencesService: ManageProfilePreferencesService,\n    protected readonly cd: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit(): void {\n    this.userProfileObservable = this.setUserProfileObservable();\n    this.userProfileSubscription = this.userProfileObservable.subscribe((userProfileData: UserProfile) => {\n      this.userProfile = userProfileData;\n      this.loadingState = false;\n      this.loadingErrorState = false;\n      this.cd.markForCheck();\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.userProfileSubscription) {\n      this.userProfileSubscription.unsubscribe();\n    }\n  }\n}\n","import { Directive, Input, OnDestroy, OnInit } from '@angular/core';\nimport { CountryCode } from '@backbase/phone-number-lib';\nimport { PhoneNumberPipe } from '@backbase/ui-ang/phone-number-format-pipe';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport {\n  ManageProfilePreferencesService,\n  PhoneNumberInputPreferences,\n} from '../../services/manage-profile/manage-profile-preferences.service';\nimport { InputBase } from '../input-base/input-base';\n\n@Directive({\n  selector: '[bbUserPhoneNumberInputBase]',\n})\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport class PhoneNumberInputBase extends InputBase implements OnInit, OnDestroy {\n  private phoneNumberSubscription: Subscription | undefined;\n  private preferences: PhoneNumberInputPreferences | undefined;\n\n  @Input() phoneNumberCountryCode: CountryCode | undefined;\n  @Input() phoneNumberDebounceTime: number | undefined;\n  @Input() enablePhoneNumberFormatter: boolean | undefined;\n\n  private readonly phoneNumberPreferencesSubscription: Subscription = this.manageProfilePreferencesService\n    .getPhoneNumberInputPreferences()\n    .subscribe((preferences: PhoneNumberInputPreferences) => {\n      if (preferences) {\n        this.preferences = preferences;\n        this.preferences.debounceTime = this.preferences.debounceTime * 1000;\n      }\n    });\n\n  constructor(\n    protected readonly manageProfilePreferencesService: ManageProfilePreferencesService,\n    protected readonly phoneNumberFormatter: PhoneNumberPipe,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line complexity\n  ngOnInit() {\n    if (this.enablePhoneNumberFormatter && this.phoneNumberDebounceTime === undefined) {\n      throw new Error(`phoneNumberDebounceTime is required when enablePhoneNumberFormatter is true`);\n    }\n\n    if (this.enablePhoneNumberFormatter && this.phoneNumberCountryCode === undefined) {\n      throw new Error(`phoneNumberCountryCode is required when enablePhoneNumberFormatter is true`);\n    }\n\n    if (this.enablePhoneNumberFormatter !== false) {\n      if (this.enablePhoneNumberFormatter || (this.preferences || {}).enablePhoneNumberFormatter) {\n        this.phoneNumberSubscription = this.fieldControl.valueChanges\n          .pipe(\n            distinctUntilChanged(),\n            debounceTime(\n              (this.phoneNumberDebounceTime && this.phoneNumberDebounceTime * 1000) || this.preference.debounceTime,\n            ),\n          )\n          .subscribe((value) => {\n            value = this.phoneNumberFormatter.transform(\n              value,\n              this.phoneNumberCountryCode || this.preference.countryCode,\n              true,\n            );\n            this.fieldControl.setValue(value);\n          });\n      }\n    }\n  }\n\n  get preference() {\n    if (!this.preferences) {\n      throw new Error('preferences are not defined');\n    }\n\n    return this.preferences;\n  }\n\n  ngOnDestroy() {\n    this.phoneNumberPreferencesSubscription.unsubscribe();\n    if (this.phoneNumberSubscription) {\n      this.phoneNumberSubscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { InputBase } from './input-base/input-base';\nimport { EditAddressComponent } from './manage-profile/edit-address/edit-address.component';\nimport { EditEmailAddressComponent } from './manage-profile/manage-email-addresses/edit-email-address.component';\nimport { ManageEmailAddressComponent } from './manage-profile/manage-email-addresses/manage-email-address.component';\nimport { ManageEmailAddressesComponent } from './manage-profile/manage-email-addresses/manage-email-addresses.component';\nimport { NewEmailAddressComponent } from './manage-profile/manage-email-addresses/new-email-address.component';\nimport { EditPhoneNumberComponent } from './manage-profile/manage-phone-numbers/edit-phone-number.component';\nimport { ManagePhoneNumberComponent } from './manage-profile/manage-phone-numbers/manage-phone-number.component';\nimport { ManagePhoneNumbersComponent } from './manage-profile/manage-phone-numbers/manage-phone-numbers.component';\nimport { NewPhoneNumberComponent } from './manage-profile/manage-phone-numbers/new-phone-number.component';\nimport { EditPostalAddressComponent } from './manage-profile/manage-postal-addresses/edit-postal-address.component';\nimport { ManagePostalAddressComponent } from './manage-profile/manage-postal-addresses/manage-postal-address.component';\nimport { ManagePostalAddressesComponent } from './manage-profile/manage-postal-addresses/manage-postal-addresses.component';\nimport { NewPostalAddressComponent } from './manage-profile/manage-postal-addresses/new-postal-address.component';\nimport { ManageProfileEmailAddressFormComponent } from './manage-profile/manage-profile-form/manage-profile-email-address-form.component';\nimport { ManageProfileFormComponent } from './manage-profile/manage-profile-form/manage-profile-form.component';\nimport { ManageProfilePhoneNumberFormComponent } from './manage-profile/manage-profile-form/manage-profile-phone-number-form.component';\nimport { ManageProfilePostalAddressFormComponent } from './manage-profile/manage-profile-form/manage-profile-postal-address-form.component';\nimport { ManageProfileComponent } from './manage-profile/manage-profile.component';\nimport { NewAddressComponent } from './manage-profile/new-address/new-address.component';\nimport { PhoneNumberInputBase } from './phone-number-input/phone-number-input-base';\n\nconst components = [\n  EditAddressComponent,\n  EditEmailAddressComponent,\n  EditPhoneNumberComponent,\n  EditPostalAddressComponent,\n  InputBase,\n  ManageEmailAddressesComponent,\n  ManageEmailAddressComponent,\n  ManagePhoneNumbersComponent,\n  ManagePhoneNumberComponent,\n  ManagePostalAddressesComponent,\n  ManagePostalAddressComponent,\n  ManageProfileComponent,\n  ManageProfileComponent,\n  ManageProfileFormComponent,\n  ManageProfileEmailAddressFormComponent,\n  ManageProfilePhoneNumberFormComponent,\n  ManageProfilePostalAddressFormComponent,\n  NewAddressComponent,\n  NewEmailAddressComponent,\n  NewPhoneNumberComponent,\n  NewPostalAddressComponent,\n  PhoneNumberInputBase,\n];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...components],\n  exports: [...components],\n})\nexport class UserCommonModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class IdGeneratorService {\n  generateId(elementKey: string) {\n    return `${elementKey}-${Math.random().toString(36).substring(2, 9)}`;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  LegalEntitiesHttpService,\n  LegalEntityItemBase,\n  SearchSubEntitiesParameters,\n} from '@backbase/data-ang/accesscontrol';\nimport { Observable } from 'rxjs';\n\nexport { SearchSubEntitiesParameters } from '@backbase/data-ang/accesscontrol';\n\n@Injectable()\nexport class LegalEntityDataService {\n  constructor(private readonly legalEntityData: LegalEntitiesHttpService) {}\n\n  getLegalentitiesSubEntities(\n    searchSubEntitiesParameters: SearchSubEntitiesParameters,\n  ): Observable<LegalEntityItemBase[]> {\n    return this.legalEntityData.postSubEntities({ searchSubEntitiesParameters });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GetElectronicAddress, GetPhoneAddress, GetPostalAddress, UserProfile } from '@backbase/data-ang/user';\n\n@Injectable()\nexport class ManageProfileService {\n  sortUserContactListsByPrimary = (profile: UserProfile): UserProfile => {\n    this.sortListByPrimary(profile['electronic-addresses']);\n    this.sortListByPrimary(profile['phone-addresses']);\n    this.sortListByPrimary(profile['postal-addresses']);\n\n    return profile;\n  };\n\n  private sortListByPrimary(list?: Array<GetElectronicAddress | GetPhoneAddress | GetPostalAddress>) {\n    if (list) {\n      list.sort((a, b) => {\n        if (a.primary === b.primary) {\n          return 0;\n        }\n\n        return a.primary ? -1 : 1;\n      });\n    }\n  }\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  CreateIdentityRequest,\n  CreateIdentityResponse,\n  GetIdentity,\n  GetIdentitySessions,\n  GetPendingApproval,\n  IdentityManagementService,\n  UpdateIdentityRequest,\n  UserManagementService,\n} from '@backbase/data-ang/user';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { UserActions } from '../../types/user-actions.enum';\nimport { ApprovalType } from '../../types/user-approval-type.enum';\n\n@Injectable()\nexport class UserDataService {\n  constructor(\n    private readonly userManagementService: UserManagementService,\n    private readonly identityManagementService: IdentityManagementService,\n  ) {}\n\n  checkUsernameAvailability(externalId: string): Observable<boolean> {\n    return this.userManagementService.checkUserExists({ externalId }, 'response').pipe(\n      map(this.isNotFound),\n      catchError((error) => of(this.isNotFound(error))),\n    );\n  }\n\n  createUser(createIdentityRequest: CreateIdentityRequest): Observable<CreateIdentityResponse> {\n    return this.identityManagementService.createIdentity({ createIdentityRequest });\n  }\n\n  getPendingApprovalsByInternalIdAndType(internalId: string, type: ApprovalType): Observable<GetPendingApproval[]> {\n    return this.getPendingApprovalsByInternalId(internalId).pipe(\n      map((approvals) => approvals.filter((approval) => approval.type === type)),\n    );\n  }\n\n  getPendingApprovalsByInternalId(internalId: string): Observable<GetPendingApproval[]> {\n    return this.identityManagementService.getIdentityPendingApprovals({ internalId });\n  }\n\n  getUsersIdentitiesSessionsByInternalId(internalId: string): Observable<GetIdentitySessions> {\n    return this.identityManagementService.getSessions({ internalId });\n  }\n\n  updateUsersIdentitiesSessionsLogoutRecordByInternalId(internalId: string, sessionIds: Array<string> = []) {\n    return this.identityManagementService.logoutSessions({\n      internalId,\n      identityLogoutRequest: { sessionIds },\n    });\n  }\n\n  updateUserActions(internalId: string, actions: UserActions[]): Observable<any> {\n    return this.identityManagementService.sendRequiredActions({\n      internalId,\n      identityRequiredActionsRequest: { actions },\n    });\n  }\n\n  updateUserRecordActions(internalId: string, updateIdentityRequest: UpdateIdentityRequest): Observable<any> {\n    return this.identityManagementService.updateIdentity({\n      internalId,\n      updateIdentityRequest,\n    });\n  }\n\n  changeUserPassword(existingPassword: string, newPassword: string): Observable<any> {\n    return this.identityManagementService.changePassword({\n      changePasswordRequest: {\n        existingPassword,\n        newPassword,\n      },\n    });\n  }\n\n  getUserDetails(internalId: string): Observable<GetIdentity> {\n    return this.identityManagementService.getIdentity({ internalId });\n  }\n\n  private isNotFound(response: HttpResponse<any>) {\n    return response.status === 404;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, pluck } from 'rxjs/operators';\n\n@Injectable()\nexport class UserRouterService {\n  userId: Observable<string | null> = this.getRouteParam(this.route, 'userId');\n\n  constructor(private readonly route: ActivatedRoute) {}\n\n  private getRouteParam(route: ActivatedRoute, param: string): Observable<string | null> {\n    const paramValue = route.paramMap.pipe(pluck<ParamMap, string | null>('params', param));\n\n    if (!route.parent) {\n      return paramValue;\n    }\n\n    // Ensure that level that has actual value keeps it from being cleared.\n    return combineLatest([paramValue, this.getRouteParam(route.parent, param)]).pipe(\n      map((params) => params[0] || params[1]),\n    );\n  }\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilityService {\n  getBody<T>(data: HttpResponse<T>): T {\n    if (!data.body) {\n      throw new Error('No body found in resource');\n    }\n\n    return data.body;\n  }\n}\n","/**\n * Details the allowed actions that can be set on the user\n */\nexport enum UserActions {\n  updatePassword = 'UPDATE_PASSWORD',\n  verifyEmail = 'VERIFY_EMAIL',\n  updateProfile = 'UPDATE_PROFILE',\n  configureTotp = 'CONFIGURE_TOTP',\n  acceptTermsAndConditions = 'ACCEPT_TERMS_AND_CONDITIONS',\n}\n","export enum ApprovalType {\n  UNLOCK = 'UNLOCK',\n}\n","export enum UserStatus {\n  ENABLED = 'ENABLED',\n  DISABLED = 'DISABLED',\n  LOCKED = 'TEMPORARILY_LOCKED',\n  DORMANT = 'DORMANT',\n  INACTIVE = 'INACTIVE',\n  ACCESS_REVOKED = 'ACCESS_REVOKED',\n}\n","import { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const filterInputParameters = <T>(input: Observable<T | undefined>, prop: Observable<T>): Observable<T> =>\n  combineLatest([input, prop]).pipe(\n    map(([inputVal, propVal]: [any, any]) => (inputVal !== undefined ? inputVal : propVal)),\n  );\n\nexport const convertCommaSeparatedStringToStringArray = (value: string) =>\n  value ? value.split(',').map((arrayItem) => arrayItem.trim()) : [];\n","// Services\n// Modules\nexport { CancelModalComponent as ӨCancelModalComponent } from './src/components/bb-cancel-modal/cancel-modal.component';\nexport { CancelModalModule } from './src/components/bb-cancel-modal/cancel-modal.module';\nexport { InputBase } from './src/components/input-base/input-base';\nexport { EditAddressComponent as ӨEditAddressComponent } from './src/components/manage-profile/edit-address/edit-address.component';\nexport { EditEmailAddressComponent } from './src/components/manage-profile/manage-email-addresses/edit-email-address.component';\nexport { ManageEmailAddressComponent } from './src/components/manage-profile/manage-email-addresses/manage-email-address.component';\nexport { ManageEmailAddressesComponent } from './src/components/manage-profile/manage-email-addresses/manage-email-addresses.component';\nexport { NewEmailAddressComponent } from './src/components/manage-profile/manage-email-addresses/new-email-address.component';\nexport { EditPhoneNumberComponent } from './src/components/manage-profile/manage-phone-numbers/edit-phone-number.component';\nexport { ManagePhoneNumberComponent } from './src/components/manage-profile/manage-phone-numbers/manage-phone-number.component';\nexport { ManagePhoneNumbersComponent } from './src/components/manage-profile/manage-phone-numbers/manage-phone-numbers.component';\nexport { NewPhoneNumberComponent } from './src/components/manage-profile/manage-phone-numbers/new-phone-number.component';\nexport { EditPostalAddressComponent } from './src/components/manage-profile/manage-postal-addresses/edit-postal-address.component';\nexport { ManagePostalAddressComponent } from './src/components/manage-profile/manage-postal-addresses/manage-postal-address.component';\nexport { ManagePostalAddressesComponent } from './src/components/manage-profile/manage-postal-addresses/manage-postal-addresses.component';\nexport { NewPostalAddressComponent } from './src/components/manage-profile/manage-postal-addresses/new-postal-address.component';\nexport { ManageProfileEmailAddressFormComponent } from './src/components/manage-profile/manage-profile-form/manage-profile-email-address-form.component';\nexport { ManageProfileFormComponent as ӨManageProfileFormComponent } from './src/components/manage-profile/manage-profile-form/manage-profile-form.component';\nexport { ManageProfilePhoneNumberFormComponent } from './src/components/manage-profile/manage-profile-form/manage-profile-phone-number-form.component';\nexport { ManageProfilePostalAddressFormComponent } from './src/components/manage-profile/manage-profile-form/manage-profile-postal-address-form.component';\nexport { ManageProfileComponent } from './src/components/manage-profile/manage-profile.component';\nexport { NewAddressComponent as ӨNewAddressComponent } from './src/components/manage-profile/new-address/new-address.component';\nexport { PhoneNumberInputBase } from './src/components/phone-number-input/phone-number-input-base';\n// Components\nexport { UserCommonModule } from './src/components/user-common.module';\nexport { IdGeneratorService } from './src/services/id-generator/id-generator.service';\nexport {\n  LegalEntityDataService,\n  SearchSubEntitiesParameters,\n} from './src/services/legal-entity-data/legal-entity-data.service';\nexport {\n  ManageProfilePreferencesService,\n  PhoneNumberInputPreferences,\n  WidgetPreferences,\n} from './src/services/manage-profile/manage-profile-preferences.service';\nexport { ManageProfileService } from './src/services/manage-profile/manage-profile.service';\nexport { UserDataService } from './src/services/user-data/user-data.service';\nexport { UserRouterService } from './src/services/user-router/user-router.service';\nexport { UtilityService } from './src/services/utility/utility.service';\nexport { TypeaheadOptions } from './src/types/typeahead-options.interface';\n// Enums\nexport { UserActions } from './src/types/user-actions.enum';\nexport { ApprovalType } from './src/types/user-approval-type.enum';\nexport { UserStatus } from './src/types/user-status.enum';\n// Utilities\nexport { convertCommaSeparatedStringToStringArray, filterInputParameters } from './src/utils/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}