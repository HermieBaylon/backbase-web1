(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@backbase/ui-ang/modal'), require('@backbase/ui-ang/header'), require('@backbase/ui-ang/button'), require('@angular/common'), require('rxjs'), require('rxjs/operators'), require('@backbase/foundation-ang/core'), require('@backbase/ui-ang/notification'), require('@angular/forms'), require('@backbase/ui-ang/phone-number-format-pipe'), require('@backbase/data-ang/accesscontrol'), require('@backbase/data-ang/user'), require('@angular/router')) :
    typeof define === 'function' && define.amd ? define('@backbase/user-common', ['exports', '@angular/core', '@backbase/ui-ang/modal', '@backbase/ui-ang/header', '@backbase/ui-ang/button', '@angular/common', 'rxjs', 'rxjs/operators', '@backbase/foundation-ang/core', '@backbase/ui-ang/notification', '@angular/forms', '@backbase/ui-ang/phone-number-format-pipe', '@backbase/data-ang/accesscontrol', '@backbase/data-ang/user', '@angular/router'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["user-common"] = {}), global.ng.core, global.i1, global.i2, global.i3, global.ng.common, global.rxjs, global.rxjs.operators, global.i1$1, global.i2$1, global.ng.forms, global.i2$2, global.i1$3, global.i1$4, global.ng.router));
})(this, (function (exports, i0, i1, i2, i3, common, rxjs, operators, i1$1, i2$1, i1$2, i2$2, i1$3, i1$4, i1$5) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$2);
    var i2__namespace$2 = /*#__PURE__*/_interopNamespace(i2$2);
    var i1__namespace$3 = /*#__PURE__*/_interopNamespace(i1$3);
    var i1__namespace$4 = /*#__PURE__*/_interopNamespace(i1$4);
    var i1__namespace$5 = /*#__PURE__*/_interopNamespace(i1$5);

    var CancelModalComponent = /** @class */ (function () {
        function CancelModalComponent() {
            /**
             * An event emitter to signal continue has been pressed
             */
            this.continue = new i0.EventEmitter();
            /**
             * An event emitter to signal discard has been pressed
             */
            this.discard = new i0.EventEmitter();
        }
        CancelModalComponent.prototype.dismissModal = function () {
            this.continue.emit();
        };
        CancelModalComponent.prototype.closeModal = function () {
            this.discard.emit();
        };
        return CancelModalComponent;
    }());
    CancelModalComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CancelModalComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CancelModalComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: CancelModalComponent, selector: "bb-cancel-modal", inputs: { isOpen: "isOpen" }, outputs: { continue: "continue", discard: "discard" }, ngImport: i0__namespace, template: "\n<bb-modal-ui [isOpen]=\"isOpen\" (cancel)=\"dismissModal()\">\n  <div data-role=\"cancel-confirmation-modal\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h3\"\n          i18n-heading=\"Changes modal title|Title of the confirmation modal for discarding working changes@@bb-cancel-modal.title\"\n          heading=\"Discard Changes\">\n        </bb-header-ui>\n      </ng-template> \n    </bb-modal-header-ui>\n\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody i18n=\"Discard changes modal body|Body text of the confirmation modal for discarding working changes@@bb-cancel-modal.body\">\n        Are you sure you want to cancel and discard all changes?\n      </ng-template>\n    </bb-modal-body-ui>\n\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <button bbButton\n          type=\"button\"\n          color=\"secondary\"\n          data-role=\"cancel-confirmation-modal-continue-button\"\n          (click)=\"dismissModal()\"\n          i18n=\"Dismiss discard modal button|Text of the button that dismisses the discard changes confirmation modal@@bb-cancel-modal.cancel\">\n          Continue editing\n        </button>\n        <button bbButton\n          type=\"button\"\n          color=\"danger\"\n          (click)=\"closeModal()\"\n          data-role=\"cancel-confirmation-modal-discard-button\"\n          i18n=\"Confirm discard modal button|Text of the button that confirms the discard changes confirmation modal@@bb-cancel-modal.confirm\">\n          Discard changes\n        </button>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </div>\n</bb-modal-ui>\n", components: [{ type: i1__namespace.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1__namespace.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i2__namespace.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i1__namespace.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1__namespace.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i1__namespace.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i1__namespace.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i1__namespace.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }, { type: i3__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CancelModalComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-cancel-modal',
                        templateUrl: './cancel-modal.component.html',
                    }]
            }], propDecorators: { continue: [{
                    type: i0.Output
                }], discard: [{
                    type: i0.Output
                }], isOpen: [{
                    type: i0.Input
                }] } });

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var uiModules = [i3.ButtonModule, i1.ModalModule, i2.HeaderModule];
    var CancelModalModule = /** @class */ (function () {
        function CancelModalModule() {
        }
        return CancelModalModule;
    }());
    CancelModalModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CancelModalModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    CancelModalModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CancelModalModule, declarations: [CancelModalComponent], imports: [common.CommonModule, i3.ButtonModule, i1.ModalModule, i2.HeaderModule], exports: [CancelModalComponent, i3.ButtonModule, i1.ModalModule, i2.HeaderModule] });
    CancelModalModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CancelModalModule, imports: [__spreadArray([common.CommonModule], __read(uiModules)), i3.ButtonModule, i1.ModalModule, i2.HeaderModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CancelModalModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([common.CommonModule], __read(uiModules)),
                        declarations: [CancelModalComponent],
                        exports: __spreadArray([CancelModalComponent], __read(uiModules)),
                    }]
            }] });

    // eslint-disable-next-line @angular-eslint/directive-class-suffix
    var InputBase = /** @class */ (function () {
        function InputBase() {
            /**
             * A flag to determine if the form has been submitted.
             * Defaults to false.
             */
            this.hasBeenSubmitted = false;
            this.hasBlurred = false;
        }
        Object.defineProperty(InputBase.prototype, "fieldControl", {
            get: function () {
                if (!this.formGroup) {
                    throw new Error('formGroup must be initialised to type FormGroup');
                }
                if (!this.fieldName) {
                    throw new Error('fieldName must be initialised to type FormFieldName');
                }
                return this.formGroup.controls[this.fieldName];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputBase.prototype, "hasErrors", {
            get: function () {
                if (this.hasBeenSubmitted) {
                    this.onFieldBlur();
                }
                return Boolean(this.fieldControl && this.fieldControl.touched && this.fieldControl.errors && this.hasBlurred);
            },
            enumerable: false,
            configurable: true
        });
        InputBase.prototype.onFieldBlur = function () {
            this.hasBlurred = true;
        };
        return InputBase;
    }());
    InputBase.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: InputBase, deps: [], target: i0__namespace.ɵɵFactoryTarget.Directive });
    InputBase.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: InputBase, selector: "[bbUserInputBase]", inputs: { formGroup: "formGroup", fieldName: "fieldName", hasBeenSubmitted: "hasBeenSubmitted" }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: InputBase, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbUserInputBase]',
                    }]
            }], propDecorators: { formGroup: [{
                    type: i0.Input
                }], fieldName: [{
                    type: i0.Input
                }], hasBeenSubmitted: [{
                    type: i0.Input
                }] } });

    var defaultProperties = {
        notificationDismissTime: 3,
        enablePhoneNumberFormatter: true,
        phoneNumberCountryCode: 'CA',
        phoneNumberDebounceTime: 1,
        lockUnlockUserAccountCommentRequired: false,
        emailAddressTypes: [''],
        postalAddressTypes: [''],
        phoneNumberTypes: [''],
        maxEmailAddresses: 3,
        maxPhoneNumbers: 3,
        maxPostalAddresses: 3,
        legalEntityDebounceTime: 1,
        usernameDebounceTime: 1,
        requiredUserActionsDebounceTime: 1,
        legalEntityResponseSize: 5,
        showWidgetHeader: true,
    };
    var ManageProfilePreferencesService = /** @class */ (function () {
        function ManageProfilePreferencesService(model) {
            this.model = model;
        }
        ManageProfilePreferencesService.prototype.getPhoneNumberInputPreferences = function () {
            return rxjs.combineLatest([
                this.getPhoneNumberDebounceTimePreference(),
                this.getPhoneNumberCountryCodePreference(),
                this.getPhoneNumberFormatPreference(),
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 3), debounceTime = _b[0], countryCode = _b[1], enablePhoneNumberFormatter = _b[2];
                return ({
                    debounceTime: debounceTime,
                    countryCode: countryCode,
                    enablePhoneNumberFormatter: enablePhoneNumberFormatter,
                });
            }));
        };
        ManageProfilePreferencesService.prototype.getPhoneNumberDebounceTimePreference = function () {
            return this.model
                ? this.model.property('phoneNumberDebounceTime', defaultProperties.phoneNumberDebounceTime)
                : rxjs.of(defaultProperties.phoneNumberDebounceTime);
        };
        ManageProfilePreferencesService.prototype.getPhoneNumberCountryCodePreference = function () {
            return this.model ? this.model.property('phoneNumberCountryCode', 'CA') : rxjs.of('CA');
        };
        ManageProfilePreferencesService.prototype.getPhoneNumberFormatPreference = function () {
            return this.model
                ? this.model
                    .property('enablePhoneNumberFormatter', JSON.stringify(defaultProperties.enablePhoneNumberFormatter))
                    .pipe(operators.map(function (value) { return value === 'true'; }))
                : rxjs.of(defaultProperties.enablePhoneNumberFormatter);
        };
        ManageProfilePreferencesService.prototype.getNotificationDismissTimePreference = function () {
            return this.model
                ? this.model.property('notificationDismissTime', defaultProperties.notificationDismissTime)
                : rxjs.of(defaultProperties.notificationDismissTime);
        };
        ManageProfilePreferencesService.prototype.getLockUnlockAccountCommentRequiredPreference = function () {
            return this.model
                ? this.model.property('lockUnlockUserAccountCommentRequired', defaultProperties.lockUnlockUserAccountCommentRequired)
                : rxjs.of(defaultProperties.lockUnlockUserAccountCommentRequired);
        };
        ManageProfilePreferencesService.prototype.getWidgetPreferences = function () {
            var preferenceObservables = [
                this.getEmailAddressTypePreferences(),
                this.getPostalAddressTypePreferences(),
                this.getPhoneNumberTypePreferences(),
                this.getMaxEmailAddressesPreference(),
                this.getMaxPhoneNumbersPreference(),
                this.getMaxPostalAddressesPreference(),
                this.getShowWidgetHeaderPreference(),
            ];
            return rxjs.combineLatest(preferenceObservables).pipe(operators.map(function (_a) {
                var _b = __read(_a, 7), emailAddressTypes = _b[0], postalAddressTypes = _b[1], phoneNumberTypes = _b[2], maxEmailAddresses = _b[3], maxPhoneNumbers = _b[4], maxPostalAddresses = _b[5], showWidgetHeader = _b[6];
                return ({
                    emailAddressTypes: emailAddressTypes,
                    postalAddressTypes: postalAddressTypes,
                    phoneNumberTypes: phoneNumberTypes,
                    maxEmailAddresses: maxEmailAddresses,
                    maxPhoneNumbers: maxPhoneNumbers,
                    maxPostalAddresses: maxPostalAddresses,
                    showWidgetHeader: showWidgetHeader,
                });
            }));
        };
        ManageProfilePreferencesService.prototype.getEmailAddressTypePreferences = function () {
            return this.getModelToSeparatedStringArray('emailAddressTypes');
        };
        ManageProfilePreferencesService.prototype.getPostalAddressTypePreferences = function () {
            return this.getModelToSeparatedStringArray('postalAddressTypes');
        };
        ManageProfilePreferencesService.prototype.getPhoneNumberTypePreferences = function () {
            return this.getModelToSeparatedStringArray('phoneNumberTypes');
        };
        ManageProfilePreferencesService.prototype.getModelToSeparatedStringArray = function (modelName) {
            return this.model
                ? this.model.property(modelName, '').pipe(operators.map(this.convertCommaSeparatedStringToStringArray))
                : rxjs.of(defaultProperties[modelName]);
        };
        ManageProfilePreferencesService.prototype.convertCommaSeparatedStringToStringArray = function (value) {
            return value ? value.split(',').map(function (arrayItem) { return arrayItem.trim(); }) : [];
        };
        ManageProfilePreferencesService.prototype.getMaxEmailAddressesPreference = function () {
            return this.model
                ? this.model.property('maxEmailAddresses', defaultProperties.maxEmailAddresses)
                : rxjs.of(defaultProperties.maxEmailAddresses);
        };
        ManageProfilePreferencesService.prototype.getMaxPhoneNumbersPreference = function () {
            return this.model
                ? this.model.property('maxPhoneNumbers', defaultProperties.maxPhoneNumbers)
                : rxjs.of(defaultProperties.maxPhoneNumbers);
        };
        ManageProfilePreferencesService.prototype.getMaxPostalAddressesPreference = function () {
            return this.model
                ? this.model.property('maxPostalAddresses', defaultProperties.maxPostalAddresses)
                : rxjs.of(defaultProperties.maxPostalAddresses);
        };
        ManageProfilePreferencesService.prototype.getLegalEntityDebouncePreference = function () {
            return this.model
                ? this.model.property('legalEntityDebounceTime', defaultProperties.legalEntityDebounceTime)
                : rxjs.of(defaultProperties.legalEntityDebounceTime);
        };
        ManageProfilePreferencesService.prototype.getUsernameDebouncePreference = function () {
            return this.model
                ? this.model.property('usernameDebounceTime', defaultProperties.usernameDebounceTime)
                : rxjs.of(defaultProperties.usernameDebounceTime);
        };
        ManageProfilePreferencesService.prototype.getRequiredUserActionsDebouncePreference = function () {
            return this.model
                ? this.model.property('requiredUserActionsDebounceTime', defaultProperties.requiredUserActionsDebounceTime)
                : rxjs.of(defaultProperties.requiredUserActionsDebounceTime);
        };
        ManageProfilePreferencesService.prototype.getLegalEntityResponseSizePreference = function () {
            return this.model
                ? this.model.property('legalEntityResponseSize', defaultProperties.legalEntityResponseSize)
                : rxjs.of(defaultProperties.legalEntityResponseSize);
        };
        ManageProfilePreferencesService.prototype.getShowWidgetHeaderPreference = function () {
            return this.model
                ? this.model
                    .property('showWidgetHeader', JSON.stringify(defaultProperties.showWidgetHeader))
                    .pipe(operators.map(function (value) { return !!value && value !== 'false'; }))
                : rxjs.of(defaultProperties.showWidgetHeader);
        };
        return ManageProfilePreferencesService;
    }());
    ManageProfilePreferencesService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageProfilePreferencesService, deps: [{ token: i1__namespace$1.ItemModel, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ManageProfilePreferencesService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageProfilePreferencesService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageProfilePreferencesService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: i1__namespace$1.ItemModel, decorators: [{
                            type: i0.Optional
                        }] }];
        } });

    var EditAddressComponent = /** @class */ (function () {
        function EditAddressComponent(manageProfilePreferencesService, cd, notificationService) {
            var _this = this;
            this.manageProfilePreferencesService = manageProfilePreferencesService;
            this.cd = cd;
            this.notificationService = notificationService;
            this.close = new i0.EventEmitter();
            this.closeAfterSave = new i0.EventEmitter();
            this.isSubmitting = false;
            this.notificationDismissTimeSubject = new rxjs.BehaviorSubject(undefined);
            this.dismissTimeoutPreferenceSubscription = rxjs.combineLatest([
                this.notificationDismissTimeSubject.asObservable(),
                this.manageProfilePreferencesService.getNotificationDismissTimePreference(),
            ])
                .pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), input = _b[0], preference = _b[1];
                return (input !== undefined ? input : preference * 1000);
            }))
                .subscribe({
                next: function (val) { return (_this.dismissTimeout = val); },
            });
            this.handleUpdateResponse = function () { return function (source) { return source.pipe(operators.tap(_this.onFormSubmissionSuccessful), operators.catchError(_this.onFormSubmissionUnsuccessful), operators.publish()); }; };
            this.handleDeleteResponse = function () { return function (source) { return source.pipe(operators.tap(_this.onDeletionSuccessful), operators.catchError(_this.onFormSubmissionUnsuccessful), operators.publish()); }; };
            this.onFormSubmissionSuccessful = function () {
                _this.isSubmitting = false;
                _this.onSuccess(_this.notificationUpdateSuccessTemplate);
            };
            this.onDeletionSuccessful = function () {
                _this.isSubmitting = false;
                _this.onSuccess(_this.notificationDeleteSuccessTemplate);
            };
            this.onFormSubmissionUnsuccessful = function () {
                _this.isSubmitting = false;
                _this.notificationService.showNotification({
                    message: _this.notificationFailureTemplate,
                    modifier: 'error',
                    ttl: _this.dismissTimeout,
                });
                _this.cd.markForCheck();
                return rxjs.of(undefined);
            };
        }
        Object.defineProperty(EditAddressComponent.prototype, "notificationDismissTime", {
            set: function (value) {
                this.notificationDismissTimeSubject.next(value);
            },
            enumerable: false,
            configurable: true
        });
        EditAddressComponent.prototype.handleCancelClick = function () {
            this.close.emit();
        };
        EditAddressComponent.prototype.onSuccess = function (template) {
            this.notificationService.showNotification({
                message: template,
                modifier: 'success',
                ttl: this.dismissTimeout,
            });
            this.cd.markForCheck();
            this.closeAfterSave.emit();
        };
        EditAddressComponent.prototype.ngOnDestroy = function () {
            this.dismissTimeoutPreferenceSubscription.unsubscribe();
        };
        return EditAddressComponent;
    }());
    EditAddressComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: EditAddressComponent, deps: [{ token: ManageProfilePreferencesService }, { token: i0__namespace.ChangeDetectorRef }, { token: i2__namespace$1.NotificationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    EditAddressComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: EditAddressComponent, selector: "ng-component", inputs: { notificationDismissTime: "notificationDismissTime" }, outputs: { close: "close", closeAfterSave: "closeAfterSave" }, viewQueries: [{ propertyName: "notificationUpdateSuccessTemplate", first: true, predicate: ["notificationUpdateSuccess"], descendants: true }, { propertyName: "notificationDeleteSuccessTemplate", first: true, predicate: ["notificationDeleteSuccess"], descendants: true }, { propertyName: "notificationFailureTemplate", first: true, predicate: ["notificationFailure"], descendants: true }], ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: EditAddressComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], ctorParameters: function () { return [{ type: ManageProfilePreferencesService }, { type: i0__namespace.ChangeDetectorRef }, { type: i2__namespace$1.NotificationService }]; }, propDecorators: { close: [{
                    type: i0.Output
                }], closeAfterSave: [{
                    type: i0.Output
                }], notificationUpdateSuccessTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationUpdateSuccess']
                }], notificationDeleteSuccessTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationDeleteSuccess']
                }], notificationFailureTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationFailure']
                }], notificationDismissTime: [{
                    type: i0.Input
                }] } });

    var EditEmailAddressComponent = /** @class */ (function (_super) {
        __extends(EditEmailAddressComponent, _super);
        function EditEmailAddressComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return EditEmailAddressComponent;
    }(EditAddressComponent));
    EditEmailAddressComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: EditEmailAddressComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    EditEmailAddressComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: EditEmailAddressComponent, selector: "ng-component", inputs: { emailAddressTypes: "emailAddressTypes", emailAddressData: "emailAddressData", emailAddressCount: "emailAddressCount" }, usesInheritance: true, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: EditEmailAddressComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], propDecorators: { emailAddressTypes: [{
                    type: i0.Input
                }], emailAddressData: [{
                    type: i0.Input
                }], emailAddressCount: [{
                    type: i0.Input
                }] } });

    var ManageEmailAddressComponent = /** @class */ (function () {
        function ManageEmailAddressComponent() {
            this.updateProfile = new i0.EventEmitter();
            this.manageEmail = new i0.EventEmitter();
            this.cancelManageEmail = new i0.EventEmitter();
            this.managingEmailAddress = false;
        }
        ManageEmailAddressComponent.prototype.handleManageEmailAddress = function () {
            if (this.disableManage) {
                return;
            }
            this.managingEmailAddress = true;
            this.manageEmail.emit();
        };
        ManageEmailAddressComponent.prototype.handleCloseEditEmailAddressAfterSave = function () {
            this.updateProfile.emit();
        };
        ManageEmailAddressComponent.prototype.handleCloseEditEmailAddress = function () {
            this.managingEmailAddress = false;
            this.disableManage = false;
            this.cancelManageEmail.emit();
        };
        return ManageEmailAddressComponent;
    }());
    ManageEmailAddressComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageEmailAddressComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ManageEmailAddressComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ManageEmailAddressComponent, selector: "ng-component", inputs: { electronicAddress: "electronicAddress", emailAddressCount: "emailAddressCount", emailAddressTypes: "emailAddressTypes", disableManage: "disableManage", dismissTimeout: "dismissTimeout" }, outputs: { updateProfile: "updateProfile", manageEmail: "manageEmail", cancelManageEmail: "cancelManageEmail" }, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageEmailAddressComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], propDecorators: { electronicAddress: [{
                    type: i0.Input
                }], emailAddressCount: [{
                    type: i0.Input
                }], emailAddressTypes: [{
                    type: i0.Input
                }], disableManage: [{
                    type: i0.Input
                }], dismissTimeout: [{
                    type: i0.Input
                }], updateProfile: [{
                    type: i0.Output
                }], manageEmail: [{
                    type: i0.Output
                }], cancelManageEmail: [{
                    type: i0.Output
                }] } });

    var ManageEmailAddressesComponent = /** @class */ (function () {
        function ManageEmailAddressesComponent() {
            this.updateProfile = new i0.EventEmitter();
            this.manageEmail = new i0.EventEmitter();
            this.cancelManageEmail = new i0.EventEmitter();
            this.isManagingEmailAddressIndex = undefined;
            this.isAddingEmailAddress = false;
            this.isAddButtonAvailable = true;
        }
        ManageEmailAddressesComponent.prototype.ngOnInit = function () {
            if (this.emailAddresses && this.maxEmailAddresses) {
                this.isAddButtonAvailable = this.emailAddresses.length < this.maxEmailAddresses;
            }
        };
        ManageEmailAddressesComponent.prototype.handleManageEmailOpen = function (index) {
            this.isManagingEmailAddressIndex = index;
            this.manageEmail.emit();
        };
        ManageEmailAddressesComponent.prototype.handleManageEmailClosed = function () {
            this.isManagingEmailAddressIndex = undefined;
            this.isAddingEmailAddress = false;
            this.cancelManageEmail.emit();
        };
        ManageEmailAddressesComponent.prototype.handleAddNewEmailAddress = function () {
            if (this.disableManage) {
                return;
            }
            this.isAddingEmailAddress = true;
            this.manageEmail.emit();
        };
        ManageEmailAddressesComponent.prototype.updateUserProfileData = function () {
            this.updateProfile.emit();
        };
        return ManageEmailAddressesComponent;
    }());
    ManageEmailAddressesComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageEmailAddressesComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ManageEmailAddressesComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ManageEmailAddressesComponent, selector: "ng-component", inputs: { disableManage: "disableManage", emailAddresses: "emailAddresses", emailAddressTypes: "emailAddressTypes", maxEmailAddresses: "maxEmailAddresses", dismissTimeout: "dismissTimeout" }, outputs: { updateProfile: "updateProfile", manageEmail: "manageEmail", cancelManageEmail: "cancelManageEmail" }, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageEmailAddressesComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], propDecorators: { disableManage: [{
                    type: i0.Input
                }], emailAddresses: [{
                    type: i0.Input
                }], emailAddressTypes: [{
                    type: i0.Input
                }], maxEmailAddresses: [{
                    type: i0.Input
                }], dismissTimeout: [{
                    type: i0.Input
                }], updateProfile: [{
                    type: i0.Output
                }], manageEmail: [{
                    type: i0.Output
                }], cancelManageEmail: [{
                    type: i0.Output
                }] } });

    var NewAddressComponent = /** @class */ (function () {
        function NewAddressComponent(manageProfilePreferencesService, cd, notificationService) {
            var _this = this;
            this.manageProfilePreferencesService = manageProfilePreferencesService;
            this.cd = cd;
            this.notificationService = notificationService;
            this.close = new i0.EventEmitter();
            this.closeAfterSave = new i0.EventEmitter();
            this.isSubmitting = false;
            this.notificationDismissTimeSubject = new rxjs.BehaviorSubject(undefined);
            this.dismissTimeoutPreferenceSubscription = rxjs.combineLatest([
                this.notificationDismissTimeSubject.asObservable(),
                this.manageProfilePreferencesService.getNotificationDismissTimePreference(),
            ])
                .pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), input = _b[0], preference = _b[1];
                return (input !== undefined ? input : preference * 1000);
            }))
                .subscribe({
                next: function (val) { return (_this.dismissTimeout = val); },
            });
            this.handleServiceResponse = function () { return function (source) { return source.pipe(operators.tap(_this.onFormSubmissionSuccessful), operators.catchError(_this.onFormSubmissionUnsuccessful), operators.publish()); }; };
            this.onFormSubmissionSuccessful = function () {
                _this.isSubmitting = false;
                _this.notificationService.showNotification({
                    message: _this.notificationSuccessTemplate,
                    modifier: 'success',
                    ttl: _this.dismissTimeout,
                });
                _this.cd.markForCheck();
                _this.closeAfterSave.emit();
            };
            this.onFormSubmissionUnsuccessful = function () {
                _this.isSubmitting = false;
                _this.notificationService.showNotification({
                    message: _this.notificationFailureTemplate,
                    modifier: 'error',
                    ttl: _this.dismissTimeout,
                });
                _this.cd.markForCheck();
                return rxjs.of(undefined);
            };
        }
        Object.defineProperty(NewAddressComponent.prototype, "notificationDismissTime", {
            set: function (value) {
                this.notificationDismissTimeSubject.next(value);
            },
            enumerable: false,
            configurable: true
        });
        NewAddressComponent.prototype.handleCancelClick = function () {
            this.close.emit();
        };
        NewAddressComponent.prototype.ngOnDestroy = function () {
            this.dismissTimeoutPreferenceSubscription.unsubscribe();
        };
        return NewAddressComponent;
    }());
    NewAddressComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: NewAddressComponent, deps: [{ token: ManageProfilePreferencesService }, { token: i0__namespace.ChangeDetectorRef }, { token: i2__namespace$1.NotificationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    NewAddressComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: NewAddressComponent, selector: "ng-component", inputs: { notificationDismissTime: "notificationDismissTime" }, outputs: { close: "close", closeAfterSave: "closeAfterSave" }, viewQueries: [{ propertyName: "notificationSuccessTemplate", first: true, predicate: ["notificationSuccess"], descendants: true }, { propertyName: "notificationFailureTemplate", first: true, predicate: ["notificationFailure"], descendants: true }], ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: NewAddressComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], ctorParameters: function () { return [{ type: ManageProfilePreferencesService }, { type: i0__namespace.ChangeDetectorRef }, { type: i2__namespace$1.NotificationService }]; }, propDecorators: { close: [{
                    type: i0.Output
                }], closeAfterSave: [{
                    type: i0.Output
                }], notificationSuccessTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationSuccess']
                }], notificationFailureTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationFailure']
                }], notificationDismissTime: [{
                    type: i0.Input
                }] } });

    var NewEmailAddressComponent = /** @class */ (function (_super) {
        __extends(NewEmailAddressComponent, _super);
        function NewEmailAddressComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        NewEmailAddressComponent.prototype.ngOnInit = function () {
            this.newEmailAddressData = {
                type: this.emailAddressTypes && this.emailAddressTypes.length ? this.emailAddressTypes[0] : '',
                address: '',
            };
        };
        return NewEmailAddressComponent;
    }(NewAddressComponent));
    NewEmailAddressComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: NewEmailAddressComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    NewEmailAddressComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: NewEmailAddressComponent, selector: "ng-component", inputs: { emailAddressTypes: "emailAddressTypes" }, usesInheritance: true, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: NewEmailAddressComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], propDecorators: { emailAddressTypes: [{
                    type: i0.Input
                }] } });

    var EditPhoneNumberComponent = /** @class */ (function (_super) {
        __extends(EditPhoneNumberComponent, _super);
        function EditPhoneNumberComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return EditPhoneNumberComponent;
    }(EditAddressComponent));
    EditPhoneNumberComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: EditPhoneNumberComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    EditPhoneNumberComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: EditPhoneNumberComponent, selector: "ng-component", inputs: { phoneNumberTypes: "phoneNumberTypes", phoneNumberData: "phoneNumberData", phoneNumberCount: "phoneNumberCount" }, usesInheritance: true, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: EditPhoneNumberComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], propDecorators: { phoneNumberTypes: [{
                    type: i0.Input
                }], phoneNumberData: [{
                    type: i0.Input
                }], phoneNumberCount: [{
                    type: i0.Input
                }] } });

    var ManagePhoneNumberComponent = /** @class */ (function () {
        function ManagePhoneNumberComponent(manageProfilePreferencesService) {
            this.manageProfilePreferencesService = manageProfilePreferencesService;
            this.updateProfile = new i0.EventEmitter();
            this.managePhoneNumber = new i0.EventEmitter();
            this.cancelManagePhoneNumber = new i0.EventEmitter();
            this.managingPhoneNumber = false;
            /** @deprecated */
            this.phoneNumberPreferences = this.manageProfilePreferencesService.getPhoneNumberInputPreferences();
        }
        ManagePhoneNumberComponent.prototype.handleManagePhoneNumber = function () {
            if (this.disableManage) {
                return;
            }
            this.managingPhoneNumber = true;
            this.managePhoneNumber.emit();
        };
        ManagePhoneNumberComponent.prototype.handleCloseEditPhoneNumberAfterSave = function () {
            this.updateProfile.emit();
        };
        ManagePhoneNumberComponent.prototype.handleCloseEditPhoneNumber = function () {
            this.managingPhoneNumber = false;
            this.disableManage = false;
            this.cancelManagePhoneNumber.emit();
        };
        return ManagePhoneNumberComponent;
    }());
    ManagePhoneNumberComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePhoneNumberComponent, deps: [{ token: ManageProfilePreferencesService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ManagePhoneNumberComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ManagePhoneNumberComponent, selector: "ng-component", inputs: { phoneNumber: "phoneNumber", phoneNumberCount: "phoneNumberCount", phoneNumberTypes: "phoneNumberTypes", disableManage: "disableManage", dismissTimeout: "dismissTimeout" }, outputs: { updateProfile: "updateProfile", managePhoneNumber: "managePhoneNumber", cancelManagePhoneNumber: "cancelManagePhoneNumber" }, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePhoneNumberComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], ctorParameters: function () { return [{ type: ManageProfilePreferencesService }]; }, propDecorators: { phoneNumber: [{
                    type: i0.Input
                }], phoneNumberCount: [{
                    type: i0.Input
                }], phoneNumberTypes: [{
                    type: i0.Input
                }], disableManage: [{
                    type: i0.Input
                }], dismissTimeout: [{
                    type: i0.Input
                }], updateProfile: [{
                    type: i0.Output
                }], managePhoneNumber: [{
                    type: i0.Output
                }], cancelManagePhoneNumber: [{
                    type: i0.Output
                }] } });

    var ManagePhoneNumbersComponent = /** @class */ (function () {
        function ManagePhoneNumbersComponent() {
            this.updateProfile = new i0.EventEmitter();
            this.managePhoneNumber = new i0.EventEmitter();
            this.cancelManagePhoneNumber = new i0.EventEmitter();
            this.isManagingPhoneNumberIndex = undefined;
            this.isAddingPhoneNumber = false;
            this.isAddButtonAvailable = true;
        }
        ManagePhoneNumbersComponent.prototype.ngOnInit = function () {
            if (this.phoneNumbers && this.maxPhoneNumbers) {
                this.isAddButtonAvailable = this.phoneNumbers.length < this.maxPhoneNumbers;
            }
        };
        ManagePhoneNumbersComponent.prototype.handleManagePhoneNumberOpen = function (index) {
            this.isManagingPhoneNumberIndex = index;
            this.managePhoneNumber.emit();
        };
        ManagePhoneNumbersComponent.prototype.handleAddNewPhoneNumber = function () {
            if (this.disableManage) {
                return;
            }
            this.isAddingPhoneNumber = true;
            this.managePhoneNumber.emit();
        };
        ManagePhoneNumbersComponent.prototype.handleManagePhoneNumberClosed = function () {
            this.isManagingPhoneNumberIndex = undefined;
            this.isAddingPhoneNumber = false;
            this.cancelManagePhoneNumber.emit();
        };
        ManagePhoneNumbersComponent.prototype.updateUserProfileData = function () {
            this.updateProfile.emit();
        };
        return ManagePhoneNumbersComponent;
    }());
    ManagePhoneNumbersComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePhoneNumbersComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ManagePhoneNumbersComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ManagePhoneNumbersComponent, selector: "ng-component", inputs: { phoneNumbers: "phoneNumbers", phoneNumberTypes: "phoneNumberTypes", maxPhoneNumbers: "maxPhoneNumbers", disableManage: "disableManage", dismissTimeout: "dismissTimeout" }, outputs: { updateProfile: "updateProfile", managePhoneNumber: "managePhoneNumber", cancelManagePhoneNumber: "cancelManagePhoneNumber" }, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePhoneNumbersComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], propDecorators: { phoneNumbers: [{
                    type: i0.Input
                }], phoneNumberTypes: [{
                    type: i0.Input
                }], maxPhoneNumbers: [{
                    type: i0.Input
                }], disableManage: [{
                    type: i0.Input
                }], dismissTimeout: [{
                    type: i0.Input
                }], updateProfile: [{
                    type: i0.Output
                }], managePhoneNumber: [{
                    type: i0.Output
                }], cancelManagePhoneNumber: [{
                    type: i0.Output
                }] } });

    var NewPhoneNumberComponent = /** @class */ (function (_super) {
        __extends(NewPhoneNumberComponent, _super);
        function NewPhoneNumberComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        NewPhoneNumberComponent.prototype.ngOnInit = function () {
            this.newPhoneNumberData = {
                type: this.phoneNumberTypes && this.phoneNumberTypes.length ? this.phoneNumberTypes[0] : '',
                number: '',
            };
        };
        return NewPhoneNumberComponent;
    }(NewAddressComponent));
    NewPhoneNumberComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: NewPhoneNumberComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    NewPhoneNumberComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: NewPhoneNumberComponent, selector: "ng-component", inputs: { phoneNumberTypes: "phoneNumberTypes" }, usesInheritance: true, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: NewPhoneNumberComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], propDecorators: { phoneNumberTypes: [{
                    type: i0.Input
                }] } });

    var EditPostalAddressComponent = /** @class */ (function (_super) {
        __extends(EditPostalAddressComponent, _super);
        function EditPostalAddressComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return EditPostalAddressComponent;
    }(EditAddressComponent));
    EditPostalAddressComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: EditPostalAddressComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    EditPostalAddressComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: EditPostalAddressComponent, selector: "ng-component", inputs: { postalAddressTypes: "postalAddressTypes", postalAddressData: "postalAddressData", postalAddressCount: "postalAddressCount" }, usesInheritance: true, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: EditPostalAddressComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], propDecorators: { postalAddressTypes: [{
                    type: i0.Input
                }], postalAddressData: [{
                    type: i0.Input
                }], postalAddressCount: [{
                    type: i0.Input
                }] } });

    var ManagePostalAddressComponent = /** @class */ (function () {
        function ManagePostalAddressComponent() {
            this.updateProfile = new i0.EventEmitter();
            this.managePostalAddress = new i0.EventEmitter();
            this.cancelManagePostalAddress = new i0.EventEmitter();
            this.managingPostalAddress = false;
        }
        ManagePostalAddressComponent.prototype.handleManagePostalAddress = function () {
            if (this.disableManage) {
                return;
            }
            this.managingPostalAddress = true;
            this.managePostalAddress.emit();
        };
        ManagePostalAddressComponent.prototype.handleCloseEditPostalAddressAfterSave = function () {
            this.updateProfile.emit();
        };
        ManagePostalAddressComponent.prototype.handleCloseEditPostalAddress = function () {
            this.managingPostalAddress = false;
            this.disableManage = false;
            this.cancelManagePostalAddress.emit();
        };
        return ManagePostalAddressComponent;
    }());
    ManagePostalAddressComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePostalAddressComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ManagePostalAddressComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ManagePostalAddressComponent, selector: "ng-component", inputs: { postalAddress: "postalAddress", postalAddressCount: "postalAddressCount", postalAddressTypes: "postalAddressTypes", disableManage: "disableManage", dismissTimeout: "dismissTimeout" }, outputs: { updateProfile: "updateProfile", managePostalAddress: "managePostalAddress", cancelManagePostalAddress: "cancelManagePostalAddress" }, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePostalAddressComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], propDecorators: { postalAddress: [{
                    type: i0.Input
                }], postalAddressCount: [{
                    type: i0.Input
                }], postalAddressTypes: [{
                    type: i0.Input
                }], disableManage: [{
                    type: i0.Input
                }], dismissTimeout: [{
                    type: i0.Input
                }], updateProfile: [{
                    type: i0.Output
                }], managePostalAddress: [{
                    type: i0.Output
                }], cancelManagePostalAddress: [{
                    type: i0.Output
                }] } });

    var ManagePostalAddressesComponent = /** @class */ (function () {
        function ManagePostalAddressesComponent() {
            this.updateProfile = new i0.EventEmitter();
            this.managePostalAddress = new i0.EventEmitter();
            this.cancelManagePostalAddress = new i0.EventEmitter();
            this.isManagingPostalAddressIndex = undefined;
            this.isAddingPostalAddress = false;
            this.isAddButtonAvailable = true;
        }
        ManagePostalAddressesComponent.prototype.ngOnInit = function () {
            if (this.postalAddresses && this.maxPostalAddresses) {
                this.isAddButtonAvailable = this.postalAddresses.length < this.maxPostalAddresses;
            }
        };
        ManagePostalAddressesComponent.prototype.handleManagePostalAddressOpen = function (index) {
            this.isManagingPostalAddressIndex = index;
            this.managePostalAddress.emit();
        };
        ManagePostalAddressesComponent.prototype.handleAddNewPostalAddress = function () {
            if (this.disableManage) {
                return;
            }
            this.isAddingPostalAddress = true;
            this.managePostalAddress.emit();
        };
        ManagePostalAddressesComponent.prototype.handleManagePostalAddressClosed = function () {
            this.isManagingPostalAddressIndex = undefined;
            this.isAddingPostalAddress = false;
            this.cancelManagePostalAddress.emit();
        };
        ManagePostalAddressesComponent.prototype.updateUserProfileData = function () {
            this.updateProfile.emit();
        };
        return ManagePostalAddressesComponent;
    }());
    ManagePostalAddressesComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePostalAddressesComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ManagePostalAddressesComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ManagePostalAddressesComponent, selector: "ng-component", inputs: { postalAddresses: "postalAddresses", postalAddressTypes: "postalAddressTypes", maxPostalAddresses: "maxPostalAddresses", disableManage: "disableManage", dismissTimeout: "dismissTimeout" }, outputs: { updateProfile: "updateProfile", managePostalAddress: "managePostalAddress", cancelManagePostalAddress: "cancelManagePostalAddress" }, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePostalAddressesComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], propDecorators: { postalAddresses: [{
                    type: i0.Input
                }], postalAddressTypes: [{
                    type: i0.Input
                }], maxPostalAddresses: [{
                    type: i0.Input
                }], disableManage: [{
                    type: i0.Input
                }], dismissTimeout: [{
                    type: i0.Input
                }], updateProfile: [{
                    type: i0.Output
                }], managePostalAddress: [{
                    type: i0.Output
                }], cancelManagePostalAddress: [{
                    type: i0.Output
                }] } });

    var NewPostalAddressComponent = /** @class */ (function (_super) {
        __extends(NewPostalAddressComponent, _super);
        function NewPostalAddressComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        NewPostalAddressComponent.prototype.ngOnInit = function () {
            this.newPostalAddressData = {
                type: this.postalAddressTypes && this.postalAddressTypes.length ? this.postalAddressTypes[0] : '',
            };
        };
        return NewPostalAddressComponent;
    }(NewAddressComponent));
    NewPostalAddressComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: NewPostalAddressComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    NewPostalAddressComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: NewPostalAddressComponent, selector: "ng-component", inputs: { postalAddressTypes: "postalAddressTypes" }, usesInheritance: true, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: NewPostalAddressComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], propDecorators: { postalAddressTypes: [{
                    type: i0.Input
                }] } });

    var ManageProfileFormComponent = /** @class */ (function () {
        function ManageProfileFormComponent() {
            /**
             * Whether the form is being submitted.
             * Defaults to false.
             */
            this.isSubmitting = false;
            this.cancel = new i0.EventEmitter();
            this.delete = new i0.EventEmitter();
            this.save = new i0.EventEmitter();
            this.showFormErrors = false;
            this.showDeleteButton = false;
            this.isCancelModalOpen = false;
            this.isDeleteModalOpen = false;
            this.hasBeenSubmitted = false;
        }
        ManageProfileFormComponent.prototype.ngOnInit = function () {
            if (this.data.key) {
                this.showDeleteButton = !!(this.count && this.count > 1);
            }
            this.createForm();
        };
        Object.defineProperty(ManageProfileFormComponent.prototype, "form", {
            get: function () {
                if (!this.formData) {
                    throw new Error('formData is not defined');
                }
                return this.formData;
            },
            enumerable: false,
            configurable: true
        });
        ManageProfileFormComponent.prototype.handleSubmit = function () {
            this.hasBeenSubmitted = true;
            this.markFormAsTouched();
            this.showErrorsOnForm();
            if (!this.form.valid) {
                return;
            }
            this.form.updateValueAndValidity();
            this.save.emit(this.form.value);
        };
        ManageProfileFormComponent.prototype.handleCancelClick = function () {
            if (this.form.touched) {
                this.isCancelModalOpen = true;
            }
            else {
                this.cancel.emit();
            }
        };
        ManageProfileFormComponent.prototype.closeCancelModal = function () {
            this.isCancelModalOpen = false;
            this.cancel.emit();
        };
        ManageProfileFormComponent.prototype.dismissCancelModal = function () {
            this.isCancelModalOpen = false;
            this.markFormAsTouched();
            this.showErrorsOnForm();
        };
        ManageProfileFormComponent.prototype.handleDelete = function () {
            this.isDeleteModalOpen = true;
        };
        ManageProfileFormComponent.prototype.closeDeleteModal = function () {
            this.isDeleteModalOpen = false;
            this.delete.emit(this.form.value);
        };
        ManageProfileFormComponent.prototype.dismissDeleteModal = function () {
            this.isDeleteModalOpen = false;
            this.markFormAsTouched();
            this.showErrorsOnForm();
        };
        ManageProfileFormComponent.prototype.showErrorsOnForm = function () {
            this.showFormErrors = !this.form.valid;
        };
        ManageProfileFormComponent.prototype.markFormAsTouched = function () { };
        ManageProfileFormComponent.prototype.createForm = function () { };
        return ManageProfileFormComponent;
    }());
    ManageProfileFormComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageProfileFormComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ManageProfileFormComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ManageProfileFormComponent, selector: "ng-component", inputs: { types: "types", data: "data", count: "count", isSubmitting: "isSubmitting" }, outputs: { cancel: "cancel", delete: "delete", save: "save" }, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageProfileFormComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], propDecorators: { types: [{
                    type: i0.Input
                }], data: [{
                    type: i0.Input
                }], count: [{
                    type: i0.Input
                }], isSubmitting: [{
                    type: i0.Input
                }], cancel: [{
                    type: i0.Output
                }], delete: [{
                    type: i0.Output
                }], save: [{
                    type: i0.Output
                }] } });

    var ManageProfileEmailAddressFormComponent = /** @class */ (function (_super) {
        __extends(ManageProfileEmailAddressFormComponent, _super);
        function ManageProfileEmailAddressFormComponent(formBuilder) {
            var _this = _super.call(this) || this;
            _this.formBuilder = formBuilder;
            return _this;
        }
        ManageProfileEmailAddressFormComponent.prototype.markFormAsTouched = function () {
            this.form.controls.type.markAsTouched();
            this.form.controls.address.markAsTouched();
            this.form.controls.primary.markAsTouched();
        };
        ManageProfileEmailAddressFormComponent.prototype.createForm = function () {
            var _a = this.data, key = _a.key, type = _a.type, address = _a.address, primary = _a.primary;
            this.formData = this.formBuilder.group({
                key: key,
                type: [type, i1$2.Validators.required],
                address: [address, i1$2.Validators.required],
                primary: primary,
            });
        };
        return ManageProfileEmailAddressFormComponent;
    }(ManageProfileFormComponent));
    ManageProfileEmailAddressFormComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageProfileEmailAddressFormComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ManageProfileEmailAddressFormComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ManageProfileEmailAddressFormComponent, selector: "ng-component", usesInheritance: true, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageProfileEmailAddressFormComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var ManageProfilePhoneNumberFormComponent = /** @class */ (function (_super) {
        __extends(ManageProfilePhoneNumberFormComponent, _super);
        function ManageProfilePhoneNumberFormComponent(formBuilder) {
            var _this = _super.call(this) || this;
            _this.formBuilder = formBuilder;
            return _this;
        }
        ManageProfilePhoneNumberFormComponent.prototype.markFormAsTouched = function () {
            this.form.controls.type.markAsTouched();
            this.form.controls.number.markAsTouched();
            this.form.controls.primary.markAsTouched();
        };
        ManageProfilePhoneNumberFormComponent.prototype.createForm = function () {
            var _a = this.data, key = _a.key, type = _a.type, number = _a.number, primary = _a.primary;
            this.formData = this.formBuilder.group({
                key: key,
                type: [type, i1$2.Validators.required],
                number: [number, i1$2.Validators.required],
                primary: primary,
            });
        };
        return ManageProfilePhoneNumberFormComponent;
    }(ManageProfileFormComponent));
    ManageProfilePhoneNumberFormComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageProfilePhoneNumberFormComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ManageProfilePhoneNumberFormComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ManageProfilePhoneNumberFormComponent, selector: "ng-component", usesInheritance: true, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageProfilePhoneNumberFormComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var ManageProfilePostalAddressFormComponent = /** @class */ (function (_super) {
        __extends(ManageProfilePostalAddressFormComponent, _super);
        function ManageProfilePostalAddressFormComponent(formBuilder) {
            var _this = _super.call(this) || this;
            _this.formBuilder = formBuilder;
            return _this;
        }
        ManageProfilePostalAddressFormComponent.prototype.markFormAsTouched = function () {
            this.form.controls.type.markAsTouched();
            this.form.controls.primary.markAsTouched();
            this.form.controls.buildingNumber.markAsTouched();
            this.form.controls.streetName.markAsTouched();
            this.form.controls.townName.markAsTouched();
            this.form.controls.postalCode.markAsTouched();
            this.form.controls.countrySubDivision.markAsTouched();
        };
        ManageProfilePostalAddressFormComponent.prototype.createForm = function () {
            var _a = this
                .data, key = _a.key, type = _a.type, primary = _a.primary, buildingNumber = _a.buildingNumber, streetName = _a.streetName, townName = _a.townName, postalCode = _a.postalCode, countrySubDivision = _a.countrySubDivision;
            this.formData = this.formBuilder.group({
                key: key,
                type: [type, i1$2.Validators.required],
                primary: primary,
                buildingNumber: [buildingNumber, i1$2.Validators.required],
                streetName: streetName,
                townName: [townName, i1$2.Validators.required],
                postalCode: [postalCode, i1$2.Validators.required],
                countrySubDivision: [countrySubDivision, i1$2.Validators.required],
            });
        };
        return ManageProfilePostalAddressFormComponent;
    }(ManageProfileFormComponent));
    ManageProfilePostalAddressFormComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageProfilePostalAddressFormComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ManageProfilePostalAddressFormComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ManageProfilePostalAddressFormComponent, selector: "ng-component", usesInheritance: true, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageProfilePostalAddressFormComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var ManageProfileComponent = /** @class */ (function () {
        function ManageProfileComponent(manageProfilePreferencesService, cd) {
            var _this = this;
            this.manageProfilePreferencesService = manageProfilePreferencesService;
            this.cd = cd;
            this.loadingState = true;
            this.loadingErrorState = false;
            this.disableAddressManaging = false;
            /** @deprecated */
            this.widgetPreferences = this.manageProfilePreferencesService.getWidgetPreferences();
            this.userProfileSubject = new rxjs.BehaviorSubject(undefined);
            this.handleProfileError = function (error) {
                _this.loadingState = false;
                _this.loadingErrorState = true;
                _this.loadingError = error;
                _this.cd.markForCheck();
                return new rxjs.Observable();
            };
            this.onProfileUpdate = function () {
                _this.loadingState = true;
                _this.loadingError = undefined;
            };
        }
        ManageProfileComponent.prototype.refreshProfileData = function () {
            this.handleManageAddressClose();
            this.userProfileSubject.next(undefined);
        };
        ManageProfileComponent.prototype.handleManageAddressOpen = function () {
            this.disableAddressManaging = true;
        };
        ManageProfileComponent.prototype.handleManageAddressClose = function () {
            this.disableAddressManaging = false;
        };
        ManageProfileComponent.prototype.setUserProfileObservable = function () {
            return this.userProfileSubject.asObservable().pipe(operators.map(function () { return ({
                fullName: '',
            }); }));
        };
        ManageProfileComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.userProfileObservable = this.setUserProfileObservable();
            this.userProfileSubscription = this.userProfileObservable.subscribe(function (userProfileData) {
                _this.userProfile = userProfileData;
                _this.loadingState = false;
                _this.loadingErrorState = false;
                _this.cd.markForCheck();
            });
        };
        ManageProfileComponent.prototype.ngOnDestroy = function () {
            if (this.userProfileSubscription) {
                this.userProfileSubscription.unsubscribe();
            }
        };
        return ManageProfileComponent;
    }());
    ManageProfileComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageProfileComponent, deps: [{ token: ManageProfilePreferencesService }, { token: i0__namespace.ChangeDetectorRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ManageProfileComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ManageProfileComponent, selector: "ng-component", inputs: { notificationDismissTime: "notificationDismissTime" }, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageProfileComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], ctorParameters: function () { return [{ type: ManageProfilePreferencesService }, { type: i0__namespace.ChangeDetectorRef }]; }, propDecorators: { notificationDismissTime: [{
                    type: i0.Input
                }] } });

    // eslint-disable-next-line @angular-eslint/directive-class-suffix
    var PhoneNumberInputBase = /** @class */ (function (_super) {
        __extends(PhoneNumberInputBase, _super);
        function PhoneNumberInputBase(manageProfilePreferencesService, phoneNumberFormatter) {
            var _this = _super.call(this) || this;
            _this.manageProfilePreferencesService = manageProfilePreferencesService;
            _this.phoneNumberFormatter = phoneNumberFormatter;
            _this.phoneNumberPreferencesSubscription = _this.manageProfilePreferencesService
                .getPhoneNumberInputPreferences()
                .subscribe(function (preferences) {
                if (preferences) {
                    _this.preferences = preferences;
                    _this.preferences.debounceTime = _this.preferences.debounceTime * 1000;
                }
            });
            return _this;
        }
        // eslint-disable-next-line complexity
        PhoneNumberInputBase.prototype.ngOnInit = function () {
            var _this = this;
            if (this.enablePhoneNumberFormatter && this.phoneNumberDebounceTime === undefined) {
                throw new Error("phoneNumberDebounceTime is required when enablePhoneNumberFormatter is true");
            }
            if (this.enablePhoneNumberFormatter && this.phoneNumberCountryCode === undefined) {
                throw new Error("phoneNumberCountryCode is required when enablePhoneNumberFormatter is true");
            }
            if (this.enablePhoneNumberFormatter !== false) {
                if (this.enablePhoneNumberFormatter || (this.preferences || {}).enablePhoneNumberFormatter) {
                    this.phoneNumberSubscription = this.fieldControl.valueChanges
                        .pipe(operators.distinctUntilChanged(), operators.debounceTime((this.phoneNumberDebounceTime && this.phoneNumberDebounceTime * 1000) || this.preference.debounceTime))
                        .subscribe(function (value) {
                        value = _this.phoneNumberFormatter.transform(value, _this.phoneNumberCountryCode || _this.preference.countryCode, true);
                        _this.fieldControl.setValue(value);
                    });
                }
            }
        };
        Object.defineProperty(PhoneNumberInputBase.prototype, "preference", {
            get: function () {
                if (!this.preferences) {
                    throw new Error('preferences are not defined');
                }
                return this.preferences;
            },
            enumerable: false,
            configurable: true
        });
        PhoneNumberInputBase.prototype.ngOnDestroy = function () {
            this.phoneNumberPreferencesSubscription.unsubscribe();
            if (this.phoneNumberSubscription) {
                this.phoneNumberSubscription.unsubscribe();
            }
        };
        return PhoneNumberInputBase;
    }(InputBase));
    PhoneNumberInputBase.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PhoneNumberInputBase, deps: [{ token: ManageProfilePreferencesService }, { token: i2__namespace$2.PhoneNumberPipe }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    PhoneNumberInputBase.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: PhoneNumberInputBase, selector: "[bbUserPhoneNumberInputBase]", inputs: { phoneNumberCountryCode: "phoneNumberCountryCode", phoneNumberDebounceTime: "phoneNumberDebounceTime", enablePhoneNumberFormatter: "enablePhoneNumberFormatter" }, usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PhoneNumberInputBase, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbUserPhoneNumberInputBase]',
                    }]
            }], ctorParameters: function () { return [{ type: ManageProfilePreferencesService }, { type: i2__namespace$2.PhoneNumberPipe }]; }, propDecorators: { phoneNumberCountryCode: [{
                    type: i0.Input
                }], phoneNumberDebounceTime: [{
                    type: i0.Input
                }], enablePhoneNumberFormatter: [{
                    type: i0.Input
                }] } });

    var components = [
        EditAddressComponent,
        EditEmailAddressComponent,
        EditPhoneNumberComponent,
        EditPostalAddressComponent,
        InputBase,
        ManageEmailAddressesComponent,
        ManageEmailAddressComponent,
        ManagePhoneNumbersComponent,
        ManagePhoneNumberComponent,
        ManagePostalAddressesComponent,
        ManagePostalAddressComponent,
        ManageProfileComponent,
        ManageProfileComponent,
        ManageProfileFormComponent,
        ManageProfileEmailAddressFormComponent,
        ManageProfilePhoneNumberFormComponent,
        ManageProfilePostalAddressFormComponent,
        NewAddressComponent,
        NewEmailAddressComponent,
        NewPhoneNumberComponent,
        NewPostalAddressComponent,
        PhoneNumberInputBase,
    ];
    var UserCommonModule = /** @class */ (function () {
        function UserCommonModule() {
        }
        return UserCommonModule;
    }());
    UserCommonModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: UserCommonModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    UserCommonModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: UserCommonModule, declarations: [EditAddressComponent,
            EditEmailAddressComponent,
            EditPhoneNumberComponent,
            EditPostalAddressComponent,
            InputBase,
            ManageEmailAddressesComponent,
            ManageEmailAddressComponent,
            ManagePhoneNumbersComponent,
            ManagePhoneNumberComponent,
            ManagePostalAddressesComponent,
            ManagePostalAddressComponent,
            ManageProfileComponent,
            ManageProfileComponent,
            ManageProfileFormComponent,
            ManageProfileEmailAddressFormComponent,
            ManageProfilePhoneNumberFormComponent,
            ManageProfilePostalAddressFormComponent,
            NewAddressComponent,
            NewEmailAddressComponent,
            NewPhoneNumberComponent,
            NewPostalAddressComponent,
            PhoneNumberInputBase], imports: [common.CommonModule], exports: [EditAddressComponent,
            EditEmailAddressComponent,
            EditPhoneNumberComponent,
            EditPostalAddressComponent,
            InputBase,
            ManageEmailAddressesComponent,
            ManageEmailAddressComponent,
            ManagePhoneNumbersComponent,
            ManagePhoneNumberComponent,
            ManagePostalAddressesComponent,
            ManagePostalAddressComponent,
            ManageProfileComponent,
            ManageProfileComponent,
            ManageProfileFormComponent,
            ManageProfileEmailAddressFormComponent,
            ManageProfilePhoneNumberFormComponent,
            ManageProfilePostalAddressFormComponent,
            NewAddressComponent,
            NewEmailAddressComponent,
            NewPhoneNumberComponent,
            NewPostalAddressComponent,
            PhoneNumberInputBase] });
    UserCommonModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: UserCommonModule, imports: [[common.CommonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: UserCommonModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [common.CommonModule],
                        declarations: __spreadArray([], __read(components)),
                        exports: __spreadArray([], __read(components)),
                    }]
            }] });

    var IdGeneratorService = /** @class */ (function () {
        function IdGeneratorService() {
        }
        IdGeneratorService.prototype.generateId = function (elementKey) {
            return elementKey + "-" + Math.random().toString(36).substring(2, 9);
        };
        return IdGeneratorService;
    }());
    IdGeneratorService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: IdGeneratorService, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    IdGeneratorService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: IdGeneratorService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: IdGeneratorService, decorators: [{
                type: i0.Injectable
            }] });

    var LegalEntityDataService = /** @class */ (function () {
        function LegalEntityDataService(legalEntityData) {
            this.legalEntityData = legalEntityData;
        }
        LegalEntityDataService.prototype.getLegalentitiesSubEntities = function (searchSubEntitiesParameters) {
            return this.legalEntityData.postSubEntities({ searchSubEntitiesParameters: searchSubEntitiesParameters });
        };
        return LegalEntityDataService;
    }());
    LegalEntityDataService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: LegalEntityDataService, deps: [{ token: i1__namespace$3.LegalEntitiesHttpService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    LegalEntityDataService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: LegalEntityDataService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: LegalEntityDataService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$3.LegalEntitiesHttpService }]; } });

    var ManageProfileService = /** @class */ (function () {
        function ManageProfileService() {
            var _this = this;
            this.sortUserContactListsByPrimary = function (profile) {
                _this.sortListByPrimary(profile['electronic-addresses']);
                _this.sortListByPrimary(profile['phone-addresses']);
                _this.sortListByPrimary(profile['postal-addresses']);
                return profile;
            };
        }
        ManageProfileService.prototype.sortListByPrimary = function (list) {
            if (list) {
                list.sort(function (a, b) {
                    if (a.primary === b.primary) {
                        return 0;
                    }
                    return a.primary ? -1 : 1;
                });
            }
        };
        return ManageProfileService;
    }());
    ManageProfileService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageProfileService, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ManageProfileService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageProfileService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManageProfileService, decorators: [{
                type: i0.Injectable
            }] });

    var UserDataService = /** @class */ (function () {
        function UserDataService(userManagementService, identityManagementService) {
            this.userManagementService = userManagementService;
            this.identityManagementService = identityManagementService;
        }
        UserDataService.prototype.checkUsernameAvailability = function (externalId) {
            var _this = this;
            return this.userManagementService.checkUserExists({ externalId: externalId }, 'response').pipe(operators.map(this.isNotFound), operators.catchError(function (error) { return rxjs.of(_this.isNotFound(error)); }));
        };
        UserDataService.prototype.createUser = function (createIdentityRequest) {
            return this.identityManagementService.createIdentity({ createIdentityRequest: createIdentityRequest });
        };
        UserDataService.prototype.getPendingApprovalsByInternalIdAndType = function (internalId, type) {
            return this.getPendingApprovalsByInternalId(internalId).pipe(operators.map(function (approvals) { return approvals.filter(function (approval) { return approval.type === type; }); }));
        };
        UserDataService.prototype.getPendingApprovalsByInternalId = function (internalId) {
            return this.identityManagementService.getIdentityPendingApprovals({ internalId: internalId });
        };
        UserDataService.prototype.getUsersIdentitiesSessionsByInternalId = function (internalId) {
            return this.identityManagementService.getSessions({ internalId: internalId });
        };
        UserDataService.prototype.updateUsersIdentitiesSessionsLogoutRecordByInternalId = function (internalId, sessionIds) {
            if (sessionIds === void 0) { sessionIds = []; }
            return this.identityManagementService.logoutSessions({
                internalId: internalId,
                identityLogoutRequest: { sessionIds: sessionIds },
            });
        };
        UserDataService.prototype.updateUserActions = function (internalId, actions) {
            return this.identityManagementService.sendRequiredActions({
                internalId: internalId,
                identityRequiredActionsRequest: { actions: actions },
            });
        };
        UserDataService.prototype.updateUserRecordActions = function (internalId, updateIdentityRequest) {
            return this.identityManagementService.updateIdentity({
                internalId: internalId,
                updateIdentityRequest: updateIdentityRequest,
            });
        };
        UserDataService.prototype.changeUserPassword = function (existingPassword, newPassword) {
            return this.identityManagementService.changePassword({
                changePasswordRequest: {
                    existingPassword: existingPassword,
                    newPassword: newPassword,
                },
            });
        };
        UserDataService.prototype.getUserDetails = function (internalId) {
            return this.identityManagementService.getIdentity({ internalId: internalId });
        };
        UserDataService.prototype.isNotFound = function (response) {
            return response.status === 404;
        };
        return UserDataService;
    }());
    UserDataService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: UserDataService, deps: [{ token: i1__namespace$4.UserManagementService }, { token: i1__namespace$4.IdentityManagementService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    UserDataService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: UserDataService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: UserDataService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$4.UserManagementService }, { type: i1__namespace$4.IdentityManagementService }]; } });

    var UserRouterService = /** @class */ (function () {
        function UserRouterService(route) {
            this.route = route;
            this.userId = this.getRouteParam(this.route, 'userId');
        }
        UserRouterService.prototype.getRouteParam = function (route, param) {
            var paramValue = route.paramMap.pipe(operators.pluck('params', param));
            if (!route.parent) {
                return paramValue;
            }
            // Ensure that level that has actual value keeps it from being cleared.
            return rxjs.combineLatest([paramValue, this.getRouteParam(route.parent, param)]).pipe(operators.map(function (params) { return params[0] || params[1]; }));
        };
        return UserRouterService;
    }());
    UserRouterService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: UserRouterService, deps: [{ token: i1__namespace$5.ActivatedRoute }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    UserRouterService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: UserRouterService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: UserRouterService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$5.ActivatedRoute }]; } });

    var UtilityService = /** @class */ (function () {
        function UtilityService() {
        }
        UtilityService.prototype.getBody = function (data) {
            if (!data.body) {
                throw new Error('No body found in resource');
            }
            return data.body;
        };
        return UtilityService;
    }());
    UtilityService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: UtilityService, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    UtilityService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: UtilityService, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: UtilityService, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root',
                    }]
            }] });

    /**
     * Details the allowed actions that can be set on the user
     */
    exports.UserActions = void 0;
    (function (UserActions) {
        UserActions["updatePassword"] = "UPDATE_PASSWORD";
        UserActions["verifyEmail"] = "VERIFY_EMAIL";
        UserActions["updateProfile"] = "UPDATE_PROFILE";
        UserActions["configureTotp"] = "CONFIGURE_TOTP";
        UserActions["acceptTermsAndConditions"] = "ACCEPT_TERMS_AND_CONDITIONS";
    })(exports.UserActions || (exports.UserActions = {}));

    exports.ApprovalType = void 0;
    (function (ApprovalType) {
        ApprovalType["UNLOCK"] = "UNLOCK";
    })(exports.ApprovalType || (exports.ApprovalType = {}));

    exports.UserStatus = void 0;
    (function (UserStatus) {
        UserStatus["ENABLED"] = "ENABLED";
        UserStatus["DISABLED"] = "DISABLED";
        UserStatus["LOCKED"] = "TEMPORARILY_LOCKED";
        UserStatus["DORMANT"] = "DORMANT";
        UserStatus["INACTIVE"] = "INACTIVE";
        UserStatus["ACCESS_REVOKED"] = "ACCESS_REVOKED";
    })(exports.UserStatus || (exports.UserStatus = {}));

    var filterInputParameters = function (input, prop) { return rxjs.combineLatest([input, prop]).pipe(operators.map(function (_a) {
        var _b = __read(_a, 2), inputVal = _b[0], propVal = _b[1];
        return (inputVal !== undefined ? inputVal : propVal);
    })); };
    var convertCommaSeparatedStringToStringArray = function (value) { return value ? value.split(',').map(function (arrayItem) { return arrayItem.trim(); }) : []; };

    // Services

    /**
     * Generated bundle index. Do not edit.
     */

    exports.CancelModalModule = CancelModalModule;
    exports.EditEmailAddressComponent = EditEmailAddressComponent;
    exports.EditPhoneNumberComponent = EditPhoneNumberComponent;
    exports.EditPostalAddressComponent = EditPostalAddressComponent;
    exports.IdGeneratorService = IdGeneratorService;
    exports.InputBase = InputBase;
    exports.LegalEntityDataService = LegalEntityDataService;
    exports.ManageEmailAddressComponent = ManageEmailAddressComponent;
    exports.ManageEmailAddressesComponent = ManageEmailAddressesComponent;
    exports.ManagePhoneNumberComponent = ManagePhoneNumberComponent;
    exports.ManagePhoneNumbersComponent = ManagePhoneNumbersComponent;
    exports.ManagePostalAddressComponent = ManagePostalAddressComponent;
    exports.ManagePostalAddressesComponent = ManagePostalAddressesComponent;
    exports.ManageProfileComponent = ManageProfileComponent;
    exports.ManageProfileEmailAddressFormComponent = ManageProfileEmailAddressFormComponent;
    exports.ManageProfilePhoneNumberFormComponent = ManageProfilePhoneNumberFormComponent;
    exports.ManageProfilePostalAddressFormComponent = ManageProfilePostalAddressFormComponent;
    exports.ManageProfilePreferencesService = ManageProfilePreferencesService;
    exports.ManageProfileService = ManageProfileService;
    exports.NewEmailAddressComponent = NewEmailAddressComponent;
    exports.NewPhoneNumberComponent = NewPhoneNumberComponent;
    exports.NewPostalAddressComponent = NewPostalAddressComponent;
    exports.PhoneNumberInputBase = PhoneNumberInputBase;
    exports.UserCommonModule = UserCommonModule;
    exports.UserDataService = UserDataService;
    exports.UserRouterService = UserRouterService;
    exports.UtilityService = UtilityService;
    exports.convertCommaSeparatedStringToStringArray = convertCommaSeparatedStringToStringArray;
    exports.filterInputParameters = filterInputParameters;
    exports["ӨCancelModalComponent"] = CancelModalComponent;
    exports["ӨEditAddressComponent"] = EditAddressComponent;
    exports["ӨManageProfileFormComponent"] = ManageProfileFormComponent;
    exports["ӨNewAddressComponent"] = NewAddressComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-user-common.umd.js.map
