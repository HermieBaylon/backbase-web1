import { Injectable } from '@angular/core';
import { combineLatest } from 'rxjs';
import { map, pluck } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
export class UserRouterService {
    constructor(route) {
        this.route = route;
        this.userId = this.getRouteParam(this.route, 'userId');
    }
    getRouteParam(route, param) {
        const paramValue = route.paramMap.pipe(pluck('params', param));
        if (!route.parent) {
            return paramValue;
        }
        // Ensure that level that has actual value keeps it from being cleared.
        return combineLatest([paramValue, this.getRouteParam(route.parent, param)]).pipe(map((params) => params[0] || params[1]));
    }
}
UserRouterService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserRouterService, deps: [{ token: i1.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Injectable });
UserRouterService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserRouterService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserRouterService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.ActivatedRoute }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1yb3V0ZXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdXNlci1jb21tb24vc3JjL3NlcnZpY2VzL3VzZXItcm91dGVyL3VzZXItcm91dGVyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQUUsYUFBYSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7OztBQUc1QyxNQUFNLE9BQU8saUJBQWlCO0lBRzVCLFlBQTZCLEtBQXFCO1FBQXJCLFVBQUssR0FBTCxLQUFLLENBQWdCO1FBRmxELFdBQU0sR0FBOEIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBRXhCLENBQUM7SUFFOUMsYUFBYSxDQUFDLEtBQXFCLEVBQUUsS0FBYTtRQUN4RCxNQUFNLFVBQVUsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQTBCLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBRXhGLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFO1lBQ2pCLE9BQU8sVUFBVSxDQUFDO1NBQ25CO1FBRUQsdUVBQXVFO1FBQ3ZFLE9BQU8sYUFBYSxDQUFDLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUM5RSxHQUFHLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDeEMsQ0FBQztJQUNKLENBQUM7OytHQWhCVSxpQkFBaUI7bUhBQWpCLGlCQUFpQjs0RkFBakIsaUJBQWlCO2tCQUQ3QixVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGUsIFBhcmFtTWFwIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IGNvbWJpbmVMYXRlc3QsIE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IG1hcCwgcGx1Y2sgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBVc2VyUm91dGVyU2VydmljZSB7XG4gIHVzZXJJZDogT2JzZXJ2YWJsZTxzdHJpbmcgfCBudWxsPiA9IHRoaXMuZ2V0Um91dGVQYXJhbSh0aGlzLnJvdXRlLCAndXNlcklkJyk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSByb3V0ZTogQWN0aXZhdGVkUm91dGUpIHt9XG5cbiAgcHJpdmF0ZSBnZXRSb3V0ZVBhcmFtKHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSwgcGFyYW06IHN0cmluZyk6IE9ic2VydmFibGU8c3RyaW5nIHwgbnVsbD4ge1xuICAgIGNvbnN0IHBhcmFtVmFsdWUgPSByb3V0ZS5wYXJhbU1hcC5waXBlKHBsdWNrPFBhcmFtTWFwLCBzdHJpbmcgfCBudWxsPigncGFyYW1zJywgcGFyYW0pKTtcblxuICAgIGlmICghcm91dGUucGFyZW50KSB7XG4gICAgICByZXR1cm4gcGFyYW1WYWx1ZTtcbiAgICB9XG5cbiAgICAvLyBFbnN1cmUgdGhhdCBsZXZlbCB0aGF0IGhhcyBhY3R1YWwgdmFsdWUga2VlcHMgaXQgZnJvbSBiZWluZyBjbGVhcmVkLlxuICAgIHJldHVybiBjb21iaW5lTGF0ZXN0KFtwYXJhbVZhbHVlLCB0aGlzLmdldFJvdXRlUGFyYW0ocm91dGUucGFyZW50LCBwYXJhbSldKS5waXBlKFxuICAgICAgbWFwKChwYXJhbXMpID0+IHBhcmFtc1swXSB8fCBwYXJhbXNbMV0pLFxuICAgICk7XG4gIH1cbn1cbiJdfQ==