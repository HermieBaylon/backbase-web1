import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
export class ManageEmailAddressesComponent {
    constructor() {
        this.updateProfile = new EventEmitter();
        this.manageEmail = new EventEmitter();
        this.cancelManageEmail = new EventEmitter();
        this.isManagingEmailAddressIndex = undefined;
        this.isAddingEmailAddress = false;
        this.isAddButtonAvailable = true;
    }
    ngOnInit() {
        if (this.emailAddresses && this.maxEmailAddresses) {
            this.isAddButtonAvailable = this.emailAddresses.length < this.maxEmailAddresses;
        }
    }
    handleManageEmailOpen(index) {
        this.isManagingEmailAddressIndex = index;
        this.manageEmail.emit();
    }
    handleManageEmailClosed() {
        this.isManagingEmailAddressIndex = undefined;
        this.isAddingEmailAddress = false;
        this.cancelManageEmail.emit();
    }
    handleAddNewEmailAddress() {
        if (this.disableManage) {
            return;
        }
        this.isAddingEmailAddress = true;
        this.manageEmail.emit();
    }
    updateUserProfileData() {
        this.updateProfile.emit();
    }
}
ManageEmailAddressesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ManageEmailAddressesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ManageEmailAddressesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ManageEmailAddressesComponent, selector: "ng-component", inputs: { disableManage: "disableManage", emailAddresses: "emailAddresses", emailAddressTypes: "emailAddressTypes", maxEmailAddresses: "maxEmailAddresses", dismissTimeout: "dismissTimeout" }, outputs: { updateProfile: "updateProfile", manageEmail: "manageEmail", cancelManageEmail: "cancelManageEmail" }, ngImport: i0, template: '', isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ManageEmailAddressesComponent, decorators: [{
            type: Component,
            args: [{
                    template: '',
                }]
        }], propDecorators: { disableManage: [{
                type: Input
            }], emailAddresses: [{
                type: Input
            }], emailAddressTypes: [{
                type: Input
            }], maxEmailAddresses: [{
                type: Input
            }], dismissTimeout: [{
                type: Input
            }], updateProfile: [{
                type: Output
            }], manageEmail: [{
                type: Output
            }], cancelManageEmail: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFuYWdlLWVtYWlsLWFkZHJlc3Nlcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VzZXItY29tbW9uL3NyYy9jb21wb25lbnRzL21hbmFnZS1wcm9maWxlL21hbmFnZS1lbWFpbC1hZGRyZXNzZXMvbWFuYWdlLWVtYWlsLWFkZHJlc3Nlcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFNL0UsTUFBTSxPQUFPLDZCQUE2QjtJQUgxQztRQXFCWSxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7UUFDekMsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBUSxDQUFDO1FBQ3ZDLHNCQUFpQixHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7UUFDdkQsZ0NBQTJCLEdBQXVCLFNBQVMsQ0FBQztRQUM1RCx5QkFBb0IsR0FBRyxLQUFLLENBQUM7UUFDN0IseUJBQW9CLEdBQUcsSUFBSSxDQUFDO0tBOEI3QjtJQTVCQyxRQUFRO1FBQ04sSUFBSSxJQUFJLENBQUMsY0FBYyxJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtZQUNqRCxJQUFJLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDO1NBQ2pGO0lBQ0gsQ0FBQztJQUVELHFCQUFxQixDQUFDLEtBQWM7UUFDbEMsSUFBSSxDQUFDLDJCQUEyQixHQUFHLEtBQUssQ0FBQztRQUN6QyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFFRCx1QkFBdUI7UUFDckIsSUFBSSxDQUFDLDJCQUEyQixHQUFHLFNBQVMsQ0FBQztRQUM3QyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsS0FBSyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0lBRUQsd0JBQXdCO1FBQ3RCLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUN0QixPQUFPO1NBQ1I7UUFDRCxJQUFJLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDMUIsQ0FBQztJQUVELHFCQUFxQjtRQUNuQixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzVCLENBQUM7OzJIQXBEVSw2QkFBNkI7K0dBQTdCLDZCQUE2QixxV0FGOUIsRUFBRTs0RkFFRCw2QkFBNkI7a0JBSHpDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLEVBQUU7aUJBQ2I7OEJBS1UsYUFBYTtzQkFBckIsS0FBSztnQkFJRyxjQUFjO3NCQUF0QixLQUFLO2dCQUlHLGlCQUFpQjtzQkFBekIsS0FBSztnQkFJRyxpQkFBaUI7c0JBQXpCLEtBQUs7Z0JBQ0csY0FBYztzQkFBdEIsS0FBSztnQkFDSSxhQUFhO3NCQUF0QixNQUFNO2dCQUNHLFdBQVc7c0JBQXBCLE1BQU07Z0JBQ0csaUJBQWlCO3NCQUExQixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgR2V0RWxlY3Ryb25pY0FkZHJlc3MgfSBmcm9tICcuLi8uLi8uLi9jb21tb24tdHlwZXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgdGVtcGxhdGU6ICcnLFxufSlcbmV4cG9ydCBjbGFzcyBNYW5hZ2VFbWFpbEFkZHJlc3Nlc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIC8qKlxuICAgKiBXaGV0aGVyIHRoZSBtYW5hZ2UgYnV0dG9uIGlzIGRpc2FibGVkLlxuICAgKi9cbiAgQElucHV0KCkgZGlzYWJsZU1hbmFnZTogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbiAgLyoqXG4gICAqIFRoZSBsaXN0IG9mIGVtYWlsIGFkZHJlc3NlcyBzdG9yZWQuXG4gICAqL1xuICBASW5wdXQoKSBlbWFpbEFkZHJlc3NlczogQXJyYXk8R2V0RWxlY3Ryb25pY0FkZHJlc3M+IHwgdW5kZWZpbmVkO1xuICAvKipcbiAgICogVGhlIGxpc3Qgb2YgZW1haWwgYWRkcmVzcyB0eXBlcy5cbiAgICovXG4gIEBJbnB1dCgpIGVtYWlsQWRkcmVzc1R5cGVzOiBBcnJheTxzdHJpbmc+IHwgdW5kZWZpbmVkO1xuICAvKipcbiAgICogVGhlIG1heGltdW0gbnVtYmVyIG9mIGFsbG93ZWQgZW1haWwgYWRkcmVzc2VzLlxuICAgKi9cbiAgQElucHV0KCkgbWF4RW1haWxBZGRyZXNzZXM6IG51bWJlciB8IHVuZGVmaW5lZDtcbiAgQElucHV0KCkgZGlzbWlzc1RpbWVvdXQ6IG51bWJlciB8IHVuZGVmaW5lZDtcbiAgQE91dHB1dCgpIHVwZGF0ZVByb2ZpbGUgPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG4gIEBPdXRwdXQoKSBtYW5hZ2VFbWFpbCA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcbiAgQE91dHB1dCgpIGNhbmNlbE1hbmFnZUVtYWlsID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xuICBpc01hbmFnaW5nRW1haWxBZGRyZXNzSW5kZXg6IG51bWJlciB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcbiAgaXNBZGRpbmdFbWFpbEFkZHJlc3MgPSBmYWxzZTtcbiAgaXNBZGRCdXR0b25BdmFpbGFibGUgPSB0cnVlO1xuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmVtYWlsQWRkcmVzc2VzICYmIHRoaXMubWF4RW1haWxBZGRyZXNzZXMpIHtcbiAgICAgIHRoaXMuaXNBZGRCdXR0b25BdmFpbGFibGUgPSB0aGlzLmVtYWlsQWRkcmVzc2VzLmxlbmd0aCA8IHRoaXMubWF4RW1haWxBZGRyZXNzZXM7XG4gICAgfVxuICB9XG5cbiAgaGFuZGxlTWFuYWdlRW1haWxPcGVuKGluZGV4PzogbnVtYmVyKSB7XG4gICAgdGhpcy5pc01hbmFnaW5nRW1haWxBZGRyZXNzSW5kZXggPSBpbmRleDtcbiAgICB0aGlzLm1hbmFnZUVtYWlsLmVtaXQoKTtcbiAgfVxuXG4gIGhhbmRsZU1hbmFnZUVtYWlsQ2xvc2VkKCkge1xuICAgIHRoaXMuaXNNYW5hZ2luZ0VtYWlsQWRkcmVzc0luZGV4ID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuaXNBZGRpbmdFbWFpbEFkZHJlc3MgPSBmYWxzZTtcbiAgICB0aGlzLmNhbmNlbE1hbmFnZUVtYWlsLmVtaXQoKTtcbiAgfVxuXG4gIGhhbmRsZUFkZE5ld0VtYWlsQWRkcmVzcygpIHtcbiAgICBpZiAodGhpcy5kaXNhYmxlTWFuYWdlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuaXNBZGRpbmdFbWFpbEFkZHJlc3MgPSB0cnVlO1xuICAgIHRoaXMubWFuYWdlRW1haWwuZW1pdCgpO1xuICB9XG5cbiAgdXBkYXRlVXNlclByb2ZpbGVEYXRhKCkge1xuICAgIHRoaXMudXBkYXRlUHJvZmlsZS5lbWl0KCk7XG4gIH1cbn1cbiJdfQ==