import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
export class ManagePostalAddressesComponent {
    constructor() {
        this.updateProfile = new EventEmitter();
        this.managePostalAddress = new EventEmitter();
        this.cancelManagePostalAddress = new EventEmitter();
        this.isManagingPostalAddressIndex = undefined;
        this.isAddingPostalAddress = false;
        this.isAddButtonAvailable = true;
    }
    ngOnInit() {
        if (this.postalAddresses && this.maxPostalAddresses) {
            this.isAddButtonAvailable = this.postalAddresses.length < this.maxPostalAddresses;
        }
    }
    handleManagePostalAddressOpen(index) {
        this.isManagingPostalAddressIndex = index;
        this.managePostalAddress.emit();
    }
    handleAddNewPostalAddress() {
        if (this.disableManage) {
            return;
        }
        this.isAddingPostalAddress = true;
        this.managePostalAddress.emit();
    }
    handleManagePostalAddressClosed() {
        this.isManagingPostalAddressIndex = undefined;
        this.isAddingPostalAddress = false;
        this.cancelManagePostalAddress.emit();
    }
    updateUserProfileData() {
        this.updateProfile.emit();
    }
}
ManagePostalAddressesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ManagePostalAddressesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ManagePostalAddressesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ManagePostalAddressesComponent, selector: "ng-component", inputs: { postalAddresses: "postalAddresses", postalAddressTypes: "postalAddressTypes", maxPostalAddresses: "maxPostalAddresses", disableManage: "disableManage", dismissTimeout: "dismissTimeout" }, outputs: { updateProfile: "updateProfile", managePostalAddress: "managePostalAddress", cancelManagePostalAddress: "cancelManagePostalAddress" }, ngImport: i0, template: '', isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ManagePostalAddressesComponent, decorators: [{
            type: Component,
            args: [{
                    template: '',
                }]
        }], propDecorators: { postalAddresses: [{
                type: Input
            }], postalAddressTypes: [{
                type: Input
            }], maxPostalAddresses: [{
                type: Input
            }], disableManage: [{
                type: Input
            }], dismissTimeout: [{
                type: Input
            }], updateProfile: [{
                type: Output
            }], managePostalAddress: [{
                type: Output
            }], cancelManagePostalAddress: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFuYWdlLXBvc3RhbC1hZGRyZXNzZXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91c2VyLWNvbW1vbi9zcmMvY29tcG9uZW50cy9tYW5hZ2UtcHJvZmlsZS9tYW5hZ2UtcG9zdGFsLWFkZHJlc3Nlcy9tYW5hZ2UtcG9zdGFsLWFkZHJlc3Nlcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFNL0UsTUFBTSxPQUFPLDhCQUE4QjtJQUgzQztRQXFCWSxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7UUFDekMsd0JBQW1CLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztRQUMvQyw4QkFBeUIsR0FBRyxJQUFJLFlBQVksRUFBUSxDQUFDO1FBQy9ELGlDQUE0QixHQUF1QixTQUFTLENBQUM7UUFDN0QsMEJBQXFCLEdBQUcsS0FBSyxDQUFDO1FBQzlCLHlCQUFvQixHQUFHLElBQUksQ0FBQztLQThCN0I7SUE1QkMsUUFBUTtRQUNOLElBQUksSUFBSSxDQUFDLGVBQWUsSUFBSSxJQUFJLENBQUMsa0JBQWtCLEVBQUU7WUFDbkQsSUFBSSxDQUFDLG9CQUFvQixHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQztTQUNuRjtJQUNILENBQUM7SUFFRCw2QkFBNkIsQ0FBQyxLQUFjO1FBQzFDLElBQUksQ0FBQyw0QkFBNEIsR0FBRyxLQUFLLENBQUM7UUFDMUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2xDLENBQUM7SUFFRCx5QkFBeUI7UUFDdkIsSUFBSSxJQUFJLENBQUMsYUFBYSxFQUFFO1lBQ3RCLE9BQU87U0FDUjtRQUNELElBQUksQ0FBQyxxQkFBcUIsR0FBRyxJQUFJLENBQUM7UUFDbEMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2xDLENBQUM7SUFFRCwrQkFBK0I7UUFDN0IsSUFBSSxDQUFDLDRCQUE0QixHQUFHLFNBQVMsQ0FBQztRQUM5QyxJQUFJLENBQUMscUJBQXFCLEdBQUcsS0FBSyxDQUFDO1FBQ25DLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN4QyxDQUFDO0lBRUQscUJBQXFCO1FBQ25CLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDNUIsQ0FBQzs7NEhBcERVLDhCQUE4QjtnSEFBOUIsOEJBQThCLDJZQUYvQixFQUFFOzRGQUVELDhCQUE4QjtrQkFIMUMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsRUFBRTtpQkFDYjs4QkFLVSxlQUFlO3NCQUF2QixLQUFLO2dCQUlHLGtCQUFrQjtzQkFBMUIsS0FBSztnQkFJRyxrQkFBa0I7c0JBQTFCLEtBQUs7Z0JBSUcsYUFBYTtzQkFBckIsS0FBSztnQkFDRyxjQUFjO3NCQUF0QixLQUFLO2dCQUNJLGFBQWE7c0JBQXRCLE1BQU07Z0JBQ0csbUJBQW1CO3NCQUE1QixNQUFNO2dCQUNHLHlCQUF5QjtzQkFBbEMsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEdldFBvc3RhbEFkZHJlc3MgfSBmcm9tICcuLi8uLi8uLi9jb21tb24tdHlwZXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgdGVtcGxhdGU6ICcnLFxufSlcbmV4cG9ydCBjbGFzcyBNYW5hZ2VQb3N0YWxBZGRyZXNzZXNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAvKipcbiAgICogVGhlIGxpc3Qgb2YgcG9zdGFsIGFkZHJlc3NlcyBzdG9yZWQuXG4gICAqL1xuICBASW5wdXQoKSBwb3N0YWxBZGRyZXNzZXM6IEFycmF5PEdldFBvc3RhbEFkZHJlc3M+IHwgdW5kZWZpbmVkO1xuICAvKipcbiAgICogVGhlIGxpc3Qgb2YgcG9zdGFsIGFkZHJlc3MgdHlwZXMuXG4gICAqL1xuICBASW5wdXQoKSBwb3N0YWxBZGRyZXNzVHlwZXM6IEFycmF5PHN0cmluZz4gfCB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBUaGUgbWF4aW11bSBudW1iZXIgb2YgYWxsb3dlZCBwb3N0YWwgYWRkcmVzc2VzLlxuICAgKi9cbiAgQElucHV0KCkgbWF4UG9zdGFsQWRkcmVzc2VzOiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBXaGV0aGVyIHRoZSBtYW5hZ2UgYnV0dG9uIGlzIGRpc2FibGVkLlxuICAgKi9cbiAgQElucHV0KCkgZGlzYWJsZU1hbmFnZTogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbiAgQElucHV0KCkgZGlzbWlzc1RpbWVvdXQ6IG51bWJlciB8IHVuZGVmaW5lZDtcbiAgQE91dHB1dCgpIHVwZGF0ZVByb2ZpbGUgPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG4gIEBPdXRwdXQoKSBtYW5hZ2VQb3N0YWxBZGRyZXNzID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xuICBAT3V0cHV0KCkgY2FuY2VsTWFuYWdlUG9zdGFsQWRkcmVzcyA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcbiAgaXNNYW5hZ2luZ1Bvc3RhbEFkZHJlc3NJbmRleDogbnVtYmVyIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkO1xuICBpc0FkZGluZ1Bvc3RhbEFkZHJlc3MgPSBmYWxzZTtcbiAgaXNBZGRCdXR0b25BdmFpbGFibGUgPSB0cnVlO1xuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnBvc3RhbEFkZHJlc3NlcyAmJiB0aGlzLm1heFBvc3RhbEFkZHJlc3Nlcykge1xuICAgICAgdGhpcy5pc0FkZEJ1dHRvbkF2YWlsYWJsZSA9IHRoaXMucG9zdGFsQWRkcmVzc2VzLmxlbmd0aCA8IHRoaXMubWF4UG9zdGFsQWRkcmVzc2VzO1xuICAgIH1cbiAgfVxuXG4gIGhhbmRsZU1hbmFnZVBvc3RhbEFkZHJlc3NPcGVuKGluZGV4PzogbnVtYmVyKSB7XG4gICAgdGhpcy5pc01hbmFnaW5nUG9zdGFsQWRkcmVzc0luZGV4ID0gaW5kZXg7XG4gICAgdGhpcy5tYW5hZ2VQb3N0YWxBZGRyZXNzLmVtaXQoKTtcbiAgfVxuXG4gIGhhbmRsZUFkZE5ld1Bvc3RhbEFkZHJlc3MoKSB7XG4gICAgaWYgKHRoaXMuZGlzYWJsZU1hbmFnZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmlzQWRkaW5nUG9zdGFsQWRkcmVzcyA9IHRydWU7XG4gICAgdGhpcy5tYW5hZ2VQb3N0YWxBZGRyZXNzLmVtaXQoKTtcbiAgfVxuXG4gIGhhbmRsZU1hbmFnZVBvc3RhbEFkZHJlc3NDbG9zZWQoKSB7XG4gICAgdGhpcy5pc01hbmFnaW5nUG9zdGFsQWRkcmVzc0luZGV4ID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuaXNBZGRpbmdQb3N0YWxBZGRyZXNzID0gZmFsc2U7XG4gICAgdGhpcy5jYW5jZWxNYW5hZ2VQb3N0YWxBZGRyZXNzLmVtaXQoKTtcbiAgfVxuXG4gIHVwZGF0ZVVzZXJQcm9maWxlRGF0YSgpIHtcbiAgICB0aGlzLnVwZGF0ZVByb2ZpbGUuZW1pdCgpO1xuICB9XG59XG4iXX0=