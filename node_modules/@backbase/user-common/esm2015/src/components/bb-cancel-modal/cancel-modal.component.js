import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/modal";
import * as i2 from "@backbase/ui-ang/header";
import * as i3 from "@backbase/ui-ang/button";
export class CancelModalComponent {
    constructor() {
        /**
         * An event emitter to signal continue has been pressed
         */
        this.continue = new EventEmitter();
        /**
         * An event emitter to signal discard has been pressed
         */
        this.discard = new EventEmitter();
    }
    dismissModal() {
        this.continue.emit();
    }
    closeModal() {
        this.discard.emit();
    }
}
CancelModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CancelModalComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CancelModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: CancelModalComponent, selector: "bb-cancel-modal", inputs: { isOpen: "isOpen" }, outputs: { continue: "continue", discard: "discard" }, ngImport: i0, template: "\n<bb-modal-ui [isOpen]=\"isOpen\" (cancel)=\"dismissModal()\">\n  <div data-role=\"cancel-confirmation-modal\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h3\"\n          i18n-heading=\"Changes modal title|Title of the confirmation modal for discarding working changes@@bb-cancel-modal.title\"\n          heading=\"Discard Changes\">\n        </bb-header-ui>\n      </ng-template> \n    </bb-modal-header-ui>\n\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody i18n=\"Discard changes modal body|Body text of the confirmation modal for discarding working changes@@bb-cancel-modal.body\">\n        Are you sure you want to cancel and discard all changes?\n      </ng-template>\n    </bb-modal-body-ui>\n\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <button bbButton\n          type=\"button\"\n          color=\"secondary\"\n          data-role=\"cancel-confirmation-modal-continue-button\"\n          (click)=\"dismissModal()\"\n          i18n=\"Dismiss discard modal button|Text of the button that dismisses the discard changes confirmation modal@@bb-cancel-modal.cancel\">\n          Continue editing\n        </button>\n        <button bbButton\n          type=\"button\"\n          color=\"danger\"\n          (click)=\"closeModal()\"\n          data-role=\"cancel-confirmation-modal-discard-button\"\n          i18n=\"Confirm discard modal button|Text of the button that confirms the discard changes confirmation modal@@bb-cancel-modal.confirm\">\n          Discard changes\n        </button>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </div>\n</bb-modal-ui>\n", components: [{ type: i1.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i2.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i1.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i1.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i1.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i1.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }, { type: i3.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CancelModalComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-cancel-modal',
                    templateUrl: './cancel-modal.component.html',
                }]
        }], propDecorators: { continue: [{
                type: Output
            }], discard: [{
                type: Output
            }], isOpen: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FuY2VsLW1vZGFsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdXNlci1jb21tb24vc3JjL2NvbXBvbmVudHMvYmItY2FuY2VsLW1vZGFsL2NhbmNlbC1tb2RhbC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VzZXItY29tbW9uL3NyYy9jb21wb25lbnRzL2JiLWNhbmNlbC1tb2RhbC9jYW5jZWwtbW9kYWwuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFNdkUsTUFBTSxPQUFPLG9CQUFvQjtJQUpqQztRQUtFOztXQUVHO1FBQ08sYUFBUSxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7UUFDOUM7O1dBRUc7UUFDTyxZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztLQVk5QztJQU5DLFlBQVk7UUFDVixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFDRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN0QixDQUFDOztrSEFuQlUsb0JBQW9CO3NHQUFwQixvQkFBb0IsNElDTmpDLDJwREF5Q0E7NEZEbkNhLG9CQUFvQjtrQkFKaEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQixXQUFXLEVBQUUsK0JBQStCO2lCQUM3Qzs4QkFLVyxRQUFRO3NCQUFqQixNQUFNO2dCQUlHLE9BQU87c0JBQWhCLE1BQU07Z0JBSUUsTUFBTTtzQkFBZCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItY2FuY2VsLW1vZGFsJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2NhbmNlbC1tb2RhbC5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIENhbmNlbE1vZGFsQ29tcG9uZW50IHtcbiAgLyoqXG4gICAqIEFuIGV2ZW50IGVtaXR0ZXIgdG8gc2lnbmFsIGNvbnRpbnVlIGhhcyBiZWVuIHByZXNzZWRcbiAgICovXG4gIEBPdXRwdXQoKSBjb250aW51ZSA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcbiAgLyoqXG4gICAqIEFuIGV2ZW50IGVtaXR0ZXIgdG8gc2lnbmFsIGRpc2NhcmQgaGFzIGJlZW4gcHJlc3NlZFxuICAgKi9cbiAgQE91dHB1dCgpIGRpc2NhcmQgPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG4gIC8qKlxuICAgKiBBbiBpbnB1dCB3aGljaCB0ZWxscyB0aGUgY29tcG9uZW50IGlmIGl0IHNob3VsZCBvcGVuIHRoZSBtb2RhbFxuICAgKi9cbiAgQElucHV0KCkgaXNPcGVuOiBib29sZWFuIHwgdW5kZWZpbmVkO1xuXG4gIGRpc21pc3NNb2RhbCgpIHtcbiAgICB0aGlzLmNvbnRpbnVlLmVtaXQoKTtcbiAgfVxuICBjbG9zZU1vZGFsKCkge1xuICAgIHRoaXMuZGlzY2FyZC5lbWl0KCk7XG4gIH1cbn1cbiIsIlxuPGJiLW1vZGFsLXVpIFtpc09wZW5dPVwiaXNPcGVuXCIgKGNhbmNlbCk9XCJkaXNtaXNzTW9kYWwoKVwiPlxuICA8ZGl2IGRhdGEtcm9sZT1cImNhbmNlbC1jb25maXJtYXRpb24tbW9kYWxcIj5cbiAgICA8YmItbW9kYWwtaGVhZGVyLXVpPlxuICAgICAgPG5nLXRlbXBsYXRlIGJiQ3VzdG9tTW9kYWxIZWFkZXI+XG4gICAgICAgIDxiYi1oZWFkZXItdWlcbiAgICAgICAgICBoZWFkaW5nVHlwZT1cImgzXCJcbiAgICAgICAgICBpMThuLWhlYWRpbmc9XCJDaGFuZ2VzIG1vZGFsIHRpdGxlfFRpdGxlIG9mIHRoZSBjb25maXJtYXRpb24gbW9kYWwgZm9yIGRpc2NhcmRpbmcgd29ya2luZyBjaGFuZ2VzQEBiYi1jYW5jZWwtbW9kYWwudGl0bGVcIlxuICAgICAgICAgIGhlYWRpbmc9XCJEaXNjYXJkIENoYW5nZXNcIj5cbiAgICAgICAgPC9iYi1oZWFkZXItdWk+XG4gICAgICA8L25nLXRlbXBsYXRlPiBcbiAgICA8L2JiLW1vZGFsLWhlYWRlci11aT5cblxuICAgIDxiYi1tb2RhbC1ib2R5LXVpPlxuICAgICAgPG5nLXRlbXBsYXRlIGJiQ3VzdG9tTW9kYWxCb2R5IGkxOG49XCJEaXNjYXJkIGNoYW5nZXMgbW9kYWwgYm9keXxCb2R5IHRleHQgb2YgdGhlIGNvbmZpcm1hdGlvbiBtb2RhbCBmb3IgZGlzY2FyZGluZyB3b3JraW5nIGNoYW5nZXNAQGJiLWNhbmNlbC1tb2RhbC5ib2R5XCI+XG4gICAgICAgIEFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBjYW5jZWwgYW5kIGRpc2NhcmQgYWxsIGNoYW5nZXM/XG4gICAgICA8L25nLXRlbXBsYXRlPlxuICAgIDwvYmItbW9kYWwtYm9keS11aT5cblxuICAgIDxiYi1tb2RhbC1mb290ZXItdWk+XG4gICAgICA8bmctdGVtcGxhdGUgYmJDdXN0b21Nb2RhbEZvb3Rlcj5cbiAgICAgICAgPGJ1dHRvbiBiYkJ1dHRvblxuICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgIGNvbG9yPVwic2Vjb25kYXJ5XCJcbiAgICAgICAgICBkYXRhLXJvbGU9XCJjYW5jZWwtY29uZmlybWF0aW9uLW1vZGFsLWNvbnRpbnVlLWJ1dHRvblwiXG4gICAgICAgICAgKGNsaWNrKT1cImRpc21pc3NNb2RhbCgpXCJcbiAgICAgICAgICBpMThuPVwiRGlzbWlzcyBkaXNjYXJkIG1vZGFsIGJ1dHRvbnxUZXh0IG9mIHRoZSBidXR0b24gdGhhdCBkaXNtaXNzZXMgdGhlIGRpc2NhcmQgY2hhbmdlcyBjb25maXJtYXRpb24gbW9kYWxAQGJiLWNhbmNlbC1tb2RhbC5jYW5jZWxcIj5cbiAgICAgICAgICBDb250aW51ZSBlZGl0aW5nXG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8YnV0dG9uIGJiQnV0dG9uXG4gICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgY29sb3I9XCJkYW5nZXJcIlxuICAgICAgICAgIChjbGljayk9XCJjbG9zZU1vZGFsKClcIlxuICAgICAgICAgIGRhdGEtcm9sZT1cImNhbmNlbC1jb25maXJtYXRpb24tbW9kYWwtZGlzY2FyZC1idXR0b25cIlxuICAgICAgICAgIGkxOG49XCJDb25maXJtIGRpc2NhcmQgbW9kYWwgYnV0dG9ufFRleHQgb2YgdGhlIGJ1dHRvbiB0aGF0IGNvbmZpcm1zIHRoZSBkaXNjYXJkIGNoYW5nZXMgY29uZmlybWF0aW9uIG1vZGFsQEBiYi1jYW5jZWwtbW9kYWwuY29uZmlybVwiPlxuICAgICAgICAgIERpc2NhcmQgY2hhbmdlc1xuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgPC9iYi1tb2RhbC1mb290ZXItdWk+XG4gIDwvZGl2PlxuPC9iYi1tb2RhbC11aT5cbiJdfQ==