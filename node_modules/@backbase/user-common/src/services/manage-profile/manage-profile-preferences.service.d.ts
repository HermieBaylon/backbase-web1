import { ItemModel } from '@backbase/foundation-ang/core';
import { CountryCode } from '@backbase/ui-ang/phone-number-format-pipe';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export interface DefaultProperties {
    notificationDismissTime: number;
    enablePhoneNumberFormatter: boolean;
    phoneNumberCountryCode: CountryCode;
    phoneNumberDebounceTime: number;
    lockUnlockUserAccountCommentRequired: boolean;
    emailAddressTypes: Array<string>;
    postalAddressTypes: Array<string>;
    phoneNumberTypes: Array<string>;
    maxEmailAddresses: number;
    maxPhoneNumbers: number;
    maxPostalAddresses: number;
    legalEntityDebounceTime: number;
    usernameDebounceTime: number;
    requiredUserActionsDebounceTime: number;
    legalEntityResponseSize: number;
    showWidgetHeader: boolean;
}
export interface WidgetPreferences {
    emailAddressTypes: Array<string>;
    postalAddressTypes: Array<string>;
    phoneNumberTypes: Array<string>;
    maxEmailAddresses: number;
    maxPhoneNumbers: number;
    maxPostalAddresses: number;
    showWidgetHeader: boolean;
}
export interface PhoneNumberInputPreferences {
    debounceTime: number;
    countryCode: CountryCode;
    enablePhoneNumberFormatter?: boolean;
}
export declare class ManageProfilePreferencesService {
    private readonly model?;
    constructor(model?: ItemModel | undefined);
    getPhoneNumberInputPreferences(): Observable<PhoneNumberInputPreferences>;
    private getPhoneNumberDebounceTimePreference;
    private getPhoneNumberCountryCodePreference;
    private getPhoneNumberFormatPreference;
    getNotificationDismissTimePreference(): Observable<number>;
    getLockUnlockAccountCommentRequiredPreference(): Observable<boolean>;
    getWidgetPreferences(): Observable<WidgetPreferences>;
    private getEmailAddressTypePreferences;
    private getPostalAddressTypePreferences;
    private getPhoneNumberTypePreferences;
    private getModelToSeparatedStringArray;
    private convertCommaSeparatedStringToStringArray;
    private getMaxEmailAddressesPreference;
    private getMaxPhoneNumbersPreference;
    private getMaxPostalAddressesPreference;
    getLegalEntityDebouncePreference(): Observable<number>;
    getUsernameDebouncePreference(): Observable<number>;
    getRequiredUserActionsDebouncePreference(): Observable<number>;
    getLegalEntityResponseSizePreference(): Observable<number>;
    getShowWidgetHeaderPreference(): Observable<boolean>;
    static ɵfac: i0.ɵɵFactoryDeclaration<ManageProfilePreferencesService, [{ optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ManageProfilePreferencesService>;
}
