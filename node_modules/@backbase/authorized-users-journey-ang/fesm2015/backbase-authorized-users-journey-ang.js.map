{"version":3,"file":"backbase-authorized-users-journey-ang.js","sources":["../../../../libs/authorized-users-journey/src/common/model/authorized-users.model.ts","../../../../libs/authorized-users-journey/src/common/constants.ts","../../../../libs/authorized-users-journey/src/common/utils/accessibility-keyboard.directive.ts","../../../../libs/authorized-users-journey/src/common/components/permissions-table/permissions-table.component.ts","../../../../libs/authorized-users-journey/src/common/components/permissions-table/permissions-table.component.html","../../../../libs/authorized-users-journey/src/common/model/account-list.model.ts","../../../../libs/authorized-users-journey/src/common/model/service-agreement.model.ts","../../../../libs/authorized-users-journey/src/common/services/default-level-mapping-config.service.ts","../../../../libs/authorized-users-journey/src/common/services/users-ui.service.ts","../../../../libs/authorized-users-journey/src/common/services/user-data.service.ts","../../../../libs/authorized-users-journey/src/common/authorized-users-common.module.ts","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-stepper/authorized-users-stepper.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-stepper/authorized-users-stepper.component.html","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-stepper/authorized-users-edit-stepper.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-stepper/authorized-users-edit-stepper.component.html","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-create-container/authorized-users-create-container.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-create-container/authorized-users-create-container.component.html","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-create-common/base-authorized-users-create-step.ts","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-user-details/authorized-users-user-details.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-user-details/authorized-users-user-details.component.html","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-accounts/authorized-users-accounts.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-accounts/authorized-users-accounts.component.html","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-permissions/authorized-users-permissions-card.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-permissions/authorized-users-permissions-card.component.html","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-permissions/authorized-users-permissions.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-permissions/authorized-users-permissions.component.html","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-confirmation/authorized-users-confirmation.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-confirmation/authorized-users-confirmation.component.html","../../../../libs/authorized-users-journey/src/common/components/authorized-users-base-dialog/authorized-users-base-dialog.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-confirmation-complete/authorized-users-confirmation-complete.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-confirmation-complete/authorized-users-confirmation-complete.component.html","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-cancel-creation/authorized-users-cancel-creation.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-cancel-creation/authorized-users-cancel-creation.component.html","../../../../libs/authorized-users-journey/src/authorized-users-create/components/authorized-users-create-common/authorized-users-step-handler.directive.ts","../../../../libs/authorized-users-journey/src/authorized-users-create/authorized-users-create-wrapper.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-create/authorized-users-create-wrapper.component.html","../../../../libs/authorized-users-journey/src/authorized-users-create/authorized-users-create.module.ts","../../../../libs/authorized-users-journey/src/authorized-users-journey.component.ts","../../../../libs/authorized-users-journey/src/common/model/authorized-users-error.model.ts","../../../../libs/authorized-users-journey/src/authorized-users-list/components/authorized-users-list-status-badge/authorized-users-list-status-badge.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-list/components/authorized-users-list-status-badge/authorized-users-list-status-badge.component.html","../../../../libs/authorized-users-journey/src/authorized-users-list/components/authorized-users-list-item/authorized-users-list-item.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-list/components/authorized-users-list-item/authorized-users-list-item.component.html","../../../../libs/authorized-users-journey/src/authorized-users-list/components/authorized-users-list/authorized-users-list.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-list/components/authorized-users-list/authorized-users-list.component.html","../../../../libs/authorized-users-journey/src/authorized-users-list/components/authorized-users-empty-list/authorized-users-empty-list.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-list/components/authorized-users-empty-list/authorized-users-empty-list.component.html","../../../../libs/authorized-users-journey/src/authorized-users-list/components/authorized-users-list-confirmation-dialog/authorized-users-list-confirmation-remove-user-dialog.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-list/components/authorized-users-list-confirmation-dialog/authorized-users-list-confirmation-remove-user-dialog.component.html","../../../../libs/authorized-users-journey/src/authorized-users-list/components/authorized-users-list-confirmation-dialog/authorized-user-list-confirmation-pause-user-dialog.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-list/components/authorized-users-list-confirmation-dialog/authorized-user-list-confirmation-pause-user-dialog.component.html","../../../../libs/authorized-users-journey/src/authorized-users-list/components/authorized-users-list-wrapper/authorized-users-list-wrapper.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-list/components/authorized-users-list-wrapper/authorized-users-list-wrapper.component.html","../../../../libs/authorized-users-journey/src/authorized-users-list/authorized-users-list.module.ts","../../../../libs/authorized-users-journey/src/services/authorized-users-journey-config.service.ts","../../../../libs/authorized-users-journey/src/views/authorized-user-create.component.ts","../../../../libs/authorized-users-journey/src/views/authorized-users-list.component.ts","../../../../libs/authorized-users-journey/src/authorized-users-journey.module.ts","../../../../libs/authorized-users-journey/backbase-authorized-users-journey-ang.ts"],"sourcesContent":["import {\n  GetAuthorizedUserItem,\n  PostAuthorizedUser,\n  PutAuthorizedUserPermissions,\n} from '@backbase/data-ang/authorized-users';\nimport { AccountList } from './account-list.model';\nimport { Account } from './account.model';\n\nexport interface BaseAuthorizedUser {\n  id?: string;\n  said: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  mobileNumber: string;\n  username: string;\n  status?: AuthorizedUserStatus;\n  additions?: { [key: string]: any };\n}\n\nexport interface AuthorizedUser extends BaseAuthorizedUser {\n  permissions: Array<AuthorizedPermission>;\n}\n\nexport interface RawAuthorizedUser extends BaseAuthorizedUser {\n  permissions: Array<RawAuthorizedPermission>;\n}\n\nexport interface AuthorizedUsersList {\n  items: AuthorizedUser[];\n}\n\nexport interface AuthorizedPermission {\n  account: Account;\n  level?: AuthorizedPermissionLevel;\n}\n\nexport interface RawAuthorizedPermission {\n  accountId?: string;\n  level?: AuthorizedPermissionLevel;\n}\n\nexport enum AuthorizedPermissionLevel {\n  VIEW_ONLY = 'viewOnly',\n  MONEY_MOVEMENT = 'moneyMovement',\n  FULL_ACCESS = 'fullAccess',\n}\n\nexport enum AuthorizedUserStatus {\n  PAUSED = 'PAUSED',\n  AWAITING_REGISTRATION = 'AWAITING_REGISTRATION',\n  ACTIVE = 'ACTIVE',\n}\n\nexport type PartialAuthorizedUsers = Partial<AuthorizedUser>;\n\nexport type SafeTypeArray = readonly [] | readonly any[];\n\nexport interface LevelsMappingConfig {\n  fromStringToPermissionLevel(value: string): AuthorizedPermissionLevel;\n  fromPermissionLevelToString(value: AuthorizedPermissionLevel | undefined): string;\n}\n\nexport interface LevelUIConfig<T> {\n  icon: string;\n  title: string;\n  permissionsAssigned: T;\n}\n\nexport interface LevelUIConfigHeader<T> extends LevelUIConfig<T> {\n  level: AuthorizedPermissionLevel;\n  validate(): boolean;\n}\n\nexport interface LevelsUIConfig<T> {\n  levels: [LevelUIConfig<T>, LevelUIConfig<T>, LevelUIConfig<T>];\n}\n\nexport interface PermissionUIConfig<T> {\n  permissions: T;\n}\n\nexport interface LevelsConfig<T extends SafeTypeArray, S extends { [k in keyof T]: any }> {\n  mappings?: LevelsMappingConfig;\n  uiConfig?: LevelsUIConfig<T> & PermissionUIConfig<S>;\n}\n\nexport namespace AuthorizedUsersList {\n  export function buildHttpResponse(levelMappignConfig: LevelsMappingConfig) {\n    return (response: Array<GetAuthorizedUserItem>): RawAuthorizedUser[] => {\n      if (response) {\n        const data = Array.isArray(response) ? response : [response];\n        return data.map(\n          ({ id, said, firstName, lastName, email, mobileNumber, username, status, permissions, ...others }) => {\n            return {\n              id,\n              said,\n              firstName,\n              lastName,\n              email,\n              mobileNumber,\n              username,\n              status: status as AuthorizedUserStatus,\n              permissions: permissions.map(({ accountId, level, ...otherPermissionsProps }) => ({\n                accountId,\n                level: levelMappignConfig.fromStringToPermissionLevel(level || ''),\n                ...otherPermissionsProps,\n              })),\n              ...others,\n            };\n          },\n        );\n      }\n      return [];\n    };\n  }\n\n  export function mapData(authorizedUsers: RawAuthorizedUser[], accounts: AccountList): AuthorizedUsersList {\n    const items = authorizedUsers.map((authorizedUser) => {\n      const { permissions, ...others } = authorizedUser;\n      return {\n        permissions: setAccountToPermissions(permissions, accounts),\n        ...others,\n      };\n    });\n\n    return {\n      items,\n    };\n  }\n\n  function setAccountToPermissions(\n    permissions: RawAuthorizedPermission[],\n    accounts: AccountList,\n  ): AuthorizedPermission[] {\n    return permissions\n      .map((permission) => {\n        const { accountId, ...others } = permission;\n\n        return {\n          account: accounts.items.find((account) => account.id === accountId)!,\n          ...others,\n        };\n      })\n      .filter((permission) => !!permission.account);\n  }\n}\n\nexport namespace AuthorizedUser {\n  export function buildHttpRequest(levelMappignConfig: LevelsMappingConfig) {\n    const formatAuthorizedPermission = ({ account, level, ...othersPropsPermissions }: AuthorizedPermission) => ({\n      accountId: account.id,\n      level: levelMappignConfig.fromPermissionLevelToString(level),\n      ...othersPropsPermissions,\n    });\n\n    return {\n      post(user: PartialAuthorizedUsers): PostAuthorizedUser {\n        const { email = '', firstName = '', lastName = '', mobileNumber = '', permissions = [], ...others } = user;\n        return {\n          email,\n          firstName,\n          lastName,\n          mobileNumber,\n          permissions: permissions.map(formatAuthorizedPermission),\n          ...others,\n        };\n      },\n\n      put(permissions: AuthorizedPermission[]): PutAuthorizedUserPermissions {\n        return {\n          permissions: permissions.map(formatAuthorizedPermission),\n        };\n      },\n    };\n  }\n}\n","import { PaymentCardNumberFormat } from '@backbase/ui-ang/payment-card-number-pipe';\nimport { LevelsUIConfig, PermissionUIConfig } from './model/authorized-users.model';\n\n// eslint-disable-next-line no-var\ndeclare var $localize: any;\n\nexport type AccountNumberFormat = Readonly<PaymentCardNumberFormat>;\n\nexport const DEFAULT_ACCOUNT_NUMBER_FORMAT: AccountNumberFormat = {\n  length: 9,\n  maskRange: [0, length - 4],\n  segments: 0,\n};\n\nexport const SERVICE_AGREEMENT_DISABLED = 'DISABLED';\nexport const SERVICE_AGREEMENT_ENABLED = 'ENABLED';\n\nexport const DEFAULT_UI_LEVELS_CONFIG: LevelsUIConfig<[boolean, boolean, boolean, boolean, boolean]> = {\n  levels: [\n    { icon: 'visibility', title: $localize`View Only`, permissionsAssigned: [true, true, false, false, false] },\n    { icon: 'attach-money', title: $localize`Money Movement`, permissionsAssigned: [true, true, true, false, false] },\n    { icon: 'vpn-key', title: $localize`Full Access`, permissionsAssigned: [true, true, true, true, true] },\n  ],\n};\n\nexport const DEFAULT_UI_PERMISSIONS_CONFIG: PermissionUIConfig<[string, string, string, string, string]> = {\n  permissions: [\n    $localize`Balances, Transactions and Statements`,\n    $localize`Cashflow and Spending Analysis`,\n    $localize`Transfers and Bill Payments`,\n    $localize`Check Deposits`,\n    $localize`Other User Features`,\n  ],\n};\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[bbAuthorizedUsersAccessibilityKeyboard]',\n})\nexport class AuthorizedUsersAccessibilityKeyboardDirective {\n  constructor(readonly element: ElementRef) {\n    element.nativeElement.tabIndex = 0;\n  }\n\n  // eslint-disable-next-line\n  @HostListener('keydown.enter', ['$event'])\n  // eslint-disable-next-line\n  @HostListener('keydown.space', ['$event'])\n  eventListener(event: any) {\n    this.element.nativeElement.click(event);\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport {\n  AuthorizedPermission,\n  AuthorizedPermissionLevel,\n  LevelUIConfigHeader,\n} from '../../model/authorized-users.model';\nimport { DEFAULT_ACCOUNT_NUMBER_FORMAT } from '../../constants';\n\n@Component({\n  selector: 'bb-authorized-users-permissions-levels-table',\n  templateUrl: './permissions-table.component.html',\n})\nexport class AuthorizedUsersPermissionsLevelsTableComponent {\n  @Input() selectedAccounts: AuthorizedPermission[] | undefined;\n  @Input() isEditing = false;\n  @Input() enableAccountLevelFullAccessPermission: boolean | undefined;\n  @Input() levelsConfig: Array<LevelUIConfigHeader<boolean[]>> | undefined;\n  @Output() updateAccount = new EventEmitter<AuthorizedPermission>();\n\n  productNumberFormat = DEFAULT_ACCOUNT_NUMBER_FORMAT;\n  authorizedPermissionLevel = AuthorizedPermissionLevel;\n\n  changeAccountLevel(account: AuthorizedPermission, newLevel: AuthorizedPermissionLevel) {\n    this.updateAccount.emit({\n      ...account,\n      ...{ level: newLevel },\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  sortKeepOriginalOrder = (..._: any): number => {\n    return 0;\n  };\n\n  useEditableCell(level: AuthorizedPermissionLevel) {\n    const isFullAccessField = level === this.authorizedPermissionLevel.FULL_ACCESS;\n    const isFullAccesEditable = isFullAccessField && this.enableAccountLevelFullAccessPermission;\n    return isFullAccesEditable || !isFullAccessField;\n  }\n}\n","<table class=\"table table-striped bb-authorized-users-common-permission-table\">\n  <caption class=\"sr-only\" i18n=\"Permission Management|Table Caption@@authorized-users.common.permissions-table.caption\">\n    Permission Management\n  </caption>\n  <thead>\n    <tr>\n      <th scope=\"col\">\n        <strong>\n          <span i18n=\"Accounts and Permissions title@@authorized-users.common.permissions-table.column-1.title\">\n            Accounts and Permissions\n          </span>\n        </strong>\n      </th>\n      <th scope=\"col\" class=\"text-center\" *ngFor=\"let levelConfig of levelsConfig\">\n        <strong class=\"bb-inline-stack\">\n          <bb-icon-ui [name]=\"levelConfig.icon\" size=\"sm\" class=\"bb-inline-stack__item\"></bb-icon-ui>\n          <span class=\"bb-inline-stack__item\">\n            {{levelConfig.title}}\n          </span>\n        </strong>\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <ng-container *ngFor=\"let selectedAccount of selectedAccounts\">\n      <tr>\n        <td>\n          <div>\n            {{ selectedAccount.account.name }}\n          </div>\n          <div *ngIf=\"selectedAccount.account.displayNumber\" class=\"bb-text-support\">\n            {{ selectedAccount.account.displayNumber.slice(selectedAccount.account.displayNumber.length-9, selectedAccount.account.displayNumber.length) | paymentCardNumber: productNumberFormat }}\n          </div>\n        </td>\n        <ng-container *ngIf=\"isEditing then editMode; else viewMode\"></ng-container>\n      </tr>\n      \n      <ng-template #editMode>\n        <ng-container *ngFor=\"let permissionLevel of authorizedPermissionLevel | keyvalue : sortKeepOriginalOrder\">\n          <td class=\"text-center\">\n            <ng-container *ngIf=\"useEditableCell(permissionLevel.value); then editableTemplate; else mutedTemplate\"></ng-container>\n            \n            <ng-template #editableTemplate>\n              <bb-icon-ui\n                bbAuthorizedUsersAccessibilityKeyboard\n                [attr.data-role]=\"'user-permissions-edit-table-' + permissionLevel.value + (selectedAccount.level === permissionLevel.value ? '-checked' : '-unchecked')\"\n                [name]=\"selectedAccount.level === permissionLevel.value ? 'radio-button-checked' : 'radio-button-unchecked'\"\n                [color]=\"selectedAccount.level === permissionLevel.value ? 'primary' : 'inactive'\"\n                (click)=\"changeAccountLevel(selectedAccount, permissionLevel.value)\"\n                [attr.aria-checked]=\"selectedAccount.level === permissionLevel.value\"\n              ></bb-icon-ui>\n            </ng-template>\n\n            <ng-template #mutedTemplate>\n              <bb-icon-ui name=\"remove\" color=\"muted\" data-role=\"user-permissions-edit-table-fullAccess-muted\"></bb-icon-ui>\n              <span\n                class=\"sr-only\" \n                i18n=\"Full access can only be assigned to all accounts at once, individual account-level full access permission cannot be assigned | ScreenReader text@@authorized-users.common.permissions-table.view-mode.non-editable\"\n              >\n                Full access can only be assigned to all accounts at once, individual account-level full access permission cannot be assigned.\n              </span>\n            </ng-template>\n          </td>\n        </ng-container>\n      </ng-template>\n      \n      <ng-template #viewMode>\n        <ng-container *ngFor=\"let permissionLevel of authorizedPermissionLevel | keyvalue : sortKeepOriginalOrder\">\n          <td class=\"text-center\">\n            <bb-icon-ui\n              [name]=\"selectedAccount.level === permissionLevel.value ? 'check' : 'remove'\"\n              [color]=\"selectedAccount.level === permissionLevel.value ? 'success' : 'muted'\"\n              [attr.data-role]=\"'user-permissions-view-table-' + permissionLevel.value + (selectedAccount.level === permissionLevel.value ? '-checked' : '-unchecked')\"\n            ></bb-icon-ui>\n            <span\n              *ngIf=\"selectedAccount.level === permissionLevel.value\"\n              class=\"sr-only\" \n              i18n=\"Checked | ScreenReader text@@authorized-users.common.permissions-table.view-mode.checked\"\n            >\n              Checked\n            </span>\n            <span\n              *ngIf=\"!selectedAccount.level === permissionLevel.value\"\n              class=\"sr-only\" \n              i18n=\"Unchecked | ScreenReader text@@authorized-users.common.permissions-table.view-mode.unchecked\"\n            >\n              Unchecked\n            </span>\n          </td>\n        </ng-container>\n      </ng-template>\n      \n    </ng-container>\n  </tbody>\n</table>","import { ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport { Account } from './account.model';\n\nexport interface AccountList {\n  items: Account[];\n}\n\nexport namespace AccountList {\n  export function fromHttpResponse(response: Array<ProductSummaryItem>): AccountList {\n    return {\n      items: response.map((item: ProductSummaryItem) => ({\n        id: item.id,\n        name: item.name,\n        alias: item.bankAlias,\n        IBAN: item.IBAN,\n        BBAN: item.BBAN,\n        number: item.number,\n        currency: item.currency,\n        displayNumber: item.IBAN || item.BBAN || item.number,\n      })),\n    };\n  }\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { ServiceAgreementStatePut, Status } from '@backbase/data-ang/accesscontrol';\n\nexport interface ServiceAgreementRequest {\n  validUntilDate: string;\n  validUntilTime: string;\n  status: string;\n  additions: { [key: string]: any };\n}\n\nexport namespace ServiceAgreementRequest {\n  export function toHttpRequest(state: Status): ServiceAgreementStatePut {\n    return {\n      state,\n    };\n  }\n\n  export function fromHttpResponse(response: HttpResponse<any>): any {\n    return response.body;\n  }\n}\n","import { AuthorizedPermissionLevel, LevelsMappingConfig } from '../model/authorized-users.model';\n\nexport class LevelsMappingConfigImplementation implements LevelsMappingConfig {\n  fromStringToPermissionLevel(value: string): AuthorizedPermissionLevel {\n    if (value.toLocaleLowerCase() === 'view only') {\n      return AuthorizedPermissionLevel.VIEW_ONLY;\n    } else if (value.toLocaleLowerCase() === 'money movement') {\n      return AuthorizedPermissionLevel.MONEY_MOVEMENT;\n    } else if (value.toLocaleLowerCase() === 'full access') {\n      return AuthorizedPermissionLevel.FULL_ACCESS;\n    } else {\n      return AuthorizedPermissionLevel.VIEW_ONLY;\n    }\n  }\n\n  fromPermissionLevelToString(value: AuthorizedPermissionLevel | undefined): string {\n    switch (value) {\n      case AuthorizedPermissionLevel.VIEW_ONLY:\n        return 'View Only';\n      case AuthorizedPermissionLevel.MONEY_MOVEMENT:\n        return 'Money Movement';\n      case AuthorizedPermissionLevel.FULL_ACCESS:\n        return 'Full Access';\n      default:\n        return 'View Only';\n    }\n  }\n}\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { DEFAULT_UI_LEVELS_CONFIG, DEFAULT_UI_PERMISSIONS_CONFIG } from '../constants';\nimport {\n  AuthorizedPermissionLevel,\n  LevelsConfig,\n  LevelsMappingConfig,\n  LevelUIConfig,\n  LevelUIConfigHeader,\n  PermissionUIConfig,\n  SafeTypeArray,\n} from '../model/authorized-users.model';\nimport { LevelsMappingConfigImplementation } from './default-level-mapping-config.service';\nimport { first, switchMap, catchError } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { AssetsResolver, AssetsService } from '@backbase/foundation-ang/core';\nexport const levelsMappingConfigToken = new InjectionToken<LevelsMappingConfig>('level injection token');\n@Injectable()\nexport class UsersUIService {\n  private readonly statusMapping: LevelsMappingConfig;\n  private readonly uiLevelsConfig: Array<LevelUIConfigHeader<SafeTypeArray>> | undefined;\n  private readonly uiPermissionsConfig: PermissionUIConfig<SafeTypeArray> | undefined;\n  private readonly authorizedPermissionLevel = [\n    AuthorizedPermissionLevel.VIEW_ONLY,\n    AuthorizedPermissionLevel.MONEY_MOVEMENT,\n    AuthorizedPermissionLevel.FULL_ACCESS,\n  ];\n  private readonly getURIFromTxtAssetID = (assetId: string) => `${assetId}.txt`;\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  private readonly resolveTxtAsset: AssetsResolver = this.assetsService.createAssetsResolver({\n    widgetName: 'bb-authorized-users-journey-ang',\n    getURIFromAssetID: this.getURIFromTxtAssetID,\n  });\n\n  get uiLevelsConfigValue() {\n    return this.uiLevelsConfig;\n  }\n\n  get uiPermissionsConfigValue() {\n    return this.uiPermissionsConfig;\n  }\n\n  get statusMappingValue() {\n    return this.statusMapping;\n  }\n\n  private get termsConditionsUrl(): Observable<string> {\n    return this.resolveTxtAsset('terms-and-conditions');\n  }\n\n  private fetchFile = (fileLocation: string) => {\n    return this.http.get(fileLocation, { responseType: 'text' });\n  };\n\n  termsConditionsContent(): Observable<string> {\n    return this.termsConditionsUrl.pipe(\n      first(),\n      switchMap(this.fetchFile),\n      catchError(() => {\n        console.warn('No terms and conditions file was found');\n        return of('');\n      }),\n    );\n  }\n\n  constructor(\n    // eslint-disable-next-line\n    @Inject(levelsMappingConfigToken)\n    @Optional()\n    private levelsConfig: LevelsConfig<SafeTypeArray, SafeTypeArray> | undefined,\n    private readonly http: HttpClient,\n    private readonly assetsService: AssetsService,\n  ) {\n    this.statusMapping = this?.levelsConfig?.mappings\n      ? this.levelsConfig.mappings\n      : new LevelsMappingConfigImplementation();\n\n    const mapLevels = (value: LevelUIConfig<SafeTypeArray>, index: number): LevelUIConfigHeader<SafeTypeArray> => ({\n      ...value,\n      level: this.authorizedPermissionLevel[index],\n      validate() {\n        return this.level !== AuthorizedPermissionLevel.FULL_ACCESS;\n      },\n    });\n\n    this.uiLevelsConfig = this?.levelsConfig?.uiConfig?.levels\n      ? this.levelsConfig.uiConfig.levels.map(mapLevels)\n      : DEFAULT_UI_LEVELS_CONFIG.levels.map(mapLevels);\n    this.uiPermissionsConfig = this?.levelsConfig?.uiConfig?.permissions\n      ? { permissions: this.levelsConfig.uiConfig.permissions }\n      : DEFAULT_UI_PERMISSIONS_CONFIG;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthorizedUserService } from '@backbase/data-ang/authorized-users';\nimport {\n  AuthorizedPermission,\n  AuthorizedUser,\n  AuthorizedUsersList,\n  LevelsMappingConfig,\n  PartialAuthorizedUsers,\n  RawAuthorizedUser,\n} from '../model/authorized-users.model';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProductSummaryHttpService } from '@backbase/data-ang/arrangements';\nimport { AccountList } from '../model/account-list.model';\nimport { ServiceAgreementRequest } from '../model/service-agreement.model';\nimport { ServiceAgreementHttpService, Status } from '@backbase/data-ang/accesscontrol';\nimport { UsersUIService } from './users-ui.service';\n\n@Injectable()\nexport class UserDataService {\n  private accounts: Observable<AccountList>;\n  private authorizedUsersList: Observable<RawAuthorizedUser[]>;\n  private readonly statusMapping: LevelsMappingConfig;\n\n  setStatusForServiceAgreements(userSaid: string, status: Status): Observable<void> {\n    return this.accessGroupDataHttpService.putServiceAgreementState({\n      serviceAgreementId: userSaid,\n      serviceAgreementStatePut: ServiceAgreementRequest.toHttpRequest(status),\n    });\n  }\n\n  updateAuthorizedUserStatus(id: string, status: Status) {\n    return this.userDataHttpService.updateStatusForAuthorizedUser({\n      authorizedUserId: id,\n      updateAuthorizedUserStatus: { enabled: status === Status.ENABLED },\n    });\n  }\n\n  addAuthorizedUser(user: PartialAuthorizedUsers): Observable<void> {\n    return this.userDataHttpService.createAuthorizedUser({\n      postAuthorizedUser: AuthorizedUser.buildHttpRequest(this.statusMapping!).post(user),\n    });\n  }\n\n  retrieveAuthorizedUser(): Observable<AuthorizedUsersList> {\n    return combineLatest([this.authorizedUsersList, this.accounts]).pipe(\n      map(([authorizedUsers, accounts]) => AuthorizedUsersList.mapData(authorizedUsers, accounts)),\n    );\n  }\n\n  getAllArrangements(): Observable<AccountList> {\n    return this.accounts;\n  }\n\n  updateAuthorizedUser(id: string, permissions: AuthorizedPermission[]): Observable<void> {\n    return this.userDataHttpService.updatePermissionsForAuthorizedUser({\n      authorizedUserId: id,\n      putAuthorizedUserPermissions: AuthorizedUser.buildHttpRequest(this.statusMapping!).put(permissions),\n    });\n  }\n\n  removeAuthorizedUser(id: string): Observable<any> {\n    return this.userDataHttpService.deleteAuthorizedUser({\n      authorizedUserId: id,\n    });\n  }\n\n  constructor(\n    private readonly accessGroupDataHttpService: ServiceAgreementHttpService,\n    private readonly userDataHttpService: AuthorizedUserService,\n    private readonly productSummaryDataHttpService: ProductSummaryHttpService,\n    private readonly usersUIService: UsersUIService,\n  ) {\n    this.statusMapping = this.usersUIService.statusMappingValue;\n    this.accounts = this.productSummaryDataHttpService\n      .getArrangementsByBusinessFunction({\n        businessFunction: 'Product Summary',\n        resourceName: 'Product Summary',\n        privilege: 'view',\n        size: 1000000,\n      })\n      .pipe(map(AccountList.fromHttpResponse));\n\n    this.authorizedUsersList = this.userDataHttpService\n      .getAuthorizedUsers()\n      .pipe(map(AuthorizedUsersList.buildHttpResponse(this.statusMapping)));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { PaymentCardNumberModule } from '@backbase/ui-ang/payment-card-number-pipe';\nimport { TableModule } from '@backbase/ui-ang/table';\nimport { AuthorizedUsersPermissionsLevelsTableComponent } from './components/permissions-table/permissions-table.component';\nimport { UserDataService } from './services/user-data.service';\nimport { UsersUIService } from './services/users-ui.service';\nimport { AuthorizedUsersAccessibilityKeyboardDirective } from './utils/accessibility-keyboard.directive';\n\nconst modules = [IconModule, TableModule, PaymentCardNumberModule];\n\nconst declarations = [AuthorizedUsersPermissionsLevelsTableComponent, AuthorizedUsersAccessibilityKeyboardDirective];\n\n@NgModule({\n  imports: [CommonModule, ...modules],\n  providers: [UserDataService, UsersUIService],\n  declarations: [...declarations],\n  exports: [...modules, ...declarations],\n})\nexport class AuthorizedUsersCommonModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'bb-authorized-users-stepper',\n  templateUrl: 'authorized-users-stepper.component.html',\n})\nexport class AuthorizedUsersStepperComponent {\n  @Input() currentStep = 1;\n}\n","<bb-stepper-ui>\n  <bb-stepper-step-ui \n    label=\"User details\"\n    class=\"bb-stack__item\"\n    i18n-label=\"User details@@authorized-users.create.stepper.header.step1\"\n    [isChecked]=\"currentStep > 1\"\n    [isActive]=\"currentStep >= 1\"\n    ariaLabel=\"Step 1 out of 4\"\n    i18n-ariaLabel=\"Step 1 out of 4@@authorized-users.create.stepper.aria.label.step1\"\n  >\n  </bb-stepper-step-ui>\n  <bb-stepper-step-ui \n    class=\"bb-stack__item\" \n    label=\"Accounts\"\n    i18n-label=\"Accounts@@authorized-users.create.stepper.header.step2\"\n    [isChecked]=\"currentStep > 2\"\n    [isActive]=\"currentStep >= 2\" \n    ariaLabel=\"Step 2 out of 4\"\n    i18n-ariaLabel=\"Step 2 out of 4@@authorized-users.create.stepper.aria.label.step2\"\n  >\n  </bb-stepper-step-ui>\n  <bb-stepper-step-ui \n    class=\"bb-stack__item\" \n    label=\"Permissions\" \n    i18n-label=\"Permissions@@authorized-users.create.stepper.header.step3\"\n    [isActive]=\"currentStep >= 3\" \n    [isChecked]=\"currentStep > 3\"\n    ariaLabel=\"Step 3 out of 4\"\n    i18n-ariaLabel=\"Step 3 out of 4@@authorized-users.create.stepper.aria.label.step3\"\n  >\n  </bb-stepper-step-ui>\n  <bb-stepper-step-ui \n    class=\"bb-stack__item\" \n    label=\"Confirmation\" \n    i18n-label=\"Confirmation@@authorized-users.create.stepper.header.step4\"\n    [isActive]=\"currentStep >= 4\" \n    ariaLabel=\"Step 4 out of 4\"\n    i18n-ariaLabel=\"Step 3 out of 4@@authorized-users.create.stepper.aria.label.step4\"\n  >\n  </bb-stepper-step-ui>\n</bb-stepper-ui>","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'bb-authorized-users-edit-stepper',\n  templateUrl: 'authorized-users-edit-stepper.component.html',\n})\nexport class AuthorizedUserEditStepperComponent {\n  @Input() currentStep = 1;\n}\n","<div class=\"bb-authorized-users-stepper\">\n  <bb-stepper-ui class=\"col-8\">\n    <bb-stepper-step-ui \n      class=\"bb-stack__item\"\n      label=\"Accounts\"\n      i18n-label=\"Accounts@@authorized-users.edit.stepper.header.step1\"\n      [isChecked]=\"currentStep > 1\"\n      [isActive]=\"currentStep >= 1\"\n      ariaLabel=\"Step 1 out of 3\"\n      i18n-ariaLabel=\"Step 1 out of 3@@authorized-users.edit.stepper.aria.label.step1\"\n    >\n    </bb-stepper-step-ui>\n    <bb-stepper-step-ui \n      class=\"bb-stack__item\" \n      label=\"Permissions\" \n      i18n-label=\"Permissions@@authorized-users.edit.stepper.header.step2\"\n      [isChecked]=\"currentStep > 2\"\n      [isActive]=\"currentStep >= 2\" \n      ariaLabel=\"Step 2 out of 3\"\n      i18n-ariaLabel=\"Step 2 out of 3@@authorized-users.edit.stepper.aria.label.step2\"\n    >\n    </bb-stepper-step-ui>\n    <bb-stepper-step-ui \n      class=\"bb-stack__item\" \n      label=\"Confirmation\"\n      i18n-label=\"Permissions@@authorized-users.edit.stepper.header.step3\"\n      [isActive]=\"currentStep >= 3\" \n      [isChecked]=\"currentStep > 3\"\n      ariaLabel=\"Step 3 out of 3\"\n      i18n-ariaLabel=\"Step 3 out of 3@@authorized-users.edit.stepper.aria.label.step3\"\n    >\n    </bb-stepper-step-ui>\n  </bb-stepper-ui>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'bb-authorized-users-create-container',\n  templateUrl: 'authorized-users-create-container.component.html',\n})\nexport class AuthorizedUsersCreateContainerComponent {\n  private nextStep = 1;\n  nextStepIndex() {\n    return this.nextStep++;\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body modal-body\">\n    <ng-content></ng-content>\n  </div>\n</div>","import { Output, EventEmitter, Input, Directive, OnInit } from '@angular/core';\nimport {\n  AuthorizedUser,\n  LevelUIConfigHeader,\n  PartialAuthorizedUsers,\n  PermissionUIConfig,\n} from '../../../common/model/authorized-users.model';\n\n@Directive()\n// eslint-disable-next-line\nexport abstract class BaseAuthorizedUsersCreateStep implements OnInit {\n  @Output() next = new EventEmitter<Partial<AuthorizedUser>>();\n  @Output() back = new EventEmitter<void>();\n  @Output() saveOnly = new EventEmitter<Partial<AuthorizedUser>>();\n  @Output() cancel = new EventEmitter<void>();\n  @Input() authorizedUser!: PartialAuthorizedUsers;\n  @Input() isFirstStep = false;\n  @Input() enableAccountLevelFullAccessPermission: boolean | undefined;\n  @Input() levelsConfig: Array<LevelUIConfigHeader<boolean[]>> | undefined;\n  @Input() permissionsConfig: PermissionUIConfig<string[]> | undefined;\n\n  goNext(authorizedUser?: PartialAuthorizedUsers) {\n    this.next.emit(authorizedUser);\n  }\n\n  goBack() {\n    this.back.emit();\n  }\n\n  saveChanges(authorizedUser?: PartialAuthorizedUsers) {\n    this.saveOnly.emit(authorizedUser);\n  }\n\n  abort() {\n    this.cancel.emit();\n  }\n\n  ngOnInit() {\n    if (!this.authorizedUser) {\n      throw new Error(`\"authorizedUser\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BaseAuthorizedUsersCreateStep } from '../authorized-users-create-common/base-authorized-users-create-step';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'bb-authorized-users-user-details',\n  templateUrl: 'authorized-users-user-details.component.html',\n})\nexport class AuthorizedUsersUserDetailsComponent extends BaseAuthorizedUsersCreateStep implements OnInit, OnDestroy {\n  userDetailsForm: FormGroup | undefined;\n  private suscription$ = new Subscription();\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.userDetailsForm = this.formBuilder.group({\n      firstName: [this.authorizedUser.firstName, Validators.required],\n      lastName: [this.authorizedUser.lastName, Validators.required],\n      emailGroup: this.formBuilder.group({\n        email: [this.authorizedUser.email, Validators.compose([Validators.required, Validators.email])],\n        confirmationEmail: [this.authorizedUser.email, Validators.compose([Validators.required, Validators.email])],\n      }),\n      mobileNumber: [this.authorizedUser.mobileNumber, Validators.required],\n    });\n    this.suscription$.add(\n      this.formGetter('emailGroup')?.valueChanges.subscribe(() => {\n        const confirmationEmailControl = this.formGetter('confirmationEmail', 'emailGroup');\n        if (confirmationEmailControl) {\n          confirmationEmailControl.setValidators([Validators.required, Validators.email, this.validateEmailMatch]);\n          confirmationEmailControl.updateValueAndValidity({ emitEvent: false });\n        }\n      }),\n    );\n  }\n\n  isFieldValid(fieldName: string, fieldGroup?: string): boolean {\n    const controlField = this.formGetter(fieldName, fieldGroup);\n    return !!controlField && (controlField.valid || controlField.untouched);\n  }\n\n  private readonly validateEmailMatch = () => {\n    const emailField = this.formGetter('email', 'emailGroup');\n    const confirmationEmailField = this.formGetter('confirmationEmail', 'emailGroup');\n    // eslint-disable-next-line no-null/no-null\n    return emailField?.value !== confirmationEmailField?.value ? { validateMailConfirmation: true } : null;\n  };\n\n  save() {\n    if (this.userDetailsForm?.valid) {\n      this.goNext(this.formatAuthorizedUserValue());\n    } else {\n      this.userDetailsForm?.markAllAsTouched();\n    }\n  }\n\n  private formatAuthorizedUserValue() {\n    const {\n      firstName,\n      lastName,\n      emailGroup: { email },\n      mobileNumber,\n    } = this.userDetailsForm!.value;\n    return { firstName, lastName, email, mobileNumber };\n  }\n\n  formGetter(fieldName: string, fieldGroup?: string) {\n    const controlField = !!fieldGroup\n      ? this.userDetailsForm?.get(fieldGroup)?.get(fieldName)\n      : this.userDetailsForm?.get(fieldName);\n\n    return controlField;\n  }\n\n  ngOnDestroy() {\n    this.suscription$.unsubscribe();\n  }\n\n  constructor(private readonly formBuilder: FormBuilder) {\n    super();\n  }\n}\n","<form [formGroup]=\"userDetailsForm\" (submit)=\"save()\">\n  <div class=\"bb-block bb-block--lg\" bbAuthorizedUsersAccessibilityKeyboard>\n    <h2 \n      data-role=\"user-details-header\"\n      i18n=\"user creation details header@@authorized.users.createUser.header\"\n    >\n      Who would you like to give access to?\n    </h2>\n  </div>\n\n  <div class=\"bb-block\">\n    <div class=\"row\">\n      <div class=\"col-12 col-sm-6 form-group\">\n        <bb-input-text-ui\n          formControlName=\"firstName\"\n          data-role=\"user-details-first-name\"\n          label=\"First Name\"\n          i18n-label=\"user creation details first name@@authorized.users.createUser.label.firstName\"\n          maxLength=\"256\"\n        ></bb-input-text-ui>\n        <bb-input-validation-message-ui [showErrors]=\"!isFieldValid('firstName')\">\n          <span \n            data-role=\"user-details-first-name-validation-msg\"\n            i18n=\"user creation first name required error message@@authorized.users.createUser.errorMessage.required.firstName\">\n            First name is required\n          </span>\n        </bb-input-validation-message-ui>  \n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12 col-sm-6 form-group\">\n        <bb-input-text-ui\n          formControlName=\"lastName\"\n          data-role=\"user-details-last-name\"\n          label=\"Last Name\"\n          i18n-label=\"user creation details last name@@authorized.users.createUser.label.lastName\"\n          maxLength=\"256\"\n        ></bb-input-text-ui>\n        <bb-input-validation-message-ui [showErrors]=\"!isFieldValid('lastName')\">\n          <span \n            data-role=\"user-details-last-name-validation-msg\"\n            i18n=\"user creation last name required error message@@authorized.users.createUser.errorMessage.required.lastName\">\n            Last name is required\n          </span>\n        </bb-input-validation-message-ui>\n      </div>\n    </div>\n    <ng-container formGroupName=\"emailGroup\">\n      <div class=\"row\">\n        <div class=\"col-12 col-sm-6 form-group\">\n          <bb-input-email-ui\n            formControlName=\"email\"\n            data-role=\"user-details-email\"\n            label=\"Email\"\n            i18n-label=\"user creation details email@@authorized.users.createUser.label.email\"\n            required=\"true\"\n          ></bb-input-email-ui>\n          <ng-container *ngIf=\"isFieldValid('email', 'emailGroup')\">\n            <span \n              class=\"bb-text-support text-small\" \n              i18n=\"user creation confirmation support text@@authorized.users.createUser.info.emailConfirmation\"\n            >\n            We will send a confirmation to their email address.\n            </span> \n          </ng-container>\n          <bb-input-validation-message-ui [showErrors]=\"!isFieldValid('email', 'emailGroup')\" data-role=\"user-details-email-validation-msg\">\n            <ng-container *ngFor=\"let error of formGetter('email', 'emailGroup')?.errors | keyvalue; first as first\">\n                <ng-container *ngIf=\"first\" [ngSwitch]=\"error.key\">\n                  <span\n                    *ngSwitchCase=\"'required'\"\n                    i18n=\"user creation email required error message@@authorized.users.createUser.errorMessage.required.email\"\n                  >\n                    Email address is required\n                  </span>\n                  <span\n                    *ngSwitchCase=\"'email'\"\n                    i18n=\"invalid email format@@authorized.users.createUser.errorMessage.format.confirmationEmail\"\n                  >\n                  Invalid email format\n                  </span>\n                </ng-container>\n              </ng-container>\n          </bb-input-validation-message-ui>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12 col-sm-6 form-group\">\n          <bb-input-email-ui\n            formControlName=\"confirmationEmail\"\n            data-role=\"user-details-confirmation-email\"\n            label=\"Confirm Email\"\n            i18n-label=\"user creation details confirm email@@authorized.users.createUser.label.confirmationEmail\"\n            required=\"true\"\n          ></bb-input-email-ui>\n          <bb-input-validation-message-ui [showErrors]=\"!isFieldValid('confirmationEmail', 'emailGroup')\" data-role=\"user-details-confirmation-email-validation-msg\">\n            <ng-container *ngFor=\"let error of formGetter('confirmationEmail', 'emailGroup')?.errors | keyvalue; first as first\">\n              <ng-container *ngIf=\"first\" [ngSwitch]=\"error.key\">\n                <span\n                  *ngSwitchCase=\"'required'\"\n                  i18n=\"confirm email address is required@@authorized.users.createUser.errorMessage.required.confirmationEmail\"\n                >\n                  Confirm email address is required\n                </span>\n                <span\n                  *ngSwitchCase=\"'email'\"\n                  i18n=\"invalid email format@@authorized.users.createUser.errorMessage.format.confirmationEmail\"\n                >\n                Invalid email format\n                </span>\n                <span\n                  *ngSwitchCase=\"'validateMailConfirmation'\"\n                  i18n=\"email addresses do not match@@authorized.users.createUser.errorMessage.match.confirmationEmail\"\n                >\n                Email addresses do not match\n                </span>\n              </ng-container>\n            </ng-container>\n          </bb-input-validation-message-ui>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"row\">\n      <div class=\"col-12 col-sm-6 form-group\">\n        <bb-input-phone-ui\n          formControlName=\"mobileNumber\"\n          data-role=\"user-details-phone-number\"\n          label=\"Phone Number\"\n          i18n-label=\"user creation details phone number@@authorized.users.createUser.label.phoneNumber\"\n          required=\"true\"\n        ></bb-input-phone-ui>\n        <bb-input-validation-message-ui [showErrors]=\"!isFieldValid('mobileNumber')\">\n          <span \n            data-role=\"user-details-phone-number-validation-msg\"\n            i18n=\"user creation phone number required error message@@authorized.users.createUser.errorMessage.required.phoneNumber\">\n            Phone number is required\n          </span>\n        </bb-input-validation-message-ui>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"bb-button-bar\">    \n    <button \n      bbButton \n      data-role=\"user-details-continue-button\"\n      i18n=\"Continue button text@@authorized-users.create.details.continue.button\"\n      class=\"bb-button-bar__button\" \n      type=\"submit\"\n    >Continue</button>\n    <button \n      bbButton \n      data-role=\"user-details-cancel-button\"\n      color=\"link\"\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      i18n=\"Cancel button text@@authorized-users.create.details.cancel.button\"\n      (click)=\"abort()\"\n    >Cancel</button>\n  </div>\n</form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { DEFAULT_ACCOUNT_NUMBER_FORMAT } from '../../../common/constants';\nimport { Account } from '../../../common/model/account.model';\nimport { AuthorizedPermission, AuthorizedPermissionLevel } from '../../../common/model/authorized-users.model';\nimport { BaseAuthorizedUsersCreateStep } from '../authorized-users-create-common/base-authorized-users-create-step';\n\n@Component({\n  selector: 'bb-authorized-users-accounts',\n  templateUrl: 'authorized-users-accounts.component.html',\n})\nexport class AuthorizedUsersAccountsComponent extends BaseAuthorizedUsersCreateStep implements OnInit {\n  @Input() accounts!: Account[];\n  model: { [key: string]: boolean } = {};\n\n  productNumberFormat = DEFAULT_ACCOUNT_NUMBER_FORMAT;\n  showError = false;\n\n  save() {\n    if (this.hasAccounts()) {\n      this.goNext({ permissions: this.cleanPermissions(this.createAuthorizedPermission()) });\n    } else {\n      this.showError = true;\n    }\n  }\n\n  closeError() {\n    this.showError = false;\n  }\n\n  private cleanPermissions(permissions: Array<AuthorizedPermission>): Array<AuthorizedPermission> {\n    const fullAccessPermissions = permissions.filter(\n      (permission) => permission.level === AuthorizedPermissionLevel.FULL_ACCESS,\n    );\n    if (fullAccessPermissions.length > 0 && fullAccessPermissions.length !== this.accounts.length) {\n      return permissions.map((permission) => ({ ...permission, level: AuthorizedPermissionLevel.VIEW_ONLY }));\n    } else {\n      return [...permissions];\n    }\n  }\n\n  private createAuthorizedPermission(): Array<AuthorizedPermission> {\n    // Every member of the model has the account id as a key\n    return Object.keys(this.model)\n      .filter((accountId) => !!this.model[accountId])\n      .map((accountId) => ({\n        account: this.accounts.find((account) => account.id === accountId)!,\n        level: this.setLevelToPermissionByAccount(accountId),\n      }));\n  }\n\n  private setLevelToPermissionByAccount(account: string): AuthorizedPermissionLevel {\n    if (this.authorizedUser.permissions) {\n      const permission = this.authorizedUser.permissions.find((item) => item.account.id === account);\n      return permission?.level ? permission.level : AuthorizedPermissionLevel.VIEW_ONLY;\n    } else {\n      return AuthorizedPermissionLevel.VIEW_ONLY;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.setPresetPermissions(this.authorizedUser.permissions);\n  }\n\n  private setPresetPermissions(permissions: AuthorizedPermission[] = []) {\n    permissions.forEach((data) => {\n      this.model[data.account.id] = true;\n    });\n  }\n\n  private hasAccounts() {\n    return Object.keys(this.model).reduce((prev, curr) => (this.model[curr] ? prev + 1 : prev), 0) > 0;\n  }\n}\n","<form \n  #authorizedUsersAccountForm=\"ngForm\" \n  (ngSubmit)=\"save()\" \n  data-role=\"user-accounts-form\"\n>\n  <div class=\"bb-block bb-block--xl\" bbAuthorizedUsersAccessibilityKeyboard>\n    <h2 \n      data-role=\"user-accounts-header\"\n      i18n=\"user accounts selection header@@authorized.users.accounts.header\"\n    >\n      Which accounts will they have access to?\n    </h2>\n    <p \n      class=\"bb-text-support text-small\" \n      data-role=\"user-accounts-subHeader\"\n      i18n=\"user accounts selection subHeader@@authorized.users.accounts.subHeader\"\n    >\n      You will be able to specify permissions for each account in the next step.\n    </p>\n  </div>\n  <bb-alert-ui \n    *ngIf=\"showError\" \n    data-role=\"user-accounts-error-message\"\n    title=\"You need to select at least one account in order to continue\"\n    i18n-title=\"Account Failed Notification|Message for a notification displayed when no accounts are selected@@authorized-users.create.accounts.notification.error\"\n    [dismissible]=\"true\"\n    (closed)=\"closeError()\"\n  ></bb-alert-ui>\n  <ul \n    ngModelGroup=\"list\" \n    class=\"bb-list\"\n  >\n    <li class=\"bb-block bb-block--lg\">\n      <bb-checkbox-group-ui \n        label=\"Select all my accounts\"\n        data-role=\"user-accounts-select-all\"\n      ></bb-checkbox-group-ui>\n    </li>\n    <li *ngFor=\"let item of accounts\" class=\"bb-block bb-block--lg\" data-role=\"user-accounts-list\">\n      <bb-input-checkbox-ui\n        name=\"{{item.id}}\"\n        [(ngModel)]=\"model[item.id]\"\n        data-role=\"user-accounts-account-checkbox\"\n      >\n        <span class=\"bb-stack__item--spacing-sm highlight\" data-role=\"user-accounts-account-name\">{{item.name}}</span>\n        <span *ngIf=\"item.displayNumber\" class=\"bb-text-support\" data-role=\"user-accounts-account-number\">\n          {{ item.displayNumber.slice(item.displayNumber.length-9, item.displayNumber.length) | paymentCardNumber: productNumberFormat }}\n        </span>\n      </bb-input-checkbox-ui>\n    </li>\n  </ul>\n\n  <div class=\"bb-button-bar\">    \n    <button \n      bbButton \n      data-role=\"user-accounts-continue-button\"\n      i18n=\"Continue button text@@authorized-users.create.accounts.continue.button\"\n      class=\"bb-button-bar__button\" \n      type=\"submit\"\n    >Continue</button>\n    <button \n      bbButton \n      data-role=\"user-accounts-back-button\"\n      class=\"bb-button-bar__button\"\n      i18n=\"Back button text@@authorized-users.create.accounts.back.button\"\n      color=\"secondary\" \n      *ngIf=\"!isFirstStep\"\n      (click)=\"goBack()\"\n    >Back</button>\n    <button \n      bbButton \n      data-role=\"user-accounts-cancel-button\"\n      color=\"link\"\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      i18n=\"Cancel button text@@authorized-users.accounts.create.cancel.button\"\n      (click)=\"abort()\"\n    >Cancel</button>\n  </div>\n</form>\n","import { Component, Input, OnInit } from '@angular/core';\n\ninterface Permission {\n  name: string;\n  value: boolean;\n}\n\n@Component({\n  selector: 'bb-authorized-users-permissions-card',\n  templateUrl: 'authorized-users-permissions-card.component.html',\n})\nexport class AuthorizedUsersPermissionsCardComponent implements OnInit {\n  @Input() icon = '';\n  @Input() title = '';\n  @Input() name: string | undefined;\n  @Input() currentName: string | undefined;\n  @Input() permissionsConfig: string[] | undefined;\n  @Input() permissionsAssigned: boolean[] | undefined;\n  @Input() disabled = false;\n\n  permissions: Permission[] = [];\n  ngOnInit() {\n    if (this.permissionsAssigned && this.permissionsConfig) {\n      const permissionsAssigned = this.permissionsAssigned;\n      this.permissions = this.permissionsConfig.map((name, index) => ({ name, value: permissionsAssigned[index] }));\n    }\n  }\n}\n","<div \n  class=\"bb-authorized-users-permission-card card card-sm\"\n  [ngClass]=\"{\n    'bb-authorized-users-permission-card--selected': name===currentName,\n    'bb-authorized-users-permission-card--disabled': disabled\n  }\"\n>\n  <div class=\"card-body\" bbAuthorizedUsersAccessibilityKeyboard>\n    <div class=\"bb-stack\">\n      <div class=\"bb-stack__item bb-stack__item--push-right\">\n        <span class=\"bb-authorized-user-permission-card__radio\">\n          <bb-icon-ui \n            [name]=\"name===currentName?'radio-button-checked':'radio-button-unchecked'\"\n            [color]=\"name===currentName?'primary':'inactive'\"\n          ></bb-icon-ui>\n        </span>\n      </div>\n    </div>\n    <div class=\"bb-text-align-center\">\n      <bb-icon-ui [name]=\"icon\"></bb-icon-ui>\n    </div>\n    <div class=\"bb-block bb-block--md bb-highlight bb-text-align-center\">\n      {{title}}\n    </div> \n    \n\n    <ul class=\"bb-list\">\n      <li class=\"bb-stack bb-block bb-block--md\" *ngFor=\"let permission of permissions\">\n        <bb-icon-ui \n          class=\"bb-stack__item\" \n          [color]=\"permission.value?'success':'danger'\" \n          size=\"sm\" \n          [name]=\"permission.value?'check':'clear'\" \n          aria-label=\"include: \"\n          i18n-aria-label=\"include: @@uthorized.users.permissions.card.include\"\n        ></bb-icon-ui>\n        <span class=\"bb-text-support bb-subheader bb-subheader--regular\">{{permission.name}}</span>\n      </li>\n    </ul>\n  </div>\n</div>\n<div \n  data-role=\"user-permissions-card-disclaimer\"\n  class=\"bb-authorized-users-permission-card__disclaimer text-small text-center\" \n  *ngIf=\"name===currentName\"\n  i18n=\"authorized users disclaimer@@authorized-users.create.permissions.card.disclaimer\"\n>\n  Applied to all Selected Accounts\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Account } from '../../../common/model/account.model';\nimport {\n  AuthorizedPermission,\n  AuthorizedPermissionLevel,\n  LevelUIConfigHeader,\n} from '../../../common/model/authorized-users.model';\nimport { BaseAuthorizedUsersCreateStep } from '../authorized-users-create-common/base-authorized-users-create-step';\n\n@Component({\n  selector: 'bb-authorized-users-permissions',\n  templateUrl: 'authorized-users-permissions.component.html',\n})\nexport class AuthorizedUsersPermissionsComponent extends BaseAuthorizedUsersCreateStep implements OnInit {\n  @Input() accounts: Account[] | undefined;\n\n  authorizedPermissionLevel = AuthorizedPermissionLevel;\n  generalLevel: AuthorizedPermissionLevel | undefined;\n\n  private _isCustomPermission = false;\n\n  get isCustomPermission() {\n    return this._isCustomPermission;\n  }\n\n  set isCustomPermission(value) {\n    this._isCustomPermission = value;\n    this.generalLevel = undefined;\n  }\n\n  private applyLevelToAccounts(generalLevel: AuthorizedPermissionLevel | undefined) {\n    const permissions = this.authorizedUser.permissions?.map((permission) => ({\n      ...permission,\n      level: generalLevel || AuthorizedPermissionLevel.VIEW_ONLY,\n    }));\n\n    return { ...this.authorizedUser, permissions };\n  }\n\n  private applyLevelToAccount(permission: AuthorizedPermission) {\n    const permissions = [...(this.authorizedUser.permissions || [])];\n    const index = permissions.findIndex((item) => item.account.id === permission.account.id);\n\n    if (index !== -1) {\n      permissions[index] = permission;\n    }\n\n    return { ...this.authorizedUser, permissions };\n  }\n\n  private areTheSameLevel() {\n    const level = this.authorizedUser?.permissions && this.authorizedUser.permissions[0].level;\n    const count =\n      this.authorizedUser?.permissions?.reduce((prev, curr) => (level === curr.level ? prev + 1 : prev), 0) || -1;\n\n    return count === this.authorizedUser?.permissions?.length;\n  }\n\n  setGeneralLevel(level: AuthorizedPermissionLevel) {\n    if (!this.isCustomPermission) {\n      this.generalLevel = level;\n      this.saveChanges(this.applyLevelToAccounts(this.generalLevel));\n    }\n  }\n\n  apply() {\n    this.goNext(this.authorizedUser);\n  }\n\n  updateAccount(permission: AuthorizedPermission) {\n    this.saveChanges(this.applyLevelToAccount(permission));\n  }\n\n  disableCard(level: LevelUIConfigHeader<boolean[]>) {\n    if (!this.authorizedUser?.permissions) {\n      return false;\n    }\n\n    const allAccountsSelected = this.authorizedUser?.permissions?.length === this.accounts?.length;\n    return !allAccountsSelected && !level.validate();\n  }\n\n  togglePermissionMode() {\n    if (this.isCustomPermission && this.levelsConfig) {\n      this.saveChanges(this.applyLevelToAccounts(this.levelsConfig[0].level));\n    } else if (this.levelsConfig) {\n      this.setGeneralLevel(this.levelsConfig[0].level);\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (this.areTheSameLevel()) {\n      this.generalLevel = this.authorizedUser.permissions && this.authorizedUser.permissions[0].level;\n    } else {\n      this.isCustomPermission = true;\n    }\n  }\n}\n","<form #authorizedUsersPermissionsForm=\"ngForm\" data-role=\"user-permissions-form\">\n  <div class=\"bb-block bb-block--lg\" bbAuthorizedUsersAccessibilityKeyboard>\n    <h2 \n      data-role=\"user-permissions-header\"\n      i18n=\"user permissions selection header@@authorized.users.permissions.header\"\n    >\n      What permissions do you want to give?\n    </h2>\n    <p \n      class=\"bb-text-support text-small\" \n      data-role=\"user-permissions-subHeader\"\n      i18n=\"user permissions selection subHeader@@authorized.users.permissions.subHeader\"\n    >\n      Choose one permission for all selected accounts or different permissions for each account.\n    </p>\n  </div>\n\n  <div class=\"row bb-block bb-block--xl\">\n    <bb-authorized-users-permissions-card\n      *ngFor=\"let permissionLevel of levelsConfig\"\n      class=\"col-lg-4 bb-block bb-block--md-md-down\"\n      [title]=\"permissionLevel.title\"\n      [icon]=\"permissionLevel.icon\"\n      [name]=\"permissionLevel.level\"\n      [currentName]=\"generalLevel\"\n      [disabled]=\"disableCard(permissionLevel)\"\n      [permissionsConfig]=\"permissionsConfig?.permissions\"\n      [permissionsAssigned]=\"permissionLevel.permissionsAssigned\"\n      (click)=\"!disableCard(permissionLevel) && setGeneralLevel(permissionLevel.level)\"\n    >\n    </bb-authorized-users-permissions-card>\n  </div>\n\n  <div class=\"bb-stack bb-block bb-block--xl\">\n    <div class=\"bb-stack__item bb-stack__item--spacing-sm bb-stack__item--align-top\">\n      <bb-switch-ui\n        name=\"customPermissions\"\n        data-role=\"user-permissions-switch\"\n        aria-label=\"Choose different permissions for each account\"\n        [(ngModel)]=\"isCustomPermission\"\n        (click)=\"togglePermissionMode()\"\n      ></bb-switch-ui>\n    </div>\n    <div class=\"bb-stack__item\">\n      <label \n        class=\"bb-switch__label\" \n        data-role=\"user-permissions-switch-label\"\n      >\n        Choose different permissions for each account\n      </label>\n      <div\n        *ngIf=\"!enableAccountLevelFullAccessPermission\"\n        class=\"bb-text-support text-small\"\n        data-role=\"user-permissions-switch-description\"\n        i18n=\"Different permission selection subTitle@@authorized.users.different.permission.subTtitle\"\n      >\n        Keep in mind that you can only give Full Access permissions to all accounts at once.\n    </div>\n   </div>\n  </div>\n\n  <bb-authorized-users-permissions-levels-table\n    *ngIf=\"isCustomPermission\"\n    [isEditing]=\"true\"\n    [enableAccountLevelFullAccessPermission]=\"enableAccountLevelFullAccessPermission\"\n    [selectedAccounts]=\"authorizedUser.permissions\"\n    [levelsConfig]=\"levelsConfig\"\n    (updateAccount)=\"updateAccount($event)\"\n    data-role=\"user-permissions-table\"\n  ></bb-authorized-users-permissions-levels-table>\n\n  <div class=\"bb-button-bar\">    \n    <button \n      bbButton \n      data-role=\"user-permissions-continue-button\"\n      i18n=\"Continue button text@@authorized-users.create.permissions.continue.button\"\n      class=\"bb-button-bar__button\" \n      (click)=\"apply()\"\n    >Continue</button>\n    <button \n      bbButton \n      data-role=\"user-permissions-back-button\"\n      class=\"bb-button-bar__button\"\n      i18n=\"Back button text@@authorized-users.create.permissions.back.button\"\n      color=\"secondary\" \n      (click)=\"goBack()\"\n    >Back</button>\n    <button \n      bbButton \n      data-role=\"user-permissions-cancel-button\"\n      color=\"link\"\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      i18n=\"Cancel button text@@authorized-users.create.permissions.cancel.button\"\n      (click)=\"abort()\"\n    >Cancel</button>\n  </div>\n</form>","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { BaseAuthorizedUsersCreateStep } from '../authorized-users-create-common/base-authorized-users-create-step';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'bb-authorized-users-confirmation',\n  templateUrl: 'authorized-users-confirmation.component.html',\n})\nexport class AuthorizedUsersConfirmationComponent extends BaseAuthorizedUsersCreateStep {\n  @Input() showError = false;\n  @Input() isSaving = false;\n  @Input() termsConditions: string | undefined;\n  @Output() showErrorChange = new EventEmitter<boolean>();\n\n  confirmationDetailsForm = this.formBuilder.group({\n    termsCB: [false, Validators.requiredTrue],\n  });\n\n  saveUser() {\n    if (this.confirmationDetailsForm.valid) {\n      this.goNext(this.authorizedUser);\n    } else {\n      this.confirmationDetailsForm.markAllAsTouched();\n    }\n  }\n\n  closeError() {\n    this.showErrorChange.emit(false);\n  }\n\n  private getControl(fieldName: string) {\n    return this.confirmationDetailsForm.get(fieldName);\n  }\n\n  isFieldValid(fieldName: string) {\n    const control = this.getControl(fieldName);\n\n    return control && (control.valid || control.untouched);\n  }\n\n  hasError(field: string, type: string) {\n    const fieldControl = this.getControl(field);\n    if (!fieldControl || !fieldControl.errors) {\n      return;\n    }\n    return fieldControl.errors[type];\n  }\n\n  constructor(private readonly formBuilder: FormBuilder) {\n    super();\n  }\n}\n","<form \n  [formGroup]=\"confirmationDetailsForm\" \n  data-role=\"user-confirmation-form\"\n>\n  <div class=\"bb-block bb-block--lg\" bbAuthorizedUsersAccessibilityKeyboard>\n    <h2\n      class=\"bb-block bb-block--lg\" \n      data-role=\"user-confirmation-header\"\n      i18n=\"Please review and confirm the authorized user information@@authorized-users.create.confirmation.heading-1\"\n    >\n      Please review and confirm the authorized user information.\n    </h2>\n    <bb-alert-ui \n      *ngIf=\"showError\" \n      data-role=\"user-confirmation-error-message\"\n      title=\"Something Went Wrong\"\n      i18n-title=\"Confirmation Failed Notification|Title for a notification displayed when confirmation user is failed@@authorized-users.create.confirmation.notification.error.title\"\n      message=\"We failed to confirm this authorized user, please try again later.\"\n      i18n-message=\"Confirmation Failed Notification Message|Message for a notification displayed when confirmation user is failed@@authorized-users.create.confirmation.notification.error.message\"\n      [dismissible]=\"true\"\n      (closed)=\"closeError()\"\n    ></bb-alert-ui>\n    <h3 class=\"bb-block bb-block--sm\" data-role=\"user-confirmation-fullName\">\n      {{authorizedUser.firstName + ' ' + authorizedUser.lastName}}\n    </h3>\n    <div class=\"bb-block bb-block--sm\" data-role=\"user-confirmation-email\">{{authorizedUser.email}}</div>\n    <div class=\"bb-block bb-block--sm\" data-role=\"user-confirmation-phone-number\">{{authorizedUser.mobileNumber}}</div>\n  </div>\n\n  <div class=\"bb-block bb-block--xl\">\n    <bb-authorized-users-permissions-levels-table \n      [selectedAccounts]=\"authorizedUser.permissions\"\n      [levelsConfig]=\"levelsConfig\"\n      data-role=\"user-confirmation-permissions-table\"\n    ></bb-authorized-users-permissions-levels-table>\n  </div>\n\n  <div class=\"bb-block bb-block--xl\">\n    <div \n      class=\"bb-block bb-block--md bb-highlight\" \n      data-role=\"user-confirmation-terms-header\"\n      i18n=\"Terms and conditions@@authorized-users.create.confirmation.tos.title\"\n    >\n      Terms and Conditions\n    </div>\n\n    <div class=\"bb-authorized-users-terms bb-block bb-block--md\" bbAuthorizedUsersAccessibilityKeyboard>\n      <ng-container *ngTemplateOutlet=\"termsAndConditions\"></ng-container>\n    </div>\n\n    <bb-input-checkbox-ui\n      formControlName=\"termsCB\"\n      [id]=\"'confirmationTosCheckbox'\"\n      data-role=\"user-confirmation-terms-checkbox\"\n      label=\"I have read and accept the terms and conditions.\"\n      i18n-label=\"I have read and accept the terms and conditions.@@authorized-users.create.confirmation.tos.label\"\n      class=\"bb-stack__item\"\n    ></bb-input-checkbox-ui>\n\n    <bb-input-validation-message-ui [showErrors]=\"!isFieldValid('termsCB')\">\n      <span \n        *ngIf=\"hasError('termsCB', 'required')\" \n        data-role=\"user-confirmation-terms-validation-msg\"\n        i18n=\"You are required to accept terms and conditions@@authorized-users.create.confirmation.tos.error-label.required\"\n      >\n        You are required to accept terms and conditions\n      </span>\n    </bb-input-validation-message-ui>\n  </div>\n\n  <div class=\"bb-button-bar\">\n    <bb-load-button-ui\n        color=\"primary\"\n        class=\"bb-button-bar__button\"\n        data-role=\"user-confirmation-confirm-button\"\n        [isLoading]=\"isSaving\"\n        (click)=\"!isSaving && saveUser()\"\n        i18n=\"Confirm button text@@authorized-users.create.confirmation.confirm.button\"\n      >Confirm</bb-load-button-ui>\n    <button \n      bbButton \n      data-role=\"user-confirmation-back-button\"\n      class=\"bb-button-bar__button\"\n      i18n=\"Back button text@@authorized-users.create.confirmation.back.button\"\n      color=\"secondary\" \n      (click)=\"goBack()\"\n    >Back</button>\n    <button \n      bbButton \n      data-role=\"user-confirmation-cancel-button\"\n      color=\"link\"\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      i18n=\"Cancel button text@@authorized-users.create.confirmation.cancel.button\"\n      (click)=\"abort()\"\n    >Cancel</button>\n  </div>\n</form>\n\n<ng-template #termsAndConditions>\n  <div\n    i18n=\"Terms and Conditions Text|Text for authorized users terms and conditions@@authorized-users.create.confirmation.tos.text\"\n    data-role=\"user-confirmation-terms-text\"\n    [innerHTML]=\"termsConditions\"\n  >\n  </div>\n</ng-template>","import { Directive, EventEmitter, Input, Output } from '@angular/core';\n\n@Directive()\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport class AuthorizedUsersBaseDialogComponent {\n  @Input() dialogOpen = false;\n  @Output() confirm = new EventEmitter<void>();\n  @Output() closed = new EventEmitter<void>();\n\n  onClose = () => {\n    this.closed.emit();\n  };\n\n  onConfirm() {\n    this.confirm.emit();\n  }\n}\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { AuthorizedUsersBaseDialogComponent } from '../../../common/components/authorized-users-base-dialog/authorized-users-base-dialog.component';\nimport { PartialAuthorizedUsers } from '../../../common/model/authorized-users.model';\n\n@Component({\n  selector: 'bb-authorized-users-confirmation-complete',\n  templateUrl: 'authorized-users-confirmation-complete.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AuthorizedUsersConfirmationCompleteComponent extends AuthorizedUsersBaseDialogComponent {\n  /**\n   * Authorized user\n   */\n  @Input() authorizedUser: PartialAuthorizedUsers | undefined;\n  /**\n   * success image path\n   */\n  @Input() successImg: string | undefined;\n  /**\n   * success status\n   */\n  @Input() succeedStatus = '';\n  /**\n   * unique time to reload animated svg everytime\n   */\n  readonly timestamp = new Date().getTime();\n}\n","<bb-modal-ui [isOpen]=\"dialogOpen\" (cancel)=\"onClose()\" data-role=\"complete-modal\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <div class=\"bb-stack\">\n        <div class=\"bb-stack__item bb-stack__item--push-right\">\n          <button \n            bbButton \n            data-role=\"complete-modal-close-button\" \n            color=\"unstyled\" \n            (click)=\"onClose()\"\n            aria-label=\"close confirmation complete modal\"\n            i18-aria-label=\"Close confirmation complete|Button for close confirmation complete@@authorized.users.confirmation.complete.closed.button\"\n          >\n            <bb-icon-ui color=\"muted\" name=\"clear\" size=\"lg\"></bb-icon-ui>\n          </button>\n        </div>\n      </div>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <div class=\"bb-text-align-center bb-block\">\n        <img\n          src=\"{{ successImg + '?' + timestamp }}\"\n          alt=\"Confirmation succeeded\"\n          i18n-alt=\"Confirmation succeeded|Image for Confirmation succeeded@@authorized.users.confirmation.complete.confirmation-succeeded\"\n          data-role=\"confirmation-success-anim\"\n          class=\"img-fluid\"\n          data-role=\"complete-modal-image\"\n        />\n        <!-- Create confirmation -->\n        <ng-container *ngIf=\"succeedStatus==='create'\">\n          <h2\n            class=\"bb-text-bold\"\n            data-role=\"complete-create-modal-header\"\n            i18n=\"New authorized user!@@authorized.users.confirmation.create.complete.header\"\n          >\n            New authorized user!\n          </h2>\n          <span class=\"bb-text-support text-small\" data-role=\"complete-create-modal-subHeader\">\n            <span>{{authorizedUser?.firstName + ' ' + authorizedUser?.lastName + ' ' }}</span>\n            <span i18n=\"Success confirmation|Text for success confirmation@@authorized.users.confirmation.create.complete.success-message\">\n              will receive an email with a link to complete the registration process.\n            </span>\n          </span>\n        </ng-container>\n        <!-- Edit confirmation -->\n        <ng-container *ngIf=\"succeedStatus==='edit'\">\n          <h2\n            class=\"bb-text-bold\"\n            data-role=\"complete-edit-modal-header\"\n            i18n=\"New authorized user!@@authorized.users.confirmation.edit.complete.header\"\n          >\n            User permissions updated!\n          </h2>\n          <span class=\"bb-text-support text-small\" data-role=\"complete-edit-modal-subHeader\">\n            <span>{{authorizedUser?.firstName + ' ' + authorizedUser?.lastName + ' ' }}</span>\n            <span i18n=\"Success confirmation|Text for success confirmation@@authorized.users.confirmation.edit.complete.success-message\">\n              permissions were edited successfully.\n            </span>\n          </span>\n        </ng-container>\n      </div>\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui #footerRef>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar bb-button-bar--center\">\n        <button\n          bbButton\n          data-role=\"complete-modal-gotIt-button\"\n          class=\"bb-button-bar__button\"\n          color=\"primary\"\n          (click)=\"onConfirm()\"\n          i18n=\"Got it button|confirmation Done@@authorized.users.confirmation.complete.button.confirmation-done\"\n        >\n          Got it!\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>","import { Component } from '@angular/core';\nimport { AuthorizedUsersBaseDialogComponent } from '../../../common/components/authorized-users-base-dialog/authorized-users-base-dialog.component';\n\n@Component({\n  selector: 'bb-authorized-users-cancel-creation',\n  templateUrl: 'authorized-users-cancel-creation.component.html',\n})\nexport class AuthorizedUsersCancelCreationComponent extends AuthorizedUsersBaseDialogComponent {}\n","<bb-modal-ui [isOpen]=\"dialogOpen\" (cancel)=\"onClose()\" data-role=\"cancel-modal\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <h2 \n        data-role=\"cancel-modal-header\"\n        i18n=\"Discard authorized user@@authorized-users.cancel.modal.header\"\n      >\n        Discard New Authorized User?\n      </h2>\n      <div>\n        <button \n          bbButton  \n          data-role=\"cancel-modal-close-button\" \n          color=\"unstyled\" \n          (click)=\"onClose()\"\n          aria-label=\"Close Creation Modal\"\n          i18-aria-label=\"Close Create User|Button for close creation of authorized user@@authorized-users.cancel.modal.closed.button\"\n        >\n          <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span \n        data-role=\"cancel-modal-subHeader\"\n        i18n=\"Delete confirmation text@@authorized-users.cancel.modal.body\"\n      >\n        All entered information for this authorized user will be permanently lost.\n      </span>\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui #footerRef>\n    <ng-template bbCustomModalFooter>\n      <button bbButton data-role=\"cancel-modal-keep-button\" (click)=\"onClose()\" color=\"link\">\n        <span i18n=\"Keep button text@@authorized-users.messages.createMessage.composeMessageModal.keepCreating.button\">\n          Keep It\n        </span>\n      </button>\n      <button bbButton data-role=\"cancel-modal-discard-button\" (click)=\"onConfirm()\" color=\"danger\">\n        <span i18n=\"Discard button text@@authorized-users.messages.createMessage.composeMessageModal.discardButton\">\n          Discard Authorized User\n        </span>\n      </button>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { AuthorizedUsersCreateContainerComponent } from '../authorized-users-create-container/authorized-users-create-container.component';\nimport { BaseAuthorizedUsersCreateStep } from './base-authorized-users-create-step';\n\n@Directive({\n  selector: '[bbAuthorizedUsersStepHandler]',\n})\nexport class AuthorizedUserStepHandlerDirective implements OnInit {\n  private step: number | undefined;\n  private _currentStep = 0;\n  private showOrHideStep() {\n    if (this._currentStep === this.step) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainerRef.clear();\n    }\n  }\n\n  @Input('bbAuthorizedUsersStepHandler') set currentStep(value: number) {\n    this._currentStep = value;\n    this.showOrHideStep();\n  }\n\n  ngOnInit() {\n    this.step = this._currentStep > 0 ? this.parent.nextStepIndex() : undefined;\n    this.showOrHideStep();\n  }\n\n  constructor(\n    private templateRef: TemplateRef<BaseAuthorizedUsersCreateStep>,\n    private viewContainerRef: ViewContainerRef,\n    private parent: AuthorizedUsersCreateContainerComponent,\n  ) {}\n}\n","import { Component, Output, EventEmitter, Input, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Observable, BehaviorSubject, ReplaySubject, merge, of, combineLatest } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { AssetsResolver, AssetsService } from '@backbase/foundation-ang/core';\nimport { AccountList } from '../common/model/account-list.model';\nimport {\n  AuthorizedUsersList,\n  LevelUIConfigHeader,\n  PartialAuthorizedUsers,\n  PermissionUIConfig,\n  SafeTypeArray,\n} from '../common/model/authorized-users.model';\nimport { UserDataService } from '../common/services/user-data.service';\nimport { UsersUIService } from '../common/services/users-ui.service';\n\ninterface LoadingData {\n  accounts: AccountList;\n  termsAndConditions: string;\n}\n\nexport enum AuthorizedUserPermissionControlType {\n  INDIVIDUAL_CONTROL = 'individual-control',\n  ALL_AT_ONCE = 'all-at-once',\n}\n\n@Component({\n  selector: 'bb-authorized-users-create-wrapper',\n  templateUrl: 'authorized-users-create-wrapper.component.html',\n})\nexport class AuthorizedUsersCreateWrapperComponent implements OnInit {\n  currentStep = 1;\n  isAborting = false;\n  succeedStatus = '';\n  isFailure = false;\n  isSaving = false;\n  levelsConfig: Array<LevelUIConfigHeader<SafeTypeArray>> | undefined;\n  permissionsConfig: PermissionUIConfig<SafeTypeArray> | undefined;\n  loadingData: Observable<LoadingData> | undefined;\n\n  @Input() selectedUser: string | undefined;\n\n  @Input('enableAccountLevelFullAccessPermission') set enableAccountLevelFullAccessPermissionValue(value: string) {\n    this.enableAccountLevelFullAccessPermissionSubject.next(value);\n  }\n\n  @Output() showAuthorizedUsers = new EventEmitter<void>();\n  private termsConditionsContent: Observable<string> | undefined;\n  private accounts: Observable<AccountList> | undefined;\n  private currentUserStore: BehaviorSubject<PartialAuthorizedUsers> = new BehaviorSubject({});\n  private changesStore: BehaviorSubject<PartialAuthorizedUsers> = new BehaviorSubject({});\n  private selectedEditUserStore: ReplaySubject<PartialAuthorizedUsers> = new ReplaySubject();\n\n  authorizedUser: Observable<PartialAuthorizedUsers> = this.currentUserStore.asObservable();\n  enableAccountLevelFullAccessPermissionSubject = new BehaviorSubject<string | undefined>(undefined);\n\n  private readonly getURIFromSvgAssetID = (assetId: string) => `${assetId}.svg`;\n\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  private readonly resolveSvgAsset: AssetsResolver = this.assetsService.createAssetsResolver({\n    widgetName: 'bb-authorized-users-journey-ang',\n    getURIFromAssetID: this.getURIFromSvgAssetID,\n  });\n\n  get imageSucceedUrl(): Observable<string> {\n    return this.resolveSvgAsset('succeed');\n  }\n\n  get editMode() {\n    return this.selectedUser !== undefined;\n  }\n\n  goToAuthorizedUsersList = () => {\n    this.showAuthorizedUsers.emit();\n  };\n\n  private setCurrentUserValue(value: PartialAuthorizedUsers) {\n    this.changesStore.next({ ...this.currentUserStore.value, ...value });\n  }\n\n  private goToStep(value: number) {\n    this.currentStep = value;\n  }\n\n  private getAllAccounts() {\n    return this.userService.getAllArrangements().pipe(catchError(this.handleAccountError));\n  }\n\n  private handleAccountError(): Observable<AccountList> {\n    return of({ items: [] });\n  }\n\n  private handleUserError(): Observable<AuthorizedUsersList> {\n    return of({ items: [] });\n  }\n\n  next(authorizedUser: PartialAuthorizedUsers) {\n    this.setCurrentUserValue(authorizedUser);\n    this.goToStep(this.currentStep + 1);\n  }\n\n  back() {\n    this.goToStep(this.currentStep - 1);\n  }\n\n  saveOnly(authorizedUser: PartialAuthorizedUsers) {\n    this.setCurrentUserValue(authorizedUser);\n  }\n\n  setAbortingDialog(value: boolean) {\n    this.isAborting = value;\n  }\n\n  setSucceedDialogStatus(value: string) {\n    this.succeedStatus = value;\n  }\n\n  finish(authorizedUser: PartialAuthorizedUsers) {\n    this.isSaving = true;\n    const onCreateSuccess = () => {\n      this.setSucceedDialogStatus('create');\n      this.isSaving = false;\n      this.cd.markForCheck();\n    };\n\n    const onEditSuccess = () => {\n      this.setSucceedDialogStatus('edit');\n      this.isSaving = false;\n      this.cd.markForCheck();\n    };\n\n    const onError = () => {\n      this.isFailure = true;\n      this.isSaving = false;\n      this.cd.markForCheck();\n    };\n\n    if (this.editMode) {\n      this.userService\n        .updateAuthorizedUser(this.selectedUser!, authorizedUser.permissions!)\n        .subscribe(onEditSuccess, onError);\n    } else {\n      this.userService.addAuthorizedUser(authorizedUser).subscribe(onCreateSuccess, onError);\n    }\n  }\n\n  ngOnInit() {\n    if (this.editMode) {\n      this.userService\n        .retrieveAuthorizedUser()\n        .pipe(\n          catchError(this.handleUserError),\n          map((data) => data.items.find((item) => item.id === this.selectedUser)),\n        )\n        .subscribe(this.selectedEditUserStore);\n\n      this.accounts = this.selectedEditUserStore.pipe(\n        switchMap((data) => (data ? this.getAllAccounts() : this.handleAccountError())),\n      );\n    } else {\n      this.accounts = this.getAllAccounts();\n    }\n\n    this.termsConditionsContent = this.usersUIService.termsConditionsContent();\n\n    this.loadingData = combineLatest([this.accounts, this.termsConditionsContent]).pipe(\n      map(([accounts, termsAndConditions]) => ({\n        accounts,\n        termsAndConditions,\n      })),\n    );\n  }\n\n  get enableAccountLevelFullAccessPermission(): Observable<boolean | undefined> {\n    return this.enableAccountLevelFullAccessPermissionSubject.asObservable().pipe(\n      map((data) => {\n        return data === AuthorizedUserPermissionControlType.INDIVIDUAL_CONTROL;\n      }),\n    );\n  }\n\n  constructor(\n    private readonly userService: UserDataService,\n    private readonly usersUIService: UsersUIService,\n    private readonly assetsService: AssetsService,\n    private readonly cd: ChangeDetectorRef,\n  ) {\n    this.levelsConfig = this.usersUIService.uiLevelsConfigValue;\n    this.permissionsConfig = this.usersUIService.uiPermissionsConfigValue;\n    merge(this.changesStore, this.selectedEditUserStore).subscribe(this.currentUserStore);\n  }\n}\n","<ng-container *ngIf=\"loadingData | async as data; else loadingState\">\n  <ng-container *ngIf=\"data.accounts?.items?.length > 0 && data.termsAndConditions; else errorState\">\n    <div class=\"bb-block bb-block--lg\">\n      <div class=\"row bb-stack bb-stack--center\">\n        <ng-container *ngIf=\"!editMode; else editModeStepper\">\n          <bb-authorized-users-stepper\n            class= \"col-12 col-md-10 col-lg-8\"\n            [currentStep]=\"currentStep\"\n          ></bb-authorized-users-stepper>\n        </ng-container>\n      </div>\n    </div>\n    \n    <ng-template #editModeStepper>\n      <bb-authorized-users-edit-stepper \n        class= \"col-12 col-md-10\"\n        [currentStep]=\"currentStep\"\n      ></bb-authorized-users-edit-stepper>\n    </ng-template>\n    \n    <bb-authorized-users-create-container>\n      <bb-authorized-users-user-details \n        *bbAuthorizedUsersStepHandler=\"!editMode ? currentStep : -1\"\n        [authorizedUser]=\"authorizedUser | async\"\n        [isFirstStep]=\"true\"\n        (next)=\"next($event)\"\n        (back)=\"back()\"\n        (cancel)=\"setAbortingDialog(true)\"\n      ></bb-authorized-users-user-details>\n      <bb-authorized-users-accounts \n        *bbAuthorizedUsersStepHandler=\"currentStep\" \n        [authorizedUser]=\"authorizedUser | async\"\n        [accounts]=\"data.accounts.items\"\n        [isFirstStep]=\"editMode\"\n        (next)=\"next($event)\"\n        (back)=\"back()\"\n        (saveOnly)=\"saveOnly($event)\"\n        (cancel)=\"setAbortingDialog(true)\"\n      ></bb-authorized-users-accounts>\n      <bb-authorized-users-permissions \n        *bbAuthorizedUsersStepHandler=\"currentStep\"\n        [authorizedUser]=\"authorizedUser | async\"\n        [enableAccountLevelFullAccessPermission]=\"enableAccountLevelFullAccessPermission | async\"\n        [accounts]=\"data.accounts.items\"\n        [levelsConfig]=\"levelsConfig\"\n        [permissionsConfig]=\"permissionsConfig\"\n        (next)=\"next($event)\"\n        (back)=\"back()\"\n        (saveOnly)=\"saveOnly($event)\"\n        (cancel)=\"setAbortingDialog(true)\"\n      ></bb-authorized-users-permissions>\n      <bb-authorized-users-confirmation \n        *bbAuthorizedUsersStepHandler=\"currentStep\"\n        [authorizedUser]=\"authorizedUser | async\"\n        [termsConditions]=\"data.termsAndConditions\"\n        [levelsConfig]=\"levelsConfig\"\n        [isSaving]=\"isSaving\"\n        [(showError)]=\"isFailure\"\n        (next)=\"finish($event)\"\n        (back)=\"back()\"\n        (cancel)=\"setAbortingDialog(true)\"\n      ></bb-authorized-users-confirmation>\n    </bb-authorized-users-create-container>\n  </ng-container>\n</ng-container>\n\n<bb-authorized-users-confirmation-complete\n  *ngIf=\"succeedStatus\"\n  [dialogOpen]=\"succeedStatus\"\n  [succeedStatus]=\"succeedStatus\"\n  [authorizedUser]=\"authorizedUser | async\"\n  [successImg]=\"imageSucceedUrl | async\"\n  (confirm)=\"goToAuthorizedUsersList()\"\n  (closed)=\"goToAuthorizedUsersList()\"\n></bb-authorized-users-confirmation-complete>\n\n<bb-authorized-users-cancel-creation\n  [dialogOpen]=\"isAborting\"\n  (confirm)=\"goToAuthorizedUsersList()\"\n  (closed)=\"setAbortingDialog(false)\"\n></bb-authorized-users-cancel-creation>\n\n<ng-template #loadingState>\n  <div class=\"card\">\n    <bb-loading-indicator-ui \n      loaderSize=\"lg\" \n      text=\"Loading...\"\n      i18n-text=\"Loading|Text for the loading indicator@@authorized.users.create.loading.indicator.text\"\n    ></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n\n<ng-template #errorState>\n  <div class=\"card\">\n    <div class=\"card-body bb-state-container\">\n      <bb-empty-state-ui\n        iconModifier=\"error-outline\"\n        iconColor=\"dark\"\n        title=\"Something went wrong\"\n        i18n-title=\"Error state title@@authorized.users.create.errorState.title\"\n        subtitle=\"Try to reload the page or contact the system administrator.\"\n        i18n-subtitle=\"Error state message@@authorized.users.create.errorState.message\"\n      ></bb-empty-state-ui>\n    </div>\n  </div>\n</ng-template>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { CheckboxGroupModule } from '@backbase/ui-ang/checkbox-group';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport { InputEmailModule } from '@backbase/ui-ang/input-email';\nimport { InputPhoneModule } from '@backbase/ui-ang/input-phone';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { PaymentCardNumberModule } from '@backbase/ui-ang/payment-card-number-pipe';\nimport { StepperModule } from '@backbase/ui-ang/stepper';\nimport { SwitchModule } from '@backbase/ui-ang/switch';\nimport { AuthorizedUsersCommonModule } from '../common/authorized-users-common.module';\nimport { AuthorizedUsersCreateWrapperComponent } from './authorized-users-create-wrapper.component';\nimport { AuthorizedUsersAccountsComponent } from './components/authorized-users-accounts/authorized-users-accounts.component';\nimport { AuthorizedUsersCancelCreationComponent } from './components/authorized-users-cancel-creation/authorized-users-cancel-creation.component';\nimport { AuthorizedUsersConfirmationCompleteComponent } from './components/authorized-users-confirmation-complete/authorized-users-confirmation-complete.component';\nimport { AuthorizedUsersConfirmationComponent } from './components/authorized-users-confirmation/authorized-users-confirmation.component';\nimport { AuthorizedUserStepHandlerDirective } from './components/authorized-users-create-common/authorized-users-step-handler.directive';\nimport { AuthorizedUsersCreateContainerComponent } from './components/authorized-users-create-container/authorized-users-create-container.component';\nimport { AuthorizedUsersPermissionsCardComponent } from './components/authorized-users-permissions/authorized-users-permissions-card.component';\nimport { AuthorizedUsersPermissionsComponent } from './components/authorized-users-permissions/authorized-users-permissions.component';\nimport { AuthorizedUserEditStepperComponent } from './components/authorized-users-stepper/authorized-users-edit-stepper.component';\nimport { AuthorizedUsersStepperComponent } from './components/authorized-users-stepper/authorized-users-stepper.component';\nimport { AuthorizedUsersUserDetailsComponent } from './components/authorized-users-user-details/authorized-users-user-details.component';\n\nconst modules = [\n  StepperModule,\n  ButtonModule,\n  IconModule,\n  SwitchModule,\n  CheckboxGroupModule,\n  InputCheckboxModule,\n  PaymentCardNumberModule,\n  InputPhoneModule,\n  InputEmailModule,\n  InputTextModule,\n  ReactiveFormsModule,\n  FormsModule,\n  InputValidationMessageModule,\n  InputCheckboxModule,\n  ModalModule,\n  AlertModule,\n  LoadingIndicatorModule,\n  LoadButtonModule,\n  EmptyStateModule,\n  AuthorizedUsersCommonModule,\n];\n\nconst components = [\n  AuthorizedUsersCreateWrapperComponent,\n  AuthorizedUsersStepperComponent,\n  AuthorizedUsersConfirmationComponent,\n  AuthorizedUsersAccountsComponent,\n  AuthorizedUsersCreateContainerComponent,\n  AuthorizedUsersPermissionsComponent,\n  AuthorizedUsersUserDetailsComponent,\n  AuthorizedUsersPermissionsCardComponent,\n  AuthorizedUsersCancelCreationComponent,\n  AuthorizedUserEditStepperComponent,\n  AuthorizedUserStepHandlerDirective,\n  AuthorizedUsersConfirmationCompleteComponent,\n];\n\n@NgModule({\n  declarations: [...components],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ...modules,\n    BackbaseCoreModule.withConfig({\n      classMap: { AuthorizedUsersCreateWrapperComponent },\n    }),\n  ],\n  exports: [...components, ...modules],\n})\nexport class AuthorizedUsersCreateModule {}\n","import { Component } from '@angular/core';\n@Component({\n  selector: 'bb-authorized-users-journey',\n  template: '<router-outlet></router-outlet>',\n})\nexport class AuthorizedUsersJourneyComponent {}\n","import { HttpErrorResponse } from '@angular/common/http';\n\nexport interface AuthorizedUsersError {\n  message: string;\n  key?: string;\n  context?: { [key: string]: any };\n}\n\nconst getMessageFromResponse = (error: HttpErrorResponse) => {\n  const responseBody = error.error;\n\n  if (responseBody && responseBody.errors && responseBody.errors[0] && responseBody.errors[0].message) {\n    return responseBody.errors[0].message;\n  } else {\n    return undefined;\n  }\n};\n\n/**\n * Parse an HttpErrorResponse and return a AuthorizedUsersError object that can be used to display a\n * user-friendly error message.\n */\nexport const parseError = (errorResponse: HttpErrorResponse): AuthorizedUsersError => {\n  if (errorResponse.error instanceof ErrorEvent) {\n    // Client-side or network error.\n    return {\n      message: 'An unexpected error occurred',\n    };\n  } else {\n    switch (errorResponse.status) {\n      case 400:\n        return {\n          message: getMessageFromResponse(errorResponse) || 'Error 400',\n        };\n      case 401:\n        return {\n          message: 'Error 401',\n        };\n      case 403:\n        return {\n          message: 'Error 403',\n        };\n      case 404:\n        return {\n          message: 'Error 404',\n        };\n      default:\n        return {\n          message: 'An unexpected error occurred',\n        };\n    }\n  }\n};\n","import { Component, Input } from '@angular/core';\nimport { AuthorizedUserStatus } from '../../../common/model/authorized-users.model';\n\n@Component({\n  selector: 'bb-authorized-users-list-status-badge',\n  templateUrl: './authorized-users-list-status-badge.component.html',\n})\nexport class AuthorizedUsersListStatusBadgeComponent {\n  /**\n   * Authorized users status.\n   */\n  @Input() authorizedUsersStatus: string | undefined;\n\n  authorizedUserStatus = AuthorizedUserStatus;\n}\n","<div class=\"bb-stack bb-block bb-block--md\" >\n  <ng-container *ngIf=\"authorizedUsersStatus === authorizedUserStatus.ACTIVE\">\n    <bb-badge-ui\n      text=\"Active\"\n      i18n-text=\"Active Label|Text for the active label@@authorized.users.status.active\"\n      color=\"success\"\n    ></bb-badge-ui>\n  </ng-container>\n\n  <ng-container *ngIf=\"authorizedUsersStatus === authorizedUserStatus.AWAITING_REGISTRATION\">\n    <bb-badge-ui\n      text=\"Awaiting Registration\"\n      i18n-text=\"Awaiting Registration Label|Text for the scheduled label@@authorized.users.status.awating\"\n      color=\"info\"\n    ></bb-badge-ui>\n  </ng-container>\n\n  <ng-container *ngIf=\"authorizedUsersStatus === authorizedUserStatus.PAUSED\">\n    <bb-badge-ui\n      text=\"Paused\"\n      i18n-text=\"Paused Label|Text for the expired label@@authorized.users.status.paused\"\n      color=\"warning\"\n    ></bb-badge-ui>\n  </ng-container>\n</div>","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n  AuthorizedUser,\n  AuthorizedUserStatus,\n  LevelUIConfigHeader,\n} from '../../../common/model/authorized-users.model';\n\n@Component({\n  selector: 'bb-authorized-users-list-item',\n  templateUrl: `./authorized-users-list-item.component.html`,\n})\nexport class AuthorizedUsersListItemComponent {\n  /**\n   *  List of authorized users.\n   */\n  @Input() authorizedUsersItem: AuthorizedUser | undefined;\n  @Input() levelsConfig: Array<LevelUIConfigHeader<boolean[]>> | undefined;\n  @Output() edit = new EventEmitter<AuthorizedUser>();\n  @Output() remove = new EventEmitter<AuthorizedUser>();\n  @Output() paused = new EventEmitter<AuthorizedUser>();\n  @Output() resumed = new EventEmitter<AuthorizedUser>();\n\n  authorizedUserStatus = AuthorizedUserStatus;\n  arePermissionsOpen = false;\n  isUserActionsEnabled = false;\n\n  togglePermissionsVisibility() {\n    this.arePermissionsOpen = !this.arePermissionsOpen;\n  }\n\n  editPermissions() {\n    this.edit.emit(this.authorizedUsersItem);\n  }\n\n  removeUser() {\n    this.remove.emit(this.authorizedUsersItem);\n  }\n\n  pauseUser() {\n    this.paused.emit(this.authorizedUsersItem);\n  }\n\n  resumeUser() {\n    this.resumed.emit(this.authorizedUsersItem);\n  }\n}\n","<div class=\"card card-lg\">\n  <div class=\"card-body\" bbAuthorizedUsersAccessibilityKeyboard>\n    <div class=\"bb-stack bb-stack--density-sm\">\n      <div class=\"bb-stack__item\">\n        <p data-role=\"user-fullName\" class=\"bb-heading-3\">\n          {{authorizedUsersItem?.firstName + ' ' + authorizedUsersItem?.lastName}}\n        </p>\n      </div>\n\n      <div class=\"bb-stack__item\" data-role=\"user-status-badge\">\n        <bb-authorized-users-list-status-badge\n          [authorizedUsersStatus]=\"authorizedUsersItem?.status\"\n        ></bb-authorized-users-list-status-badge>\n      </div>\n\n      <div class=\"bb-stack__item bb-stack__item--push-right\">\n        <bb-dropdown-menu-ui\n          icon=\"ellipsis-h\"\n          btnColor=\"link-dark\"\n          btnCircle=\"true\"\n          container=\"body\"\n          position=\"bottom-right\"\n          data-role=\"options-dropdown\"\n          aria-label=\"Options\"\n          i18n-aria-label=\"Options button|Authorized user options button tooltip@@authorized.users.options.label\"\n        >\n          <ng-template bbDropdownMenuItem>\n            <a\n              bbAuthorizedUsersAccessibilityKeyboard\n              rel=\"noopener\"\n              role=\"menuitem\"\n              class=\"dropdown-item\"\n              data-role=\"edit-item\"\n              target=\"_blank\"\n              (click)=\"editPermissions()\"\n            >\n              <span class=\"bb-inline-stack\">\n                <bb-icon-ui class=\"bb-inline-stack__item\" name=\"edit\" size=\"md\"></bb-icon-ui>\n                <span \n                  class=\"bb-inline-stack__item\"  \n                  i18n=\"Edit User Permissions|Label for edit authorized user permissions action@@authorized.users.edit\"\n                >\n                  Edit User Permissions\n                </span>\n              </span>\n            </a>\n            <ng-container *ngIf=\"authorizedUsersItem?.status!==authorizedUserStatus.PAUSED; else resumeAuthorizedUserOption\">\n              <a\n                bbAuthorizedUsersAccessibilityKeyboard\n                rel=\"noopener\"\n                role=\"menuitem\"\n                class=\"dropdown-item\"\n                data-role=\"pause-item\"\n                target=\"_blank\"\n                (click)=\"pauseUser()\"\n              >\n                <span class=\"bb-inline-stack\">\n                  <bb-icon-ui class=\"bb-inline-stack__item\" name=\"pause\" size=\"md\"></bb-icon-ui>\n                  <span \n                    class=\"bb-inline-stack__item\" \n                    i18n=\"Pause Permissions|Label for pause authorized user permissions action@@authorized.users.paused\"\n                  >\n                    Pause Permissions\n                  </span>\n                </span>\n              </a>\n            </ng-container>\n            <ng-template #resumeAuthorizedUserOption>\n              <a\n                bbAuthorizedUsersAccessibilityKeyboard\n                rel=\"noopener\"\n                role=\"menuitem\"\n                class=\"dropdown-item\"\n                data-role=\"resume-item\"\n                target=\"_blank\"\n                (click)=\"resumeUser()\"\n              >\n                <span class=\"bb-inline-stack\">\n                  <bb-icon-ui class=\"bb-inline-stack__item\" name=\"update\" size=\"md\"></bb-icon-ui>\n                  <span \n                    class=\"bb-inline-stack__item\" \n                    i18n=\"Resume Permissions|Label for resume authorized user permissions action@@authorized.users.resumed\"\n                  >\n                    Resume Permissions\n                  </span>\n                </span>\n              </a>\n            </ng-template>\n            <a\n              bbAuthorizedUsersAccessibilityKeyboard\n              rel=\"noopener\"\n              role=\"menuitem\"\n              class=\"dropdown-item\"\n              data-role=\"remove-item\"\n              target=\"_blank\"\n              (click)=\"removeUser()\"\n            >\n              <span class=\"bb-inline-stack\">\n                <bb-icon-ui class=\"bb-inline-stack__item\" name=\"delete\" size=\"md\" color=\"danger\"></bb-icon-ui>\n                <span \n                  class=\"bb-inline-stack__item bb-text-danger\" \n                  i18n=\"Remove Authorized User|Label for remove authorized user action@@authorized.users.remove\"\n                >\n                  Remove Authorized User\n                </span>\n              </span>\n            </a>\n          </ng-template>\n        </bb-dropdown-menu-ui>\n      </div>\n    </div>\n\n    <div class=\"bb-block bb-block--sm\">\n      <div \n        class=\"bb-block bb-block--xs bb-text-support text-small\" \n        data-role=\"user-email\"\n      >\n        {{authorizedUsersItem?.email}} \n      </div>\n      <div \n        class=\"bb-text-support text-small\" \n        data-role=\"user-phone-number\"\n      > \n        {{authorizedUsersItem?.mobileNumber | phoneNumber: 'US'}} \n      </div>\n    </div>\n    \n    <div [ngbCollapse]=\"!arePermissionsOpen\" bbAuthorizedUsersAccessibilityKeyboard>\n      <div class=\"bb-block bb-block--xs\" data-role=\"user-username\" *ngIf=\"authorizedUsersItem?.username\"> \n        <span \n          class=\"bb-text-bold text-small\"\n          i18n='Authorized users list username header@@authorized.users.list.username.header'\n        >\n          Username: \n        </span>\n        <span class=\"bb-text-support text-small\">{{authorizedUsersItem?.username}}</span>\n      </div>\n      <div class=\"bb-block bb-block--md\" data-role=\"user-permissions-table\">\n        <bb-authorized-users-permissions-levels-table \n          [selectedAccounts]=\"authorizedUsersItem?.permissions\"\n          [levelsConfig]=\"levelsConfig\"\n        ></bb-authorized-users-permissions-levels-table>\n      </div>\n    </div>\n\n    <div>\n      <button bbButton data-role=\"permissions-button\" buttonSize=\"sm\" color=\"link-text\" (click)=\"togglePermissionsVisibility()\">\n        <bb-icon-ui [name]=\"arePermissionsOpen ? 'toggle-up' : 'toggle-down'\" size=\"md\"></bb-icon-ui>\n        <span \n          i18n='Hide user permissions button@@authorized.users.list.hide.button' \n          *ngIf=\"arePermissionsOpen\"\n        >\n          Hide User Permissions\n        </span>\n        <span \n          i18n='See user permissions button@@authorized.users.list.seeMore.button' \n          *ngIf=\"!arePermissionsOpen\"\n        >\n          See User Permissions\n        </span>\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AuthorizedUser, AuthorizedUsersList, LevelUIConfigHeader } from '../../../common/model/authorized-users.model';\n\n@Component({\n  selector: 'bb-authorized-users-list',\n  templateUrl: `./authorized-users-list.component.html`,\n})\nexport class AuthorizedUsersListComponent {\n  /**\n   *  List of authorized users.\n   */\n  @Input() authorizedUsersList: AuthorizedUsersList | undefined;\n  @Input() levelsConfig: Array<LevelUIConfigHeader<boolean[]>> | undefined;\n\n  @Output() edit = new EventEmitter<AuthorizedUser>();\n  @Output() remove = new EventEmitter<AuthorizedUser>();\n  @Output() paused = new EventEmitter<AuthorizedUser>();\n  @Output() resumed = new EventEmitter<AuthorizedUser>();\n  @Output() createAuthorizedUser = new EventEmitter();\n\n  goToAuthorizedUser() {\n    this.createAuthorizedUser.emit();\n  }\n\n  editPermissions(user: AuthorizedUser) {\n    this.edit.emit(user);\n  }\n\n  removeUser(user: AuthorizedUser) {\n    this.remove.emit(user);\n  }\n\n  pauseUser(user: AuthorizedUser) {\n    this.paused.emit(user);\n  }\n\n  resumeUser(user: AuthorizedUser) {\n    this.resumed.emit(user);\n  }\n}\n","<div class=\"bb-block bb-block--lg bb-text-align-right\">\n  <button bbButton data-role=\"add-button\" color=\"primary\" (click)=\"goToAuthorizedUser()\">\n    <bb-icon-ui name=\"add\"></bb-icon-ui> \n    <span i18n=\"Add new authorized user button@@authorized.users.add.button\">\n      Add Authorized User\n    </span>\n  </button>\n</div>\n<div class=\"bb-list\">\n  <div class=\"bb-list__item--no-separator\" *ngFor=\"let authorizedUsersItem of authorizedUsersList\">\n    <div class=\"bb-block bb-block--lg\">\n      <bb-authorized-users-list-item\n        [authorizedUsersItem]=\"authorizedUsersItem\"\n        [levelsConfig]=\"levelsConfig\"\n        (edit)=\"editPermissions($event)\"\n        (remove)=\"removeUser($event)\"\n        (paused)=\"pauseUser($event)\"\n        (resumed)=\"resumeUser($event)\"\n      ></bb-authorized-users-list-item>\n    </div>\n  </div>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'bb-authorized-users-empty-list',\n  templateUrl: `./authorized-users-empty-list.component.html`,\n})\nexport class AuthorizedUsersEmptyListComponent {\n  /**\n   * Empty state image url.\n   */\n  @Input() imageUrl = '';\n\n  @Output() createAuthorizedUser = new EventEmitter();\n\n  goToAuthorizedUser() {\n    this.createAuthorizedUser.emit();\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body bb-text-align-center\">\n    <div class=\"bb-block bb-block--lg\">\n      <img \n        class=\"img-fluid\" \n        *ngIf=\"!!imageUrl\" \n        [src]=\"imageUrl\"\n        alt=\"empty-state-image\"\n      />\n    </div>\n    <h2 \n      class=\"bb-block bb-block--sm\"\n      data-role=\"empty-state-message\"\n      i18n=\"authorized users empty state header@@authorized.users.empty.state.header\"\n    >\n      Authorize access to your accounts\n    </h2>\n    <div class=\"bb-block bb-block--lg\">\n      <p \n        class=\"bb-text-support text-small\"\n        data-role=\"empty-state-description\"\n        i18n=\"authorized users empty state description@authorized.users.empty.state.description\"\n      >\n        Adding an authorized user allows you to give limited or full access to your accounts or financial products.\n      </p>\n    </div>\n  \n    <div>\n      <button bbButton data-role=\"add-button\" color=\"primary\" (click)=\"goToAuthorizedUser()\">\n        <bb-icon-ui name=\"add\"></bb-icon-ui> \n        <span i18n=\"Add new authorized user button@@authorized.users.add.button\">Add Authorized User</span>\n      </button>\n    </div>\n  </div>\n</div>","import { Component } from '@angular/core';\nimport { AuthorizedUsersBaseDialogComponent } from '../../../common/components/authorized-users-base-dialog/authorized-users-base-dialog.component';\n\n@Component({\n  selector: 'bb-authorized-user-list-remove-user-confirmation-dialog',\n  templateUrl: 'authorized-users-list-confirmation-remove-user-dialog.component.html',\n})\nexport class AuthorizedUsersListConfirmationRemoveUserDialogComponent extends AuthorizedUsersBaseDialogComponent {}\n","<!-- Remove authorized user confirmation model  -->\n<bb-modal-ui [isOpen]=\"dialogOpen\" (cancel)=\"onClose()\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <h2 \n        data-role=\"remove-modal-title\" \n        i18n=\"Remove authorized user@@authorized.users.removeUser.modal.header\"\n      >\n        Remove Authorized User?\n      </h2>\n      <div>\n        <button \n          bbButton \n          color=\"unstyled\" \n          (click)=\"onClose()\"\n          aria-label=\"close removal confirmation modal dialog\"\n          i18-aria-label=\"Close removal confirmation modal dialog|Button for close removal confirmation modal dialog@@authorized.users.removeUser.modal.closed.button\"\n        >\n          <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span data-role=\"remove-modal-message\" i18n=\"Remove confirmation text@@authorized.users.removeUser.modal.body\">\n        All entered information and their corresponding permissions will be permanently removed.\n      </span>\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui #footerRef>\n    <ng-template bbCustomModalFooter>\n      <button bbButton (click)=\"onClose()\" color=\"link\" data-role=\"keep-button\">\n        <span i18n=\"Keep it button text@@authorized.users.removeUser.notNow.button\">\n          Keep It\n        </span>\n      </button>\n      <button bbButton (click)=\"onConfirm()\" color=\"danger\" data-role=\"remove-button\">\n        <span i18n=\"Remove authorized user button text@@authorized.users.removeUser.remove.button\">\n          Remove Authorized User\n        </span>\n      </button>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n","import { Component } from '@angular/core';\nimport { AuthorizedUsersBaseDialogComponent } from '../../../common/components/authorized-users-base-dialog/authorized-users-base-dialog.component';\n\n@Component({\n  selector: 'bb-authorized-user-list-confirmation-pause-user-dialog',\n  templateUrl: 'authorized-user-list-confirmation-pause-user-dialog.component.html',\n})\nexport class AuthorizedUserListConfirmationPauseUserDialogComponent extends AuthorizedUsersBaseDialogComponent {}\n","<!-- Pause authorized user confirmation model  -->\n<bb-modal-ui [isOpen]=\"dialogOpen\" (cancel)=\"onClose()\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <h2 \n        data-role=\"pause-modal-title\" \n        i18n=\"Pause user permissions@@authorized.users.pauseUserPermissions.modal.header\"\n      >\n        Pause user permissions?\n      </h2>\n      <div>\n        <button \n          bbButton \n          color=\"unstyled\" \n          (click)=\"onClose()\"\n          aria-label=\"close pause permissions confirmation modal dialog\"\n          i18-aria-label=\"Close pause permissions confirmation modal dialog|Button for close pause permissions confirmation modal dialog@@authorized.users.pauseUserPermissions.modal.cancel.button\"\n        >\n          <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span data-role=\"pause-modal-message\" i18n=\"Pause confirmation text@@authorized.users.pauseUserPermissions.modal.body\">\n        Their account permissions will be paused indefinetely until you resume them.\n      </span>\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui #footerRef>\n    <ng-template bbCustomModalFooter>\n      <button bbButton (click)=\"onClose()\" color=\"link\" data-role=\"not-now-button\">\n        <span i18n=\"Not now button text@@authorized.users.pauseUserPermissions.modal.notNow.button\">\n          Not now\n        </span>\n      </button>\n      <button bbButton (click)=\"onConfirm()\" color=\"primary\" data-role=\"pause-button\">\n        <span i18n=\"Pause permissions button text@@authorized.users.pauseUserPermissions.modal.paused.button\">\n          Pause permissions\n        </span>\n      </button>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>","import { Component, EventEmitter, OnDestroy, Output, TemplateRef } from '@angular/core';\nimport { AssetsResolver, AssetsService } from '@backbase/foundation-ang/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, mergeMap, tap } from 'rxjs/operators';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport {\n  AuthorizedUser,\n  AuthorizedUsersList,\n  AuthorizedUserStatus,\n  LevelUIConfigHeader,\n  SafeTypeArray,\n} from '../../../common/model/authorized-users.model';\nimport { AuthorizedUsersError, parseError } from '../../../common/model/authorized-users-error.model';\nimport { SERVICE_AGREEMENT_DISABLED, SERVICE_AGREEMENT_ENABLED } from '../../../common/constants';\nimport { UserDataService } from '../../../common/services/user-data.service';\nimport { UsersUIService } from '../../../common/services/users-ui.service';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\n// eslint-disable-next-line no-var\ndeclare var $localize: any;\n\nexport type AuthorizedUserListActions = 'pause' | 'remove' | undefined;\ntype NotificationMessage = string | TemplateRef<any>;\ntype NotificationModifier = 'success' | 'info' | 'warning' | 'error' | undefined;\n\n@Component({\n  selector: 'bb-authorized-users-list-wrapper',\n  templateUrl: `authorized-users-list-wrapper.component.html`,\n})\nexport class AuthorizedUsersListWrapperComponent implements OnDestroy {\n  private refreshAuthorizedUsers = new BehaviorSubject<boolean>(true);\n  private authorizedUsersListSubject = new BehaviorSubject<AuthorizedUsersList>({ items: [] });\n  private isLoading = new BehaviorSubject<boolean>(true);\n  levelsConfig: Array<LevelUIConfigHeader<SafeTypeArray>> | undefined;\n\n  actionName: AuthorizedUserListActions;\n  authorizedUsersList = this.authorizedUsersListSubject.asObservable();\n  showLoadingIndicator = this.isLoading.asObservable();\n\n  @Output() selectedUser = new EventEmitter<string | undefined>();\n  /**\n   * Error message in case something unexpected occurs.\n   */\n  error: AuthorizedUsersError | undefined;\n\n  currentUser: AuthorizedUser | undefined;\n\n  private readonly getURIFromAssetID = (assetId: string) => `${assetId}-img.svg`;\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  private readonly resolveAsset: AssetsResolver = this.assetsService.createAssetsResolver({\n    widgetName: 'bb-authorized-users-journey-ang',\n    getURIFromAssetID: this.getURIFromAssetID,\n  });\n\n  private handleLoadingError = (error: HttpErrorResponse) => {\n    this.error = parseError(error);\n    return of({ items: [] });\n  };\n\n  private handleOperationsError = () => {\n    this.setLoadingIndicator(false);\n    this.pushNotification($localize`Something went wrong`, $localize`Please try again later.`, 'error');\n  };\n\n  private retrieveAuthorizedUsers() {\n    return this.userDataService.retrieveAuthorizedUser().pipe(\n      catchError(this.handleLoadingError),\n      tap(() => {\n        this.setLoadingIndicator(false);\n      }),\n    );\n  }\n\n  private pushNotification(header: NotificationMessage, message: NotificationMessage, modifier: NotificationModifier) {\n    this.notificationService.showNotification({\n      header,\n      message,\n      modifier,\n      dismissible: true,\n      ttl: 5000,\n    });\n  }\n\n  get imageEmptyStateUrl(): Observable<string> {\n    return this.resolveAsset('authorized-users-empty-state');\n  }\n\n  goToAuthorizedUser() {\n    this.selectedUser.emit();\n  }\n\n  editPermissions(user: AuthorizedUser) {\n    this.selectedUser.emit(user.id);\n  }\n\n  setCurrentUser(user?: AuthorizedUser, actionName?: AuthorizedUserListActions) {\n    this.currentUser = user;\n    this.actionName = actionName;\n  }\n\n  setLoadingIndicator(value: boolean) {\n    this.isLoading.next(value);\n  }\n\n  removeUser(user: AuthorizedUser | undefined) {\n    const success = () => {\n      this.pushNotification(\n        $localize`Authorized user removed`,\n        $localize`Their permissions are permanently removed.`,\n        'success',\n      );\n      this.refreshList();\n    };\n\n    if (user && user.id) {\n      this.setLoadingIndicator(true);\n      this.currentUser = undefined;\n      this.userDataService.removeAuthorizedUser(user.id).subscribe(success, this.handleOperationsError);\n    }\n  }\n\n  updateUserStatus(user: AuthorizedUser | undefined) {\n    const success = () => {\n      if (user!.status !== AuthorizedUserStatus.PAUSED) {\n        this.pushNotification(\n          $localize`Authorized user paused`,\n          $localize`You can resume their permissions at any time.`,\n          'success',\n        );\n      } else {\n        this.pushNotification(\n          $localize`User permissions resumed`,\n          $localize`Their permissions are now active again.`,\n          'success',\n        );\n      }\n      this.refreshList();\n    };\n    if (user && user.id) {\n      this.setLoadingIndicator(true);\n      this.currentUser = undefined;\n      this.userDataService\n        .updateAuthorizedUserStatus(\n          user.id,\n          user.status !== AuthorizedUserStatus.PAUSED ? SERVICE_AGREEMENT_DISABLED : SERVICE_AGREEMENT_ENABLED,\n        )\n        .subscribe(success, this.handleOperationsError);\n    }\n  }\n\n  refreshList() {\n    this.refreshAuthorizedUsers.next(true);\n  }\n\n  ngOnDestroy() {\n    this.refreshAuthorizedUsers.complete();\n    this.authorizedUsersListSubject.complete();\n    this.isLoading.complete();\n  }\n\n  constructor(\n    private readonly assetsService: AssetsService,\n    private readonly userDataService: UserDataService,\n    private readonly usersUIService: UsersUIService,\n    private readonly notificationService: NotificationService,\n  ) {\n    this.refreshAuthorizedUsers\n      .pipe(mergeMap(() => this.retrieveAuthorizedUsers()))\n      .subscribe(this.authorizedUsersListSubject);\n\n    this.levelsConfig = this.usersUIService.uiLevelsConfigValue;\n  }\n}\n","<ng-container *ngIf=\"!error; else errorState\">\n  <ng-container *ngIf=\"authorizedUsersList | async as list\">\n    <ng-container *ngIf=\"(showLoadingIndicator | async) === false; else loadingState\">\n      <ng-container *ngIf=\"list.items.length; else emptyState\">\n        <bb-authorized-users-list\n          [authorizedUsersList]=\"list.items\"\n          [levelsConfig]=\"levelsConfig\"\n          (edit)=\"editPermissions($event)\"\n          (remove)=\"setCurrentUser($event, 'remove')\"\n          (paused)=\"setCurrentUser($event, 'pause')\"\n          (resumed)=\"updateUserStatus($event)\"\n          (createAuthorizedUser)=\"goToAuthorizedUser()\"\n        ></bb-authorized-users-list>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n</ng-container>\n\n<ng-template #emptyState>\n  <bb-authorized-users-empty-list\n    [imageUrl]=\"imageEmptyStateUrl | async\"\n    (createAuthorizedUser)=\"goToAuthorizedUser()\"\n  ></bb-authorized-users-empty-list>\n</ng-template>\n\n<ng-template #loadingState>\n  <div class=\"card\">\n    <bb-loading-indicator-ui \n      loaderSize=\"lg\" \n      text=\"Loading...\"\n      i18n-text=\"Loading|Text for the loading indicator@@authorized.users.loading.indicator.text\"\n    ></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n\n<ng-template #errorState>\n  <div class=\"card\">\n    <div class=\"card-body bb-state-container\">\n      <bb-empty-state-ui\n        iconModifier=\"error-outline\"\n        iconColor=\"dark\"\n        title=\"Something Went Wrong\"\n        i18n-title=\"Error state title@@authorized.users.errorState.title\"\n        subtitle=\"Try to reload the page or contact the system administrator.\"\n        i18n-subtitle=\"Error state message@@authorized.users.errorState.message\"\n      ></bb-empty-state-ui>\n      <div class=\"bb-state-container__footer\">\n        <button \n          bbButton \n          color=\"primary\" \n          i18n=\"Reload button text@@authorized-users.errorState.reload.button\"\n        >\n          Reload\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<bb-authorized-user-list-remove-user-confirmation-dialog\n  [dialogOpen]=\"!!currentUser && actionName === 'remove'\"\n  (confirm)=\"removeUser(currentUser)\"\n  (closed)=\"setCurrentUser()\"\n></bb-authorized-user-list-remove-user-confirmation-dialog>\n\n<bb-authorized-user-list-confirmation-pause-user-dialog\n  [dialogOpen]=\"!!currentUser && actionName === 'pause'\"\n  (confirm)=\"updateUserStatus(currentUser)\"\n  (closed)=\"setCurrentUser()\"\n></bb-authorized-user-list-confirmation-pause-user-dialog>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { AuthorizedUsersListWrapperComponent } from './components/authorized-users-list-wrapper/authorized-users-list-wrapper.component';\nimport { AuthorizedUsersEmptyListComponent } from './components/authorized-users-empty-list/authorized-users-empty-list.component';\nimport { AuthorizedUsersListComponent } from './components/authorized-users-list/authorized-users-list.component';\nimport { AuthorizedUsersListItemComponent } from './components/authorized-users-list-item/authorized-users-list-item.component';\nimport { NgbCollapseModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthorizedUsersListStatusBadgeComponent } from './components/authorized-users-list-status-badge/authorized-users-list-status-badge.component';\nimport { AuthorizedUsersListConfirmationRemoveUserDialogComponent } from './components/authorized-users-list-confirmation-dialog/authorized-users-list-confirmation-remove-user-dialog.component';\nimport { AuthorizedUserListConfirmationPauseUserDialogComponent } from './components/authorized-users-list-confirmation-dialog/authorized-user-list-confirmation-pause-user-dialog.component';\nimport { AuthorizedUsersCommonModule } from '../common/authorized-users-common.module';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { PhoneNumberModule } from '@backbase/ui-ang/phone-number-format-pipe';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { BadgeModule } from '@backbase/ui-ang/badge';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\n\nconst components = [\n  AuthorizedUsersListWrapperComponent,\n  AuthorizedUsersEmptyListComponent,\n  AuthorizedUsersListComponent,\n  AuthorizedUsersListItemComponent,\n  AuthorizedUsersListStatusBadgeComponent,\n  AuthorizedUsersListConfirmationRemoveUserDialogComponent,\n  AuthorizedUserListConfirmationPauseUserDialogComponent,\n];\n\nconst modules = [\n  ButtonModule,\n  IconModule,\n  PhoneNumberModule,\n  LoadingIndicatorModule,\n  EmptyStateModule,\n  NgbCollapseModule,\n  DropdownMenuModule,\n  ModalModule,\n  BadgeModule,\n  NotificationModule,\n  AuthorizedUsersCommonModule,\n];\n\n@NgModule({\n  declarations: [...components],\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { AuthorizedUsersListWrapperComponent },\n    }),\n    ...modules,\n  ],\n  exports: [...modules, ...components],\n})\nexport class AuthorizedUsersListModule {}\n","import { Injectable, Optional, Inject, InjectionToken } from '@angular/core';\nimport { DEFAULT_UI_LEVELS_CONFIG, DEFAULT_UI_PERMISSIONS_CONFIG } from '../common/constants';\nimport { LevelsConfig, SafeTypeArray } from '../common/model/authorized-users.model';\nimport { LevelsMappingConfigImplementation } from '../common/services/default-level-mapping-config.service';\nexport const AuthorizedUsersJourneyConfigurationToken = new InjectionToken<\n  AuthorizedUsersJourneyConfiguration<SafeTypeArray, SafeTypeArray>\n>('AuthorizedUsersJourneyConfiguration injection token');\n\nexport enum FullAccessGranularity {\n  PER_ACCOUNT = 'individual-control',\n  SAME_FOR_ALL_ACCOUNTS = 'all-at-once',\n}\n\nexport interface AuthorizedUsersJourneyConfiguration<T extends SafeTypeArray, S extends { [k in keyof T]: any }> {\n  fullAccess: FullAccessGranularity;\n  levelsConfig: LevelsConfig<T, S>;\n}\n\nconst configDefaults: AuthorizedUsersJourneyConfiguration<\n  [boolean, boolean, boolean, boolean, boolean],\n  [string, string, string, string, string]\n> = {\n  fullAccess: FullAccessGranularity.SAME_FOR_ALL_ACCOUNTS,\n  levelsConfig: {\n    mappings: new LevelsMappingConfigImplementation(),\n    uiConfig: {\n      ...DEFAULT_UI_LEVELS_CONFIG,\n      ...DEFAULT_UI_PERMISSIONS_CONFIG,\n    },\n  },\n};\n\n@Injectable()\nexport class AuthorizedUsersJourneyConfigService {\n  private _config: AuthorizedUsersJourneyConfiguration<SafeTypeArray, SafeTypeArray>;\n\n  constructor(\n    @Optional()\n    @Inject(AuthorizedUsersJourneyConfigurationToken)\n    config: AuthorizedUsersJourneyConfiguration<SafeTypeArray, SafeTypeArray>,\n  ) {\n    config = config || {};\n    this._config = { ...configDefaults, ...config };\n  }\n\n  get defaults(): AuthorizedUsersJourneyConfiguration<SafeTypeArray, SafeTypeArray> {\n    return configDefaults;\n  }\n\n  /**\n   * Full access permission. Defines how the account owner can set access permissions: for all accounts at once, or for each account individually.\n   */\n  get fullAccess(): FullAccessGranularity {\n    return this._config.fullAccess;\n  }\n\n  /**\n   * Custom UI configuration for the permission levels and their permission sets.\n   * For more details check https://community.backbase.com/documentation/Retail-Banking/latest/authorized_user_create_reference#create_authorized_users_configuration\n   */\n  get levelsConfig(): LevelsConfig<SafeTypeArray, SafeTypeArray> {\n    return this._config.levelsConfig;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthorizedUsersJourneyConfigService } from '../services/authorized-users-journey-config.service';\n\n@Component({\n  selector: 'bb-authorized-user-create-view',\n  template: `\n    <bb-header-ui\n      headingType=\"h1\"\n      headingClasses=\"bb-heading-widget__heading px-0 pb-5\"\n      heading=\"Authorized User\"\n      i18n-heading=\"\n        Authorized User|Heading for the Create Authorized User View@@authorized-users.journey.create.heading.text\"\n    ></bb-header-ui>\n    <bb-authorized-users-create-wrapper\n      [selectedUser]=\"(selectedUser | async) || undefined\"\n      [enableAccountLevelFullAccessPermission]=\"config.fullAccess\"\n      (showAuthorizedUsers)=\"onClose()\"\n    ></bb-authorized-users-create-wrapper>\n  `,\n})\nexport class AuthorizedUserCreateViewComponent {\n  readonly selectedUser: Observable<string> = this.route.params.pipe(map((params: Params) => params['selectedUser']));\n\n  constructor(\n    readonly config: AuthorizedUsersJourneyConfigService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n  ) {}\n\n  onClose() {\n    this.router.navigate(['../list'], { relativeTo: this.route });\n  }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'bb-authorized-users-list-view',\n  template: `\n    <bb-header-ui\n      headingType=\"h1\"\n      headingClasses=\"bb-heading-widget__heading px-0 pb-5\"\n      heading=\"Authorized Users\"\n      i18n-heading=\"\n        Authorized Users|Heading for the Authorized Users List View@@authorized-users.journey.list.heading.text\"\n    ></bb-header-ui>\n    <bb-authorized-users-list-wrapper (selectedUser)=\"onUserSelected($event)\"></bb-authorized-users-list-wrapper>\n  `,\n})\nexport class AuthorizedUsersListViewComponent {\n  constructor(private readonly router: Router, private route: ActivatedRoute) {}\n\n  onUserSelected(id?: string) {\n    this.router.navigate(['../create', id ? { selectedUser: id } : {}], { relativeTo: this.route });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { provideRoutes, Route, RouterModule } from '@angular/router';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { AuthorizedUsersCreateModule } from './authorized-users-create/authorized-users-create.module';\nimport { AuthorizedUsersJourneyComponent } from './authorized-users-journey.component';\nimport { AuthorizedUsersListModule } from './authorized-users-list/authorized-users-list.module';\nimport { levelsMappingConfigToken } from './common/services/users-ui.service';\nimport { AuthorizedUsersJourneyConfigService } from './services/authorized-users-journey-config.service';\nimport { AuthorizedUserCreateViewComponent } from './views/authorized-user-create.component';\nimport { AuthorizedUsersListViewComponent } from './views/authorized-users-list.component';\n\nexport const defaultRoute: Route = {\n  path: '',\n  component: AuthorizedUsersJourneyComponent,\n  children: [\n    {\n      path: '',\n      redirectTo: 'list',\n      pathMatch: 'full',\n    },\n    {\n      path: 'list',\n      data: { title: 'Authorized users' },\n      component: AuthorizedUsersListViewComponent,\n    },\n    {\n      path: 'create',\n      data: { title: 'Add authorized user' },\n      component: AuthorizedUserCreateViewComponent,\n    },\n  ],\n};\n\nexport function getLevelsConfig(config: AuthorizedUsersJourneyConfigService) {\n  return config.levelsConfig;\n}\n\n@NgModule({\n  declarations: [AuthorizedUsersJourneyComponent, AuthorizedUsersListViewComponent, AuthorizedUserCreateViewComponent],\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { AuthorizedUsersJourneyComponent },\n    }),\n    RouterModule.forChild([]),\n    HeaderModule,\n    AuthorizedUsersListModule,\n    AuthorizedUsersCreateModule,\n  ],\n  providers: [AuthorizedUsersJourneyConfigService],\n})\nexport class AuthorizedUsersJourneyModule {\n  static forRoot(\n    data: { route: Route; [key: string]: any } = { route: defaultRoute },\n  ): ModuleWithProviders<AuthorizedUsersJourneyModule> {\n    return {\n      ngModule: AuthorizedUsersJourneyModule,\n      providers: [\n        provideRoutes([data.route]),\n        {\n          provide: levelsMappingConfigToken,\n          useFactory: getLevelsConfig,\n          deps: [AuthorizedUsersJourneyConfigService],\n        },\n      ],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["modules","components"],"mappings":"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"}