import { InjectionToken } from '@angular/core';
import { LevelsConfig, LevelsMappingConfig, LevelUIConfigHeader, PermissionUIConfig, SafeTypeArray } from '../model/authorized-users.model';
import { Observable } from 'rxjs';
import { HttpClient } from '@angular/common/http';
import { AssetsService } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
export declare const levelsMappingConfigToken: InjectionToken<LevelsMappingConfig>;
export declare class UsersUIService {
    private levelsConfig;
    private readonly http;
    private readonly assetsService;
    private readonly statusMapping;
    private readonly uiLevelsConfig;
    private readonly uiPermissionsConfig;
    private readonly authorizedPermissionLevel;
    private readonly getURIFromTxtAssetID;
    private readonly resolveTxtAsset;
    get uiLevelsConfigValue(): LevelUIConfigHeader<SafeTypeArray>[] | undefined;
    get uiPermissionsConfigValue(): PermissionUIConfig<SafeTypeArray> | undefined;
    get statusMappingValue(): LevelsMappingConfig;
    private get termsConditionsUrl();
    private fetchFile;
    termsConditionsContent(): Observable<string>;
    constructor(levelsConfig: LevelsConfig<SafeTypeArray, SafeTypeArray> | undefined, http: HttpClient, assetsService: AssetsService);
    static ɵfac: i0.ɵɵFactoryDeclaration<UsersUIService, [{ optional: true; }, null, null]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<UsersUIService>;
}
