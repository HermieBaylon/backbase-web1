import { EventEmitter } from '@angular/core';
import { AuthorizedPermission, AuthorizedPermissionLevel, LevelUIConfigHeader } from '../../model/authorized-users.model';
import * as i0 from "@angular/core";
export declare class AuthorizedUsersPermissionsLevelsTableComponent {
    selectedAccounts: AuthorizedPermission[] | undefined;
    isEditing: boolean;
    enableAccountLevelFullAccessPermission: boolean | undefined;
    levelsConfig: Array<LevelUIConfigHeader<boolean[]>> | undefined;
    updateAccount: EventEmitter<AuthorizedPermission>;
    productNumberFormat: Readonly<import("@backbase/ui-ang/payment-card-number-pipe").PaymentCardNumberFormat>;
    authorizedPermissionLevel: typeof AuthorizedPermissionLevel;
    changeAccountLevel(account: AuthorizedPermission, newLevel: AuthorizedPermissionLevel): void;
    sortKeepOriginalOrder: (..._: any) => number;
    useEditableCell(level: AuthorizedPermissionLevel): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<AuthorizedUsersPermissionsLevelsTableComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AuthorizedUsersPermissionsLevelsTableComponent, "bb-authorized-users-permissions-levels-table", never, { "selectedAccounts": "selectedAccounts"; "isEditing": "isEditing"; "enableAccountLevelFullAccessPermission": "enableAccountLevelFullAccessPermission"; "levelsConfig": "levelsConfig"; }, { "updateAccount": "updateAccount"; }, never, never>;
}
