import { EventEmitter } from '@angular/core';
import { AuthorizedUser, AuthorizedUsersList, LevelUIConfigHeader } from '../../../common/model/authorized-users.model';
import * as i0 from "@angular/core";
export declare class AuthorizedUsersListComponent {
    /**
     *  List of authorized users.
     */
    authorizedUsersList: AuthorizedUsersList | undefined;
    levelsConfig: Array<LevelUIConfigHeader<boolean[]>> | undefined;
    edit: EventEmitter<AuthorizedUser>;
    remove: EventEmitter<AuthorizedUser>;
    paused: EventEmitter<AuthorizedUser>;
    resumed: EventEmitter<AuthorizedUser>;
    createAuthorizedUser: EventEmitter<any>;
    goToAuthorizedUser(): void;
    editPermissions(user: AuthorizedUser): void;
    removeUser(user: AuthorizedUser): void;
    pauseUser(user: AuthorizedUser): void;
    resumeUser(user: AuthorizedUser): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AuthorizedUsersListComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AuthorizedUsersListComponent, "bb-authorized-users-list", never, { "authorizedUsersList": "authorizedUsersList"; "levelsConfig": "levelsConfig"; }, { "edit": "edit"; "remove": "remove"; "paused": "paused"; "resumed": "resumed"; "createAuthorizedUser": "createAuthorizedUser"; }, never, never>;
}
