import { EventEmitter } from '@angular/core';
import { BaseAuthorizedUsersCreateStep } from '../authorized-users-create-common/base-authorized-users-create-step';
import { FormBuilder } from '@angular/forms';
import * as i0 from "@angular/core";
export declare class AuthorizedUsersConfirmationComponent extends BaseAuthorizedUsersCreateStep {
    private readonly formBuilder;
    showError: boolean;
    isSaving: boolean;
    termsConditions: string | undefined;
    showErrorChange: EventEmitter<boolean>;
    confirmationDetailsForm: import("@angular/forms").FormGroup;
    saveUser(): void;
    closeError(): void;
    private getControl;
    isFieldValid(fieldName: string): boolean | null;
    hasError(field: string, type: string): any;
    constructor(formBuilder: FormBuilder);
    static ɵfac: i0.ɵɵFactoryDeclaration<AuthorizedUsersConfirmationComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AuthorizedUsersConfirmationComponent, "bb-authorized-users-confirmation", never, { "showError": "showError"; "isSaving": "isSaving"; "termsConditions": "termsConditions"; }, { "showErrorChange": "showErrorChange"; }, never, never>;
}
