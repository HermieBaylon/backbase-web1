(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/router'), require('@backbase/foundation-ang/core'), require('@backbase/ui-ang/header'), require('@angular/forms'), require('@backbase/ui-ang/alert'), require('@backbase/ui-ang/button'), require('@backbase/ui-ang/checkbox-group'), require('@backbase/ui-ang/empty-state'), require('@backbase/ui-ang/icon'), require('@backbase/ui-ang/input-checkbox'), require('@backbase/ui-ang/input-email'), require('@backbase/ui-ang/input-phone'), require('@backbase/ui-ang/input-text'), require('@backbase/ui-ang/input-validation-message'), require('@backbase/ui-ang/load-button'), require('@backbase/ui-ang/loading-indicator'), require('@backbase/ui-ang/modal'), require('@backbase/ui-ang/payment-card-number-pipe'), require('@backbase/ui-ang/stepper'), require('@backbase/ui-ang/switch'), require('@backbase/ui-ang/table'), require('rxjs'), require('rxjs/operators'), require('@backbase/data-ang/accesscontrol'), require('@backbase/data-ang/authorized-users'), require('@backbase/data-ang/arrangements'), require('@angular/common/http'), require('@backbase/ui-ang/notification'), require('@backbase/ui-ang/badge'), require('@backbase/ui-ang/dropdown-menu'), require('@ng-bootstrap/ng-bootstrap'), require('@backbase/ui-ang/phone-number-format-pipe')) :
    typeof define === 'function' && define.amd ? define('@backbase/authorized-users-journey-ang', ['exports', '@angular/common', '@angular/core', '@angular/router', '@backbase/foundation-ang/core', '@backbase/ui-ang/header', '@angular/forms', '@backbase/ui-ang/alert', '@backbase/ui-ang/button', '@backbase/ui-ang/checkbox-group', '@backbase/ui-ang/empty-state', '@backbase/ui-ang/icon', '@backbase/ui-ang/input-checkbox', '@backbase/ui-ang/input-email', '@backbase/ui-ang/input-phone', '@backbase/ui-ang/input-text', '@backbase/ui-ang/input-validation-message', '@backbase/ui-ang/load-button', '@backbase/ui-ang/loading-indicator', '@backbase/ui-ang/modal', '@backbase/ui-ang/payment-card-number-pipe', '@backbase/ui-ang/stepper', '@backbase/ui-ang/switch', '@backbase/ui-ang/table', 'rxjs', 'rxjs/operators', '@backbase/data-ang/accesscontrol', '@backbase/data-ang/authorized-users', '@backbase/data-ang/arrangements', '@angular/common/http', '@backbase/ui-ang/notification', '@backbase/ui-ang/badge', '@backbase/ui-ang/dropdown-menu', '@ng-bootstrap/ng-bootstrap', '@backbase/ui-ang/phone-number-format-pipe'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["authorized-users-journey-ang"] = {}), global.ng.common, global.ng.core, global.ng.router, global.i1$2, global.i3$4, global.ng.forms, global.i1$6, global.i3$2, global.i2$3, global.i14, global.i1, global.i3$3, global.i4$1, global.i5, global.i2$2, global.i3$1, global.i6, global.i13, global.i1$7, global.i4, global.i1$4, global.i2$4, global.table, global.rxjs, global.rxjs.operators, global.i1$3, global.i2$1, global.i3, global.ng.common.http, global.i4$2, global.i1$9, global.i2$5, global.i7, global.i9));
})(this, (function (exports, i2, i0, i1$8, i1$2, i3$4, i1$5, i1$6, i3$2, i2$3, i14, i1, i3$3, i4$1, i5, i2$2, i3$1, i6, i13, i1$7, i4, i1$4, i2$4, table, rxjs, operators, i1$3, i2$1, i3, i1$1, i4$2, i1$9, i2$5, i7, i9) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace$8 = /*#__PURE__*/_interopNamespace(i1$8);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$2);
    var i3__namespace$4 = /*#__PURE__*/_interopNamespace(i3$4);
    var i1__namespace$5 = /*#__PURE__*/_interopNamespace(i1$5);
    var i1__namespace$6 = /*#__PURE__*/_interopNamespace(i1$6);
    var i3__namespace$2 = /*#__PURE__*/_interopNamespace(i3$2);
    var i2__namespace$3 = /*#__PURE__*/_interopNamespace(i2$3);
    var i14__namespace = /*#__PURE__*/_interopNamespace(i14);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i3__namespace$3 = /*#__PURE__*/_interopNamespace(i3$3);
    var i4__namespace$1 = /*#__PURE__*/_interopNamespace(i4$1);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i2__namespace$2 = /*#__PURE__*/_interopNamespace(i2$2);
    var i3__namespace$1 = /*#__PURE__*/_interopNamespace(i3$1);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i13__namespace = /*#__PURE__*/_interopNamespace(i13);
    var i1__namespace$7 = /*#__PURE__*/_interopNamespace(i1$7);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i1__namespace$4 = /*#__PURE__*/_interopNamespace(i1$4);
    var i2__namespace$4 = /*#__PURE__*/_interopNamespace(i2$4);
    var i1__namespace$3 = /*#__PURE__*/_interopNamespace(i1$3);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i4__namespace$2 = /*#__PURE__*/_interopNamespace(i4$2);
    var i1__namespace$9 = /*#__PURE__*/_interopNamespace(i1$9);
    var i2__namespace$5 = /*#__PURE__*/_interopNamespace(i2$5);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);
    var i9__namespace = /*#__PURE__*/_interopNamespace(i9);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var AuthorizedPermissionLevel;
    (function (AuthorizedPermissionLevel) {
        AuthorizedPermissionLevel["VIEW_ONLY"] = "viewOnly";
        AuthorizedPermissionLevel["MONEY_MOVEMENT"] = "moneyMovement";
        AuthorizedPermissionLevel["FULL_ACCESS"] = "fullAccess";
    })(AuthorizedPermissionLevel || (AuthorizedPermissionLevel = {}));
    var AuthorizedUserStatus;
    (function (AuthorizedUserStatus) {
        AuthorizedUserStatus["PAUSED"] = "PAUSED";
        AuthorizedUserStatus["AWAITING_REGISTRATION"] = "AWAITING_REGISTRATION";
        AuthorizedUserStatus["ACTIVE"] = "ACTIVE";
    })(AuthorizedUserStatus || (AuthorizedUserStatus = {}));
    var AuthorizedUsersList;
    (function (AuthorizedUsersList) {
        function buildHttpResponse(levelMappignConfig) {
            return function (response) {
                if (response) {
                    var data = Array.isArray(response) ? response : [response];
                    return data.map(function (_a) {
                        var id = _a.id, said = _a.said, firstName = _a.firstName, lastName = _a.lastName, email = _a.email, mobileNumber = _a.mobileNumber, username = _a.username, status = _a.status, permissions = _a.permissions, others = __rest(_a, ["id", "said", "firstName", "lastName", "email", "mobileNumber", "username", "status", "permissions"]);
                        return Object.assign({ id: id, said: said, firstName: firstName, lastName: lastName, email: email, mobileNumber: mobileNumber, username: username, status: status, permissions: permissions.map(function (_a) {
                                var accountId = _a.accountId, level = _a.level, otherPermissionsProps = __rest(_a, ["accountId", "level"]);
                                return (Object.assign({ accountId: accountId, level: levelMappignConfig.fromStringToPermissionLevel(level || '') }, otherPermissionsProps));
                            }) }, others);
                    });
                }
                return [];
            };
        }
        AuthorizedUsersList.buildHttpResponse = buildHttpResponse;
        function mapData(authorizedUsers, accounts) {
            var items = authorizedUsers.map(function (authorizedUser) {
                var permissions = authorizedUser.permissions, others = __rest(authorizedUser, ["permissions"]);
                return Object.assign({ permissions: setAccountToPermissions(permissions, accounts) }, others);
            });
            return {
                items: items,
            };
        }
        AuthorizedUsersList.mapData = mapData;
        function setAccountToPermissions(permissions, accounts) {
            return permissions
                .map(function (permission) {
                var accountId = permission.accountId, others = __rest(permission, ["accountId"]);
                return Object.assign({ account: accounts.items.find(function (account) { return account.id === accountId; }) }, others);
            })
                .filter(function (permission) { return !!permission.account; });
        }
    })(AuthorizedUsersList || (AuthorizedUsersList = {}));
    var AuthorizedUser;
    (function (AuthorizedUser) {
        function buildHttpRequest(levelMappignConfig) {
            var formatAuthorizedPermission = function (_a) {
                var account = _a.account, level = _a.level, othersPropsPermissions = __rest(_a, ["account", "level"]);
                return (Object.assign({ accountId: account.id, level: levelMappignConfig.fromPermissionLevelToString(level) }, othersPropsPermissions));
            };
            return {
                post: function (user) {
                    var _b = user.email, email = _b === void 0 ? '' : _b, _c = user.firstName, firstName = _c === void 0 ? '' : _c, _d = user.lastName, lastName = _d === void 0 ? '' : _d, _e = user.mobileNumber, mobileNumber = _e === void 0 ? '' : _e, _f = user.permissions, permissions = _f === void 0 ? [] : _f, others = __rest(user, ["email", "firstName", "lastName", "mobileNumber", "permissions"]);
                    return Object.assign({ email: email, firstName: firstName, lastName: lastName, mobileNumber: mobileNumber, permissions: permissions.map(formatAuthorizedPermission) }, others);
                },
                put: function (permissions) {
                    return {
                        permissions: permissions.map(formatAuthorizedPermission),
                    };
                },
            };
        }
        AuthorizedUser.buildHttpRequest = buildHttpRequest;
    })(AuthorizedUser || (AuthorizedUser = {}));

    var DEFAULT_ACCOUNT_NUMBER_FORMAT = {
        length: 9,
        maskRange: [0, length - 4],
        segments: 0,
    };
    var SERVICE_AGREEMENT_DISABLED = 'DISABLED';
    var SERVICE_AGREEMENT_ENABLED = 'ENABLED';
    var DEFAULT_UI_LEVELS_CONFIG = {
        levels: [
            { icon: 'visibility', title: $localize(templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject(["View Only"], ["View Only"]))), permissionsAssigned: [true, true, false, false, false] },
            { icon: 'attach-money', title: $localize(templateObject_2$1 || (templateObject_2$1 = __makeTemplateObject(["Money Movement"], ["Money Movement"]))), permissionsAssigned: [true, true, true, false, false] },
            { icon: 'vpn-key', title: $localize(templateObject_3$1 || (templateObject_3$1 = __makeTemplateObject(["Full Access"], ["Full Access"]))), permissionsAssigned: [true, true, true, true, true] },
        ],
    };
    var DEFAULT_UI_PERMISSIONS_CONFIG = {
        permissions: [
            $localize(templateObject_4$1 || (templateObject_4$1 = __makeTemplateObject(["Balances, Transactions and Statements"], ["Balances, Transactions and Statements"]))),
            $localize(templateObject_5$1 || (templateObject_5$1 = __makeTemplateObject(["Cashflow and Spending Analysis"], ["Cashflow and Spending Analysis"]))),
            $localize(templateObject_6$1 || (templateObject_6$1 = __makeTemplateObject(["Transfers and Bill Payments"], ["Transfers and Bill Payments"]))),
            $localize(templateObject_7$1 || (templateObject_7$1 = __makeTemplateObject(["Check Deposits"], ["Check Deposits"]))),
            $localize(templateObject_8$1 || (templateObject_8$1 = __makeTemplateObject(["Other User Features"], ["Other User Features"]))),
        ],
    };
    var templateObject_1$1, templateObject_2$1, templateObject_3$1, templateObject_4$1, templateObject_5$1, templateObject_6$1, templateObject_7$1, templateObject_8$1;

    var AuthorizedUsersAccessibilityKeyboardDirective = /** @class */ (function () {
        function AuthorizedUsersAccessibilityKeyboardDirective(element) {
            this.element = element;
            element.nativeElement.tabIndex = 0;
        }
        // eslint-disable-next-line
        AuthorizedUsersAccessibilityKeyboardDirective.prototype.eventListener = function (event) {
            this.element.nativeElement.click(event);
        };
        return AuthorizedUsersAccessibilityKeyboardDirective;
    }());
    AuthorizedUsersAccessibilityKeyboardDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersAccessibilityKeyboardDirective, deps: [{ token: i0__namespace.ElementRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    AuthorizedUsersAccessibilityKeyboardDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersAccessibilityKeyboardDirective, selector: "[bbAuthorizedUsersAccessibilityKeyboard]", host: { listeners: { "keydown.enter": "eventListener($event)", "keydown.space": "eventListener($event)" } }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersAccessibilityKeyboardDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbAuthorizedUsersAccessibilityKeyboard]',
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.ElementRef }]; }, propDecorators: { eventListener: [{
                    type: i0.HostListener,
                    args: ['keydown.enter', ['$event']]
                }, {
                    type: i0.HostListener,
                    args: ['keydown.space', ['$event']]
                }] } });

    var AuthorizedUsersPermissionsLevelsTableComponent = /** @class */ (function () {
        function AuthorizedUsersPermissionsLevelsTableComponent() {
            this.isEditing = false;
            this.updateAccount = new i0.EventEmitter();
            this.productNumberFormat = DEFAULT_ACCOUNT_NUMBER_FORMAT;
            this.authorizedPermissionLevel = AuthorizedPermissionLevel;
            // eslint-disable-next-line @typescript-eslint/no-unused-vars
            this.sortKeepOriginalOrder = function () {
                var _ = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    _[_i] = arguments[_i];
                }
                return 0;
            };
        }
        AuthorizedUsersPermissionsLevelsTableComponent.prototype.changeAccountLevel = function (account, newLevel) {
            this.updateAccount.emit(Object.assign(Object.assign({}, account), { level: newLevel }));
        };
        AuthorizedUsersPermissionsLevelsTableComponent.prototype.useEditableCell = function (level) {
            var isFullAccessField = level === this.authorizedPermissionLevel.FULL_ACCESS;
            var isFullAccesEditable = isFullAccessField && this.enableAccountLevelFullAccessPermission;
            return isFullAccesEditable || !isFullAccessField;
        };
        return AuthorizedUsersPermissionsLevelsTableComponent;
    }());
    AuthorizedUsersPermissionsLevelsTableComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersPermissionsLevelsTableComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUsersPermissionsLevelsTableComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersPermissionsLevelsTableComponent, selector: "bb-authorized-users-permissions-levels-table", inputs: { selectedAccounts: "selectedAccounts", isEditing: "isEditing", enableAccountLevelFullAccessPermission: "enableAccountLevelFullAccessPermission", levelsConfig: "levelsConfig" }, outputs: { updateAccount: "updateAccount" }, ngImport: i0__namespace, template: "<table class=\"table table-striped bb-authorized-users-common-permission-table\">\n  <caption class=\"sr-only\" i18n=\"Permission Management|Table Caption@@authorized-users.common.permissions-table.caption\">\n    Permission Management\n  </caption>\n  <thead>\n    <tr>\n      <th scope=\"col\">\n        <strong>\n          <span i18n=\"Accounts and Permissions title@@authorized-users.common.permissions-table.column-1.title\">\n            Accounts and Permissions\n          </span>\n        </strong>\n      </th>\n      <th scope=\"col\" class=\"text-center\" *ngFor=\"let levelConfig of levelsConfig\">\n        <strong class=\"bb-inline-stack\">\n          <bb-icon-ui [name]=\"levelConfig.icon\" size=\"sm\" class=\"bb-inline-stack__item\"></bb-icon-ui>\n          <span class=\"bb-inline-stack__item\">\n            {{levelConfig.title}}\n          </span>\n        </strong>\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <ng-container *ngFor=\"let selectedAccount of selectedAccounts\">\n      <tr>\n        <td>\n          <div>\n            {{ selectedAccount.account.name }}\n          </div>\n          <div *ngIf=\"selectedAccount.account.displayNumber\" class=\"bb-text-support\">\n            {{ selectedAccount.account.displayNumber.slice(selectedAccount.account.displayNumber.length-9, selectedAccount.account.displayNumber.length) | paymentCardNumber: productNumberFormat }}\n          </div>\n        </td>\n        <ng-container *ngIf=\"isEditing then editMode; else viewMode\"></ng-container>\n      </tr>\n      \n      <ng-template #editMode>\n        <ng-container *ngFor=\"let permissionLevel of authorizedPermissionLevel | keyvalue : sortKeepOriginalOrder\">\n          <td class=\"text-center\">\n            <ng-container *ngIf=\"useEditableCell(permissionLevel.value); then editableTemplate; else mutedTemplate\"></ng-container>\n            \n            <ng-template #editableTemplate>\n              <bb-icon-ui\n                bbAuthorizedUsersAccessibilityKeyboard\n                [attr.data-role]=\"'user-permissions-edit-table-' + permissionLevel.value + (selectedAccount.level === permissionLevel.value ? '-checked' : '-unchecked')\"\n                [name]=\"selectedAccount.level === permissionLevel.value ? 'radio-button-checked' : 'radio-button-unchecked'\"\n                [color]=\"selectedAccount.level === permissionLevel.value ? 'primary' : 'inactive'\"\n                (click)=\"changeAccountLevel(selectedAccount, permissionLevel.value)\"\n                [attr.aria-checked]=\"selectedAccount.level === permissionLevel.value\"\n              ></bb-icon-ui>\n            </ng-template>\n\n            <ng-template #mutedTemplate>\n              <bb-icon-ui name=\"remove\" color=\"muted\" data-role=\"user-permissions-edit-table-fullAccess-muted\"></bb-icon-ui>\n              <span\n                class=\"sr-only\" \n                i18n=\"Full access can only be assigned to all accounts at once, individual account-level full access permission cannot be assigned | ScreenReader text@@authorized-users.common.permissions-table.view-mode.non-editable\"\n              >\n                Full access can only be assigned to all accounts at once, individual account-level full access permission cannot be assigned.\n              </span>\n            </ng-template>\n          </td>\n        </ng-container>\n      </ng-template>\n      \n      <ng-template #viewMode>\n        <ng-container *ngFor=\"let permissionLevel of authorizedPermissionLevel | keyvalue : sortKeepOriginalOrder\">\n          <td class=\"text-center\">\n            <bb-icon-ui\n              [name]=\"selectedAccount.level === permissionLevel.value ? 'check' : 'remove'\"\n              [color]=\"selectedAccount.level === permissionLevel.value ? 'success' : 'muted'\"\n              [attr.data-role]=\"'user-permissions-view-table-' + permissionLevel.value + (selectedAccount.level === permissionLevel.value ? '-checked' : '-unchecked')\"\n            ></bb-icon-ui>\n            <span\n              *ngIf=\"selectedAccount.level === permissionLevel.value\"\n              class=\"sr-only\" \n              i18n=\"Checked | ScreenReader text@@authorized-users.common.permissions-table.view-mode.checked\"\n            >\n              Checked\n            </span>\n            <span\n              *ngIf=\"!selectedAccount.level === permissionLevel.value\"\n              class=\"sr-only\" \n              i18n=\"Unchecked | ScreenReader text@@authorized-users.common.permissions-table.view-mode.unchecked\"\n            >\n              Unchecked\n            </span>\n          </td>\n        </ng-container>\n      </ng-template>\n      \n    </ng-container>\n  </tbody>\n</table>", components: [{ type: i1__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i2__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: AuthorizedUsersAccessibilityKeyboardDirective, selector: "[bbAuthorizedUsersAccessibilityKeyboard]" }], pipes: { "paymentCardNumber": i4__namespace.PaymentCardNumberPipe, "keyvalue": i2__namespace.KeyValuePipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersPermissionsLevelsTableComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-users-permissions-levels-table',
                        templateUrl: './permissions-table.component.html',
                    }]
            }], propDecorators: { selectedAccounts: [{
                    type: i0.Input
                }], isEditing: [{
                    type: i0.Input
                }], enableAccountLevelFullAccessPermission: [{
                    type: i0.Input
                }], levelsConfig: [{
                    type: i0.Input
                }], updateAccount: [{
                    type: i0.Output
                }] } });

    var AccountList;
    (function (AccountList) {
        function fromHttpResponse(response) {
            return {
                items: response.map(function (item) { return ({
                    id: item.id,
                    name: item.name,
                    alias: item.bankAlias,
                    IBAN: item.IBAN,
                    BBAN: item.BBAN,
                    number: item.number,
                    currency: item.currency,
                    displayNumber: item.IBAN || item.BBAN || item.number,
                }); }),
            };
        }
        AccountList.fromHttpResponse = fromHttpResponse;
    })(AccountList || (AccountList = {}));

    var ServiceAgreementRequest;
    (function (ServiceAgreementRequest) {
        function toHttpRequest(state) {
            return {
                state: state,
            };
        }
        ServiceAgreementRequest.toHttpRequest = toHttpRequest;
        function fromHttpResponse(response) {
            return response.body;
        }
        ServiceAgreementRequest.fromHttpResponse = fromHttpResponse;
    })(ServiceAgreementRequest || (ServiceAgreementRequest = {}));

    var LevelsMappingConfigImplementation = /** @class */ (function () {
        function LevelsMappingConfigImplementation() {
        }
        LevelsMappingConfigImplementation.prototype.fromStringToPermissionLevel = function (value) {
            if (value.toLocaleLowerCase() === 'view only') {
                return AuthorizedPermissionLevel.VIEW_ONLY;
            }
            else if (value.toLocaleLowerCase() === 'money movement') {
                return AuthorizedPermissionLevel.MONEY_MOVEMENT;
            }
            else if (value.toLocaleLowerCase() === 'full access') {
                return AuthorizedPermissionLevel.FULL_ACCESS;
            }
            else {
                return AuthorizedPermissionLevel.VIEW_ONLY;
            }
        };
        LevelsMappingConfigImplementation.prototype.fromPermissionLevelToString = function (value) {
            switch (value) {
                case AuthorizedPermissionLevel.VIEW_ONLY:
                    return 'View Only';
                case AuthorizedPermissionLevel.MONEY_MOVEMENT:
                    return 'Money Movement';
                case AuthorizedPermissionLevel.FULL_ACCESS:
                    return 'Full Access';
                default:
                    return 'View Only';
            }
        };
        return LevelsMappingConfigImplementation;
    }());

    var levelsMappingConfigToken = new i0.InjectionToken('level injection token');
    var UsersUIService = /** @class */ (function () {
        function UsersUIService(
        // eslint-disable-next-line
        levelsConfig, http, assetsService) {
            var _this = this;
            var _a, _b, _c, _d, _e;
            this.levelsConfig = levelsConfig;
            this.http = http;
            this.assetsService = assetsService;
            this.authorizedPermissionLevel = [
                AuthorizedPermissionLevel.VIEW_ONLY,
                AuthorizedPermissionLevel.MONEY_MOVEMENT,
                AuthorizedPermissionLevel.FULL_ACCESS,
            ];
            this.getURIFromTxtAssetID = function (assetId) { return assetId + ".txt"; };
            // eslint-disable-next-line @typescript-eslint/member-ordering
            this.resolveTxtAsset = this.assetsService.createAssetsResolver({
                widgetName: 'bb-authorized-users-journey-ang',
                getURIFromAssetID: this.getURIFromTxtAssetID,
            });
            this.fetchFile = function (fileLocation) {
                return _this.http.get(fileLocation, { responseType: 'text' });
            };
            this.statusMapping = ((_a = this === null || this === void 0 ? void 0 : this.levelsConfig) === null || _a === void 0 ? void 0 : _a.mappings)
                ? this.levelsConfig.mappings
                : new LevelsMappingConfigImplementation();
            var mapLevels = function (value, index) { return (Object.assign(Object.assign({}, value), { level: _this.authorizedPermissionLevel[index], validate: function () {
                    return this.level !== AuthorizedPermissionLevel.FULL_ACCESS;
                } })); };
            this.uiLevelsConfig = ((_c = (_b = this === null || this === void 0 ? void 0 : this.levelsConfig) === null || _b === void 0 ? void 0 : _b.uiConfig) === null || _c === void 0 ? void 0 : _c.levels)
                ? this.levelsConfig.uiConfig.levels.map(mapLevels)
                : DEFAULT_UI_LEVELS_CONFIG.levels.map(mapLevels);
            this.uiPermissionsConfig = ((_e = (_d = this === null || this === void 0 ? void 0 : this.levelsConfig) === null || _d === void 0 ? void 0 : _d.uiConfig) === null || _e === void 0 ? void 0 : _e.permissions)
                ? { permissions: this.levelsConfig.uiConfig.permissions }
                : DEFAULT_UI_PERMISSIONS_CONFIG;
        }
        Object.defineProperty(UsersUIService.prototype, "uiLevelsConfigValue", {
            get: function () {
                return this.uiLevelsConfig;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UsersUIService.prototype, "uiPermissionsConfigValue", {
            get: function () {
                return this.uiPermissionsConfig;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UsersUIService.prototype, "statusMappingValue", {
            get: function () {
                return this.statusMapping;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UsersUIService.prototype, "termsConditionsUrl", {
            get: function () {
                return this.resolveTxtAsset('terms-and-conditions');
            },
            enumerable: false,
            configurable: true
        });
        UsersUIService.prototype.termsConditionsContent = function () {
            return this.termsConditionsUrl.pipe(operators.first(), operators.switchMap(this.fetchFile), operators.catchError(function () {
                console.warn('No terms and conditions file was found');
                return rxjs.of('');
            }));
        };
        return UsersUIService;
    }());
    UsersUIService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: UsersUIService, deps: [{ token: levelsMappingConfigToken, optional: true }, { token: i1__namespace$1.HttpClient }, { token: i1__namespace$2.AssetsService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    UsersUIService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: UsersUIService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: UsersUIService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [levelsMappingConfigToken]
                        }, {
                            type: i0.Optional
                        }] }, { type: i1__namespace$1.HttpClient }, { type: i1__namespace$2.AssetsService }];
        } });

    var UserDataService = /** @class */ (function () {
        function UserDataService(accessGroupDataHttpService, userDataHttpService, productSummaryDataHttpService, usersUIService) {
            this.accessGroupDataHttpService = accessGroupDataHttpService;
            this.userDataHttpService = userDataHttpService;
            this.productSummaryDataHttpService = productSummaryDataHttpService;
            this.usersUIService = usersUIService;
            this.statusMapping = this.usersUIService.statusMappingValue;
            this.accounts = this.productSummaryDataHttpService
                .getArrangementsByBusinessFunction({
                businessFunction: 'Product Summary',
                resourceName: 'Product Summary',
                privilege: 'view',
                size: 1000000,
            })
                .pipe(operators.map(AccountList.fromHttpResponse));
            this.authorizedUsersList = this.userDataHttpService
                .getAuthorizedUsers()
                .pipe(operators.map(AuthorizedUsersList.buildHttpResponse(this.statusMapping)));
        }
        UserDataService.prototype.setStatusForServiceAgreements = function (userSaid, status) {
            return this.accessGroupDataHttpService.putServiceAgreementState({
                serviceAgreementId: userSaid,
                serviceAgreementStatePut: ServiceAgreementRequest.toHttpRequest(status),
            });
        };
        UserDataService.prototype.updateAuthorizedUserStatus = function (id, status) {
            return this.userDataHttpService.updateStatusForAuthorizedUser({
                authorizedUserId: id,
                updateAuthorizedUserStatus: { enabled: status === i1$3.Status.ENABLED },
            });
        };
        UserDataService.prototype.addAuthorizedUser = function (user) {
            return this.userDataHttpService.createAuthorizedUser({
                postAuthorizedUser: AuthorizedUser.buildHttpRequest(this.statusMapping).post(user),
            });
        };
        UserDataService.prototype.retrieveAuthorizedUser = function () {
            return rxjs.combineLatest([this.authorizedUsersList, this.accounts]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), authorizedUsers = _b[0], accounts = _b[1];
                return AuthorizedUsersList.mapData(authorizedUsers, accounts);
            }));
        };
        UserDataService.prototype.getAllArrangements = function () {
            return this.accounts;
        };
        UserDataService.prototype.updateAuthorizedUser = function (id, permissions) {
            return this.userDataHttpService.updatePermissionsForAuthorizedUser({
                authorizedUserId: id,
                putAuthorizedUserPermissions: AuthorizedUser.buildHttpRequest(this.statusMapping).put(permissions),
            });
        };
        UserDataService.prototype.removeAuthorizedUser = function (id) {
            return this.userDataHttpService.deleteAuthorizedUser({
                authorizedUserId: id,
            });
        };
        return UserDataService;
    }());
    UserDataService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: UserDataService, deps: [{ token: i1__namespace$3.ServiceAgreementHttpService }, { token: i2__namespace$1.AuthorizedUserService }, { token: i3__namespace.ProductSummaryHttpService }, { token: UsersUIService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    UserDataService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: UserDataService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: UserDataService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$3.ServiceAgreementHttpService }, { type: i2__namespace$1.AuthorizedUserService }, { type: i3__namespace.ProductSummaryHttpService }, { type: UsersUIService }]; } });

    var modules$2 = [i1.IconModule, table.TableModule, i4.PaymentCardNumberModule];
    var declarations = [AuthorizedUsersPermissionsLevelsTableComponent, AuthorizedUsersAccessibilityKeyboardDirective];
    var AuthorizedUsersCommonModule = /** @class */ (function () {
        function AuthorizedUsersCommonModule() {
        }
        return AuthorizedUsersCommonModule;
    }());
    AuthorizedUsersCommonModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersCommonModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AuthorizedUsersCommonModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersCommonModule, declarations: [AuthorizedUsersPermissionsLevelsTableComponent, AuthorizedUsersAccessibilityKeyboardDirective], imports: [i2.CommonModule, i1.IconModule, table.TableModule, i4.PaymentCardNumberModule], exports: [i1.IconModule, table.TableModule, i4.PaymentCardNumberModule, AuthorizedUsersPermissionsLevelsTableComponent, AuthorizedUsersAccessibilityKeyboardDirective] });
    AuthorizedUsersCommonModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersCommonModule, providers: [UserDataService, UsersUIService], imports: [__spreadArray([i2.CommonModule], __read(modules$2)), i1.IconModule, table.TableModule, i4.PaymentCardNumberModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersCommonModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i2.CommonModule], __read(modules$2)),
                        providers: [UserDataService, UsersUIService],
                        declarations: __spreadArray([], __read(declarations)),
                        exports: __spreadArray(__spreadArray([], __read(modules$2)), __read(declarations)),
                    }]
            }] });

    var AuthorizedUsersStepperComponent = /** @class */ (function () {
        function AuthorizedUsersStepperComponent() {
            this.currentStep = 1;
        }
        return AuthorizedUsersStepperComponent;
    }());
    AuthorizedUsersStepperComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersStepperComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUsersStepperComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersStepperComponent, selector: "bb-authorized-users-stepper", inputs: { currentStep: "currentStep" }, ngImport: i0__namespace, template: "<bb-stepper-ui>\n  <bb-stepper-step-ui \n    label=\"User details\"\n    class=\"bb-stack__item\"\n    i18n-label=\"User details@@authorized-users.create.stepper.header.step1\"\n    [isChecked]=\"currentStep > 1\"\n    [isActive]=\"currentStep >= 1\"\n    ariaLabel=\"Step 1 out of 4\"\n    i18n-ariaLabel=\"Step 1 out of 4@@authorized-users.create.stepper.aria.label.step1\"\n  >\n  </bb-stepper-step-ui>\n  <bb-stepper-step-ui \n    class=\"bb-stack__item\" \n    label=\"Accounts\"\n    i18n-label=\"Accounts@@authorized-users.create.stepper.header.step2\"\n    [isChecked]=\"currentStep > 2\"\n    [isActive]=\"currentStep >= 2\" \n    ariaLabel=\"Step 2 out of 4\"\n    i18n-ariaLabel=\"Step 2 out of 4@@authorized-users.create.stepper.aria.label.step2\"\n  >\n  </bb-stepper-step-ui>\n  <bb-stepper-step-ui \n    class=\"bb-stack__item\" \n    label=\"Permissions\" \n    i18n-label=\"Permissions@@authorized-users.create.stepper.header.step3\"\n    [isActive]=\"currentStep >= 3\" \n    [isChecked]=\"currentStep > 3\"\n    ariaLabel=\"Step 3 out of 4\"\n    i18n-ariaLabel=\"Step 3 out of 4@@authorized-users.create.stepper.aria.label.step3\"\n  >\n  </bb-stepper-step-ui>\n  <bb-stepper-step-ui \n    class=\"bb-stack__item\" \n    label=\"Confirmation\" \n    i18n-label=\"Confirmation@@authorized-users.create.stepper.header.step4\"\n    [isActive]=\"currentStep >= 4\" \n    ariaLabel=\"Step 4 out of 4\"\n    i18n-ariaLabel=\"Step 3 out of 4@@authorized-users.create.stepper.aria.label.step4\"\n  >\n  </bb-stepper-step-ui>\n</bb-stepper-ui>", components: [{ type: i1__namespace$4.StepperComponent, selector: "bb-stepper-ui", outputs: ["select"] }, { type: i1__namespace$4.StepperStepComponent, selector: "bb-stepper-step-ui", inputs: ["label", "stateLabel", "data", "ariaLabel", "isCurrent", "isChecked", "isActive"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersStepperComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-users-stepper',
                        templateUrl: 'authorized-users-stepper.component.html',
                    }]
            }], propDecorators: { currentStep: [{
                    type: i0.Input
                }] } });

    var AuthorizedUserEditStepperComponent = /** @class */ (function () {
        function AuthorizedUserEditStepperComponent() {
            this.currentStep = 1;
        }
        return AuthorizedUserEditStepperComponent;
    }());
    AuthorizedUserEditStepperComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUserEditStepperComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUserEditStepperComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUserEditStepperComponent, selector: "bb-authorized-users-edit-stepper", inputs: { currentStep: "currentStep" }, ngImport: i0__namespace, template: "<div class=\"bb-authorized-users-stepper\">\n  <bb-stepper-ui class=\"col-8\">\n    <bb-stepper-step-ui \n      class=\"bb-stack__item\"\n      label=\"Accounts\"\n      i18n-label=\"Accounts@@authorized-users.edit.stepper.header.step1\"\n      [isChecked]=\"currentStep > 1\"\n      [isActive]=\"currentStep >= 1\"\n      ariaLabel=\"Step 1 out of 3\"\n      i18n-ariaLabel=\"Step 1 out of 3@@authorized-users.edit.stepper.aria.label.step1\"\n    >\n    </bb-stepper-step-ui>\n    <bb-stepper-step-ui \n      class=\"bb-stack__item\" \n      label=\"Permissions\" \n      i18n-label=\"Permissions@@authorized-users.edit.stepper.header.step2\"\n      [isChecked]=\"currentStep > 2\"\n      [isActive]=\"currentStep >= 2\" \n      ariaLabel=\"Step 2 out of 3\"\n      i18n-ariaLabel=\"Step 2 out of 3@@authorized-users.edit.stepper.aria.label.step2\"\n    >\n    </bb-stepper-step-ui>\n    <bb-stepper-step-ui \n      class=\"bb-stack__item\" \n      label=\"Confirmation\"\n      i18n-label=\"Permissions@@authorized-users.edit.stepper.header.step3\"\n      [isActive]=\"currentStep >= 3\" \n      [isChecked]=\"currentStep > 3\"\n      ariaLabel=\"Step 3 out of 3\"\n      i18n-ariaLabel=\"Step 3 out of 3@@authorized-users.edit.stepper.aria.label.step3\"\n    >\n    </bb-stepper-step-ui>\n  </bb-stepper-ui>\n</div>", components: [{ type: i1__namespace$4.StepperComponent, selector: "bb-stepper-ui", outputs: ["select"] }, { type: i1__namespace$4.StepperStepComponent, selector: "bb-stepper-step-ui", inputs: ["label", "stateLabel", "data", "ariaLabel", "isCurrent", "isChecked", "isActive"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUserEditStepperComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-users-edit-stepper',
                        templateUrl: 'authorized-users-edit-stepper.component.html',
                    }]
            }], propDecorators: { currentStep: [{
                    type: i0.Input
                }] } });

    var AuthorizedUsersCreateContainerComponent = /** @class */ (function () {
        function AuthorizedUsersCreateContainerComponent() {
            this.nextStep = 1;
        }
        AuthorizedUsersCreateContainerComponent.prototype.nextStepIndex = function () {
            return this.nextStep++;
        };
        return AuthorizedUsersCreateContainerComponent;
    }());
    AuthorizedUsersCreateContainerComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersCreateContainerComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUsersCreateContainerComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersCreateContainerComponent, selector: "bb-authorized-users-create-container", ngImport: i0__namespace, template: "<div class=\"card\">\n  <div class=\"card-body modal-body\">\n    <ng-content></ng-content>\n  </div>\n</div>" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersCreateContainerComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-users-create-container',
                        templateUrl: 'authorized-users-create-container.component.html',
                    }]
            }] });

    // eslint-disable-next-line
    var BaseAuthorizedUsersCreateStep = /** @class */ (function () {
        function BaseAuthorizedUsersCreateStep() {
            this.next = new i0.EventEmitter();
            this.back = new i0.EventEmitter();
            this.saveOnly = new i0.EventEmitter();
            this.cancel = new i0.EventEmitter();
            this.isFirstStep = false;
        }
        BaseAuthorizedUsersCreateStep.prototype.goNext = function (authorizedUser) {
            this.next.emit(authorizedUser);
        };
        BaseAuthorizedUsersCreateStep.prototype.goBack = function () {
            this.back.emit();
        };
        BaseAuthorizedUsersCreateStep.prototype.saveChanges = function (authorizedUser) {
            this.saveOnly.emit(authorizedUser);
        };
        BaseAuthorizedUsersCreateStep.prototype.abort = function () {
            this.cancel.emit();
        };
        BaseAuthorizedUsersCreateStep.prototype.ngOnInit = function () {
            if (!this.authorizedUser) {
                throw new Error("\"authorizedUser\" input is required in \"" + this.constructor.name + "\"");
            }
        };
        return BaseAuthorizedUsersCreateStep;
    }());
    BaseAuthorizedUsersCreateStep.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BaseAuthorizedUsersCreateStep, deps: [], target: i0__namespace.ɵɵFactoryTarget.Directive });
    BaseAuthorizedUsersCreateStep.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: BaseAuthorizedUsersCreateStep, inputs: { authorizedUser: "authorizedUser", isFirstStep: "isFirstStep", enableAccountLevelFullAccessPermission: "enableAccountLevelFullAccessPermission", levelsConfig: "levelsConfig", permissionsConfig: "permissionsConfig" }, outputs: { next: "next", back: "back", saveOnly: "saveOnly", cancel: "cancel" }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BaseAuthorizedUsersCreateStep, decorators: [{
                type: i0.Directive
            }], propDecorators: { next: [{
                    type: i0.Output
                }], back: [{
                    type: i0.Output
                }], saveOnly: [{
                    type: i0.Output
                }], cancel: [{
                    type: i0.Output
                }], authorizedUser: [{
                    type: i0.Input
                }], isFirstStep: [{
                    type: i0.Input
                }], enableAccountLevelFullAccessPermission: [{
                    type: i0.Input
                }], levelsConfig: [{
                    type: i0.Input
                }], permissionsConfig: [{
                    type: i0.Input
                }] } });

    var AuthorizedUsersUserDetailsComponent = /** @class */ (function (_super) {
        __extends(AuthorizedUsersUserDetailsComponent, _super);
        function AuthorizedUsersUserDetailsComponent(formBuilder) {
            var _this = _super.call(this) || this;
            _this.formBuilder = formBuilder;
            _this.suscription$ = new rxjs.Subscription();
            _this.validateEmailMatch = function () {
                var emailField = _this.formGetter('email', 'emailGroup');
                var confirmationEmailField = _this.formGetter('confirmationEmail', 'emailGroup');
                // eslint-disable-next-line no-null/no-null
                return (emailField === null || emailField === void 0 ? void 0 : emailField.value) !== (confirmationEmailField === null || confirmationEmailField === void 0 ? void 0 : confirmationEmailField.value) ? { validateMailConfirmation: true } : null;
            };
            return _this;
        }
        AuthorizedUsersUserDetailsComponent.prototype.ngOnInit = function () {
            var _this = this;
            var _a;
            _super.prototype.ngOnInit.call(this);
            this.userDetailsForm = this.formBuilder.group({
                firstName: [this.authorizedUser.firstName, i1$5.Validators.required],
                lastName: [this.authorizedUser.lastName, i1$5.Validators.required],
                emailGroup: this.formBuilder.group({
                    email: [this.authorizedUser.email, i1$5.Validators.compose([i1$5.Validators.required, i1$5.Validators.email])],
                    confirmationEmail: [this.authorizedUser.email, i1$5.Validators.compose([i1$5.Validators.required, i1$5.Validators.email])],
                }),
                mobileNumber: [this.authorizedUser.mobileNumber, i1$5.Validators.required],
            });
            this.suscription$.add((_a = this.formGetter('emailGroup')) === null || _a === void 0 ? void 0 : _a.valueChanges.subscribe(function () {
                var confirmationEmailControl = _this.formGetter('confirmationEmail', 'emailGroup');
                if (confirmationEmailControl) {
                    confirmationEmailControl.setValidators([i1$5.Validators.required, i1$5.Validators.email, _this.validateEmailMatch]);
                    confirmationEmailControl.updateValueAndValidity({ emitEvent: false });
                }
            }));
        };
        AuthorizedUsersUserDetailsComponent.prototype.isFieldValid = function (fieldName, fieldGroup) {
            var controlField = this.formGetter(fieldName, fieldGroup);
            return !!controlField && (controlField.valid || controlField.untouched);
        };
        AuthorizedUsersUserDetailsComponent.prototype.save = function () {
            var _a, _b;
            if ((_a = this.userDetailsForm) === null || _a === void 0 ? void 0 : _a.valid) {
                this.goNext(this.formatAuthorizedUserValue());
            }
            else {
                (_b = this.userDetailsForm) === null || _b === void 0 ? void 0 : _b.markAllAsTouched();
            }
        };
        AuthorizedUsersUserDetailsComponent.prototype.formatAuthorizedUserValue = function () {
            var _d = this.userDetailsForm.value, firstName = _d.firstName, lastName = _d.lastName, email = _d.emailGroup.email, mobileNumber = _d.mobileNumber;
            return { firstName: firstName, lastName: lastName, email: email, mobileNumber: mobileNumber };
        };
        AuthorizedUsersUserDetailsComponent.prototype.formGetter = function (fieldName, fieldGroup) {
            var _a, _b, _c;
            var controlField = !!fieldGroup
                ? (_b = (_a = this.userDetailsForm) === null || _a === void 0 ? void 0 : _a.get(fieldGroup)) === null || _b === void 0 ? void 0 : _b.get(fieldName)
                : (_c = this.userDetailsForm) === null || _c === void 0 ? void 0 : _c.get(fieldName);
            return controlField;
        };
        AuthorizedUsersUserDetailsComponent.prototype.ngOnDestroy = function () {
            this.suscription$.unsubscribe();
        };
        return AuthorizedUsersUserDetailsComponent;
    }(BaseAuthorizedUsersCreateStep));
    AuthorizedUsersUserDetailsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersUserDetailsComponent, deps: [{ token: i1__namespace$5.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUsersUserDetailsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersUserDetailsComponent, selector: "bb-authorized-users-user-details", usesInheritance: true, ngImport: i0__namespace, template: "<form [formGroup]=\"userDetailsForm\" (submit)=\"save()\">\n  <div class=\"bb-block bb-block--lg\" bbAuthorizedUsersAccessibilityKeyboard>\n    <h2 \n      data-role=\"user-details-header\"\n      i18n=\"user creation details header@@authorized.users.createUser.header\"\n    >\n      Who would you like to give access to?\n    </h2>\n  </div>\n\n  <div class=\"bb-block\">\n    <div class=\"row\">\n      <div class=\"col-12 col-sm-6 form-group\">\n        <bb-input-text-ui\n          formControlName=\"firstName\"\n          data-role=\"user-details-first-name\"\n          label=\"First Name\"\n          i18n-label=\"user creation details first name@@authorized.users.createUser.label.firstName\"\n          maxLength=\"256\"\n        ></bb-input-text-ui>\n        <bb-input-validation-message-ui [showErrors]=\"!isFieldValid('firstName')\">\n          <span \n            data-role=\"user-details-first-name-validation-msg\"\n            i18n=\"user creation first name required error message@@authorized.users.createUser.errorMessage.required.firstName\">\n            First name is required\n          </span>\n        </bb-input-validation-message-ui>  \n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12 col-sm-6 form-group\">\n        <bb-input-text-ui\n          formControlName=\"lastName\"\n          data-role=\"user-details-last-name\"\n          label=\"Last Name\"\n          i18n-label=\"user creation details last name@@authorized.users.createUser.label.lastName\"\n          maxLength=\"256\"\n        ></bb-input-text-ui>\n        <bb-input-validation-message-ui [showErrors]=\"!isFieldValid('lastName')\">\n          <span \n            data-role=\"user-details-last-name-validation-msg\"\n            i18n=\"user creation last name required error message@@authorized.users.createUser.errorMessage.required.lastName\">\n            Last name is required\n          </span>\n        </bb-input-validation-message-ui>\n      </div>\n    </div>\n    <ng-container formGroupName=\"emailGroup\">\n      <div class=\"row\">\n        <div class=\"col-12 col-sm-6 form-group\">\n          <bb-input-email-ui\n            formControlName=\"email\"\n            data-role=\"user-details-email\"\n            label=\"Email\"\n            i18n-label=\"user creation details email@@authorized.users.createUser.label.email\"\n            required=\"true\"\n          ></bb-input-email-ui>\n          <ng-container *ngIf=\"isFieldValid('email', 'emailGroup')\">\n            <span \n              class=\"bb-text-support text-small\" \n              i18n=\"user creation confirmation support text@@authorized.users.createUser.info.emailConfirmation\"\n            >\n            We will send a confirmation to their email address.\n            </span> \n          </ng-container>\n          <bb-input-validation-message-ui [showErrors]=\"!isFieldValid('email', 'emailGroup')\" data-role=\"user-details-email-validation-msg\">\n            <ng-container *ngFor=\"let error of formGetter('email', 'emailGroup')?.errors | keyvalue; first as first\">\n                <ng-container *ngIf=\"first\" [ngSwitch]=\"error.key\">\n                  <span\n                    *ngSwitchCase=\"'required'\"\n                    i18n=\"user creation email required error message@@authorized.users.createUser.errorMessage.required.email\"\n                  >\n                    Email address is required\n                  </span>\n                  <span\n                    *ngSwitchCase=\"'email'\"\n                    i18n=\"invalid email format@@authorized.users.createUser.errorMessage.format.confirmationEmail\"\n                  >\n                  Invalid email format\n                  </span>\n                </ng-container>\n              </ng-container>\n          </bb-input-validation-message-ui>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12 col-sm-6 form-group\">\n          <bb-input-email-ui\n            formControlName=\"confirmationEmail\"\n            data-role=\"user-details-confirmation-email\"\n            label=\"Confirm Email\"\n            i18n-label=\"user creation details confirm email@@authorized.users.createUser.label.confirmationEmail\"\n            required=\"true\"\n          ></bb-input-email-ui>\n          <bb-input-validation-message-ui [showErrors]=\"!isFieldValid('confirmationEmail', 'emailGroup')\" data-role=\"user-details-confirmation-email-validation-msg\">\n            <ng-container *ngFor=\"let error of formGetter('confirmationEmail', 'emailGroup')?.errors | keyvalue; first as first\">\n              <ng-container *ngIf=\"first\" [ngSwitch]=\"error.key\">\n                <span\n                  *ngSwitchCase=\"'required'\"\n                  i18n=\"confirm email address is required@@authorized.users.createUser.errorMessage.required.confirmationEmail\"\n                >\n                  Confirm email address is required\n                </span>\n                <span\n                  *ngSwitchCase=\"'email'\"\n                  i18n=\"invalid email format@@authorized.users.createUser.errorMessage.format.confirmationEmail\"\n                >\n                Invalid email format\n                </span>\n                <span\n                  *ngSwitchCase=\"'validateMailConfirmation'\"\n                  i18n=\"email addresses do not match@@authorized.users.createUser.errorMessage.match.confirmationEmail\"\n                >\n                Email addresses do not match\n                </span>\n              </ng-container>\n            </ng-container>\n          </bb-input-validation-message-ui>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"row\">\n      <div class=\"col-12 col-sm-6 form-group\">\n        <bb-input-phone-ui\n          formControlName=\"mobileNumber\"\n          data-role=\"user-details-phone-number\"\n          label=\"Phone Number\"\n          i18n-label=\"user creation details phone number@@authorized.users.createUser.label.phoneNumber\"\n          required=\"true\"\n        ></bb-input-phone-ui>\n        <bb-input-validation-message-ui [showErrors]=\"!isFieldValid('mobileNumber')\">\n          <span \n            data-role=\"user-details-phone-number-validation-msg\"\n            i18n=\"user creation phone number required error message@@authorized.users.createUser.errorMessage.required.phoneNumber\">\n            Phone number is required\n          </span>\n        </bb-input-validation-message-ui>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"bb-button-bar\">    \n    <button \n      bbButton \n      data-role=\"user-details-continue-button\"\n      i18n=\"Continue button text@@authorized-users.create.details.continue.button\"\n      class=\"bb-button-bar__button\" \n      type=\"submit\"\n    >Continue</button>\n    <button \n      bbButton \n      data-role=\"user-details-cancel-button\"\n      color=\"link\"\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      i18n=\"Cancel button text@@authorized-users.create.details.cancel.button\"\n      (click)=\"abort()\"\n    >Cancel</button>\n  </div>\n</form>\n", components: [{ type: i2__namespace$2.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i3__namespace$1.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: i4__namespace$1.InputEmailComponent, selector: "bb-input-email-ui", inputs: ["placeholder", "maxLength", "minLength", "readonly", "autocomplete"] }, { type: i5__namespace.InputPhoneComponent, selector: "bb-input-phone-ui", inputs: ["placeholder", "maxLength", "minLength", "readonly", "ariaLabel", "autocomplete", "countryList", "dropdownPosition", "clearable", "searchable", "defaultCountryIsoCode", "enableCountryCode"] }], directives: [{ type: i1__namespace$5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$5.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: AuthorizedUsersAccessibilityKeyboardDirective, selector: "[bbAuthorizedUsersAccessibilityKeyboard]" }, { type: i1__namespace$5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$5.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$5.FormGroupName, selector: "[formGroupName]", inputs: ["formGroupName"] }, { type: i1__namespace$5.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2__namespace.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i2__namespace.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i3__namespace$2.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "keyvalue": i2__namespace.KeyValuePipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersUserDetailsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-users-user-details',
                        templateUrl: 'authorized-users-user-details.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$5.FormBuilder }]; } });

    var AuthorizedUsersAccountsComponent = /** @class */ (function (_super) {
        __extends(AuthorizedUsersAccountsComponent, _super);
        function AuthorizedUsersAccountsComponent() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.model = {};
            _this.productNumberFormat = DEFAULT_ACCOUNT_NUMBER_FORMAT;
            _this.showError = false;
            return _this;
        }
        AuthorizedUsersAccountsComponent.prototype.save = function () {
            if (this.hasAccounts()) {
                this.goNext({ permissions: this.cleanPermissions(this.createAuthorizedPermission()) });
            }
            else {
                this.showError = true;
            }
        };
        AuthorizedUsersAccountsComponent.prototype.closeError = function () {
            this.showError = false;
        };
        AuthorizedUsersAccountsComponent.prototype.cleanPermissions = function (permissions) {
            var fullAccessPermissions = permissions.filter(function (permission) { return permission.level === AuthorizedPermissionLevel.FULL_ACCESS; });
            if (fullAccessPermissions.length > 0 && fullAccessPermissions.length !== this.accounts.length) {
                return permissions.map(function (permission) { return (Object.assign(Object.assign({}, permission), { level: AuthorizedPermissionLevel.VIEW_ONLY })); });
            }
            else {
                return __spreadArray([], __read(permissions));
            }
        };
        AuthorizedUsersAccountsComponent.prototype.createAuthorizedPermission = function () {
            var _this = this;
            // Every member of the model has the account id as a key
            return Object.keys(this.model)
                .filter(function (accountId) { return !!_this.model[accountId]; })
                .map(function (accountId) { return ({
                account: _this.accounts.find(function (account) { return account.id === accountId; }),
                level: _this.setLevelToPermissionByAccount(accountId),
            }); });
        };
        AuthorizedUsersAccountsComponent.prototype.setLevelToPermissionByAccount = function (account) {
            if (this.authorizedUser.permissions) {
                var permission = this.authorizedUser.permissions.find(function (item) { return item.account.id === account; });
                return (permission === null || permission === void 0 ? void 0 : permission.level) ? permission.level : AuthorizedPermissionLevel.VIEW_ONLY;
            }
            else {
                return AuthorizedPermissionLevel.VIEW_ONLY;
            }
        };
        AuthorizedUsersAccountsComponent.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
            this.setPresetPermissions(this.authorizedUser.permissions);
        };
        AuthorizedUsersAccountsComponent.prototype.setPresetPermissions = function (permissions) {
            var _this = this;
            if (permissions === void 0) { permissions = []; }
            permissions.forEach(function (data) {
                _this.model[data.account.id] = true;
            });
        };
        AuthorizedUsersAccountsComponent.prototype.hasAccounts = function () {
            var _this = this;
            return Object.keys(this.model).reduce(function (prev, curr) { return (_this.model[curr] ? prev + 1 : prev); }, 0) > 0;
        };
        return AuthorizedUsersAccountsComponent;
    }(BaseAuthorizedUsersCreateStep));
    AuthorizedUsersAccountsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersAccountsComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUsersAccountsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersAccountsComponent, selector: "bb-authorized-users-accounts", inputs: { accounts: "accounts" }, usesInheritance: true, ngImport: i0__namespace, template: "<form \n  #authorizedUsersAccountForm=\"ngForm\" \n  (ngSubmit)=\"save()\" \n  data-role=\"user-accounts-form\"\n>\n  <div class=\"bb-block bb-block--xl\" bbAuthorizedUsersAccessibilityKeyboard>\n    <h2 \n      data-role=\"user-accounts-header\"\n      i18n=\"user accounts selection header@@authorized.users.accounts.header\"\n    >\n      Which accounts will they have access to?\n    </h2>\n    <p \n      class=\"bb-text-support text-small\" \n      data-role=\"user-accounts-subHeader\"\n      i18n=\"user accounts selection subHeader@@authorized.users.accounts.subHeader\"\n    >\n      You will be able to specify permissions for each account in the next step.\n    </p>\n  </div>\n  <bb-alert-ui \n    *ngIf=\"showError\" \n    data-role=\"user-accounts-error-message\"\n    title=\"You need to select at least one account in order to continue\"\n    i18n-title=\"Account Failed Notification|Message for a notification displayed when no accounts are selected@@authorized-users.create.accounts.notification.error\"\n    [dismissible]=\"true\"\n    (closed)=\"closeError()\"\n  ></bb-alert-ui>\n  <ul \n    ngModelGroup=\"list\" \n    class=\"bb-list\"\n  >\n    <li class=\"bb-block bb-block--lg\">\n      <bb-checkbox-group-ui \n        label=\"Select all my accounts\"\n        data-role=\"user-accounts-select-all\"\n      ></bb-checkbox-group-ui>\n    </li>\n    <li *ngFor=\"let item of accounts\" class=\"bb-block bb-block--lg\" data-role=\"user-accounts-list\">\n      <bb-input-checkbox-ui\n        name=\"{{item.id}}\"\n        [(ngModel)]=\"model[item.id]\"\n        data-role=\"user-accounts-account-checkbox\"\n      >\n        <span class=\"bb-stack__item--spacing-sm highlight\" data-role=\"user-accounts-account-name\">{{item.name}}</span>\n        <span *ngIf=\"item.displayNumber\" class=\"bb-text-support\" data-role=\"user-accounts-account-number\">\n          {{ item.displayNumber.slice(item.displayNumber.length-9, item.displayNumber.length) | paymentCardNumber: productNumberFormat }}\n        </span>\n      </bb-input-checkbox-ui>\n    </li>\n  </ul>\n\n  <div class=\"bb-button-bar\">    \n    <button \n      bbButton \n      data-role=\"user-accounts-continue-button\"\n      i18n=\"Continue button text@@authorized-users.create.accounts.continue.button\"\n      class=\"bb-button-bar__button\" \n      type=\"submit\"\n    >Continue</button>\n    <button \n      bbButton \n      data-role=\"user-accounts-back-button\"\n      class=\"bb-button-bar__button\"\n      i18n=\"Back button text@@authorized-users.create.accounts.back.button\"\n      color=\"secondary\" \n      *ngIf=\"!isFirstStep\"\n      (click)=\"goBack()\"\n    >Back</button>\n    <button \n      bbButton \n      data-role=\"user-accounts-cancel-button\"\n      color=\"link\"\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      i18n=\"Cancel button text@@authorized-users.accounts.create.cancel.button\"\n      (click)=\"abort()\"\n    >Cancel</button>\n  </div>\n</form>\n", components: [{ type: i1__namespace$6.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i2__namespace$3.CheckboxGroupComponent, selector: "bb-checkbox-group-ui" }, { type: i3__namespace$3.InputCheckboxComponent, selector: "bb-input-checkbox-ui", inputs: ["indeterminate"], outputs: ["indeterminateChange"] }], directives: [{ type: i1__namespace$5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$5.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: AuthorizedUsersAccessibilityKeyboardDirective, selector: "[bbAuthorizedUsersAccessibilityKeyboard]" }, { type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace$5.NgModelGroup, selector: "[ngModelGroup]", inputs: ["ngModelGroup"], exportAs: ["ngModelGroup"] }, { type: i2__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1__namespace$5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$5.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i3__namespace$2.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "paymentCardNumber": i4__namespace.PaymentCardNumberPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersAccountsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-users-accounts',
                        templateUrl: 'authorized-users-accounts.component.html',
                    }]
            }], propDecorators: { accounts: [{
                    type: i0.Input
                }] } });

    var AuthorizedUsersPermissionsCardComponent = /** @class */ (function () {
        function AuthorizedUsersPermissionsCardComponent() {
            this.icon = '';
            this.title = '';
            this.disabled = false;
            this.permissions = [];
        }
        AuthorizedUsersPermissionsCardComponent.prototype.ngOnInit = function () {
            if (this.permissionsAssigned && this.permissionsConfig) {
                var permissionsAssigned_1 = this.permissionsAssigned;
                this.permissions = this.permissionsConfig.map(function (name, index) { return ({ name: name, value: permissionsAssigned_1[index] }); });
            }
        };
        return AuthorizedUsersPermissionsCardComponent;
    }());
    AuthorizedUsersPermissionsCardComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersPermissionsCardComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUsersPermissionsCardComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersPermissionsCardComponent, selector: "bb-authorized-users-permissions-card", inputs: { icon: "icon", title: "title", name: "name", currentName: "currentName", permissionsConfig: "permissionsConfig", permissionsAssigned: "permissionsAssigned", disabled: "disabled" }, ngImport: i0__namespace, template: "<div \n  class=\"bb-authorized-users-permission-card card card-sm\"\n  [ngClass]=\"{\n    'bb-authorized-users-permission-card--selected': name===currentName,\n    'bb-authorized-users-permission-card--disabled': disabled\n  }\"\n>\n  <div class=\"card-body\" bbAuthorizedUsersAccessibilityKeyboard>\n    <div class=\"bb-stack\">\n      <div class=\"bb-stack__item bb-stack__item--push-right\">\n        <span class=\"bb-authorized-user-permission-card__radio\">\n          <bb-icon-ui \n            [name]=\"name===currentName?'radio-button-checked':'radio-button-unchecked'\"\n            [color]=\"name===currentName?'primary':'inactive'\"\n          ></bb-icon-ui>\n        </span>\n      </div>\n    </div>\n    <div class=\"bb-text-align-center\">\n      <bb-icon-ui [name]=\"icon\"></bb-icon-ui>\n    </div>\n    <div class=\"bb-block bb-block--md bb-highlight bb-text-align-center\">\n      {{title}}\n    </div> \n    \n\n    <ul class=\"bb-list\">\n      <li class=\"bb-stack bb-block bb-block--md\" *ngFor=\"let permission of permissions\">\n        <bb-icon-ui \n          class=\"bb-stack__item\" \n          [color]=\"permission.value?'success':'danger'\" \n          size=\"sm\" \n          [name]=\"permission.value?'check':'clear'\" \n          aria-label=\"include: \"\n          i18n-aria-label=\"include: @@uthorized.users.permissions.card.include\"\n        ></bb-icon-ui>\n        <span class=\"bb-text-support bb-subheader bb-subheader--regular\">{{permission.name}}</span>\n      </li>\n    </ul>\n  </div>\n</div>\n<div \n  data-role=\"user-permissions-card-disclaimer\"\n  class=\"bb-authorized-users-permission-card__disclaimer text-small text-center\" \n  *ngIf=\"name===currentName\"\n  i18n=\"authorized users disclaimer@@authorized-users.create.permissions.card.disclaimer\"\n>\n  Applied to all Selected Accounts\n</div>", components: [{ type: i1__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i2__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: AuthorizedUsersAccessibilityKeyboardDirective, selector: "[bbAuthorizedUsersAccessibilityKeyboard]" }, { type: i2__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersPermissionsCardComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-users-permissions-card',
                        templateUrl: 'authorized-users-permissions-card.component.html',
                    }]
            }], propDecorators: { icon: [{
                    type: i0.Input
                }], title: [{
                    type: i0.Input
                }], name: [{
                    type: i0.Input
                }], currentName: [{
                    type: i0.Input
                }], permissionsConfig: [{
                    type: i0.Input
                }], permissionsAssigned: [{
                    type: i0.Input
                }], disabled: [{
                    type: i0.Input
                }] } });

    var AuthorizedUsersPermissionsComponent = /** @class */ (function (_super) {
        __extends(AuthorizedUsersPermissionsComponent, _super);
        function AuthorizedUsersPermissionsComponent() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.authorizedPermissionLevel = AuthorizedPermissionLevel;
            _this._isCustomPermission = false;
            return _this;
        }
        Object.defineProperty(AuthorizedUsersPermissionsComponent.prototype, "isCustomPermission", {
            get: function () {
                return this._isCustomPermission;
            },
            set: function (value) {
                this._isCustomPermission = value;
                this.generalLevel = undefined;
            },
            enumerable: false,
            configurable: true
        });
        AuthorizedUsersPermissionsComponent.prototype.applyLevelToAccounts = function (generalLevel) {
            var _a;
            var permissions = (_a = this.authorizedUser.permissions) === null || _a === void 0 ? void 0 : _a.map(function (permission) { return (Object.assign(Object.assign({}, permission), { level: generalLevel || AuthorizedPermissionLevel.VIEW_ONLY })); });
            return Object.assign(Object.assign({}, this.authorizedUser), { permissions: permissions });
        };
        AuthorizedUsersPermissionsComponent.prototype.applyLevelToAccount = function (permission) {
            var permissions = __spreadArray([], __read((this.authorizedUser.permissions || [])));
            var index = permissions.findIndex(function (item) { return item.account.id === permission.account.id; });
            if (index !== -1) {
                permissions[index] = permission;
            }
            return Object.assign(Object.assign({}, this.authorizedUser), { permissions: permissions });
        };
        AuthorizedUsersPermissionsComponent.prototype.areTheSameLevel = function () {
            var _a, _b, _c, _d, _e;
            var level = ((_a = this.authorizedUser) === null || _a === void 0 ? void 0 : _a.permissions) && this.authorizedUser.permissions[0].level;
            var count = ((_c = (_b = this.authorizedUser) === null || _b === void 0 ? void 0 : _b.permissions) === null || _c === void 0 ? void 0 : _c.reduce(function (prev, curr) { return (level === curr.level ? prev + 1 : prev); }, 0)) || -1;
            return count === ((_e = (_d = this.authorizedUser) === null || _d === void 0 ? void 0 : _d.permissions) === null || _e === void 0 ? void 0 : _e.length);
        };
        AuthorizedUsersPermissionsComponent.prototype.setGeneralLevel = function (level) {
            if (!this.isCustomPermission) {
                this.generalLevel = level;
                this.saveChanges(this.applyLevelToAccounts(this.generalLevel));
            }
        };
        AuthorizedUsersPermissionsComponent.prototype.apply = function () {
            this.goNext(this.authorizedUser);
        };
        AuthorizedUsersPermissionsComponent.prototype.updateAccount = function (permission) {
            this.saveChanges(this.applyLevelToAccount(permission));
        };
        AuthorizedUsersPermissionsComponent.prototype.disableCard = function (level) {
            var _a, _b, _c, _d;
            if (!((_a = this.authorizedUser) === null || _a === void 0 ? void 0 : _a.permissions)) {
                return false;
            }
            var allAccountsSelected = ((_c = (_b = this.authorizedUser) === null || _b === void 0 ? void 0 : _b.permissions) === null || _c === void 0 ? void 0 : _c.length) === ((_d = this.accounts) === null || _d === void 0 ? void 0 : _d.length);
            return !allAccountsSelected && !level.validate();
        };
        AuthorizedUsersPermissionsComponent.prototype.togglePermissionMode = function () {
            if (this.isCustomPermission && this.levelsConfig) {
                this.saveChanges(this.applyLevelToAccounts(this.levelsConfig[0].level));
            }
            else if (this.levelsConfig) {
                this.setGeneralLevel(this.levelsConfig[0].level);
            }
        };
        AuthorizedUsersPermissionsComponent.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
            if (this.areTheSameLevel()) {
                this.generalLevel = this.authorizedUser.permissions && this.authorizedUser.permissions[0].level;
            }
            else {
                this.isCustomPermission = true;
            }
        };
        return AuthorizedUsersPermissionsComponent;
    }(BaseAuthorizedUsersCreateStep));
    AuthorizedUsersPermissionsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersPermissionsComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUsersPermissionsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersPermissionsComponent, selector: "bb-authorized-users-permissions", inputs: { accounts: "accounts" }, usesInheritance: true, ngImport: i0__namespace, template: "<form #authorizedUsersPermissionsForm=\"ngForm\" data-role=\"user-permissions-form\">\n  <div class=\"bb-block bb-block--lg\" bbAuthorizedUsersAccessibilityKeyboard>\n    <h2 \n      data-role=\"user-permissions-header\"\n      i18n=\"user permissions selection header@@authorized.users.permissions.header\"\n    >\n      What permissions do you want to give?\n    </h2>\n    <p \n      class=\"bb-text-support text-small\" \n      data-role=\"user-permissions-subHeader\"\n      i18n=\"user permissions selection subHeader@@authorized.users.permissions.subHeader\"\n    >\n      Choose one permission for all selected accounts or different permissions for each account.\n    </p>\n  </div>\n\n  <div class=\"row bb-block bb-block--xl\">\n    <bb-authorized-users-permissions-card\n      *ngFor=\"let permissionLevel of levelsConfig\"\n      class=\"col-lg-4 bb-block bb-block--md-md-down\"\n      [title]=\"permissionLevel.title\"\n      [icon]=\"permissionLevel.icon\"\n      [name]=\"permissionLevel.level\"\n      [currentName]=\"generalLevel\"\n      [disabled]=\"disableCard(permissionLevel)\"\n      [permissionsConfig]=\"permissionsConfig?.permissions\"\n      [permissionsAssigned]=\"permissionLevel.permissionsAssigned\"\n      (click)=\"!disableCard(permissionLevel) && setGeneralLevel(permissionLevel.level)\"\n    >\n    </bb-authorized-users-permissions-card>\n  </div>\n\n  <div class=\"bb-stack bb-block bb-block--xl\">\n    <div class=\"bb-stack__item bb-stack__item--spacing-sm bb-stack__item--align-top\">\n      <bb-switch-ui\n        name=\"customPermissions\"\n        data-role=\"user-permissions-switch\"\n        aria-label=\"Choose different permissions for each account\"\n        [(ngModel)]=\"isCustomPermission\"\n        (click)=\"togglePermissionMode()\"\n      ></bb-switch-ui>\n    </div>\n    <div class=\"bb-stack__item\">\n      <label \n        class=\"bb-switch__label\" \n        data-role=\"user-permissions-switch-label\"\n      >\n        Choose different permissions for each account\n      </label>\n      <div\n        *ngIf=\"!enableAccountLevelFullAccessPermission\"\n        class=\"bb-text-support text-small\"\n        data-role=\"user-permissions-switch-description\"\n        i18n=\"Different permission selection subTitle@@authorized.users.different.permission.subTtitle\"\n      >\n        Keep in mind that you can only give Full Access permissions to all accounts at once.\n    </div>\n   </div>\n  </div>\n\n  <bb-authorized-users-permissions-levels-table\n    *ngIf=\"isCustomPermission\"\n    [isEditing]=\"true\"\n    [enableAccountLevelFullAccessPermission]=\"enableAccountLevelFullAccessPermission\"\n    [selectedAccounts]=\"authorizedUser.permissions\"\n    [levelsConfig]=\"levelsConfig\"\n    (updateAccount)=\"updateAccount($event)\"\n    data-role=\"user-permissions-table\"\n  ></bb-authorized-users-permissions-levels-table>\n\n  <div class=\"bb-button-bar\">    \n    <button \n      bbButton \n      data-role=\"user-permissions-continue-button\"\n      i18n=\"Continue button text@@authorized-users.create.permissions.continue.button\"\n      class=\"bb-button-bar__button\" \n      (click)=\"apply()\"\n    >Continue</button>\n    <button \n      bbButton \n      data-role=\"user-permissions-back-button\"\n      class=\"bb-button-bar__button\"\n      i18n=\"Back button text@@authorized-users.create.permissions.back.button\"\n      color=\"secondary\" \n      (click)=\"goBack()\"\n    >Back</button>\n    <button \n      bbButton \n      data-role=\"user-permissions-cancel-button\"\n      color=\"link\"\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      i18n=\"Cancel button text@@authorized-users.create.permissions.cancel.button\"\n      (click)=\"abort()\"\n    >Cancel</button>\n  </div>\n</form>", components: [{ type: AuthorizedUsersPermissionsCardComponent, selector: "bb-authorized-users-permissions-card", inputs: ["icon", "title", "name", "currentName", "permissionsConfig", "permissionsAssigned", "disabled"] }, { type: i2__namespace$4.SwitchComponent, selector: "bb-switch-ui", inputs: ["labelPosition"] }, { type: AuthorizedUsersPermissionsLevelsTableComponent, selector: "bb-authorized-users-permissions-levels-table", inputs: ["selectedAccounts", "isEditing", "enableAccountLevelFullAccessPermission", "levelsConfig"], outputs: ["updateAccount"] }], directives: [{ type: i1__namespace$5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$5.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: AuthorizedUsersAccessibilityKeyboardDirective, selector: "[bbAuthorizedUsersAccessibilityKeyboard]" }, { type: i2__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1__namespace$5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$5.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3__namespace$2.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersPermissionsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-users-permissions',
                        templateUrl: 'authorized-users-permissions.component.html',
                    }]
            }], propDecorators: { accounts: [{
                    type: i0.Input
                }] } });

    var AuthorizedUsersConfirmationComponent = /** @class */ (function (_super) {
        __extends(AuthorizedUsersConfirmationComponent, _super);
        function AuthorizedUsersConfirmationComponent(formBuilder) {
            var _this = _super.call(this) || this;
            _this.formBuilder = formBuilder;
            _this.showError = false;
            _this.isSaving = false;
            _this.showErrorChange = new i0.EventEmitter();
            _this.confirmationDetailsForm = _this.formBuilder.group({
                termsCB: [false, i1$5.Validators.requiredTrue],
            });
            return _this;
        }
        AuthorizedUsersConfirmationComponent.prototype.saveUser = function () {
            if (this.confirmationDetailsForm.valid) {
                this.goNext(this.authorizedUser);
            }
            else {
                this.confirmationDetailsForm.markAllAsTouched();
            }
        };
        AuthorizedUsersConfirmationComponent.prototype.closeError = function () {
            this.showErrorChange.emit(false);
        };
        AuthorizedUsersConfirmationComponent.prototype.getControl = function (fieldName) {
            return this.confirmationDetailsForm.get(fieldName);
        };
        AuthorizedUsersConfirmationComponent.prototype.isFieldValid = function (fieldName) {
            var control = this.getControl(fieldName);
            return control && (control.valid || control.untouched);
        };
        AuthorizedUsersConfirmationComponent.prototype.hasError = function (field, type) {
            var fieldControl = this.getControl(field);
            if (!fieldControl || !fieldControl.errors) {
                return;
            }
            return fieldControl.errors[type];
        };
        return AuthorizedUsersConfirmationComponent;
    }(BaseAuthorizedUsersCreateStep));
    AuthorizedUsersConfirmationComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersConfirmationComponent, deps: [{ token: i1__namespace$5.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUsersConfirmationComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersConfirmationComponent, selector: "bb-authorized-users-confirmation", inputs: { showError: "showError", isSaving: "isSaving", termsConditions: "termsConditions" }, outputs: { showErrorChange: "showErrorChange" }, usesInheritance: true, ngImport: i0__namespace, template: "<form \n  [formGroup]=\"confirmationDetailsForm\" \n  data-role=\"user-confirmation-form\"\n>\n  <div class=\"bb-block bb-block--lg\" bbAuthorizedUsersAccessibilityKeyboard>\n    <h2\n      class=\"bb-block bb-block--lg\" \n      data-role=\"user-confirmation-header\"\n      i18n=\"Please review and confirm the authorized user information@@authorized-users.create.confirmation.heading-1\"\n    >\n      Please review and confirm the authorized user information.\n    </h2>\n    <bb-alert-ui \n      *ngIf=\"showError\" \n      data-role=\"user-confirmation-error-message\"\n      title=\"Something Went Wrong\"\n      i18n-title=\"Confirmation Failed Notification|Title for a notification displayed when confirmation user is failed@@authorized-users.create.confirmation.notification.error.title\"\n      message=\"We failed to confirm this authorized user, please try again later.\"\n      i18n-message=\"Confirmation Failed Notification Message|Message for a notification displayed when confirmation user is failed@@authorized-users.create.confirmation.notification.error.message\"\n      [dismissible]=\"true\"\n      (closed)=\"closeError()\"\n    ></bb-alert-ui>\n    <h3 class=\"bb-block bb-block--sm\" data-role=\"user-confirmation-fullName\">\n      {{authorizedUser.firstName + ' ' + authorizedUser.lastName}}\n    </h3>\n    <div class=\"bb-block bb-block--sm\" data-role=\"user-confirmation-email\">{{authorizedUser.email}}</div>\n    <div class=\"bb-block bb-block--sm\" data-role=\"user-confirmation-phone-number\">{{authorizedUser.mobileNumber}}</div>\n  </div>\n\n  <div class=\"bb-block bb-block--xl\">\n    <bb-authorized-users-permissions-levels-table \n      [selectedAccounts]=\"authorizedUser.permissions\"\n      [levelsConfig]=\"levelsConfig\"\n      data-role=\"user-confirmation-permissions-table\"\n    ></bb-authorized-users-permissions-levels-table>\n  </div>\n\n  <div class=\"bb-block bb-block--xl\">\n    <div \n      class=\"bb-block bb-block--md bb-highlight\" \n      data-role=\"user-confirmation-terms-header\"\n      i18n=\"Terms and conditions@@authorized-users.create.confirmation.tos.title\"\n    >\n      Terms and Conditions\n    </div>\n\n    <div class=\"bb-authorized-users-terms bb-block bb-block--md\" bbAuthorizedUsersAccessibilityKeyboard>\n      <ng-container *ngTemplateOutlet=\"termsAndConditions\"></ng-container>\n    </div>\n\n    <bb-input-checkbox-ui\n      formControlName=\"termsCB\"\n      [id]=\"'confirmationTosCheckbox'\"\n      data-role=\"user-confirmation-terms-checkbox\"\n      label=\"I have read and accept the terms and conditions.\"\n      i18n-label=\"I have read and accept the terms and conditions.@@authorized-users.create.confirmation.tos.label\"\n      class=\"bb-stack__item\"\n    ></bb-input-checkbox-ui>\n\n    <bb-input-validation-message-ui [showErrors]=\"!isFieldValid('termsCB')\">\n      <span \n        *ngIf=\"hasError('termsCB', 'required')\" \n        data-role=\"user-confirmation-terms-validation-msg\"\n        i18n=\"You are required to accept terms and conditions@@authorized-users.create.confirmation.tos.error-label.required\"\n      >\n        You are required to accept terms and conditions\n      </span>\n    </bb-input-validation-message-ui>\n  </div>\n\n  <div class=\"bb-button-bar\">\n    <bb-load-button-ui\n        color=\"primary\"\n        class=\"bb-button-bar__button\"\n        data-role=\"user-confirmation-confirm-button\"\n        [isLoading]=\"isSaving\"\n        (click)=\"!isSaving && saveUser()\"\n        i18n=\"Confirm button text@@authorized-users.create.confirmation.confirm.button\"\n      >Confirm</bb-load-button-ui>\n    <button \n      bbButton \n      data-role=\"user-confirmation-back-button\"\n      class=\"bb-button-bar__button\"\n      i18n=\"Back button text@@authorized-users.create.confirmation.back.button\"\n      color=\"secondary\" \n      (click)=\"goBack()\"\n    >Back</button>\n    <button \n      bbButton \n      data-role=\"user-confirmation-cancel-button\"\n      color=\"link\"\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      i18n=\"Cancel button text@@authorized-users.create.confirmation.cancel.button\"\n      (click)=\"abort()\"\n    >Cancel</button>\n  </div>\n</form>\n\n<ng-template #termsAndConditions>\n  <div\n    i18n=\"Terms and Conditions Text|Text for authorized users terms and conditions@@authorized-users.create.confirmation.tos.text\"\n    data-role=\"user-confirmation-terms-text\"\n    [innerHTML]=\"termsConditions\"\n  >\n  </div>\n</ng-template>", components: [{ type: i1__namespace$6.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: AuthorizedUsersPermissionsLevelsTableComponent, selector: "bb-authorized-users-permissions-levels-table", inputs: ["selectedAccounts", "isEditing", "enableAccountLevelFullAccessPermission", "levelsConfig"], outputs: ["updateAccount"] }, { type: i3__namespace$3.InputCheckboxComponent, selector: "bb-input-checkbox-ui", inputs: ["indeterminate"], outputs: ["indeterminateChange"] }, { type: i3__namespace$1.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: i6__namespace.LoadButtonComponent, selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }], directives: [{ type: i1__namespace$5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$5.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: AuthorizedUsersAccessibilityKeyboardDirective, selector: "[bbAuthorizedUsersAccessibilityKeyboard]" }, { type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i1__namespace$5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$5.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i3__namespace$2.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersConfirmationComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-users-confirmation',
                        templateUrl: 'authorized-users-confirmation.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$5.FormBuilder }]; }, propDecorators: { showError: [{
                    type: i0.Input
                }], isSaving: [{
                    type: i0.Input
                }], termsConditions: [{
                    type: i0.Input
                }], showErrorChange: [{
                    type: i0.Output
                }] } });

    // eslint-disable-next-line @angular-eslint/directive-class-suffix
    var AuthorizedUsersBaseDialogComponent = /** @class */ (function () {
        function AuthorizedUsersBaseDialogComponent() {
            var _this = this;
            this.dialogOpen = false;
            this.confirm = new i0.EventEmitter();
            this.closed = new i0.EventEmitter();
            this.onClose = function () {
                _this.closed.emit();
            };
        }
        AuthorizedUsersBaseDialogComponent.prototype.onConfirm = function () {
            this.confirm.emit();
        };
        return AuthorizedUsersBaseDialogComponent;
    }());
    AuthorizedUsersBaseDialogComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersBaseDialogComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Directive });
    AuthorizedUsersBaseDialogComponent.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersBaseDialogComponent, inputs: { dialogOpen: "dialogOpen" }, outputs: { confirm: "confirm", closed: "closed" }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersBaseDialogComponent, decorators: [{
                type: i0.Directive
            }], propDecorators: { dialogOpen: [{
                    type: i0.Input
                }], confirm: [{
                    type: i0.Output
                }], closed: [{
                    type: i0.Output
                }] } });

    var AuthorizedUsersConfirmationCompleteComponent = /** @class */ (function (_super) {
        __extends(AuthorizedUsersConfirmationCompleteComponent, _super);
        function AuthorizedUsersConfirmationCompleteComponent() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            /**
             * success status
             */
            _this.succeedStatus = '';
            /**
             * unique time to reload animated svg everytime
             */
            _this.timestamp = new Date().getTime();
            return _this;
        }
        return AuthorizedUsersConfirmationCompleteComponent;
    }(AuthorizedUsersBaseDialogComponent));
    AuthorizedUsersConfirmationCompleteComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersConfirmationCompleteComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUsersConfirmationCompleteComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersConfirmationCompleteComponent, selector: "bb-authorized-users-confirmation-complete", inputs: { authorizedUser: "authorizedUser", successImg: "successImg", succeedStatus: "succeedStatus" }, usesInheritance: true, ngImport: i0__namespace, template: "<bb-modal-ui [isOpen]=\"dialogOpen\" (cancel)=\"onClose()\" data-role=\"complete-modal\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <div class=\"bb-stack\">\n        <div class=\"bb-stack__item bb-stack__item--push-right\">\n          <button \n            bbButton \n            data-role=\"complete-modal-close-button\" \n            color=\"unstyled\" \n            (click)=\"onClose()\"\n            aria-label=\"close confirmation complete modal\"\n            i18-aria-label=\"Close confirmation complete|Button for close confirmation complete@@authorized.users.confirmation.complete.closed.button\"\n          >\n            <bb-icon-ui color=\"muted\" name=\"clear\" size=\"lg\"></bb-icon-ui>\n          </button>\n        </div>\n      </div>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <div class=\"bb-text-align-center bb-block\">\n        <img\n          src=\"{{ successImg + '?' + timestamp }}\"\n          alt=\"Confirmation succeeded\"\n          i18n-alt=\"Confirmation succeeded|Image for Confirmation succeeded@@authorized.users.confirmation.complete.confirmation-succeeded\"\n          data-role=\"confirmation-success-anim\"\n          class=\"img-fluid\"\n          data-role=\"complete-modal-image\"\n        />\n        <!-- Create confirmation -->\n        <ng-container *ngIf=\"succeedStatus==='create'\">\n          <h2\n            class=\"bb-text-bold\"\n            data-role=\"complete-create-modal-header\"\n            i18n=\"New authorized user!@@authorized.users.confirmation.create.complete.header\"\n          >\n            New authorized user!\n          </h2>\n          <span class=\"bb-text-support text-small\" data-role=\"complete-create-modal-subHeader\">\n            <span>{{authorizedUser?.firstName + ' ' + authorizedUser?.lastName + ' ' }}</span>\n            <span i18n=\"Success confirmation|Text for success confirmation@@authorized.users.confirmation.create.complete.success-message\">\n              will receive an email with a link to complete the registration process.\n            </span>\n          </span>\n        </ng-container>\n        <!-- Edit confirmation -->\n        <ng-container *ngIf=\"succeedStatus==='edit'\">\n          <h2\n            class=\"bb-text-bold\"\n            data-role=\"complete-edit-modal-header\"\n            i18n=\"New authorized user!@@authorized.users.confirmation.edit.complete.header\"\n          >\n            User permissions updated!\n          </h2>\n          <span class=\"bb-text-support text-small\" data-role=\"complete-edit-modal-subHeader\">\n            <span>{{authorizedUser?.firstName + ' ' + authorizedUser?.lastName + ' ' }}</span>\n            <span i18n=\"Success confirmation|Text for success confirmation@@authorized.users.confirmation.edit.complete.success-message\">\n              permissions were edited successfully.\n            </span>\n          </span>\n        </ng-container>\n      </div>\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui #footerRef>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar bb-button-bar--center\">\n        <button\n          bbButton\n          data-role=\"complete-modal-gotIt-button\"\n          class=\"bb-button-bar__button\"\n          color=\"primary\"\n          (click)=\"onConfirm()\"\n          i18n=\"Got it button|confirmation Done@@authorized.users.confirmation.complete.button.confirmation-done\"\n        >\n          Got it!\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>", components: [{ type: i1__namespace$7.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1__namespace$7.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i1__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i1__namespace$7.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1__namespace$7.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i1__namespace$7.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i3__namespace$2.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i1__namespace$7.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace$7.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersConfirmationCompleteComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-users-confirmation-complete',
                        templateUrl: 'authorized-users-confirmation-complete.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { authorizedUser: [{
                    type: i0.Input
                }], successImg: [{
                    type: i0.Input
                }], succeedStatus: [{
                    type: i0.Input
                }] } });

    var AuthorizedUsersCancelCreationComponent = /** @class */ (function (_super) {
        __extends(AuthorizedUsersCancelCreationComponent, _super);
        function AuthorizedUsersCancelCreationComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return AuthorizedUsersCancelCreationComponent;
    }(AuthorizedUsersBaseDialogComponent));
    AuthorizedUsersCancelCreationComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersCancelCreationComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUsersCancelCreationComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersCancelCreationComponent, selector: "bb-authorized-users-cancel-creation", usesInheritance: true, ngImport: i0__namespace, template: "<bb-modal-ui [isOpen]=\"dialogOpen\" (cancel)=\"onClose()\" data-role=\"cancel-modal\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <h2 \n        data-role=\"cancel-modal-header\"\n        i18n=\"Discard authorized user@@authorized-users.cancel.modal.header\"\n      >\n        Discard New Authorized User?\n      </h2>\n      <div>\n        <button \n          bbButton  \n          data-role=\"cancel-modal-close-button\" \n          color=\"unstyled\" \n          (click)=\"onClose()\"\n          aria-label=\"Close Creation Modal\"\n          i18-aria-label=\"Close Create User|Button for close creation of authorized user@@authorized-users.cancel.modal.closed.button\"\n        >\n          <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span \n        data-role=\"cancel-modal-subHeader\"\n        i18n=\"Delete confirmation text@@authorized-users.cancel.modal.body\"\n      >\n        All entered information for this authorized user will be permanently lost.\n      </span>\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui #footerRef>\n    <ng-template bbCustomModalFooter>\n      <button bbButton data-role=\"cancel-modal-keep-button\" (click)=\"onClose()\" color=\"link\">\n        <span i18n=\"Keep button text@@authorized-users.messages.createMessage.composeMessageModal.keepCreating.button\">\n          Keep It\n        </span>\n      </button>\n      <button bbButton data-role=\"cancel-modal-discard-button\" (click)=\"onConfirm()\" color=\"danger\">\n        <span i18n=\"Discard button text@@authorized-users.messages.createMessage.composeMessageModal.discardButton\">\n          Discard Authorized User\n        </span>\n      </button>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n", components: [{ type: i1__namespace$7.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1__namespace$7.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i1__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i1__namespace$7.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1__namespace$7.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i1__namespace$7.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i3__namespace$2.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i1__namespace$7.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i1__namespace$7.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersCancelCreationComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-users-cancel-creation',
                        templateUrl: 'authorized-users-cancel-creation.component.html',
                    }]
            }] });

    var AuthorizedUserStepHandlerDirective = /** @class */ (function () {
        function AuthorizedUserStepHandlerDirective(templateRef, viewContainerRef, parent) {
            this.templateRef = templateRef;
            this.viewContainerRef = viewContainerRef;
            this.parent = parent;
            this._currentStep = 0;
        }
        AuthorizedUserStepHandlerDirective.prototype.showOrHideStep = function () {
            if (this._currentStep === this.step) {
                this.viewContainerRef.createEmbeddedView(this.templateRef);
            }
            else {
                this.viewContainerRef.clear();
            }
        };
        Object.defineProperty(AuthorizedUserStepHandlerDirective.prototype, "currentStep", {
            set: function (value) {
                this._currentStep = value;
                this.showOrHideStep();
            },
            enumerable: false,
            configurable: true
        });
        AuthorizedUserStepHandlerDirective.prototype.ngOnInit = function () {
            this.step = this._currentStep > 0 ? this.parent.nextStepIndex() : undefined;
            this.showOrHideStep();
        };
        return AuthorizedUserStepHandlerDirective;
    }());
    AuthorizedUserStepHandlerDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUserStepHandlerDirective, deps: [{ token: i0__namespace.TemplateRef }, { token: i0__namespace.ViewContainerRef }, { token: AuthorizedUsersCreateContainerComponent }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    AuthorizedUserStepHandlerDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUserStepHandlerDirective, selector: "[bbAuthorizedUsersStepHandler]", inputs: { currentStep: ["bbAuthorizedUsersStepHandler", "currentStep"] }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUserStepHandlerDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbAuthorizedUsersStepHandler]',
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.TemplateRef }, { type: i0__namespace.ViewContainerRef }, { type: AuthorizedUsersCreateContainerComponent }]; }, propDecorators: { currentStep: [{
                    type: i0.Input,
                    args: ['bbAuthorizedUsersStepHandler']
                }] } });

    var AuthorizedUserPermissionControlType;
    (function (AuthorizedUserPermissionControlType) {
        AuthorizedUserPermissionControlType["INDIVIDUAL_CONTROL"] = "individual-control";
        AuthorizedUserPermissionControlType["ALL_AT_ONCE"] = "all-at-once";
    })(AuthorizedUserPermissionControlType || (AuthorizedUserPermissionControlType = {}));
    var AuthorizedUsersCreateWrapperComponent = /** @class */ (function () {
        function AuthorizedUsersCreateWrapperComponent(userService, usersUIService, assetsService, cd) {
            var _this = this;
            this.userService = userService;
            this.usersUIService = usersUIService;
            this.assetsService = assetsService;
            this.cd = cd;
            this.currentStep = 1;
            this.isAborting = false;
            this.succeedStatus = '';
            this.isFailure = false;
            this.isSaving = false;
            this.showAuthorizedUsers = new i0.EventEmitter();
            this.currentUserStore = new rxjs.BehaviorSubject({});
            this.changesStore = new rxjs.BehaviorSubject({});
            this.selectedEditUserStore = new rxjs.ReplaySubject();
            this.authorizedUser = this.currentUserStore.asObservable();
            this.enableAccountLevelFullAccessPermissionSubject = new rxjs.BehaviorSubject(undefined);
            this.getURIFromSvgAssetID = function (assetId) { return assetId + ".svg"; };
            // eslint-disable-next-line @typescript-eslint/member-ordering
            this.resolveSvgAsset = this.assetsService.createAssetsResolver({
                widgetName: 'bb-authorized-users-journey-ang',
                getURIFromAssetID: this.getURIFromSvgAssetID,
            });
            this.goToAuthorizedUsersList = function () {
                _this.showAuthorizedUsers.emit();
            };
            this.levelsConfig = this.usersUIService.uiLevelsConfigValue;
            this.permissionsConfig = this.usersUIService.uiPermissionsConfigValue;
            rxjs.merge(this.changesStore, this.selectedEditUserStore).subscribe(this.currentUserStore);
        }
        Object.defineProperty(AuthorizedUsersCreateWrapperComponent.prototype, "enableAccountLevelFullAccessPermissionValue", {
            set: function (value) {
                this.enableAccountLevelFullAccessPermissionSubject.next(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AuthorizedUsersCreateWrapperComponent.prototype, "imageSucceedUrl", {
            get: function () {
                return this.resolveSvgAsset('succeed');
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AuthorizedUsersCreateWrapperComponent.prototype, "editMode", {
            get: function () {
                return this.selectedUser !== undefined;
            },
            enumerable: false,
            configurable: true
        });
        AuthorizedUsersCreateWrapperComponent.prototype.setCurrentUserValue = function (value) {
            this.changesStore.next(Object.assign(Object.assign({}, this.currentUserStore.value), value));
        };
        AuthorizedUsersCreateWrapperComponent.prototype.goToStep = function (value) {
            this.currentStep = value;
        };
        AuthorizedUsersCreateWrapperComponent.prototype.getAllAccounts = function () {
            return this.userService.getAllArrangements().pipe(operators.catchError(this.handleAccountError));
        };
        AuthorizedUsersCreateWrapperComponent.prototype.handleAccountError = function () {
            return rxjs.of({ items: [] });
        };
        AuthorizedUsersCreateWrapperComponent.prototype.handleUserError = function () {
            return rxjs.of({ items: [] });
        };
        AuthorizedUsersCreateWrapperComponent.prototype.next = function (authorizedUser) {
            this.setCurrentUserValue(authorizedUser);
            this.goToStep(this.currentStep + 1);
        };
        AuthorizedUsersCreateWrapperComponent.prototype.back = function () {
            this.goToStep(this.currentStep - 1);
        };
        AuthorizedUsersCreateWrapperComponent.prototype.saveOnly = function (authorizedUser) {
            this.setCurrentUserValue(authorizedUser);
        };
        AuthorizedUsersCreateWrapperComponent.prototype.setAbortingDialog = function (value) {
            this.isAborting = value;
        };
        AuthorizedUsersCreateWrapperComponent.prototype.setSucceedDialogStatus = function (value) {
            this.succeedStatus = value;
        };
        AuthorizedUsersCreateWrapperComponent.prototype.finish = function (authorizedUser) {
            var _this = this;
            this.isSaving = true;
            var onCreateSuccess = function () {
                _this.setSucceedDialogStatus('create');
                _this.isSaving = false;
                _this.cd.markForCheck();
            };
            var onEditSuccess = function () {
                _this.setSucceedDialogStatus('edit');
                _this.isSaving = false;
                _this.cd.markForCheck();
            };
            var onError = function () {
                _this.isFailure = true;
                _this.isSaving = false;
                _this.cd.markForCheck();
            };
            if (this.editMode) {
                this.userService
                    .updateAuthorizedUser(this.selectedUser, authorizedUser.permissions)
                    .subscribe(onEditSuccess, onError);
            }
            else {
                this.userService.addAuthorizedUser(authorizedUser).subscribe(onCreateSuccess, onError);
            }
        };
        AuthorizedUsersCreateWrapperComponent.prototype.ngOnInit = function () {
            var _this = this;
            if (this.editMode) {
                this.userService
                    .retrieveAuthorizedUser()
                    .pipe(operators.catchError(this.handleUserError), operators.map(function (data) { return data.items.find(function (item) { return item.id === _this.selectedUser; }); }))
                    .subscribe(this.selectedEditUserStore);
                this.accounts = this.selectedEditUserStore.pipe(operators.switchMap(function (data) { return (data ? _this.getAllAccounts() : _this.handleAccountError()); }));
            }
            else {
                this.accounts = this.getAllAccounts();
            }
            this.termsConditionsContent = this.usersUIService.termsConditionsContent();
            this.loadingData = rxjs.combineLatest([this.accounts, this.termsConditionsContent]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), accounts = _b[0], termsAndConditions = _b[1];
                return ({
                    accounts: accounts,
                    termsAndConditions: termsAndConditions,
                });
            }));
        };
        Object.defineProperty(AuthorizedUsersCreateWrapperComponent.prototype, "enableAccountLevelFullAccessPermission", {
            get: function () {
                return this.enableAccountLevelFullAccessPermissionSubject.asObservable().pipe(operators.map(function (data) {
                    return data === AuthorizedUserPermissionControlType.INDIVIDUAL_CONTROL;
                }));
            },
            enumerable: false,
            configurable: true
        });
        return AuthorizedUsersCreateWrapperComponent;
    }());
    AuthorizedUsersCreateWrapperComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersCreateWrapperComponent, deps: [{ token: UserDataService }, { token: UsersUIService }, { token: i1__namespace$2.AssetsService }, { token: i0__namespace.ChangeDetectorRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUsersCreateWrapperComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersCreateWrapperComponent, selector: "bb-authorized-users-create-wrapper", inputs: { selectedUser: "selectedUser", enableAccountLevelFullAccessPermissionValue: ["enableAccountLevelFullAccessPermission", "enableAccountLevelFullAccessPermissionValue"] }, outputs: { showAuthorizedUsers: "showAuthorizedUsers" }, ngImport: i0__namespace, template: "<ng-container *ngIf=\"loadingData | async as data; else loadingState\">\n  <ng-container *ngIf=\"data.accounts?.items?.length > 0 && data.termsAndConditions; else errorState\">\n    <div class=\"bb-block bb-block--lg\">\n      <div class=\"row bb-stack bb-stack--center\">\n        <ng-container *ngIf=\"!editMode; else editModeStepper\">\n          <bb-authorized-users-stepper\n            class= \"col-12 col-md-10 col-lg-8\"\n            [currentStep]=\"currentStep\"\n          ></bb-authorized-users-stepper>\n        </ng-container>\n      </div>\n    </div>\n    \n    <ng-template #editModeStepper>\n      <bb-authorized-users-edit-stepper \n        class= \"col-12 col-md-10\"\n        [currentStep]=\"currentStep\"\n      ></bb-authorized-users-edit-stepper>\n    </ng-template>\n    \n    <bb-authorized-users-create-container>\n      <bb-authorized-users-user-details \n        *bbAuthorizedUsersStepHandler=\"!editMode ? currentStep : -1\"\n        [authorizedUser]=\"authorizedUser | async\"\n        [isFirstStep]=\"true\"\n        (next)=\"next($event)\"\n        (back)=\"back()\"\n        (cancel)=\"setAbortingDialog(true)\"\n      ></bb-authorized-users-user-details>\n      <bb-authorized-users-accounts \n        *bbAuthorizedUsersStepHandler=\"currentStep\" \n        [authorizedUser]=\"authorizedUser | async\"\n        [accounts]=\"data.accounts.items\"\n        [isFirstStep]=\"editMode\"\n        (next)=\"next($event)\"\n        (back)=\"back()\"\n        (saveOnly)=\"saveOnly($event)\"\n        (cancel)=\"setAbortingDialog(true)\"\n      ></bb-authorized-users-accounts>\n      <bb-authorized-users-permissions \n        *bbAuthorizedUsersStepHandler=\"currentStep\"\n        [authorizedUser]=\"authorizedUser | async\"\n        [enableAccountLevelFullAccessPermission]=\"enableAccountLevelFullAccessPermission | async\"\n        [accounts]=\"data.accounts.items\"\n        [levelsConfig]=\"levelsConfig\"\n        [permissionsConfig]=\"permissionsConfig\"\n        (next)=\"next($event)\"\n        (back)=\"back()\"\n        (saveOnly)=\"saveOnly($event)\"\n        (cancel)=\"setAbortingDialog(true)\"\n      ></bb-authorized-users-permissions>\n      <bb-authorized-users-confirmation \n        *bbAuthorizedUsersStepHandler=\"currentStep\"\n        [authorizedUser]=\"authorizedUser | async\"\n        [termsConditions]=\"data.termsAndConditions\"\n        [levelsConfig]=\"levelsConfig\"\n        [isSaving]=\"isSaving\"\n        [(showError)]=\"isFailure\"\n        (next)=\"finish($event)\"\n        (back)=\"back()\"\n        (cancel)=\"setAbortingDialog(true)\"\n      ></bb-authorized-users-confirmation>\n    </bb-authorized-users-create-container>\n  </ng-container>\n</ng-container>\n\n<bb-authorized-users-confirmation-complete\n  *ngIf=\"succeedStatus\"\n  [dialogOpen]=\"succeedStatus\"\n  [succeedStatus]=\"succeedStatus\"\n  [authorizedUser]=\"authorizedUser | async\"\n  [successImg]=\"imageSucceedUrl | async\"\n  (confirm)=\"goToAuthorizedUsersList()\"\n  (closed)=\"goToAuthorizedUsersList()\"\n></bb-authorized-users-confirmation-complete>\n\n<bb-authorized-users-cancel-creation\n  [dialogOpen]=\"isAborting\"\n  (confirm)=\"goToAuthorizedUsersList()\"\n  (closed)=\"setAbortingDialog(false)\"\n></bb-authorized-users-cancel-creation>\n\n<ng-template #loadingState>\n  <div class=\"card\">\n    <bb-loading-indicator-ui \n      loaderSize=\"lg\" \n      text=\"Loading...\"\n      i18n-text=\"Loading|Text for the loading indicator@@authorized.users.create.loading.indicator.text\"\n    ></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n\n<ng-template #errorState>\n  <div class=\"card\">\n    <div class=\"card-body bb-state-container\">\n      <bb-empty-state-ui\n        iconModifier=\"error-outline\"\n        iconColor=\"dark\"\n        title=\"Something went wrong\"\n        i18n-title=\"Error state title@@authorized.users.create.errorState.title\"\n        subtitle=\"Try to reload the page or contact the system administrator.\"\n        i18n-subtitle=\"Error state message@@authorized.users.create.errorState.message\"\n      ></bb-empty-state-ui>\n    </div>\n  </div>\n</ng-template>", components: [{ type: AuthorizedUsersStepperComponent, selector: "bb-authorized-users-stepper", inputs: ["currentStep"] }, { type: AuthorizedUserEditStepperComponent, selector: "bb-authorized-users-edit-stepper", inputs: ["currentStep"] }, { type: AuthorizedUsersCreateContainerComponent, selector: "bb-authorized-users-create-container" }, { type: AuthorizedUsersUserDetailsComponent, selector: "bb-authorized-users-user-details" }, { type: AuthorizedUsersAccountsComponent, selector: "bb-authorized-users-accounts", inputs: ["accounts"] }, { type: AuthorizedUsersPermissionsComponent, selector: "bb-authorized-users-permissions", inputs: ["accounts"] }, { type: AuthorizedUsersConfirmationComponent, selector: "bb-authorized-users-confirmation", inputs: ["showError", "isSaving", "termsConditions"], outputs: ["showErrorChange"] }, { type: AuthorizedUsersConfirmationCompleteComponent, selector: "bb-authorized-users-confirmation-complete", inputs: ["authorizedUser", "successImg", "succeedStatus"] }, { type: AuthorizedUsersCancelCreationComponent, selector: "bb-authorized-users-cancel-creation" }, { type: i13__namespace.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i14__namespace.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: AuthorizedUserStepHandlerDirective, selector: "[bbAuthorizedUsersStepHandler]", inputs: ["bbAuthorizedUsersStepHandler"] }], pipes: { "async": i2__namespace.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersCreateWrapperComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-users-create-wrapper',
                        templateUrl: 'authorized-users-create-wrapper.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: UserDataService }, { type: UsersUIService }, { type: i1__namespace$2.AssetsService }, { type: i0__namespace.ChangeDetectorRef }]; }, propDecorators: { selectedUser: [{
                    type: i0.Input
                }], enableAccountLevelFullAccessPermissionValue: [{
                    type: i0.Input,
                    args: ['enableAccountLevelFullAccessPermission']
                }], showAuthorizedUsers: [{
                    type: i0.Output
                }] } });

    var modules$1 = [
        i1$4.StepperModule,
        i3$2.ButtonModule,
        i1.IconModule,
        i2$4.SwitchModule,
        i2$3.CheckboxGroupModule,
        i3$3.InputCheckboxModule,
        i4.PaymentCardNumberModule,
        i5.InputPhoneModule,
        i4$1.InputEmailModule,
        i2$2.InputTextModule,
        i1$5.ReactiveFormsModule,
        i1$5.FormsModule,
        i3$1.InputValidationMessageModule,
        i3$3.InputCheckboxModule,
        i1$7.ModalModule,
        i1$6.AlertModule,
        i13.LoadingIndicatorModule,
        i6.LoadButtonModule,
        i14.EmptyStateModule,
        AuthorizedUsersCommonModule,
    ];
    var components$1 = [
        AuthorizedUsersCreateWrapperComponent,
        AuthorizedUsersStepperComponent,
        AuthorizedUsersConfirmationComponent,
        AuthorizedUsersAccountsComponent,
        AuthorizedUsersCreateContainerComponent,
        AuthorizedUsersPermissionsComponent,
        AuthorizedUsersUserDetailsComponent,
        AuthorizedUsersPermissionsCardComponent,
        AuthorizedUsersCancelCreationComponent,
        AuthorizedUserEditStepperComponent,
        AuthorizedUserStepHandlerDirective,
        AuthorizedUsersConfirmationCompleteComponent,
    ];
    var AuthorizedUsersCreateModule = /** @class */ (function () {
        function AuthorizedUsersCreateModule() {
        }
        return AuthorizedUsersCreateModule;
    }());
    AuthorizedUsersCreateModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersCreateModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AuthorizedUsersCreateModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersCreateModule, declarations: [AuthorizedUsersCreateWrapperComponent,
            AuthorizedUsersStepperComponent,
            AuthorizedUsersConfirmationComponent,
            AuthorizedUsersAccountsComponent,
            AuthorizedUsersCreateContainerComponent,
            AuthorizedUsersPermissionsComponent,
            AuthorizedUsersUserDetailsComponent,
            AuthorizedUsersPermissionsCardComponent,
            AuthorizedUsersCancelCreationComponent,
            AuthorizedUserEditStepperComponent,
            AuthorizedUserStepHandlerDirective,
            AuthorizedUsersConfirmationCompleteComponent], imports: [i2.CommonModule,
            i1$5.FormsModule,
            i1$5.ReactiveFormsModule, i1$4.StepperModule,
            i3$2.ButtonModule,
            i1.IconModule,
            i2$4.SwitchModule,
            i2$3.CheckboxGroupModule,
            i3$3.InputCheckboxModule,
            i4.PaymentCardNumberModule,
            i5.InputPhoneModule,
            i4$1.InputEmailModule,
            i2$2.InputTextModule,
            i1$5.ReactiveFormsModule,
            i1$5.FormsModule,
            i3$1.InputValidationMessageModule,
            i3$3.InputCheckboxModule,
            i1$7.ModalModule,
            i1$6.AlertModule,
            i13.LoadingIndicatorModule,
            i6.LoadButtonModule,
            i14.EmptyStateModule,
            AuthorizedUsersCommonModule, i1__namespace$2.BackbaseCoreModule], exports: [AuthorizedUsersCreateWrapperComponent,
            AuthorizedUsersStepperComponent,
            AuthorizedUsersConfirmationComponent,
            AuthorizedUsersAccountsComponent,
            AuthorizedUsersCreateContainerComponent,
            AuthorizedUsersPermissionsComponent,
            AuthorizedUsersUserDetailsComponent,
            AuthorizedUsersPermissionsCardComponent,
            AuthorizedUsersCancelCreationComponent,
            AuthorizedUserEditStepperComponent,
            AuthorizedUserStepHandlerDirective,
            AuthorizedUsersConfirmationCompleteComponent, i1$4.StepperModule,
            i3$2.ButtonModule,
            i1.IconModule,
            i2$4.SwitchModule,
            i2$3.CheckboxGroupModule,
            i3$3.InputCheckboxModule,
            i4.PaymentCardNumberModule,
            i5.InputPhoneModule,
            i4$1.InputEmailModule,
            i2$2.InputTextModule,
            i1$5.ReactiveFormsModule,
            i1$5.FormsModule,
            i3$1.InputValidationMessageModule,
            i3$3.InputCheckboxModule,
            i1$7.ModalModule,
            i1$6.AlertModule,
            i13.LoadingIndicatorModule,
            i6.LoadButtonModule,
            i14.EmptyStateModule,
            AuthorizedUsersCommonModule] });
    AuthorizedUsersCreateModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersCreateModule, imports: [__spreadArray(__spreadArray([
                i2.CommonModule,
                i1$5.FormsModule,
                i1$5.ReactiveFormsModule
            ], __read(modules$1)), [
                i1$2.BackbaseCoreModule.withConfig({
                    classMap: { AuthorizedUsersCreateWrapperComponent: AuthorizedUsersCreateWrapperComponent },
                }),
            ]), i1$4.StepperModule,
            i3$2.ButtonModule,
            i1.IconModule,
            i2$4.SwitchModule,
            i2$3.CheckboxGroupModule,
            i3$3.InputCheckboxModule,
            i4.PaymentCardNumberModule,
            i5.InputPhoneModule,
            i4$1.InputEmailModule,
            i2$2.InputTextModule,
            i1$5.ReactiveFormsModule,
            i1$5.FormsModule,
            i3$1.InputValidationMessageModule,
            i3$3.InputCheckboxModule,
            i1$7.ModalModule,
            i1$6.AlertModule,
            i13.LoadingIndicatorModule,
            i6.LoadButtonModule,
            i14.EmptyStateModule,
            AuthorizedUsersCommonModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersCreateModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: __spreadArray([], __read(components$1)),
                        imports: __spreadArray(__spreadArray([
                            i2.CommonModule,
                            i1$5.FormsModule,
                            i1$5.ReactiveFormsModule
                        ], __read(modules$1)), [
                            i1$2.BackbaseCoreModule.withConfig({
                                classMap: { AuthorizedUsersCreateWrapperComponent: AuthorizedUsersCreateWrapperComponent },
                            }),
                        ]),
                        exports: __spreadArray(__spreadArray([], __read(components$1)), __read(modules$1)),
                    }]
            }] });

    var AuthorizedUsersJourneyComponent = /** @class */ (function () {
        function AuthorizedUsersJourneyComponent() {
        }
        return AuthorizedUsersJourneyComponent;
    }());
    AuthorizedUsersJourneyComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersJourneyComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUsersJourneyComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersJourneyComponent, selector: "bb-authorized-users-journey", ngImport: i0__namespace, template: '<router-outlet></router-outlet>', isInline: true, directives: [{ type: i1__namespace$8.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersJourneyComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-users-journey',
                        template: '<router-outlet></router-outlet>',
                    }]
            }] });

    var getMessageFromResponse = function (error) {
        var responseBody = error.error;
        if (responseBody && responseBody.errors && responseBody.errors[0] && responseBody.errors[0].message) {
            return responseBody.errors[0].message;
        }
        else {
            return undefined;
        }
    };
    /**
     * Parse an HttpErrorResponse and return a AuthorizedUsersError object that can be used to display a
     * user-friendly error message.
     */
    var parseError = function (errorResponse) {
        if (errorResponse.error instanceof ErrorEvent) {
            // Client-side or network error.
            return {
                message: 'An unexpected error occurred',
            };
        }
        else {
            switch (errorResponse.status) {
                case 400:
                    return {
                        message: getMessageFromResponse(errorResponse) || 'Error 400',
                    };
                case 401:
                    return {
                        message: 'Error 401',
                    };
                case 403:
                    return {
                        message: 'Error 403',
                    };
                case 404:
                    return {
                        message: 'Error 404',
                    };
                default:
                    return {
                        message: 'An unexpected error occurred',
                    };
            }
        }
    };

    var AuthorizedUsersListStatusBadgeComponent = /** @class */ (function () {
        function AuthorizedUsersListStatusBadgeComponent() {
            this.authorizedUserStatus = AuthorizedUserStatus;
        }
        return AuthorizedUsersListStatusBadgeComponent;
    }());
    AuthorizedUsersListStatusBadgeComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersListStatusBadgeComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUsersListStatusBadgeComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersListStatusBadgeComponent, selector: "bb-authorized-users-list-status-badge", inputs: { authorizedUsersStatus: "authorizedUsersStatus" }, ngImport: i0__namespace, template: "<div class=\"bb-stack bb-block bb-block--md\" >\n  <ng-container *ngIf=\"authorizedUsersStatus === authorizedUserStatus.ACTIVE\">\n    <bb-badge-ui\n      text=\"Active\"\n      i18n-text=\"Active Label|Text for the active label@@authorized.users.status.active\"\n      color=\"success\"\n    ></bb-badge-ui>\n  </ng-container>\n\n  <ng-container *ngIf=\"authorizedUsersStatus === authorizedUserStatus.AWAITING_REGISTRATION\">\n    <bb-badge-ui\n      text=\"Awaiting Registration\"\n      i18n-text=\"Awaiting Registration Label|Text for the scheduled label@@authorized.users.status.awating\"\n      color=\"info\"\n    ></bb-badge-ui>\n  </ng-container>\n\n  <ng-container *ngIf=\"authorizedUsersStatus === authorizedUserStatus.PAUSED\">\n    <bb-badge-ui\n      text=\"Paused\"\n      i18n-text=\"Paused Label|Text for the expired label@@authorized.users.status.paused\"\n      color=\"warning\"\n    ></bb-badge-ui>\n  </ng-container>\n</div>", components: [{ type: i1__namespace$9.BadgeComponent, selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersListStatusBadgeComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-users-list-status-badge',
                        templateUrl: './authorized-users-list-status-badge.component.html',
                    }]
            }], propDecorators: { authorizedUsersStatus: [{
                    type: i0.Input
                }] } });

    var AuthorizedUsersListItemComponent = /** @class */ (function () {
        function AuthorizedUsersListItemComponent() {
            this.edit = new i0.EventEmitter();
            this.remove = new i0.EventEmitter();
            this.paused = new i0.EventEmitter();
            this.resumed = new i0.EventEmitter();
            this.authorizedUserStatus = AuthorizedUserStatus;
            this.arePermissionsOpen = false;
            this.isUserActionsEnabled = false;
        }
        AuthorizedUsersListItemComponent.prototype.togglePermissionsVisibility = function () {
            this.arePermissionsOpen = !this.arePermissionsOpen;
        };
        AuthorizedUsersListItemComponent.prototype.editPermissions = function () {
            this.edit.emit(this.authorizedUsersItem);
        };
        AuthorizedUsersListItemComponent.prototype.removeUser = function () {
            this.remove.emit(this.authorizedUsersItem);
        };
        AuthorizedUsersListItemComponent.prototype.pauseUser = function () {
            this.paused.emit(this.authorizedUsersItem);
        };
        AuthorizedUsersListItemComponent.prototype.resumeUser = function () {
            this.resumed.emit(this.authorizedUsersItem);
        };
        return AuthorizedUsersListItemComponent;
    }());
    AuthorizedUsersListItemComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersListItemComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUsersListItemComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersListItemComponent, selector: "bb-authorized-users-list-item", inputs: { authorizedUsersItem: "authorizedUsersItem", levelsConfig: "levelsConfig" }, outputs: { edit: "edit", remove: "remove", paused: "paused", resumed: "resumed" }, ngImport: i0__namespace, template: "<div class=\"card card-lg\">\n  <div class=\"card-body\" bbAuthorizedUsersAccessibilityKeyboard>\n    <div class=\"bb-stack bb-stack--density-sm\">\n      <div class=\"bb-stack__item\">\n        <p data-role=\"user-fullName\" class=\"bb-heading-3\">\n          {{authorizedUsersItem?.firstName + ' ' + authorizedUsersItem?.lastName}}\n        </p>\n      </div>\n\n      <div class=\"bb-stack__item\" data-role=\"user-status-badge\">\n        <bb-authorized-users-list-status-badge\n          [authorizedUsersStatus]=\"authorizedUsersItem?.status\"\n        ></bb-authorized-users-list-status-badge>\n      </div>\n\n      <div class=\"bb-stack__item bb-stack__item--push-right\">\n        <bb-dropdown-menu-ui\n          icon=\"ellipsis-h\"\n          btnColor=\"link-dark\"\n          btnCircle=\"true\"\n          container=\"body\"\n          position=\"bottom-right\"\n          data-role=\"options-dropdown\"\n          aria-label=\"Options\"\n          i18n-aria-label=\"Options button|Authorized user options button tooltip@@authorized.users.options.label\"\n        >\n          <ng-template bbDropdownMenuItem>\n            <a\n              bbAuthorizedUsersAccessibilityKeyboard\n              rel=\"noopener\"\n              role=\"menuitem\"\n              class=\"dropdown-item\"\n              data-role=\"edit-item\"\n              target=\"_blank\"\n              (click)=\"editPermissions()\"\n            >\n              <span class=\"bb-inline-stack\">\n                <bb-icon-ui class=\"bb-inline-stack__item\" name=\"edit\" size=\"md\"></bb-icon-ui>\n                <span \n                  class=\"bb-inline-stack__item\"  \n                  i18n=\"Edit User Permissions|Label for edit authorized user permissions action@@authorized.users.edit\"\n                >\n                  Edit User Permissions\n                </span>\n              </span>\n            </a>\n            <ng-container *ngIf=\"authorizedUsersItem?.status!==authorizedUserStatus.PAUSED; else resumeAuthorizedUserOption\">\n              <a\n                bbAuthorizedUsersAccessibilityKeyboard\n                rel=\"noopener\"\n                role=\"menuitem\"\n                class=\"dropdown-item\"\n                data-role=\"pause-item\"\n                target=\"_blank\"\n                (click)=\"pauseUser()\"\n              >\n                <span class=\"bb-inline-stack\">\n                  <bb-icon-ui class=\"bb-inline-stack__item\" name=\"pause\" size=\"md\"></bb-icon-ui>\n                  <span \n                    class=\"bb-inline-stack__item\" \n                    i18n=\"Pause Permissions|Label for pause authorized user permissions action@@authorized.users.paused\"\n                  >\n                    Pause Permissions\n                  </span>\n                </span>\n              </a>\n            </ng-container>\n            <ng-template #resumeAuthorizedUserOption>\n              <a\n                bbAuthorizedUsersAccessibilityKeyboard\n                rel=\"noopener\"\n                role=\"menuitem\"\n                class=\"dropdown-item\"\n                data-role=\"resume-item\"\n                target=\"_blank\"\n                (click)=\"resumeUser()\"\n              >\n                <span class=\"bb-inline-stack\">\n                  <bb-icon-ui class=\"bb-inline-stack__item\" name=\"update\" size=\"md\"></bb-icon-ui>\n                  <span \n                    class=\"bb-inline-stack__item\" \n                    i18n=\"Resume Permissions|Label for resume authorized user permissions action@@authorized.users.resumed\"\n                  >\n                    Resume Permissions\n                  </span>\n                </span>\n              </a>\n            </ng-template>\n            <a\n              bbAuthorizedUsersAccessibilityKeyboard\n              rel=\"noopener\"\n              role=\"menuitem\"\n              class=\"dropdown-item\"\n              data-role=\"remove-item\"\n              target=\"_blank\"\n              (click)=\"removeUser()\"\n            >\n              <span class=\"bb-inline-stack\">\n                <bb-icon-ui class=\"bb-inline-stack__item\" name=\"delete\" size=\"md\" color=\"danger\"></bb-icon-ui>\n                <span \n                  class=\"bb-inline-stack__item bb-text-danger\" \n                  i18n=\"Remove Authorized User|Label for remove authorized user action@@authorized.users.remove\"\n                >\n                  Remove Authorized User\n                </span>\n              </span>\n            </a>\n          </ng-template>\n        </bb-dropdown-menu-ui>\n      </div>\n    </div>\n\n    <div class=\"bb-block bb-block--sm\">\n      <div \n        class=\"bb-block bb-block--xs bb-text-support text-small\" \n        data-role=\"user-email\"\n      >\n        {{authorizedUsersItem?.email}} \n      </div>\n      <div \n        class=\"bb-text-support text-small\" \n        data-role=\"user-phone-number\"\n      > \n        {{authorizedUsersItem?.mobileNumber | phoneNumber: 'US'}} \n      </div>\n    </div>\n    \n    <div [ngbCollapse]=\"!arePermissionsOpen\" bbAuthorizedUsersAccessibilityKeyboard>\n      <div class=\"bb-block bb-block--xs\" data-role=\"user-username\" *ngIf=\"authorizedUsersItem?.username\"> \n        <span \n          class=\"bb-text-bold text-small\"\n          i18n='Authorized users list username header@@authorized.users.list.username.header'\n        >\n          Username: \n        </span>\n        <span class=\"bb-text-support text-small\">{{authorizedUsersItem?.username}}</span>\n      </div>\n      <div class=\"bb-block bb-block--md\" data-role=\"user-permissions-table\">\n        <bb-authorized-users-permissions-levels-table \n          [selectedAccounts]=\"authorizedUsersItem?.permissions\"\n          [levelsConfig]=\"levelsConfig\"\n        ></bb-authorized-users-permissions-levels-table>\n      </div>\n    </div>\n\n    <div>\n      <button bbButton data-role=\"permissions-button\" buttonSize=\"sm\" color=\"link-text\" (click)=\"togglePermissionsVisibility()\">\n        <bb-icon-ui [name]=\"arePermissionsOpen ? 'toggle-up' : 'toggle-down'\" size=\"md\"></bb-icon-ui>\n        <span \n          i18n='Hide user permissions button@@authorized.users.list.hide.button' \n          *ngIf=\"arePermissionsOpen\"\n        >\n          Hide User Permissions\n        </span>\n        <span \n          i18n='See user permissions button@@authorized.users.list.seeMore.button' \n          *ngIf=\"!arePermissionsOpen\"\n        >\n          See User Permissions\n        </span>\n      </button>\n    </div>\n  </div>\n</div>\n", components: [{ type: AuthorizedUsersListStatusBadgeComponent, selector: "bb-authorized-users-list-status-badge", inputs: ["authorizedUsersStatus"] }, { type: i2__namespace$5.DropdownMenuComponent, selector: "bb-dropdown-menu-ui", inputs: ["label", "disabled", "options", "icon", "iconSize", "iconColor", "btnColor", "btnCircle", "optionLabelKey", "fullWidth", "autoClose", "container", "position", "ariaLabel", "buttonSize", "dropDownButtonLabel", "visibleElementDependingOnViewport", "role"], outputs: ["select"] }, { type: i1__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: AuthorizedUsersPermissionsLevelsTableComponent, selector: "bb-authorized-users-permissions-levels-table", inputs: ["selectedAccounts", "isEditing", "enableAccountLevelFullAccessPermission", "levelsConfig"], outputs: ["updateAccount"] }], directives: [{ type: AuthorizedUsersAccessibilityKeyboardDirective, selector: "[bbAuthorizedUsersAccessibilityKeyboard]" }, { type: i2__namespace$5.DropdownMenuItemDirective, selector: "ng-template[bbDropdownMenuItem]" }, { type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i7__namespace.NgbCollapse, selector: "[ngbCollapse]", inputs: ["ngbCollapse", "animation"], outputs: ["ngbCollapseChange", "shown", "hidden"], exportAs: ["ngbCollapse"] }, { type: i3__namespace$2.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "phoneNumber": i9__namespace.PhoneNumberPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersListItemComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-users-list-item',
                        templateUrl: "./authorized-users-list-item.component.html",
                    }]
            }], propDecorators: { authorizedUsersItem: [{
                    type: i0.Input
                }], levelsConfig: [{
                    type: i0.Input
                }], edit: [{
                    type: i0.Output
                }], remove: [{
                    type: i0.Output
                }], paused: [{
                    type: i0.Output
                }], resumed: [{
                    type: i0.Output
                }] } });

    var AuthorizedUsersListComponent = /** @class */ (function () {
        function AuthorizedUsersListComponent() {
            this.edit = new i0.EventEmitter();
            this.remove = new i0.EventEmitter();
            this.paused = new i0.EventEmitter();
            this.resumed = new i0.EventEmitter();
            this.createAuthorizedUser = new i0.EventEmitter();
        }
        AuthorizedUsersListComponent.prototype.goToAuthorizedUser = function () {
            this.createAuthorizedUser.emit();
        };
        AuthorizedUsersListComponent.prototype.editPermissions = function (user) {
            this.edit.emit(user);
        };
        AuthorizedUsersListComponent.prototype.removeUser = function (user) {
            this.remove.emit(user);
        };
        AuthorizedUsersListComponent.prototype.pauseUser = function (user) {
            this.paused.emit(user);
        };
        AuthorizedUsersListComponent.prototype.resumeUser = function (user) {
            this.resumed.emit(user);
        };
        return AuthorizedUsersListComponent;
    }());
    AuthorizedUsersListComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersListComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUsersListComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersListComponent, selector: "bb-authorized-users-list", inputs: { authorizedUsersList: "authorizedUsersList", levelsConfig: "levelsConfig" }, outputs: { edit: "edit", remove: "remove", paused: "paused", resumed: "resumed", createAuthorizedUser: "createAuthorizedUser" }, ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--lg bb-text-align-right\">\n  <button bbButton data-role=\"add-button\" color=\"primary\" (click)=\"goToAuthorizedUser()\">\n    <bb-icon-ui name=\"add\"></bb-icon-ui> \n    <span i18n=\"Add new authorized user button@@authorized.users.add.button\">\n      Add Authorized User\n    </span>\n  </button>\n</div>\n<div class=\"bb-list\">\n  <div class=\"bb-list__item--no-separator\" *ngFor=\"let authorizedUsersItem of authorizedUsersList\">\n    <div class=\"bb-block bb-block--lg\">\n      <bb-authorized-users-list-item\n        [authorizedUsersItem]=\"authorizedUsersItem\"\n        [levelsConfig]=\"levelsConfig\"\n        (edit)=\"editPermissions($event)\"\n        (remove)=\"removeUser($event)\"\n        (paused)=\"pauseUser($event)\"\n        (resumed)=\"resumeUser($event)\"\n      ></bb-authorized-users-list-item>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: AuthorizedUsersListItemComponent, selector: "bb-authorized-users-list-item", inputs: ["authorizedUsersItem", "levelsConfig"], outputs: ["edit", "remove", "paused", "resumed"] }], directives: [{ type: i3__namespace$2.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i2__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersListComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-users-list',
                        templateUrl: "./authorized-users-list.component.html",
                    }]
            }], propDecorators: { authorizedUsersList: [{
                    type: i0.Input
                }], levelsConfig: [{
                    type: i0.Input
                }], edit: [{
                    type: i0.Output
                }], remove: [{
                    type: i0.Output
                }], paused: [{
                    type: i0.Output
                }], resumed: [{
                    type: i0.Output
                }], createAuthorizedUser: [{
                    type: i0.Output
                }] } });

    var AuthorizedUsersEmptyListComponent = /** @class */ (function () {
        function AuthorizedUsersEmptyListComponent() {
            /**
             * Empty state image url.
             */
            this.imageUrl = '';
            this.createAuthorizedUser = new i0.EventEmitter();
        }
        AuthorizedUsersEmptyListComponent.prototype.goToAuthorizedUser = function () {
            this.createAuthorizedUser.emit();
        };
        return AuthorizedUsersEmptyListComponent;
    }());
    AuthorizedUsersEmptyListComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersEmptyListComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUsersEmptyListComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersEmptyListComponent, selector: "bb-authorized-users-empty-list", inputs: { imageUrl: "imageUrl" }, outputs: { createAuthorizedUser: "createAuthorizedUser" }, ngImport: i0__namespace, template: "<div class=\"card\">\n  <div class=\"card-body bb-text-align-center\">\n    <div class=\"bb-block bb-block--lg\">\n      <img \n        class=\"img-fluid\" \n        *ngIf=\"!!imageUrl\" \n        [src]=\"imageUrl\"\n        alt=\"empty-state-image\"\n      />\n    </div>\n    <h2 \n      class=\"bb-block bb-block--sm\"\n      data-role=\"empty-state-message\"\n      i18n=\"authorized users empty state header@@authorized.users.empty.state.header\"\n    >\n      Authorize access to your accounts\n    </h2>\n    <div class=\"bb-block bb-block--lg\">\n      <p \n        class=\"bb-text-support text-small\"\n        data-role=\"empty-state-description\"\n        i18n=\"authorized users empty state description@authorized.users.empty.state.description\"\n      >\n        Adding an authorized user allows you to give limited or full access to your accounts or financial products.\n      </p>\n    </div>\n  \n    <div>\n      <button bbButton data-role=\"add-button\" color=\"primary\" (click)=\"goToAuthorizedUser()\">\n        <bb-icon-ui name=\"add\"></bb-icon-ui> \n        <span i18n=\"Add new authorized user button@@authorized.users.add.button\">Add Authorized User</span>\n      </button>\n    </div>\n  </div>\n</div>", components: [{ type: i1__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3__namespace$2.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersEmptyListComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-users-empty-list',
                        templateUrl: "./authorized-users-empty-list.component.html",
                    }]
            }], propDecorators: { imageUrl: [{
                    type: i0.Input
                }], createAuthorizedUser: [{
                    type: i0.Output
                }] } });

    var AuthorizedUsersListConfirmationRemoveUserDialogComponent = /** @class */ (function (_super) {
        __extends(AuthorizedUsersListConfirmationRemoveUserDialogComponent, _super);
        function AuthorizedUsersListConfirmationRemoveUserDialogComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return AuthorizedUsersListConfirmationRemoveUserDialogComponent;
    }(AuthorizedUsersBaseDialogComponent));
    AuthorizedUsersListConfirmationRemoveUserDialogComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersListConfirmationRemoveUserDialogComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUsersListConfirmationRemoveUserDialogComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersListConfirmationRemoveUserDialogComponent, selector: "bb-authorized-user-list-remove-user-confirmation-dialog", usesInheritance: true, ngImport: i0__namespace, template: "<!-- Remove authorized user confirmation model  -->\n<bb-modal-ui [isOpen]=\"dialogOpen\" (cancel)=\"onClose()\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <h2 \n        data-role=\"remove-modal-title\" \n        i18n=\"Remove authorized user@@authorized.users.removeUser.modal.header\"\n      >\n        Remove Authorized User?\n      </h2>\n      <div>\n        <button \n          bbButton \n          color=\"unstyled\" \n          (click)=\"onClose()\"\n          aria-label=\"close removal confirmation modal dialog\"\n          i18-aria-label=\"Close removal confirmation modal dialog|Button for close removal confirmation modal dialog@@authorized.users.removeUser.modal.closed.button\"\n        >\n          <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span data-role=\"remove-modal-message\" i18n=\"Remove confirmation text@@authorized.users.removeUser.modal.body\">\n        All entered information and their corresponding permissions will be permanently removed.\n      </span>\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui #footerRef>\n    <ng-template bbCustomModalFooter>\n      <button bbButton (click)=\"onClose()\" color=\"link\" data-role=\"keep-button\">\n        <span i18n=\"Keep it button text@@authorized.users.removeUser.notNow.button\">\n          Keep It\n        </span>\n      </button>\n      <button bbButton (click)=\"onConfirm()\" color=\"danger\" data-role=\"remove-button\">\n        <span i18n=\"Remove authorized user button text@@authorized.users.removeUser.remove.button\">\n          Remove Authorized User\n        </span>\n      </button>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n", components: [{ type: i1__namespace$7.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1__namespace$7.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i1__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i1__namespace$7.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1__namespace$7.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i1__namespace$7.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i3__namespace$2.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i1__namespace$7.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i1__namespace$7.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersListConfirmationRemoveUserDialogComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-user-list-remove-user-confirmation-dialog',
                        templateUrl: 'authorized-users-list-confirmation-remove-user-dialog.component.html',
                    }]
            }] });

    var AuthorizedUserListConfirmationPauseUserDialogComponent = /** @class */ (function (_super) {
        __extends(AuthorizedUserListConfirmationPauseUserDialogComponent, _super);
        function AuthorizedUserListConfirmationPauseUserDialogComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return AuthorizedUserListConfirmationPauseUserDialogComponent;
    }(AuthorizedUsersBaseDialogComponent));
    AuthorizedUserListConfirmationPauseUserDialogComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUserListConfirmationPauseUserDialogComponent, deps: null, target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUserListConfirmationPauseUserDialogComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUserListConfirmationPauseUserDialogComponent, selector: "bb-authorized-user-list-confirmation-pause-user-dialog", usesInheritance: true, ngImport: i0__namespace, template: "<!-- Pause authorized user confirmation model  -->\n<bb-modal-ui [isOpen]=\"dialogOpen\" (cancel)=\"onClose()\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <h2 \n        data-role=\"pause-modal-title\" \n        i18n=\"Pause user permissions@@authorized.users.pauseUserPermissions.modal.header\"\n      >\n        Pause user permissions?\n      </h2>\n      <div>\n        <button \n          bbButton \n          color=\"unstyled\" \n          (click)=\"onClose()\"\n          aria-label=\"close pause permissions confirmation modal dialog\"\n          i18-aria-label=\"Close pause permissions confirmation modal dialog|Button for close pause permissions confirmation modal dialog@@authorized.users.pauseUserPermissions.modal.cancel.button\"\n        >\n          <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span data-role=\"pause-modal-message\" i18n=\"Pause confirmation text@@authorized.users.pauseUserPermissions.modal.body\">\n        Their account permissions will be paused indefinetely until you resume them.\n      </span>\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui #footerRef>\n    <ng-template bbCustomModalFooter>\n      <button bbButton (click)=\"onClose()\" color=\"link\" data-role=\"not-now-button\">\n        <span i18n=\"Not now button text@@authorized.users.pauseUserPermissions.modal.notNow.button\">\n          Not now\n        </span>\n      </button>\n      <button bbButton (click)=\"onConfirm()\" color=\"primary\" data-role=\"pause-button\">\n        <span i18n=\"Pause permissions button text@@authorized.users.pauseUserPermissions.modal.paused.button\">\n          Pause permissions\n        </span>\n      </button>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>", components: [{ type: i1__namespace$7.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1__namespace$7.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i1__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i1__namespace$7.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1__namespace$7.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i1__namespace$7.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i3__namespace$2.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i1__namespace$7.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i1__namespace$7.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUserListConfirmationPauseUserDialogComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-user-list-confirmation-pause-user-dialog',
                        templateUrl: 'authorized-user-list-confirmation-pause-user-dialog.component.html',
                    }]
            }] });

    var AuthorizedUsersListWrapperComponent = /** @class */ (function () {
        function AuthorizedUsersListWrapperComponent(assetsService, userDataService, usersUIService, notificationService) {
            var _this = this;
            this.assetsService = assetsService;
            this.userDataService = userDataService;
            this.usersUIService = usersUIService;
            this.notificationService = notificationService;
            this.refreshAuthorizedUsers = new rxjs.BehaviorSubject(true);
            this.authorizedUsersListSubject = new rxjs.BehaviorSubject({ items: [] });
            this.isLoading = new rxjs.BehaviorSubject(true);
            this.authorizedUsersList = this.authorizedUsersListSubject.asObservable();
            this.showLoadingIndicator = this.isLoading.asObservable();
            this.selectedUser = new i0.EventEmitter();
            this.getURIFromAssetID = function (assetId) { return assetId + "-img.svg"; };
            // eslint-disable-next-line @typescript-eslint/member-ordering
            this.resolveAsset = this.assetsService.createAssetsResolver({
                widgetName: 'bb-authorized-users-journey-ang',
                getURIFromAssetID: this.getURIFromAssetID,
            });
            this.handleLoadingError = function (error) {
                _this.error = parseError(error);
                return rxjs.of({ items: [] });
            };
            this.handleOperationsError = function () {
                _this.setLoadingIndicator(false);
                _this.pushNotification($localize(templateObject_1 || (templateObject_1 = __makeTemplateObject(["Something went wrong"], ["Something went wrong"]))), $localize(templateObject_2 || (templateObject_2 = __makeTemplateObject(["Please try again later."], ["Please try again later."]))), 'error');
            };
            this.refreshAuthorizedUsers
                .pipe(operators.mergeMap(function () { return _this.retrieveAuthorizedUsers(); }))
                .subscribe(this.authorizedUsersListSubject);
            this.levelsConfig = this.usersUIService.uiLevelsConfigValue;
        }
        AuthorizedUsersListWrapperComponent.prototype.retrieveAuthorizedUsers = function () {
            var _this = this;
            return this.userDataService.retrieveAuthorizedUser().pipe(operators.catchError(this.handleLoadingError), operators.tap(function () {
                _this.setLoadingIndicator(false);
            }));
        };
        AuthorizedUsersListWrapperComponent.prototype.pushNotification = function (header, message, modifier) {
            this.notificationService.showNotification({
                header: header,
                message: message,
                modifier: modifier,
                dismissible: true,
                ttl: 5000,
            });
        };
        Object.defineProperty(AuthorizedUsersListWrapperComponent.prototype, "imageEmptyStateUrl", {
            get: function () {
                return this.resolveAsset('authorized-users-empty-state');
            },
            enumerable: false,
            configurable: true
        });
        AuthorizedUsersListWrapperComponent.prototype.goToAuthorizedUser = function () {
            this.selectedUser.emit();
        };
        AuthorizedUsersListWrapperComponent.prototype.editPermissions = function (user) {
            this.selectedUser.emit(user.id);
        };
        AuthorizedUsersListWrapperComponent.prototype.setCurrentUser = function (user, actionName) {
            this.currentUser = user;
            this.actionName = actionName;
        };
        AuthorizedUsersListWrapperComponent.prototype.setLoadingIndicator = function (value) {
            this.isLoading.next(value);
        };
        AuthorizedUsersListWrapperComponent.prototype.removeUser = function (user) {
            var _this = this;
            var success = function () {
                _this.pushNotification($localize(templateObject_3 || (templateObject_3 = __makeTemplateObject(["Authorized user removed"], ["Authorized user removed"]))), $localize(templateObject_4 || (templateObject_4 = __makeTemplateObject(["Their permissions are permanently removed."], ["Their permissions are permanently removed."]))), 'success');
                _this.refreshList();
            };
            if (user && user.id) {
                this.setLoadingIndicator(true);
                this.currentUser = undefined;
                this.userDataService.removeAuthorizedUser(user.id).subscribe(success, this.handleOperationsError);
            }
        };
        AuthorizedUsersListWrapperComponent.prototype.updateUserStatus = function (user) {
            var _this = this;
            var success = function () {
                if (user.status !== AuthorizedUserStatus.PAUSED) {
                    _this.pushNotification($localize(templateObject_5 || (templateObject_5 = __makeTemplateObject(["Authorized user paused"], ["Authorized user paused"]))), $localize(templateObject_6 || (templateObject_6 = __makeTemplateObject(["You can resume their permissions at any time."], ["You can resume their permissions at any time."]))), 'success');
                }
                else {
                    _this.pushNotification($localize(templateObject_7 || (templateObject_7 = __makeTemplateObject(["User permissions resumed"], ["User permissions resumed"]))), $localize(templateObject_8 || (templateObject_8 = __makeTemplateObject(["Their permissions are now active again."], ["Their permissions are now active again."]))), 'success');
                }
                _this.refreshList();
            };
            if (user && user.id) {
                this.setLoadingIndicator(true);
                this.currentUser = undefined;
                this.userDataService
                    .updateAuthorizedUserStatus(user.id, user.status !== AuthorizedUserStatus.PAUSED ? SERVICE_AGREEMENT_DISABLED : SERVICE_AGREEMENT_ENABLED)
                    .subscribe(success, this.handleOperationsError);
            }
        };
        AuthorizedUsersListWrapperComponent.prototype.refreshList = function () {
            this.refreshAuthorizedUsers.next(true);
        };
        AuthorizedUsersListWrapperComponent.prototype.ngOnDestroy = function () {
            this.refreshAuthorizedUsers.complete();
            this.authorizedUsersListSubject.complete();
            this.isLoading.complete();
        };
        return AuthorizedUsersListWrapperComponent;
    }());
    AuthorizedUsersListWrapperComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersListWrapperComponent, deps: [{ token: i1__namespace$2.AssetsService }, { token: UserDataService }, { token: UsersUIService }, { token: i4__namespace$2.NotificationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUsersListWrapperComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersListWrapperComponent, selector: "bb-authorized-users-list-wrapper", outputs: { selectedUser: "selectedUser" }, ngImport: i0__namespace, template: "<ng-container *ngIf=\"!error; else errorState\">\n  <ng-container *ngIf=\"authorizedUsersList | async as list\">\n    <ng-container *ngIf=\"(showLoadingIndicator | async) === false; else loadingState\">\n      <ng-container *ngIf=\"list.items.length; else emptyState\">\n        <bb-authorized-users-list\n          [authorizedUsersList]=\"list.items\"\n          [levelsConfig]=\"levelsConfig\"\n          (edit)=\"editPermissions($event)\"\n          (remove)=\"setCurrentUser($event, 'remove')\"\n          (paused)=\"setCurrentUser($event, 'pause')\"\n          (resumed)=\"updateUserStatus($event)\"\n          (createAuthorizedUser)=\"goToAuthorizedUser()\"\n        ></bb-authorized-users-list>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n</ng-container>\n\n<ng-template #emptyState>\n  <bb-authorized-users-empty-list\n    [imageUrl]=\"imageEmptyStateUrl | async\"\n    (createAuthorizedUser)=\"goToAuthorizedUser()\"\n  ></bb-authorized-users-empty-list>\n</ng-template>\n\n<ng-template #loadingState>\n  <div class=\"card\">\n    <bb-loading-indicator-ui \n      loaderSize=\"lg\" \n      text=\"Loading...\"\n      i18n-text=\"Loading|Text for the loading indicator@@authorized.users.loading.indicator.text\"\n    ></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n\n<ng-template #errorState>\n  <div class=\"card\">\n    <div class=\"card-body bb-state-container\">\n      <bb-empty-state-ui\n        iconModifier=\"error-outline\"\n        iconColor=\"dark\"\n        title=\"Something Went Wrong\"\n        i18n-title=\"Error state title@@authorized.users.errorState.title\"\n        subtitle=\"Try to reload the page or contact the system administrator.\"\n        i18n-subtitle=\"Error state message@@authorized.users.errorState.message\"\n      ></bb-empty-state-ui>\n      <div class=\"bb-state-container__footer\">\n        <button \n          bbButton \n          color=\"primary\" \n          i18n=\"Reload button text@@authorized-users.errorState.reload.button\"\n        >\n          Reload\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<bb-authorized-user-list-remove-user-confirmation-dialog\n  [dialogOpen]=\"!!currentUser && actionName === 'remove'\"\n  (confirm)=\"removeUser(currentUser)\"\n  (closed)=\"setCurrentUser()\"\n></bb-authorized-user-list-remove-user-confirmation-dialog>\n\n<bb-authorized-user-list-confirmation-pause-user-dialog\n  [dialogOpen]=\"!!currentUser && actionName === 'pause'\"\n  (confirm)=\"updateUserStatus(currentUser)\"\n  (closed)=\"setCurrentUser()\"\n></bb-authorized-user-list-confirmation-pause-user-dialog>\n", components: [{ type: AuthorizedUsersListComponent, selector: "bb-authorized-users-list", inputs: ["authorizedUsersList", "levelsConfig"], outputs: ["edit", "remove", "paused", "resumed", "createAuthorizedUser"] }, { type: AuthorizedUsersEmptyListComponent, selector: "bb-authorized-users-empty-list", inputs: ["imageUrl"], outputs: ["createAuthorizedUser"] }, { type: i13__namespace.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i14__namespace.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }, { type: AuthorizedUsersListConfirmationRemoveUserDialogComponent, selector: "bb-authorized-user-list-remove-user-confirmation-dialog" }, { type: AuthorizedUserListConfirmationPauseUserDialogComponent, selector: "bb-authorized-user-list-confirmation-pause-user-dialog" }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3__namespace$2.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "async": i2__namespace.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersListWrapperComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-users-list-wrapper',
                        templateUrl: "authorized-users-list-wrapper.component.html",
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.AssetsService }, { type: UserDataService }, { type: UsersUIService }, { type: i4__namespace$2.NotificationService }]; }, propDecorators: { selectedUser: [{
                    type: i0.Output
                }] } });
    var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8;

    var components = [
        AuthorizedUsersListWrapperComponent,
        AuthorizedUsersEmptyListComponent,
        AuthorizedUsersListComponent,
        AuthorizedUsersListItemComponent,
        AuthorizedUsersListStatusBadgeComponent,
        AuthorizedUsersListConfirmationRemoveUserDialogComponent,
        AuthorizedUserListConfirmationPauseUserDialogComponent,
    ];
    var modules = [
        i3$2.ButtonModule,
        i1.IconModule,
        i9.PhoneNumberModule,
        i13.LoadingIndicatorModule,
        i14.EmptyStateModule,
        i7.NgbCollapseModule,
        i2$5.DropdownMenuModule,
        i1$7.ModalModule,
        i1$9.BadgeModule,
        i4$2.NotificationModule,
        AuthorizedUsersCommonModule,
    ];
    var AuthorizedUsersListModule = /** @class */ (function () {
        function AuthorizedUsersListModule() {
        }
        return AuthorizedUsersListModule;
    }());
    AuthorizedUsersListModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersListModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AuthorizedUsersListModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersListModule, declarations: [AuthorizedUsersListWrapperComponent,
            AuthorizedUsersEmptyListComponent,
            AuthorizedUsersListComponent,
            AuthorizedUsersListItemComponent,
            AuthorizedUsersListStatusBadgeComponent,
            AuthorizedUsersListConfirmationRemoveUserDialogComponent,
            AuthorizedUserListConfirmationPauseUserDialogComponent], imports: [i2.CommonModule, i1__namespace$2.BackbaseCoreModule, i3$2.ButtonModule,
            i1.IconModule,
            i9.PhoneNumberModule,
            i13.LoadingIndicatorModule,
            i14.EmptyStateModule,
            i7.NgbCollapseModule,
            i2$5.DropdownMenuModule,
            i1$7.ModalModule,
            i1$9.BadgeModule,
            i4$2.NotificationModule,
            AuthorizedUsersCommonModule], exports: [i3$2.ButtonModule,
            i1.IconModule,
            i9.PhoneNumberModule,
            i13.LoadingIndicatorModule,
            i14.EmptyStateModule,
            i7.NgbCollapseModule,
            i2$5.DropdownMenuModule,
            i1$7.ModalModule,
            i1$9.BadgeModule,
            i4$2.NotificationModule,
            AuthorizedUsersCommonModule, AuthorizedUsersListWrapperComponent,
            AuthorizedUsersEmptyListComponent,
            AuthorizedUsersListComponent,
            AuthorizedUsersListItemComponent,
            AuthorizedUsersListStatusBadgeComponent,
            AuthorizedUsersListConfirmationRemoveUserDialogComponent,
            AuthorizedUserListConfirmationPauseUserDialogComponent] });
    AuthorizedUsersListModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersListModule, imports: [__spreadArray([
                i2.CommonModule,
                i1$2.BackbaseCoreModule.withConfig({
                    classMap: { AuthorizedUsersListWrapperComponent: AuthorizedUsersListWrapperComponent },
                })
            ], __read(modules)), i3$2.ButtonModule,
            i1.IconModule,
            i9.PhoneNumberModule,
            i13.LoadingIndicatorModule,
            i14.EmptyStateModule,
            i7.NgbCollapseModule,
            i2$5.DropdownMenuModule,
            i1$7.ModalModule,
            i1$9.BadgeModule,
            i4$2.NotificationModule,
            AuthorizedUsersCommonModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersListModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: __spreadArray([], __read(components)),
                        imports: __spreadArray([
                            i2.CommonModule,
                            i1$2.BackbaseCoreModule.withConfig({
                                classMap: { AuthorizedUsersListWrapperComponent: AuthorizedUsersListWrapperComponent },
                            })
                        ], __read(modules)),
                        exports: __spreadArray(__spreadArray([], __read(modules)), __read(components)),
                    }]
            }] });

    var AuthorizedUsersJourneyConfigurationToken = new i0.InjectionToken('AuthorizedUsersJourneyConfiguration injection token');
    exports.FullAccessGranularity = void 0;
    (function (FullAccessGranularity) {
        FullAccessGranularity["PER_ACCOUNT"] = "individual-control";
        FullAccessGranularity["SAME_FOR_ALL_ACCOUNTS"] = "all-at-once";
    })(exports.FullAccessGranularity || (exports.FullAccessGranularity = {}));
    var configDefaults = {
        fullAccess: exports.FullAccessGranularity.SAME_FOR_ALL_ACCOUNTS,
        levelsConfig: {
            mappings: new LevelsMappingConfigImplementation(),
            uiConfig: Object.assign(Object.assign({}, DEFAULT_UI_LEVELS_CONFIG), DEFAULT_UI_PERMISSIONS_CONFIG),
        },
    };
    var AuthorizedUsersJourneyConfigService = /** @class */ (function () {
        function AuthorizedUsersJourneyConfigService(config) {
            config = config || {};
            this._config = Object.assign(Object.assign({}, configDefaults), config);
        }
        Object.defineProperty(AuthorizedUsersJourneyConfigService.prototype, "defaults", {
            get: function () {
                return configDefaults;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AuthorizedUsersJourneyConfigService.prototype, "fullAccess", {
            /**
             * Full access permission. Defines how the account owner can set access permissions: for all accounts at once, or for each account individually.
             */
            get: function () {
                return this._config.fullAccess;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AuthorizedUsersJourneyConfigService.prototype, "levelsConfig", {
            /**
             * Custom UI configuration for the permission levels and their permission sets.
             * For more details check https://community.backbase.com/documentation/Retail-Banking/latest/authorized_user_create_reference#create_authorized_users_configuration
             */
            get: function () {
                return this._config.levelsConfig;
            },
            enumerable: false,
            configurable: true
        });
        return AuthorizedUsersJourneyConfigService;
    }());
    AuthorizedUsersJourneyConfigService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersJourneyConfigService, deps: [{ token: AuthorizedUsersJourneyConfigurationToken, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    AuthorizedUsersJourneyConfigService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersJourneyConfigService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersJourneyConfigService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [AuthorizedUsersJourneyConfigurationToken]
                        }] }];
        } });

    var AuthorizedUserCreateViewComponent = /** @class */ (function () {
        function AuthorizedUserCreateViewComponent(config, router, route) {
            this.config = config;
            this.router = router;
            this.route = route;
            this.selectedUser = this.route.params.pipe(operators.map(function (params) { return params['selectedUser']; }));
        }
        AuthorizedUserCreateViewComponent.prototype.onClose = function () {
            this.router.navigate(['../list'], { relativeTo: this.route });
        };
        return AuthorizedUserCreateViewComponent;
    }());
    AuthorizedUserCreateViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUserCreateViewComponent, deps: [{ token: AuthorizedUsersJourneyConfigService }, { token: i1__namespace$8.Router }, { token: i1__namespace$8.ActivatedRoute }], target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUserCreateViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUserCreateViewComponent, selector: "bb-authorized-user-create-view", ngImport: i0__namespace, template: "\n    <bb-header-ui\n      headingType=\"h1\"\n      headingClasses=\"bb-heading-widget__heading px-0 pb-5\"\n      heading=\"Authorized User\"\n      i18n-heading=\"\n        Authorized User|Heading for the Create Authorized User View@@authorized-users.journey.create.heading.text\"\n    ></bb-header-ui>\n    <bb-authorized-users-create-wrapper\n      [selectedUser]=\"(selectedUser | async) || undefined\"\n      [enableAccountLevelFullAccessPermission]=\"config.fullAccess\"\n      (showAuthorizedUsers)=\"onClose()\"\n    ></bb-authorized-users-create-wrapper>\n  ", isInline: true, components: [{ type: i3__namespace$4.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: AuthorizedUsersCreateWrapperComponent, selector: "bb-authorized-users-create-wrapper", inputs: ["selectedUser", "enableAccountLevelFullAccessPermission"], outputs: ["showAuthorizedUsers"] }], pipes: { "async": i2__namespace.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUserCreateViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-user-create-view',
                        template: "\n    <bb-header-ui\n      headingType=\"h1\"\n      headingClasses=\"bb-heading-widget__heading px-0 pb-5\"\n      heading=\"Authorized User\"\n      i18n-heading=\"\n        Authorized User|Heading for the Create Authorized User View@@authorized-users.journey.create.heading.text\"\n    ></bb-header-ui>\n    <bb-authorized-users-create-wrapper\n      [selectedUser]=\"(selectedUser | async) || undefined\"\n      [enableAccountLevelFullAccessPermission]=\"config.fullAccess\"\n      (showAuthorizedUsers)=\"onClose()\"\n    ></bb-authorized-users-create-wrapper>\n  ",
                    }]
            }], ctorParameters: function () { return [{ type: AuthorizedUsersJourneyConfigService }, { type: i1__namespace$8.Router }, { type: i1__namespace$8.ActivatedRoute }]; } });

    var AuthorizedUsersListViewComponent = /** @class */ (function () {
        function AuthorizedUsersListViewComponent(router, route) {
            this.router = router;
            this.route = route;
        }
        AuthorizedUsersListViewComponent.prototype.onUserSelected = function (id) {
            this.router.navigate(['../create', id ? { selectedUser: id } : {}], { relativeTo: this.route });
        };
        return AuthorizedUsersListViewComponent;
    }());
    AuthorizedUsersListViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersListViewComponent, deps: [{ token: i1__namespace$8.Router }, { token: i1__namespace$8.ActivatedRoute }], target: i0__namespace.ɵɵFactoryTarget.Component });
    AuthorizedUsersListViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersListViewComponent, selector: "bb-authorized-users-list-view", ngImport: i0__namespace, template: "\n    <bb-header-ui\n      headingType=\"h1\"\n      headingClasses=\"bb-heading-widget__heading px-0 pb-5\"\n      heading=\"Authorized Users\"\n      i18n-heading=\"\n        Authorized Users|Heading for the Authorized Users List View@@authorized-users.journey.list.heading.text\"\n    ></bb-header-ui>\n    <bb-authorized-users-list-wrapper (selectedUser)=\"onUserSelected($event)\"></bb-authorized-users-list-wrapper>\n  ", isInline: true, components: [{ type: i3__namespace$4.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: AuthorizedUsersListWrapperComponent, selector: "bb-authorized-users-list-wrapper", outputs: ["selectedUser"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersListViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-authorized-users-list-view',
                        template: "\n    <bb-header-ui\n      headingType=\"h1\"\n      headingClasses=\"bb-heading-widget__heading px-0 pb-5\"\n      heading=\"Authorized Users\"\n      i18n-heading=\"\n        Authorized Users|Heading for the Authorized Users List View@@authorized-users.journey.list.heading.text\"\n    ></bb-header-ui>\n    <bb-authorized-users-list-wrapper (selectedUser)=\"onUserSelected($event)\"></bb-authorized-users-list-wrapper>\n  ",
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$8.Router }, { type: i1__namespace$8.ActivatedRoute }]; } });

    var defaultRoute = {
        path: '',
        component: AuthorizedUsersJourneyComponent,
        children: [
            {
                path: '',
                redirectTo: 'list',
                pathMatch: 'full',
            },
            {
                path: 'list',
                data: { title: 'Authorized users' },
                component: AuthorizedUsersListViewComponent,
            },
            {
                path: 'create',
                data: { title: 'Add authorized user' },
                component: AuthorizedUserCreateViewComponent,
            },
        ],
    };
    function getLevelsConfig(config) {
        return config.levelsConfig;
    }
    var AuthorizedUsersJourneyModule = /** @class */ (function () {
        function AuthorizedUsersJourneyModule() {
        }
        AuthorizedUsersJourneyModule.forRoot = function (data) {
            if (data === void 0) { data = { route: defaultRoute }; }
            return {
                ngModule: AuthorizedUsersJourneyModule,
                providers: [
                    i1$8.provideRoutes([data.route]),
                    {
                        provide: levelsMappingConfigToken,
                        useFactory: getLevelsConfig,
                        deps: [AuthorizedUsersJourneyConfigService],
                    },
                ],
            };
        };
        return AuthorizedUsersJourneyModule;
    }());
    AuthorizedUsersJourneyModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersJourneyModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AuthorizedUsersJourneyModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersJourneyModule, declarations: [AuthorizedUsersJourneyComponent, AuthorizedUsersListViewComponent, AuthorizedUserCreateViewComponent], imports: [i2.CommonModule, i1__namespace$2.BackbaseCoreModule, i1__namespace$8.RouterModule, i3$4.HeaderModule,
            AuthorizedUsersListModule,
            AuthorizedUsersCreateModule] });
    AuthorizedUsersJourneyModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersJourneyModule, providers: [AuthorizedUsersJourneyConfigService], imports: [[
                i2.CommonModule,
                i1$2.BackbaseCoreModule.withConfig({
                    classMap: { AuthorizedUsersJourneyComponent: AuthorizedUsersJourneyComponent },
                }),
                i1$8.RouterModule.forChild([]),
                i3$4.HeaderModule,
                AuthorizedUsersListModule,
                AuthorizedUsersCreateModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AuthorizedUsersJourneyModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [AuthorizedUsersJourneyComponent, AuthorizedUsersListViewComponent, AuthorizedUserCreateViewComponent],
                        imports: [
                            i2.CommonModule,
                            i1$2.BackbaseCoreModule.withConfig({
                                classMap: { AuthorizedUsersJourneyComponent: AuthorizedUsersJourneyComponent },
                            }),
                            i1$8.RouterModule.forChild([]),
                            i3$4.HeaderModule,
                            AuthorizedUsersListModule,
                            AuthorizedUsersCreateModule,
                        ],
                        providers: [AuthorizedUsersJourneyConfigService],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.AuthorizedUserCreateViewComponent = AuthorizedUserCreateViewComponent;
    exports.AuthorizedUsersJourneyConfigService = AuthorizedUsersJourneyConfigService;
    exports.AuthorizedUsersJourneyConfigurationToken = AuthorizedUsersJourneyConfigurationToken;
    exports.AuthorizedUsersJourneyModule = AuthorizedUsersJourneyModule;
    exports.AuthorizedUsersListViewComponent = AuthorizedUsersListViewComponent;
    exports.DEFAULT_UI_LEVELS_CONFIG = DEFAULT_UI_LEVELS_CONFIG;
    exports.DEFAULT_UI_PERMISSIONS_CONFIG = DEFAULT_UI_PERMISSIONS_CONFIG;
    exports.LevelsMappingConfigImplementation = LevelsMappingConfigImplementation;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-authorized-users-journey-ang.umd.js.map
