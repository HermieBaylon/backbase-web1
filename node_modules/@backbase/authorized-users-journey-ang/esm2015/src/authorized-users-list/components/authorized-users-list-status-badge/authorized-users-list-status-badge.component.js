import { Component, Input } from '@angular/core';
import { AuthorizedUserStatus } from '../../../common/model/authorized-users.model';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/badge";
import * as i2 from "@angular/common";
export class AuthorizedUsersListStatusBadgeComponent {
    constructor() {
        this.authorizedUserStatus = AuthorizedUserStatus;
    }
}
AuthorizedUsersListStatusBadgeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AuthorizedUsersListStatusBadgeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
AuthorizedUsersListStatusBadgeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersListStatusBadgeComponent, selector: "bb-authorized-users-list-status-badge", inputs: { authorizedUsersStatus: "authorizedUsersStatus" }, ngImport: i0, template: "<div class=\"bb-stack bb-block bb-block--md\" >\n  <ng-container *ngIf=\"authorizedUsersStatus === authorizedUserStatus.ACTIVE\">\n    <bb-badge-ui\n      text=\"Active\"\n      i18n-text=\"Active Label|Text for the active label@@authorized.users.status.active\"\n      color=\"success\"\n    ></bb-badge-ui>\n  </ng-container>\n\n  <ng-container *ngIf=\"authorizedUsersStatus === authorizedUserStatus.AWAITING_REGISTRATION\">\n    <bb-badge-ui\n      text=\"Awaiting Registration\"\n      i18n-text=\"Awaiting Registration Label|Text for the scheduled label@@authorized.users.status.awating\"\n      color=\"info\"\n    ></bb-badge-ui>\n  </ng-container>\n\n  <ng-container *ngIf=\"authorizedUsersStatus === authorizedUserStatus.PAUSED\">\n    <bb-badge-ui\n      text=\"Paused\"\n      i18n-text=\"Paused Label|Text for the expired label@@authorized.users.status.paused\"\n      color=\"warning\"\n    ></bb-badge-ui>\n  </ng-container>\n</div>", components: [{ type: i1.BadgeComponent, selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AuthorizedUsersListStatusBadgeComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-authorized-users-list-status-badge',
                    templateUrl: './authorized-users-list-status-badge.component.html',
                }]
        }], propDecorators: { authorizedUsersStatus: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aG9yaXplZC11c2Vycy1saXN0LXN0YXR1cy1iYWRnZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2F1dGhvcml6ZWQtdXNlcnMtam91cm5leS9zcmMvYXV0aG9yaXplZC11c2Vycy1saXN0L2NvbXBvbmVudHMvYXV0aG9yaXplZC11c2Vycy1saXN0LXN0YXR1cy1iYWRnZS9hdXRob3JpemVkLXVzZXJzLWxpc3Qtc3RhdHVzLWJhZGdlLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvYXV0aG9yaXplZC11c2Vycy1qb3VybmV5L3NyYy9hdXRob3JpemVkLXVzZXJzLWxpc3QvY29tcG9uZW50cy9hdXRob3JpemVkLXVzZXJzLWxpc3Qtc3RhdHVzLWJhZGdlL2F1dGhvcml6ZWQtdXNlcnMtbGlzdC1zdGF0dXMtYmFkZ2UuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sOENBQThDLENBQUM7Ozs7QUFNcEYsTUFBTSxPQUFPLHVDQUF1QztJQUpwRDtRQVVFLHlCQUFvQixHQUFHLG9CQUFvQixDQUFDO0tBQzdDOztxSUFQWSx1Q0FBdUM7eUhBQXZDLHVDQUF1Qyx5SUNQcEQsbzdCQXdCTTs0RkRqQk8sdUNBQXVDO2tCQUpuRCxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSx1Q0FBdUM7b0JBQ2pELFdBQVcsRUFBRSxxREFBcUQ7aUJBQ25FOzhCQUtVLHFCQUFxQjtzQkFBN0IsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEF1dGhvcml6ZWRVc2VyU3RhdHVzIH0gZnJvbSAnLi4vLi4vLi4vY29tbW9uL21vZGVsL2F1dGhvcml6ZWQtdXNlcnMubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1hdXRob3JpemVkLXVzZXJzLWxpc3Qtc3RhdHVzLWJhZGdlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2F1dGhvcml6ZWQtdXNlcnMtbGlzdC1zdGF0dXMtYmFkZ2UuY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBBdXRob3JpemVkVXNlcnNMaXN0U3RhdHVzQmFkZ2VDb21wb25lbnQge1xuICAvKipcbiAgICogQXV0aG9yaXplZCB1c2VycyBzdGF0dXMuXG4gICAqL1xuICBASW5wdXQoKSBhdXRob3JpemVkVXNlcnNTdGF0dXM6IHN0cmluZyB8IHVuZGVmaW5lZDtcblxuICBhdXRob3JpemVkVXNlclN0YXR1cyA9IEF1dGhvcml6ZWRVc2VyU3RhdHVzO1xufVxuIiwiPGRpdiBjbGFzcz1cImJiLXN0YWNrIGJiLWJsb2NrIGJiLWJsb2NrLS1tZFwiID5cbiAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImF1dGhvcml6ZWRVc2Vyc1N0YXR1cyA9PT0gYXV0aG9yaXplZFVzZXJTdGF0dXMuQUNUSVZFXCI+XG4gICAgPGJiLWJhZGdlLXVpXG4gICAgICB0ZXh0PVwiQWN0aXZlXCJcbiAgICAgIGkxOG4tdGV4dD1cIkFjdGl2ZSBMYWJlbHxUZXh0IGZvciB0aGUgYWN0aXZlIGxhYmVsQEBhdXRob3JpemVkLnVzZXJzLnN0YXR1cy5hY3RpdmVcIlxuICAgICAgY29sb3I9XCJzdWNjZXNzXCJcbiAgICA+PC9iYi1iYWRnZS11aT5cbiAgPC9uZy1jb250YWluZXI+XG5cbiAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImF1dGhvcml6ZWRVc2Vyc1N0YXR1cyA9PT0gYXV0aG9yaXplZFVzZXJTdGF0dXMuQVdBSVRJTkdfUkVHSVNUUkFUSU9OXCI+XG4gICAgPGJiLWJhZGdlLXVpXG4gICAgICB0ZXh0PVwiQXdhaXRpbmcgUmVnaXN0cmF0aW9uXCJcbiAgICAgIGkxOG4tdGV4dD1cIkF3YWl0aW5nIFJlZ2lzdHJhdGlvbiBMYWJlbHxUZXh0IGZvciB0aGUgc2NoZWR1bGVkIGxhYmVsQEBhdXRob3JpemVkLnVzZXJzLnN0YXR1cy5hd2F0aW5nXCJcbiAgICAgIGNvbG9yPVwiaW5mb1wiXG4gICAgPjwvYmItYmFkZ2UtdWk+XG4gIDwvbmctY29udGFpbmVyPlxuXG4gIDxuZy1jb250YWluZXIgKm5nSWY9XCJhdXRob3JpemVkVXNlcnNTdGF0dXMgPT09IGF1dGhvcml6ZWRVc2VyU3RhdHVzLlBBVVNFRFwiPlxuICAgIDxiYi1iYWRnZS11aVxuICAgICAgdGV4dD1cIlBhdXNlZFwiXG4gICAgICBpMThuLXRleHQ9XCJQYXVzZWQgTGFiZWx8VGV4dCBmb3IgdGhlIGV4cGlyZWQgbGFiZWxAQGF1dGhvcml6ZWQudXNlcnMuc3RhdHVzLnBhdXNlZFwiXG4gICAgICBjb2xvcj1cIndhcm5pbmdcIlxuICAgID48L2JiLWJhZGdlLXVpPlxuICA8L25nLWNvbnRhaW5lcj5cbjwvZGl2PiJdfQ==