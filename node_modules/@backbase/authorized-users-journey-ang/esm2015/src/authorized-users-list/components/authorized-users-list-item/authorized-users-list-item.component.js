import { Component, EventEmitter, Input, Output } from '@angular/core';
import { AuthorizedUserStatus, } from '../../../common/model/authorized-users.model';
import * as i0 from "@angular/core";
import * as i1 from "../authorized-users-list-status-badge/authorized-users-list-status-badge.component";
import * as i2 from "@backbase/ui-ang/dropdown-menu";
import * as i3 from "@backbase/ui-ang/icon";
import * as i4 from "../../../common/components/permissions-table/permissions-table.component";
import * as i5 from "../../../common/utils/accessibility-keyboard.directive";
import * as i6 from "@angular/common";
import * as i7 from "@ng-bootstrap/ng-bootstrap";
import * as i8 from "@backbase/ui-ang/button";
import * as i9 from "@backbase/ui-ang/phone-number-format-pipe";
export class AuthorizedUsersListItemComponent {
    constructor() {
        this.edit = new EventEmitter();
        this.remove = new EventEmitter();
        this.paused = new EventEmitter();
        this.resumed = new EventEmitter();
        this.authorizedUserStatus = AuthorizedUserStatus;
        this.arePermissionsOpen = false;
        this.isUserActionsEnabled = false;
    }
    togglePermissionsVisibility() {
        this.arePermissionsOpen = !this.arePermissionsOpen;
    }
    editPermissions() {
        this.edit.emit(this.authorizedUsersItem);
    }
    removeUser() {
        this.remove.emit(this.authorizedUsersItem);
    }
    pauseUser() {
        this.paused.emit(this.authorizedUsersItem);
    }
    resumeUser() {
        this.resumed.emit(this.authorizedUsersItem);
    }
}
AuthorizedUsersListItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AuthorizedUsersListItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
AuthorizedUsersListItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersListItemComponent, selector: "bb-authorized-users-list-item", inputs: { authorizedUsersItem: "authorizedUsersItem", levelsConfig: "levelsConfig" }, outputs: { edit: "edit", remove: "remove", paused: "paused", resumed: "resumed" }, ngImport: i0, template: "<div class=\"card card-lg\">\n  <div class=\"card-body\" bbAuthorizedUsersAccessibilityKeyboard>\n    <div class=\"bb-stack bb-stack--density-sm\">\n      <div class=\"bb-stack__item\">\n        <p data-role=\"user-fullName\" class=\"bb-heading-3\">\n          {{authorizedUsersItem?.firstName + ' ' + authorizedUsersItem?.lastName}}\n        </p>\n      </div>\n\n      <div class=\"bb-stack__item\" data-role=\"user-status-badge\">\n        <bb-authorized-users-list-status-badge\n          [authorizedUsersStatus]=\"authorizedUsersItem?.status\"\n        ></bb-authorized-users-list-status-badge>\n      </div>\n\n      <div class=\"bb-stack__item bb-stack__item--push-right\">\n        <bb-dropdown-menu-ui\n          icon=\"ellipsis-h\"\n          btnColor=\"link-dark\"\n          btnCircle=\"true\"\n          container=\"body\"\n          position=\"bottom-right\"\n          data-role=\"options-dropdown\"\n          aria-label=\"Options\"\n          i18n-aria-label=\"Options button|Authorized user options button tooltip@@authorized.users.options.label\"\n        >\n          <ng-template bbDropdownMenuItem>\n            <a\n              bbAuthorizedUsersAccessibilityKeyboard\n              rel=\"noopener\"\n              role=\"menuitem\"\n              class=\"dropdown-item\"\n              data-role=\"edit-item\"\n              target=\"_blank\"\n              (click)=\"editPermissions()\"\n            >\n              <span class=\"bb-inline-stack\">\n                <bb-icon-ui class=\"bb-inline-stack__item\" name=\"edit\" size=\"md\"></bb-icon-ui>\n                <span \n                  class=\"bb-inline-stack__item\"  \n                  i18n=\"Edit User Permissions|Label for edit authorized user permissions action@@authorized.users.edit\"\n                >\n                  Edit User Permissions\n                </span>\n              </span>\n            </a>\n            <ng-container *ngIf=\"authorizedUsersItem?.status!==authorizedUserStatus.PAUSED; else resumeAuthorizedUserOption\">\n              <a\n                bbAuthorizedUsersAccessibilityKeyboard\n                rel=\"noopener\"\n                role=\"menuitem\"\n                class=\"dropdown-item\"\n                data-role=\"pause-item\"\n                target=\"_blank\"\n                (click)=\"pauseUser()\"\n              >\n                <span class=\"bb-inline-stack\">\n                  <bb-icon-ui class=\"bb-inline-stack__item\" name=\"pause\" size=\"md\"></bb-icon-ui>\n                  <span \n                    class=\"bb-inline-stack__item\" \n                    i18n=\"Pause Permissions|Label for pause authorized user permissions action@@authorized.users.paused\"\n                  >\n                    Pause Permissions\n                  </span>\n                </span>\n              </a>\n            </ng-container>\n            <ng-template #resumeAuthorizedUserOption>\n              <a\n                bbAuthorizedUsersAccessibilityKeyboard\n                rel=\"noopener\"\n                role=\"menuitem\"\n                class=\"dropdown-item\"\n                data-role=\"resume-item\"\n                target=\"_blank\"\n                (click)=\"resumeUser()\"\n              >\n                <span class=\"bb-inline-stack\">\n                  <bb-icon-ui class=\"bb-inline-stack__item\" name=\"update\" size=\"md\"></bb-icon-ui>\n                  <span \n                    class=\"bb-inline-stack__item\" \n                    i18n=\"Resume Permissions|Label for resume authorized user permissions action@@authorized.users.resumed\"\n                  >\n                    Resume Permissions\n                  </span>\n                </span>\n              </a>\n            </ng-template>\n            <a\n              bbAuthorizedUsersAccessibilityKeyboard\n              rel=\"noopener\"\n              role=\"menuitem\"\n              class=\"dropdown-item\"\n              data-role=\"remove-item\"\n              target=\"_blank\"\n              (click)=\"removeUser()\"\n            >\n              <span class=\"bb-inline-stack\">\n                <bb-icon-ui class=\"bb-inline-stack__item\" name=\"delete\" size=\"md\" color=\"danger\"></bb-icon-ui>\n                <span \n                  class=\"bb-inline-stack__item bb-text-danger\" \n                  i18n=\"Remove Authorized User|Label for remove authorized user action@@authorized.users.remove\"\n                >\n                  Remove Authorized User\n                </span>\n              </span>\n            </a>\n          </ng-template>\n        </bb-dropdown-menu-ui>\n      </div>\n    </div>\n\n    <div class=\"bb-block bb-block--sm\">\n      <div \n        class=\"bb-block bb-block--xs bb-text-support text-small\" \n        data-role=\"user-email\"\n      >\n        {{authorizedUsersItem?.email}} \n      </div>\n      <div \n        class=\"bb-text-support text-small\" \n        data-role=\"user-phone-number\"\n      > \n        {{authorizedUsersItem?.mobileNumber | phoneNumber: 'US'}} \n      </div>\n    </div>\n    \n    <div [ngbCollapse]=\"!arePermissionsOpen\" bbAuthorizedUsersAccessibilityKeyboard>\n      <div class=\"bb-block bb-block--xs\" data-role=\"user-username\" *ngIf=\"authorizedUsersItem?.username\"> \n        <span \n          class=\"bb-text-bold text-small\"\n          i18n='Authorized users list username header@@authorized.users.list.username.header'\n        >\n          Username: \n        </span>\n        <span class=\"bb-text-support text-small\">{{authorizedUsersItem?.username}}</span>\n      </div>\n      <div class=\"bb-block bb-block--md\" data-role=\"user-permissions-table\">\n        <bb-authorized-users-permissions-levels-table \n          [selectedAccounts]=\"authorizedUsersItem?.permissions\"\n          [levelsConfig]=\"levelsConfig\"\n        ></bb-authorized-users-permissions-levels-table>\n      </div>\n    </div>\n\n    <div>\n      <button bbButton data-role=\"permissions-button\" buttonSize=\"sm\" color=\"link-text\" (click)=\"togglePermissionsVisibility()\">\n        <bb-icon-ui [name]=\"arePermissionsOpen ? 'toggle-up' : 'toggle-down'\" size=\"md\"></bb-icon-ui>\n        <span \n          i18n='Hide user permissions button@@authorized.users.list.hide.button' \n          *ngIf=\"arePermissionsOpen\"\n        >\n          Hide User Permissions\n        </span>\n        <span \n          i18n='See user permissions button@@authorized.users.list.seeMore.button' \n          *ngIf=\"!arePermissionsOpen\"\n        >\n          See User Permissions\n        </span>\n      </button>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1.AuthorizedUsersListStatusBadgeComponent, selector: "bb-authorized-users-list-status-badge", inputs: ["authorizedUsersStatus"] }, { type: i2.DropdownMenuComponent, selector: "bb-dropdown-menu-ui", inputs: ["label", "disabled", "options", "icon", "iconSize", "iconColor", "btnColor", "btnCircle", "optionLabelKey", "fullWidth", "autoClose", "container", "position", "ariaLabel", "buttonSize", "dropDownButtonLabel", "visibleElementDependingOnViewport", "role"], outputs: ["select"] }, { type: i3.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i4.AuthorizedUsersPermissionsLevelsTableComponent, selector: "bb-authorized-users-permissions-levels-table", inputs: ["selectedAccounts", "isEditing", "enableAccountLevelFullAccessPermission", "levelsConfig"], outputs: ["updateAccount"] }], directives: [{ type: i5.AuthorizedUsersAccessibilityKeyboardDirective, selector: "[bbAuthorizedUsersAccessibilityKeyboard]" }, { type: i2.DropdownMenuItemDirective, selector: "ng-template[bbDropdownMenuItem]" }, { type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i7.NgbCollapse, selector: "[ngbCollapse]", inputs: ["ngbCollapse", "animation"], outputs: ["ngbCollapseChange", "shown", "hidden"], exportAs: ["ngbCollapse"] }, { type: i8.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "phoneNumber": i9.PhoneNumberPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AuthorizedUsersListItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-authorized-users-list-item',
                    templateUrl: `./authorized-users-list-item.component.html`,
                }]
        }], propDecorators: { authorizedUsersItem: [{
                type: Input
            }], levelsConfig: [{
                type: Input
            }], edit: [{
                type: Output
            }], remove: [{
                type: Output
            }], paused: [{
                type: Output
            }], resumed: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,