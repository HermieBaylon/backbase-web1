import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/icon";
import * as i2 from "@angular/common";
import * as i3 from "../../../common/utils/accessibility-keyboard.directive";
export class AuthorizedUsersPermissionsCardComponent {
    constructor() {
        this.icon = '';
        this.title = '';
        this.disabled = false;
        this.permissions = [];
    }
    ngOnInit() {
        if (this.permissionsAssigned && this.permissionsConfig) {
            const permissionsAssigned = this.permissionsAssigned;
            this.permissions = this.permissionsConfig.map((name, index) => ({ name, value: permissionsAssigned[index] }));
        }
    }
}
AuthorizedUsersPermissionsCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AuthorizedUsersPermissionsCardComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
AuthorizedUsersPermissionsCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AuthorizedUsersPermissionsCardComponent, selector: "bb-authorized-users-permissions-card", inputs: { icon: "icon", title: "title", name: "name", currentName: "currentName", permissionsConfig: "permissionsConfig", permissionsAssigned: "permissionsAssigned", disabled: "disabled" }, ngImport: i0, template: "<div \n  class=\"bb-authorized-users-permission-card card card-sm\"\n  [ngClass]=\"{\n    'bb-authorized-users-permission-card--selected': name===currentName,\n    'bb-authorized-users-permission-card--disabled': disabled\n  }\"\n>\n  <div class=\"card-body\" bbAuthorizedUsersAccessibilityKeyboard>\n    <div class=\"bb-stack\">\n      <div class=\"bb-stack__item bb-stack__item--push-right\">\n        <span class=\"bb-authorized-user-permission-card__radio\">\n          <bb-icon-ui \n            [name]=\"name===currentName?'radio-button-checked':'radio-button-unchecked'\"\n            [color]=\"name===currentName?'primary':'inactive'\"\n          ></bb-icon-ui>\n        </span>\n      </div>\n    </div>\n    <div class=\"bb-text-align-center\">\n      <bb-icon-ui [name]=\"icon\"></bb-icon-ui>\n    </div>\n    <div class=\"bb-block bb-block--md bb-highlight bb-text-align-center\">\n      {{title}}\n    </div> \n    \n\n    <ul class=\"bb-list\">\n      <li class=\"bb-stack bb-block bb-block--md\" *ngFor=\"let permission of permissions\">\n        <bb-icon-ui \n          class=\"bb-stack__item\" \n          [color]=\"permission.value?'success':'danger'\" \n          size=\"sm\" \n          [name]=\"permission.value?'check':'clear'\" \n          aria-label=\"include: \"\n          i18n-aria-label=\"include: @@uthorized.users.permissions.card.include\"\n        ></bb-icon-ui>\n        <span class=\"bb-text-support bb-subheader bb-subheader--regular\">{{permission.name}}</span>\n      </li>\n    </ul>\n  </div>\n</div>\n<div \n  data-role=\"user-permissions-card-disclaimer\"\n  class=\"bb-authorized-users-permission-card__disclaimer text-small text-center\" \n  *ngIf=\"name===currentName\"\n  i18n=\"authorized users disclaimer@@authorized-users.create.permissions.card.disclaimer\"\n>\n  Applied to all Selected Accounts\n</div>", components: [{ type: i1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i3.AuthorizedUsersAccessibilityKeyboardDirective, selector: "[bbAuthorizedUsersAccessibilityKeyboard]" }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AuthorizedUsersPermissionsCardComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-authorized-users-permissions-card',
                    templateUrl: 'authorized-users-permissions-card.component.html',
                }]
        }], propDecorators: { icon: [{
                type: Input
            }], title: [{
                type: Input
            }], name: [{
                type: Input
            }], currentName: [{
                type: Input
            }], permissionsConfig: [{
                type: Input
            }], permissionsAssigned: [{
                type: Input
            }], disabled: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aG9yaXplZC11c2Vycy1wZXJtaXNzaW9ucy1jYXJkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvYXV0aG9yaXplZC11c2Vycy1qb3VybmV5L3NyYy9hdXRob3JpemVkLXVzZXJzLWNyZWF0ZS9jb21wb25lbnRzL2F1dGhvcml6ZWQtdXNlcnMtcGVybWlzc2lvbnMvYXV0aG9yaXplZC11c2Vycy1wZXJtaXNzaW9ucy1jYXJkLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvYXV0aG9yaXplZC11c2Vycy1qb3VybmV5L3NyYy9hdXRob3JpemVkLXVzZXJzLWNyZWF0ZS9jb21wb25lbnRzL2F1dGhvcml6ZWQtdXNlcnMtcGVybWlzc2lvbnMvYXV0aG9yaXplZC11c2Vycy1wZXJtaXNzaW9ucy1jYXJkLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDOzs7OztBQVd6RCxNQUFNLE9BQU8sdUNBQXVDO0lBSnBEO1FBS1csU0FBSSxHQUFHLEVBQUUsQ0FBQztRQUNWLFVBQUssR0FBRyxFQUFFLENBQUM7UUFLWCxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBRTFCLGdCQUFXLEdBQWlCLEVBQUUsQ0FBQztLQU9oQztJQU5DLFFBQVE7UUFDTixJQUFJLElBQUksQ0FBQyxtQkFBbUIsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDdEQsTUFBTSxtQkFBbUIsR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUM7WUFDckQsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsbUJBQW1CLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7U0FDL0c7SUFDSCxDQUFDOztxSUFmVSx1Q0FBdUM7eUhBQXZDLHVDQUF1QywwUUNYcEQsOHpEQWdETTs0RkRyQ08sdUNBQXVDO2tCQUpuRCxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxzQ0FBc0M7b0JBQ2hELFdBQVcsRUFBRSxrREFBa0Q7aUJBQ2hFOzhCQUVVLElBQUk7c0JBQVosS0FBSztnQkFDRyxLQUFLO3NCQUFiLEtBQUs7Z0JBQ0csSUFBSTtzQkFBWixLQUFLO2dCQUNHLFdBQVc7c0JBQW5CLEtBQUs7Z0JBQ0csaUJBQWlCO3NCQUF6QixLQUFLO2dCQUNHLG1CQUFtQjtzQkFBM0IsS0FBSztnQkFDRyxRQUFRO3NCQUFoQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmludGVyZmFjZSBQZXJtaXNzaW9uIHtcbiAgbmFtZTogc3RyaW5nO1xuICB2YWx1ZTogYm9vbGVhbjtcbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItYXV0aG9yaXplZC11c2Vycy1wZXJtaXNzaW9ucy1jYXJkJyxcbiAgdGVtcGxhdGVVcmw6ICdhdXRob3JpemVkLXVzZXJzLXBlcm1pc3Npb25zLWNhcmQuY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBBdXRob3JpemVkVXNlcnNQZXJtaXNzaW9uc0NhcmRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSBpY29uID0gJyc7XG4gIEBJbnB1dCgpIHRpdGxlID0gJyc7XG4gIEBJbnB1dCgpIG5hbWU6IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgQElucHV0KCkgY3VycmVudE5hbWU6IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgQElucHV0KCkgcGVybWlzc2lvbnNDb25maWc6IHN0cmluZ1tdIHwgdW5kZWZpbmVkO1xuICBASW5wdXQoKSBwZXJtaXNzaW9uc0Fzc2lnbmVkOiBib29sZWFuW10gfCB1bmRlZmluZWQ7XG4gIEBJbnB1dCgpIGRpc2FibGVkID0gZmFsc2U7XG5cbiAgcGVybWlzc2lvbnM6IFBlcm1pc3Npb25bXSA9IFtdO1xuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAodGhpcy5wZXJtaXNzaW9uc0Fzc2lnbmVkICYmIHRoaXMucGVybWlzc2lvbnNDb25maWcpIHtcbiAgICAgIGNvbnN0IHBlcm1pc3Npb25zQXNzaWduZWQgPSB0aGlzLnBlcm1pc3Npb25zQXNzaWduZWQ7XG4gICAgICB0aGlzLnBlcm1pc3Npb25zID0gdGhpcy5wZXJtaXNzaW9uc0NvbmZpZy5tYXAoKG5hbWUsIGluZGV4KSA9PiAoeyBuYW1lLCB2YWx1ZTogcGVybWlzc2lvbnNBc3NpZ25lZFtpbmRleF0gfSkpO1xuICAgIH1cbiAgfVxufVxuIiwiPGRpdiBcbiAgY2xhc3M9XCJiYi1hdXRob3JpemVkLXVzZXJzLXBlcm1pc3Npb24tY2FyZCBjYXJkIGNhcmQtc21cIlxuICBbbmdDbGFzc109XCJ7XG4gICAgJ2JiLWF1dGhvcml6ZWQtdXNlcnMtcGVybWlzc2lvbi1jYXJkLS1zZWxlY3RlZCc6IG5hbWU9PT1jdXJyZW50TmFtZSxcbiAgICAnYmItYXV0aG9yaXplZC11c2Vycy1wZXJtaXNzaW9uLWNhcmQtLWRpc2FibGVkJzogZGlzYWJsZWRcbiAgfVwiXG4+XG4gIDxkaXYgY2xhc3M9XCJjYXJkLWJvZHlcIiBiYkF1dGhvcml6ZWRVc2Vyc0FjY2Vzc2liaWxpdHlLZXlib2FyZD5cbiAgICA8ZGl2IGNsYXNzPVwiYmItc3RhY2tcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJiYi1zdGFja19faXRlbSBiYi1zdGFja19faXRlbS0tcHVzaC1yaWdodFwiPlxuICAgICAgICA8c3BhbiBjbGFzcz1cImJiLWF1dGhvcml6ZWQtdXNlci1wZXJtaXNzaW9uLWNhcmRfX3JhZGlvXCI+XG4gICAgICAgICAgPGJiLWljb24tdWkgXG4gICAgICAgICAgICBbbmFtZV09XCJuYW1lPT09Y3VycmVudE5hbWU/J3JhZGlvLWJ1dHRvbi1jaGVja2VkJzoncmFkaW8tYnV0dG9uLXVuY2hlY2tlZCdcIlxuICAgICAgICAgICAgW2NvbG9yXT1cIm5hbWU9PT1jdXJyZW50TmFtZT8ncHJpbWFyeSc6J2luYWN0aXZlJ1wiXG4gICAgICAgICAgPjwvYmItaWNvbi11aT5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImJiLXRleHQtYWxpZ24tY2VudGVyXCI+XG4gICAgICA8YmItaWNvbi11aSBbbmFtZV09XCJpY29uXCI+PC9iYi1pY29uLXVpPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJiYi1ibG9jayBiYi1ibG9jay0tbWQgYmItaGlnaGxpZ2h0IGJiLXRleHQtYWxpZ24tY2VudGVyXCI+XG4gICAgICB7e3RpdGxlfX1cbiAgICA8L2Rpdj4gXG4gICAgXG5cbiAgICA8dWwgY2xhc3M9XCJiYi1saXN0XCI+XG4gICAgICA8bGkgY2xhc3M9XCJiYi1zdGFjayBiYi1ibG9jayBiYi1ibG9jay0tbWRcIiAqbmdGb3I9XCJsZXQgcGVybWlzc2lvbiBvZiBwZXJtaXNzaW9uc1wiPlxuICAgICAgICA8YmItaWNvbi11aSBcbiAgICAgICAgICBjbGFzcz1cImJiLXN0YWNrX19pdGVtXCIgXG4gICAgICAgICAgW2NvbG9yXT1cInBlcm1pc3Npb24udmFsdWU/J3N1Y2Nlc3MnOidkYW5nZXInXCIgXG4gICAgICAgICAgc2l6ZT1cInNtXCIgXG4gICAgICAgICAgW25hbWVdPVwicGVybWlzc2lvbi52YWx1ZT8nY2hlY2snOidjbGVhcidcIiBcbiAgICAgICAgICBhcmlhLWxhYmVsPVwiaW5jbHVkZTogXCJcbiAgICAgICAgICBpMThuLWFyaWEtbGFiZWw9XCJpbmNsdWRlOiBAQHV0aG9yaXplZC51c2Vycy5wZXJtaXNzaW9ucy5jYXJkLmluY2x1ZGVcIlxuICAgICAgICA+PC9iYi1pY29uLXVpPlxuICAgICAgICA8c3BhbiBjbGFzcz1cImJiLXRleHQtc3VwcG9ydCBiYi1zdWJoZWFkZXIgYmItc3ViaGVhZGVyLS1yZWd1bGFyXCI+e3twZXJtaXNzaW9uLm5hbWV9fTwvc3Bhbj5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgPC9kaXY+XG48L2Rpdj5cbjxkaXYgXG4gIGRhdGEtcm9sZT1cInVzZXItcGVybWlzc2lvbnMtY2FyZC1kaXNjbGFpbWVyXCJcbiAgY2xhc3M9XCJiYi1hdXRob3JpemVkLXVzZXJzLXBlcm1pc3Npb24tY2FyZF9fZGlzY2xhaW1lciB0ZXh0LXNtYWxsIHRleHQtY2VudGVyXCIgXG4gICpuZ0lmPVwibmFtZT09PWN1cnJlbnROYW1lXCJcbiAgaTE4bj1cImF1dGhvcml6ZWQgdXNlcnMgZGlzY2xhaW1lckBAYXV0aG9yaXplZC11c2Vycy5jcmVhdGUucGVybWlzc2lvbnMuY2FyZC5kaXNjbGFpbWVyXCJcbj5cbiAgQXBwbGllZCB0byBhbGwgU2VsZWN0ZWQgQWNjb3VudHNcbjwvZGl2PiJdfQ==