const getMessageFromResponse = (error) => {
    const responseBody = error.error;
    if (responseBody && responseBody.errors && responseBody.errors[0] && responseBody.errors[0].message) {
        return responseBody.errors[0].message;
    }
    else {
        return undefined;
    }
};
/**
 * Parse an HttpErrorResponse and return a AuthorizedUsersError object that can be used to display a
 * user-friendly error message.
 */
export const parseError = (errorResponse) => {
    if (errorResponse.error instanceof ErrorEvent) {
        // Client-side or network error.
        return {
            message: 'An unexpected error occurred',
        };
    }
    else {
        switch (errorResponse.status) {
            case 400:
                return {
                    message: getMessageFromResponse(errorResponse) || 'Error 400',
                };
            case 401:
                return {
                    message: 'Error 401',
                };
            case 403:
                return {
                    message: 'Error 403',
                };
            case 404:
                return {
                    message: 'Error 404',
                };
            default:
                return {
                    message: 'An unexpected error occurred',
                };
        }
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aG9yaXplZC11c2Vycy1lcnJvci5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvYXV0aG9yaXplZC11c2Vycy1qb3VybmV5L3NyYy9jb21tb24vbW9kZWwvYXV0aG9yaXplZC11c2Vycy1lcnJvci5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQSxNQUFNLHNCQUFzQixHQUFHLENBQUMsS0FBd0IsRUFBRSxFQUFFO0lBQzFELE1BQU0sWUFBWSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUM7SUFFakMsSUFBSSxZQUFZLElBQUksWUFBWSxDQUFDLE1BQU0sSUFBSSxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxFQUFFO1FBQ25HLE9BQU8sWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7S0FDdkM7U0FBTTtRQUNMLE9BQU8sU0FBUyxDQUFDO0tBQ2xCO0FBQ0gsQ0FBQyxDQUFDO0FBRUY7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLENBQUMsYUFBZ0MsRUFBd0IsRUFBRTtJQUNuRixJQUFJLGFBQWEsQ0FBQyxLQUFLLFlBQVksVUFBVSxFQUFFO1FBQzdDLGdDQUFnQztRQUNoQyxPQUFPO1lBQ0wsT0FBTyxFQUFFLDhCQUE4QjtTQUN4QyxDQUFDO0tBQ0g7U0FBTTtRQUNMLFFBQVEsYUFBYSxDQUFDLE1BQU0sRUFBRTtZQUM1QixLQUFLLEdBQUc7Z0JBQ04sT0FBTztvQkFDTCxPQUFPLEVBQUUsc0JBQXNCLENBQUMsYUFBYSxDQUFDLElBQUksV0FBVztpQkFDOUQsQ0FBQztZQUNKLEtBQUssR0FBRztnQkFDTixPQUFPO29CQUNMLE9BQU8sRUFBRSxXQUFXO2lCQUNyQixDQUFDO1lBQ0osS0FBSyxHQUFHO2dCQUNOLE9BQU87b0JBQ0wsT0FBTyxFQUFFLFdBQVc7aUJBQ3JCLENBQUM7WUFDSixLQUFLLEdBQUc7Z0JBQ04sT0FBTztvQkFDTCxPQUFPLEVBQUUsV0FBVztpQkFDckIsQ0FBQztZQUNKO2dCQUNFLE9BQU87b0JBQ0wsT0FBTyxFQUFFLDhCQUE4QjtpQkFDeEMsQ0FBQztTQUNMO0tBQ0Y7QUFDSCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwRXJyb3JSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcblxuZXhwb3J0IGludGVyZmFjZSBBdXRob3JpemVkVXNlcnNFcnJvciB7XG4gIG1lc3NhZ2U6IHN0cmluZztcbiAga2V5Pzogc3RyaW5nO1xuICBjb250ZXh0PzogeyBba2V5OiBzdHJpbmddOiBhbnkgfTtcbn1cblxuY29uc3QgZ2V0TWVzc2FnZUZyb21SZXNwb25zZSA9IChlcnJvcjogSHR0cEVycm9yUmVzcG9uc2UpID0+IHtcbiAgY29uc3QgcmVzcG9uc2VCb2R5ID0gZXJyb3IuZXJyb3I7XG5cbiAgaWYgKHJlc3BvbnNlQm9keSAmJiByZXNwb25zZUJvZHkuZXJyb3JzICYmIHJlc3BvbnNlQm9keS5lcnJvcnNbMF0gJiYgcmVzcG9uc2VCb2R5LmVycm9yc1swXS5tZXNzYWdlKSB7XG4gICAgcmV0dXJuIHJlc3BvbnNlQm9keS5lcnJvcnNbMF0ubWVzc2FnZTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59O1xuXG4vKipcbiAqIFBhcnNlIGFuIEh0dHBFcnJvclJlc3BvbnNlIGFuZCByZXR1cm4gYSBBdXRob3JpemVkVXNlcnNFcnJvciBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCB0byBkaXNwbGF5IGFcbiAqIHVzZXItZnJpZW5kbHkgZXJyb3IgbWVzc2FnZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHBhcnNlRXJyb3IgPSAoZXJyb3JSZXNwb25zZTogSHR0cEVycm9yUmVzcG9uc2UpOiBBdXRob3JpemVkVXNlcnNFcnJvciA9PiB7XG4gIGlmIChlcnJvclJlc3BvbnNlLmVycm9yIGluc3RhbmNlb2YgRXJyb3JFdmVudCkge1xuICAgIC8vIENsaWVudC1zaWRlIG9yIG5ldHdvcmsgZXJyb3IuXG4gICAgcmV0dXJuIHtcbiAgICAgIG1lc3NhZ2U6ICdBbiB1bmV4cGVjdGVkIGVycm9yIG9jY3VycmVkJyxcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIHN3aXRjaCAoZXJyb3JSZXNwb25zZS5zdGF0dXMpIHtcbiAgICAgIGNhc2UgNDAwOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIG1lc3NhZ2U6IGdldE1lc3NhZ2VGcm9tUmVzcG9uc2UoZXJyb3JSZXNwb25zZSkgfHwgJ0Vycm9yIDQwMCcsXG4gICAgICAgIH07XG4gICAgICBjYXNlIDQwMTpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBtZXNzYWdlOiAnRXJyb3IgNDAxJyxcbiAgICAgICAgfTtcbiAgICAgIGNhc2UgNDAzOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIG1lc3NhZ2U6ICdFcnJvciA0MDMnLFxuICAgICAgICB9O1xuICAgICAgY2FzZSA0MDQ6XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgbWVzc2FnZTogJ0Vycm9yIDQwNCcsXG4gICAgICAgIH07XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIG1lc3NhZ2U6ICdBbiB1bmV4cGVjdGVkIGVycm9yIG9jY3VycmVkJyxcbiAgICAgICAgfTtcbiAgICB9XG4gIH1cbn07XG4iXX0=