import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { BillPayAutopayPutRequestBody } from '../model/models';
import { BillPayAutopayPutResponseBody } from '../model/models';
import { BillpayConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface DeleteBillPayAutopayRequestParams {
    ["id"]: string;
}
export interface PutBillPayAutopayRequestParams {
    ["id"]: string;
    ["billPayAutopayPutRequestBody"]: BillPayAutopayPutRequestBody;
}
export declare class BillPayAutopayService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: BillpayConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: BillpayConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    deleteBillPayAutopay(requestParameters: DeleteBillPayAutopayRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<any>;
    deleteBillPayAutopay(requestParameters: DeleteBillPayAutopayRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<any>>;
    deleteBillPayAutopay(requestParameters: DeleteBillPayAutopayRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<any>>;
    deleteBillPayAutopayUrl(requestParameters: DeleteBillPayAutopayRequestParams): string;
    putBillPayAutopay(requestParameters: PutBillPayAutopayRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<BillPayAutopayPutResponseBody>;
    putBillPayAutopay(requestParameters: PutBillPayAutopayRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<BillPayAutopayPutResponseBody>>;
    putBillPayAutopay(requestParameters: PutBillPayAutopayRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<BillPayAutopayPutResponseBody>>;
    putBillPayAutopayUrl(requestParameters: PutBillPayAutopayRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<BillPayAutopayService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<BillPayAutopayService>;
}
