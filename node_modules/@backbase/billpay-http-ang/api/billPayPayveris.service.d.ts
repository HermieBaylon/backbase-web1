import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { BillPayPayverisEbillsEnrolmentPostRequestBody } from '../model/models';
import { BillPayPayverisEbillsEnrolmentPostResponseBody } from '../model/models';
import { BillPayPayverisResolveEbillErrorsPostRequestBody } from '../model/models';
import { BillPayPayverisResolveEbillErrorsPostResponseBody } from '../model/models';
import { BillpayConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface DeleteBillPayPayverisEbillsEnrolmentRequestParams {
    ["payeeID"]: string;
}
export interface PostBillPayPayverisEbillsEnrolmentRequestParams {
    ["billPayPayverisEbillsEnrolmentPostRequestBody"]: BillPayPayverisEbillsEnrolmentPostRequestBody;
}
export interface PostBillPayPayverisResolveEbillErrorsRequestParams {
    ["billPayPayverisResolveEbillErrorsPostRequestBody"]: BillPayPayverisResolveEbillErrorsPostRequestBody;
}
export declare class BillPayPayverisService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: BillpayConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: BillpayConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    deleteBillPayPayverisEbillsEnrolment(requestParameters: DeleteBillPayPayverisEbillsEnrolmentRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<any>;
    deleteBillPayPayverisEbillsEnrolment(requestParameters: DeleteBillPayPayverisEbillsEnrolmentRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<any>>;
    deleteBillPayPayverisEbillsEnrolment(requestParameters: DeleteBillPayPayverisEbillsEnrolmentRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<any>>;
    deleteBillPayPayverisEbillsEnrolmentUrl(requestParameters: DeleteBillPayPayverisEbillsEnrolmentRequestParams): string;
    postBillPayPayverisEbillsEnrolment(requestParameters: PostBillPayPayverisEbillsEnrolmentRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<BillPayPayverisEbillsEnrolmentPostResponseBody>;
    postBillPayPayverisEbillsEnrolment(requestParameters: PostBillPayPayverisEbillsEnrolmentRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<BillPayPayverisEbillsEnrolmentPostResponseBody>>;
    postBillPayPayverisEbillsEnrolment(requestParameters: PostBillPayPayverisEbillsEnrolmentRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<BillPayPayverisEbillsEnrolmentPostResponseBody>>;
    postBillPayPayverisEbillsEnrolmentUrl(requestParameters: PostBillPayPayverisEbillsEnrolmentRequestParams): string;
    postBillPayPayverisResolveEbillErrors(requestParameters: PostBillPayPayverisResolveEbillErrorsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<BillPayPayverisResolveEbillErrorsPostResponseBody>;
    postBillPayPayverisResolveEbillErrors(requestParameters: PostBillPayPayverisResolveEbillErrorsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<BillPayPayverisResolveEbillErrorsPostResponseBody>>;
    postBillPayPayverisResolveEbillErrors(requestParameters: PostBillPayPayverisResolveEbillErrorsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<BillPayPayverisResolveEbillErrorsPostResponseBody>>;
    postBillPayPayverisResolveEbillErrorsUrl(requestParameters: PostBillPayPayverisResolveEbillErrorsRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<BillPayPayverisService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<BillPayPayverisService>;
}
