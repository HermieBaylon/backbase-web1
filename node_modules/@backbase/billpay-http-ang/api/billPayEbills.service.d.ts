import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { BillPayEbillsGetResponseBody } from '../model/models';
import { EbillByIdPutRequestBody } from '../model/models';
import { EbillByIdPutResponseBody } from '../model/models';
import { BillpayConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface DeleteBillPayEbillsRequestParams {
    ["id"]: string;
}
export interface GetBillPayEbillStatementsRequestParams {
    ["ebillId"]: string;
    ["id"]: string;
}
export interface GetBillPayEbillsRequestParams {
    ["id"]: string;
    ["status"]: string;
    ["startDate"]?: string;
    ["endDate"]?: string;
    ["from"]?: number;
    ["size"]?: number;
    ["orderBy"]?: string;
    ["direction"]?: 'ASC' | 'DESC';
}
export interface PutEbillByIdRequestParams {
    ["ebillId"]: string;
    ["id"]: string;
    ["ebillByIdPutRequestBody"]: EbillByIdPutRequestBody;
}
export declare class BillPayEbillsService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: BillpayConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: BillpayConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    deleteBillPayEbills(requestParameters: DeleteBillPayEbillsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<any>;
    deleteBillPayEbills(requestParameters: DeleteBillPayEbillsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<any>>;
    deleteBillPayEbills(requestParameters: DeleteBillPayEbillsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<any>>;
    deleteBillPayEbillsUrl(requestParameters: DeleteBillPayEbillsRequestParams): string;
    getBillPayEbillStatements(requestParameters: GetBillPayEbillStatementsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/pdf';
    }): Observable<Blob>;
    getBillPayEbillStatements(requestParameters: GetBillPayEbillStatementsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/pdf';
    }): Observable<HttpResponse<Blob>>;
    getBillPayEbillStatements(requestParameters: GetBillPayEbillStatementsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/pdf';
    }): Observable<HttpEvent<Blob>>;
    getBillPayEbillStatements(requestParameters: GetBillPayEbillStatementsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<Blob>;
    getBillPayEbillStatements(requestParameters: GetBillPayEbillStatementsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<Blob>>;
    getBillPayEbillStatements(requestParameters: GetBillPayEbillStatementsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<Blob>>;
    getBillPayEbillStatementsUrl(requestParameters: GetBillPayEbillStatementsRequestParams): string;
    getBillPayEbills(requestParameters: GetBillPayEbillsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<BillPayEbillsGetResponseBody>;
    getBillPayEbills(requestParameters: GetBillPayEbillsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<BillPayEbillsGetResponseBody>>;
    getBillPayEbills(requestParameters: GetBillPayEbillsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<BillPayEbillsGetResponseBody>>;
    getBillPayEbillsUrl(requestParameters: GetBillPayEbillsRequestParams): string;
    putEbillById(requestParameters: PutEbillByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<EbillByIdPutResponseBody>;
    putEbillById(requestParameters: PutEbillByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<EbillByIdPutResponseBody>>;
    putEbillById(requestParameters: PutEbillByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<EbillByIdPutResponseBody>>;
    putEbillByIdUrl(requestParameters: PutEbillByIdRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<BillPayEbillsService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<BillPayEbillsService>;
}
