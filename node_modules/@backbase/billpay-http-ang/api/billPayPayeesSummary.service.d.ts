import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { BillPayPayeesSummaryGetResponseBody } from '../model/models';
import { BillpayConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export declare class BillPayPayeesSummaryService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: BillpayConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: BillpayConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    getBillPayPayeesSummary(observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<BillPayPayeesSummaryGetResponseBody>;
    getBillPayPayeesSummary(observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<BillPayPayeesSummaryGetResponseBody>>;
    getBillPayPayeesSummary(observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<BillPayPayeesSummaryGetResponseBody>>;
    getBillPayPayeesSummaryUrl(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<BillPayPayeesSummaryService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<BillPayPayeesSummaryService>;
}
