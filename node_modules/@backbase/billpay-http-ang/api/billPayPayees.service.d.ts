import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { BillPayElectronicPayeesPostRequestBody } from '../model/models';
import { BillPayElectronicPayeesPostResponseBody } from '../model/models';
import { BillPayPayeesPostRequestBody } from '../model/models';
import { BillPayPayeesPostResponseBody } from '../model/models';
import { ElectronicPayeeByIdGetResponseBody } from '../model/models';
import { ElectronicPayeeByIdPutRequestBody } from '../model/models';
import { ElectronicPayeeByIdPutResponseBody } from '../model/models';
import { PayeeByIdGetResponseBody } from '../model/models';
import { PayeeByIdPutRequestBody } from '../model/models';
import { PayeeByIdPutResponseBody } from '../model/models';
import { BillpayConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface DeleteElectronicPayeeByIdRequestParams {
    ["id"]: string;
    ["cancelPendingPayments"]: boolean;
}
export interface DeletePayeeByIdRequestParams {
    ["id"]: string;
    ["cancelPendingPayments"]: boolean;
}
export interface GetElectronicPayeeByIdRequestParams {
    ["id"]: string;
}
export interface GetPayeeByIdRequestParams {
    ["id"]: string;
}
export interface PostBillPayElectronicPayeesRequestParams {
    ["billPayElectronicPayeesPostRequestBody"]: BillPayElectronicPayeesPostRequestBody;
}
export interface PostBillPayPayeesRequestParams {
    ["billPayPayeesPostRequestBody"]: BillPayPayeesPostRequestBody;
}
export interface PutElectronicPayeeByIdRequestParams {
    ["id"]: string;
    ["electronicPayeeByIdPutRequestBody"]: ElectronicPayeeByIdPutRequestBody;
}
export interface PutPayeeByIdRequestParams {
    ["id"]: string;
    ["payeeByIdPutRequestBody"]: PayeeByIdPutRequestBody;
}
export declare class BillPayPayeesService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: BillpayConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: BillpayConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    deleteElectronicPayeeById(requestParameters: DeleteElectronicPayeeByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<any>;
    deleteElectronicPayeeById(requestParameters: DeleteElectronicPayeeByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<any>>;
    deleteElectronicPayeeById(requestParameters: DeleteElectronicPayeeByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<any>>;
    deleteElectronicPayeeByIdUrl(requestParameters: DeleteElectronicPayeeByIdRequestParams): string;
    deletePayeeById(requestParameters: DeletePayeeByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<any>;
    deletePayeeById(requestParameters: DeletePayeeByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<any>>;
    deletePayeeById(requestParameters: DeletePayeeByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<any>>;
    deletePayeeByIdUrl(requestParameters: DeletePayeeByIdRequestParams): string;
    getElectronicPayeeById(requestParameters: GetElectronicPayeeByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<ElectronicPayeeByIdGetResponseBody>;
    getElectronicPayeeById(requestParameters: GetElectronicPayeeByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<ElectronicPayeeByIdGetResponseBody>>;
    getElectronicPayeeById(requestParameters: GetElectronicPayeeByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<ElectronicPayeeByIdGetResponseBody>>;
    getElectronicPayeeByIdUrl(requestParameters: GetElectronicPayeeByIdRequestParams): string;
    getPayeeById(requestParameters: GetPayeeByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<PayeeByIdGetResponseBody>;
    getPayeeById(requestParameters: GetPayeeByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<PayeeByIdGetResponseBody>>;
    getPayeeById(requestParameters: GetPayeeByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<PayeeByIdGetResponseBody>>;
    getPayeeByIdUrl(requestParameters: GetPayeeByIdRequestParams): string;
    postBillPayElectronicPayees(requestParameters: PostBillPayElectronicPayeesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<BillPayElectronicPayeesPostResponseBody>;
    postBillPayElectronicPayees(requestParameters: PostBillPayElectronicPayeesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<BillPayElectronicPayeesPostResponseBody>>;
    postBillPayElectronicPayees(requestParameters: PostBillPayElectronicPayeesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<BillPayElectronicPayeesPostResponseBody>>;
    postBillPayElectronicPayeesUrl(requestParameters: PostBillPayElectronicPayeesRequestParams): string;
    postBillPayPayees(requestParameters: PostBillPayPayeesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<BillPayPayeesPostResponseBody>;
    postBillPayPayees(requestParameters: PostBillPayPayeesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<BillPayPayeesPostResponseBody>>;
    postBillPayPayees(requestParameters: PostBillPayPayeesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<BillPayPayeesPostResponseBody>>;
    postBillPayPayeesUrl(requestParameters: PostBillPayPayeesRequestParams): string;
    putElectronicPayeeById(requestParameters: PutElectronicPayeeByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<ElectronicPayeeByIdPutResponseBody>;
    putElectronicPayeeById(requestParameters: PutElectronicPayeeByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<ElectronicPayeeByIdPutResponseBody>>;
    putElectronicPayeeById(requestParameters: PutElectronicPayeeByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<ElectronicPayeeByIdPutResponseBody>>;
    putElectronicPayeeByIdUrl(requestParameters: PutElectronicPayeeByIdRequestParams): string;
    putPayeeById(requestParameters: PutPayeeByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<PayeeByIdPutResponseBody>;
    putPayeeById(requestParameters: PutPayeeByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<PayeeByIdPutResponseBody>>;
    putPayeeById(requestParameters: PutPayeeByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<PayeeByIdPutResponseBody>>;
    putPayeeByIdUrl(requestParameters: PutPayeeByIdRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<BillPayPayeesService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<BillPayPayeesService>;
}
