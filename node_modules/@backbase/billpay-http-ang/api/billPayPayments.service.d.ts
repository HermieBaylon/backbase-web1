import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { BillPayPaymentsGetResponseBody } from '../model/models';
import { BillPayPaymentsPostRequestBody } from '../model/models';
import { BillPayPaymentsPostResponseBody } from '../model/models';
import { BillPayRecurringPaymentsPostRequestBody } from '../model/models';
import { BillPayRecurringPaymentsPostResponseBody } from '../model/models';
import { PaymentByIdGetResponseBody } from '../model/models';
import { PaymentByIdPutRequestBody } from '../model/models';
import { PaymentByIdPutResponseBody } from '../model/models';
import { RecurringPaymentByIdGetResponseBody } from '../model/models';
import { RecurringPaymentByIdPutRequestBody } from '../model/models';
import { RecurringPaymentByIdPutResponseBody } from '../model/models';
import { BillpayConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface DeletePaymentByIdRequestParams {
    ["id"]: string;
}
export interface DeleteRecurringPaymentByIdRequestParams {
    ["id"]: string;
}
export interface GetBillPayPaymentsRequestParams {
    ["status"]: string;
    ["startDate"]?: string;
    ["endDate"]?: string;
    ["payeeID"]?: string;
    ["paymentType"]?: string;
    ["from"]?: number;
    ["size"]?: number;
    ["orderBy"]?: string;
    ["direction"]?: 'ASC' | 'DESC';
}
export interface GetPaymentByIdRequestParams {
    ["id"]: string;
}
export interface GetRecurringPaymentByIdRequestParams {
    ["id"]: string;
}
export interface PostBillPayPaymentsRequestParams {
    ["billPayPaymentsPostRequestBody"]: BillPayPaymentsPostRequestBody;
}
export interface PostBillPayRecurringPaymentsRequestParams {
    ["billPayRecurringPaymentsPostRequestBody"]: BillPayRecurringPaymentsPostRequestBody;
}
export interface PutPaymentByIdRequestParams {
    ["id"]: string;
    ["paymentByIdPutRequestBody"]: PaymentByIdPutRequestBody;
}
export interface PutRecurringPaymentByIdRequestParams {
    ["id"]: string;
    ["recurringPaymentByIdPutRequestBody"]: RecurringPaymentByIdPutRequestBody;
}
export declare class BillPayPaymentsService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: BillpayConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: BillpayConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    deletePaymentById(requestParameters: DeletePaymentByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<any>;
    deletePaymentById(requestParameters: DeletePaymentByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<any>>;
    deletePaymentById(requestParameters: DeletePaymentByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<any>>;
    deletePaymentByIdUrl(requestParameters: DeletePaymentByIdRequestParams): string;
    deleteRecurringPaymentById(requestParameters: DeleteRecurringPaymentByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<any>;
    deleteRecurringPaymentById(requestParameters: DeleteRecurringPaymentByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<any>>;
    deleteRecurringPaymentById(requestParameters: DeleteRecurringPaymentByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<any>>;
    deleteRecurringPaymentByIdUrl(requestParameters: DeleteRecurringPaymentByIdRequestParams): string;
    getBillPayPayments(requestParameters: GetBillPayPaymentsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<BillPayPaymentsGetResponseBody>;
    getBillPayPayments(requestParameters: GetBillPayPaymentsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<BillPayPaymentsGetResponseBody>>;
    getBillPayPayments(requestParameters: GetBillPayPaymentsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<BillPayPaymentsGetResponseBody>>;
    getBillPayPaymentsUrl(requestParameters: GetBillPayPaymentsRequestParams): string;
    getPaymentById(requestParameters: GetPaymentByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<PaymentByIdGetResponseBody>;
    getPaymentById(requestParameters: GetPaymentByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<PaymentByIdGetResponseBody>>;
    getPaymentById(requestParameters: GetPaymentByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<PaymentByIdGetResponseBody>>;
    getPaymentByIdUrl(requestParameters: GetPaymentByIdRequestParams): string;
    getRecurringPaymentById(requestParameters: GetRecurringPaymentByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<RecurringPaymentByIdGetResponseBody>;
    getRecurringPaymentById(requestParameters: GetRecurringPaymentByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<RecurringPaymentByIdGetResponseBody>>;
    getRecurringPaymentById(requestParameters: GetRecurringPaymentByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<RecurringPaymentByIdGetResponseBody>>;
    getRecurringPaymentByIdUrl(requestParameters: GetRecurringPaymentByIdRequestParams): string;
    postBillPayPayments(requestParameters: PostBillPayPaymentsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<BillPayPaymentsPostResponseBody>;
    postBillPayPayments(requestParameters: PostBillPayPaymentsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<BillPayPaymentsPostResponseBody>>;
    postBillPayPayments(requestParameters: PostBillPayPaymentsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<BillPayPaymentsPostResponseBody>>;
    postBillPayPaymentsUrl(requestParameters: PostBillPayPaymentsRequestParams): string;
    postBillPayRecurringPayments(requestParameters: PostBillPayRecurringPaymentsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<BillPayRecurringPaymentsPostResponseBody>;
    postBillPayRecurringPayments(requestParameters: PostBillPayRecurringPaymentsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<BillPayRecurringPaymentsPostResponseBody>>;
    postBillPayRecurringPayments(requestParameters: PostBillPayRecurringPaymentsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<BillPayRecurringPaymentsPostResponseBody>>;
    postBillPayRecurringPaymentsUrl(requestParameters: PostBillPayRecurringPaymentsRequestParams): string;
    putPaymentById(requestParameters: PutPaymentByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<PaymentByIdPutResponseBody>;
    putPaymentById(requestParameters: PutPaymentByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<PaymentByIdPutResponseBody>>;
    putPaymentById(requestParameters: PutPaymentByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<PaymentByIdPutResponseBody>>;
    putPaymentByIdUrl(requestParameters: PutPaymentByIdRequestParams): string;
    putRecurringPaymentById(requestParameters: PutRecurringPaymentByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<RecurringPaymentByIdPutResponseBody>;
    putRecurringPaymentById(requestParameters: PutRecurringPaymentByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<RecurringPaymentByIdPutResponseBody>>;
    putRecurringPaymentById(requestParameters: PutRecurringPaymentByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<RecurringPaymentByIdPutResponseBody>>;
    putRecurringPaymentByIdUrl(requestParameters: PutRecurringPaymentByIdRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<BillPayPaymentsService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<BillPayPaymentsService>;
}
