import { createMocks } from '@backbase/foundation-ang/data-http';
export const BillPayPaymentsServiceDeletePaymentByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payments/{id}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPaymentsServiceDeleteRecurringPaymentByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payments/recurring/{id}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPaymentsServiceGetBillPayPaymentsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payments",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "payments": [{
                            "id": "8a9483495f058d2f015f058d366b0045",
                            "payeeID": "3",
                            "payeeName": "Soccer Shots",
                            "payeeNickName": "Kids Soccer",
                            "payeeElectronic": false,
                            "amount": {
                                "amount": "10.99",
                                "currencyCode": "USD"
                            },
                            "paymentDate": "2019-04-21",
                            "paymentAccount": {
                                "accountNumber": "11111111",
                                "routingNumber": "000000022",
                                "accountType": "SAVINGS_ACCOUNT",
                                "accountNickName": "Current Account"
                            },
                            "recurring": false,
                            "automaticPayment": false,
                            "status": "PENDING",
                            "fee": {
                                "amount": "9.99",
                                "currencyCode": "USD"
                            },
                            "ebillID": "20141219140239655590"
                        }, {
                            "id": "8a9483495f058d2f015f058d366a003c",
                            "payeeID": "4",
                            "payeeName": "Gas Bill",
                            "payeeAccountNumber": "100000001",
                            "payeeElectronic": true,
                            "amount": {
                                "amount": "100.99",
                                "currencyCode": "USD"
                            },
                            "paymentDate": "2019-02-22",
                            "paymentAccount": {
                                "id": "1",
                                "accountNumber": "22222222",
                                "routingNumber": "000000033",
                                "accountType": "CHECKING_ACCOUNT"
                            },
                            "recurring": true,
                            "automaticPayment": false,
                            "frequency": "MONTHLY",
                            "numberOfInstances": 2,
                            "paymentScheduledAlert": true,
                            "paymentSentAlert": true,
                            "modelExpirationAlert": true,
                            "status": "FAILED"
                        }, {
                            "id": "8a9483a96dd476f1016dd476f7e8001c",
                            "payeeID": "2",
                            "payeeName": "The Republic",
                            "payeeAccountNumber": "12345O",
                            "payeeElectronic": true,
                            "amount": {
                                "amount": "200.99",
                                "currencyCode": "USD"
                            },
                            "paymentDate": "2018-11-23",
                            "paymentMemo": "Order #66",
                            "paymentAccount": {
                                "accountNumber": "100001001",
                                "accountNickName": "Joint Account",
                                "accountType": "CHECKING_ACCOUNT",
                                "routingNumber": "110001001"
                            },
                            "recurring": false,
                            "automaticPayment": true,
                            "paymentScheduledAlert": true,
                            "paymentSentAlert": true,
                            "modelExpirationAlert": true,
                            "status": "PROCESSED"
                        }],
                    "totalCount": 3
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPaymentsServiceGetPaymentByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payments/{id}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "payment": {
                        "id": "8a9483495f058d2f015f058d366a003c",
                        "payeeID": "0002",
                        "payeeName": "Citibank",
                        "payeeAccountNumber": "100000001",
                        "payeeElectronic": false,
                        "amount": {
                            "amount": "100.99",
                            "currencyCode": "USD"
                        },
                        "paymentDate": "2019-02-22",
                        "paymentAccount": {
                            "id": "1",
                            "accountNumber": "000000001",
                            "routingNumber": "000000011",
                            "accountType": "CHECKING_ACCOUNT"
                        },
                        "recurring": false,
                        "automaticPayment": false,
                        "status": "PENDING",
                        "fee": {
                            "amount": "9.99",
                            "currencyCode": "USD"
                        },
                        "ebillID": "20141219140239655590"
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPaymentsServiceGetRecurringPaymentByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payments/recurring/{id}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "payment": {
                        "id": "8a9483495f058d2f015f058d366a003c",
                        "payeeID": "0005",
                        "payeeName": "Citibank",
                        "payeeAccountNumber": "100000001",
                        "payeeElectronic": true,
                        "amount": {
                            "amount": "100.99",
                            "currencyCode": "USD"
                        },
                        "paymentDate": "2019-02-22",
                        "paymentAccount": {
                            "id": "1",
                            "accountNumber": "000000001",
                            "routingNumber": "000000011",
                            "accountType": "CHECKING_ACCOUNT"
                        },
                        "paymentMemo": "Here is some money",
                        "recurring": true,
                        "frequency": "MONTHLY",
                        "numberOfInstances": 2,
                        "paymentScheduledAlert": true,
                        "paymentSentAlert": true,
                        "modelExpirationAlert": true,
                        "status": "PENDING"
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPaymentsServicePostBillPayPaymentsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payments",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "payments": [{
                            "payeeID": "payee1",
                            "paymentID": "payment1",
                            "errors": []
                        }, {
                            "payeeID": "payee2",
                            "paymentID": "payment2",
                            "errors": []
                        }, {
                            "payeeID": "payee3",
                            "errors": [{
                                    "message": "Invalid next payment date",
                                    "key": "billpay.api.invalidNextPaymentDate"
                                }, {
                                    "message": "Payment already exists",
                                    "key": "billpay.api.paymentAlreadyExists"
                                }]
                        }, {
                            "payeeID": "payee4",
                            "paymentID": "payment4",
                            "errors": []
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [],
                    "payments": [{
                            "payeeID": "1",
                            "errors": [{
                                    "message": "The payee is invalid",
                                    "key": "billpay.api.invalidPayee"
                                }]
                        }, {
                            "payeeID": "2",
                            "errors": [{
                                    "message": "The payee is invalid",
                                    "key": "billpay.api.invalidPayee"
                                }]
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPaymentsServicePostBillPayRecurringPaymentsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payments/recurring",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPaymentsServicePutPaymentByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payments/{id}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPaymentsServicePutRecurringPaymentByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payments/recurring/{id}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPaymentsServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v2/bill-pay/payments/{id}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payments/recurring/{id}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payments",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "payments": [{
                            "id": "8a9483495f058d2f015f058d366b0045",
                            "payeeID": "3",
                            "payeeName": "Soccer Shots",
                            "payeeNickName": "Kids Soccer",
                            "payeeElectronic": false,
                            "amount": {
                                "amount": "10.99",
                                "currencyCode": "USD"
                            },
                            "paymentDate": "2019-04-21",
                            "paymentAccount": {
                                "accountNumber": "11111111",
                                "routingNumber": "000000022",
                                "accountType": "SAVINGS_ACCOUNT",
                                "accountNickName": "Current Account"
                            },
                            "recurring": false,
                            "automaticPayment": false,
                            "status": "PENDING",
                            "fee": {
                                "amount": "9.99",
                                "currencyCode": "USD"
                            },
                            "ebillID": "20141219140239655590"
                        }, {
                            "id": "8a9483495f058d2f015f058d366a003c",
                            "payeeID": "4",
                            "payeeName": "Gas Bill",
                            "payeeAccountNumber": "100000001",
                            "payeeElectronic": true,
                            "amount": {
                                "amount": "100.99",
                                "currencyCode": "USD"
                            },
                            "paymentDate": "2019-02-22",
                            "paymentAccount": {
                                "id": "1",
                                "accountNumber": "22222222",
                                "routingNumber": "000000033",
                                "accountType": "CHECKING_ACCOUNT"
                            },
                            "recurring": true,
                            "automaticPayment": false,
                            "frequency": "MONTHLY",
                            "numberOfInstances": 2,
                            "paymentScheduledAlert": true,
                            "paymentSentAlert": true,
                            "modelExpirationAlert": true,
                            "status": "FAILED"
                        }, {
                            "id": "8a9483a96dd476f1016dd476f7e8001c",
                            "payeeID": "2",
                            "payeeName": "The Republic",
                            "payeeAccountNumber": "12345O",
                            "payeeElectronic": true,
                            "amount": {
                                "amount": "200.99",
                                "currencyCode": "USD"
                            },
                            "paymentDate": "2018-11-23",
                            "paymentMemo": "Order #66",
                            "paymentAccount": {
                                "accountNumber": "100001001",
                                "accountNickName": "Joint Account",
                                "accountType": "CHECKING_ACCOUNT",
                                "routingNumber": "110001001"
                            },
                            "recurring": false,
                            "automaticPayment": true,
                            "paymentScheduledAlert": true,
                            "paymentSentAlert": true,
                            "modelExpirationAlert": true,
                            "status": "PROCESSED"
                        }],
                    "totalCount": 3
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payments/{id}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "payment": {
                        "id": "8a9483495f058d2f015f058d366a003c",
                        "payeeID": "0002",
                        "payeeName": "Citibank",
                        "payeeAccountNumber": "100000001",
                        "payeeElectronic": false,
                        "amount": {
                            "amount": "100.99",
                            "currencyCode": "USD"
                        },
                        "paymentDate": "2019-02-22",
                        "paymentAccount": {
                            "id": "1",
                            "accountNumber": "000000001",
                            "routingNumber": "000000011",
                            "accountType": "CHECKING_ACCOUNT"
                        },
                        "recurring": false,
                        "automaticPayment": false,
                        "status": "PENDING",
                        "fee": {
                            "amount": "9.99",
                            "currencyCode": "USD"
                        },
                        "ebillID": "20141219140239655590"
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payments/recurring/{id}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "payment": {
                        "id": "8a9483495f058d2f015f058d366a003c",
                        "payeeID": "0005",
                        "payeeName": "Citibank",
                        "payeeAccountNumber": "100000001",
                        "payeeElectronic": true,
                        "amount": {
                            "amount": "100.99",
                            "currencyCode": "USD"
                        },
                        "paymentDate": "2019-02-22",
                        "paymentAccount": {
                            "id": "1",
                            "accountNumber": "000000001",
                            "routingNumber": "000000011",
                            "accountType": "CHECKING_ACCOUNT"
                        },
                        "paymentMemo": "Here is some money",
                        "recurring": true,
                        "frequency": "MONTHLY",
                        "numberOfInstances": 2,
                        "paymentScheduledAlert": true,
                        "paymentSentAlert": true,
                        "modelExpirationAlert": true,
                        "status": "PENDING"
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payments",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "payments": [{
                            "payeeID": "payee1",
                            "paymentID": "payment1",
                            "errors": []
                        }, {
                            "payeeID": "payee2",
                            "paymentID": "payment2",
                            "errors": []
                        }, {
                            "payeeID": "payee3",
                            "errors": [{
                                    "message": "Invalid next payment date",
                                    "key": "billpay.api.invalidNextPaymentDate"
                                }, {
                                    "message": "Payment already exists",
                                    "key": "billpay.api.paymentAlreadyExists"
                                }]
                        }, {
                            "payeeID": "payee4",
                            "paymentID": "payment4",
                            "errors": []
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [],
                    "payments": [{
                            "payeeID": "1",
                            "errors": [{
                                    "message": "The payee is invalid",
                                    "key": "billpay.api.invalidPayee"
                                }]
                        }, {
                            "payeeID": "2",
                            "errors": [{
                                    "message": "The payee is invalid",
                                    "key": "billpay.api.invalidPayee"
                                }]
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payments/recurring",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payments/{id}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payments/recurring/{id}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,