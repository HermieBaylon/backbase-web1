import { createMocks } from '@backbase/foundation-ang/data-http';
export const BillPayPayeesServiceDeleteElectronicPayeeByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payees/electronic/{id}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPayeesServiceDeletePayeeByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payees/{id}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPayeesServiceGetElectronicPayeeByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payees/electronic/{id}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "payee": {
                        "id": "123456789",
                        "name": "Backbase",
                        "nickName": "My Backbase",
                        "accountNumber": "987654321",
                        "paymentServices": [{
                                "cutoffTime": "2019-02-25T15:00:00.000-04:00",
                                "earliestPaymentDate": "2019-02-26",
                                "nextPaymentDate": "2019-02-27",
                                "paymentServiceType": "REGULAR_PAYMENT"
                            }, {
                                "cutoffTime": "2019-02-18T15:00:00.000-04:00",
                                "earliestPaymentDate": "2019-02-19",
                                "nextPaymentDate": "2019-02-20",
                                "paymentServiceType": "OVERNIGHT_CHECK",
                                "deliveryDays": 3,
                                "fee": {
                                    "amount": "9.99",
                                    "currencyCode": "USD"
                                }
                            }],
                        "ebill": {
                            "capable": true,
                            "enabled": true,
                            "status": "ACTIVE",
                            "latestBill": {
                                "id": "20141219140239655590",
                                "amount": {
                                    "amount": "100.99",
                                    "currencyCode": "USD"
                                },
                                "minAmountDue": {
                                    "amount": "20.50",
                                    "currencyCode": "USD"
                                },
                                "outstandingBalance": {
                                    "amount": "201.98",
                                    "currencyCode": "USD"
                                },
                                "paymentDate": "2019-03-01",
                                "status": "PAID",
                                "url": "http://my.ebill.pdf",
                                "statementAvailable": false,
                                "paymentId": "abc0192802"
                            },
                            "autopay": {
                                "paymentAccount": {
                                    "accountNumber": "11111111",
                                    "routingNumber": "000000022",
                                    "accountType": "SAVINGS_ACCOUNT",
                                    "accountNickName": "Current Account"
                                },
                                "daysBeforePayOn": 3,
                                "maxPaymentAmount": {
                                    "amount": "123",
                                    "currencyCode": "USD"
                                },
                                "payOn": "BILL_ARRIVAL",
                                "payAmount": "FULL_AMOUNT",
                                "paymentScheduledAlert": false,
                                "paymentSentAlert": true,
                                "paymentCompleteAlert": true
                            }
                        }
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPayeesServiceGetPayeeByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payees/{id}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "payee": {
                        "id": "1",
                        "name": "Backbase",
                        "phoneNumber": "2345678901",
                        "address": {
                            "state": "SD",
                            "city": "SIOUX FALLS",
                            "address1": "PO BOX 6001",
                            "postalCode": "12345"
                        },
                        "overnightDeliveryAddress": {
                            "state": "FL",
                            "city": "Saint Petersburg",
                            "address1": "560 Carillon Parkway",
                            "postalCode": "33717"
                        },
                        "paymentServices": [{
                                "cutoffTime": "2019-02-25T15:00:00.000-04:00",
                                "earliestPaymentDate": "2019-02-26",
                                "nextPaymentDate": "2019-02-27",
                                "paymentServiceType": "REGULAR_PAYMENT"
                            }, {
                                "cutoffTime": "2019-02-21T15:00:00.000-04:00",
                                "earliestPaymentDate": "2019-02-22",
                                "nextPaymentDate": "2019-02-25",
                                "paymentServiceType": "OVERNIGHT_CHECK",
                                "deliveryDays": 3,
                                "fee": {
                                    "amount": "9.99",
                                    "currencyCode": "USD"
                                }
                            }]
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPayeesServicePostBillPayElectronicPayeesMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payees/electronic",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPayeesServicePostBillPayPayeesMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payees",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPayeesServicePutElectronicPayeeByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payees/electronic/{id}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPayeesServicePutPayeeByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payees/{id}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPayeesServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v2/bill-pay/payees/electronic/{id}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payees/{id}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payees/electronic/{id}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "payee": {
                        "id": "123456789",
                        "name": "Backbase",
                        "nickName": "My Backbase",
                        "accountNumber": "987654321",
                        "paymentServices": [{
                                "cutoffTime": "2019-02-25T15:00:00.000-04:00",
                                "earliestPaymentDate": "2019-02-26",
                                "nextPaymentDate": "2019-02-27",
                                "paymentServiceType": "REGULAR_PAYMENT"
                            }, {
                                "cutoffTime": "2019-02-18T15:00:00.000-04:00",
                                "earliestPaymentDate": "2019-02-19",
                                "nextPaymentDate": "2019-02-20",
                                "paymentServiceType": "OVERNIGHT_CHECK",
                                "deliveryDays": 3,
                                "fee": {
                                    "amount": "9.99",
                                    "currencyCode": "USD"
                                }
                            }],
                        "ebill": {
                            "capable": true,
                            "enabled": true,
                            "status": "ACTIVE",
                            "latestBill": {
                                "id": "20141219140239655590",
                                "amount": {
                                    "amount": "100.99",
                                    "currencyCode": "USD"
                                },
                                "minAmountDue": {
                                    "amount": "20.50",
                                    "currencyCode": "USD"
                                },
                                "outstandingBalance": {
                                    "amount": "201.98",
                                    "currencyCode": "USD"
                                },
                                "paymentDate": "2019-03-01",
                                "status": "PAID",
                                "url": "http://my.ebill.pdf",
                                "statementAvailable": false,
                                "paymentId": "abc0192802"
                            },
                            "autopay": {
                                "paymentAccount": {
                                    "accountNumber": "11111111",
                                    "routingNumber": "000000022",
                                    "accountType": "SAVINGS_ACCOUNT",
                                    "accountNickName": "Current Account"
                                },
                                "daysBeforePayOn": 3,
                                "maxPaymentAmount": {
                                    "amount": "123",
                                    "currencyCode": "USD"
                                },
                                "payOn": "BILL_ARRIVAL",
                                "payAmount": "FULL_AMOUNT",
                                "paymentScheduledAlert": false,
                                "paymentSentAlert": true,
                                "paymentCompleteAlert": true
                            }
                        }
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payees/{id}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "payee": {
                        "id": "1",
                        "name": "Backbase",
                        "phoneNumber": "2345678901",
                        "address": {
                            "state": "SD",
                            "city": "SIOUX FALLS",
                            "address1": "PO BOX 6001",
                            "postalCode": "12345"
                        },
                        "overnightDeliveryAddress": {
                            "state": "FL",
                            "city": "Saint Petersburg",
                            "address1": "560 Carillon Parkway",
                            "postalCode": "33717"
                        },
                        "paymentServices": [{
                                "cutoffTime": "2019-02-25T15:00:00.000-04:00",
                                "earliestPaymentDate": "2019-02-26",
                                "nextPaymentDate": "2019-02-27",
                                "paymentServiceType": "REGULAR_PAYMENT"
                            }, {
                                "cutoffTime": "2019-02-21T15:00:00.000-04:00",
                                "earliestPaymentDate": "2019-02-22",
                                "nextPaymentDate": "2019-02-25",
                                "paymentServiceType": "OVERNIGHT_CHECK",
                                "deliveryDays": 3,
                                "fee": {
                                    "amount": "9.99",
                                    "currencyCode": "USD"
                                }
                            }]
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payees/electronic",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payees",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payees/electronic/{id}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payees/{id}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,