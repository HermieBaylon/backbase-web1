import { createMocks } from '@backbase/foundation-ang/data-http';
export const BillPayAccountsServiceGetBillPayAccountsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/accounts",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "accounts": [{
                            "id": "1",
                            "accountNumber": "000000001",
                            "accountNickName": "Joint Account",
                            "accountType": "CHECKING_ACCOUNT",
                            "routingNumber": "000000011",
                            "accountBalance": {
                                "amount": "1000.01",
                                "currencyCode": "USD"
                            }
                        }, {
                            "id": "2",
                            "accountNumber": "000000002",
                            "accountType": "SAVINGS_ACCOUNT",
                            "routingNumber": "000000022"
                        }, {
                            "accountNumber": "000000003",
                            "accountType": "CHECKING_ACCOUNT",
                            "routingNumber": "000000033",
                            "accountBalance": {
                                "amount": "1000.03",
                                "currencyCode": "USD"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayAccountsServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v2/bill-pay/accounts",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "accounts": [{
                            "id": "1",
                            "accountNumber": "000000001",
                            "accountNickName": "Joint Account",
                            "accountType": "CHECKING_ACCOUNT",
                            "routingNumber": "000000011",
                            "accountBalance": {
                                "amount": "1000.01",
                                "currencyCode": "USD"
                            }
                        }, {
                            "id": "2",
                            "accountNumber": "000000002",
                            "accountType": "SAVINGS_ACCOUNT",
                            "routingNumber": "000000022"
                        }, {
                            "accountNumber": "000000003",
                            "accountType": "CHECKING_ACCOUNT",
                            "routingNumber": "000000033",
                            "accountBalance": {
                                "amount": "1000.03",
                                "currencyCode": "USD"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,