import { createMocks } from '@backbase/foundation-ang/data-http';
export const BillPayEbillsServiceDeleteBillPayEbillsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payees/electronic/{id}/ebills",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayEbillsServiceGetBillPayEbillStatementsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payees/electronic/{id}/ebills/{ebillId}/statements",
        method: "GET",
        responses: [
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayEbillsServiceGetBillPayEbillsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payees/electronic/{id}/ebills",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "ebills": [{
                            "id": "20141219140239655592",
                            "payeeID": "0001",
                            "paymentDate": "2019-04-01",
                            "amount": {
                                "amount": "100.99",
                                "currencyCode": "USD"
                            },
                            "minAmountDue": {
                                "amount": "20.50",
                                "currencyCode": "USD"
                            },
                            "outstandingBalance": {
                                "amount": "101.98",
                                "currencyCode": "USD"
                            },
                            "status": "UNPAID",
                            "statementAvailable": true
                        }, {
                            "id": "20141219140239655591",
                            "payeeID": "0001",
                            "paymentDate": "2019-03-01",
                            "amount": {
                                "amount": "100.99",
                                "currencyCode": "USD"
                            },
                            "minAmountDue": {
                                "amount": "20.50",
                                "currencyCode": "USD"
                            },
                            "outstandingBalance": {
                                "amount": "201.98",
                                "currencyCode": "USD"
                            },
                            "status": "PAID",
                            "statementAvailable": true,
                            "paymentId": "abc0192802"
                        }, {
                            "id": "20141219140239655590",
                            "payeeID": "0001",
                            "paymentDate": "2019-02-01",
                            "amount": {
                                "amount": "100.99",
                                "currencyCode": "USD"
                            },
                            "minAmountDue": {
                                "amount": "20.50",
                                "currencyCode": "USD"
                            },
                            "outstandingBalance": {
                                "amount": "301.98",
                                "currencyCode": "USD"
                            },
                            "status": "PAID",
                            "url": "http://my.ebill.pdf",
                            "statementAvailable": false
                        }],
                    "totalCount": 3
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayEbillsServicePutEbillByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payees/electronic/{id}/ebills/{ebillId}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayEbillsServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v2/bill-pay/payees/electronic/{id}/ebills",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payees/electronic/{id}/ebills/{ebillId}/statements",
        method: "GET",
        responses: [
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payees/electronic/{id}/ebills",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "ebills": [{
                            "id": "20141219140239655592",
                            "payeeID": "0001",
                            "paymentDate": "2019-04-01",
                            "amount": {
                                "amount": "100.99",
                                "currencyCode": "USD"
                            },
                            "minAmountDue": {
                                "amount": "20.50",
                                "currencyCode": "USD"
                            },
                            "outstandingBalance": {
                                "amount": "101.98",
                                "currencyCode": "USD"
                            },
                            "status": "UNPAID",
                            "statementAvailable": true
                        }, {
                            "id": "20141219140239655591",
                            "payeeID": "0001",
                            "paymentDate": "2019-03-01",
                            "amount": {
                                "amount": "100.99",
                                "currencyCode": "USD"
                            },
                            "minAmountDue": {
                                "amount": "20.50",
                                "currencyCode": "USD"
                            },
                            "outstandingBalance": {
                                "amount": "201.98",
                                "currencyCode": "USD"
                            },
                            "status": "PAID",
                            "statementAvailable": true,
                            "paymentId": "abc0192802"
                        }, {
                            "id": "20141219140239655590",
                            "payeeID": "0001",
                            "paymentDate": "2019-02-01",
                            "amount": {
                                "amount": "100.99",
                                "currencyCode": "USD"
                            },
                            "minAmountDue": {
                                "amount": "20.50",
                                "currencyCode": "USD"
                            },
                            "outstandingBalance": {
                                "amount": "301.98",
                                "currencyCode": "USD"
                            },
                            "status": "PAID",
                            "url": "http://my.ebill.pdf",
                            "statementAvailable": false
                        }],
                    "totalCount": 3
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payees/electronic/{id}/ebills/{ebillId}",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,