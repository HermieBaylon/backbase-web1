import { createMocks } from '@backbase/foundation-ang/data-http';
export const BillPayPayverisServiceDeleteBillPayPayverisEbillsEnrolmentMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payveris/ebills/enrolment",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPayverisServicePostBillPayPayverisEbillsEnrolmentMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payveris/ebills/enrolment",
        method: "POST",
        responses: [
            {
                status: 200,
                body: {
                    "payeeID": "9993",
                    "billers": [],
                    "accounts": [],
                    "callBackRequired": false
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPayverisServicePostBillPayPayverisResolveEbillErrorsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/bill-pay/payveris/ebills/resolve-errors",
        method: "POST",
        responses: [
            {
                status: 200,
                body: {
                    "payeeID": "9993",
                    "billers": [],
                    "accounts": [],
                    "callBackRequired": false
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    }]);
export const BillPayPayverisServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v2/bill-pay/payveris/ebills/enrolment",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payveris/ebills/enrolment",
        method: "POST",
        responses: [
            {
                status: 200,
                body: {
                    "payeeID": "9993",
                    "billers": [],
                    "accounts": [],
                    "callBackRequired": false
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/bill-pay/payveris/ebills/resolve-errors",
        method: "POST",
        responses: [
            {
                status: 200,
                body: {
                    "payeeID": "9993",
                    "billers": [],
                    "accounts": [],
                    "callBackRequired": false
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 501,
                body: {
                    "message": "Operation not supported"
                }
            },
            {
                status: 502,
                body: {
                    "message": "Bad Gateway",
                    "errors": [{
                            "message": "Internal error calling API provider",
                            "key": "common.api.providerInternalError"
                        }]
                }
            },
            {
                status: 504,
                body: {
                    "message": "Gateway Timeout",
                    "errors": [{
                            "message": "API provider unavailable.",
                            "key": "common.api.providerUnavailable"
                        }]
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,