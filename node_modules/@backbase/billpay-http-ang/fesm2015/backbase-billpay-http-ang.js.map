{"version":3,"file":"backbase-billpay-http-ang.js","sources":["../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/billPayAccounts.service.ts","../../api/billPayAccounts.service.mocks.ts","../../api/billPayAutopay.service.ts","../../api/billPayAutopay.service.mocks.ts","../../api/billPayEbills.service.ts","../../api/billPayEbills.service.mocks.ts","../../api/billPayEnrolment.service.ts","../../api/billPayEnrolment.service.mocks.ts","../../api/billPayPayees.service.ts","../../api/billPayPayees.service.mocks.ts","../../api/billPayPayeesSummary.service.ts","../../api/billPayPayeesSummary.service.mocks.ts","../../api/billPayPayments.service.ts","../../api/billPayPayments.service.mocks.ts","../../api/billPayPayveris.service.ts","../../api/billPayPayveris.service.mocks.ts","../../api/billPaySearch.service.ts","../../api/billPaySearch.service.mocks.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const BILLPAY_BASE_PATH = new InjectionToken<string>('BILLPAY_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface BillpayConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class BillpayConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: BillpayConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link BillpayConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link BillpayConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module BillpayConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { BillpayConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class BillpayApiModule {\n    public static forRoot(configurationFactory: () => BillpayConfiguration): ModuleWithProviders<BillpayApiModule> {\n        return {\n            ngModule: BillpayApiModule,\n            providers: [ { provide: BillpayConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: BillpayApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: BillpayConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('BillpayApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Bill Pay Integrator client\n * Display and update bill pay information for end-users via web and mobile clients. Manage enrollment, eBills, payments, autopay, and payees.\n *\n * The version of the OpenAPI document: 2.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadGatewayError } from '../model/models';\nimport { BadRequestError } from '../model/models';\nimport { BillPayAccountsGetResponseBody } from '../model/models';\nimport { GatewayTimeoutError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotImplementedError } from '../model/models';\n\nimport { BILLPAY_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { BillpayConfiguration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BillPayAccountsService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new BillpayConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BILLPAY_BASE_PATH) basePath: string, @Optional() configuration: BillpayConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Get all of the accounts for the Bill Pay user registered with the Bill Pay provider.\n     * Get all of the accounts for the Bill Pay user registered with the Bill Pay provider.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayAccounts(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<BillPayAccountsGetResponseBody>;\n    /**\n     * Get all of the accounts for the Bill Pay user registered with the Bill Pay provider.\n     * Get all of the accounts for the Bill Pay user registered with the Bill Pay provider.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayAccounts(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<BillPayAccountsGetResponseBody>>;\n    /**\n     * Get all of the accounts for the Bill Pay user registered with the Bill Pay provider.\n     * Get all of the accounts for the Bill Pay user registered with the Bill Pay provider.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayAccounts(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<BillPayAccountsGetResponseBody>>;\n    /**\n     * Get all of the accounts for the Bill Pay user registered with the Bill Pay provider.\n     * Get all of the accounts for the Bill Pay user registered with the Bill Pay provider.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayAccounts(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<BillPayAccountsGetResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/accounts`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getBillPayAccountsUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/accounts`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/bill-pay/accounts URL pattern\n*/\nexport const BillPayAccountsServiceGetBillPayAccountsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/accounts\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"accounts\" : [ {\n    \"id\" : \"1\",\n    \"accountNumber\" : \"000000001\",\n    \"accountNickName\" : \"Joint Account\",\n    \"accountType\" : \"CHECKING_ACCOUNT\",\n    \"routingNumber\" : \"000000011\",\n    \"accountBalance\" : {\n      \"amount\" : \"1000.01\",\n      \"currencyCode\" : \"USD\"\n    }\n  }, {\n    \"id\" : \"2\",\n    \"accountNumber\" : \"000000002\",\n    \"accountType\" : \"SAVINGS_ACCOUNT\",\n    \"routingNumber\" : \"000000022\"\n  }, {\n    \"accountNumber\" : \"000000003\",\n    \"accountType\" : \"CHECKING_ACCOUNT\",\n    \"routingNumber\" : \"000000033\",\n    \"accountBalance\" : {\n      \"amount\" : \"1000.03\",\n      \"currencyCode\" : \"USD\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const BillPayAccountsServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/bill-pay/accounts\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"accounts\" : [ {\n    \"id\" : \"1\",\n    \"accountNumber\" : \"000000001\",\n    \"accountNickName\" : \"Joint Account\",\n    \"accountType\" : \"CHECKING_ACCOUNT\",\n    \"routingNumber\" : \"000000011\",\n    \"accountBalance\" : {\n      \"amount\" : \"1000.01\",\n      \"currencyCode\" : \"USD\"\n    }\n  }, {\n    \"id\" : \"2\",\n    \"accountNumber\" : \"000000002\",\n    \"accountType\" : \"SAVINGS_ACCOUNT\",\n    \"routingNumber\" : \"000000022\"\n  }, {\n    \"accountNumber\" : \"000000003\",\n    \"accountType\" : \"CHECKING_ACCOUNT\",\n    \"routingNumber\" : \"000000033\",\n    \"accountBalance\" : {\n      \"amount\" : \"1000.03\",\n      \"currencyCode\" : \"USD\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Bill Pay Integrator client\n * Display and update bill pay information for end-users via web and mobile clients. Manage enrollment, eBills, payments, autopay, and payees.\n *\n * The version of the OpenAPI document: 2.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadGatewayError } from '../model/models';\nimport { BadRequestError } from '../model/models';\nimport { BillPayAutopayPutRequestBody } from '../model/models';\nimport { BillPayAutopayPutResponseBody } from '../model/models';\nimport { GatewayTimeoutError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { NotImplementedError } from '../model/models';\n\nimport { BILLPAY_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { BillpayConfiguration }                                     from '../configuration';\n\n\nexport interface DeleteBillPayAutopayRequestParams {\n    /** The id of the autopay */\n    [\"id\"]: string;\n}\n\nexport interface PutBillPayAutopayRequestParams {\n    /** The id of the autopay */\n    [\"id\"]: string;\n    /** Enable or modify autopay. */\n    [\"billPayAutopayPutRequestBody\"]: BillPayAutopayPutRequestBody;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BillPayAutopayService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new BillpayConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BILLPAY_BASE_PATH) basePath: string, @Optional() configuration: BillpayConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Disable autopay.\n     * Disable autopay.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteBillPayAutopay(requestParameters: DeleteBillPayAutopayRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Disable autopay.\n     * Disable autopay.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteBillPayAutopay(requestParameters: DeleteBillPayAutopayRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Disable autopay.\n     * Disable autopay.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteBillPayAutopay(requestParameters: DeleteBillPayAutopayRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Disable autopay.\n     * Disable autopay.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteBillPayAutopay(requestParameters: DeleteBillPayAutopayRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteBillPayAutopay.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/autopay`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteBillPayAutopayUrl(requestParameters: DeleteBillPayAutopayRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteBillPayAutopay.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/autopay`;\n    }\n\n    /**\n     * Enable or modify autopay.\n     * Enable or modify autopay.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putBillPayAutopay(requestParameters: PutBillPayAutopayRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<BillPayAutopayPutResponseBody>;\n    /**\n     * Enable or modify autopay.\n     * Enable or modify autopay.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putBillPayAutopay(requestParameters: PutBillPayAutopayRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<BillPayAutopayPutResponseBody>>;\n    /**\n     * Enable or modify autopay.\n     * Enable or modify autopay.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putBillPayAutopay(requestParameters: PutBillPayAutopayRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<BillPayAutopayPutResponseBody>>;\n    /**\n     * Enable or modify autopay.\n     * Enable or modify autopay.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putBillPayAutopay(requestParameters: PutBillPayAutopayRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putBillPayAutopay.');\n        }\n        const _billPayAutopayPutRequestBody = requestParameters[\"billPayAutopayPutRequestBody\"];\n        if (_billPayAutopayPutRequestBody === null || _billPayAutopayPutRequestBody === undefined) {\n            throw new Error('Required parameter billPayAutopayPutRequestBody was null or undefined when calling putBillPayAutopay.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<BillPayAutopayPutResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/autopay`,\n            _billPayAutopayPutRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putBillPayAutopayUrl(requestParameters: PutBillPayAutopayRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putBillPayAutopay.');\n        }\n        const _billPayAutopayPutRequestBody = requestParameters[\"billPayAutopayPutRequestBody\"];\n        if (_billPayAutopayPutRequestBody === null || _billPayAutopayPutRequestBody === undefined) {\n            throw new Error('Required parameter billPayAutopayPutRequestBody was null or undefined when calling putBillPayAutopay.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/autopay`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/bill-pay/payees/electronic/{id}/autopay URL pattern\n*/\nexport const BillPayAutopayServiceDeleteBillPayAutopayMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/autopay\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payees/electronic/{id}/autopay URL pattern\n*/\nexport const BillPayAutopayServicePutBillPayAutopayMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/autopay\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const BillPayAutopayServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/autopay\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/autopay\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Bill Pay Integrator client\n * Display and update bill pay information for end-users via web and mobile clients. Manage enrollment, eBills, payments, autopay, and payees.\n *\n * The version of the OpenAPI document: 2.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadGatewayError } from '../model/models';\nimport { BadRequestError } from '../model/models';\nimport { BillPayEbillsGetResponseBody } from '../model/models';\nimport { EbillByIdPutRequestBody } from '../model/models';\nimport { EbillByIdPutResponseBody } from '../model/models';\nimport { GatewayTimeoutError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { NotImplementedError } from '../model/models';\n\nimport { BILLPAY_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { BillpayConfiguration }                                     from '../configuration';\n\n\nexport interface DeleteBillPayEbillsRequestParams {\n    /** The id of the payee */\n    [\"id\"]: string;\n}\n\nexport interface GetBillPayEbillStatementsRequestParams {\n    /** The id of the eBill */\n    [\"ebillId\"]: string;\n    /** The id of the payee */\n    [\"id\"]: string;\n}\n\nexport interface GetBillPayEbillsRequestParams {\n    /** The id of the payee */\n    [\"id\"]: string;\n    /** Restrict results by the eBill status (supported status filters include PAID, UNPAID or ALL). */\n    [\"status\"]: string;\n    /** Restrict results to eBills with a date of, or after, 00:00 on this date, UTC. */\n    [\"startDate\"]?: string;\n    /** Restrict results to eBills with a date of, or before, 23:59 on this date, UTC. */\n    [\"endDate\"]?: string;\n    /** Page Number. Skip over pages of elements by specifying a start value for the query */\n    [\"from\"]?: number;\n    /** Limit the number of elements on the response. */\n    [\"size\"]?: number;\n    /** Order by field: paymentDate  */\n    [\"orderBy\"]?: string;\n    /** Direction */\n    [\"direction\"]?: 'ASC' | 'DESC';\n}\n\nexport interface PutEbillByIdRequestParams {\n    /** The id of the eBill */\n    [\"ebillId\"]: string;\n    /** The id of the eBill */\n    [\"id\"]: string;\n    /** File an eBill. */\n    [\"ebillByIdPutRequestBody\"]: EbillByIdPutRequestBody;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BillPayEbillsService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new BillpayConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BILLPAY_BASE_PATH) basePath: string, @Optional() configuration: BillpayConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Disable eBills for a payee.\n     * Disable eBills for a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteBillPayEbills(requestParameters: DeleteBillPayEbillsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Disable eBills for a payee.\n     * Disable eBills for a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteBillPayEbills(requestParameters: DeleteBillPayEbillsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Disable eBills for a payee.\n     * Disable eBills for a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteBillPayEbills(requestParameters: DeleteBillPayEbillsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Disable eBills for a payee.\n     * Disable eBills for a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteBillPayEbills(requestParameters: DeleteBillPayEbillsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteBillPayEbills.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteBillPayEbillsUrl(requestParameters: DeleteBillPayEbillsRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteBillPayEbills.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills`;\n    }\n\n    /**\n     * Get an eBill statement.\n     * Get an eBill statement.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayEbillStatements(requestParameters: GetBillPayEbillStatementsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/pdf'}): Observable<Blob>;\n    /**\n     * Get an eBill statement.\n     * Get an eBill statement.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayEbillStatements(requestParameters: GetBillPayEbillStatementsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/pdf'}): Observable<HttpResponse<Blob>>;\n    /**\n     * Get an eBill statement.\n     * Get an eBill statement.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayEbillStatements(requestParameters: GetBillPayEbillStatementsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/pdf'}): Observable<HttpEvent<Blob>>;\n    /**\n     * Get an eBill statement.\n     * Get an eBill statement.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayEbillStatements(requestParameters: GetBillPayEbillStatementsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Blob>;\n    /**\n     * Get an eBill statement.\n     * Get an eBill statement.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayEbillStatements(requestParameters: GetBillPayEbillStatementsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Blob>>;\n    /**\n     * Get an eBill statement.\n     * Get an eBill statement.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayEbillStatements(requestParameters: GetBillPayEbillStatementsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Blob>>;\n    /**\n     * Get an eBill statement.\n     * Get an eBill statement.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayEbillStatements(requestParameters: GetBillPayEbillStatementsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/pdf' | 'application/json'}): Observable<any> {\n        const _ebillId = requestParameters[\"ebillId\"];\n        if (_ebillId === null || _ebillId === undefined) {\n            throw new Error('Required parameter ebillId was null or undefined when calling getBillPayEbillStatements.');\n        }\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getBillPayEbillStatements.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/pdf',\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills/${encodeURIComponent(String(_ebillId))}/statements`,\n            {\n                responseType: \"blob\",\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getBillPayEbillStatementsUrl(requestParameters: GetBillPayEbillStatementsRequestParams): string {\n        const _ebillId = requestParameters[\"ebillId\"];\n        if (_ebillId === null || _ebillId === undefined) {\n            throw new Error('Required parameter ebillId was null or undefined when calling getBillPayEbillStatements.');\n        }\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getBillPayEbillStatements.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills/${encodeURIComponent(String(_ebillId))}/statements`;\n    }\n\n    /**\n     * Retrieve a list of eBills for a payee.\n     * Retrieve a list of eBills for a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayEbills(requestParameters: GetBillPayEbillsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<BillPayEbillsGetResponseBody>;\n    /**\n     * Retrieve a list of eBills for a payee.\n     * Retrieve a list of eBills for a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayEbills(requestParameters: GetBillPayEbillsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<BillPayEbillsGetResponseBody>>;\n    /**\n     * Retrieve a list of eBills for a payee.\n     * Retrieve a list of eBills for a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayEbills(requestParameters: GetBillPayEbillsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<BillPayEbillsGetResponseBody>>;\n    /**\n     * Retrieve a list of eBills for a payee.\n     * Retrieve a list of eBills for a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayEbills(requestParameters: GetBillPayEbillsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getBillPayEbills.');\n        }\n        const _status = requestParameters[\"status\"];\n        if (_status === null || _status === undefined) {\n            throw new Error('Required parameter status was null or undefined when calling getBillPayEbills.');\n        }\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_status !== undefined && _status !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_status, 'status');\n        }\n        if (_startDate !== undefined && _startDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_endDate, 'endDate');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<BillPayEbillsGetResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getBillPayEbillsUrl(requestParameters: GetBillPayEbillsRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getBillPayEbills.');\n        }\n        const _status = requestParameters[\"status\"];\n        if (_status === null || _status === undefined) {\n            throw new Error('Required parameter status was null or undefined when calling getBillPayEbills.');\n        }\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_status !== undefined && _status !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_status, 'status');\n        }\n        if (_startDate !== undefined && _startDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_endDate, 'endDate');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * File an eBill.\n     * File an eBill.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putEbillById(requestParameters: PutEbillByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<EbillByIdPutResponseBody>;\n    /**\n     * File an eBill.\n     * File an eBill.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putEbillById(requestParameters: PutEbillByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<EbillByIdPutResponseBody>>;\n    /**\n     * File an eBill.\n     * File an eBill.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putEbillById(requestParameters: PutEbillByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<EbillByIdPutResponseBody>>;\n    /**\n     * File an eBill.\n     * File an eBill.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putEbillById(requestParameters: PutEbillByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _ebillId = requestParameters[\"ebillId\"];\n        if (_ebillId === null || _ebillId === undefined) {\n            throw new Error('Required parameter ebillId was null or undefined when calling putEbillById.');\n        }\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putEbillById.');\n        }\n        const _ebillByIdPutRequestBody = requestParameters[\"ebillByIdPutRequestBody\"];\n        if (_ebillByIdPutRequestBody === null || _ebillByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter ebillByIdPutRequestBody was null or undefined when calling putEbillById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<EbillByIdPutResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills/${encodeURIComponent(String(_ebillId))}`,\n            _ebillByIdPutRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putEbillByIdUrl(requestParameters: PutEbillByIdRequestParams): string {\n        const _ebillId = requestParameters[\"ebillId\"];\n        if (_ebillId === null || _ebillId === undefined) {\n            throw new Error('Required parameter ebillId was null or undefined when calling putEbillById.');\n        }\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putEbillById.');\n        }\n        const _ebillByIdPutRequestBody = requestParameters[\"ebillByIdPutRequestBody\"];\n        if (_ebillByIdPutRequestBody === null || _ebillByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter ebillByIdPutRequestBody was null or undefined when calling putEbillById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills/${encodeURIComponent(String(_ebillId))}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/bill-pay/payees/electronic/{id}/ebills URL pattern\n*/\nexport const BillPayEbillsServiceDeleteBillPayEbillsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payees/electronic/{id}/ebills/{ebillId}/statements URL pattern\n*/\nexport const BillPayEbillsServiceGetBillPayEbillStatementsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills/{ebillId}/statements\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payees/electronic/{id}/ebills URL pattern\n*/\nexport const BillPayEbillsServiceGetBillPayEbillsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"ebills\" : [ {\n    \"id\" : \"20141219140239655592\",\n    \"payeeID\" : \"0001\",\n    \"paymentDate\" : \"2019-04-01\",\n    \"amount\" : {\n      \"amount\" : \"100.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"minAmountDue\" : {\n      \"amount\" : \"20.50\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"outstandingBalance\" : {\n      \"amount\" : \"101.98\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"status\" : \"UNPAID\",\n    \"statementAvailable\" : true\n  }, {\n    \"id\" : \"20141219140239655591\",\n    \"payeeID\" : \"0001\",\n    \"paymentDate\" : \"2019-03-01\",\n    \"amount\" : {\n      \"amount\" : \"100.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"minAmountDue\" : {\n      \"amount\" : \"20.50\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"outstandingBalance\" : {\n      \"amount\" : \"201.98\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"status\" : \"PAID\",\n    \"statementAvailable\" : true,\n    \"paymentId\" : \"abc0192802\"\n  }, {\n    \"id\" : \"20141219140239655590\",\n    \"payeeID\" : \"0001\",\n    \"paymentDate\" : \"2019-02-01\",\n    \"amount\" : {\n      \"amount\" : \"100.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"minAmountDue\" : {\n      \"amount\" : \"20.50\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"outstandingBalance\" : {\n      \"amount\" : \"301.98\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"status\" : \"PAID\",\n    \"url\" : \"http://my.ebill.pdf\",\n    \"statementAvailable\" : false\n  } ],\n  \"totalCount\" : 3\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payees/electronic/{id}/ebills/{ebillId} URL pattern\n*/\nexport const BillPayEbillsServicePutEbillByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills/{ebillId}\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const BillPayEbillsServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills/{ebillId}/statements\",\n        method: \"GET\",\n        responses: [\n\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"ebills\" : [ {\n    \"id\" : \"20141219140239655592\",\n    \"payeeID\" : \"0001\",\n    \"paymentDate\" : \"2019-04-01\",\n    \"amount\" : {\n      \"amount\" : \"100.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"minAmountDue\" : {\n      \"amount\" : \"20.50\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"outstandingBalance\" : {\n      \"amount\" : \"101.98\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"status\" : \"UNPAID\",\n    \"statementAvailable\" : true\n  }, {\n    \"id\" : \"20141219140239655591\",\n    \"payeeID\" : \"0001\",\n    \"paymentDate\" : \"2019-03-01\",\n    \"amount\" : {\n      \"amount\" : \"100.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"minAmountDue\" : {\n      \"amount\" : \"20.50\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"outstandingBalance\" : {\n      \"amount\" : \"201.98\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"status\" : \"PAID\",\n    \"statementAvailable\" : true,\n    \"paymentId\" : \"abc0192802\"\n  }, {\n    \"id\" : \"20141219140239655590\",\n    \"payeeID\" : \"0001\",\n    \"paymentDate\" : \"2019-02-01\",\n    \"amount\" : {\n      \"amount\" : \"100.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"minAmountDue\" : {\n      \"amount\" : \"20.50\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"outstandingBalance\" : {\n      \"amount\" : \"301.98\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"status\" : \"PAID\",\n    \"url\" : \"http://my.ebill.pdf\",\n    \"statementAvailable\" : false\n  } ],\n  \"totalCount\" : 3\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills/{ebillId}\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Bill Pay Integrator client\n * Display and update bill pay information for end-users via web and mobile clients. Manage enrollment, eBills, payments, autopay, and payees.\n *\n * The version of the OpenAPI document: 2.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadGatewayError } from '../model/models';\nimport { BadRequestError } from '../model/models';\nimport { BillPayEnrolmentGetResponseBody } from '../model/models';\nimport { GatewayTimeoutError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotImplementedError } from '../model/models';\n\nimport { BILLPAY_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { BillpayConfiguration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BillPayEnrolmentService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new BillpayConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BILLPAY_BASE_PATH) basePath: string, @Optional() configuration: BillpayConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Get the enrolment state for the current user.\n     * Get the enrolment state for the current user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayEnrolment(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<BillPayEnrolmentGetResponseBody>;\n    /**\n     * Get the enrolment state for the current user.\n     * Get the enrolment state for the current user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayEnrolment(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<BillPayEnrolmentGetResponseBody>>;\n    /**\n     * Get the enrolment state for the current user.\n     * Get the enrolment state for the current user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayEnrolment(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<BillPayEnrolmentGetResponseBody>>;\n    /**\n     * Get the enrolment state for the current user.\n     * Get the enrolment state for the current user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayEnrolment(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<BillPayEnrolmentGetResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/enrolment`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getBillPayEnrolmentUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/enrolment`;\n    }\n\n    /**\n     * Enrol in Bill Pay, enrolment data is supplied in the integration service.\n     * Enrol in Bill Pay, enrolment data is supplied in the integration service.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayEnrolment(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Enrol in Bill Pay, enrolment data is supplied in the integration service.\n     * Enrol in Bill Pay, enrolment data is supplied in the integration service.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayEnrolment(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Enrol in Bill Pay, enrolment data is supplied in the integration service.\n     * Enrol in Bill Pay, enrolment data is supplied in the integration service.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayEnrolment(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Enrol in Bill Pay, enrolment data is supplied in the integration service.\n     * Enrol in Bill Pay, enrolment data is supplied in the integration service.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayEnrolment(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/bill-pay/enrolment`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postBillPayEnrolmentUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/enrolment`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/bill-pay/enrolment URL pattern\n*/\nexport const BillPayEnrolmentServiceGetBillPayEnrolmentMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/enrolment\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"enrolment\" : {\n    \"enrolled\" : true\n  }\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/enrolment URL pattern\n*/\nexport const BillPayEnrolmentServicePostBillPayEnrolmentMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/enrolment\",\n        method: \"POST\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const BillPayEnrolmentServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/bill-pay/enrolment\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"enrolment\" : {\n    \"enrolled\" : true\n  }\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/enrolment\",\n        method: \"POST\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Bill Pay Integrator client\n * Display and update bill pay information for end-users via web and mobile clients. Manage enrollment, eBills, payments, autopay, and payees.\n *\n * The version of the OpenAPI document: 2.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadGatewayError } from '../model/models';\nimport { BadRequestError } from '../model/models';\nimport { BillPayElectronicPayeesPostRequestBody } from '../model/models';\nimport { BillPayElectronicPayeesPostResponseBody } from '../model/models';\nimport { BillPayPayeesPostRequestBody } from '../model/models';\nimport { BillPayPayeesPostResponseBody } from '../model/models';\nimport { ElectronicPayeeByIdGetResponseBody } from '../model/models';\nimport { ElectronicPayeeByIdPutRequestBody } from '../model/models';\nimport { ElectronicPayeeByIdPutResponseBody } from '../model/models';\nimport { GatewayTimeoutError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { NotImplementedError } from '../model/models';\nimport { PayeeByIdGetResponseBody } from '../model/models';\nimport { PayeeByIdPutRequestBody } from '../model/models';\nimport { PayeeByIdPutResponseBody } from '../model/models';\n\nimport { BILLPAY_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { BillpayConfiguration }                                     from '../configuration';\n\n\nexport interface DeleteElectronicPayeeByIdRequestParams {\n    /** The id of the payee */\n    [\"id\"]: string;\n    /** Indicates whether to cancel any existing pending payments for this payee before deleting it. */\n    [\"cancelPendingPayments\"]: boolean;\n}\n\nexport interface DeletePayeeByIdRequestParams {\n    /** The id of the payee */\n    [\"id\"]: string;\n    /** Indicates whether to cancel any existing pending payments for this payee before deleting it. */\n    [\"cancelPendingPayments\"]: boolean;\n}\n\nexport interface GetElectronicPayeeByIdRequestParams {\n    /** The id of the payee */\n    [\"id\"]: string;\n}\n\nexport interface GetPayeeByIdRequestParams {\n    /** The id of the payee */\n    [\"id\"]: string;\n}\n\nexport interface PostBillPayElectronicPayeesRequestParams {\n    /** Create a new payee for the Bill Pay user. */\n    [\"billPayElectronicPayeesPostRequestBody\"]: BillPayElectronicPayeesPostRequestBody;\n}\n\nexport interface PostBillPayPayeesRequestParams {\n    /** Create a new payee for the Bill Pay user. */\n    [\"billPayPayeesPostRequestBody\"]: BillPayPayeesPostRequestBody;\n}\n\nexport interface PutElectronicPayeeByIdRequestParams {\n    /** The id of the payee */\n    [\"id\"]: string;\n    /** Modify a payee. */\n    [\"electronicPayeeByIdPutRequestBody\"]: ElectronicPayeeByIdPutRequestBody;\n}\n\nexport interface PutPayeeByIdRequestParams {\n    /** The id of the payee */\n    [\"id\"]: string;\n    /** Modify a payee. */\n    [\"payeeByIdPutRequestBody\"]: PayeeByIdPutRequestBody;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BillPayPayeesService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new BillpayConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BILLPAY_BASE_PATH) basePath: string, @Optional() configuration: BillpayConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Delete a payee.\n     * Delete a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteElectronicPayeeById(requestParameters: DeleteElectronicPayeeByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Delete a payee.\n     * Delete a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteElectronicPayeeById(requestParameters: DeleteElectronicPayeeByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Delete a payee.\n     * Delete a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteElectronicPayeeById(requestParameters: DeleteElectronicPayeeByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Delete a payee.\n     * Delete a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteElectronicPayeeById(requestParameters: DeleteElectronicPayeeByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteElectronicPayeeById.');\n        }\n        const _cancelPendingPayments = requestParameters[\"cancelPendingPayments\"];\n        if (_cancelPendingPayments === null || _cancelPendingPayments === undefined) {\n            throw new Error('Required parameter cancelPendingPayments was null or undefined when calling deleteElectronicPayeeById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_cancelPendingPayments !== undefined && _cancelPendingPayments !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cancelPendingPayments, 'cancelPendingPayments');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteElectronicPayeeByIdUrl(requestParameters: DeleteElectronicPayeeByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteElectronicPayeeById.');\n        }\n        const _cancelPendingPayments = requestParameters[\"cancelPendingPayments\"];\n        if (_cancelPendingPayments === null || _cancelPendingPayments === undefined) {\n            throw new Error('Required parameter cancelPendingPayments was null or undefined when calling deleteElectronicPayeeById.');\n        }\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_cancelPendingPayments !== undefined && _cancelPendingPayments !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cancelPendingPayments, 'cancelPendingPayments');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Delete a payee.\n     * Delete a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePayeeById(requestParameters: DeletePayeeByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Delete a payee.\n     * Delete a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePayeeById(requestParameters: DeletePayeeByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Delete a payee.\n     * Delete a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePayeeById(requestParameters: DeletePayeeByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Delete a payee.\n     * Delete a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePayeeById(requestParameters: DeletePayeeByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deletePayeeById.');\n        }\n        const _cancelPendingPayments = requestParameters[\"cancelPendingPayments\"];\n        if (_cancelPendingPayments === null || _cancelPendingPayments === undefined) {\n            throw new Error('Required parameter cancelPendingPayments was null or undefined when calling deletePayeeById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_cancelPendingPayments !== undefined && _cancelPendingPayments !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cancelPendingPayments, 'cancelPendingPayments');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/${encodeURIComponent(String(_id))}`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deletePayeeByIdUrl(requestParameters: DeletePayeeByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deletePayeeById.');\n        }\n        const _cancelPendingPayments = requestParameters[\"cancelPendingPayments\"];\n        if (_cancelPendingPayments === null || _cancelPendingPayments === undefined) {\n            throw new Error('Required parameter cancelPendingPayments was null or undefined when calling deletePayeeById.');\n        }\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_cancelPendingPayments !== undefined && _cancelPendingPayments !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cancelPendingPayments, 'cancelPendingPayments');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/${encodeURIComponent(String(_id))}${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Get a payee.\n     * Get a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getElectronicPayeeById(requestParameters: GetElectronicPayeeByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ElectronicPayeeByIdGetResponseBody>;\n    /**\n     * Get a payee.\n     * Get a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getElectronicPayeeById(requestParameters: GetElectronicPayeeByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ElectronicPayeeByIdGetResponseBody>>;\n    /**\n     * Get a payee.\n     * Get a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getElectronicPayeeById(requestParameters: GetElectronicPayeeByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ElectronicPayeeByIdGetResponseBody>>;\n    /**\n     * Get a payee.\n     * Get a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getElectronicPayeeById(requestParameters: GetElectronicPayeeByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getElectronicPayeeById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ElectronicPayeeByIdGetResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getElectronicPayeeByIdUrl(requestParameters: GetElectronicPayeeByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getElectronicPayeeById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Get a payee.\n     * Get a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPayeeById(requestParameters: GetPayeeByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PayeeByIdGetResponseBody>;\n    /**\n     * Get a payee.\n     * Get a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPayeeById(requestParameters: GetPayeeByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PayeeByIdGetResponseBody>>;\n    /**\n     * Get a payee.\n     * Get a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPayeeById(requestParameters: GetPayeeByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PayeeByIdGetResponseBody>>;\n    /**\n     * Get a payee.\n     * Get a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPayeeById(requestParameters: GetPayeeByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getPayeeById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PayeeByIdGetResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getPayeeByIdUrl(requestParameters: GetPayeeByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getPayeeById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Create a new payee for the Bill Pay user.\n     * Create a new payee for the Bill Pay user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayElectronicPayees(requestParameters: PostBillPayElectronicPayeesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<BillPayElectronicPayeesPostResponseBody>;\n    /**\n     * Create a new payee for the Bill Pay user.\n     * Create a new payee for the Bill Pay user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayElectronicPayees(requestParameters: PostBillPayElectronicPayeesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<BillPayElectronicPayeesPostResponseBody>>;\n    /**\n     * Create a new payee for the Bill Pay user.\n     * Create a new payee for the Bill Pay user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayElectronicPayees(requestParameters: PostBillPayElectronicPayeesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<BillPayElectronicPayeesPostResponseBody>>;\n    /**\n     * Create a new payee for the Bill Pay user.\n     * Create a new payee for the Bill Pay user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayElectronicPayees(requestParameters: PostBillPayElectronicPayeesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _billPayElectronicPayeesPostRequestBody = requestParameters[\"billPayElectronicPayeesPostRequestBody\"];\n        if (_billPayElectronicPayeesPostRequestBody === null || _billPayElectronicPayeesPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayElectronicPayeesPostRequestBody was null or undefined when calling postBillPayElectronicPayees.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<BillPayElectronicPayeesPostResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic`,\n            _billPayElectronicPayeesPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postBillPayElectronicPayeesUrl(requestParameters: PostBillPayElectronicPayeesRequestParams): string {\n        const _billPayElectronicPayeesPostRequestBody = requestParameters[\"billPayElectronicPayeesPostRequestBody\"];\n        if (_billPayElectronicPayeesPostRequestBody === null || _billPayElectronicPayeesPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayElectronicPayeesPostRequestBody was null or undefined when calling postBillPayElectronicPayees.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic`;\n    }\n\n    /**\n     * Create a new payee for the Bill Pay user.\n     * Create a new payee for the Bill Pay user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayPayees(requestParameters: PostBillPayPayeesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<BillPayPayeesPostResponseBody>;\n    /**\n     * Create a new payee for the Bill Pay user.\n     * Create a new payee for the Bill Pay user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayPayees(requestParameters: PostBillPayPayeesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<BillPayPayeesPostResponseBody>>;\n    /**\n     * Create a new payee for the Bill Pay user.\n     * Create a new payee for the Bill Pay user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayPayees(requestParameters: PostBillPayPayeesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<BillPayPayeesPostResponseBody>>;\n    /**\n     * Create a new payee for the Bill Pay user.\n     * Create a new payee for the Bill Pay user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayPayees(requestParameters: PostBillPayPayeesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _billPayPayeesPostRequestBody = requestParameters[\"billPayPayeesPostRequestBody\"];\n        if (_billPayPayeesPostRequestBody === null || _billPayPayeesPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayPayeesPostRequestBody was null or undefined when calling postBillPayPayees.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<BillPayPayeesPostResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payees`,\n            _billPayPayeesPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postBillPayPayeesUrl(requestParameters: PostBillPayPayeesRequestParams): string {\n        const _billPayPayeesPostRequestBody = requestParameters[\"billPayPayeesPostRequestBody\"];\n        if (_billPayPayeesPostRequestBody === null || _billPayPayeesPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayPayeesPostRequestBody was null or undefined when calling postBillPayPayees.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees`;\n    }\n\n    /**\n     * Modify a payee.\n     * Modify a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putElectronicPayeeById(requestParameters: PutElectronicPayeeByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ElectronicPayeeByIdPutResponseBody>;\n    /**\n     * Modify a payee.\n     * Modify a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putElectronicPayeeById(requestParameters: PutElectronicPayeeByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ElectronicPayeeByIdPutResponseBody>>;\n    /**\n     * Modify a payee.\n     * Modify a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putElectronicPayeeById(requestParameters: PutElectronicPayeeByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ElectronicPayeeByIdPutResponseBody>>;\n    /**\n     * Modify a payee.\n     * Modify a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putElectronicPayeeById(requestParameters: PutElectronicPayeeByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putElectronicPayeeById.');\n        }\n        const _electronicPayeeByIdPutRequestBody = requestParameters[\"electronicPayeeByIdPutRequestBody\"];\n        if (_electronicPayeeByIdPutRequestBody === null || _electronicPayeeByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter electronicPayeeByIdPutRequestBody was null or undefined when calling putElectronicPayeeById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<ElectronicPayeeByIdPutResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}`,\n            _electronicPayeeByIdPutRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putElectronicPayeeByIdUrl(requestParameters: PutElectronicPayeeByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putElectronicPayeeById.');\n        }\n        const _electronicPayeeByIdPutRequestBody = requestParameters[\"electronicPayeeByIdPutRequestBody\"];\n        if (_electronicPayeeByIdPutRequestBody === null || _electronicPayeeByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter electronicPayeeByIdPutRequestBody was null or undefined when calling putElectronicPayeeById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Modify a payee.\n     * Modify a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putPayeeById(requestParameters: PutPayeeByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PayeeByIdPutResponseBody>;\n    /**\n     * Modify a payee.\n     * Modify a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putPayeeById(requestParameters: PutPayeeByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PayeeByIdPutResponseBody>>;\n    /**\n     * Modify a payee.\n     * Modify a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putPayeeById(requestParameters: PutPayeeByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PayeeByIdPutResponseBody>>;\n    /**\n     * Modify a payee.\n     * Modify a payee.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putPayeeById(requestParameters: PutPayeeByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putPayeeById.');\n        }\n        const _payeeByIdPutRequestBody = requestParameters[\"payeeByIdPutRequestBody\"];\n        if (_payeeByIdPutRequestBody === null || _payeeByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter payeeByIdPutRequestBody was null or undefined when calling putPayeeById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<PayeeByIdPutResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/${encodeURIComponent(String(_id))}`,\n            _payeeByIdPutRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putPayeeByIdUrl(requestParameters: PutPayeeByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putPayeeById.');\n        }\n        const _payeeByIdPutRequestBody = requestParameters[\"payeeByIdPutRequestBody\"];\n        if (_payeeByIdPutRequestBody === null || _payeeByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter payeeByIdPutRequestBody was null or undefined when calling putPayeeById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/${encodeURIComponent(String(_id))}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/bill-pay/payees/electronic/{id} URL pattern\n*/\nexport const BillPayPayeesServiceDeleteElectronicPayeeByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payees/{id} URL pattern\n*/\nexport const BillPayPayeesServiceDeletePayeeByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/{id}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payees/electronic/{id} URL pattern\n*/\nexport const BillPayPayeesServiceGetElectronicPayeeByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"payee\" : {\n    \"id\" : \"123456789\",\n    \"name\" : \"Backbase\",\n    \"nickName\" : \"My Backbase\",\n    \"accountNumber\" : \"987654321\",\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-02-25T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-02-26\",\n      \"nextPaymentDate\" : \"2019-02-27\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\"\n    }, {\n      \"cutoffTime\" : \"2019-02-18T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-02-19\",\n      \"nextPaymentDate\" : \"2019-02-20\",\n      \"paymentServiceType\" : \"OVERNIGHT_CHECK\",\n      \"deliveryDays\" : 3,\n      \"fee\" : {\n        \"amount\" : \"9.99\",\n        \"currencyCode\" : \"USD\"\n      }\n    } ],\n    \"ebill\" : {\n      \"capable\" : true,\n      \"enabled\" : true,\n      \"status\" : \"ACTIVE\",\n      \"latestBill\" : {\n        \"id\" : \"20141219140239655590\",\n        \"amount\" : {\n          \"amount\" : \"100.99\",\n          \"currencyCode\" : \"USD\"\n        },\n        \"minAmountDue\" : {\n          \"amount\" : \"20.50\",\n          \"currencyCode\" : \"USD\"\n        },\n        \"outstandingBalance\" : {\n          \"amount\" : \"201.98\",\n          \"currencyCode\" : \"USD\"\n        },\n        \"paymentDate\" : \"2019-03-01\",\n        \"status\" : \"PAID\",\n        \"url\" : \"http://my.ebill.pdf\",\n        \"statementAvailable\" : false,\n        \"paymentId\" : \"abc0192802\"\n      },\n      \"autopay\" : {\n        \"paymentAccount\" : {\n          \"accountNumber\" : \"11111111\",\n          \"routingNumber\" : \"000000022\",\n          \"accountType\" : \"SAVINGS_ACCOUNT\",\n          \"accountNickName\" : \"Current Account\"\n        },\n        \"daysBeforePayOn\" : 3,\n        \"maxPaymentAmount\" : {\n          \"amount\" : \"123\",\n          \"currencyCode\" : \"USD\"\n        },\n        \"payOn\" : \"BILL_ARRIVAL\",\n        \"payAmount\" : \"FULL_AMOUNT\",\n        \"paymentScheduledAlert\" : false,\n        \"paymentSentAlert\" : true,\n        \"paymentCompleteAlert\" : true\n      }\n    }\n  }\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payees/{id} URL pattern\n*/\nexport const BillPayPayeesServiceGetPayeeByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"payee\" : {\n    \"id\" : \"1\",\n    \"name\" : \"Backbase\",\n    \"phoneNumber\" : \"2345678901\",\n    \"address\" : {\n      \"state\" : \"SD\",\n      \"city\" : \"SIOUX FALLS\",\n      \"address1\" : \"PO BOX 6001\",\n      \"postalCode\" : \"12345\"\n    },\n    \"overnightDeliveryAddress\" : {\n      \"state\" : \"FL\",\n      \"city\" : \"Saint Petersburg\",\n      \"address1\" : \"560 Carillon Parkway\",\n      \"postalCode\" : \"33717\"\n    },\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-02-25T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-02-26\",\n      \"nextPaymentDate\" : \"2019-02-27\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\"\n    }, {\n      \"cutoffTime\" : \"2019-02-21T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-02-22\",\n      \"nextPaymentDate\" : \"2019-02-25\",\n      \"paymentServiceType\" : \"OVERNIGHT_CHECK\",\n      \"deliveryDays\" : 3,\n      \"fee\" : {\n        \"amount\" : \"9.99\",\n        \"currencyCode\" : \"USD\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payees/electronic URL pattern\n*/\nexport const BillPayPayeesServicePostBillPayElectronicPayeesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payees URL pattern\n*/\nexport const BillPayPayeesServicePostBillPayPayeesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payees/electronic/{id} URL pattern\n*/\nexport const BillPayPayeesServicePutElectronicPayeeByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payees/{id} URL pattern\n*/\nexport const BillPayPayeesServicePutPayeeByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/{id}\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const BillPayPayeesServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/{id}\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"payee\" : {\n    \"id\" : \"123456789\",\n    \"name\" : \"Backbase\",\n    \"nickName\" : \"My Backbase\",\n    \"accountNumber\" : \"987654321\",\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-02-25T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-02-26\",\n      \"nextPaymentDate\" : \"2019-02-27\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\"\n    }, {\n      \"cutoffTime\" : \"2019-02-18T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-02-19\",\n      \"nextPaymentDate\" : \"2019-02-20\",\n      \"paymentServiceType\" : \"OVERNIGHT_CHECK\",\n      \"deliveryDays\" : 3,\n      \"fee\" : {\n        \"amount\" : \"9.99\",\n        \"currencyCode\" : \"USD\"\n      }\n    } ],\n    \"ebill\" : {\n      \"capable\" : true,\n      \"enabled\" : true,\n      \"status\" : \"ACTIVE\",\n      \"latestBill\" : {\n        \"id\" : \"20141219140239655590\",\n        \"amount\" : {\n          \"amount\" : \"100.99\",\n          \"currencyCode\" : \"USD\"\n        },\n        \"minAmountDue\" : {\n          \"amount\" : \"20.50\",\n          \"currencyCode\" : \"USD\"\n        },\n        \"outstandingBalance\" : {\n          \"amount\" : \"201.98\",\n          \"currencyCode\" : \"USD\"\n        },\n        \"paymentDate\" : \"2019-03-01\",\n        \"status\" : \"PAID\",\n        \"url\" : \"http://my.ebill.pdf\",\n        \"statementAvailable\" : false,\n        \"paymentId\" : \"abc0192802\"\n      },\n      \"autopay\" : {\n        \"paymentAccount\" : {\n          \"accountNumber\" : \"11111111\",\n          \"routingNumber\" : \"000000022\",\n          \"accountType\" : \"SAVINGS_ACCOUNT\",\n          \"accountNickName\" : \"Current Account\"\n        },\n        \"daysBeforePayOn\" : 3,\n        \"maxPaymentAmount\" : {\n          \"amount\" : \"123\",\n          \"currencyCode\" : \"USD\"\n        },\n        \"payOn\" : \"BILL_ARRIVAL\",\n        \"payAmount\" : \"FULL_AMOUNT\",\n        \"paymentScheduledAlert\" : false,\n        \"paymentSentAlert\" : true,\n        \"paymentCompleteAlert\" : true\n      }\n    }\n  }\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"payee\" : {\n    \"id\" : \"1\",\n    \"name\" : \"Backbase\",\n    \"phoneNumber\" : \"2345678901\",\n    \"address\" : {\n      \"state\" : \"SD\",\n      \"city\" : \"SIOUX FALLS\",\n      \"address1\" : \"PO BOX 6001\",\n      \"postalCode\" : \"12345\"\n    },\n    \"overnightDeliveryAddress\" : {\n      \"state\" : \"FL\",\n      \"city\" : \"Saint Petersburg\",\n      \"address1\" : \"560 Carillon Parkway\",\n      \"postalCode\" : \"33717\"\n    },\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-02-25T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-02-26\",\n      \"nextPaymentDate\" : \"2019-02-27\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\"\n    }, {\n      \"cutoffTime\" : \"2019-02-21T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-02-22\",\n      \"nextPaymentDate\" : \"2019-02-25\",\n      \"paymentServiceType\" : \"OVERNIGHT_CHECK\",\n      \"deliveryDays\" : 3,\n      \"fee\" : {\n        \"amount\" : \"9.99\",\n        \"currencyCode\" : \"USD\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/{id}\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Bill Pay Integrator client\n * Display and update bill pay information for end-users via web and mobile clients. Manage enrollment, eBills, payments, autopay, and payees.\n *\n * The version of the OpenAPI document: 2.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadGatewayError } from '../model/models';\nimport { BadRequestError } from '../model/models';\nimport { BillPayPayeesSummaryGetResponseBody } from '../model/models';\nimport { GatewayTimeoutError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotImplementedError } from '../model/models';\n\nimport { BILLPAY_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { BillpayConfiguration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BillPayPayeesSummaryService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new BillpayConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BILLPAY_BASE_PATH) basePath: string, @Optional() configuration: BillpayConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Get all payees with their associated payment services and any next payment scheduled.\n     * Get all payees with their associated payment services and any next payment scheduled.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayPayeesSummary(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<BillPayPayeesSummaryGetResponseBody>;\n    /**\n     * Get all payees with their associated payment services and any next payment scheduled.\n     * Get all payees with their associated payment services and any next payment scheduled.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayPayeesSummary(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<BillPayPayeesSummaryGetResponseBody>>;\n    /**\n     * Get all payees with their associated payment services and any next payment scheduled.\n     * Get all payees with their associated payment services and any next payment scheduled.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayPayeesSummary(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<BillPayPayeesSummaryGetResponseBody>>;\n    /**\n     * Get all payees with their associated payment services and any next payment scheduled.\n     * Get all payees with their associated payment services and any next payment scheduled.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayPayeesSummary(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<BillPayPayeesSummaryGetResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payees-summary`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getBillPayPayeesSummaryUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees-summary`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/bill-pay/payees-summary URL pattern\n*/\nexport const BillPayPayeesSummaryServiceGetBillPayPayeesSummaryMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees-summary\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"payeeSummaries\" : [ {\n    \"id\" : \"0001\",\n    \"name\" : \"Citibank\",\n    \"nickName\" : \"My Bank\",\n    \"accountNumber\" : \"246895317\",\n    \"electronic\" : true,\n    \"hasRecurringPayments\" : false,\n    \"nextPayment\" : {\n      \"amount\" : {\n        \"amount\" : \"100.99\",\n        \"currencyCode\" : \"USD\"\n      },\n      \"paymentDate\" : \"2019-02-22\",\n      \"recurring\" : false,\n      \"automaticPayment\" : true,\n      \"fee\" : {\n        \"amount\" : \"9.99\",\n        \"currencyCode\" : \"USD\"\n      }\n    },\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-02-21T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-02-22\",\n      \"nextPaymentDate\" : \"2019-02-25\",\n      \"paymentServiceType\" : \"EXPEDITED_PAYMENT\",\n      \"deliveryDays\" : 3,\n      \"fee\" : {\n        \"amount\" : \"9.99\",\n        \"currencyCode\" : \"USD\"\n      }\n    }, {\n      \"cutoffTime\" : \"2019-02-25T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-02-26\",\n      \"nextPaymentDate\" : \"2019-02-27\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\"\n    } ],\n    \"ebill\" : {\n      \"capable\" : true,\n      \"enabled\" : true,\n      \"status\" : \"ACTIVE\",\n      \"latestBill\" : {\n        \"id\" : \"20141219140239655590\",\n        \"amount\" : {\n          \"amount\" : \"100.99\",\n          \"currencyCode\" : \"USD\"\n        },\n        \"minAmountDue\" : {\n          \"amount\" : \"20.50\",\n          \"currencyCode\" : \"USD\"\n        },\n        \"outstandingBalance\" : {\n          \"amount\" : \"201.98\",\n          \"currencyCode\" : \"USD\"\n        },\n        \"paymentDate\" : \"2019-03-01\",\n        \"status\" : \"PAID\",\n        \"url\" : \"http://my.ebill.pdf\",\n        \"statementAvailable\" : false,\n        \"paymentId\" : \"abc0192802\"\n      },\n      \"autopay\" : {\n        \"paymentAccount\" : {\n          \"accountNumber\" : \"11111111\",\n          \"routingNumber\" : \"000000022\",\n          \"accountType\" : \"SAVINGS_ACCOUNT\",\n          \"accountNickName\" : \"Current Account\"\n        },\n        \"daysBeforePayOn\" : 3,\n        \"maxPaymentAmount\" : {\n          \"amount\" : \"123\",\n          \"currencyCode\" : \"USD\"\n        },\n        \"payOn\" : \"BILL_ARRIVAL\",\n        \"payAmount\" : \"FULL_AMOUNT\",\n        \"paymentScheduledAlert\" : false,\n        \"paymentSentAlert\" : true,\n        \"paymentCompleteAlert\" : true\n      }\n    },\n    \"overnightDeliveryAddress\" : {\n      \"state\" : \"FL\",\n      \"city\" : \"Saint Petersburg\",\n      \"address1\" : \"560 Carillon Parkway\",\n      \"postalCode\" : \"33717\"\n    }\n  }, {\n    \"id\" : \"0002\",\n    \"name\" : \"Electric Company\",\n    \"accountNumber\" : \"78641258\",\n    \"electronic\" : true,\n    \"hasRecurringPayments\" : true,\n    \"nextPayment\" : {\n      \"amount\" : {\n        \"amount\" : \"101.99\",\n        \"currencyCode\" : \"USD\"\n      },\n      \"paymentDate\" : \"2019-02-28\",\n      \"recurring\" : true,\n      \"automaticPayment\" : false\n    },\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-02-25T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-02-26\",\n      \"nextPaymentDate\" : \"2019-02-27\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\"\n    } ],\n    \"ebill\" : {\n      \"capable\" : true,\n      \"enabled\" : true,\n      \"status\" : \"UPDATE_CREDENTIALS\"\n    }\n  }, {\n    \"id\" : \"0003\",\n    \"name\" : \"John Doe\",\n    \"electronic\" : false,\n    \"hasRecurringPayments\" : false,\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-03-04T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-03-05\",\n      \"nextPaymentDate\" : \"2019-03-06\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\"\n    } ]\n  }, {\n    \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n    \"name\" : \"Gas Company\",\n    \"electronic\" : true,\n    \"hasRecurringPayments\" : false,\n    \"nextPayment\" : {\n      \"amount\" : {\n        \"amount\" : \"20.99\",\n        \"currencyCode\" : \"USD\"\n      },\n      \"paymentDate\" : \"2019-03-20\",\n      \"recurring\" : false,\n      \"automaticPayment\" : false\n    },\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-03-21T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-03-22\",\n      \"nextPaymentDate\" : \"2019-03-25\",\n      \"paymentServiceType\" : \"EXPEDITED_PAYMENT\",\n      \"deliveryDays\" : 3,\n      \"fee\" : {\n        \"amount\" : \"0\",\n        \"currencyCode\" : \"USD\"\n      }\n    }, {\n      \"cutoffTime\" : \"2019-03-27T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-03-28\",\n      \"nextPaymentDate\" : \"2019-03-29\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\"\n    } ],\n    \"ebill\" : {\n      \"capable\" : true,\n      \"enabled\" : true,\n      \"status\" : \"ACTIVE\"\n    }\n  }, {\n    \"id\" : \"31315694\",\n    \"name\" : \"Somewhat Wireless\",\n    \"nickName\" : \"Internet\",\n    \"accountNumber\" : \"152236988\",\n    \"electronic\" : true,\n    \"hasRecurringPayments\" : true,\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-10-08T06:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-10-08\",\n      \"nextPaymentDate\" : \"2019-10-09\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\",\n      \"deliveryDays\" : 1\n    } ],\n    \"ebill\" : {\n      \"capable\" : true,\n      \"enabled\" : true,\n      \"status\" : \"USER_ACTION\"\n    }\n  }, {\n    \"id\" : \"31315661\",\n    \"name\" : \"Outer Rim Supply Co.\",\n    \"accountNumber\" : \"152236978\",\n    \"electronic\" : true,\n    \"hasRecurringPayments\" : false,\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-10-08T06:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-10-08\",\n      \"nextPaymentDate\" : \"2019-10-09\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\",\n      \"deliveryDays\" : 1\n    } ],\n    \"ebill\" : {\n      \"capable\" : true,\n      \"enabled\" : true,\n      \"status\" : \"ERROR\"\n    }\n  }, {\n    \"id\" : \"0004\",\n    \"name\" : \"Water Company\",\n    \"electronic\" : true,\n    \"hasRecurringPayments\" : false,\n    \"nextPayment\" : {\n      \"amount\" : {\n        \"amount\" : \"2001.89\",\n        \"currencyCode\" : \"USD\"\n      },\n      \"paymentDate\" : \"2019-03-14\",\n      \"recurring\" : false,\n      \"automaticPayment\" : false\n    },\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-03-11T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-03-12\",\n      \"nextPaymentDate\" : \"2019-03-13\",\n      \"paymentServiceType\" : \"OVERNIGHT_CHECK\",\n      \"deliveryDays\" : 3,\n      \"fee\" : {\n        \"amount\" : \"9.99\",\n        \"currencyCode\" : \"USD\"\n      }\n    }, {\n      \"cutoffTime\" : \"2019-03-18T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-03-19\",\n      \"nextPaymentDate\" : \"2019-03-20\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\"\n    } ],\n    \"overnightDeliveryAddress\" : {\n      \"state\" : \"FL\",\n      \"city\" : \"Saint Petersburg\",\n      \"address1\" : \"560 Carillon Parkway\",\n      \"postalCode\" : \"33717\"\n    },\n    \"ebill\" : {\n      \"capable\" : true,\n      \"enabled\" : true,\n      \"status\" : \"NOT_SUPPORTED\"\n    }\n  }, {\n    \"id\" : \"0005\",\n    \"name\" : \"Phone Company\",\n    \"electronic\" : true,\n    \"hasRecurringPayments\" : true,\n    \"nextPayment\" : {\n      \"amount\" : {\n        \"amount\" : \"45.23\",\n        \"currencyCode\" : \"USD\"\n      },\n      \"paymentDate\" : \"2019-04-10\",\n      \"recurring\" : false,\n      \"automaticPayment\" : false\n    },\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-04-01T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-04-02\",\n      \"nextPaymentDate\" : \"2019-04-03\",\n      \"paymentServiceType\" : \"OVERNIGHT_CHECK\",\n      \"deliveryDays\" : 3,\n      \"fee\" : {\n        \"amount\" : \"9.99\",\n        \"currencyCode\" : \"USD\"\n      }\n    }, {\n      \"cutoffTime\" : \"2019-04-08T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-04-08\",\n      \"nextPaymentDate\" : \"2019-04-08\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\"\n    } ],\n    \"ebill\" : {\n      \"capable\" : true,\n      \"enabled\" : false\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const BillPayPayeesSummaryServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees-summary\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"payeeSummaries\" : [ {\n    \"id\" : \"0001\",\n    \"name\" : \"Citibank\",\n    \"nickName\" : \"My Bank\",\n    \"accountNumber\" : \"246895317\",\n    \"electronic\" : true,\n    \"hasRecurringPayments\" : false,\n    \"nextPayment\" : {\n      \"amount\" : {\n        \"amount\" : \"100.99\",\n        \"currencyCode\" : \"USD\"\n      },\n      \"paymentDate\" : \"2019-02-22\",\n      \"recurring\" : false,\n      \"automaticPayment\" : true,\n      \"fee\" : {\n        \"amount\" : \"9.99\",\n        \"currencyCode\" : \"USD\"\n      }\n    },\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-02-21T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-02-22\",\n      \"nextPaymentDate\" : \"2019-02-25\",\n      \"paymentServiceType\" : \"EXPEDITED_PAYMENT\",\n      \"deliveryDays\" : 3,\n      \"fee\" : {\n        \"amount\" : \"9.99\",\n        \"currencyCode\" : \"USD\"\n      }\n    }, {\n      \"cutoffTime\" : \"2019-02-25T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-02-26\",\n      \"nextPaymentDate\" : \"2019-02-27\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\"\n    } ],\n    \"ebill\" : {\n      \"capable\" : true,\n      \"enabled\" : true,\n      \"status\" : \"ACTIVE\",\n      \"latestBill\" : {\n        \"id\" : \"20141219140239655590\",\n        \"amount\" : {\n          \"amount\" : \"100.99\",\n          \"currencyCode\" : \"USD\"\n        },\n        \"minAmountDue\" : {\n          \"amount\" : \"20.50\",\n          \"currencyCode\" : \"USD\"\n        },\n        \"outstandingBalance\" : {\n          \"amount\" : \"201.98\",\n          \"currencyCode\" : \"USD\"\n        },\n        \"paymentDate\" : \"2019-03-01\",\n        \"status\" : \"PAID\",\n        \"url\" : \"http://my.ebill.pdf\",\n        \"statementAvailable\" : false,\n        \"paymentId\" : \"abc0192802\"\n      },\n      \"autopay\" : {\n        \"paymentAccount\" : {\n          \"accountNumber\" : \"11111111\",\n          \"routingNumber\" : \"000000022\",\n          \"accountType\" : \"SAVINGS_ACCOUNT\",\n          \"accountNickName\" : \"Current Account\"\n        },\n        \"daysBeforePayOn\" : 3,\n        \"maxPaymentAmount\" : {\n          \"amount\" : \"123\",\n          \"currencyCode\" : \"USD\"\n        },\n        \"payOn\" : \"BILL_ARRIVAL\",\n        \"payAmount\" : \"FULL_AMOUNT\",\n        \"paymentScheduledAlert\" : false,\n        \"paymentSentAlert\" : true,\n        \"paymentCompleteAlert\" : true\n      }\n    },\n    \"overnightDeliveryAddress\" : {\n      \"state\" : \"FL\",\n      \"city\" : \"Saint Petersburg\",\n      \"address1\" : \"560 Carillon Parkway\",\n      \"postalCode\" : \"33717\"\n    }\n  }, {\n    \"id\" : \"0002\",\n    \"name\" : \"Electric Company\",\n    \"accountNumber\" : \"78641258\",\n    \"electronic\" : true,\n    \"hasRecurringPayments\" : true,\n    \"nextPayment\" : {\n      \"amount\" : {\n        \"amount\" : \"101.99\",\n        \"currencyCode\" : \"USD\"\n      },\n      \"paymentDate\" : \"2019-02-28\",\n      \"recurring\" : true,\n      \"automaticPayment\" : false\n    },\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-02-25T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-02-26\",\n      \"nextPaymentDate\" : \"2019-02-27\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\"\n    } ],\n    \"ebill\" : {\n      \"capable\" : true,\n      \"enabled\" : true,\n      \"status\" : \"UPDATE_CREDENTIALS\"\n    }\n  }, {\n    \"id\" : \"0003\",\n    \"name\" : \"John Doe\",\n    \"electronic\" : false,\n    \"hasRecurringPayments\" : false,\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-03-04T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-03-05\",\n      \"nextPaymentDate\" : \"2019-03-06\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\"\n    } ]\n  }, {\n    \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n    \"name\" : \"Gas Company\",\n    \"electronic\" : true,\n    \"hasRecurringPayments\" : false,\n    \"nextPayment\" : {\n      \"amount\" : {\n        \"amount\" : \"20.99\",\n        \"currencyCode\" : \"USD\"\n      },\n      \"paymentDate\" : \"2019-03-20\",\n      \"recurring\" : false,\n      \"automaticPayment\" : false\n    },\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-03-21T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-03-22\",\n      \"nextPaymentDate\" : \"2019-03-25\",\n      \"paymentServiceType\" : \"EXPEDITED_PAYMENT\",\n      \"deliveryDays\" : 3,\n      \"fee\" : {\n        \"amount\" : \"0\",\n        \"currencyCode\" : \"USD\"\n      }\n    }, {\n      \"cutoffTime\" : \"2019-03-27T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-03-28\",\n      \"nextPaymentDate\" : \"2019-03-29\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\"\n    } ],\n    \"ebill\" : {\n      \"capable\" : true,\n      \"enabled\" : true,\n      \"status\" : \"ACTIVE\"\n    }\n  }, {\n    \"id\" : \"31315694\",\n    \"name\" : \"Somewhat Wireless\",\n    \"nickName\" : \"Internet\",\n    \"accountNumber\" : \"152236988\",\n    \"electronic\" : true,\n    \"hasRecurringPayments\" : true,\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-10-08T06:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-10-08\",\n      \"nextPaymentDate\" : \"2019-10-09\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\",\n      \"deliveryDays\" : 1\n    } ],\n    \"ebill\" : {\n      \"capable\" : true,\n      \"enabled\" : true,\n      \"status\" : \"USER_ACTION\"\n    }\n  }, {\n    \"id\" : \"31315661\",\n    \"name\" : \"Outer Rim Supply Co.\",\n    \"accountNumber\" : \"152236978\",\n    \"electronic\" : true,\n    \"hasRecurringPayments\" : false,\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-10-08T06:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-10-08\",\n      \"nextPaymentDate\" : \"2019-10-09\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\",\n      \"deliveryDays\" : 1\n    } ],\n    \"ebill\" : {\n      \"capable\" : true,\n      \"enabled\" : true,\n      \"status\" : \"ERROR\"\n    }\n  }, {\n    \"id\" : \"0004\",\n    \"name\" : \"Water Company\",\n    \"electronic\" : true,\n    \"hasRecurringPayments\" : false,\n    \"nextPayment\" : {\n      \"amount\" : {\n        \"amount\" : \"2001.89\",\n        \"currencyCode\" : \"USD\"\n      },\n      \"paymentDate\" : \"2019-03-14\",\n      \"recurring\" : false,\n      \"automaticPayment\" : false\n    },\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-03-11T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-03-12\",\n      \"nextPaymentDate\" : \"2019-03-13\",\n      \"paymentServiceType\" : \"OVERNIGHT_CHECK\",\n      \"deliveryDays\" : 3,\n      \"fee\" : {\n        \"amount\" : \"9.99\",\n        \"currencyCode\" : \"USD\"\n      }\n    }, {\n      \"cutoffTime\" : \"2019-03-18T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-03-19\",\n      \"nextPaymentDate\" : \"2019-03-20\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\"\n    } ],\n    \"overnightDeliveryAddress\" : {\n      \"state\" : \"FL\",\n      \"city\" : \"Saint Petersburg\",\n      \"address1\" : \"560 Carillon Parkway\",\n      \"postalCode\" : \"33717\"\n    },\n    \"ebill\" : {\n      \"capable\" : true,\n      \"enabled\" : true,\n      \"status\" : \"NOT_SUPPORTED\"\n    }\n  }, {\n    \"id\" : \"0005\",\n    \"name\" : \"Phone Company\",\n    \"electronic\" : true,\n    \"hasRecurringPayments\" : true,\n    \"nextPayment\" : {\n      \"amount\" : {\n        \"amount\" : \"45.23\",\n        \"currencyCode\" : \"USD\"\n      },\n      \"paymentDate\" : \"2019-04-10\",\n      \"recurring\" : false,\n      \"automaticPayment\" : false\n    },\n    \"paymentServices\" : [ {\n      \"cutoffTime\" : \"2019-04-01T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-04-02\",\n      \"nextPaymentDate\" : \"2019-04-03\",\n      \"paymentServiceType\" : \"OVERNIGHT_CHECK\",\n      \"deliveryDays\" : 3,\n      \"fee\" : {\n        \"amount\" : \"9.99\",\n        \"currencyCode\" : \"USD\"\n      }\n    }, {\n      \"cutoffTime\" : \"2019-04-08T15:00:00.000-04:00\",\n      \"earliestPaymentDate\" : \"2019-04-08\",\n      \"nextPaymentDate\" : \"2019-04-08\",\n      \"paymentServiceType\" : \"REGULAR_PAYMENT\"\n    } ],\n    \"ebill\" : {\n      \"capable\" : true,\n      \"enabled\" : false\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Bill Pay Integrator client\n * Display and update bill pay information for end-users via web and mobile clients. Manage enrollment, eBills, payments, autopay, and payees.\n *\n * The version of the OpenAPI document: 2.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadGatewayError } from '../model/models';\nimport { BadRequestError } from '../model/models';\nimport { BillPayPaymentsGetResponseBody } from '../model/models';\nimport { BillPayPaymentsPostRequestBody } from '../model/models';\nimport { BillPayPaymentsPostResponseBody } from '../model/models';\nimport { BillPayRecurringPaymentsPostRequestBody } from '../model/models';\nimport { BillPayRecurringPaymentsPostResponseBody } from '../model/models';\nimport { GatewayTimeoutError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { NotImplementedError } from '../model/models';\nimport { PaymentByIdGetResponseBody } from '../model/models';\nimport { PaymentByIdPutRequestBody } from '../model/models';\nimport { PaymentByIdPutResponseBody } from '../model/models';\nimport { PaymentsPostError } from '../model/models';\nimport { RecurringPaymentByIdGetResponseBody } from '../model/models';\nimport { RecurringPaymentByIdPutRequestBody } from '../model/models';\nimport { RecurringPaymentByIdPutResponseBody } from '../model/models';\n\nimport { BILLPAY_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { BillpayConfiguration }                                     from '../configuration';\n\n\nexport interface DeletePaymentByIdRequestParams {\n    /** The id of the payment */\n    [\"id\"]: string;\n}\n\nexport interface DeleteRecurringPaymentByIdRequestParams {\n    /** The id of the recurring payment */\n    [\"id\"]: string;\n}\n\nexport interface GetBillPayPaymentsRequestParams {\n    /** Restrict results by the payment status (supported status filters include PENDING, HISTORICAL or ALL). */\n    [\"status\"]: string;\n    /** Restrict results to payments with a date of, or after, 00:00 on this date, UTC. */\n    [\"startDate\"]?: string;\n    /** Restrict results to payments with a date of, or before, 23:59 on this date, UTC. */\n    [\"endDate\"]?: string;\n    /** Restrict results to payments for the specified payee ID. */\n    [\"payeeID\"]?: string;\n    /** Restrict results by the payment type (supported type filters include ONE_OFF, RECURRING or ALL). */\n    [\"paymentType\"]?: string;\n    /** Page Number. Skip over pages of elements by specifying a start value for the query */\n    [\"from\"]?: number;\n    /** Limit the number of elements on the response. */\n    [\"size\"]?: number;\n    /** Order by field: \\&quot;amount\\&quot;, \\&quot;paymentDate\\&quot;  */\n    [\"orderBy\"]?: string;\n    /** Direction */\n    [\"direction\"]?: 'ASC' | 'DESC';\n}\n\nexport interface GetPaymentByIdRequestParams {\n    /** The id of the payment */\n    [\"id\"]: string;\n}\n\nexport interface GetRecurringPaymentByIdRequestParams {\n    /** The id of the recurring payment */\n    [\"id\"]: string;\n}\n\nexport interface PostBillPayPaymentsRequestParams {\n    /** Create new Bill Pay payments. */\n    [\"billPayPaymentsPostRequestBody\"]: BillPayPaymentsPostRequestBody;\n}\n\nexport interface PostBillPayRecurringPaymentsRequestParams {\n    /** Create a new recurring payment. */\n    [\"billPayRecurringPaymentsPostRequestBody\"]: BillPayRecurringPaymentsPostRequestBody;\n}\n\nexport interface PutPaymentByIdRequestParams {\n    /** The id of the payment */\n    [\"id\"]: string;\n    /** Modify a payment. */\n    [\"paymentByIdPutRequestBody\"]: PaymentByIdPutRequestBody;\n}\n\nexport interface PutRecurringPaymentByIdRequestParams {\n    /** The id of the recurring payment */\n    [\"id\"]: string;\n    /** Modify a recurring payment. */\n    [\"recurringPaymentByIdPutRequestBody\"]: RecurringPaymentByIdPutRequestBody;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BillPayPaymentsService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new BillpayConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BILLPAY_BASE_PATH) basePath: string, @Optional() configuration: BillpayConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Delete a payment.\n     * Delete a payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePaymentById(requestParameters: DeletePaymentByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Delete a payment.\n     * Delete a payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePaymentById(requestParameters: DeletePaymentByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Delete a payment.\n     * Delete a payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePaymentById(requestParameters: DeletePaymentByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Delete a payment.\n     * Delete a payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePaymentById(requestParameters: DeletePaymentByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deletePaymentById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deletePaymentByIdUrl(requestParameters: DeletePaymentByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deletePaymentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Delete a recurring payment.\n     * Delete a recurring payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteRecurringPaymentById(requestParameters: DeleteRecurringPaymentByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Delete a recurring payment.\n     * Delete a recurring payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteRecurringPaymentById(requestParameters: DeleteRecurringPaymentByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Delete a recurring payment.\n     * Delete a recurring payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteRecurringPaymentById(requestParameters: DeleteRecurringPaymentByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Delete a recurring payment.\n     * Delete a recurring payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteRecurringPaymentById(requestParameters: DeleteRecurringPaymentByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteRecurringPaymentById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteRecurringPaymentByIdUrl(requestParameters: DeleteRecurringPaymentByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteRecurringPaymentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Get payments for the Bill Pay user ordering by payment date descending by default, supports filtering, ordering and pagination.\n     * Get payments for the Bill Pay user ordering by payment date descending by default, supports filtering, ordering and pagination.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayPayments(requestParameters: GetBillPayPaymentsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<BillPayPaymentsGetResponseBody>;\n    /**\n     * Get payments for the Bill Pay user ordering by payment date descending by default, supports filtering, ordering and pagination.\n     * Get payments for the Bill Pay user ordering by payment date descending by default, supports filtering, ordering and pagination.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayPayments(requestParameters: GetBillPayPaymentsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<BillPayPaymentsGetResponseBody>>;\n    /**\n     * Get payments for the Bill Pay user ordering by payment date descending by default, supports filtering, ordering and pagination.\n     * Get payments for the Bill Pay user ordering by payment date descending by default, supports filtering, ordering and pagination.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayPayments(requestParameters: GetBillPayPaymentsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<BillPayPaymentsGetResponseBody>>;\n    /**\n     * Get payments for the Bill Pay user ordering by payment date descending by default, supports filtering, ordering and pagination.\n     * Get payments for the Bill Pay user ordering by payment date descending by default, supports filtering, ordering and pagination.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPayPayments(requestParameters: GetBillPayPaymentsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _status = requestParameters[\"status\"];\n        if (_status === null || _status === undefined) {\n            throw new Error('Required parameter status was null or undefined when calling getBillPayPayments.');\n        }\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _payeeID = requestParameters[\"payeeID\"];\n        const _paymentType = requestParameters[\"paymentType\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_status !== undefined && _status !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_status, 'status');\n        }\n        if (_startDate !== undefined && _startDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_endDate, 'endDate');\n        }\n        if (_payeeID !== undefined && _payeeID !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_payeeID, 'payeeID');\n        }\n        if (_paymentType !== undefined && _paymentType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_paymentType, 'paymentType');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<BillPayPaymentsGetResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payments`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getBillPayPaymentsUrl(requestParameters: GetBillPayPaymentsRequestParams): string {\n        const _status = requestParameters[\"status\"];\n        if (_status === null || _status === undefined) {\n            throw new Error('Required parameter status was null or undefined when calling getBillPayPayments.');\n        }\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _payeeID = requestParameters[\"payeeID\"];\n        const _paymentType = requestParameters[\"paymentType\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_status !== undefined && _status !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_status, 'status');\n        }\n        if (_startDate !== undefined && _startDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_endDate, 'endDate');\n        }\n        if (_payeeID !== undefined && _payeeID !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_payeeID, 'payeeID');\n        }\n        if (_paymentType !== undefined && _paymentType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_paymentType, 'paymentType');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payments${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Get an existing payment.\n     * Get an existing payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentById(requestParameters: GetPaymentByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PaymentByIdGetResponseBody>;\n    /**\n     * Get an existing payment.\n     * Get an existing payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentById(requestParameters: GetPaymentByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PaymentByIdGetResponseBody>>;\n    /**\n     * Get an existing payment.\n     * Get an existing payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentById(requestParameters: GetPaymentByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PaymentByIdGetResponseBody>>;\n    /**\n     * Get an existing payment.\n     * Get an existing payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPaymentById(requestParameters: GetPaymentByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getPaymentById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PaymentByIdGetResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getPaymentByIdUrl(requestParameters: GetPaymentByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getPaymentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Get a recurring payment.\n     * Get a recurring payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRecurringPaymentById(requestParameters: GetRecurringPaymentByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<RecurringPaymentByIdGetResponseBody>;\n    /**\n     * Get a recurring payment.\n     * Get a recurring payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRecurringPaymentById(requestParameters: GetRecurringPaymentByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<RecurringPaymentByIdGetResponseBody>>;\n    /**\n     * Get a recurring payment.\n     * Get a recurring payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRecurringPaymentById(requestParameters: GetRecurringPaymentByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<RecurringPaymentByIdGetResponseBody>>;\n    /**\n     * Get a recurring payment.\n     * Get a recurring payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRecurringPaymentById(requestParameters: GetRecurringPaymentByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getRecurringPaymentById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<RecurringPaymentByIdGetResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getRecurringPaymentByIdUrl(requestParameters: GetRecurringPaymentByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getRecurringPaymentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Create new Bill Pay payments.\n     * Create new Bill Pay payments.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayPayments(requestParameters: PostBillPayPaymentsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<BillPayPaymentsPostResponseBody>;\n    /**\n     * Create new Bill Pay payments.\n     * Create new Bill Pay payments.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayPayments(requestParameters: PostBillPayPaymentsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<BillPayPaymentsPostResponseBody>>;\n    /**\n     * Create new Bill Pay payments.\n     * Create new Bill Pay payments.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayPayments(requestParameters: PostBillPayPaymentsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<BillPayPaymentsPostResponseBody>>;\n    /**\n     * Create new Bill Pay payments.\n     * Create new Bill Pay payments.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayPayments(requestParameters: PostBillPayPaymentsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _billPayPaymentsPostRequestBody = requestParameters[\"billPayPaymentsPostRequestBody\"];\n        if (_billPayPaymentsPostRequestBody === null || _billPayPaymentsPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayPaymentsPostRequestBody was null or undefined when calling postBillPayPayments.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<BillPayPaymentsPostResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payments`,\n            _billPayPaymentsPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postBillPayPaymentsUrl(requestParameters: PostBillPayPaymentsRequestParams): string {\n        const _billPayPaymentsPostRequestBody = requestParameters[\"billPayPaymentsPostRequestBody\"];\n        if (_billPayPaymentsPostRequestBody === null || _billPayPaymentsPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayPaymentsPostRequestBody was null or undefined when calling postBillPayPayments.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payments`;\n    }\n\n    /**\n     * Create a new recurring payment.\n     * Create a new recurring payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayRecurringPayments(requestParameters: PostBillPayRecurringPaymentsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<BillPayRecurringPaymentsPostResponseBody>;\n    /**\n     * Create a new recurring payment.\n     * Create a new recurring payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayRecurringPayments(requestParameters: PostBillPayRecurringPaymentsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<BillPayRecurringPaymentsPostResponseBody>>;\n    /**\n     * Create a new recurring payment.\n     * Create a new recurring payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayRecurringPayments(requestParameters: PostBillPayRecurringPaymentsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<BillPayRecurringPaymentsPostResponseBody>>;\n    /**\n     * Create a new recurring payment.\n     * Create a new recurring payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayRecurringPayments(requestParameters: PostBillPayRecurringPaymentsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _billPayRecurringPaymentsPostRequestBody = requestParameters[\"billPayRecurringPaymentsPostRequestBody\"];\n        if (_billPayRecurringPaymentsPostRequestBody === null || _billPayRecurringPaymentsPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayRecurringPaymentsPostRequestBody was null or undefined when calling postBillPayRecurringPayments.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<BillPayRecurringPaymentsPostResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring`,\n            _billPayRecurringPaymentsPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postBillPayRecurringPaymentsUrl(requestParameters: PostBillPayRecurringPaymentsRequestParams): string {\n        const _billPayRecurringPaymentsPostRequestBody = requestParameters[\"billPayRecurringPaymentsPostRequestBody\"];\n        if (_billPayRecurringPaymentsPostRequestBody === null || _billPayRecurringPaymentsPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayRecurringPaymentsPostRequestBody was null or undefined when calling postBillPayRecurringPayments.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring`;\n    }\n\n    /**\n     * Modify a payment.\n     * Modify a payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putPaymentById(requestParameters: PutPaymentByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PaymentByIdPutResponseBody>;\n    /**\n     * Modify a payment.\n     * Modify a payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putPaymentById(requestParameters: PutPaymentByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PaymentByIdPutResponseBody>>;\n    /**\n     * Modify a payment.\n     * Modify a payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putPaymentById(requestParameters: PutPaymentByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PaymentByIdPutResponseBody>>;\n    /**\n     * Modify a payment.\n     * Modify a payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putPaymentById(requestParameters: PutPaymentByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putPaymentById.');\n        }\n        const _paymentByIdPutRequestBody = requestParameters[\"paymentByIdPutRequestBody\"];\n        if (_paymentByIdPutRequestBody === null || _paymentByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter paymentByIdPutRequestBody was null or undefined when calling putPaymentById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<PaymentByIdPutResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/${encodeURIComponent(String(_id))}`,\n            _paymentByIdPutRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putPaymentByIdUrl(requestParameters: PutPaymentByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putPaymentById.');\n        }\n        const _paymentByIdPutRequestBody = requestParameters[\"paymentByIdPutRequestBody\"];\n        if (_paymentByIdPutRequestBody === null || _paymentByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter paymentByIdPutRequestBody was null or undefined when calling putPaymentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Modify a recurring payment.\n     * Modify a recurring payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putRecurringPaymentById(requestParameters: PutRecurringPaymentByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<RecurringPaymentByIdPutResponseBody>;\n    /**\n     * Modify a recurring payment.\n     * Modify a recurring payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putRecurringPaymentById(requestParameters: PutRecurringPaymentByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<RecurringPaymentByIdPutResponseBody>>;\n    /**\n     * Modify a recurring payment.\n     * Modify a recurring payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putRecurringPaymentById(requestParameters: PutRecurringPaymentByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<RecurringPaymentByIdPutResponseBody>>;\n    /**\n     * Modify a recurring payment.\n     * Modify a recurring payment.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putRecurringPaymentById(requestParameters: PutRecurringPaymentByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putRecurringPaymentById.');\n        }\n        const _recurringPaymentByIdPutRequestBody = requestParameters[\"recurringPaymentByIdPutRequestBody\"];\n        if (_recurringPaymentByIdPutRequestBody === null || _recurringPaymentByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter recurringPaymentByIdPutRequestBody was null or undefined when calling putRecurringPaymentById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<RecurringPaymentByIdPutResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring/${encodeURIComponent(String(_id))}`,\n            _recurringPaymentByIdPutRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putRecurringPaymentByIdUrl(requestParameters: PutRecurringPaymentByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putRecurringPaymentById.');\n        }\n        const _recurringPaymentByIdPutRequestBody = requestParameters[\"recurringPaymentByIdPutRequestBody\"];\n        if (_recurringPaymentByIdPutRequestBody === null || _recurringPaymentByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter recurringPaymentByIdPutRequestBody was null or undefined when calling putRecurringPaymentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring/${encodeURIComponent(String(_id))}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/bill-pay/payments/{id} URL pattern\n*/\nexport const BillPayPaymentsServiceDeletePaymentByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payments/{id}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payments/recurring/{id} URL pattern\n*/\nexport const BillPayPaymentsServiceDeleteRecurringPaymentByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payments/recurring/{id}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payments URL pattern\n*/\nexport const BillPayPaymentsServiceGetBillPayPaymentsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payments\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"payments\" : [ {\n    \"id\" : \"8a9483495f058d2f015f058d366b0045\",\n    \"payeeID\" : \"3\",\n    \"payeeName\" : \"Soccer Shots\",\n    \"payeeNickName\" : \"Kids Soccer\",\n    \"payeeElectronic\" : false,\n    \"amount\" : {\n      \"amount\" : \"10.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"paymentDate\" : \"2019-04-21\",\n    \"paymentAccount\" : {\n      \"accountNumber\" : \"11111111\",\n      \"routingNumber\" : \"000000022\",\n      \"accountType\" : \"SAVINGS_ACCOUNT\",\n      \"accountNickName\" : \"Current Account\"\n    },\n    \"recurring\" : false,\n    \"automaticPayment\" : false,\n    \"status\" : \"PENDING\",\n    \"fee\" : {\n      \"amount\" : \"9.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"ebillID\" : \"20141219140239655590\"\n  }, {\n    \"id\" : \"8a9483495f058d2f015f058d366a003c\",\n    \"payeeID\" : \"4\",\n    \"payeeName\" : \"Gas Bill\",\n    \"payeeAccountNumber\" : \"100000001\",\n    \"payeeElectronic\" : true,\n    \"amount\" : {\n      \"amount\" : \"100.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"paymentDate\" : \"2019-02-22\",\n    \"paymentAccount\" : {\n      \"id\" : \"1\",\n      \"accountNumber\" : \"22222222\",\n      \"routingNumber\" : \"000000033\",\n      \"accountType\" : \"CHECKING_ACCOUNT\"\n    },\n    \"recurring\" : true,\n    \"automaticPayment\" : false,\n    \"frequency\" : \"MONTHLY\",\n    \"numberOfInstances\" : 2,\n    \"paymentScheduledAlert\" : true,\n    \"paymentSentAlert\" : true,\n    \"modelExpirationAlert\" : true,\n    \"status\" : \"FAILED\"\n  }, {\n    \"id\" : \"8a9483a96dd476f1016dd476f7e8001c\",\n    \"payeeID\" : \"2\",\n    \"payeeName\" : \"The Republic\",\n    \"payeeAccountNumber\" : \"12345O\",\n    \"payeeElectronic\" : true,\n    \"amount\" : {\n      \"amount\" : \"200.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"paymentDate\" : \"2018-11-23\",\n    \"paymentMemo\" : \"Order #66\",\n    \"paymentAccount\" : {\n      \"accountNumber\" : \"100001001\",\n      \"accountNickName\" : \"Joint Account\",\n      \"accountType\" : \"CHECKING_ACCOUNT\",\n      \"routingNumber\" : \"110001001\"\n    },\n    \"recurring\" : false,\n    \"automaticPayment\" : true,\n    \"paymentScheduledAlert\" : true,\n    \"paymentSentAlert\" : true,\n    \"modelExpirationAlert\" : true,\n    \"status\" : \"PROCESSED\"\n  } ],\n  \"totalCount\" : 3\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payments/{id} URL pattern\n*/\nexport const BillPayPaymentsServiceGetPaymentByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payments/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"payment\" : {\n    \"id\" : \"8a9483495f058d2f015f058d366a003c\",\n    \"payeeID\" : \"0002\",\n    \"payeeName\" : \"Citibank\",\n    \"payeeAccountNumber\" : \"100000001\",\n    \"payeeElectronic\" : false,\n    \"amount\" : {\n      \"amount\" : \"100.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"paymentDate\" : \"2019-02-22\",\n    \"paymentAccount\" : {\n      \"id\" : \"1\",\n      \"accountNumber\" : \"000000001\",\n      \"routingNumber\" : \"000000011\",\n      \"accountType\" : \"CHECKING_ACCOUNT\"\n    },\n    \"recurring\" : false,\n    \"automaticPayment\" : false,\n    \"status\" : \"PENDING\",\n    \"fee\" : {\n      \"amount\" : \"9.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"ebillID\" : \"20141219140239655590\"\n  }\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payments/recurring/{id} URL pattern\n*/\nexport const BillPayPaymentsServiceGetRecurringPaymentByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payments/recurring/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"payment\" : {\n    \"id\" : \"8a9483495f058d2f015f058d366a003c\",\n    \"payeeID\" : \"0005\",\n    \"payeeName\" : \"Citibank\",\n    \"payeeAccountNumber\" : \"100000001\",\n    \"payeeElectronic\" : true,\n    \"amount\" : {\n      \"amount\" : \"100.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"paymentDate\" : \"2019-02-22\",\n    \"paymentAccount\" : {\n      \"id\" : \"1\",\n      \"accountNumber\" : \"000000001\",\n      \"routingNumber\" : \"000000011\",\n      \"accountType\" : \"CHECKING_ACCOUNT\"\n    },\n    \"paymentMemo\" : \"Here is some money\",\n    \"recurring\" : true,\n    \"frequency\" : \"MONTHLY\",\n    \"numberOfInstances\" : 2,\n    \"paymentScheduledAlert\" : true,\n    \"paymentSentAlert\" : true,\n    \"modelExpirationAlert\" : true,\n    \"status\" : \"PENDING\"\n  }\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payments URL pattern\n*/\nexport const BillPayPaymentsServicePostBillPayPaymentsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payments\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"payments\" : [ {\n    \"payeeID\" : \"payee1\",\n    \"paymentID\" : \"payment1\",\n    \"errors\" : [ ]\n  }, {\n    \"payeeID\" : \"payee2\",\n    \"paymentID\" : \"payment2\",\n    \"errors\" : [ ]\n  }, {\n    \"payeeID\" : \"payee3\",\n    \"errors\" : [ {\n      \"message\" : \"Invalid next payment date\",\n      \"key\" : \"billpay.api.invalidNextPaymentDate\"\n    }, {\n      \"message\" : \"Payment already exists\",\n      \"key\" : \"billpay.api.paymentAlreadyExists\"\n    } ]\n  }, {\n    \"payeeID\" : \"payee4\",\n    \"paymentID\" : \"payment4\",\n    \"errors\" : [ ]\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ ],\n  \"payments\" : [ {\n    \"payeeID\" : \"1\",\n    \"errors\" : [ {\n      \"message\" : \"The payee is invalid\",\n      \"key\" : \"billpay.api.invalidPayee\"\n    } ]\n  }, {\n    \"payeeID\" : \"2\",\n    \"errors\" : [ {\n      \"message\" : \"The payee is invalid\",\n      \"key\" : \"billpay.api.invalidPayee\"\n    } ]\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payments/recurring URL pattern\n*/\nexport const BillPayPaymentsServicePostBillPayRecurringPaymentsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payments/recurring\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payments/{id} URL pattern\n*/\nexport const BillPayPaymentsServicePutPaymentByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payments/{id}\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payments/recurring/{id} URL pattern\n*/\nexport const BillPayPaymentsServicePutRecurringPaymentByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payments/recurring/{id}\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const BillPayPaymentsServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payments/{id}\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payments/recurring/{id}\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payments\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"payments\" : [ {\n    \"id\" : \"8a9483495f058d2f015f058d366b0045\",\n    \"payeeID\" : \"3\",\n    \"payeeName\" : \"Soccer Shots\",\n    \"payeeNickName\" : \"Kids Soccer\",\n    \"payeeElectronic\" : false,\n    \"amount\" : {\n      \"amount\" : \"10.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"paymentDate\" : \"2019-04-21\",\n    \"paymentAccount\" : {\n      \"accountNumber\" : \"11111111\",\n      \"routingNumber\" : \"000000022\",\n      \"accountType\" : \"SAVINGS_ACCOUNT\",\n      \"accountNickName\" : \"Current Account\"\n    },\n    \"recurring\" : false,\n    \"automaticPayment\" : false,\n    \"status\" : \"PENDING\",\n    \"fee\" : {\n      \"amount\" : \"9.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"ebillID\" : \"20141219140239655590\"\n  }, {\n    \"id\" : \"8a9483495f058d2f015f058d366a003c\",\n    \"payeeID\" : \"4\",\n    \"payeeName\" : \"Gas Bill\",\n    \"payeeAccountNumber\" : \"100000001\",\n    \"payeeElectronic\" : true,\n    \"amount\" : {\n      \"amount\" : \"100.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"paymentDate\" : \"2019-02-22\",\n    \"paymentAccount\" : {\n      \"id\" : \"1\",\n      \"accountNumber\" : \"22222222\",\n      \"routingNumber\" : \"000000033\",\n      \"accountType\" : \"CHECKING_ACCOUNT\"\n    },\n    \"recurring\" : true,\n    \"automaticPayment\" : false,\n    \"frequency\" : \"MONTHLY\",\n    \"numberOfInstances\" : 2,\n    \"paymentScheduledAlert\" : true,\n    \"paymentSentAlert\" : true,\n    \"modelExpirationAlert\" : true,\n    \"status\" : \"FAILED\"\n  }, {\n    \"id\" : \"8a9483a96dd476f1016dd476f7e8001c\",\n    \"payeeID\" : \"2\",\n    \"payeeName\" : \"The Republic\",\n    \"payeeAccountNumber\" : \"12345O\",\n    \"payeeElectronic\" : true,\n    \"amount\" : {\n      \"amount\" : \"200.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"paymentDate\" : \"2018-11-23\",\n    \"paymentMemo\" : \"Order #66\",\n    \"paymentAccount\" : {\n      \"accountNumber\" : \"100001001\",\n      \"accountNickName\" : \"Joint Account\",\n      \"accountType\" : \"CHECKING_ACCOUNT\",\n      \"routingNumber\" : \"110001001\"\n    },\n    \"recurring\" : false,\n    \"automaticPayment\" : true,\n    \"paymentScheduledAlert\" : true,\n    \"paymentSentAlert\" : true,\n    \"modelExpirationAlert\" : true,\n    \"status\" : \"PROCESSED\"\n  } ],\n  \"totalCount\" : 3\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payments/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"payment\" : {\n    \"id\" : \"8a9483495f058d2f015f058d366a003c\",\n    \"payeeID\" : \"0002\",\n    \"payeeName\" : \"Citibank\",\n    \"payeeAccountNumber\" : \"100000001\",\n    \"payeeElectronic\" : false,\n    \"amount\" : {\n      \"amount\" : \"100.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"paymentDate\" : \"2019-02-22\",\n    \"paymentAccount\" : {\n      \"id\" : \"1\",\n      \"accountNumber\" : \"000000001\",\n      \"routingNumber\" : \"000000011\",\n      \"accountType\" : \"CHECKING_ACCOUNT\"\n    },\n    \"recurring\" : false,\n    \"automaticPayment\" : false,\n    \"status\" : \"PENDING\",\n    \"fee\" : {\n      \"amount\" : \"9.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"ebillID\" : \"20141219140239655590\"\n  }\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payments/recurring/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"payment\" : {\n    \"id\" : \"8a9483495f058d2f015f058d366a003c\",\n    \"payeeID\" : \"0005\",\n    \"payeeName\" : \"Citibank\",\n    \"payeeAccountNumber\" : \"100000001\",\n    \"payeeElectronic\" : true,\n    \"amount\" : {\n      \"amount\" : \"100.99\",\n      \"currencyCode\" : \"USD\"\n    },\n    \"paymentDate\" : \"2019-02-22\",\n    \"paymentAccount\" : {\n      \"id\" : \"1\",\n      \"accountNumber\" : \"000000001\",\n      \"routingNumber\" : \"000000011\",\n      \"accountType\" : \"CHECKING_ACCOUNT\"\n    },\n    \"paymentMemo\" : \"Here is some money\",\n    \"recurring\" : true,\n    \"frequency\" : \"MONTHLY\",\n    \"numberOfInstances\" : 2,\n    \"paymentScheduledAlert\" : true,\n    \"paymentSentAlert\" : true,\n    \"modelExpirationAlert\" : true,\n    \"status\" : \"PENDING\"\n  }\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payments\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"payments\" : [ {\n    \"payeeID\" : \"payee1\",\n    \"paymentID\" : \"payment1\",\n    \"errors\" : [ ]\n  }, {\n    \"payeeID\" : \"payee2\",\n    \"paymentID\" : \"payment2\",\n    \"errors\" : [ ]\n  }, {\n    \"payeeID\" : \"payee3\",\n    \"errors\" : [ {\n      \"message\" : \"Invalid next payment date\",\n      \"key\" : \"billpay.api.invalidNextPaymentDate\"\n    }, {\n      \"message\" : \"Payment already exists\",\n      \"key\" : \"billpay.api.paymentAlreadyExists\"\n    } ]\n  }, {\n    \"payeeID\" : \"payee4\",\n    \"paymentID\" : \"payment4\",\n    \"errors\" : [ ]\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ ],\n  \"payments\" : [ {\n    \"payeeID\" : \"1\",\n    \"errors\" : [ {\n      \"message\" : \"The payee is invalid\",\n      \"key\" : \"billpay.api.invalidPayee\"\n    } ]\n  }, {\n    \"payeeID\" : \"2\",\n    \"errors\" : [ {\n      \"message\" : \"The payee is invalid\",\n      \"key\" : \"billpay.api.invalidPayee\"\n    } ]\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payments/recurring\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payments/{id}\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payments/recurring/{id}\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Bill Pay Integrator client\n * Display and update bill pay information for end-users via web and mobile clients. Manage enrollment, eBills, payments, autopay, and payees.\n *\n * The version of the OpenAPI document: 2.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadGatewayError } from '../model/models';\nimport { BadRequestError } from '../model/models';\nimport { BillPayPayverisEbillsEnrolmentPostRequestBody } from '../model/models';\nimport { BillPayPayverisEbillsEnrolmentPostResponseBody } from '../model/models';\nimport { BillPayPayverisResolveEbillErrorsPostRequestBody } from '../model/models';\nimport { BillPayPayverisResolveEbillErrorsPostResponseBody } from '../model/models';\nimport { GatewayTimeoutError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { NotImplementedError } from '../model/models';\n\nimport { BILLPAY_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { BillpayConfiguration }                                     from '../configuration';\n\n\nexport interface DeleteBillPayPayverisEbillsEnrolmentRequestParams {\n    /** The id of the payee */\n    [\"payeeID\"]: string;\n}\n\nexport interface PostBillPayPayverisEbillsEnrolmentRequestParams {\n    /** Enrol in eBills. */\n    [\"billPayPayverisEbillsEnrolmentPostRequestBody\"]: BillPayPayverisEbillsEnrolmentPostRequestBody;\n}\n\nexport interface PostBillPayPayverisResolveEbillErrorsRequestParams {\n    [\"billPayPayverisResolveEbillErrorsPostRequestBody\"]: BillPayPayverisResolveEbillErrorsPostRequestBody;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BillPayPayverisService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new BillpayConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BILLPAY_BASE_PATH) basePath: string, @Optional() configuration: BillpayConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Delete a user\\&#39;s session for enrolling in eBills.\n     * Delete a user\\&#39;s session for enrolling in eBills\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteBillPayPayverisEbillsEnrolment(requestParameters: DeleteBillPayPayverisEbillsEnrolmentRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Delete a user\\&#39;s session for enrolling in eBills.\n     * Delete a user\\&#39;s session for enrolling in eBills\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteBillPayPayverisEbillsEnrolment(requestParameters: DeleteBillPayPayverisEbillsEnrolmentRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Delete a user\\&#39;s session for enrolling in eBills.\n     * Delete a user\\&#39;s session for enrolling in eBills\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteBillPayPayverisEbillsEnrolment(requestParameters: DeleteBillPayPayverisEbillsEnrolmentRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Delete a user\\&#39;s session for enrolling in eBills.\n     * Delete a user\\&#39;s session for enrolling in eBills\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteBillPayPayverisEbillsEnrolment(requestParameters: DeleteBillPayPayverisEbillsEnrolmentRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _payeeID = requestParameters[\"payeeID\"];\n        if (_payeeID === null || _payeeID === undefined) {\n            throw new Error('Required parameter payeeID was null or undefined when calling deleteBillPayPayverisEbillsEnrolment.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_payeeID !== undefined && _payeeID !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_payeeID, 'payeeID');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/bill-pay/payveris/ebills/enrolment`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteBillPayPayverisEbillsEnrolmentUrl(requestParameters: DeleteBillPayPayverisEbillsEnrolmentRequestParams): string {\n        const _payeeID = requestParameters[\"payeeID\"];\n        if (_payeeID === null || _payeeID === undefined) {\n            throw new Error('Required parameter payeeID was null or undefined when calling deleteBillPayPayverisEbillsEnrolment.');\n        }\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_payeeID !== undefined && _payeeID !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_payeeID, 'payeeID');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payveris/ebills/enrolment${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Enrol in eBills.\n     * Enrol in eBills.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayPayverisEbillsEnrolment(requestParameters: PostBillPayPayverisEbillsEnrolmentRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<BillPayPayverisEbillsEnrolmentPostResponseBody>;\n    /**\n     * Enrol in eBills.\n     * Enrol in eBills.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayPayverisEbillsEnrolment(requestParameters: PostBillPayPayverisEbillsEnrolmentRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<BillPayPayverisEbillsEnrolmentPostResponseBody>>;\n    /**\n     * Enrol in eBills.\n     * Enrol in eBills.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayPayverisEbillsEnrolment(requestParameters: PostBillPayPayverisEbillsEnrolmentRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<BillPayPayverisEbillsEnrolmentPostResponseBody>>;\n    /**\n     * Enrol in eBills.\n     * Enrol in eBills.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayPayverisEbillsEnrolment(requestParameters: PostBillPayPayverisEbillsEnrolmentRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _billPayPayverisEbillsEnrolmentPostRequestBody = requestParameters[\"billPayPayverisEbillsEnrolmentPostRequestBody\"];\n        if (_billPayPayverisEbillsEnrolmentPostRequestBody === null || _billPayPayverisEbillsEnrolmentPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayPayverisEbillsEnrolmentPostRequestBody was null or undefined when calling postBillPayPayverisEbillsEnrolment.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<BillPayPayverisEbillsEnrolmentPostResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payveris/ebills/enrolment`,\n            _billPayPayverisEbillsEnrolmentPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postBillPayPayverisEbillsEnrolmentUrl(requestParameters: PostBillPayPayverisEbillsEnrolmentRequestParams): string {\n        const _billPayPayverisEbillsEnrolmentPostRequestBody = requestParameters[\"billPayPayverisEbillsEnrolmentPostRequestBody\"];\n        if (_billPayPayverisEbillsEnrolmentPostRequestBody === null || _billPayPayverisEbillsEnrolmentPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayPayverisEbillsEnrolmentPostRequestBody was null or undefined when calling postBillPayPayverisEbillsEnrolment.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payveris/ebills/enrolment`;\n    }\n\n    /**\n     * Bill Pay Payveris Resolve Ebill Errors\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayPayverisResolveEbillErrors(requestParameters: PostBillPayPayverisResolveEbillErrorsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<BillPayPayverisResolveEbillErrorsPostResponseBody>;\n    /**\n     * Bill Pay Payveris Resolve Ebill Errors\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayPayverisResolveEbillErrors(requestParameters: PostBillPayPayverisResolveEbillErrorsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<BillPayPayverisResolveEbillErrorsPostResponseBody>>;\n    /**\n     * Bill Pay Payveris Resolve Ebill Errors\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayPayverisResolveEbillErrors(requestParameters: PostBillPayPayverisResolveEbillErrorsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<BillPayPayverisResolveEbillErrorsPostResponseBody>>;\n    /**\n     * Bill Pay Payveris Resolve Ebill Errors\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postBillPayPayverisResolveEbillErrors(requestParameters: PostBillPayPayverisResolveEbillErrorsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _billPayPayverisResolveEbillErrorsPostRequestBody = requestParameters[\"billPayPayverisResolveEbillErrorsPostRequestBody\"];\n        if (_billPayPayverisResolveEbillErrorsPostRequestBody === null || _billPayPayverisResolveEbillErrorsPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayPayverisResolveEbillErrorsPostRequestBody was null or undefined when calling postBillPayPayverisResolveEbillErrors.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<BillPayPayverisResolveEbillErrorsPostResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payveris/ebills/resolve-errors`,\n            _billPayPayverisResolveEbillErrorsPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postBillPayPayverisResolveEbillErrorsUrl(requestParameters: PostBillPayPayverisResolveEbillErrorsRequestParams): string {\n        const _billPayPayverisResolveEbillErrorsPostRequestBody = requestParameters[\"billPayPayverisResolveEbillErrorsPostRequestBody\"];\n        if (_billPayPayverisResolveEbillErrorsPostRequestBody === null || _billPayPayverisResolveEbillErrorsPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayPayverisResolveEbillErrorsPostRequestBody was null or undefined when calling postBillPayPayverisResolveEbillErrors.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payveris/ebills/resolve-errors`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/bill-pay/payveris/ebills/enrolment URL pattern\n*/\nexport const BillPayPayverisServiceDeleteBillPayPayverisEbillsEnrolmentMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payveris/ebills/enrolment\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payveris/ebills/enrolment URL pattern\n*/\nexport const BillPayPayverisServicePostBillPayPayverisEbillsEnrolmentMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payveris/ebills/enrolment\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"payeeID\" : \"9993\",\n  \"billers\" : [ ],\n  \"accounts\" : [ ],\n  \"callBackRequired\" : false\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/bill-pay/payveris/ebills/resolve-errors URL pattern\n*/\nexport const BillPayPayverisServicePostBillPayPayverisResolveEbillErrorsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payveris/ebills/resolve-errors\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"payeeID\" : \"9993\",\n  \"billers\" : [ ],\n  \"accounts\" : [ ],\n  \"callBackRequired\" : false\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const BillPayPayverisServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payveris/ebills/enrolment\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payveris/ebills/enrolment\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"payeeID\" : \"9993\",\n  \"billers\" : [ ],\n  \"accounts\" : [ ],\n  \"callBackRequired\" : false\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payveris/ebills/resolve-errors\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"payeeID\" : \"9993\",\n  \"billers\" : [ ],\n  \"accounts\" : [ ],\n  \"callBackRequired\" : false\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Bill Pay Integrator client\n * Display and update bill pay information for end-users via web and mobile clients. Manage enrollment, eBills, payments, autopay, and payees.\n *\n * The version of the OpenAPI document: 2.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadGatewayError } from '../model/models';\nimport { BadRequestError } from '../model/models';\nimport { BillPaySearchGetResponseBody } from '../model/models';\nimport { GatewayTimeoutError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotImplementedError } from '../model/models';\n\nimport { BILLPAY_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { BillpayConfiguration }                                     from '../configuration';\n\n\nexport interface GetBillPaySearchRequestParams {\n    /** The name of the payee to search for */\n    [\"name\"]: string;\n    /** The zip code of the payee to search for */\n    [\"zipCode\"]?: string;\n    /** The account number with the payee */\n    [\"accountNumber\"]?: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BillPaySearchService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new BillpayConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BILLPAY_BASE_PATH) basePath: string, @Optional() configuration: BillpayConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Search for payees by name.\n     * Search for payees by name\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPaySearch(requestParameters: GetBillPaySearchRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<BillPaySearchGetResponseBody>;\n    /**\n     * Search for payees by name.\n     * Search for payees by name\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPaySearch(requestParameters: GetBillPaySearchRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<BillPaySearchGetResponseBody>>;\n    /**\n     * Search for payees by name.\n     * Search for payees by name\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPaySearch(requestParameters: GetBillPaySearchRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<BillPaySearchGetResponseBody>>;\n    /**\n     * Search for payees by name.\n     * Search for payees by name\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBillPaySearch(requestParameters: GetBillPaySearchRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _name = requestParameters[\"name\"];\n        if (_name === null || _name === undefined) {\n            throw new Error('Required parameter name was null or undefined when calling getBillPaySearch.');\n        }\n        const _zipCode = requestParameters[\"zipCode\"];\n        const _accountNumber = requestParameters[\"accountNumber\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_name !== undefined && _name !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_name, 'name');\n        }\n        if (_zipCode !== undefined && _zipCode !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_zipCode, 'zipCode');\n        }\n        if (_accountNumber !== undefined && _accountNumber !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_accountNumber, 'accountNumber');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<BillPaySearchGetResponseBody>(`${this.configuration.basePath}/client-api/v2/bill-pay/payees-search`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getBillPaySearchUrl(requestParameters: GetBillPaySearchRequestParams): string {\n        const _name = requestParameters[\"name\"];\n        if (_name === null || _name === undefined) {\n            throw new Error('Required parameter name was null or undefined when calling getBillPaySearch.');\n        }\n        const _zipCode = requestParameters[\"zipCode\"];\n        const _accountNumber = requestParameters[\"accountNumber\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_name !== undefined && _name !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_name, 'name');\n        }\n        if (_zipCode !== undefined && _zipCode !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_zipCode, 'zipCode');\n        }\n        if (_accountNumber !== undefined && _accountNumber !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_accountNumber, 'accountNumber');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees-search${queryString ? `?${queryString}` : ''}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/bill-pay/payees-search URL pattern\n*/\nexport const BillPaySearchServiceGetBillPaySearchMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees-search\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"payees\" : [ {\n    \"merchantID\" : \"10000001\",\n    \"name\" : \"Backbase UK\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000002\",\n    \"name\" : \"Backbase AMS\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000003\",\n    \"name\" : \"Backbase US\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000004\",\n    \"name\" : \"adventescent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000005\",\n    \"name\" : \"animadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000006\",\n    \"name\" : \"circumadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000007\",\n    \"name\" : \"syadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000008\",\n    \"name\" : \"maladvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000009\",\n    \"name\" : \"sucadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000010\",\n    \"name\" : \"sysadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000011\",\n    \"name\" : \"adventacious\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000012\",\n    \"name\" : \"adventack\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000013\",\n    \"name\" : \"belladvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000014\",\n    \"name\" : \"coradvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000015\",\n    \"name\" : \"polyadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000016\",\n    \"name\" : \"adventous\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000017\",\n    \"name\" : \"adventant\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000018\",\n    \"name\" : \"vivadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000019\",\n    \"name\" : \"foradvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000020\",\n    \"name\" : \"inadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000021\",\n    \"name\" : \"bovadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000022\",\n    \"name\" : \"adventize\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000023\",\n    \"name\" : \"postadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000024\",\n    \"name\" : \"lunadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000025\",\n    \"name\" : \"amadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000026\",\n    \"name\" : \"symadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000027\",\n    \"name\" : \"advental\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000028\",\n    \"name\" : \"adventic\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000029\",\n    \"name\" : \"lupadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000030\",\n    \"name\" : \"sufadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000031\",\n    \"name\" : \"adventari\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000032\",\n    \"name\" : \"adventism\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000033\",\n    \"name\" : \"comadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000034\",\n    \"name\" : \"laudadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000035\",\n    \"name\" : \"adventose\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000036\",\n    \"name\" : \"enadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000037\",\n    \"name\" : \"misadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000038\",\n    \"name\" : \"portadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000039\",\n    \"name\" : \"adventor\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000040\",\n    \"name\" : \"venadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000041\",\n    \"name\" : \"tenadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000042\",\n    \"name\" : \"adventation\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000043\",\n    \"name\" : \"adventicious\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000044\",\n    \"name\" : \"adventill\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000045\",\n    \"name\" : \"fortadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000046\",\n    \"name\" : \"adventil\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000047\",\n    \"name\" : \"rhyadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000048\",\n    \"name\" : \"aceradvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000049\",\n    \"name\" : \"difadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000050\",\n    \"name\" : \"adventand\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000051\",\n    \"name\" : \"adventible\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000052\",\n    \"name\" : \"peradvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000053\",\n    \"name\" : \"interadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000054\",\n    \"name\" : \"podadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000055\",\n    \"name\" : \"adventend\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000056\",\n    \"name\" : \"maradvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000057\",\n    \"name\" : \"uberadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000058\",\n    \"name\" : \"movadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000059\",\n    \"name\" : \"adventile\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000060\",\n    \"name\" : \"exadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000061\",\n    \"name\" : \"frontadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000062\",\n    \"name\" : \"pedadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000063\",\n    \"name\" : \"outadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000064\",\n    \"name\" : \"myadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000065\",\n    \"name\" : \"finadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000066\",\n    \"name\" : \"adventac\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000067\",\n    \"name\" : \"adventaid\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000068\",\n    \"name\" : \"dominadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000069\",\n    \"name\" : \"transadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000070\",\n    \"name\" : \"suradvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000071\",\n    \"name\" : \"sumadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000072\",\n    \"name\" : \"adventive\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000073\",\n    \"name\" : \"feladvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000074\",\n    \"name\" : \"adventa\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000075\",\n    \"name\" : \"domadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000076\",\n    \"name\" : \"anadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000077\",\n    \"name\" : \"adventoid\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000078\",\n    \"name\" : \"hyperadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000079\",\n    \"name\" : \"adventore\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000080\",\n    \"name\" : \"adventate\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000081\",\n    \"name\" : \"adventosis\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000082\",\n    \"name\" : \"albadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000083\",\n    \"name\" : \"synadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000084\",\n    \"name\" : \"canadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000085\",\n    \"name\" : \"supadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000086\",\n    \"name\" : \"midadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000087\",\n    \"name\" : \"esadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000088\",\n    \"name\" : \"skyadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000089\",\n    \"name\" : \"susadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000090\",\n    \"name\" : \"archadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000091\",\n    \"name\" : \"locadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000092\",\n    \"name\" : \"insuladvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000093\",\n    \"name\" : \"sugadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000094\",\n    \"name\" : \"capadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000095\",\n    \"name\" : \"falcadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000096\",\n    \"name\" : \"monadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000097\",\n    \"name\" : \"syladvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000098\",\n    \"name\" : \"conadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000099\",\n    \"name\" : \"cisadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000100\",\n    \"name\" : \"kayadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000001\",\n    \"name\" : \"cedadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000002\",\n    \"name\" : \"veradvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000003\",\n    \"name\" : \"cervadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000004\",\n    \"name\" : \"audadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000005\",\n    \"name\" : \"coladvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000006\",\n    \"name\" : \"vertadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000007\",\n    \"name\" : \"adventashun\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000008\",\n    \"name\" : \"suradvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000009\",\n    \"name\" : \"subadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000010\",\n    \"name\" : \"superadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000011\",\n    \"name\" : \"doladvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000012\",\n    \"name\" : \"nonadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000013\",\n    \"name\" : \"garadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000014\",\n    \"name\" : \"adventalt\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000015\",\n    \"name\" : \"premadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000016\",\n    \"name\" : \"adventity\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000017\",\n    \"name\" : \"bonadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000018\",\n    \"name\" : \"adventise\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000019\",\n    \"name\" : \"genadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000019\",\n    \"name\" : \"adventist\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000020\",\n    \"name\" : \"adventable\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000021\",\n    \"name\" : \"auradvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000022\",\n    \"name\" : \"adventent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000023\",\n    \"name\" : \"disadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000024\",\n    \"name\" : \"panadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000025\",\n    \"name\" : \"adventer\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000026\",\n    \"name\" : \"calcadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000027\",\n    \"name\" : \"unadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000028\",\n    \"name\" : \"adventall\",\n    \"zipRequired\" : false\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n                {\n                    status: 501,\n                    body: {\n  \"message\" : \"Operation not supported\"\n}\n                },\n                {\n                    status: 502,\n                    body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n                },\n                {\n                    status: 504,\n                    body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const BillPaySearchServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees-search\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"payees\" : [ {\n    \"merchantID\" : \"10000001\",\n    \"name\" : \"Backbase UK\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000002\",\n    \"name\" : \"Backbase AMS\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000003\",\n    \"name\" : \"Backbase US\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000004\",\n    \"name\" : \"adventescent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000005\",\n    \"name\" : \"animadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000006\",\n    \"name\" : \"circumadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000007\",\n    \"name\" : \"syadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000008\",\n    \"name\" : \"maladvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000009\",\n    \"name\" : \"sucadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000010\",\n    \"name\" : \"sysadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000011\",\n    \"name\" : \"adventacious\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000012\",\n    \"name\" : \"adventack\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000013\",\n    \"name\" : \"belladvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000014\",\n    \"name\" : \"coradvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000015\",\n    \"name\" : \"polyadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000016\",\n    \"name\" : \"adventous\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000017\",\n    \"name\" : \"adventant\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000018\",\n    \"name\" : \"vivadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000019\",\n    \"name\" : \"foradvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000020\",\n    \"name\" : \"inadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000021\",\n    \"name\" : \"bovadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000022\",\n    \"name\" : \"adventize\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000023\",\n    \"name\" : \"postadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000024\",\n    \"name\" : \"lunadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000025\",\n    \"name\" : \"amadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000026\",\n    \"name\" : \"symadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000027\",\n    \"name\" : \"advental\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000028\",\n    \"name\" : \"adventic\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000029\",\n    \"name\" : \"lupadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000030\",\n    \"name\" : \"sufadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000031\",\n    \"name\" : \"adventari\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000032\",\n    \"name\" : \"adventism\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000033\",\n    \"name\" : \"comadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000034\",\n    \"name\" : \"laudadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000035\",\n    \"name\" : \"adventose\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000036\",\n    \"name\" : \"enadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000037\",\n    \"name\" : \"misadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000038\",\n    \"name\" : \"portadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000039\",\n    \"name\" : \"adventor\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000040\",\n    \"name\" : \"venadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000041\",\n    \"name\" : \"tenadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000042\",\n    \"name\" : \"adventation\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000043\",\n    \"name\" : \"adventicious\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000044\",\n    \"name\" : \"adventill\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000045\",\n    \"name\" : \"fortadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000046\",\n    \"name\" : \"adventil\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000047\",\n    \"name\" : \"rhyadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000048\",\n    \"name\" : \"aceradvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000049\",\n    \"name\" : \"difadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000050\",\n    \"name\" : \"adventand\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000051\",\n    \"name\" : \"adventible\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000052\",\n    \"name\" : \"peradvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000053\",\n    \"name\" : \"interadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000054\",\n    \"name\" : \"podadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000055\",\n    \"name\" : \"adventend\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000056\",\n    \"name\" : \"maradvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000057\",\n    \"name\" : \"uberadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000058\",\n    \"name\" : \"movadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000059\",\n    \"name\" : \"adventile\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000060\",\n    \"name\" : \"exadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000061\",\n    \"name\" : \"frontadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000062\",\n    \"name\" : \"pedadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000063\",\n    \"name\" : \"outadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000064\",\n    \"name\" : \"myadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000065\",\n    \"name\" : \"finadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000066\",\n    \"name\" : \"adventac\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000067\",\n    \"name\" : \"adventaid\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000068\",\n    \"name\" : \"dominadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000069\",\n    \"name\" : \"transadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000070\",\n    \"name\" : \"suradvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000071\",\n    \"name\" : \"sumadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000072\",\n    \"name\" : \"adventive\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000073\",\n    \"name\" : \"feladvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000074\",\n    \"name\" : \"adventa\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000075\",\n    \"name\" : \"domadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000076\",\n    \"name\" : \"anadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000077\",\n    \"name\" : \"adventoid\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000078\",\n    \"name\" : \"hyperadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000079\",\n    \"name\" : \"adventore\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000080\",\n    \"name\" : \"adventate\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000081\",\n    \"name\" : \"adventosis\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000082\",\n    \"name\" : \"albadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000083\",\n    \"name\" : \"synadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000084\",\n    \"name\" : \"canadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000085\",\n    \"name\" : \"supadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000086\",\n    \"name\" : \"midadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000087\",\n    \"name\" : \"esadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000088\",\n    \"name\" : \"skyadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000089\",\n    \"name\" : \"susadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000090\",\n    \"name\" : \"archadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000091\",\n    \"name\" : \"locadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000092\",\n    \"name\" : \"insuladvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000093\",\n    \"name\" : \"sugadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000094\",\n    \"name\" : \"capadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000095\",\n    \"name\" : \"falcadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000096\",\n    \"name\" : \"monadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000097\",\n    \"name\" : \"syladvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"10000098\",\n    \"name\" : \"conadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000099\",\n    \"name\" : \"cisadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"10000100\",\n    \"name\" : \"kayadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000001\",\n    \"name\" : \"cedadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000002\",\n    \"name\" : \"veradvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000003\",\n    \"name\" : \"cervadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000004\",\n    \"name\" : \"audadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000005\",\n    \"name\" : \"coladvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000006\",\n    \"name\" : \"vertadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000007\",\n    \"name\" : \"adventashun\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000008\",\n    \"name\" : \"suradvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000009\",\n    \"name\" : \"subadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000010\",\n    \"name\" : \"superadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000011\",\n    \"name\" : \"doladvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000012\",\n    \"name\" : \"nonadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000013\",\n    \"name\" : \"garadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000014\",\n    \"name\" : \"adventalt\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000015\",\n    \"name\" : \"premadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000016\",\n    \"name\" : \"adventity\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000017\",\n    \"name\" : \"bonadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000018\",\n    \"name\" : \"adventise\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000019\",\n    \"name\" : \"genadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000019\",\n    \"name\" : \"adventist\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000020\",\n    \"name\" : \"adventable\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000021\",\n    \"name\" : \"auradvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000022\",\n    \"name\" : \"adventent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000023\",\n    \"name\" : \"disadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000024\",\n    \"name\" : \"panadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000025\",\n    \"name\" : \"adventer\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000026\",\n    \"name\" : \"calcadvent\",\n    \"zipRequired\" : true\n  }, {\n    \"merchantID\" : \"20000027\",\n    \"name\" : \"unadvent\",\n    \"zipRequired\" : false\n  }, {\n    \"merchantID\" : \"20000028\",\n    \"name\" : \"adventall\",\n    \"zipRequired\" : false\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n\n            {\n                status: 501,\n                body: {\n  \"message\" : \"Operation not supported\"\n}\n            },\n\n            {\n                status: 502,\n                body: {\n  \"message\" : \"Bad Gateway\",\n  \"errors\" : [ {\n    \"message\" : \"Internal error calling API provider\",\n    \"key\" : \"common.api.providerInternalError\"\n  } ]\n}\n            },\n\n            {\n                status: 504,\n                body: {\n  \"message\" : \"Gateway Timeout\",\n  \"errors\" : [ {\n    \"message\" : \"API provider unavailable.\",\n    \"key\" : \"common.api.providerUnavailable\"\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":[],"mappings":"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"}