{"version":3,"file":"is-element-content-truncated.directive.js","sourceRoot":"","sources":["../../../../../../libs/notifications-common-ang/src/lib/directives/is-element-content-truncated.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAiB,MAAM,eAAe,CAAC;AAE/F,OAAO,EAAE,yBAAyB,EAAE,MAAM,2BAA2B,CAAC;;AAKtE,MAAM,OAAO,kCAAkC;IAC7C,YAA6B,UAAsB,EAAmB,EAAqB;QAA9D,eAAU,GAAV,UAAU,CAAY;QAAmB,OAAE,GAAF,EAAE,CAAmB;IAAG,CAAC;IAI/F,eAAe;QACb,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,sCAAsC,EAAE,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,sCAAsC;QAC5C,MAAM,kBAAkB,GAAG,yBAAyB,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACpF,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,kBAAkB,CAAC,CAAC;QACvD,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;IACzB,CAAC;;mJAfU,kCAAkC;uIAAlC,kCAAkC;4FAAlC,kCAAkC;kBAH9C,SAAS;mBAAC;oBACT,QAAQ,EAAE,+BAA+B;iBAC1C;iIAIU,OAAO;sBAAf,KAAK","sourcesContent":["import { ChangeDetectorRef, Directive, ElementRef, Input, AfterViewInit } from '@angular/core';\nimport { CheckTruncation } from '../models/check-truncation.model';\nimport { isElementContentTruncated } from './../helpers/is-truncated';\n\n@Directive({\n  selector: '[bbIsElementContentTruncated]',\n})\nexport class IsElementContentTruncatedDirective implements AfterViewInit {\n  constructor(private readonly elementRef: ElementRef, private readonly cd: ChangeDetectorRef) {}\n\n  @Input() hostRef!: CheckTruncation;\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.setIsContentTruncatedInParentComponent();\n    });\n  }\n\n  private setIsContentTruncatedInParentComponent(): void {\n    const isContentTruncated = isElementContentTruncated(this.elementRef.nativeElement);\n    this.hostRef.setIsContentTruncated(isContentTruncated);\n    this.cd.markForCheck();\n  }\n}\n"]}