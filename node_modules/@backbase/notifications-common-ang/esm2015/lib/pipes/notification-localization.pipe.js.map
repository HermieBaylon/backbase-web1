{"version":3,"file":"notification-localization.pipe.js","sourceRoot":"","sources":["../../../../../../libs/notifications-common-ang/src/lib/pipes/notification-localization.pipe.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAiB,MAAM,eAAe,CAAC;;AAavE,MAAM,OAAO,4BAA4B;IACvC,YAAgD,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAElE,SAAS,CAAC,YAA8B,EAAE,QAA6B;QACrE,OAAO,CACL,CAAE,CAAC,YAAY,CAAC,YAAY,IAAI,EAAE,CAA8B,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,CAC/G,CAAC;IACJ,CAAC;;6IAPU,4BAA4B,kBACnB,SAAS;2IADlB,4BAA4B;4FAA5B,4BAA4B;kBAHxC,IAAI;mBAAC;oBACJ,IAAI,EAAE,0BAA0B;iBACjC;;0BAEc,MAAM;2BAAC,SAAS","sourcesContent":["import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core';\nimport { NotificationItem } from '../models/notification-item';\n\nexport interface NotificationLocalization {\n  [key: string]: {\n    message: string;\n    title: string;\n  };\n}\n\n@Pipe({\n  name: 'notificationLocalization',\n})\nexport class NotificationLocalizationPipe implements PipeTransform {\n  constructor(@Inject(LOCALE_ID) private readonly locale: string) {}\n\n  transform(notification: NotificationItem, property: 'message' | 'title'): string {\n    return (\n      (((notification.translations || {}) as NotificationLocalization)[this.locale] || notification)[property] || ''\n    );\n  }\n}\n"]}