{"version":3,"file":"ng-zone.js","sourceRoot":"","sources":["../../../../../../libs/notifications-common-ang/src/lib/helpers/ng-zone.ts"],"names":[],"mappings":"AAGA,MAAM,kBAAkB;IACtB,YAA6B,IAAY,EAAmB,SAAwB;QAAvD,SAAI,GAAJ,IAAI,CAAQ;QAAmB,cAAS,GAAT,SAAS,CAAe;IAAG,CAAC;IAExF,QAAQ,CAAC,GAAG,IAAW;QACrB,yCAAyC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,IAAW,CAAC,CAAC,CAAC;IACvG,CAAC;IAED,GAAG;QACD,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;IAC9B,CAAC;CACF;AAED,MAAM,kBAAkB;IACtB,YAA6B,IAAY,EAAmB,SAAwB;QAAvD,SAAI,GAAJ,IAAI,CAAQ;QAAmB,cAAS,GAAT,SAAS,CAAe;IAAG,CAAC;IAExF,QAAQ,CAAC,GAAG,IAAW;QACrB,yCAAyC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,IAAW,CAAC,CAAC,CAAC;IACzF,CAAC;IAED,GAAG;QACD,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;IAC9B,CAAC;CACF;AAED,MAAM,UAAU,SAAS,CAAC,IAAY,EAAE,SAAwB;IAC9D,OAAO,IAAI,kBAAkB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACjD,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,IAAY,EAAE,SAAwB;IAC9D,OAAO,IAAI,kBAAkB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACjD,CAAC","sourcesContent":["import { SchedulerLike, Subscription } from 'rxjs';\nimport { NgZone } from '@angular/core';\n\nclass LeaveZoneScheduler implements SchedulerLike {\n  constructor(private readonly zone: NgZone, private readonly scheduler: SchedulerLike) {}\n\n  schedule(...args: any[]): Subscription {\n    // eslint-disable-next-line prefer-spread\n    return this.zone.runOutsideAngular(() => this.scheduler.schedule.apply(this.scheduler, args as any));\n  }\n\n  now(): number {\n    return this.scheduler.now();\n  }\n}\n\nclass EnterZoneScheduler implements SchedulerLike {\n  constructor(private readonly zone: NgZone, private readonly scheduler: SchedulerLike) {}\n\n  schedule(...args: any[]): Subscription {\n    // eslint-disable-next-line prefer-spread\n    return this.zone.run(() => this.scheduler.schedule.apply(this.scheduler, args as any));\n  }\n\n  now(): number {\n    return this.scheduler.now();\n  }\n}\n\nexport function leaveZone(zone: NgZone, scheduler: SchedulerLike): SchedulerLike {\n  return new LeaveZoneScheduler(zone, scheduler);\n}\n\nexport function enterZone(zone: NgZone, scheduler: SchedulerLike): SchedulerLike {\n  return new EnterZoneScheduler(zone, scheduler);\n}\n"]}