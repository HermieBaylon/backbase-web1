import { ItemModel } from '@backbase/foundation-ang/core';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export interface BaseWidgetProperties {
    allowedRoutes: string[];
    origins: string[];
    severityLevels: string[];
}
export declare const DefaultBaseWidgetProperties: BaseWidgetProperties;
export declare class BaseWidgetPropertiesService {
    protected readonly itemModel?: ItemModel | undefined;
    constructor(itemModel?: ItemModel | undefined);
    private readonly allowedRoutes$$;
    private readonly origins$$;
    private readonly severityLevels$$;
    readonly allowedRoutes$: Observable<string[]>;
    readonly origins$: Observable<string[]>;
    readonly severityLevels$: Observable<string[]>;
    private get allowedRoutes();
    private get origins();
    private get severityLevels();
    setAllowedRoutes(value: string): void;
    setOrigins(value: string): void;
    setSeverityLevels(value: string): void;
    protected defaultModelObservable<T>(value: T): Observable<T>;
    static ɵfac: i0.ɵɵFactoryDeclaration<BaseWidgetPropertiesService, [{ optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<BaseWidgetPropertiesService>;
}
