import * as i0 from '@angular/core';
import { InjectionToken, Injectable, Optional, Inject, Component, NgModule } from '@angular/core';
import * as i1 from '@angular/router';
import { provideRoutes, RouterModule } from '@angular/router';
import * as i5 from '@angular/common';
import { CommonModule } from '@angular/common';
import { ReactiveFormsModule } from '@angular/forms';
import * as i4 from '@backbase/card-details-widget-ang';
import { CardDetailsWidgetModule } from '@backbase/card-details-widget-ang';
import * as i4$1 from '@backbase/cards-list-widget-ang';
import { CardsListWidgetModule } from '@backbase/cards-list-widget-ang';
import * as i4$2 from '@backbase/cards-travel-notice-widget-ang';
import { CardsTravelNoticeModule } from '@backbase/cards-travel-notice-widget-ang';
import * as i1$1 from '@backbase/foundation-ang/core';
import { BackbaseCoreModule } from '@backbase/foundation-ang/core';
import * as i3 from '@backbase/ui-ang/header';
import { HeaderModule } from '@backbase/ui-ang/header';

const CardsManagementJourneyConfigurationToken = new InjectionToken('CardsManagementJourneyConfiguration injection token');
const configDefaults = {
    notificationTtl: 5000,
    groupByPaymentCardTypes: 'Credit,Debit',
    enableTravelNotice: true,
    deElevatedHeader: false,
};
const getDefaultConfigValues = (config) => (Object.assign(Object.assign({}, configDefaults), (config || {})));
class CardsManagementJourneyConfigService {
    constructor(config) {
        this._config = getDefaultConfigValues(config);
    }
    get defaults() {
        return configDefaults;
    }
    /**
     * Notification timeout timer value configuration
     */
    get notificationTtl() {
        return this._config.notificationTtl;
    }
    /**
     * Types of cards configuration value
     */
    get groupByPaymentCardTypes() {
        return this._config.groupByPaymentCardTypes;
    }
    /**
     * Dev config to enable Travel notice
     */
    get enableTravelNotice() {
        return this._config.enableTravelNotice;
    }
    /**
     * Dev config to enable de-elevated header
     */
    get deElevatedHeader() {
        return this._config.deElevatedHeader;
    }
}
/** @nocollapse */ CardsManagementJourneyConfigService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardsManagementJourneyConfigService, deps: [{ token: CardsManagementJourneyConfigurationToken, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ CardsManagementJourneyConfigService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardsManagementJourneyConfigService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardsManagementJourneyConfigService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [CardsManagementJourneyConfigurationToken]
                }] }]; } });

class CardsManagementJourneyComponent {
}
/** @nocollapse */ CardsManagementJourneyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardsManagementJourneyComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ CardsManagementJourneyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CardsManagementJourneyComponent, selector: "bb-cards-management-journey", providers: [CardsManagementJourneyConfigService], ngImport: i0, template: ` <router-outlet></router-outlet> `, isInline: true, directives: [{ type: i1.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardsManagementJourneyComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-cards-management-journey',
                    template: ` <router-outlet></router-outlet> `,
                    providers: [CardsManagementJourneyConfigService],
                }]
        }] });

class CardsManagementTravelNoticeGuard {
    constructor(config) {
        this.config = config;
        this._config = getDefaultConfigValues(this.config);
    }
    canActivate() {
        return this._config.enableTravelNotice;
    }
}
/** @nocollapse */ CardsManagementTravelNoticeGuard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardsManagementTravelNoticeGuard, deps: [{ token: CardsManagementJourneyConfigurationToken, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ CardsManagementTravelNoticeGuard.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardsManagementTravelNoticeGuard, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardsManagementTravelNoticeGuard, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [CardsManagementJourneyConfigurationToken]
                }] }]; } });

class CardDetailViewComponent {
    constructor(router, route, configService) {
        this.router = router;
        this.route = route;
        this.configService = configService;
    }
    onNavigateBack() {
        this.router.navigate(['../list'], { relativeTo: this.route });
    }
}
/** @nocollapse */ CardDetailViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardDetailViewComponent, deps: [{ token: i1.Router }, { token: i1.ActivatedRoute }, { token: CardsManagementJourneyConfigService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ CardDetailViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CardDetailViewComponent, selector: "bb-card-details-view", ngImport: i0, template: "<div\n  class=\"heading-widget bb-heading-widget\"\n  [ngClass]=\"\n    configService.deElevatedHeader\n      ? 'bb-heading-widget bb-heading-widget--de-elevated'\n      : 'bb-cards-management-journey__heading'\n  \"\n>\n  <bb-header-ui\n    headingType=\"h1\"\n    headingClasses=\"bb-heading-widget__heading\"\n    heading=\"Cards Details\"\n    i18n-heading=\"\n      Card Details heading@@cards-management-journey.cards-details.heading.title\"\n  ></bb-header-ui>\n  <button\n    *ngIf=\"configService.enableTravelNotice\"\n    (click)=\"onNavigateBack()\"\n    class=\"bb-heading-widget__button btn btn-link\"\n  >\n    <i aria-hidden=\"true\" class=\"bb-icon bb-icon-keyboard-backspace\"></i>\n    <span\n      i18n=\"\n        Back to manage cards\n        content@@cards-management-journey.cards-details.button.back\"\n    >\n      Back to Manage cards\n    </span>\n  </button>\n</div>\n\n<div\n  *ngIf=\"configService.deElevatedHeader; else cardDetailsView\"\n  class=\"container--drag-up container-fluid\"\n>\n  <div class=\"bb-card bb-card--lg\">\n    <div class=\"bb-card__body\">\n      <ng-container [ngTemplateOutlet]=\"cardDetailsView\"></ng-container>\n    </div>\n  </div>\n</div>\n\n<ng-template #cardDetailsView>\n  <bb-card-details-widget\n    [notificationTtl]=\"configService.notificationTtl\"\n  ></bb-card-details-widget>\n</ng-template>\n", components: [{ type: i3.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i4.CardDetailsWidgetComponent, selector: "bb-card-details-widget", inputs: ["notificationTtl", "updateAllLimits"] }], directives: [{ type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardDetailViewComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-card-details-view',
                    templateUrl: 'card-detail-view.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i1.ActivatedRoute }, { type: CardsManagementJourneyConfigService }]; } });

class CardsListViewComponent {
    constructor(router, route, configService) {
        this.router = router;
        this.route = route;
        this.configService = configService;
    }
    selectedCard(id) {
        this.router.navigate(['../details', { selectedCard: id }], {
            relativeTo: this.route,
        });
    }
    onNavigateTravelNotice() {
        this.router.navigate(['../travel-notice'], { relativeTo: this.route });
    }
}
/** @nocollapse */ CardsListViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardsListViewComponent, deps: [{ token: i1.Router }, { token: i1.ActivatedRoute }, { token: CardsManagementJourneyConfigService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ CardsListViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CardsListViewComponent, selector: "bb-cards-list-view", ngImport: i0, template: "<div\n  class=\"heading-widget bb-heading-widget\"\n  [ngClass]=\"\n    configService.deElevatedHeader\n      ? 'bb-heading-widget bb-heading-widget--de-elevated'\n      : 'bb-cards-management-journey__heading'\n  \"\n>\n  <bb-header-ui\n    headingType=\"h1\"\n    headingClasses=\"bb-heading-widget__heading\"\n    heading=\"Manage Cards\"\n    i18n-heading=\"\n      Card Management heading@@cards-management-journey.cards-list.heading.title\"\n  ></bb-header-ui>\n  <button\n    *ngIf=\"configService.enableTravelNotice\"\n    (click)=\"onNavigateTravelNotice()\"\n    class=\"bb-heading-widget__button btn btn-link\"\n  >\n    <i aria-hidden=\"true\" class=\"bb-icon bb-icon-flight\"></i>\n    <span\n      i18n=\"\n        Travel Notice button\n        content@@cards-management-journey.cards-list.button.travel-notice\"\n    >\n      Travel Notice\n    </span>\n  </button>\n</div>\n\n<div\n  *ngIf=\"configService.deElevatedHeader; else cardListView\"\n  class=\"container--drag-up container-fluid\"\n>\n  <div class=\"bb-card bb-card--lg\">\n    <div class=\"bb-card__body\">\n      <ng-container [ngTemplateOutlet]=\"cardListView\"></ng-container>\n    </div>\n  </div>\n</div>\n\n<ng-template #cardListView>\n  <bb-cards-list-widget\n    (selectedCard)=\"selectedCard($event)\"\n    [notificationTtl]=\"configService.notificationTtl\"\n    [groupByPaymentCardTypes]=\"configService.groupByPaymentCardTypes\"\n  ></bb-cards-list-widget>\n</ng-template>\n", components: [{ type: i3.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i4$1.CardsListWidgetComponent, selector: "bb-cards-list-widget", inputs: ["notificationTtl", "updateAllLimits", "groupByPaymentCardTypes"], outputs: ["selectedCard"] }], directives: [{ type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardsListViewComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-cards-list-view',
                    templateUrl: 'cards-list-view.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i1.ActivatedRoute }, { type: CardsManagementJourneyConfigService }]; } });

class CardsTravelNoticeViewComponent {
    constructor(router, route, configService) {
        this.router = router;
        this.route = route;
        this.configService = configService;
    }
    onNavigateBack() {
        this.router.navigate(['../list'], { relativeTo: this.route });
    }
}
/** @nocollapse */ CardsTravelNoticeViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardsTravelNoticeViewComponent, deps: [{ token: i1.Router }, { token: i1.ActivatedRoute }, { token: CardsManagementJourneyConfigService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ CardsTravelNoticeViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CardsTravelNoticeViewComponent, selector: "bb-cards-travel-notice-view", ngImport: i0, template: "<div\n  class=\"heading-widget bb-heading-widget\"\n  [ngClass]=\"\n    configService.deElevatedHeader\n      ? 'bb-heading-widget bb-heading-widget--de-elevated'\n      : 'bb-cards-management-journey__heading'\n  \"\n>\n  <bb-header-ui\n    headingType=\"h1\"\n    headingClasses=\"bb-heading-widget__heading\"\n    heading=\"Travel Notice\"\n    i18n-heading=\"\n      Travel Notice\n      heading@@cards-management-journey.travel-notice.heading.title\"\n  ></bb-header-ui>\n  <button\n    *ngIf=\"configService.enableTravelNotice\"\n    (click)=\"onNavigateBack()\"\n    class=\"bb-heading-widget__button btn btn-link\"\n  >\n    <i aria-hidden=\"true\" class=\"bb-icon bb-icon-keyboard-backspace\"></i>\n    <span\n      i18n=\"\n        Back to Manage Cards\n        content@@cards-management-journey.travel-notice.button.back\"\n    >\n      Back to Manage cards\n    </span>\n  </button>\n</div>\n\n<div\n  *ngIf=\"configService.deElevatedHeader; else travelNoticeView\"\n  class=\"container--drag-up container-fluid\"\n>\n  <div class=\"bb-card bb-card--lg\">\n    <div class=\"bb-card__body\">\n      <ng-container [ngTemplateOutlet]=\"travelNoticeView\"></ng-container>\n    </div>\n  </div>\n</div>\n\n<ng-template #travelNoticeView>\n  <bb-cards-travel-notice-widget></bb-cards-travel-notice-widget>\n</ng-template>\n", components: [{ type: i3.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i4$2.CardsTravelNoticeWidgetComponent, selector: "bb-cards-travel-notice-widget" }], directives: [{ type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardsTravelNoticeViewComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-cards-travel-notice-view',
                    templateUrl: 'cards-travel-notice-view.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i1.ActivatedRoute }, { type: CardsManagementJourneyConfigService }]; } });

const defaultRoute = {
    path: '',
    component: CardsManagementJourneyComponent,
    children: [
        {
            path: '',
            redirectTo: 'list',
            pathMatch: 'full',
        },
        {
            path: 'list',
            component: CardsListViewComponent,
        },
        {
            path: 'details',
            component: CardDetailViewComponent,
        },
        {
            path: 'travel-notice',
            component: CardsTravelNoticeViewComponent,
            canActivate: [CardsManagementTravelNoticeGuard],
        },
    ],
};
class CardsManagementJourneyModule {
    static forRoot(data = { route: defaultRoute }) {
        return {
            ngModule: CardsManagementJourneyModule,
            providers: [provideRoutes([data.route])],
        };
    }
}
/** @nocollapse */ CardsManagementJourneyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardsManagementJourneyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ CardsManagementJourneyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardsManagementJourneyModule, declarations: [CardsManagementJourneyComponent,
        CardsListViewComponent,
        CardDetailViewComponent,
        CardsTravelNoticeViewComponent], imports: [CommonModule,
        RouterModule, i1$1.BackbaseCoreModule, CardsListWidgetModule,
        CardDetailsWidgetModule,
        CardsTravelNoticeModule,
        ReactiveFormsModule,
        HeaderModule] });
/** @nocollapse */ CardsManagementJourneyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardsManagementJourneyModule, providers: [CardsManagementTravelNoticeGuard], imports: [[
            CommonModule,
            RouterModule,
            BackbaseCoreModule.withConfig({
                classMap: { CardsManagementJourneyComponent },
            }),
            CardsListWidgetModule,
            CardDetailsWidgetModule,
            CardsTravelNoticeModule,
            ReactiveFormsModule,
            HeaderModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardsManagementJourneyModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        CardsManagementJourneyComponent,
                        CardsListViewComponent,
                        CardDetailViewComponent,
                        CardsTravelNoticeViewComponent,
                    ],
                    imports: [
                        CommonModule,
                        RouterModule,
                        BackbaseCoreModule.withConfig({
                            classMap: { CardsManagementJourneyComponent },
                        }),
                        CardsListWidgetModule,
                        CardDetailsWidgetModule,
                        CardsTravelNoticeModule,
                        ReactiveFormsModule,
                        HeaderModule,
                    ],
                    providers: [CardsManagementTravelNoticeGuard],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { CardDetailViewComponent, CardsListViewComponent, CardsManagementJourneyComponent, CardsManagementJourneyConfigService, CardsManagementJourneyConfigurationToken, CardsManagementJourneyModule, CardsManagementTravelNoticeGuard, CardsTravelNoticeViewComponent };
//# sourceMappingURL=backbase-cards-management-journey-ang.js.map
