(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/router'), require('@angular/common'), require('@angular/forms'), require('@backbase/card-details-widget-ang'), require('@backbase/cards-list-widget-ang'), require('@backbase/cards-travel-notice-widget-ang'), require('@backbase/foundation-ang/core'), require('@backbase/ui-ang/header')) :
    typeof define === 'function' && define.amd ? define('@backbase/cards-management-journey-ang', ['exports', '@angular/core', '@angular/router', '@angular/common', '@angular/forms', '@backbase/card-details-widget-ang', '@backbase/cards-list-widget-ang', '@backbase/cards-travel-notice-widget-ang', '@backbase/foundation-ang/core', '@backbase/ui-ang/header'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["cards-management-journey-ang"] = {}), global.ng.core, global.ng.router, global.ng.common, global.ng.forms, global.i4, global.i4$1, global.i4$2, global.i1$1, global.i3));
})(this, (function (exports, i0, i1, i5, forms, i4, i4$1, i4$2, i1$1, i3) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i4__namespace$1 = /*#__PURE__*/_interopNamespace(i4$1);
    var i4__namespace$2 = /*#__PURE__*/_interopNamespace(i4$2);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);

    var CardsManagementJourneyConfigurationToken = new i0.InjectionToken('CardsManagementJourneyConfiguration injection token');
    var configDefaults = {
        notificationTtl: 5000,
        groupByPaymentCardTypes: 'Credit,Debit',
        enableTravelNotice: true,
        deElevatedHeader: false,
    };
    var getDefaultConfigValues = function (config) { return (Object.assign(Object.assign({}, configDefaults), (config || {}))); };
    var CardsManagementJourneyConfigService = /** @class */ (function () {
        function CardsManagementJourneyConfigService(config) {
            this._config = getDefaultConfigValues(config);
        }
        Object.defineProperty(CardsManagementJourneyConfigService.prototype, "defaults", {
            get: function () {
                return configDefaults;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CardsManagementJourneyConfigService.prototype, "notificationTtl", {
            /**
             * Notification timeout timer value configuration
             */
            get: function () {
                return this._config.notificationTtl;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CardsManagementJourneyConfigService.prototype, "groupByPaymentCardTypes", {
            /**
             * Types of cards configuration value
             */
            get: function () {
                return this._config.groupByPaymentCardTypes;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CardsManagementJourneyConfigService.prototype, "enableTravelNotice", {
            /**
             * Dev config to enable Travel notice
             */
            get: function () {
                return this._config.enableTravelNotice;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CardsManagementJourneyConfigService.prototype, "deElevatedHeader", {
            /**
             * Dev config to enable de-elevated header
             */
            get: function () {
                return this._config.deElevatedHeader;
            },
            enumerable: false,
            configurable: true
        });
        return CardsManagementJourneyConfigService;
    }());
    /** @nocollapse */ CardsManagementJourneyConfigService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardsManagementJourneyConfigService, deps: [{ token: CardsManagementJourneyConfigurationToken, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ CardsManagementJourneyConfigService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardsManagementJourneyConfigService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardsManagementJourneyConfigService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [CardsManagementJourneyConfigurationToken]
                        }] }];
        } });

    var CardsManagementJourneyComponent = /** @class */ (function () {
        function CardsManagementJourneyComponent() {
        }
        return CardsManagementJourneyComponent;
    }());
    /** @nocollapse */ CardsManagementJourneyComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardsManagementJourneyComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ CardsManagementJourneyComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CardsManagementJourneyComponent, selector: "bb-cards-management-journey", providers: [CardsManagementJourneyConfigService], ngImport: i0__namespace, template: " <router-outlet></router-outlet> ", isInline: true, directives: [{ type: i1__namespace.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardsManagementJourneyComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-cards-management-journey',
                        template: " <router-outlet></router-outlet> ",
                        providers: [CardsManagementJourneyConfigService],
                    }]
            }] });

    var CardsManagementTravelNoticeGuard = /** @class */ (function () {
        function CardsManagementTravelNoticeGuard(config) {
            this.config = config;
            this._config = getDefaultConfigValues(this.config);
        }
        CardsManagementTravelNoticeGuard.prototype.canActivate = function () {
            return this._config.enableTravelNotice;
        };
        return CardsManagementTravelNoticeGuard;
    }());
    /** @nocollapse */ CardsManagementTravelNoticeGuard.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardsManagementTravelNoticeGuard, deps: [{ token: CardsManagementJourneyConfigurationToken, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ CardsManagementTravelNoticeGuard.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardsManagementTravelNoticeGuard, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardsManagementTravelNoticeGuard, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root',
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [CardsManagementJourneyConfigurationToken]
                        }] }];
        } });

    var CardDetailViewComponent = /** @class */ (function () {
        function CardDetailViewComponent(router, route, configService) {
            this.router = router;
            this.route = route;
            this.configService = configService;
        }
        CardDetailViewComponent.prototype.onNavigateBack = function () {
            this.router.navigate(['../list'], { relativeTo: this.route });
        };
        return CardDetailViewComponent;
    }());
    /** @nocollapse */ CardDetailViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardDetailViewComponent, deps: [{ token: i1__namespace.Router }, { token: i1__namespace.ActivatedRoute }, { token: CardsManagementJourneyConfigService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ CardDetailViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CardDetailViewComponent, selector: "bb-card-details-view", ngImport: i0__namespace, template: "<div\n  class=\"heading-widget bb-heading-widget\"\n  [ngClass]=\"\n    configService.deElevatedHeader\n      ? 'bb-heading-widget bb-heading-widget--de-elevated'\n      : 'bb-cards-management-journey__heading'\n  \"\n>\n  <bb-header-ui\n    headingType=\"h1\"\n    headingClasses=\"bb-heading-widget__heading\"\n    heading=\"Cards Details\"\n    i18n-heading=\"\n      Card Details heading@@cards-management-journey.cards-details.heading.title\"\n  ></bb-header-ui>\n  <button\n    *ngIf=\"configService.enableTravelNotice\"\n    (click)=\"onNavigateBack()\"\n    class=\"bb-heading-widget__button btn btn-link\"\n  >\n    <i aria-hidden=\"true\" class=\"bb-icon bb-icon-keyboard-backspace\"></i>\n    <span\n      i18n=\"\n        Back to manage cards\n        content@@cards-management-journey.cards-details.button.back\"\n    >\n      Back to Manage cards\n    </span>\n  </button>\n</div>\n\n<div\n  *ngIf=\"configService.deElevatedHeader; else cardDetailsView\"\n  class=\"container--drag-up container-fluid\"\n>\n  <div class=\"bb-card bb-card--lg\">\n    <div class=\"bb-card__body\">\n      <ng-container [ngTemplateOutlet]=\"cardDetailsView\"></ng-container>\n    </div>\n  </div>\n</div>\n\n<ng-template #cardDetailsView>\n  <bb-card-details-widget\n    [notificationTtl]=\"configService.notificationTtl\"\n  ></bb-card-details-widget>\n</ng-template>\n", components: [{ type: i3__namespace.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i4__namespace.CardDetailsWidgetComponent, selector: "bb-card-details-widget", inputs: ["notificationTtl", "updateAllLimits"] }], directives: [{ type: i5__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i5__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardDetailViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-card-details-view',
                        templateUrl: 'card-detail-view.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.Router }, { type: i1__namespace.ActivatedRoute }, { type: CardsManagementJourneyConfigService }]; } });

    var CardsListViewComponent = /** @class */ (function () {
        function CardsListViewComponent(router, route, configService) {
            this.router = router;
            this.route = route;
            this.configService = configService;
        }
        CardsListViewComponent.prototype.selectedCard = function (id) {
            this.router.navigate(['../details', { selectedCard: id }], {
                relativeTo: this.route,
            });
        };
        CardsListViewComponent.prototype.onNavigateTravelNotice = function () {
            this.router.navigate(['../travel-notice'], { relativeTo: this.route });
        };
        return CardsListViewComponent;
    }());
    /** @nocollapse */ CardsListViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardsListViewComponent, deps: [{ token: i1__namespace.Router }, { token: i1__namespace.ActivatedRoute }, { token: CardsManagementJourneyConfigService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ CardsListViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CardsListViewComponent, selector: "bb-cards-list-view", ngImport: i0__namespace, template: "<div\n  class=\"heading-widget bb-heading-widget\"\n  [ngClass]=\"\n    configService.deElevatedHeader\n      ? 'bb-heading-widget bb-heading-widget--de-elevated'\n      : 'bb-cards-management-journey__heading'\n  \"\n>\n  <bb-header-ui\n    headingType=\"h1\"\n    headingClasses=\"bb-heading-widget__heading\"\n    heading=\"Manage Cards\"\n    i18n-heading=\"\n      Card Management heading@@cards-management-journey.cards-list.heading.title\"\n  ></bb-header-ui>\n  <button\n    *ngIf=\"configService.enableTravelNotice\"\n    (click)=\"onNavigateTravelNotice()\"\n    class=\"bb-heading-widget__button btn btn-link\"\n  >\n    <i aria-hidden=\"true\" class=\"bb-icon bb-icon-flight\"></i>\n    <span\n      i18n=\"\n        Travel Notice button\n        content@@cards-management-journey.cards-list.button.travel-notice\"\n    >\n      Travel Notice\n    </span>\n  </button>\n</div>\n\n<div\n  *ngIf=\"configService.deElevatedHeader; else cardListView\"\n  class=\"container--drag-up container-fluid\"\n>\n  <div class=\"bb-card bb-card--lg\">\n    <div class=\"bb-card__body\">\n      <ng-container [ngTemplateOutlet]=\"cardListView\"></ng-container>\n    </div>\n  </div>\n</div>\n\n<ng-template #cardListView>\n  <bb-cards-list-widget\n    (selectedCard)=\"selectedCard($event)\"\n    [notificationTtl]=\"configService.notificationTtl\"\n    [groupByPaymentCardTypes]=\"configService.groupByPaymentCardTypes\"\n  ></bb-cards-list-widget>\n</ng-template>\n", components: [{ type: i3__namespace.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i4__namespace$1.CardsListWidgetComponent, selector: "bb-cards-list-widget", inputs: ["notificationTtl", "updateAllLimits", "groupByPaymentCardTypes"], outputs: ["selectedCard"] }], directives: [{ type: i5__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i5__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardsListViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-cards-list-view',
                        templateUrl: 'cards-list-view.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.Router }, { type: i1__namespace.ActivatedRoute }, { type: CardsManagementJourneyConfigService }]; } });

    var CardsTravelNoticeViewComponent = /** @class */ (function () {
        function CardsTravelNoticeViewComponent(router, route, configService) {
            this.router = router;
            this.route = route;
            this.configService = configService;
        }
        CardsTravelNoticeViewComponent.prototype.onNavigateBack = function () {
            this.router.navigate(['../list'], { relativeTo: this.route });
        };
        return CardsTravelNoticeViewComponent;
    }());
    /** @nocollapse */ CardsTravelNoticeViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardsTravelNoticeViewComponent, deps: [{ token: i1__namespace.Router }, { token: i1__namespace.ActivatedRoute }, { token: CardsManagementJourneyConfigService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ CardsTravelNoticeViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CardsTravelNoticeViewComponent, selector: "bb-cards-travel-notice-view", ngImport: i0__namespace, template: "<div\n  class=\"heading-widget bb-heading-widget\"\n  [ngClass]=\"\n    configService.deElevatedHeader\n      ? 'bb-heading-widget bb-heading-widget--de-elevated'\n      : 'bb-cards-management-journey__heading'\n  \"\n>\n  <bb-header-ui\n    headingType=\"h1\"\n    headingClasses=\"bb-heading-widget__heading\"\n    heading=\"Travel Notice\"\n    i18n-heading=\"\n      Travel Notice\n      heading@@cards-management-journey.travel-notice.heading.title\"\n  ></bb-header-ui>\n  <button\n    *ngIf=\"configService.enableTravelNotice\"\n    (click)=\"onNavigateBack()\"\n    class=\"bb-heading-widget__button btn btn-link\"\n  >\n    <i aria-hidden=\"true\" class=\"bb-icon bb-icon-keyboard-backspace\"></i>\n    <span\n      i18n=\"\n        Back to Manage Cards\n        content@@cards-management-journey.travel-notice.button.back\"\n    >\n      Back to Manage cards\n    </span>\n  </button>\n</div>\n\n<div\n  *ngIf=\"configService.deElevatedHeader; else travelNoticeView\"\n  class=\"container--drag-up container-fluid\"\n>\n  <div class=\"bb-card bb-card--lg\">\n    <div class=\"bb-card__body\">\n      <ng-container [ngTemplateOutlet]=\"travelNoticeView\"></ng-container>\n    </div>\n  </div>\n</div>\n\n<ng-template #travelNoticeView>\n  <bb-cards-travel-notice-widget></bb-cards-travel-notice-widget>\n</ng-template>\n", components: [{ type: i3__namespace.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i4__namespace$2.CardsTravelNoticeWidgetComponent, selector: "bb-cards-travel-notice-widget" }], directives: [{ type: i5__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i5__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardsTravelNoticeViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-cards-travel-notice-view',
                        templateUrl: 'cards-travel-notice-view.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.Router }, { type: i1__namespace.ActivatedRoute }, { type: CardsManagementJourneyConfigService }]; } });

    var defaultRoute = {
        path: '',
        component: CardsManagementJourneyComponent,
        children: [
            {
                path: '',
                redirectTo: 'list',
                pathMatch: 'full',
            },
            {
                path: 'list',
                component: CardsListViewComponent,
            },
            {
                path: 'details',
                component: CardDetailViewComponent,
            },
            {
                path: 'travel-notice',
                component: CardsTravelNoticeViewComponent,
                canActivate: [CardsManagementTravelNoticeGuard],
            },
        ],
    };
    var CardsManagementJourneyModule = /** @class */ (function () {
        function CardsManagementJourneyModule() {
        }
        CardsManagementJourneyModule.forRoot = function (data) {
            if (data === void 0) { data = { route: defaultRoute }; }
            return {
                ngModule: CardsManagementJourneyModule,
                providers: [i1.provideRoutes([data.route])],
            };
        };
        return CardsManagementJourneyModule;
    }());
    /** @nocollapse */ CardsManagementJourneyModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardsManagementJourneyModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    /** @nocollapse */ CardsManagementJourneyModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardsManagementJourneyModule, declarations: [CardsManagementJourneyComponent,
            CardsListViewComponent,
            CardDetailViewComponent,
            CardsTravelNoticeViewComponent], imports: [i5.CommonModule,
            i1.RouterModule, i1__namespace$1.BackbaseCoreModule, i4$1.CardsListWidgetModule,
            i4.CardDetailsWidgetModule,
            i4$2.CardsTravelNoticeModule,
            forms.ReactiveFormsModule,
            i3.HeaderModule] });
    /** @nocollapse */ CardsManagementJourneyModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardsManagementJourneyModule, providers: [CardsManagementTravelNoticeGuard], imports: [[
                i5.CommonModule,
                i1.RouterModule,
                i1$1.BackbaseCoreModule.withConfig({
                    classMap: { CardsManagementJourneyComponent: CardsManagementJourneyComponent },
                }),
                i4$1.CardsListWidgetModule,
                i4.CardDetailsWidgetModule,
                i4$2.CardsTravelNoticeModule,
                forms.ReactiveFormsModule,
                i3.HeaderModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardsManagementJourneyModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [
                            CardsManagementJourneyComponent,
                            CardsListViewComponent,
                            CardDetailViewComponent,
                            CardsTravelNoticeViewComponent,
                        ],
                        imports: [
                            i5.CommonModule,
                            i1.RouterModule,
                            i1$1.BackbaseCoreModule.withConfig({
                                classMap: { CardsManagementJourneyComponent: CardsManagementJourneyComponent },
                            }),
                            i4$1.CardsListWidgetModule,
                            i4.CardDetailsWidgetModule,
                            i4$2.CardsTravelNoticeModule,
                            forms.ReactiveFormsModule,
                            i3.HeaderModule,
                        ],
                        providers: [CardsManagementTravelNoticeGuard],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.CardDetailViewComponent = CardDetailViewComponent;
    exports.CardsListViewComponent = CardsListViewComponent;
    exports.CardsManagementJourneyComponent = CardsManagementJourneyComponent;
    exports.CardsManagementJourneyConfigService = CardsManagementJourneyConfigService;
    exports.CardsManagementJourneyConfigurationToken = CardsManagementJourneyConfigurationToken;
    exports.CardsManagementJourneyModule = CardsManagementJourneyModule;
    exports.CardsManagementTravelNoticeGuard = CardsManagementTravelNoticeGuard;
    exports.CardsTravelNoticeViewComponent = CardsTravelNoticeViewComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-cards-management-journey-ang.umd.js.map
