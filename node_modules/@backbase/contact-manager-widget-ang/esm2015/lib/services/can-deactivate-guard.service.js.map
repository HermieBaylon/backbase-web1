{"version":3,"file":"can-deactivate-guard.service.js","sourceRoot":"","sources":["../../../../../../libs/contact-manager-widget-ang/src/lib/services/can-deactivate-guard.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;AAO3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiCG;AAEH,MAAM,OAAO,kBAAkB;IAC7B,aAAa,CAAC,SAAiC;QAC7C,OAAO,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IACpE,CAAC;;mIAHU,kBAAkB;uIAAlB,kBAAkB;4FAAlB,kBAAkB;kBAD9B,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n/**\n *\n * This guard is called while deactivating the route to check if the form is dirty.\n *\n * @see ContactManagerWidgetModule\n * @usageNotes\n *\n * ### Ensure the ContactManagerWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ContactManagerWidgetModule,\n *   ],\n * })\n * export class ContactManagerWidgetModule {}\n * ```\n *\n * ### Inject this guard into your route\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [{\n *   path: 'edit/:id/:type',\n *   canDeactivate: [CanDeactivateGuard],\n *   component: ContactsFormContainerComponent,\n * },]\n * })\n *  export class ContactManagerWidgetModule {\n * ```\n */\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\n  canDeactivate(component: CanComponentDeactivate) {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n}\n"]}