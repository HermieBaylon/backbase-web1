{"version":3,"file":"contacts-preferences.service.js","sourceRoot":"","sources":["../../../../../../libs/contact-manager-widget-ang/src/lib/services/contacts-preferences.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Optional } from '@angular/core';\nimport { toBoolean, toInteger } from '@backbase/contact-common-ang';\nimport { ItemModel } from '@backbase/foundation-ang/core';\n\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n *\n * This service manages the widget properties.\n *\n * @see ContactManagerWidgetModule\n * @usageNotes\n *\n * ### Ensure the ContactManagerWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ContactManagerWidgetModule,\n *   ],\n * })\n * export class ContactManagerWidgetModule {}\n * ```\n *\n * ### Inject this service to the providers.\n *\n * ```ts\n * @Component({\n *   ...\n *  providers: [\n * {\n *   provide: ContactManagerPreferencesService,\n *   useClass: ContactManagerJourneyPreferencesService,\n * },\n * })\n *  export class ContactManagerWidgetModule {\n * ```\n */\n@Injectable()\nexport class ContactManagerPreferencesService {\n  private readonly newContactSubject$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly pageSizeSubject$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly maxNavPagesSubject$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly paginationTypeSubject$ = new BehaviorSubject<string | undefined>(undefined);\n  private readonly createContactEmailSubject$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly createContactIBANSubject$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly createContactAccountSubject$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly createContactPhoneSubject$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly notificationDismissTimeSubject$ = new BehaviorSubject<number | undefined>(undefined);\n\n  private readonly newContactItemModel = this.itemModel?.property<boolean>('newContact').pipe(map(toBoolean));\n\n  private readonly pageSizeItemModel = this.itemModel?.property<number>('pageSize').pipe(map(toInteger));\n\n  private readonly maxNavPagesItemModel = this.itemModel?.property<number>('maxNavPages').pipe(map(toInteger));\n\n  private readonly paginationTypeItemModel = this.itemModel?.property<string>('paginationType');\n\n  private readonly createContactEmailItemModel = this.itemModel\n    ?.property<boolean>('createContactEmail')\n    .pipe(map(toBoolean));\n\n  private readonly createContactIBANItemModel = this.itemModel\n    ?.property<boolean>('createContactIBAN')\n    .pipe(map(toBoolean));\n\n  private readonly createContactAccountItemModel = this.itemModel\n    ?.property<boolean>('createContactAccount')\n    .pipe(map(toBoolean));\n\n  private readonly createContactPhoneItemModel = this.itemModel\n    ?.property<boolean>('createContactPhone')\n    .pipe(map(toBoolean));\n\n  private readonly notificationDismissTimeItemModel = this.itemModel\n    ?.property<number>('notificationDismissTime')\n    .pipe(map(toInteger));\n\n  readonly newContact$ = this.getProperty<boolean>(this.newContactSubject$, this.newContactItemModel);\n\n  readonly pageSize$ = this.getProperty<number>(this.pageSizeSubject$, this.pageSizeItemModel);\n\n  readonly maxNavPages$ = this.getProperty<number>(this.maxNavPagesSubject$, this.maxNavPagesItemModel);\n\n  readonly paginationType$ = this.getProperty<string>(this.paginationTypeSubject$, this.paginationTypeItemModel);\n\n  readonly createContactEmail$ = this.getProperty<boolean>(\n    this.createContactEmailSubject$,\n    this.createContactEmailItemModel,\n  );\n\n  readonly createContactIBAN$ = this.getProperty<boolean>(\n    this.createContactIBANSubject$,\n    this.createContactIBANItemModel,\n  );\n\n  readonly createContactAccount$ = this.getProperty<boolean>(\n    this.createContactAccountSubject$,\n    this.createContactAccountItemModel,\n  );\n\n  readonly createContactPhone$ = this.getProperty<boolean>(\n    this.createContactPhoneSubject$,\n    this.createContactPhoneItemModel,\n  );\n\n  readonly notificationDismissTime$ = this.getProperty<number>(\n    this.notificationDismissTimeSubject$,\n    this.notificationDismissTimeItemModel,\n  );\n\n  private getProperty<T>(input$: Observable<T | undefined>, itemModel: Observable<unknown>): Observable<T> {\n    return combineLatest([input$, itemModel]).pipe(\n      map(([value, valueIM]) => (value === undefined ? valueIM : value) as T),\n    );\n  }\n  /**\n   *  Update the new Contact value\n   *\n   * @param {boolean} value selected value\n   */\n  setNewContact(value: boolean) {\n    this.newContactSubject$.next(value);\n  }\n  /**\n   *  Update the pageSize value\n   *\n   * @param {number} value selected value\n   */\n  setPageSize(value: number) {\n    this.pageSizeSubject$.next(value);\n  }\n  /**\n   *  Update the maxNavPages value\n   *\n   * @param {number} value selected value\n   */\n  setMaxNavPages(value: number) {\n    this.maxNavPagesSubject$.next(value);\n  }\n  /**\n   *  Update the paginationType value\n   *\n   * @param {string} value selected value\n   */\n  setPaginationType(value: string) {\n    this.paginationTypeSubject$.next(value);\n  }\n  /**\n   *  Update the notificationDissmissTime value\n   *\n   * @param {number} value selected value\n   */\n  setNotificationDismissTime(value: number) {\n    this.notificationDismissTimeSubject$.next(value);\n  }\n  /**\n   *  Update the createContactEmail value\n   *\n   * @param {boolean} value selected value\n   */\n  setCreateContactEmail(value: boolean) {\n    this.createContactEmailSubject$.next(value);\n  }\n  /**\n   *  Update the createContactIBAN value\n   *\n   * @param {boolean} value selected value\n   */\n  setCreateContactIBAN(value: boolean) {\n    this.createContactIBANSubject$.next(value);\n  }\n  /**\n   *  Update the createContactAccount value\n   *\n   * @param {boolean} value selected value\n   */\n  setCreateContactAccount(value: boolean) {\n    this.createContactAccountSubject$.next(value);\n  }\n  /**\n   *  Update the createContactPhone value\n   *\n   * @param {boolean} value selected value\n   */\n  setCreateContactPhone(value: boolean) {\n    this.createContactPhoneSubject$.next(value);\n  }\n\n  constructor(@Optional() private readonly itemModel: ItemModel) {}\n}\n"]}