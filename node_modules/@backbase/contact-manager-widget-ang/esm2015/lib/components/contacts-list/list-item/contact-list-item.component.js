import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { ContactsService } from '../../../services/contacts.service';
import { AccountCreateType, AccountTypeModelKey } from '../../../models/types';
import * as i0 from "@angular/core";
import * as i1 from "../../../services/contacts.service";
import * as i2 from "@angular/common";
import * as i3 from "@backbase/ui-ang/iban-pipe";
/**
 * Displays an item in the  list of all contacts
 *
 * @usageNotes
 *
 * ### Display a single item in the list of types of contact.
 *
 * ```html
 * <bb-contact-list-item
 *     [contactItem]="item"
 *     [showAccountNumber]="true"
 *     [showAlias]="showAlias"
 *  ></bb-contact-list-item>
 * ```
 * @ngModule ContactManagerWidgetModule
 */
export class ContactsListItemComponent {
    constructor(service) {
        this.service = service;
        /**
         * Wether to show contact account number.
         * Default is false.
         */
        this.showAccountNumber = false;
        /**
         * Wether to show contact alias.
         * Default is false.
         */
        this.showAlias = false;
        this.accountTypeKeyRef = AccountTypeModelKey;
        this.createAccountType = AccountCreateType;
    }
    /**
     * OnInit - lifecycle hook.
     */
    ngOnInit() {
        if (this.contactItem === undefined) {
            throw new Error('`item` input is required in `bb-todo-list-item` component');
        }
        else {
            this.selectedAccountType = this.service.checkaccountType(this.contactItem);
        }
    }
}
/** @nocollapse */ ContactsListItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ContactsListItemComponent, deps: [{ token: i1.ContactsService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ ContactsListItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ContactsListItemComponent, selector: "bb-contact-list-item", inputs: { contactItem: "contactItem", showAccountNumber: "showAccountNumber", showAlias: "showAlias" }, ngImport: i0, template: "<div class=\"bb-block bb-block--sm\">\n  <div class=\"bb-block bb-block--xs break-word\">\n    <span class=\"sr-only\">\n      <span i18n=\"name@@bb-contact-list-item.label.name\" data-role=\"name-header\"> Name </span>\n      :&nbsp;\n    </span>\n    <span class=\"bb-text-bold break-word\" data-role=\"list-name\"> {{ contactItem.name }} </span>\n  </div>\n  <div *ngIf=\"showAccountNumber\" class=\"bb-block bb-block--xs break-word\">\n    <ng-container [ngSwitch]=\"selectedAccountType\">\n      <ng-container *ngSwitchCase=\"createAccountType.IBAN\">\n        <span class=\"sr-only\">\n          <span i18n=\"account number@@bb-contact-list-item.label.iban\" data-role=\"account-header\"> IBAN </span>\n          :&nbsp;\n        </span>\n        <ng-container *ngTemplateOutlet=\"accountdetails\"></ng-container>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"createAccountType.EMAIL\">\n        <span class=\"sr-only\">\n          <span i18n=\"account number@@bb-contact-list-item.label.email\" data-role=\"email-header\"> Email </span>\n          :&nbsp;\n        </span>\n        <ng-container *ngTemplateOutlet=\"details\"></ng-container>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"createAccountType.PHONE\">\n        <span class=\"sr-only\">\n          <span i18n=\"account number@@bb-contact-list-item.label.phone.number\" data-role=\"phone-header\">\n            Phone number\n          </span>\n          :&nbsp;\n        </span>\n        <ng-container *ngTemplateOutlet=\"details\"></ng-container>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"createAccountType.ACCOUNT\">\n        <span class=\"sr-only\">\n          <span i18n=\"account number@@bb-contact-list-item.label.account.number\" data-role=\"account-header\">\n            Account number\n          </span>\n          :&nbsp;\n        </span>\n        <ng-container *ngTemplateOutlet=\"accountdetails\"></ng-container>\n      </ng-container>\n    </ng-container>\n  </div>\n  <div *ngIf=\"showAlias && contactItem.alias\" class=\"bb-block bb-block--xs break-word\">\n    <span class=\"sr-only\" data-role=\"alias-header\" i18n=\"name@@bb-contact-list-item.label.alias\">Alias</span>\n    <span class=\"sr-only\">:&nbsp;</span>\n    <span class=\"bb-text-support break-word\" data-role=\"list-alias\"> {{ contactItem.alias }} </span>\n  </div>\n\n  <ng-template #accountdetails>\n    <span class=\"bb-text-support\" data-role=\"list-account-number\" *ngIf=\"contactItem?.accounts[0] as account\">\n      {{ account[selectedAccountType] | bbIban}}\n    </span>\n  </ng-template>\n  <ng-template #details>\n    <span class=\"bb-text-support\" data-role=\"list-account-number\" *ngIf=\"contactItem?.accounts[0] as account\">\n      {{ account[selectedAccountType]}}\n    </span>\n  </ng-template>\n</div>\n", directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i2.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], pipes: { "bbIban": i3.BbIbanPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ContactsListItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-contact-list-item',
                    templateUrl: './contact-list-item.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.ContactsService }]; }, propDecorators: { contactItem: [{
                type: Input
            }], showAccountNumber: [{
                type: Input
            }], showAlias: [{
                type: Input
            }] } });
//# sourceMappingURL=contact-list-item.component.js.map