{"version":3,"file":"contact-list-item.component.js","sourceRoot":"","sources":["../../../../../../../../libs/contact-manager-widget-ang/src/lib/components/contacts-list/list-item/contact-list-item.component.ts","../../../../../../../../libs/contact-manager-widget-ang/src/lib/components/contacts-list/list-item/contact-list-item.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAE,KAAK,EAAU,MAAM,eAAe,CAAC;AAClF,OAAO,EAAE,eAAe,EAAE,MAAM,oCAAoC,CAAC;AAErE,OAAO,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;;;;;AAE/E;;;;;;;;;;;;;;;GAeG;AAMH,MAAM,OAAO,yBAAyB;IAsBpC,YAAmB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;QAhB3C;;;WAGG;QACM,sBAAiB,GAAG,KAAK,CAAC;QAEnC;;;WAGG;QACM,cAAS,GAAG,KAAK,CAAC;QAEX,sBAAiB,GAAG,mBAAmB,CAAC;QACxC,sBAAiB,GAAG,iBAAiB,CAAC;IAGR,CAAC;IAC/C;;OAEG;IACH,QAAQ;QACN,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;YAClC,MAAM,IAAI,KAAK,CAAC,2DAA2D,CAAC,CAAC;SAC9E;aAAM;YACL,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC5E;IACH,CAAC;;0IAhCU,yBAAyB;8HAAzB,yBAAyB,oKC1BtC,ywFA6DA;4FDnCa,yBAAyB;kBALrC,SAAS;mBAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,WAAW,EAAE,oCAAoC;oBACjD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;sGAKU,WAAW;sBAAnB,KAAK;gBAMG,iBAAiB;sBAAzB,KAAK;gBAMG,SAAS;sBAAjB,KAAK","sourcesContent":["import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { ContactsService } from '../../../services/contacts.service';\nimport { ContactItem } from '@backbase/contact-common-ang';\nimport { AccountCreateType, AccountTypeModelKey } from '../../../models/types';\n\n/**\n * Displays an item in the  list of all contacts\n *\n * @usageNotes\n *\n * ### Display a single item in the list of types of contact.\n *\n * ```html\n * <bb-contact-list-item\n *     [contactItem]=\"item\"\n *     [showAccountNumber]=\"true\"\n *     [showAlias]=\"showAlias\"\n *  ></bb-contact-list-item>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Component({\n  selector: 'bb-contact-list-item',\n  templateUrl: './contact-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactsListItemComponent implements OnInit {\n  /**\n   * Contact item that contains the account information of the contact\n   */\n  @Input() contactItem!: ContactItem;\n\n  /**\n   * Wether to show contact account number.\n   * Default is false.\n   */\n  @Input() showAccountNumber = false;\n\n  /**\n   * Wether to show contact alias.\n   * Default is false.\n   */\n  @Input() showAlias = false;\n\n  public readonly accountTypeKeyRef = AccountTypeModelKey;\n  public readonly createAccountType = AccountCreateType;\n  public selectedAccountType!: string;\n\n  constructor(public service: ContactsService) {}\n  /**\n   * OnInit - lifecycle hook.\n   */\n  ngOnInit() {\n    if (this.contactItem === undefined) {\n      throw new Error('`item` input is required in `bb-todo-list-item` component');\n    } else {\n      this.selectedAccountType = this.service.checkaccountType(this.contactItem);\n    }\n  }\n}\n","<div class=\"bb-block bb-block--sm\">\n  <div class=\"bb-block bb-block--xs break-word\">\n    <span class=\"sr-only\">\n      <span i18n=\"name@@bb-contact-list-item.label.name\" data-role=\"name-header\"> Name </span>\n      :&nbsp;\n    </span>\n    <span class=\"bb-text-bold break-word\" data-role=\"list-name\"> {{ contactItem.name }} </span>\n  </div>\n  <div *ngIf=\"showAccountNumber\" class=\"bb-block bb-block--xs break-word\">\n    <ng-container [ngSwitch]=\"selectedAccountType\">\n      <ng-container *ngSwitchCase=\"createAccountType.IBAN\">\n        <span class=\"sr-only\">\n          <span i18n=\"account number@@bb-contact-list-item.label.iban\" data-role=\"account-header\"> IBAN </span>\n          :&nbsp;\n        </span>\n        <ng-container *ngTemplateOutlet=\"accountdetails\"></ng-container>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"createAccountType.EMAIL\">\n        <span class=\"sr-only\">\n          <span i18n=\"account number@@bb-contact-list-item.label.email\" data-role=\"email-header\"> Email </span>\n          :&nbsp;\n        </span>\n        <ng-container *ngTemplateOutlet=\"details\"></ng-container>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"createAccountType.PHONE\">\n        <span class=\"sr-only\">\n          <span i18n=\"account number@@bb-contact-list-item.label.phone.number\" data-role=\"phone-header\">\n            Phone number\n          </span>\n          :&nbsp;\n        </span>\n        <ng-container *ngTemplateOutlet=\"details\"></ng-container>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"createAccountType.ACCOUNT\">\n        <span class=\"sr-only\">\n          <span i18n=\"account number@@bb-contact-list-item.label.account.number\" data-role=\"account-header\">\n            Account number\n          </span>\n          :&nbsp;\n        </span>\n        <ng-container *ngTemplateOutlet=\"accountdetails\"></ng-container>\n      </ng-container>\n    </ng-container>\n  </div>\n  <div *ngIf=\"showAlias && contactItem.alias\" class=\"bb-block bb-block--xs break-word\">\n    <span class=\"sr-only\" data-role=\"alias-header\" i18n=\"name@@bb-contact-list-item.label.alias\">Alias</span>\n    <span class=\"sr-only\">:&nbsp;</span>\n    <span class=\"bb-text-support break-word\" data-role=\"list-alias\"> {{ contactItem.alias }} </span>\n  </div>\n\n  <ng-template #accountdetails>\n    <span class=\"bb-text-support\" data-role=\"list-account-number\" *ngIf=\"contactItem?.accounts[0] as account\">\n      {{ account[selectedAccountType] | bbIban}}\n    </span>\n  </ng-template>\n  <ng-template #details>\n    <span class=\"bb-text-support\" data-role=\"list-account-number\" *ngIf=\"contactItem?.accounts[0] as account\">\n      {{ account[selectedAccountType]}}\n    </span>\n  </ng-template>\n</div>\n"]}