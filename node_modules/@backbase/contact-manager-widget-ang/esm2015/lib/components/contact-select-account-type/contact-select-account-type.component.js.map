{"version":3,"file":"contact-select-account-type.component.js","sourceRoot":"","sources":["../../../../../../../libs/contact-manager-widget-ang/src/lib/components/contact-select-account-type/contact-select-account-type.component.ts","../../../../../../../libs/contact-manager-widget-ang/src/lib/components/contact-select-account-type/contact-select-account-type.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAU,MAAM,EAAE,MAAM,eAAe,CAAC;AAC/E,OAAO,EAAE,iBAAiB,EAAkB,MAAM,oBAAoB,CAAC;AACvE,OAAO,EAAE,yBAAyB,EAAE,IAAI,EAAE,MAAM,4CAA4C,CAAC;;;;;;;AAE7F;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;AAMH,MAAM,OAAO,iCAAiC;IAmB5C,YAAoB,UAAqC;QAArC,eAAU,GAAV,UAAU,CAA2B;QARzD;;WAEG;QAEH,wBAAmB,GAAyB,IAAI,YAAY,EAAU,CAAC;QAEvD,yBAAoB,GAAG,iBAAiB,CAAC;IAEG,CAAC;IAC7D;;OAEG;IACH,QAAQ;;QACN,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;QACxC,IAAI,IAAI,CAAC,eAAe,KAAK,CAAC,IAAI,IAAI,CAAC,eAAe,KAAK,CAAC,EAAE;YAC5D,IAAI,CAAC,UAAU,CAAC,cAAc,CAC5B,CAAA,MAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,0CAAE,QAAQ,KAAI,IAAI,CAAC,oBAAoB,CAAC,IAAI,CACpG,CAAC;SACH;IACH,CAAC;IACD;;;;OAIG;IACH,uBAAuB,CAAC,MAAsB;QAC5C,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;QACxC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAClD,CAAC;;kJAvCU,iCAAiC;sIAAjC,iCAAiC,yNClC9C,mlIA6FA;4FD3Da,iCAAiC;kBAJ7C,SAAS;mBAAC;oBACT,QAAQ,EAAE,gCAAgC;oBAC1C,WAAW,EAAE,8CAA8C;iBAC5D;gHAMC,kBAAkB;sBADjB,KAAK;gBAMN,eAAe;sBADd,KAAK;gBAMN,mBAAmB;sBADlB,MAAM","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AccountCreateType, CreateListType } from '../../models/types';\nimport { ContactsNavigationService, View } from '../../services/contacts-navigation.service';\n\n/**\n * Displays a list of all contact types, allowing one to be selected.\n *\n * @usageNotes\n *\n * ### Display a list of types of contact that can be created\n *\n * ```html\n * <bb-contact-account-select-type\n *   [listOfAccountTypes]=\"createContactList$ | async\"\n *   [noOfItemsinList]=\"noOfItemsinList\n * ></bb-contact-account-select-type>\n * ```\n *\n * ### Additionally set the selected contact type\n *\n * ```html\n * <bb-contact-account-select-type\n *   [listOfAccountTypes]=\"createContactList$ | async\"\n *   [noOfItemsinList]=\"noOfItemsinList\n *   (selectedAccountType)=\"selectedAccountType()\"\n * ></bb-contact-account-select-type>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n@Component({\n  selector: 'bb-contact-account-select-type',\n  templateUrl: './contact-select-account-type.component.html',\n})\nexport class ContactSelectAccountTypeComponent implements OnInit {\n  /**\n   * All the account Type in an array.\n   */\n  @Input()\n  listOfAccountTypes!: CreateListType[];\n  /**\n   * Number of properties which are enabled.\n   */\n  @Input()\n  noOfItemsinList!: number;\n  /**\n   * event when account is selected.\n   */\n  @Output()\n  selectedAccountType: EventEmitter<string> = new EventEmitter<string>();\n\n  public readonly createAccountTypeRef = AccountCreateType;\n\n  constructor(private navigation: ContactsNavigationService) {}\n  /**\n   * OnInit lifecycle hook.\n   */\n  ngOnInit(): void {\n    this.navigation.currentView = View.Edit;\n    if (this.noOfItemsinList === 0 || this.noOfItemsinList === 1) {\n      this.navigation.newContactForm(\n        this.listOfAccountTypes.find((list) => list.enableItem)?.listItem || this.createAccountTypeRef.IBAN,\n      );\n    }\n  }\n  /**\n   * Update the selected account type for contact creation.\n   *\n   * @param {CreateListType} $event -The selected contact Type details.\n   */\n  updateCreateContactType($event: CreateListType) {\n    this.navigation.currentView = View.Edit;\n    this.navigation.newContactForm($event.listItem);\n  }\n}\n","<div class=\"bb-block bb-block--xl\">\n  <div class=\"bb-stack bb-stack--align-bottom\">\n    <div class=\"bb-stack__item bb-stack__item--fill\">\n      <div class=\"bb-block\" data-role=\"contact-details-info-name\">\n        <span\n          class=\"d-none\"\n          data-role=\"create-contact-label\"\n          aria-hidden=\"true\"\n          i18n=\"Create new contact heading | Title shown when user is in select contact type@@contact-manager-detail.create.select.heading\"\n          #heading\n        >\n          Create new contact\n        </span>\n        <bb-header-ui data-role=\"create-new-contact-label\" headingType=\"h3\" [heading]=\"heading.textContent\">\n        </bb-header-ui>\n      </div>\n    </div>\n  </div>\n</div>\n<hr />\n<div class=\"bb-lock bb-text-support\">\n  <div\n    class=\"bb-bock\"\n    data-role=\"create-contact-select-new-account-info\"\n    i18n=\"@@create-contact-type-list.select.info.text\"\n  >\n    Select which information you want to use to create a contact. You can move money with an account number, a phone\n    number or an email\n  </div>\n</div>\n<div class=\"bb-select-payment-option\">\n  <div *ngFor=\"let listItem of listOfAccountTypes\">\n    <div *ngIf=\"listItem.enableItem\">\n      <ng-container *ngTemplateOutlet=\"listButton; context: { listItem: listItem}\"></ng-container>\n    </div>\n  </div>\n</div>\n\n<ng-template #listButton let-listItem=\"listItem\">\n  <div class=\"bb-button-bar m-3\">\n    <button\n      class=\"bb-button-bar__button bb-button-bar__button--across bb-inline-stack col-12 bb-select-payment-option__label\"\n      bbButton\n      color=\"unstyled\"\n      (click)=\"updateCreateContactType(listItem)\"\n    >\n      <ng-container [ngSwitch]=\"listItem.listItem\">\n        <ng-container *ngSwitchCase=\"createAccountTypeRef.IBAN\">\n          <bb-icon-ui class=\"bb-inline-stack__item col bb-text-support\" name=\"person-outline\"></bb-icon-ui>\n          <div data-role=\"iban-item\" class=\"col-10 text-left\">\n            <ng-container i18n=\"@@create-contact-type-list.select.button.text.iban\">With an IBAN </ng-container>\n          </div>\n\n          <div class=\"col\">\n            <bb-icon-ui class=\"bb-inline-stack__item col-1 bb-text-support\" name=\"angle-right\"></bb-icon-ui>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"createAccountTypeRef.ACCOUNT\">\n          <bb-icon-ui class=\"bb-inline-stack__item col bb-text-support\" name=\"person-outline\"></bb-icon-ui>\n          <div data-role=\"account-number-item\" class=\"col-10 text-left\">\n            <ng-container i18n=\"@@create-contact-type-list.select.button.text.account\"\n              >With an account number\n            </ng-container>\n          </div>\n\n          <div class=\"col\">\n            <bb-icon-ui class=\"bb-inline-stack__item col-1 bb-text-support\" name=\"angle-right\"></bb-icon-ui>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"createAccountTypeRef.EMAIL\">\n          <bb-icon-ui class=\"bb-inline-stack__item col bb-text-support\" name=\"inbox\"></bb-icon-ui>\n          <div data-role=\"email-item\" class=\"col-10 text-left\">\n            <ng-container i18n=\"@@create-contact-type-list.select.button.text.email\">With an email </ng-container>\n          </div>\n\n          <div class=\"col\">\n            <bb-icon-ui class=\"bb-inline-stack__item col-1 bb-text-support\" name=\"angle-right\"></bb-icon-ui>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"createAccountTypeRef.PHONE\">\n          <bb-icon-ui class=\"bb-inline-stack__item col bb-text-support\" name=\"phone\"></bb-icon-ui>\n          <div data-role=\"phone-number-item\" class=\"col-10 text-left\">\n            <ng-container i18n=\"@@create-contact-type-list.select.button.text.phone\">With a phone number </ng-container>\n          </div>\n\n          <div class=\"col\">\n            <bb-icon-ui class=\"bb-inline-stack__item col-1 bb-text-support\" name=\"angle-right\"></bb-icon-ui>\n          </div>\n        </ng-container>\n      </ng-container>\n    </button>\n  </div>\n</ng-template>\n"]}