{"version":3,"file":"contacts-form.component.js","sourceRoot":"","sources":["../../../../../../../libs/contact-manager-widget-ang/src/lib/components/contacts-form/contacts-form.component.ts","../../../../../../../libs/contact-manager-widget-ang/src/lib/components/contacts-form/contacts-form.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Optional,\n  Output,\n  PLATFORM_ID,\n  SimpleChanges,\n  ViewContainerRef,\n} from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BB_CONTACT_FORM_ADDITIONS_TOKEN, ContactFormAdditions } from '../../config.providers';\nimport { AccountCreateType, ContactsFormItem } from '../../models/types';\nimport { IbanMask } from '@backbase/contact-common-ang';\n\n/**\n * Displays a contact form.\n *\n * The following extension slots are available in this component:\n *  - `ContactsFormCustomizableDirective`\n *\n * @see ContactsFormCustomizableDirective\n * @usageNotes\n *\n * ### Display a form for adding / editing the contact form.\n *\n * ```html\n *  <bb-contacts-form\n *   [item]=\"item\"\n *   [type]=\"itemType$ | async\"\n *   (save)=\"save($event)\"\n *   (cancelEdit)=\"cancelEdit($event)\"\n *   (backEvent)=\"back($event)\"\n *   (deleteContactsItem)=\"deleteContactsItem($event)\"\n * ></bb-contacts-form>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Component({\n  selector: 'bb-contacts-form',\n  templateUrl: './contacts-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactsFormComponent implements OnInit, OnChanges, AfterViewInit {\n  readonly hostRef: ContactsFormComponent = this;\n  submitted = false;\n  ibanMask = IbanMask;\n\n  /**\n   * The contact item that is editted\n   */\n  @Input()\n  item!: ContactsFormItem;\n  /**\n   * The contact item type\n   */\n  @Input()\n  type!: AccountCreateType;\n  /**\n   * Controls whether form can be submitted\n   */\n  @Input() disabledSubmit = false;\n  /**\n   * Event emitted when contact edit is saved\n   */\n  @Output() save = new EventEmitter<ContactsFormItem>();\n  /**\n   * Event emitted when contact edit is cancelled\n   */\n  @Output() cancelEdit = new EventEmitter<string>();\n  /**\n   * Event emitted when user clicks back\n   */\n  @Output() backEvent = new EventEmitter<string>();\n  /**\n   * Event emitted when contact is deleted\n   */\n  @Output() deleteContactsItem = new EventEmitter<string>();\n  /**\n   * contactForm group.\n   */\n  contactsForm!: FormGroup;\n  /**\n   * Contact account Type reference.\n   */\n  readonly createAccountTypeRef = AccountCreateType;\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly vcRef: ViewContainerRef,\n    @Inject(PLATFORM_ID) private readonly platformId: Object,\n    @Optional()\n    @Inject(BB_CONTACT_FORM_ADDITIONS_TOKEN)\n    private readonly formAdditionsConfig: ContactFormAdditions,\n  ) {}\n\n  /**\n   * OnInit - lifecycle hook.\n   */\n  ngOnInit() {\n    if (this.item === undefined) {\n      throw new Error('`item` input is required in `bb-contact-form` component');\n    }\n  }\n\n  /**\n   * AfterViewInt- lifecycle hook.\n   */\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.vcRef.element.nativeElement.querySelector('input')?.focus();\n    }\n  }\n\n  /**\n   * OnChanges - lifecycle hook.\n   *\n   * @param {SimpleChanges} changes angular SimpleChanges object\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.type) {\n      this.submitted = false;\n      this.contactsForm = this.createFormGroupInstance();\n    }\n  }\n\n  private createFormGroupInstance(): FormGroup {\n    const { additions } = { ...this.formAdditionsConfig };\n\n    return this.fb.group({\n      name: [this.item.name],\n      IBAN: [this.item.IBAN],\n      accountNumber: [this.item.accountNumber],\n      email: [this.item.email],\n      phoneNumber: [this.item.phoneNumber],\n      ...(additions ? { additions: this.fb.group(additions) } : {}),\n    });\n  }\n\n  /**\n   * saveItem - method that emits the data when saved.\n   */\n  saveItem() {\n    this.submitted = true;\n    if (this.contactsForm.valid) {\n      this.save.emit({ ...this.item, ...(this.contactsForm ? this.contactsForm.value : {}) });\n    } else {\n      this.contactsForm.markAllAsTouched();\n    }\n  }\n\n  /**\n   * emits the id of the contact that has cancelled.\n   */\n  cancel() {\n    this.cancelEdit.emit(this.item.id);\n  }\n\n  /**\n   * emits the id, when back is clicked.\n   */\n  back() {\n    this.backEvent.emit(this.item.id);\n  }\n\n  get name(): AbstractControl | null {\n    return this.contactsForm.get('name');\n  }\n\n  get iban(): AbstractControl | null {\n    return this.contactsForm.get('IBAN');\n  }\n\n  get accountNumber(): AbstractControl | null {\n    return this.contactsForm.get('accountNumber');\n  }\n\n  /**\n   *  the id of the contact is emitted when deleted.\n   */\n  deleteItemEmit() {\n    this.deleteContactsItem.emit(this.item.id);\n  }\n}\n\n/**\n * This is an extension slot to be used for customizing an form of contacts editing.\n *\n * @usageNotes\n *\n * ### Display a contact form.\n *\n * ```html\n *  <bb-contacts-detail\n *   [showDetail]=\"false\"\n *   [item]=\"hostRef.item\"\n *   [type]=\"hostRef.type\"\n *   (deleteContactsItem)=\"hostRef.deleteItemEmit()\"\n * ></bb-contacts-detail>\n * <form\n *  *ngIf=\"hostRef.contactsForm\"\n *   (submit)=\"hostRef.saveItem()\"\n *   [formGroup]=\"hostRef.contactsForm\"\n *   class=\"bb-block bb-block--xl\"\n * >\n *   <fieldSet>\n *     <div class=\"row\">\n *       <div\n *         class=\"bb-block bb-block--lg col-12\"\n *         data-role=\"contact-account-info-account-name1\"\n *       >\n *         <label\n *           [for]=\"contactsName.id\"\n *           data-role=\"edit-contact-label\"\n *           i18n=\"Contacts name label | Label for contacts detail component name@@contact-manager-form.label.name\"\n *         >\n *           Name\n *         </label>\n *         <bb-input-text-ui\n *           data-role=\"new-contact-name\"\n *           [formControl]=\"hostRef.contactsForm.controls.name\"\n *           name=\"contactsName\"\n *           #contactsName\n *           [maxLength]=\"140\"\n *           [required]=\"hostRef.submitted\"\n *         >\n *         </bb-input-text-ui>\n *\n *         <bb-input-validation-message-ui\n *           role=\"alert\"\n *           [showErrors]=\"\n *             hostRef.contactsForm.controls.name.invalid &&\n *             (hostRef.contactsForm.controls.name.dirty || hostRef.contactsForm.controls.name.touched)\n *           \">\n *           <ng-container\n *           *ngIf=\"hostRef.contactsForm.controls.name.errors?.required || hostRef.contactsForm.controls.name.errors?.minlength\">\n *             <span\n *               i18n=\"\n *                 Contacts name required error text | Text for contacts detail component name required\n *                 error@@contact-manager-form.label.nameRequired\n *               \"\n *               data-role=\"missing-account-name\">\n *               Name is required\n *             </span>\n *           </ng-container>\n *         </bb-input-validation-message-ui>\n *       </div>\n *       <div class=\"bb-block bb-block--lg col-12\">\n *         <ng-container [ngSwitch]=\"hostRef.type\">\n *           <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.IBAN\">\n *             <ng-container *ngTemplateOutlet=\"iban\"></ng-container>\n *           </ng-container>\n *           <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.EMAIL\">\n *             <ng-container *ngTemplateOutlet=\"email\"></ng-container>\n *           </ng-container>\n *           <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.PHONE\">\n *             <ng-container *ngTemplateOutlet=\"phone\"></ng-container>\n *           </ng-container>\n *           <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.ACCOUNT\">\n *             <ng-container *ngTemplateOutlet=\"bban\"></ng-container>\n *           </ng-container>\n *           <ng-container *ngSwitchDefault>\n *             <ng-container *ngTemplateOutlet=\"iban\"></ng-container>\n *           </ng-container>\n *         </ng-container>\n *\n *       </div>\n *     </div>\n *   </fieldSet>\n *   <div class=\"bb-button-bar\">\n *     <button\n *       bbButton\n *       type=\"submit\"\n *       color=\"primary\"\n *       type=\"submit\"\n *       [disabled]=\"hostRef.contactsForm.invalid || !hostRef.contactsForm?.controls?.name?.value.trim()\"\n *       class=\"bb-button-bar__button\"\n *       name=\"save\"\n *       data-role=\"save-button\"\n *       i18n=\"Save current form | Save button text for saving a contact item@@contact-manager-form.button.save\"\n *     >\n *       Save\n *     </button>\n *     <button\n *     bbButton\n *     color=\"secondary\"\n *     (click)=\"hostRef.back()\"\n *     type=\"button\"\n *     class=\"bb-button-bar__button\"\n *     name=\"back\"\n *     data-role=\"contacts-form-back-button\"\n *     i18n=\"\n *       Back action in current form | Back button text for going back to selection@@contact-manager-form.button.back\n *     \"\n *   >\n *     Back\n *   </button>\n *     <button\n *       bbButton\n *       color=\"link-text\"\n *       (click)=\"hostRef.cancel()\"\n *       type=\"button\"\n *       class=\"bb-button-bar__button bb-button-bar__button--across\"\n *       name=\"cancel\"\n *       data-role=\"contacts-form-cancel-button\"\n *       i18n=\"\n *         Cancel action in current form | Cancel button text for cancelling a creation of a new\n *         contact@@contact-manager-form.button.cancel\n *       \"\n *     >\n *       Cancel\n *     </button>\n *   </div>\n * </form>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Directive({\n  selector: '[bbContactsFormCustomizable]',\n})\nexport class ContactsFormCustomizableDirective extends BbTemplate<ContactsFormComponent, ContactsFormItem> {}\n","<ng-container bbContactsFormCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"item\"></ng-container>\n<ng-template bbContactsFormCustomizable let-hostRef>\n  <bb-contacts-detail\n    [showDetail]=\"false\"\n    [item]=\"hostRef.item\"\n    [type]=\"hostRef.type\"\n    (deleteContactsItem)=\"hostRef.deleteItemEmit()\"\n  ></bb-contacts-detail>\n  <bb-loading-indicator-ui *ngIf=\"hostRef.disabledSubmit\"></bb-loading-indicator-ui>\n  <form\n    *ngIf=\"hostRef.contactsForm\"\n    [hidden]=\"hostRef.disabledSubmit\"\n    (submit)=\"hostRef.saveItem()\"\n    [formGroup]=\"hostRef.contactsForm\"\n    class=\"bb-block bb-block--xl\"\n  >\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--xl col-12\" data-role=\"contact-account-info-account-name1\">\n        <bb-input-text-ui\n          id=\"bb-create-contact-name\"\n          data-role=\"new-contact-name\"\n          label=\"Name\"\n          i18n-label=\"Contacts name label | Label for contacts detail component name@@contact-manager-form.label.name\"\n          [formControl]=\"hostRef.contactsForm.controls.name\"\n          [maxLength]=\"140\"\n          [required]=\"true\"\n          bbNoWhiteSpace\n        >\n        </bb-input-text-ui>\n        <bb-input-validation-message-ui\n          class=\"position-absolute\"\n          role=\"alert\"\n          [showErrors]=\"hostRef.contactsForm.controls.name.errors?.required && hostRef.contactsForm.controls.name.touched\"\n        >\n          <span\n            i18n=\"\n                Contacts name required error text | Text for contacts detail component name required\n                error@@contact-manager-form.label.nameRequired\n              \"\n            data-role=\"missing-account-name\"\n          >\n            Name is required\n          </span>\n        </bb-input-validation-message-ui>\n      </div>\n      <div class=\"bb-block bb-block--xl col-12\">\n        <ng-container [ngSwitch]=\"hostRef.type\">\n          <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.IBAN\">\n            <ng-container *ngTemplateOutlet=\"iban\"></ng-container>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.EMAIL\">\n            <ng-container *ngTemplateOutlet=\"email\"></ng-container>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.PHONE\">\n            <ng-container *ngTemplateOutlet=\"phone\"></ng-container>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.ACCOUNT\">\n            <ng-container *ngTemplateOutlet=\"bban\"></ng-container>\n          </ng-container>\n          <ng-container *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"iban\"></ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"bb-button-bar bb-button-bar--spacing-sm\">\n      <button\n        bbButton\n        class=\"bb-button-bar__button\"\n        type=\"submit\"\n        color=\"primary\"\n        name=\"save\"\n        data-role=\"save-button\"\n        i18n=\"Save current form | Save button text for saving a contact item@@contact-manager-form.button.save\"\n        [disabled]=\"hostRef.submitted && hostRef.contactsForm.invalid || hostRef.disabledSubmit\"\n      >\n        Save\n      </button>\n      <button\n        bbButton\n        color=\"secondary\"\n        type=\"button\"\n        class=\"bb-button-bar__button\"\n        name=\"back\"\n        data-role=\"contacts-form-back-button\"\n        i18n=\"\n        Back action in current form | Back button text for going back to selection@@contact-manager-form.button.back\n      \"\n        (click)=\"hostRef.back()\"\n      >\n        Back\n      </button>\n      <button\n        bbButton\n        color=\"link-text\"\n        type=\"button\"\n        class=\"bb-button-bar__button bb-button-bar__button--across\"\n        name=\"cancel\"\n        data-role=\"contacts-form-cancel-button\"\n        i18n=\"\n          Cancel action in current form | Cancel button text for cancelling a creation of a new\n          contact@@contact-manager-form.button.cancel\n        \"\n        (click)=\"hostRef.cancel()\"\n      >\n        Cancel\n      </button>\n    </div>\n  </form>\n\n  <ng-template #iban>\n    <bb-input-text-ui\n      id=\"bb-create-contact-iban\"\n      label=\"IBAN\"\n      i18n-label=\"@@contact-manager-form.label.bban\"\n      data-role=\"new-contact-iban\"\n      [formControl]=\"hostRef.contactsForm.controls.IBAN\"\n      [maxLength]=\"hostRef.ibanMask.length\"\n      [required]=\"true\"\n      [mask]=\"hostRef.ibanMask\"\n      [maskValidator]=\"false\"\n      bbIbanValidator\n    >\n    </bb-input-text-ui>\n\n    <ng-container\n      *ngTemplateOutlet=\"err; context:{ control: hostRef.contactsForm.controls.IBAN, errorMessageAcctType: hostRef.type }\"\n    >\n    </ng-container>\n\n    <bb-input-validation-message-ui\n      class=\"position-absolute\"\n      role=\"alert\"\n      [showErrors]=\"hostRef.contactsForm.controls.IBAN.touched\n      && hostRef.contactsForm.controls.IBAN.errors?.invalidIban\"\n    >\n      <ng-container>\n        <span\n          i18n=\"\n            Contacts account number invalid error text | Text for contacts detail component iban invalid\n            error@@contact-manager-form.label.ibanInvalid\n          \"\n          data-role=\"invalid-account-number-error-label\"\n        >\n          Invalid IBAN\n        </span>\n      </ng-container>\n    </bb-input-validation-message-ui>\n  </ng-template>\n\n  <ng-template #bban>\n    <bb-input-text-ui\n      id=\"bb-create-contact-bban\"\n      label=\"Account number\"\n      i18n-label=\"@@contact-manager-form.label.account.number\"\n      data-role=\"new-contact-bban\"\n      [formControl]=\"hostRef.contactsForm.controls.accountNumber\"\n      [maxLength]=\"34\"\n      [required]=\"true\"\n    >\n    </bb-input-text-ui>\n\n    <ng-container\n      *ngTemplateOutlet=\"err; context:{ control: hostRef.contactsForm.controls.accountNumber, errorMessageAcctType: hostRef.type }\"\n    >\n    </ng-container>\n  </ng-template>\n\n  <ng-template #email>\n    <label\n      #contactsEmailLabel\n      id=\"bb-create-contact-email-label\"\n      data-role=\"contact-account-create-email-label\"\n      i18n=\"@@contact-personal-data.contactEmail.label\"\n      class=\"mb-2\"\n    >\n      Email\n      <small class=\"d-block bb-text-support bb-text-default\">E.g. sarawilliams@backbase.com</small>\n    </label>\n    <bb-input-email-ui\n      [aria-labelledby]=\"contactsEmailLabel.id\"\n      [formControl]=\"hostRef.contactsForm.controls.email\"\n      [maxLength]=\"255\"\n      [required]=\"true\"\n      data-role=\"new-contact-email\"\n      bbEmailDomainValidator\n    >\n    </bb-input-email-ui>\n\n    <ng-container\n      *ngTemplateOutlet=\"err; context:{ control: hostRef.contactsForm.controls.email, errorMessageAcctType: hostRef.type }\"\n    >\n    </ng-container>\n    <bb-input-validation-message-ui\n      class=\"position-absolute\"\n      role=\"alert\"\n      [showErrors]=\"hostRef.contactsForm.controls.email.touched\n      && hostRef.contactsForm.controls.email.errors?.email\"\n    >\n      <ng-container>\n        <span\n          i18n=\"\n          Contacts email id invalid error text | Text for contacts detail component email invalid\n          error@@contact-manager-form.label.email.invalid\n        \"\n          data-role=\"invalid-email-error-label\"\n        >\n          Invalid email\n        </span>\n      </ng-container>\n    </bb-input-validation-message-ui>\n  </ng-template>\n\n  <ng-template #phone>\n    <label\n      #contactsPhoneLabel\n      id=\"bb-create-contact-phone-label\"\n      data-role=\"contact-account-create-phone\"\n      i18n=\"@@contact-manager-form.label.phoneNumber\"\n      class=\"mb-2\"\n    >\n      Phone number\n      <small id=\"example-number\" class=\"d-block bb-text-support bb-text-default\">E.g. +12027953213</small>\n    </label>\n    <bb-input-text-ui\n      [formControl]=\"hostRef.contactsForm.controls.phoneNumber\"\n      [maxLength]=\"30\"\n      [required]=\"true\"\n      [aria-labelledby]=\"contactsPhoneLabel.id\"\n      aria-describedby=\"example-number\"\n      data-role=\"new-contact-phone\"\n    >\n    </bb-input-text-ui>\n    <ng-container\n      *ngTemplateOutlet=\"err; context:{ control: hostRef.contactsForm.controls.phoneNumber && hostRef.contactsForm.controls.phoneNumber, errorMessageAcctType: hostRef.type }\"\n    >\n    </ng-container>\n  </ng-template>\n\n  <ng-template #err let-control=\"control\" let-errorMessageAcctType=\"errorMessageAcctType\">\n    <bb-input-validation-message-ui\n      class=\"position-absolute\"\n      role=\"alert\"\n      [showErrors]=\"control.errors?.required\n    && control.touched\n\"\n    >\n      <ng-container [ngSwitch]=\"errorMessageAcctType\">\n        <span\n          *ngSwitchCase=\"hostRef.createAccountTypeRef.ACCOUNT\"\n          i18n=\"\n            Contacts account number required error text | Text for contacts detail component account number required\n            error@@contact-manager-form.label.account.required\n          \"\n          data-role=\"missing-account-number-error-label\"\n        >\n          Account number is required\n        </span>\n        <span\n          *ngSwitchCase=\"hostRef.createAccountTypeRef.IBAN\"\n          i18n=\"\n            Contacts IBAN required error text | Text for contacts detail component IBAN required\n            error@@contact-manager-form.label.iban.required\n          \"\n          data-role=\"missing-account-number-error-label\"\n        >\n          IBAN is required\n        </span>\n        <span\n          *ngSwitchCase=\"hostRef.createAccountTypeRef.PHONE\"\n          i18n=\"\n            Contacts Phone number required error text | Text for contacts detail component Phone required\n            error@@contact-manager-form.label.phone.number.required\n          \"\n          data-role=\"missing-phone-number-error-label\"\n        >\n          Phone number is required\n        </span>\n        <span\n          *ngSwitchCase=\"hostRef.createAccountTypeRef.EMAIL\"\n          i18n=\"\n            Contacts EMAIL required error text | Text for contacts detail component Email required\n            error@@contact-manager-form.label.email.required\n          \"\n          data-role=\"missing-email-error-label\"\n        >\n          Email is required\n        </span>\n      </ng-container>\n    </bb-input-validation-message-ui>\n  </ng-template>\n</ng-template>\n"]}