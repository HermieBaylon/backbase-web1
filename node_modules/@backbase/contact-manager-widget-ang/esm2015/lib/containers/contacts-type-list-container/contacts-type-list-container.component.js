import { Component } from '@angular/core';
import { combineLatest } from 'rxjs';
import { map, tap } from 'rxjs/operators';
import { AccountCreateType } from '../../models/types';
import { ContactsService } from '../../services/contacts.service';
import { ContactManagerPreferencesService } from '../../services/contacts-preferences.service';
import * as i0 from "@angular/core";
import * as i1 from "../../services/contacts.service";
import * as i2 from "../../services/contacts-preferences.service";
import * as i3 from "../../components/contact-select-account-type/contact-select-account-type.component";
import * as i4 from "@angular/common";
/**
 *
 * Container component for showing contact list.
 *
 * @usageNotes
 *
 * ### Display list of all the types of contacts to select before creation.
 *
 * ```html
 * <bb-contacts-type-list-container></bb-contacts-type-list-container>
 * ```
 * ### Additionally use the container component in routing.
 *
 * ```typescript
 * const routes: [
 * {
 *  path: 'select',
 *  component: ContactsTypeListContainerComponent
 * }]
 *
 *
 * @ngModule ContactManagerWidgetModule
 */
export class ContactsTypeListContainerComponent {
    constructor(contactService, propertiesService) {
        this.contactService = contactService;
        this.propertiesService = propertiesService;
        /**
         * property from user if the contact creation through email is allowed
         */
        this.allowEmail$ = this.propertiesService.createContactEmail$;
        /**
         * property from user if the contact creation through IBAN is allowed
         */
        this.allowIBAN$ = this.propertiesService.createContactIBAN$;
        /**
         * property from user if the contact creation through Account Number is allowed
         */
        this.allowAccount$ = this.propertiesService.createContactAccount$;
        /**
         * property from user if the contact creation through Phone Number is allowed
         */
        this.allowPhone$ = this.propertiesService.createContactPhone$;
        /**
         * check which properties are allowed and showing them on screen.
         */
        this.createContactList$ = combineLatest([
            this.allowAccount$,
            this.allowIBAN$,
            this.allowPhone$,
            this.allowEmail$,
        ]).pipe(tap((contactListItem) => (this.noOfItemsinList = contactListItem.filter((listItem) => listItem && typeof listItem === 'boolean').length)), map(([Account, IBAN, Phone, Email]) => [
            {
                listItem: AccountCreateType.ACCOUNT,
                enableItem: Account === null || Account === void 0 ? void 0 : Account.valueOf(),
            },
            {
                listItem: AccountCreateType.IBAN,
                enableItem: IBAN === null || IBAN === void 0 ? void 0 : IBAN.valueOf(),
            },
            { listItem: AccountCreateType.PHONE, enableItem: Phone === null || Phone === void 0 ? void 0 : Phone.valueOf() },
            { listItem: AccountCreateType.EMAIL, enableItem: Email === null || Email === void 0 ? void 0 : Email.valueOf() },
        ]));
    }
}
/** @nocollapse */ ContactsTypeListContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ContactsTypeListContainerComponent, deps: [{ token: i1.ContactsService }, { token: i2.ContactManagerPreferencesService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ ContactsTypeListContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ContactsTypeListContainerComponent, selector: "bb-contacts-type-list-container", ngImport: i0, template: "<bb-contact-account-select-type [listOfAccountTypes]=\"createContactList$ | async\" [noOfItemsinList]=\"noOfItemsinList\">\n</bb-contact-account-select-type>\n", components: [{ type: i3.ContactSelectAccountTypeComponent, selector: "bb-contact-account-select-type", inputs: ["listOfAccountTypes", "noOfItemsinList"], outputs: ["selectedAccountType"] }], pipes: { "async": i4.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ContactsTypeListContainerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-contacts-type-list-container',
                    templateUrl: './contacts-type-list-container.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.ContactsService }, { type: i2.ContactManagerPreferencesService }]; } });
//# sourceMappingURL=contacts-type-list-container.component.js.map