{"version":3,"file":"contacts-list-container.component.js","sourceRoot":"","sources":["../../../../../../../libs/contact-manager-widget-ang/src/lib/containers/contacts-list-container/contacts-list-container.component.ts","../../../../../../../libs/contact-manager-widget-ang/src/lib/containers/contacts-list-container/contacts-list-container.component.html"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of, Subject, Subscription } from 'rxjs';\nimport {\n  catchError,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  map,\n  shareReplay,\n  startWith,\n  tap,\n} from 'rxjs/operators';\n\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { ContactList, ContactsService, ItemId, ListParams, PageParams } from '../../services/contacts.service';\nimport { ContactItem, LoadMoreMethod } from '@backbase/contact-common-ang';\nimport { ContactsNavigationService, View } from '../../services/contacts-navigation.service';\nimport { ActivatedRoute, Event, NavigationEnd, ParamMap, Router } from '@angular/router';\nimport { FormControl } from '@angular/forms';\nimport { Property } from '@backbase/foundation-ang/web-sdk';\nimport { ContactManagerPreferencesService } from '../../services/contacts-preferences.service';\n\n/**\n * The following extension slots are available in this component:\n *  - `ContactsListContainerCustomizableDirective`\n *  - `ContactsTopSectionCustomizableDirective`\n *  - `ContactsLoadMoreCustomizableDirective`\n *  - `ContactsLoadingCustomizableDirective`\n *  - `ContactsEmptyStateCustomizableDirective`\n *  - `ContactsEmptySearchStateCustomizableDirective`\n *  - `ContactsErrorStateCustomizableDirective`\n *\n * @see ContactsListContainerCustomizableDirective\n * @see ContactsTopSectionCustomizableDirective\n * @see ContactsLoadMoreCustomizableDirective\n * @see ContactsLoadingCustomizableDirective\n * @see ContactsEmptyStateCustomizableDirective\n * @see ContactsEmptySearchStateCustomizableDirective\n * @see ContactsErrorStateCustomizableDirective\n * Container component for showing contact list.\n * @usageNotes\n *\n * ### Display list of all the contacts with details / edit form.\n *\n * ```html\n * <bb-contacts-list-container>\n *  <router-outlet></router-outlet>\n * </bb-contacts-list-container>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Component({\n  selector: 'bb-contacts-list-container',\n  templateUrl: 'contacts-list-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactsListContainerComponent implements OnInit, OnDestroy {\n  firstContactEdit = false;\n  error?: HttpErrorResponse;\n  subscription!: Subscription;\n  isSearchBoxVisible = true;\n  readonly searchTerm = new FormControl();\n  readonly containerlistParams = new BehaviorSubject<string>('');\n  readonly debounceSearch$ = new Subject<string>();\n\n  readonly hostRef: ContactsListContainerComponent = this;\n  readonly newContactAllowed: Observable<boolean> = this.propertiesService.newContact$;\n  readonly pageSize: Observable<number> = this.propertiesService.pageSize$;\n  readonly maxNavPages: Observable<number> = this.propertiesService.maxNavPages$;\n  readonly paginationType: Observable<string> = this.propertiesService.paginationType$;\n\n  readonly isListView: Observable<boolean> = this.router.events.pipe(\n    filter<Event, NavigationEnd>((e: Event): e is NavigationEnd => e instanceof NavigationEnd),\n    map((e: NavigationEnd): string => e.url),\n    startWith(this.router.url),\n    map(() => {\n      const isList = this.navigation.currentView === View.List;\n      if (isList) {\n        this.firstContactEdit = false;\n      }\n\n      return isList;\n    }),\n    shareReplay(),\n  );\n\n  readonly pagination: Observable<PageParams> = combineLatest([this.route.queryParamMap, this.pageSize]).pipe(\n    map(([params, pageSize]) => this.pageParamsFromRoute(params, pageSize)),\n  );\n\n  readonly items: Observable<ContactList | undefined> = this.service.items.pipe(\n    tap((results) => {\n      this.isSearchBoxVisible = !!this.searchTerm.value ? true : results.contacts.length > 0;\n      results.contacts.sort((a: ContactItem, b: ContactItem) =>\n        a.name.toLocaleUpperCase().trim() > b.name.toLocaleUpperCase().trim() ? 1 : -1,\n      );\n    }),\n    catchError((error) => {\n      this.error = error;\n\n      return of(undefined);\n    }),\n  );\n  /**\n   * Observable of currently selected item id\n   */\n  readonly selectedItemId: Observable<ItemId | null> = this.service.currentlySelectedItemId;\n  private readonly listParams: Observable<ListParams> = combineLatest([\n    this.containerlistParams,\n    this.pagination,\n    this.pageSize,\n    this.paginationType,\n  ]).pipe(\n    map(([method, paginationParams, pageSize, paginationType]) => {\n      if (method === LoadMoreMethod.LOAD_MORE && paginationType === LoadMoreMethod.LOAD_MORE) {\n        paginationParams.from++;\n        paginationParams.size = pageSize;\n      }\n\n      return {\n        paginationParams,\n        paginationType,\n        method,\n      };\n    }),\n    map(\n      ({ paginationParams, paginationType, method }): ListParams => ({\n        pagination: {\n          from: paginationParams.from,\n          size: paginationParams.size,\n          query: paginationParams.query,\n        },\n        paginationType,\n        method,\n      }),\n    ),\n  );\n\n  constructor(\n    private readonly service: ContactsService,\n    private readonly navigation: ContactsNavigationService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    private readonly propertiesService: ContactManagerPreferencesService,\n  ) {}\n\n  ngOnInit() {\n    this.subscription = this.listParams.subscribe((params) => {\n      return this.service.updateItemList(\n        params.pagination.query,\n        params.pagination.from,\n        params.pagination.size,\n        params.paginationType,\n        params.method,\n      );\n    });\n    this.subscription.add(\n      this.debounceSearch$\n        .pipe(debounceTime(300), distinctUntilChanged())\n        .subscribe((term: string) => this.searchContacts(term)),\n    );\n  }\n\n  /**\n   * Event handler for search box value change\n   *\n   * @param {string} phrase text to search for\n   */\n  onSearchTermChange(phrase: string) {\n    this.debounceSearch$.next(phrase);\n  }\n\n  /**\n   * Event handler for search box clear\n   */\n  clearSearch() {\n    this.debounceSearch$.next('');\n  }\n\n  /**\n   * Queries contacts with given phrase\n   *\n   * @param {string} phrase text to search for\n   */\n  searchContacts(phrase: string) {\n    this.containerlistParams.next('search');\n    this.navigation.list(0, phrase); // TODO: Remove query params when migrating widget\n  }\n\n  /**\n   * Navigates to list page.\n   *\n   * @param {number} page Current page number.\n   */\n  onPageChange(page: number) {\n    this.navigation.list(page);\n  }\n\n  /**\n   * Updat the list parameter as load more.\n   */\n  loadMore() {\n    this.containerlistParams.next('load-more');\n  }\n\n  /**\n   * Routes to selected contact details.\n   *\n   * @param {string} id  Contact ID\n   */\n  select(id: string) {\n    this.navigation.select(id);\n  }\n\n  /**\n   * Routes to new contact.\n   *\n   * @param {number} totalContacts - total number of contacts.\n   */\n  newContact(totalContacts: number) {\n    this.firstContactEdit = !totalContacts;\n    this.navigation.newContact();\n    this.navigation.currentView = View.Select;\n  }\n\n  /**\n   * method to return back to list view.\n   */\n  backToList() {\n    this.navigation.currentView = View.List;\n    this.navigation.list();\n  }\n\n  private pageParamsFromRoute(query: ParamMap, pageSize?: Property): PageParams {\n    const from = query.get('page');\n    this.searchTerm.setValue(query.get('query') || '');\n\n    return {\n      from: (from && Number.parseInt(from, 10)) || 0,\n      size: pageSize ? Number(pageSize) : 5,\n      query: this.searchTerm.value || '',\n    };\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","<div class=\"card card-body\" data-role=\"loading-label\">\n  <ng-container *ngIf=\"items | async as items; else loadingTemplate\">\n    <div\n      class=\"bb-block bb-block--md\"\n      [ngClass]=\"{\n        'd-none d-lg-block': !(isListView | async)\n      }\"\n    >\n      <div class=\"row\">\n        <ng-container bbContactsTopSectionCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"items\"></ng-container>\n      </div>\n    </div>\n    <div *ngIf=\"!(isListView | async)\" class=\"row d-block d-lg-none\">\n      <button bbButton color=\"unstyled\" (click)=\"backToList()\" class=\"bb-text-bold text-primary\">\n        <bb-icon-ui name=\"angle-left\"></bb-icon-ui>\n        <span i18n=\"Back to list view|Span for going back to list view@@contact-manager.span.backToList\">\n          Back to list\n        </span>\n      </button>\n    </div>\n    <div\n      class=\"row bb-block bb-block--md\"\n      *ngIf=\"(items && items.contacts.length > 0) || hostRef.firstContactEdit; else emptyTemplate\"\n    >\n      <ng-container\n        bbContactsListContainerCustomizable\n        [bbHostRef]=\"hostRef\"\n        [bbTemplateContext]=\"items\"\n      ></ng-container>\n      <div\n        class=\"col col-lg-6\"\n        [ngClass]=\"{\n          'd-none d-lg-block': isListView | async\n        }\"\n      >\n        <ng-content></ng-content>\n      </div>\n    </div>\n    <div\n      class=\"row\"\n      [ngClass]=\"{\n        'd-none d-lg-block': !(isListView | async)\n      }\"\n    >\n      <div class=\"col-lg-6\">\n        <ng-container bbContactsLoadMoreCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"items\"></ng-container>\n        <ng-template bbContactsLoadMoreCustomizable let-hostRef let-items=\"context\">\n          <bb-pagination-ui\n            *ngIf=\"(hostRef.paginationType | async) !== 'load-more'\"\n            class=\"bb-pagination\"\n            [page]=\"(hostRef.pagination | async)?.from\"\n            [boundaryLinks]=\"false\"\n            [directionLinks]=\"true\"\n            [totalItems]=\"items?.count\"\n            [itemsPerPage]=\"hostRef.pageSize | async\"\n            [maxNavPages]=\"hostRef.maxNavPages | async\"\n            (pageChange)=\"hostRef.onPageChange($event)\"\n          ></bb-pagination-ui>\n          <div\n            class=\"p-5 text-center\"\n            *ngIf=\"(hostRef.paginationType | async) === 'load-more' && items.contacts.length > 0\"\n          >\n            <bb-load-button-ui\n              class=\"bb-block bb-block--md\"\n              color=\"secondary\"\n              data-role=\"contact-load-more\"\n              *ngIf=\"items.count && items.count > items.contacts.length\"\n              (click)=\"hostRef.loadMore()\"\n            >\n              <ng-container\n                i18n=\"Load more button label | Load more button shown down bellow contact list@@contact-manager.load-more.label\"\n              >\n                Load more\n              </ng-container>\n            </bb-load-button-ui>\n          </div>\n        </ng-template>\n      </div>\n    </div>\n  </ng-container>\n\n  <ng-template bbContactsListContainerCustomizable let-hostRef let-items=\"context\">\n    <div\n      class=\"col\"\n      [ngClass]=\"{\n        'd-block': hostRef.isListView | async,\n        'd-lg-block d-none': !(hostRef.isListView | async)\n      }\"\n    >\n      <bb-contacts-list-widget\n        [items]=\"items.contacts\"\n        [selectedItemId]=\"hostRef.selectedItemId | async\"\n        [showAlias]=\"false\"\n        (selectedChange)=\"hostRef.select($event)\"\n      >\n      </bb-contacts-list-widget>\n    </div>\n  </ng-template>\n\n  <ng-template bbContactsTopSectionCustomizable let-hostRef let-items=\"context\">\n    <div class=\"col bb-stack\">\n      <div class=\"bb-stack__item bb-stack__item--fill\">\n        <bb-search-box-ui\n          *ngIf=\"hostRef.isSearchBoxVisible\"\n          class=\"bb-toolbar__item\"\n          data-role=\"contact-manager-search\"\n          placeholder=\"Search\"\n          i18n-placeholder=\"Search box placeholder | Placeholder for search box@@contact-manager.placeholder.search\"\n          aria-label=\"Search\"\n          i18n-aria-label=\"@@contact-manager.placeholder.search\"\n          [showSearch]=\"true\"\n          [showClear]=\"true\"\n          [formControl]=\"hostRef.searchTerm\"\n          (valueChange)=\"hostRef.onSearchTermChange($event)\"\n          (submit)=\"hostRef.searchContacts(hostRef.searchTerm.value)\"\n          (keyup.enter)=\"hostRef.searchContacts(hostRef.searchTerm.value)\"\n          (clear)=\"hostRef.clearSearch()\"\n        ></bb-search-box-ui>\n        <div class=\"sr-only\" aria-live=\"assertive\">\n          <p i18n=\"@@contact-manager.list.results-found\">\n            {items.count || 0, plural, =1 {1 result found} other {{{items.count}} results found}}\n          </p>\n        </div>\n      </div>\n      <div class=\"bb-stack__item align-self-start\">\n        <button\n          bbButton\n          i18n=\"New Contact Button | Button for creating a new contact@@contact-manager.button.newContact\"\n          data-role=\"new-contact-button\"\n          class=\"d-block bb-button-bar__button\"\n          [disabled]=\"!(hostRef.newContactAllowed | async)\"\n          (click)=\"hostRef.newContact(items.contacts.length)\"\n          type=\"button\"\n        >\n          New Contact\n        </button>\n      </div>\n    </div>\n    <ng-template #rt let-result=\"result\" let-term=\"term\">\n      <div class=\"text-truncate\" [title]=\"result\">\n        <ngb-highlight [result]=\"result\" [term]=\"term\"></ngb-highlight>\n      </div>\n    </ng-template>\n  </ng-template>\n\n  <ng-template bbContactsLoadingCustomizable let-hostRef>\n    <div class=\"bb-state-container\">\n      <bb-loading-indicator-ui\n        i18n-text=\"@@contact-manager.loading.label\"\n        text=\"Loading contacts...\"\n        data-role=\"contact-manager-loading\"\n      ></bb-loading-indicator-ui>\n    </div>\n  </ng-template>\n\n  <ng-template #loadingTemplate>\n    <ng-container *ngIf=\"!error; else errorTemplate\" bbContactsLoadingCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n  </ng-template>\n\n  <ng-template bbContactsEmptyStateCustomizable let-hostRef>\n    <div class=\"bb-state-container\">\n      <bb-empty-state-ui\n        i18n-title=\"@@contact-manager.state.noContactsLoaded.title\"\n        title=\"No contacts\"\n        i18n-subtitle=\"@@contact-manager.state.noContactsLoaded.subtitle\"\n        subtitle=\"You don't have any contacts to display yet.<br>Try adding a new contact using the 'New Contact' button\"\n        iconClasses=\"d-flex justify-content-center mb-3\"\n        iconModifier=\"contacts\"\n        iconSize=\"xxl\"\n        data-role=\"contact-manager-empty\"\n      ></bb-empty-state-ui>\n    </div>\n  </ng-template>\n\n  <ng-template #emptyTemplate>\n    <ng-container\n      *ngIf=\"!hostRef.searchTerm.value; else emptySearchTemplate\"\n      bbContactsEmptyStateCustomizable\n      [bbHostRef]=\"hostRef\"\n    ></ng-container>\n  </ng-template>\n\n  <ng-template bbContactsEmptySearchStateCustomizable let-hostRef let-term=\"context\">\n    <div class=\"bb-state-container\">\n      <bb-empty-state-ui\n        i18n-title=\"@@contact-manager.state.empty-search.title\"\n        title=\"No results found\"\n        i18n-subtitle=\"@@contact-manager.state.empty-search.subtitle\"\n        subtitle=\"We can't find what you're looking for. Please try a different criteria.\"\n        iconClasses=\"d-flex justify-content-center mb-3\"\n        iconModifier=\"search\"\n        iconColor=\"primary\"\n        iconSize=\"xxl\"\n        data-role=\"contact-manager-list-search-empty\"\n      ></bb-empty-state-ui>\n    </div>\n  </ng-template>\n\n  <ng-template #emptySearchTemplate>\n    <ng-container\n      bbContactsEmptySearchStateCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"searchTerm\"\n    ></ng-container>\n  </ng-template>\n\n  <ng-template bbContactsErrorStateCustomizable let-hostRef let-error=\"context\">\n    <div class=\"bb-state-container\">\n      <bb-common-error-state-ui [attr.data-role]=\"'contact-manager-error'\" [error]=\"error\"></bb-common-error-state-ui>\n    </div>\n  </ng-template>\n\n  <ng-template #errorTemplate>\n    <ng-container bbContactsErrorStateCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"error\"></ng-container>\n  </ng-template>\n</div>\n"]}