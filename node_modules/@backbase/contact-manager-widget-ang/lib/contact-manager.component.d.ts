import { RouterService } from '@backbase/foundation-ang/core';
import { Routes } from '@angular/router';
import { ContactsNavigationService } from './services/contacts-navigation.service';
import { ContactManagerPreferencesService } from './services/contacts-preferences.service';
import * as i0 from "@angular/core";
/**
 * Returns the new instance of contactnavigationservice.
 *
 * @param {RouterService} service router service
 * @returns {ContactsNavigationService} new service instance
 */
export declare function makeNavigationService(service: RouterService): ContactsNavigationService;
export declare const contactsRoutes: Routes;
export declare class ContactManagerWidgetComponent {
    private readonly preferencesService;
    /**
     * property to enable the creation of new contacts
     */
    set newContact(value: boolean);
    /**
     * Number of contacts per page
     */
    set pageSize(value: number);
    /**
     * Max. number of navigation pages
     */
    set maxNavPages(value: number);
    /**
     * Pagination type (pagination, load-more)
     */
    set paginationType(value: string);
    /**
     * Milliseconds to dismiss any notification message
     */
    set notificationDismissTime(value: number);
    /**
     * property from user if the contact creation through email is allowed
     */
    set createContactEmail(value: boolean);
    /**
     * property from user if the contact creation through IBAN is allowed
     */
    set createContactIBAN(value: boolean);
    /**
     * property from user if the contact creation through Account Number is allowed
     */
    set createContactAccount(value: boolean);
    /**
     * property from user if the contact creation through Phone Number is allowed
     */
    set createContactPhone(value: boolean);
    constructor(preferencesService: ContactManagerPreferencesService);
    static ɵfac: i0.ɵɵFactoryDeclaration<ContactManagerWidgetComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ContactManagerWidgetComponent, "bb-contacts, bb-contact-manager-widget", never, { "newContact": "newContact"; "pageSize": "pageSize"; "maxNavPages": "maxNavPages"; "paginationType": "paginationType"; "notificationDismissTime": "notificationDismissTime"; "createContactEmail": "createContactEmail"; "createContactIBAN": "createContactIBAN"; "createContactAccount": "createContactAccount"; "createContactPhone": "createContactPhone"; }, {}, never, never>;
}
