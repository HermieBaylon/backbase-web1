import { OnDestroy, OnInit } from '@angular/core';
import { BehaviorSubject, Observable, Subject, Subscription } from 'rxjs';
import { HttpErrorResponse } from '@angular/common/http';
import { ContactList, ContactsService, ItemId, PageParams } from '../../services/contacts.service';
import { ContactsNavigationService } from '../../services/contacts-navigation.service';
import { ActivatedRoute, Router } from '@angular/router';
import { FormControl } from '@angular/forms';
import { ContactManagerPreferencesService } from '../../services/contacts-preferences.service';
import * as i0 from "@angular/core";
/**
 * The following extension slots are available in this component:
 *  - `ContactsListContainerCustomizableDirective`
 *  - `ContactsTopSectionCustomizableDirective`
 *  - `ContactsLoadMoreCustomizableDirective`
 *  - `ContactsLoadingCustomizableDirective`
 *  - `ContactsEmptyStateCustomizableDirective`
 *  - `ContactsEmptySearchStateCustomizableDirective`
 *  - `ContactsErrorStateCustomizableDirective`
 *
 * @see ContactsListContainerCustomizableDirective
 * @see ContactsTopSectionCustomizableDirective
 * @see ContactsLoadMoreCustomizableDirective
 * @see ContactsLoadingCustomizableDirective
 * @see ContactsEmptyStateCustomizableDirective
 * @see ContactsEmptySearchStateCustomizableDirective
 * @see ContactsErrorStateCustomizableDirective
 * Container component for showing contact list.
 * @usageNotes
 *
 * ### Display list of all the contacts with details / edit form.
 *
 * ```html
 * <bb-contacts-list-container>
 *  <router-outlet></router-outlet>
 * </bb-contacts-list-container>
 * ```
 * @ngModule ContactManagerWidgetModule
 */
export declare class ContactsListContainerComponent implements OnInit, OnDestroy {
    private readonly service;
    private readonly navigation;
    private readonly router;
    private readonly route;
    private readonly propertiesService;
    firstContactEdit: boolean;
    error?: HttpErrorResponse;
    subscription: Subscription;
    isSearchBoxVisible: boolean;
    readonly searchTerm: FormControl;
    readonly containerlistParams: BehaviorSubject<string>;
    readonly debounceSearch$: Subject<string>;
    readonly hostRef: ContactsListContainerComponent;
    readonly newContactAllowed: Observable<boolean>;
    readonly pageSize: Observable<number>;
    readonly maxNavPages: Observable<number>;
    readonly paginationType: Observable<string>;
    readonly isListView: Observable<boolean>;
    readonly pagination: Observable<PageParams>;
    readonly items: Observable<ContactList | undefined>;
    /**
     * Observable of currently selected item id
     */
    readonly selectedItemId: Observable<ItemId | null>;
    private readonly listParams;
    constructor(service: ContactsService, navigation: ContactsNavigationService, router: Router, route: ActivatedRoute, propertiesService: ContactManagerPreferencesService);
    ngOnInit(): void;
    /**
     * Event handler for search box value change
     *
     * @param {string} phrase text to search for
     */
    onSearchTermChange(phrase: string): void;
    /**
     * Event handler for search box clear
     */
    clearSearch(): void;
    /**
     * Queries contacts with given phrase
     *
     * @param {string} phrase text to search for
     */
    searchContacts(phrase: string): void;
    /**
     * Navigates to list page.
     *
     * @param {number} page Current page number.
     */
    onPageChange(page: number): void;
    /**
     * Updat the list parameter as load more.
     */
    loadMore(): void;
    /**
     * Routes to selected contact details.
     *
     * @param {string} id  Contact ID
     */
    select(id: string): void;
    /**
     * Routes to new contact.
     *
     * @param {number} totalContacts - total number of contacts.
     */
    newContact(totalContacts: number): void;
    /**
     * method to return back to list view.
     */
    backToList(): void;
    private pageParamsFromRoute;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ContactsListContainerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ContactsListContainerComponent, "bb-contacts-list-container", never, {}, {}, never, ["*"]>;
}
