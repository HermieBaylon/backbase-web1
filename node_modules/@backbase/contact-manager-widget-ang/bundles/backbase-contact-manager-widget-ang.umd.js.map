{"version":3,"file":"backbase-contact-manager-widget-ang.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../libs/contact-manager-widget-ang/src/lib/models/types.ts","../../../../libs/contact-manager-widget-ang/src/lib/services/contacts-navigation.service.ts","../../../../libs/contact-manager-widget-ang/src/lib/services/contacts.service.ts","../../../../libs/contact-manager-widget-ang/src/lib/services/contacts-preferences.service.ts","../../../../libs/contact-manager-widget-ang/src/lib/directives/contacts-delete-confirmation-customizable.directive.ts","../../../../libs/contact-manager-widget-ang/src/lib/components/contacts-detail/contacts-detail.component.ts","../../../../libs/contact-manager-widget-ang/src/lib/components/contacts-detail/contacts-detail.component.html","../../../../libs/contact-manager-widget-ang/src/lib/directives/contacts-delete-success-notification-customizable.directive.ts","../../../../libs/contact-manager-widget-ang/src/lib/directives/contacts-delete-error-notification-customizable.directive.ts","../../../../libs/contact-manager-widget-ang/src/lib/containers/contacts-detail-container/contacts-detail-container.component.ts","../../../../libs/contact-manager-widget-ang/src/lib/containers/contacts-detail-container/contacts-detail-container.html","../../../../libs/contact-manager-widget-ang/src/lib/config.providers.ts","../../../../libs/contact-manager-widget-ang/src/lib/components/contacts-form/contacts-form.component.ts","../../../../libs/contact-manager-widget-ang/src/lib/components/contacts-form/contacts-form.component.html","../../../../libs/contact-manager-widget-ang/src/lib/directives/contacts-create-success-notification-customizable.directive.ts","../../../../libs/contact-manager-widget-ang/src/lib/directives/contacts-create-error-notification-customizable.directive.ts","../../../../libs/contact-manager-widget-ang/src/lib/directives/contacts-edit-success-notification-customizable.directive.ts","../../../../libs/contact-manager-widget-ang/src/lib/directives/contacts-edit-error-notification-customizable.directive.ts","../../../../libs/contact-manager-widget-ang/src/lib/directives/contacts-edit-discard-confirmation-customizable.directive.ts","../../../../libs/contact-manager-widget-ang/src/lib/containers/contacts-form-container/contacts-form-container.component.ts","../../../../libs/contact-manager-widget-ang/src/lib/containers/contacts-form-container/contacts-form-container.component.html","../../../../libs/contact-manager-widget-ang/src/lib/services/can-deactivate-guard.service.ts","../../../../libs/contact-manager-widget-ang/src/lib/components/contact-select-account-type/contact-select-account-type.component.ts","../../../../libs/contact-manager-widget-ang/src/lib/components/contact-select-account-type/contact-select-account-type.component.html","../../../../libs/contact-manager-widget-ang/src/lib/containers/contacts-type-list-container/contacts-type-list-container.component.ts","../../../../libs/contact-manager-widget-ang/src/lib/containers/contacts-type-list-container/contacts-type-list-container.component.html","../../../../libs/contact-manager-widget-ang/src/lib/components/contacts-list/list-item/contact-list-item.component.ts","../../../../libs/contact-manager-widget-ang/src/lib/components/contacts-list/list-item/contact-list-item.component.html","../../../../libs/contact-manager-widget-ang/src/lib/components/contacts-list/contact-list.component.ts","../../../../libs/contact-manager-widget-ang/src/lib/components/contacts-list/contact-list.component.html","../../../../libs/contact-manager-widget-ang/src/lib/containers/contacts-list-container/contacts-list-container.directive.ts","../../../../libs/contact-manager-widget-ang/src/lib/containers/contacts-list-container/contacts-list-container.component.ts","../../../../libs/contact-manager-widget-ang/src/lib/containers/contacts-list-container/contacts-list-container.component.html","../../../../libs/contact-manager-widget-ang/src/lib/contact-manager.component.ts","../../../../libs/contact-manager-widget-ang/src/lib/contact-manager.module.ts","../../../../libs/contact-manager-widget-ang/src/backbase-contact-manager-widget-ang.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Customizable, AccountInformation } from '@backbase/contact-common-ang';\nimport { ContactPutRequestBody as Contacts } from '@backbase/data-ang/contact-manager';\n\nexport interface ContactsFormItem extends Customizable {\n  /**\n   * contact ID\n   */\n  id: string;\n  /**\n   * Contact's first name\n   */\n  name: string;\n  /**\n   * Contacts lastname\n   */\n  surname?: string;\n  /**\n   * IBAN\n   */\n  IBAN?: string;\n  /**\n   * Contact's account Number.\n   */\n  accountNumber?: string;\n  /**\n   * contacts initials\n   */\n  initials?: string;\n  /**\n   * account Details.\n   */\n  accounts?: AccountInformation[];\n  /**\n   * contacts PhoneNumber.\n   */\n  phoneNumber?: string;\n  /**\n   * Contacts email ID.\n   */\n  email?: string;\n}\n\nexport interface SearchBoxSelectedEvent {\n  item: Contacts;\n  preventDefault: any;\n}\n\nexport interface SelectContactEvent {\n  /**\n   * Contacts ID\n   */\n  id: string;\n  /**\n   * Contacts type.\n   */\n  type: string;\n}\n\nexport enum AccountCreateType {\n  IBAN = 'IBAN',\n  EMAIL = 'email',\n  PHONE = 'phoneNumber',\n  ACCOUNT = 'accountNumber',\n}\n\nexport enum AccountTypeModelKey {\n  IBAN = 'IBAN',\n  BBAN = 'accountNumber',\n}\n\nexport interface CreateListType {\n  /**\n   * List of type of Contacts to create from\n   */\n  listItem: AccountCreateType;\n  /**\n   * To check if its enabled.\n   */\n  enableItem: boolean | undefined;\n}\n","import { Injectable } from '@angular/core';\nimport { RouterService } from '@backbase/foundation-ang/core';\nimport { AccountCreateType } from '../models/types';\n\nexport interface NavigationParams {\n  /**\n   * page number for fetching the contact\n   */\n  page?: number;\n  /**\n   * query text added while searching.\n   */\n  query?: string;\n}\n\nexport enum View {\n  List = 'LIST',\n  Detail = 'DETAIL',\n  Edit = 'EDIT',\n  Select = 'SELECT',\n}\n/**\n *\n * This service manages the routes of the widget.\n *\n * @see ContactManagerWidgetModule\n * @usageNotes\n *\n * ### Ensure the ContactManagerWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ContactManagerWidgetModule,\n *   ],\n * })\n * export class ContactManagerWidgetModule {}\n * ```\n *\n * ### Inject this service into your provider\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ContactsNavigationService]\n * })\n *  export class ContactManagerWidgetModule {\n * ```\n */\n@Injectable()\nexport class ContactsNavigationService {\n  private _currentView = View.List;\n\n  get currentView(): View {\n    return this._currentView;\n  }\n\n  set currentView(view: View) {\n    this._currentView = view;\n  }\n  /**\n   * @param {RouterService} routerService router service\n   */\n  constructor(private readonly routerService: RouterService) {}\n  /**\n   * Routes to list view\n   *\n   * @param {?number} page current Page number.\n   * @param {?string} query Searched query text\n   * @param {'merge' | 'preserve' | ''} queryParamsHandling query hash handling. default value is merge\n   * @returns {Promise<boolean>} returns a observable of boolean.\n   */\n  list(page?: number, query?: string, queryParamsHandling: 'merge' | 'preserve' | '' = 'merge'): Promise<boolean> {\n    const queryParam: NavigationParams = {\n      page: page !== undefined && page > -1 ? page : undefined,\n    };\n    if (query || query === '') queryParam.query = query;\n\n    return this.routerService.navigate(['./'], {\n      queryParams: { ...queryParam },\n      queryParamsHandling: queryParamsHandling,\n    });\n  }\n  /**\n   * Routes to select view for contact types.\n   *\n   * @param {string} id - contact ID\n   * @returns {Promise<boolean>} Boolean promise.\n   */\n  select(id: string): Promise<boolean> {\n    this.currentView = View.Detail;\n\n    return this.routerService.navigate([id], { queryParamsHandling: 'merge' });\n  }\n  /**\n   * Routes to edit screen of selected contact.\n   *\n   * @param {string} id - Contact ID, for selected conatct for edit.\n   * @param {string} type - selected type of the contact\n   * @returns {Promise<boolean>} Boolean promise.\n   */\n  edit(id: string, type: string = AccountCreateType.IBAN): Promise<boolean> {\n    this.currentView = View.Edit;\n\n    return this.routerService.navigate(['edit', id, type], { queryParamsHandling: 'merge' });\n  }\n  /**\n   * Routes to new contact view.\n   *\n   * @returns {Promise<boolean>} Boolean promise.\n   */\n  newContact(): Promise<boolean> {\n    this.currentView = View.Select;\n\n    return this.routerService.navigate(['select'], { queryParamsHandling: 'merge' });\n  }\n  /**\n   * Route to new contact edit form when new contact is selected.\n   *\n   * @param {AccountCreateType} type whether the new contact is of IBAN/Phone/Email/Account type\n   * @returns {Promise<boolean>} resolves to true when form is ready\n   */\n  newContactForm(type: AccountCreateType): Promise<boolean> {\n    this.currentView = View.Edit;\n\n    return this.routerService.navigate(['edit', 0, type], { queryParamsHandling: 'merge' });\n  }\n}\n","import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { ContactsHttpService } from '@backbase/data-ang/contact-manager';\n\nimport { BehaviorSubject, combineLatest, merge, Observable, of, ReplaySubject, Subject, Subscription } from 'rxjs';\nimport { catchError, distinctUntilChanged, map, mapTo, scan, shareReplay, switchMap } from 'rxjs/operators';\nimport {\n  ContactActions,\n  ContactItem,\n  Contacts,\n  ContactUpdateDeleteResponse,\n  Id,\n  LoadMoreMethod,\n} from '@backbase/contact-common-ang';\nimport { AccountCreateType } from '../models/types';\n\nexport interface PageParams {\n  from: number;\n  size: number;\n  query: string;\n}\n\nexport interface ListParams {\n  pagination: PageParams;\n  paginationType?: string;\n  method?: string;\n}\n\nexport interface ContactList {\n  count: number | null;\n  contacts: Contacts;\n}\n\nexport interface GetContactsParams {\n  saId?: string;\n  leId?: string;\n  cursor?: string;\n  from?: number;\n  size?: number;\n  query?: string;\n}\n\nexport enum ModalOptions {\n  Cancel = 0,\n  Success = 1,\n}\n\nexport type ItemId = string;\n\nconst defaultListParams: ListParams = {\n  pagination: {\n    from: 0,\n    size: 4,\n    query: '',\n  },\n  paginationType: LoadMoreMethod.PAGINATION,\n};\n\n/**\n *\n * This service calls the api calls from data-ang\n *\n * @see ContactManagerWidgetModule\n * @usageNotes\n *\n * ### Ensure the ContactManagerWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ContactManagerWidgetModule,\n *   ],\n * })\n * export class ContactManagerWidgetModule {}\n * ```\n *\n * ### Inject this service into your provider\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ContactsService]\n * })\n *  export class ContactManagerWidgetModule {\n * ```\n */\n@Injectable()\nexport class ContactsService {\n  constructor(public dataService: ContactsHttpService) {}\n\n  // \"Events\" - Subjects that are used to trigger actions\n  private readonly saveComplete = new Subject<LoadMoreMethod>();\n\n  private readonly listParams = new BehaviorSubject(defaultListParams);\n  readonly selectedItemId = new ReplaySubject<ItemId | null>(1);\n  private lastSelectedItemId = new BehaviorSubject<ItemId | undefined>(undefined);\n\n  private readonly actions$ = merge(\n    this.listParams.pipe(\n      map(({ pagination, paginationType, method }) => ({\n        action: ContactActions.Load,\n        params: pagination,\n        paginationType,\n        method: method,\n      })),\n    ),\n    this.saveComplete.pipe(mapTo({ action: ContactActions.Refresh })),\n  );\n\n  // The params to use for a list request\n  readonly items: Observable<ContactList> = this.actions$.pipe(\n    scan((state, action) => ({ ...state, ...action })),\n    map(({ action, params, paginationType, method }: any) => {\n      const isLoadMoreRefresh = action === ContactActions.Refresh && paginationType === LoadMoreMethod.LOAD_MORE;\n\n      return {\n        action,\n        paginationType,\n        params: {\n          ...params,\n          ...(isLoadMoreRefresh ? { from: 0, size: (params.from + 1) * params.size } : {}),\n        },\n        method,\n      };\n    }),\n    switchMap(({ params, method, ...state }) =>\n      this.dataService.getContacts(this.toHttpParams(params), 'response').pipe(\n        map(listFromData),\n        map((response) => ({ ...response, params, ...state, method })),\n      ),\n    ),\n    scan((acc: any, curr: any) => {\n      const { count, action, paginationType, method } = curr;\n      let contacts;\n      if (\n        curr.params.from > 0 &&\n        acc.params.query === curr.params.query &&\n        action !== ContactActions.Refresh &&\n        paginationType === LoadMoreMethod.LOAD_MORE &&\n        method !== 'search'\n      ) {\n        contacts = [...acc.contacts, ...curr.contacts];\n      } else {\n        contacts = [...curr.contacts];\n      }\n\n      return {\n        count,\n        contacts,\n        params: curr.params,\n      };\n    }),\n    shareReplay(),\n  );\n\n  readonly currentlySelectedItemId: Observable<ItemId | null> = combineLatest([\n    this.selectedItemId,\n    this.lastSelectedItemId,\n    this.items,\n  ]).pipe(\n    map(([id, lastItemId, items]) => {\n      return id ?? lastItemId ?? items.contacts[0]?.id ?? null;\n    }),\n  );\n\n  readonly item: Observable<ContactItem | undefined> = combineLatest([\n    this.currentlySelectedItemId.pipe(distinctUntilChanged()),\n    this.items,\n  ]).pipe(\n    switchMap(([id, items]) => {\n      if (id === '0') {\n        return of(undefined);\n      }\n\n      let contact: ContactItem | undefined = this.getContactsItem(\n        id ?? this.lastSelectedItemId.value ?? undefined,\n        items,\n      );\n\n      const firstContact = this.getContactsItem(this.firstContact(items.contacts), items);\n\n      if (!contact && this.lastSelectedItemId.value) {\n        const contactId = this.lastSelectedItemId.value;\n\n        return this.dataService.getContact({ contactId }).pipe(catchError(() => of(firstContact)));\n      }\n\n      if (contact) {\n        this.lastSelectedItemId.next(contact.id);\n      }\n\n      return of(contact || firstContact);\n    }),\n    shareReplay(),\n  );\n\n  readonly deleteSuccess = new Subject();\n\n  readonly deleteError = new Subject<HttpErrorResponse>();\n\n  /**\n   * Updates the selected contact.\n   *\n   * @param {Observable<ItemId | null>} ids contact Id\n   */\n  getItemFrom(ids: Observable<ItemId | null>): void {\n    ids.subscribe((id) => this.selectedItemId.next(id));\n  }\n\n  private firstContact(contacts: Array<ContactItem> | null): string | undefined {\n    return contacts && contacts.length > 0 ? contacts[0].id : undefined;\n  }\n\n  /**\n   * Gets the contact in the given list by id.\n   *\n   * @param {string | undefined} id contact ID\n   * @param {ContactList} items all contacts in an array form.\n   * @returns {ContactItem | undefined} contact item from list or undefined\n   */\n  getContactsItem(id: string | undefined, items: ContactList): ContactItem | undefined {\n    if (!(items && items.contacts && items.contacts.length)) return;\n\n    let item: ContactItem | undefined;\n    if (id === '0') {\n      return undefined;\n    } else {\n      item = items.contacts.find((v: ContactItem) => v.id === id);\n    }\n\n    return item;\n  }\n\n  private toHttpParams(params: any): PageParams {\n    return {\n      from: Math.floor(params.from),\n      size: Math.floor(params.size),\n      query: params.query || undefined,\n    };\n  }\n\n  /**\n   * Update the list of Parameters when changed.\n   *\n   * @param {?string} query search query\n   * @param {?number} page current Page of contact lists\n   * @param {?number} size no of records to be shown on one page\n   * @param {?string} paginationType type of pagination `load-more` or `pagination`\n   * @param {?string} method enumerated value\n   */\n  updateItemList(query?: string, page?: number, size?: number, paginationType?: string, method?: string) {\n    this.listParams.next({\n      pagination: {\n        query: query || '',\n        from: page || 0,\n        size: size || 5,\n      },\n      paginationType: paginationType || LoadMoreMethod.PAGINATION,\n      method,\n    });\n  }\n\n  /**\n   * Gets the account Type for the contacts.\n   *\n   * @returns {Observable<string>} Observable of a string with accountType\n   */\n  getAccountType(): Observable<string> {\n    return this.item.pipe(\n      map((contactItem) => (contactItem ? this.checkaccountType(contactItem) : AccountCreateType.IBAN)),\n    );\n  }\n\n  /**\n   * Calls the update API for contacts when updated.\n   *\n   * @param {ContactItem} item - Updated contact.\n   * @returns {Observable<string | undefined>} the observable of updated ID of contact.\n   */\n  save(item: ContactItem): Observable<string | undefined> {\n    if (isNew(item)) {\n      const postItem: any = item;\n\n      return this.dataService\n        .postContacts({ contactsPostRequestBody: postItem }, 'response')\n        .pipe(map((res: HttpResponse<Id>) => this.saveSuccess(res)));\n    } else {\n      return this.dataService\n        .putContact({ contactId: item.id, contactPutRequestBody: item }, 'response')\n        .pipe(map((res: HttpResponse<ContactUpdateDeleteResponse>) => this.editSuccess(res, item.id)));\n    }\n  }\n\n  /**\n   * Returns the contact Id when updated.\n   *\n   * @param {HttpResponse<Id>} res save response\n   * @returns {string | undefined} contact ID.\n   */\n  saveSuccess(res: HttpResponse<Id>): string | undefined {\n    if (res.body && res.body.id) {\n      this.saveComplete.next();\n\n      return res.body.id;\n    } else {\n      // error state\n      return undefined;\n    }\n  }\n\n  /**\n   * Returns the ID of the contact when edit is successful\n   *\n   * @param {HttpResponse<ContactUpdateDeleteResponse>} res response of editing a contact.\n   * @param {string} id Contact ID.\n   * @returns {string | undefined} the ID of contact when edit is successful.\n   */\n  editSuccess(res: HttpResponse<ContactUpdateDeleteResponse>, id: string): string | undefined {\n    if (res.body) {\n      this.saveComplete.next();\n\n      return id;\n    } else {\n      // error state\n      return undefined;\n    }\n  }\n\n  /**\n   * Calls the deletion API.\n   *\n   * @param {string} contactId - Contact ID for selected contact.\n   * @returns {Subscription} Subscription of deletion api.\n   */\n  delete(contactId: string): Subscription {\n    return this.dataService.deleteContact({ contactId }).subscribe(\n      () => {\n        this.deleteSuccess.next();\n        this.saveComplete.next();\n      },\n      (error) => this.deleteError.next(error),\n    );\n  }\n\n  /**\n   * Returns the account Type for the given contact\n   *\n   * @param {ContactItem} item contact object.\n   * @returns {string} type of account for one contact.\n   */\n  checkaccountType(item: ContactItem): string {\n    if (item) {\n      return (\n        (Object.entries(item?.accounts[0]).find(\n          ([key, value]) => Object.values(AccountCreateType).includes(<AccountCreateType>key) && value,\n        ) || [])[0] || AccountCreateType.IBAN\n      );\n    }\n\n    return AccountCreateType.IBAN;\n  }\n}\n\n/**\n * Returns if the contact is new or is being edited.\n *\n * @param {ContactItem} item contact object\n * @returns {boolean} whether the item is new or existing\n */\nfunction isNew(item: ContactItem): boolean {\n  return item.id === undefined || item.id === '';\n}\n\n/**\n * Returns the contact list in a format.\n *\n * @param {HttpResponse<Contacts>} response http response with data\n * @returns {ContactList} contacts list with total count.\n */\nfunction listFromData(response: HttpResponse<Contacts>): ContactList {\n  if (response.body === null) {\n    throw new Error('Response body not set');\n  }\n\n  const headers = response.headers;\n  const totalCount = headers.get('X-Total-Count');\n\n  return {\n    count: totalCount ? +totalCount : null,\n    contacts: response.body,\n  };\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { toBoolean, toInteger } from '@backbase/contact-common-ang';\nimport { ItemModel } from '@backbase/foundation-ang/core';\n\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n *\n * This service manages the widget properties.\n *\n * @see ContactManagerWidgetModule\n * @usageNotes\n *\n * ### Ensure the ContactManagerWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ContactManagerWidgetModule,\n *   ],\n * })\n * export class ContactManagerWidgetModule {}\n * ```\n *\n * ### Inject this service to the providers.\n *\n * ```ts\n * @Component({\n *   ...\n *  providers: [\n * {\n *   provide: ContactManagerPreferencesService,\n *   useClass: ContactManagerJourneyPreferencesService,\n * },\n * })\n *  export class ContactManagerWidgetModule {\n * ```\n */\n@Injectable()\nexport class ContactManagerPreferencesService {\n  private readonly newContactSubject$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly pageSizeSubject$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly maxNavPagesSubject$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly paginationTypeSubject$ = new BehaviorSubject<string | undefined>(undefined);\n  private readonly createContactEmailSubject$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly createContactIBANSubject$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly createContactAccountSubject$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly createContactPhoneSubject$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly notificationDismissTimeSubject$ = new BehaviorSubject<number | undefined>(undefined);\n\n  private readonly newContactItemModel = this.itemModel?.property<boolean>('newContact').pipe(map(toBoolean));\n\n  private readonly pageSizeItemModel = this.itemModel?.property<number>('pageSize').pipe(map(toInteger));\n\n  private readonly maxNavPagesItemModel = this.itemModel?.property<number>('maxNavPages').pipe(map(toInteger));\n\n  private readonly paginationTypeItemModel = this.itemModel?.property<string>('paginationType');\n\n  private readonly createContactEmailItemModel = this.itemModel\n    ?.property<boolean>('createContactEmail')\n    .pipe(map(toBoolean));\n\n  private readonly createContactIBANItemModel = this.itemModel\n    ?.property<boolean>('createContactIBAN')\n    .pipe(map(toBoolean));\n\n  private readonly createContactAccountItemModel = this.itemModel\n    ?.property<boolean>('createContactAccount')\n    .pipe(map(toBoolean));\n\n  private readonly createContactPhoneItemModel = this.itemModel\n    ?.property<boolean>('createContactPhone')\n    .pipe(map(toBoolean));\n\n  private readonly notificationDismissTimeItemModel = this.itemModel\n    ?.property<number>('notificationDismissTime')\n    .pipe(map(toInteger));\n\n  readonly newContact$ = this.getProperty<boolean>(this.newContactSubject$, this.newContactItemModel);\n\n  readonly pageSize$ = this.getProperty<number>(this.pageSizeSubject$, this.pageSizeItemModel);\n\n  readonly maxNavPages$ = this.getProperty<number>(this.maxNavPagesSubject$, this.maxNavPagesItemModel);\n\n  readonly paginationType$ = this.getProperty<string>(this.paginationTypeSubject$, this.paginationTypeItemModel);\n\n  readonly createContactEmail$ = this.getProperty<boolean>(\n    this.createContactEmailSubject$,\n    this.createContactEmailItemModel,\n  );\n\n  readonly createContactIBAN$ = this.getProperty<boolean>(\n    this.createContactIBANSubject$,\n    this.createContactIBANItemModel,\n  );\n\n  readonly createContactAccount$ = this.getProperty<boolean>(\n    this.createContactAccountSubject$,\n    this.createContactAccountItemModel,\n  );\n\n  readonly createContactPhone$ = this.getProperty<boolean>(\n    this.createContactPhoneSubject$,\n    this.createContactPhoneItemModel,\n  );\n\n  readonly notificationDismissTime$ = this.getProperty<number>(\n    this.notificationDismissTimeSubject$,\n    this.notificationDismissTimeItemModel,\n  );\n\n  private getProperty<T>(input$: Observable<T | undefined>, itemModel: Observable<unknown>): Observable<T> {\n    return combineLatest([input$, itemModel]).pipe(\n      map(([value, valueIM]) => (value === undefined ? valueIM : value) as T),\n    );\n  }\n  /**\n   *  Update the new Contact value\n   *\n   * @param {boolean} value selected value\n   */\n  setNewContact(value: boolean) {\n    this.newContactSubject$.next(value);\n  }\n  /**\n   *  Update the pageSize value\n   *\n   * @param {number} value selected value\n   */\n  setPageSize(value: number) {\n    this.pageSizeSubject$.next(value);\n  }\n  /**\n   *  Update the maxNavPages value\n   *\n   * @param {number} value selected value\n   */\n  setMaxNavPages(value: number) {\n    this.maxNavPagesSubject$.next(value);\n  }\n  /**\n   *  Update the paginationType value\n   *\n   * @param {string} value selected value\n   */\n  setPaginationType(value: string) {\n    this.paginationTypeSubject$.next(value);\n  }\n  /**\n   *  Update the notificationDissmissTime value\n   *\n   * @param {number} value selected value\n   */\n  setNotificationDismissTime(value: number) {\n    this.notificationDismissTimeSubject$.next(value);\n  }\n  /**\n   *  Update the createContactEmail value\n   *\n   * @param {boolean} value selected value\n   */\n  setCreateContactEmail(value: boolean) {\n    this.createContactEmailSubject$.next(value);\n  }\n  /**\n   *  Update the createContactIBAN value\n   *\n   * @param {boolean} value selected value\n   */\n  setCreateContactIBAN(value: boolean) {\n    this.createContactIBANSubject$.next(value);\n  }\n  /**\n   *  Update the createContactAccount value\n   *\n   * @param {boolean} value selected value\n   */\n  setCreateContactAccount(value: boolean) {\n    this.createContactAccountSubject$.next(value);\n  }\n  /**\n   *  Update the createContactPhone value\n   *\n   * @param {boolean} value selected value\n   */\n  setCreateContactPhone(value: boolean) {\n    this.createContactPhoneSubject$.next(value);\n  }\n\n  constructor(@Optional() private readonly itemModel: ItemModel) {}\n}\n","import { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Directive } from '@angular/core';\nimport type { ContactsDetailComponent } from '../components/contacts-detail/contacts-detail.component';\n\n/**\n * This is an extension slot to be used for customizing delete confirmation dialog\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsDeleteConfirmationCustomizable let-hostRef let-context=\"context\">\n *   <div class=\"modal-header\">\n *     <h4 i18n=\"@@contact-manager-detail.header.delete.contact\" class=\"modal-title\" data-role=\"delete-contact-label\">\n *       Delete Contact\n *     </h4>\n *   </div>\n *   <div i18n=\"@@contact-manager-detail.delete.confirmation\" class=\"modal-body\" role=\"alert\">\n *     <p class=\"break-word\">\n *       Are you sure you want to delete {{ hostRef.item.name }} from your contacts? This action cannot be undone.\n *     </p>\n *   </div>\n *   <div class=\"bb-button-bar bb-button-bar--reverse modal-footer\">\n *     <button\n *       i18n=\"@@contact-manager-detail.button.cancel\"\n *       type=\"button\"\n *       class=\"bb-button-bar__button\"\n *       bbButton\n *       color=\"secondary\"\n *       (click)=\"context.dismiss()\"\n *     >\n *       Not now\n *     </button>\n *     <button\n *       i18n=\"@@contact-manager-detail.button.delete\"\n *       type=\"button\"\n *       class=\"bb-button-bar__button\"\n *       bbButton\n *       color=\"danger\"\n *       data-role=\"confirm-delete-button\"\n *       (click)=\"hostRef.deleteContact()\"\n *     >\n *       Delete\n *     </button>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Directive({\n  selector: '[bbContactsDeleteConfirmationCustomizable]',\n})\nexport class ContactsDeleteConfirmationCustomizableDirective extends BbTemplate<\n  ContactsDetailComponent,\n  { close: (result: any) => void; dismiss: (reason: any) => void }\n> {}\n","import { ChangeDetectionStrategy, Component, Directive, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { ContactsService } from '../../services/contacts.service';\nimport { AccountCreateType, SelectContactEvent } from '../../models/types';\n\n/**\n * An object representing ContactDetails.\n */\nexport interface ContactsDetailItem {\n  /*\n   * The unique id of the contact\n   */\n  id: string;\n  /*\n   * The name of the contact\n   */\n  name: string;\n  /*\n   * The surname of the contact\n   */\n  surname: string;\n  /*\n   * The iban of the contact\n   */\n  iban: string;\n  /*\n   * The initials of the contact\n   */\n  initials: string;\n}\n/**\n * Displays a detail of contact selected.\n *\n * The following extension slots are available in this component:\n *  - `ContactsDetailCustomizableDirective`\n *\n * @see ContactsDetailCustomizableDirective\n * @usageNotes\n *\n * ### Display a details of contacts\n *\n * ```html\n * <bb-contacts-detail\n *    [showDetail]=\"false\"\n *    [item]=\"hostRef.item\"\n *    [type]=\"hostRef.type\"\n *    (deleteContactsItem)=\"hostRef.deleteItemEmit()\"\n *    (editContactsItem)=\"hostRef.editContactsItem()\"\n * ></bb-contacts-detail>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Component({\n  selector: 'bb-contacts-detail',\n  templateUrl: './contacts-detail.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactsDetailComponent implements OnInit {\n  readonly hostRef: ContactsDetailComponent = this;\n  /**\n   * Account type selected from screen\n   */\n  @Input() type!: AccountCreateType;\n  /**\n   * Wether to show user details or not\n   */\n  @Input() showDetail = true;\n  /**\n   * The detail of the selected contact\n   */\n  @Input()\n  item!: ContactsDetailItem;\n  /**\n   * Event emitted when contact is edited\n   */\n  @Output() editContactsItem = new EventEmitter<SelectContactEvent>();\n  /**\n   * Event emitted when contact is deleted\n   */\n  @Output() deleteContactsItem = new EventEmitter<string>();\n\n  isDeleteConfirmOpened = false;\n\n  constructor(public service: ContactsService) {}\n\n  /**\n   * OnInit - lifecycle hook.\n   */\n  ngOnInit() {\n    if (this.item === undefined) {\n      throw new Error('`item` input is required in `bb-contacts-detail` component');\n    }\n  }\n\n  /**\n   *  Will emit the event when contact is edited.\n   *\n   * @param {string} id the contact id that has to be edited.\n   */\n  edit(id: string) {\n    this.editContactsItem.emit({ id: id, type: this.type });\n  }\n\n  /**\n   * opens modal for delete confirmation\n   */\n  openDeleteModal() {\n    this.isDeleteConfirmOpened = true;\n  }\n\n  /**\n   * event handler for confirming delete\n   */\n  onConfirmDelete() {\n    this.deleteContactsItem.emit(this.item.id);\n    this.isDeleteConfirmOpened = false;\n  }\n\n  /**\n   * event handler for rejecting delete\n   */\n  onCancelDelete() {\n    this.isDeleteConfirmOpened = false;\n  }\n}\n\n/**\n * This is an extension slot to be used for customizing an item of the contact details.\n *\n * @usageNotes\n *\n * ### Display a contact details\n *\n * ```html\n * <ng-template bbContactsDetailCustomizable let-hostRef let-item=\"item\">\n * <div class=\"bb-block bb-block--xl\">\n *   <div class=\"bb-stack bb-stack--align-bottom\">\n *     <div class=\"bb-stack__item bb-stack__item--fill\">\n *       <div\n *         class=\"bb-block\"\n *         data-role=\"contact-details-info-name\"\n *       >\n *         <span\n *           class=\"d-none\"\n *           data-role=\"create-contact-label\"\n *           aria-hidden=\"true\"\n *           i18n-heading=\"Create contact heading | Title shown when user is in\n *                        create contact@@contact-manager-detail.create.heading\"\n *          #heading\n *         >\n *           Create contact\n *         </span>\n *         <bb-header-ui\n *           data-role=\"create-new-contact-label\"\n *           headingType=\"h3\"\n *           [heading]=\"hostRef.item.name || heading.textContent\"\n *         >\n *         </bb-header-ui>\n *       </div>\n *     </div>\n *     <div\n *      *ngIf=\"hostRef.item.name\"\n *       class=\"bb-stack__item bb-stack__item--push-right\"\n *     >\n *       <span\n *         bbTooltip=\"Edit\"\n *         triggers=\"hover focus\"\n *       >\n *         <button\n *           data-role=\"contact-edit-button\"\n *           bbButton\n *           circle=\"true\"\n *           color=\"link\"\n *           (click)=\"hostRef.edit(hostRef.item.id)\"\n *           i18n=\"Edit Contact Button | Button for editing an existing contact@@contact-manager-detail.button.edit\"\n *           aria-label=\"Edit Contact\"\n *           i18n-aria-label=\"Edit Contact | Aria label edit contact menu@@contact-manager-detail.label.actions.edit\"\n *         >\n *           <bb-icon-ui\n *             name=\"edit\"\n *             color=\"dark\"\n *           ></bb-icon-ui>\n *         </button>\n *       </span>\n *       <span\n *         bbTooltip=\"Delete\"\n *         triggers=\"hover focus\"\n *       >\n *         <button data-role=\"contact-delete-button\"\n *           bbButton\n *           circle=\"true\"\n *           color=\"link\"\n *           (click)=\"hostRef.openDeleteModal(hostRef.modalContent)\"\n *           i18n=\"Delete Contact Button | Button for deleting an existing contact@@contact-manager-detail.detail.button.delete\"\n *           data-role=\"delete-button\"\n *           aria-label=\"Delete Contact\"\n *           i18n-aria-label=\"Delete Contact | Aria label delete contact menu@@contact-manager-detail.label.actions.delete\"\n *         >\n *           <bb-icon-ui name=\"delete\" color=\"dark\"></bb-icon-ui>\n *         </button>\n *       </span>\n *     </div>\n *   </div>\n *   <hr/>\n * </div>\n * <div\n *   class=\"bb-lock bb-lock bb-block--lg\"\n *  *ngIf=\"hostRef.showDetail\"\n * >\n *   <span\n *     class=\"d-none\"\n *     aria-hidden=\"true\"\n *     i18n=\"Account number | Heading for account number or\n *      IBAN or Email or Phone@@contact-manager-detail.label.account.type.heading\"\n *     #heading\n *   >\n *    {hostRef.type, select, IBAN {IBAN}  accountNumber {Account number} email { Email} phoneNumber { Phone number} other {IBAN} }\n *   </span>\n *   <bb-header-ui\n *     headingType=\"h5\"\n *     [heading]=\"heading.textContent\"\n *     class=\"bb-block bb-block-md\"\n *   >\n *   </bb-header-ui>\n *   <div\n *     class=\"bb-bock bb-block-md\"\n *     data-role=\"contact-details-info-alias\"\n *   >\n *   <span *ngIf=\"hostRef.item?.accounts[0] as account\">\n *     {{ account[hostRef.type] }}\n *   </span>\n *   </div>\n * </div>\n *</ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Directive({\n  selector: '[bbContactsDetailCustomizable]',\n})\nexport class ContactsDetailCustomizableDirective extends BbTemplate<ContactsDetailComponent, ContactsDetailItem> {}\n","<ng-container bbContactsDetailCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"item\"></ng-container>\n<ng-template bbContactsDetailCustomizable let-hostRef let-item=\"item\">\n  <div class=\"bb-block bb-block--xl\">\n    <div class=\"bb-stack bb-stack--align-bottom\">\n      <div class=\"bb-stack__item bb-stack__item--fill\">\n        <div class=\"bb-block\" data-role=\"contact-details-info-name\">\n          <span\n            class=\"d-none\"\n            data-role=\"create-contact-label\"\n            aria-hidden=\"true\"\n            i18n=\"Create contact heading | Title shown when user is in create contact@@contact-manager-detail.create.heading\"\n            #heading\n          >\n            Create contact\n          </span>\n          <bb-header-ui\n            data-role=\"create-new-contact-label\"\n            headingType=\"h3\"\n            headingClasses=\"break-word\"\n            [heading]=\"hostRef.item.name || heading.textContent\"\n          >\n          </bb-header-ui>\n        </div>\n      </div>\n      <div *ngIf=\"hostRef.item.name\" class=\"bb-stack__item bb-stack__item--push-right\">\n        <span bbTooltip=\"Edit\" triggers=\"hover focus\" i18n-bbTooltip=\"@@contact-manager-detail.button.edit.tooltip\">\n          <button\n            data-role=\"contact-edit-button\"\n            bbButton\n            circle=\"true\"\n            color=\"link\"\n            (click)=\"hostRef.edit(hostRef.item.id)\"\n            i18n=\"Edit Contact Button | Button for editing an existing contact@@contact-manager-detail.button.edit\"\n            aria-label=\"Edit Contact\"\n            i18n-aria-label=\"Edit Contact | Aria label edit contact menu@@contact-manager-detail.label.actions.edit\"\n          >\n            <bb-icon-ui name=\"edit\" color=\"dark\"></bb-icon-ui>\n          </button>\n        </span>\n        <span bbTooltip=\"Delete\" triggers=\"hover focus\" i18n-bbTooltip=\"@@contact-manager-detail.button.delete.tooltip\">\n          <button\n            bbButton\n            circle=\"true\"\n            color=\"link\"\n            (click)=\"hostRef.openDeleteModal()\"\n            i18n=\"Delete Contact Button | Button for deleting an existing contact@@contact-manager-detail.detail.button.delete\"\n            data-role=\"delete-button\"\n            aria-label=\"Delete Contact\"\n            i18n-aria-label=\"Delete Contact | Aria label delete contact menu@@contact-manager-detail.label.actions.delete\"\n          >\n            <bb-icon-ui name=\"delete\" color=\"dark\"></bb-icon-ui>\n          </button>\n        </span>\n      </div>\n    </div>\n    <hr />\n  </div>\n  <div class=\"bb-lock bb-lock bb-block--lg\" *ngIf=\"hostRef.showDetail\">\n    <span\n      class=\"d-none\"\n      aria-hidden=\"true\"\n      i18n=\"Account number | Heading for account number or IBAN or Email or Phone@@contact-manager-detail.label.account.type.heading\"\n      #heading\n    >\n      {hostRef.type, select, IBAN {IBAN} accountNumber {Account number} email { Email} phoneNumber { Phone number} other\n      {IBAN} }\n    </span>\n    <bb-header-ui headingType=\"h5\" [heading]=\"heading.textContent\" class=\"bb-block bb-block-md\"></bb-header-ui>\n    <div class=\"bb-bock bb-block-md\" data-role=\"contact-details-info\">\n      <ng-container *ngIf=\"hostRef.item?.accounts[0] as account\">\n        <ng-container *ngIf=\"hostRef.type === 'IBAN'; else notIban\">\n          {{ account[hostRef.type] | bbIban }}\n        </ng-container>\n        <ng-template #notIban>{{ account[hostRef.type] }} </ng-template>\n      </ng-container>\n    </div>\n  </div>\n</ng-template>\n\n<ng-container bbContactsDeleteConfirmationCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n<ng-template bbContactsDeleteConfirmationCustomizable let-hostRef>\n  <bb-confirm-action-dialog\n    [isOpen]=\"hostRef.isDeleteConfirmOpened\"\n    [confirmButtonColor]=\"'danger'\"\n    (confirm)=\"hostRef.onConfirmDelete()\"\n    (cancel)=\"hostRef.onCancelDelete()\"\n  >\n    <span title i18n=\"@@contact-manager-detail.header.delete.contact\" data-role=\"delete-contact-label\"\n      >Delete Contact</span\n    >\n    <span body i18n=\"@@contact-manager-detail.delete.confirmation\">\n      Are you sure you want to delete {{ hostRef.item.name }} from your contacts? This action cannot be undone.\n    </span>\n    <span cancelButtonLabel i18n=\"@@contact-manager-detail.button.cancel\">Not now</span>\n    <span confirmButtonLabel i18n=\"@@contact-manager-detail.button.delete\" data-role=\"confirm-delete-button\"\n      >Delete</span\n    >\n  </bb-confirm-action-dialog>\n</ng-template>\n","import { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Directive } from '@angular/core';\nimport type { ContactsDetailContainerComponent } from '../containers/contacts-detail-container/contacts-detail-container.component';\n\n/**\n * This is an extension slot to be used for customizing success notification after deleting a contact\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsDeleteSuccessNotificationCustomizable>\n *   <span\n *     i18n=\"Notification delete success message@@contact-manager-detail-container.notification.delete.success\"\n *     role=\"alert\"\n *     aria-atomic=\"true\"\n *   >\n *     Contact was deleted succesfully\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Directive({\n  selector: '[bbContactsDeleteSuccessNotificationCustomizable]',\n})\nexport class ContactsDeleteSuccessNotificationCustomizableDirective extends BbTemplate<\n  ContactsDetailContainerComponent,\n  undefined\n> {}\n","import { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Directive } from '@angular/core';\nimport type { ContactsDetailContainerComponent } from '../containers/contacts-detail-container/contacts-detail-container.component';\n\n/**\n * This is an extension slot to be used for customizing error notification after deleting a contact\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsDeleteErrorNotificationCustomizable>\n *   <span\n *     i18n=\"Notification delete failed error message@@contact-manager-detail-container.notification.delete.error\"\n *     role=\"alert\"\n *     aria-atomic=\"true\"\n *   >\n *     Error deleting contact\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Directive({\n  selector: '[bbContactsDeleteErrorNotificationCustomizable]',\n})\nexport class ContactsDeleteErrorNotificationCustomizableDirective extends BbTemplate<\n  ContactsDetailContainerComponent,\n  undefined\n> {}\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { map, withLatestFrom } from 'rxjs/operators';\nimport { ContactsService } from '../../services/contacts.service';\nimport { ContactItem } from '@backbase/contact-common-ang';\nimport { ContactsNavigationService, View } from '../../services/contacts-navigation.service';\nimport { SelectContactEvent } from '../../models/types';\nimport { ContactManagerPreferencesService } from '../../services/contacts-preferences.service';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\n/**\n * Container component for showing contact details.\n *\n * @usageNotes\n *\n * ### Display details of the contact.\n *\n * ```html\n * <bb-contacts-detail-container></bb-contacts-detail-container>\n * ```\n *\n * ### Additionally use the container component in routing.\n *\n * ```typescript\n * const routes: [\n * {\n *  path: '',\n *  component: ContactsDetailContainerComponent\n * }]\n *\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n@Component({\n  selector: 'bb-contacts-detail-container',\n  templateUrl: './contacts-detail-container.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactsDetailContainerComponent implements OnInit, OnDestroy {\n  readonly hostRef = this;\n  readonly itemId: Observable<string | null> = this.route.paramMap.pipe(map((params: ParamMap) => params.get('id')));\n\n  readonly item: Observable<ContactItem | undefined> = this.service.item; //.pipe(map(item => this.fromService(item)));\n  readonly notificationTimeout$: Observable<number> = this.propertiesService.notificationDismissTime$;\n  readonly contactTypeId$: Observable<string> = this.service.getAccountType();\n\n  @ViewChild('deleteSuccessNotificationTemplate')\n  deleteSuccessNotificationTemplate: TemplateRef<any> | undefined;\n  @ViewChild('deleteErrorNotificationTemplate')\n  deleteErrorNotificationTemplate: TemplateRef<any> | undefined;\n\n  constructor(\n    private readonly service: ContactsService,\n    private readonly route: ActivatedRoute,\n    private readonly navigation: ContactsNavigationService,\n    private readonly notificationService: NotificationService,\n    private readonly propertiesService: ContactManagerPreferencesService,\n  ) {\n    service.getItemFrom(this.itemId);\n  }\n\n  private readonly subscriptions = new Subscription();\n  /**\n   * onInit - lifecycle hook\n   */\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.itemId.subscribe((itemId) => {\n        if (!itemId) {\n          this.navigation.currentView = View.List;\n        } else {\n          this.navigation.currentView = View.Detail;\n        }\n      }),\n    );\n\n    this.subscriptions.add(\n      this.service.deleteSuccess\n        .pipe(\n          withLatestFrom(this.notificationTimeout$),\n          map(([response, timeout]) => ({ timeout })),\n        )\n        .subscribe(({ timeout }) =>\n          this.notificationService.showNotification({\n            header: this.deleteSuccessNotificationTemplate as TemplateRef<any>,\n            message: '',\n            modifier: 'success',\n            ttl: timeout,\n          }),\n        ),\n    );\n\n    this.subscriptions.add(\n      this.service.deleteError\n        .pipe(\n          withLatestFrom(this.notificationTimeout$),\n          map(([error, timeout]) => ({ error, timeout })),\n        )\n        .subscribe(({ error, timeout }) =>\n          this.notificationService.showNotification({\n            header: this.deleteErrorNotificationTemplate as TemplateRef<any>,\n            message: '',\n            modifier: 'error',\n            ttl: timeout,\n          }),\n        ),\n    );\n  }\n  /**\n   * OnDestroy- lifecycle hook Unsubscribing the subscription.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  /**\n   *  Emits the output when edit is clicked.\n   *\n   * @param {SelectContactEvent} accountData - An object which contains id and type of contact to be edited.\n   */\n  edit(accountData: SelectContactEvent) {\n    this.navigation.edit(accountData.id, accountData.type);\n  }\n  /**\n   * Method that calls the delete service and returns to list view.\n   *\n   * @param {string} id - contact ID which has to be deleted.\n   */\n  deleteContactsItem(id: string) {\n    this.service.delete(id);\n    this.navigation.list();\n    this.navigation.currentView = View.List;\n  }\n}\n","<ng-container *ngIf=\"item | async as item; else loadingTemplate\">\n  <bb-contacts-detail\n    [item]=\"item\"\n    [type]=\"contactTypeId$ | async\"\n    (editContactsItem)=\"edit($event)\"\n    (deleteContactsItem)=\"deleteContactsItem($event)\"\n  >\n  </bb-contacts-detail>\n</ng-container>\n\n<ng-template #loadingTemplate>\n  <div class=\"bb-state-container\">\n    <bb-loading-indicator-ui\n      i18n-text=\"@@contact-manager-detail-container.loading.label\"\n      text=\"Loading...\"\n    ></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n\n<ng-template #deleteSuccessNotificationTemplate>\n  <ng-container bbContactsDeleteSuccessNotificationCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n  <ng-template bbContactsDeleteSuccessNotificationCustomizable>\n    <span\n      i18n=\"Notification delete success message@@contact-manager-detail-container.notification.delete.success\"\n      role=\"alert\"\n      aria-atomic=\"true\"\n    >\n      Contact was deleted succesfully\n    </span>\n  </ng-template>\n</ng-template>\n\n<ng-template #deleteErrorNotificationTemplate>\n  <ng-container bbContactsDeleteErrorNotificationCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n  <ng-template bbContactsDeleteErrorNotificationCustomizable>\n    <span\n      i18n=\"Notification delete failed error message@@contact-manager-detail-container.notification.delete.error\"\n      role=\"alert\"\n      aria-atomic=\"true\"\n    >\n      Error deleting contact\n    </span>\n  </ng-template>\n</ng-template>\n","import { InjectionToken, Provider } from '@angular/core';\nimport { Additions, BB_CONTACT_IBAN_COUNTRIES_LIST, IBANCountryList } from '@backbase/contact-common-ang';\n\nconst emptyIbanCountriesList: IBANCountryList = {};\n\nexport const BB_CONTACT_FORM_ADDITIONS_TOKEN: InjectionToken<ContactFormAdditions> = new InjectionToken(\n  'BB_CONTACT_FORM_ADDITIONS_TOKEN',\n);\n\nexport interface ContactFormAdditions {\n  additions: Additions;\n}\n\nexport const ContactConfigProviders: Array<Provider> = [\n  {\n    provide: BB_CONTACT_FORM_ADDITIONS_TOKEN,\n    useValue: { additions: undefined },\n  },\n  {\n    provide: BB_CONTACT_IBAN_COUNTRIES_LIST,\n    useValue: emptyIbanCountriesList,\n  },\n];\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Optional,\n  Output,\n  PLATFORM_ID,\n  SimpleChanges,\n  ViewContainerRef,\n} from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BB_CONTACT_FORM_ADDITIONS_TOKEN, ContactFormAdditions } from '../../config.providers';\nimport { AccountCreateType, ContactsFormItem } from '../../models/types';\nimport { IbanMask } from '@backbase/contact-common-ang';\n\n/**\n * Displays a contact form.\n *\n * The following extension slots are available in this component:\n *  - `ContactsFormCustomizableDirective`\n *\n * @see ContactsFormCustomizableDirective\n * @usageNotes\n *\n * ### Display a form for adding / editing the contact form.\n *\n * ```html\n *  <bb-contacts-form\n *   [item]=\"item\"\n *   [type]=\"itemType$ | async\"\n *   (save)=\"save($event)\"\n *   (cancelEdit)=\"cancelEdit($event)\"\n *   (backEvent)=\"back($event)\"\n *   (deleteContactsItem)=\"deleteContactsItem($event)\"\n * ></bb-contacts-form>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Component({\n  selector: 'bb-contacts-form',\n  templateUrl: './contacts-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactsFormComponent implements OnInit, OnChanges, AfterViewInit {\n  readonly hostRef: ContactsFormComponent = this;\n  submitted = false;\n  ibanMask = IbanMask;\n\n  /**\n   * The contact item that is editted\n   */\n  @Input()\n  item!: ContactsFormItem;\n  /**\n   * The contact item type\n   */\n  @Input()\n  type!: AccountCreateType;\n  /**\n   * Controls whether form can be submitted\n   */\n  @Input() disabledSubmit = false;\n  /**\n   * Event emitted when contact edit is saved\n   */\n  @Output() save = new EventEmitter<ContactsFormItem>();\n  /**\n   * Event emitted when contact edit is cancelled\n   */\n  @Output() cancelEdit = new EventEmitter<string>();\n  /**\n   * Event emitted when user clicks back\n   */\n  @Output() backEvent = new EventEmitter<string>();\n  /**\n   * Event emitted when contact is deleted\n   */\n  @Output() deleteContactsItem = new EventEmitter<string>();\n  /**\n   * contactForm group.\n   */\n  contactsForm!: FormGroup;\n  /**\n   * Contact account Type reference.\n   */\n  readonly createAccountTypeRef = AccountCreateType;\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly vcRef: ViewContainerRef,\n    @Inject(PLATFORM_ID) private readonly platformId: Object,\n    @Optional()\n    @Inject(BB_CONTACT_FORM_ADDITIONS_TOKEN)\n    private readonly formAdditionsConfig: ContactFormAdditions,\n  ) {}\n\n  /**\n   * OnInit - lifecycle hook.\n   */\n  ngOnInit() {\n    if (this.item === undefined) {\n      throw new Error('`item` input is required in `bb-contact-form` component');\n    }\n  }\n\n  /**\n   * AfterViewInt- lifecycle hook.\n   */\n  ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.vcRef.element.nativeElement.querySelector('input')?.focus();\n    }\n  }\n\n  /**\n   * OnChanges - lifecycle hook.\n   *\n   * @param {SimpleChanges} changes angular SimpleChanges object\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.type) {\n      this.submitted = false;\n      this.contactsForm = this.createFormGroupInstance();\n    }\n  }\n\n  private createFormGroupInstance(): FormGroup {\n    const { additions } = { ...this.formAdditionsConfig };\n\n    return this.fb.group({\n      name: [this.item.name],\n      IBAN: [this.item.IBAN],\n      accountNumber: [this.item.accountNumber],\n      email: [this.item.email],\n      phoneNumber: [this.item.phoneNumber],\n      ...(additions ? { additions: this.fb.group(additions) } : {}),\n    });\n  }\n\n  /**\n   * saveItem - method that emits the data when saved.\n   */\n  saveItem() {\n    this.submitted = true;\n    if (this.contactsForm.valid) {\n      this.save.emit({ ...this.item, ...(this.contactsForm ? this.contactsForm.value : {}) });\n    } else {\n      this.contactsForm.markAllAsTouched();\n    }\n  }\n\n  /**\n   * emits the id of the contact that has cancelled.\n   */\n  cancel() {\n    this.cancelEdit.emit(this.item.id);\n  }\n\n  /**\n   * emits the id, when back is clicked.\n   */\n  back() {\n    this.backEvent.emit(this.item.id);\n  }\n\n  get name(): AbstractControl | null {\n    return this.contactsForm.get('name');\n  }\n\n  get iban(): AbstractControl | null {\n    return this.contactsForm.get('IBAN');\n  }\n\n  get accountNumber(): AbstractControl | null {\n    return this.contactsForm.get('accountNumber');\n  }\n\n  /**\n   *  the id of the contact is emitted when deleted.\n   */\n  deleteItemEmit() {\n    this.deleteContactsItem.emit(this.item.id);\n  }\n}\n\n/**\n * This is an extension slot to be used for customizing an form of contacts editing.\n *\n * @usageNotes\n *\n * ### Display a contact form.\n *\n * ```html\n *  <bb-contacts-detail\n *   [showDetail]=\"false\"\n *   [item]=\"hostRef.item\"\n *   [type]=\"hostRef.type\"\n *   (deleteContactsItem)=\"hostRef.deleteItemEmit()\"\n * ></bb-contacts-detail>\n * <form\n *  *ngIf=\"hostRef.contactsForm\"\n *   (submit)=\"hostRef.saveItem()\"\n *   [formGroup]=\"hostRef.contactsForm\"\n *   class=\"bb-block bb-block--xl\"\n * >\n *   <fieldSet>\n *     <div class=\"row\">\n *       <div\n *         class=\"bb-block bb-block--lg col-12\"\n *         data-role=\"contact-account-info-account-name1\"\n *       >\n *         <label\n *           [for]=\"contactsName.id\"\n *           data-role=\"edit-contact-label\"\n *           i18n=\"Contacts name label | Label for contacts detail component name@@contact-manager-form.label.name\"\n *         >\n *           Name\n *         </label>\n *         <bb-input-text-ui\n *           data-role=\"new-contact-name\"\n *           [formControl]=\"hostRef.contactsForm.controls.name\"\n *           name=\"contactsName\"\n *           #contactsName\n *           [maxLength]=\"140\"\n *           [required]=\"hostRef.submitted\"\n *         >\n *         </bb-input-text-ui>\n *\n *         <bb-input-validation-message-ui\n *           role=\"alert\"\n *           [showErrors]=\"\n *             hostRef.contactsForm.controls.name.invalid &&\n *             (hostRef.contactsForm.controls.name.dirty || hostRef.contactsForm.controls.name.touched)\n *           \">\n *           <ng-container\n *           *ngIf=\"hostRef.contactsForm.controls.name.errors?.required || hostRef.contactsForm.controls.name.errors?.minlength\">\n *             <span\n *               i18n=\"\n *                 Contacts name required error text | Text for contacts detail component name required\n *                 error@@contact-manager-form.label.nameRequired\n *               \"\n *               data-role=\"missing-account-name\">\n *               Name is required\n *             </span>\n *           </ng-container>\n *         </bb-input-validation-message-ui>\n *       </div>\n *       <div class=\"bb-block bb-block--lg col-12\">\n *         <ng-container [ngSwitch]=\"hostRef.type\">\n *           <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.IBAN\">\n *             <ng-container *ngTemplateOutlet=\"iban\"></ng-container>\n *           </ng-container>\n *           <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.EMAIL\">\n *             <ng-container *ngTemplateOutlet=\"email\"></ng-container>\n *           </ng-container>\n *           <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.PHONE\">\n *             <ng-container *ngTemplateOutlet=\"phone\"></ng-container>\n *           </ng-container>\n *           <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.ACCOUNT\">\n *             <ng-container *ngTemplateOutlet=\"bban\"></ng-container>\n *           </ng-container>\n *           <ng-container *ngSwitchDefault>\n *             <ng-container *ngTemplateOutlet=\"iban\"></ng-container>\n *           </ng-container>\n *         </ng-container>\n *\n *       </div>\n *     </div>\n *   </fieldSet>\n *   <div class=\"bb-button-bar\">\n *     <button\n *       bbButton\n *       type=\"submit\"\n *       color=\"primary\"\n *       type=\"submit\"\n *       [disabled]=\"hostRef.contactsForm.invalid || !hostRef.contactsForm?.controls?.name?.value.trim()\"\n *       class=\"bb-button-bar__button\"\n *       name=\"save\"\n *       data-role=\"save-button\"\n *       i18n=\"Save current form | Save button text for saving a contact item@@contact-manager-form.button.save\"\n *     >\n *       Save\n *     </button>\n *     <button\n *     bbButton\n *     color=\"secondary\"\n *     (click)=\"hostRef.back()\"\n *     type=\"button\"\n *     class=\"bb-button-bar__button\"\n *     name=\"back\"\n *     data-role=\"contacts-form-back-button\"\n *     i18n=\"\n *       Back action in current form | Back button text for going back to selection@@contact-manager-form.button.back\n *     \"\n *   >\n *     Back\n *   </button>\n *     <button\n *       bbButton\n *       color=\"link-text\"\n *       (click)=\"hostRef.cancel()\"\n *       type=\"button\"\n *       class=\"bb-button-bar__button bb-button-bar__button--across\"\n *       name=\"cancel\"\n *       data-role=\"contacts-form-cancel-button\"\n *       i18n=\"\n *         Cancel action in current form | Cancel button text for cancelling a creation of a new\n *         contact@@contact-manager-form.button.cancel\n *       \"\n *     >\n *       Cancel\n *     </button>\n *   </div>\n * </form>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Directive({\n  selector: '[bbContactsFormCustomizable]',\n})\nexport class ContactsFormCustomizableDirective extends BbTemplate<ContactsFormComponent, ContactsFormItem> {}\n","<ng-container bbContactsFormCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"item\"></ng-container>\n<ng-template bbContactsFormCustomizable let-hostRef>\n  <bb-contacts-detail\n    [showDetail]=\"false\"\n    [item]=\"hostRef.item\"\n    [type]=\"hostRef.type\"\n    (deleteContactsItem)=\"hostRef.deleteItemEmit()\"\n  ></bb-contacts-detail>\n  <bb-loading-indicator-ui *ngIf=\"hostRef.disabledSubmit\"></bb-loading-indicator-ui>\n  <form\n    *ngIf=\"hostRef.contactsForm\"\n    [hidden]=\"hostRef.disabledSubmit\"\n    (submit)=\"hostRef.saveItem()\"\n    [formGroup]=\"hostRef.contactsForm\"\n    class=\"bb-block bb-block--xl\"\n  >\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--xl col-12\" data-role=\"contact-account-info-account-name1\">\n        <bb-input-text-ui\n          id=\"bb-create-contact-name\"\n          data-role=\"new-contact-name\"\n          label=\"Name\"\n          i18n-label=\"Contacts name label | Label for contacts detail component name@@contact-manager-form.label.name\"\n          [formControl]=\"hostRef.contactsForm.controls.name\"\n          [maxLength]=\"140\"\n          [required]=\"true\"\n          bbNoWhiteSpace\n        >\n        </bb-input-text-ui>\n        <bb-input-validation-message-ui\n          class=\"position-absolute\"\n          role=\"alert\"\n          [showErrors]=\"hostRef.contactsForm.controls.name.errors?.required && hostRef.contactsForm.controls.name.touched\"\n        >\n          <span\n            i18n=\"\n                Contacts name required error text | Text for contacts detail component name required\n                error@@contact-manager-form.label.nameRequired\n              \"\n            data-role=\"missing-account-name\"\n          >\n            Name is required\n          </span>\n        </bb-input-validation-message-ui>\n      </div>\n      <div class=\"bb-block bb-block--xl col-12\">\n        <ng-container [ngSwitch]=\"hostRef.type\">\n          <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.IBAN\">\n            <ng-container *ngTemplateOutlet=\"iban\"></ng-container>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.EMAIL\">\n            <ng-container *ngTemplateOutlet=\"email\"></ng-container>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.PHONE\">\n            <ng-container *ngTemplateOutlet=\"phone\"></ng-container>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.ACCOUNT\">\n            <ng-container *ngTemplateOutlet=\"bban\"></ng-container>\n          </ng-container>\n          <ng-container *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"iban\"></ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"bb-button-bar bb-button-bar--spacing-sm\">\n      <button\n        bbButton\n        class=\"bb-button-bar__button\"\n        type=\"submit\"\n        color=\"primary\"\n        name=\"save\"\n        data-role=\"save-button\"\n        i18n=\"Save current form | Save button text for saving a contact item@@contact-manager-form.button.save\"\n        [disabled]=\"hostRef.submitted && hostRef.contactsForm.invalid || hostRef.disabledSubmit\"\n      >\n        Save\n      </button>\n      <button\n        bbButton\n        color=\"secondary\"\n        type=\"button\"\n        class=\"bb-button-bar__button\"\n        name=\"back\"\n        data-role=\"contacts-form-back-button\"\n        i18n=\"\n        Back action in current form | Back button text for going back to selection@@contact-manager-form.button.back\n      \"\n        (click)=\"hostRef.back()\"\n      >\n        Back\n      </button>\n      <button\n        bbButton\n        color=\"link-text\"\n        type=\"button\"\n        class=\"bb-button-bar__button bb-button-bar__button--across\"\n        name=\"cancel\"\n        data-role=\"contacts-form-cancel-button\"\n        i18n=\"\n          Cancel action in current form | Cancel button text for cancelling a creation of a new\n          contact@@contact-manager-form.button.cancel\n        \"\n        (click)=\"hostRef.cancel()\"\n      >\n        Cancel\n      </button>\n    </div>\n  </form>\n\n  <ng-template #iban>\n    <bb-input-text-ui\n      id=\"bb-create-contact-iban\"\n      label=\"IBAN\"\n      i18n-label=\"@@contact-manager-form.label.bban\"\n      data-role=\"new-contact-iban\"\n      [formControl]=\"hostRef.contactsForm.controls.IBAN\"\n      [maxLength]=\"hostRef.ibanMask.length\"\n      [required]=\"true\"\n      [mask]=\"hostRef.ibanMask\"\n      [maskValidator]=\"false\"\n      bbIbanValidator\n    >\n    </bb-input-text-ui>\n\n    <ng-container\n      *ngTemplateOutlet=\"err; context:{ control: hostRef.contactsForm.controls.IBAN, errorMessageAcctType: hostRef.type }\"\n    >\n    </ng-container>\n\n    <bb-input-validation-message-ui\n      class=\"position-absolute\"\n      role=\"alert\"\n      [showErrors]=\"hostRef.contactsForm.controls.IBAN.touched\n      && hostRef.contactsForm.controls.IBAN.errors?.invalidIban\"\n    >\n      <ng-container>\n        <span\n          i18n=\"\n            Contacts account number invalid error text | Text for contacts detail component iban invalid\n            error@@contact-manager-form.label.ibanInvalid\n          \"\n          data-role=\"invalid-account-number-error-label\"\n        >\n          Invalid IBAN\n        </span>\n      </ng-container>\n    </bb-input-validation-message-ui>\n  </ng-template>\n\n  <ng-template #bban>\n    <bb-input-text-ui\n      id=\"bb-create-contact-bban\"\n      label=\"Account number\"\n      i18n-label=\"@@contact-manager-form.label.account.number\"\n      data-role=\"new-contact-bban\"\n      [formControl]=\"hostRef.contactsForm.controls.accountNumber\"\n      [maxLength]=\"34\"\n      [required]=\"true\"\n    >\n    </bb-input-text-ui>\n\n    <ng-container\n      *ngTemplateOutlet=\"err; context:{ control: hostRef.contactsForm.controls.accountNumber, errorMessageAcctType: hostRef.type }\"\n    >\n    </ng-container>\n  </ng-template>\n\n  <ng-template #email>\n    <label\n      #contactsEmailLabel\n      id=\"bb-create-contact-email-label\"\n      data-role=\"contact-account-create-email-label\"\n      i18n=\"@@contact-personal-data.contactEmail.label\"\n      class=\"mb-2\"\n    >\n      Email\n      <small class=\"d-block bb-text-support bb-text-default\">E.g. sarawilliams@backbase.com</small>\n    </label>\n    <bb-input-email-ui\n      [aria-labelledby]=\"contactsEmailLabel.id\"\n      [formControl]=\"hostRef.contactsForm.controls.email\"\n      [maxLength]=\"255\"\n      [required]=\"true\"\n      data-role=\"new-contact-email\"\n      bbEmailDomainValidator\n    >\n    </bb-input-email-ui>\n\n    <ng-container\n      *ngTemplateOutlet=\"err; context:{ control: hostRef.contactsForm.controls.email, errorMessageAcctType: hostRef.type }\"\n    >\n    </ng-container>\n    <bb-input-validation-message-ui\n      class=\"position-absolute\"\n      role=\"alert\"\n      [showErrors]=\"hostRef.contactsForm.controls.email.touched\n      && hostRef.contactsForm.controls.email.errors?.email\"\n    >\n      <ng-container>\n        <span\n          i18n=\"\n          Contacts email id invalid error text | Text for contacts detail component email invalid\n          error@@contact-manager-form.label.email.invalid\n        \"\n          data-role=\"invalid-email-error-label\"\n        >\n          Invalid email\n        </span>\n      </ng-container>\n    </bb-input-validation-message-ui>\n  </ng-template>\n\n  <ng-template #phone>\n    <label\n      #contactsPhoneLabel\n      id=\"bb-create-contact-phone-label\"\n      data-role=\"contact-account-create-phone\"\n      i18n=\"@@contact-manager-form.label.phoneNumber\"\n      class=\"mb-2\"\n    >\n      Phone number\n      <small id=\"example-number\" class=\"d-block bb-text-support bb-text-default\">E.g. +12027953213</small>\n    </label>\n    <bb-input-text-ui\n      [formControl]=\"hostRef.contactsForm.controls.phoneNumber\"\n      [maxLength]=\"30\"\n      [required]=\"true\"\n      [aria-labelledby]=\"contactsPhoneLabel.id\"\n      aria-describedby=\"example-number\"\n      data-role=\"new-contact-phone\"\n    >\n    </bb-input-text-ui>\n    <ng-container\n      *ngTemplateOutlet=\"err; context:{ control: hostRef.contactsForm.controls.phoneNumber && hostRef.contactsForm.controls.phoneNumber, errorMessageAcctType: hostRef.type }\"\n    >\n    </ng-container>\n  </ng-template>\n\n  <ng-template #err let-control=\"control\" let-errorMessageAcctType=\"errorMessageAcctType\">\n    <bb-input-validation-message-ui\n      class=\"position-absolute\"\n      role=\"alert\"\n      [showErrors]=\"control.errors?.required\n    && control.touched\n\"\n    >\n      <ng-container [ngSwitch]=\"errorMessageAcctType\">\n        <span\n          *ngSwitchCase=\"hostRef.createAccountTypeRef.ACCOUNT\"\n          i18n=\"\n            Contacts account number required error text | Text for contacts detail component account number required\n            error@@contact-manager-form.label.account.required\n          \"\n          data-role=\"missing-account-number-error-label\"\n        >\n          Account number is required\n        </span>\n        <span\n          *ngSwitchCase=\"hostRef.createAccountTypeRef.IBAN\"\n          i18n=\"\n            Contacts IBAN required error text | Text for contacts detail component IBAN required\n            error@@contact-manager-form.label.iban.required\n          \"\n          data-role=\"missing-account-number-error-label\"\n        >\n          IBAN is required\n        </span>\n        <span\n          *ngSwitchCase=\"hostRef.createAccountTypeRef.PHONE\"\n          i18n=\"\n            Contacts Phone number required error text | Text for contacts detail component Phone required\n            error@@contact-manager-form.label.phone.number.required\n          \"\n          data-role=\"missing-phone-number-error-label\"\n        >\n          Phone number is required\n        </span>\n        <span\n          *ngSwitchCase=\"hostRef.createAccountTypeRef.EMAIL\"\n          i18n=\"\n            Contacts EMAIL required error text | Text for contacts detail component Email required\n            error@@contact-manager-form.label.email.required\n          \"\n          data-role=\"missing-email-error-label\"\n        >\n          Email is required\n        </span>\n      </ng-container>\n    </bb-input-validation-message-ui>\n  </ng-template>\n</ng-template>\n","import { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Directive } from '@angular/core';\nimport type { ContactsFormContainerComponent } from '../containers/contacts-form-container/contacts-form-container.component';\n\n/**\n * This is an extension slot to be used for customizing success notification after creating a contact\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsCreateSuccessNotificationCustomizable>\n *   <span\n *     i18n=\"@@contact-manager-form-container.notification-create.success\"\n *     data-role=\"successfully-saved-contact\"\n *     role=\"alert\"\n *     aria-atomic=\"true\"\n *   >\n *     Successfully saved Contact\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Directive({\n  selector: '[bbContactsCreateSuccessNotificationCustomizable]',\n})\nexport class ContactsCreateSuccessNotificationCustomizableDirective extends BbTemplate<\n  ContactsFormContainerComponent,\n  undefined\n> {}\n","import { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Directive } from '@angular/core';\nimport type { ContactsFormContainerComponent } from '../containers/contacts-form-container/contacts-form-container.component';\n\n/**\n * This is an extension slot to be used for customizing error notification after creating a contact\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsCreateErrorNotificationCustomizable>\n *   <span\n *     i18n=\"@@contact-manager-form-container.notification-create.error\"\n *     data-role=\"failed-to-save-contact\"\n *     role=\"alert\"\n *     aria-atomic=\"true\"\n *   >\n *     Error saving Contact\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Directive({\n  selector: '[bbContactsCreateErrorNotificationCustomizable]',\n})\nexport class ContactsCreateErrorNotificationCustomizableDirective extends BbTemplate<\n  ContactsFormContainerComponent,\n  undefined\n> {}\n","import { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Directive } from '@angular/core';\nimport type { ContactsFormContainerComponent } from '../containers/contacts-form-container/contacts-form-container.component';\n\n/**\n * This is an extension slot to be used for customizing success notification after editing a contact\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsEditSuccessNotificationCustomizable>\n *   <span\n *     i18n=\"@@contact-manager-form-container.notification-edit.success\"\n *     data-role=\"successfully-saved-contact\"\n *     role=\"alert\"\n *     aria-atomic=\"true\"\n *   >\n *     Successfully saved Contact\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Directive({\n  selector: '[bbContactsEditSuccessNotificationCustomizable]',\n})\nexport class ContactsEditSuccessNotificationCustomizableDirective extends BbTemplate<\n  ContactsFormContainerComponent,\n  undefined\n> {}\n","import { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Directive } from '@angular/core';\nimport type { ContactsFormContainerComponent } from '../containers/contacts-form-container/contacts-form-container.component';\n\n/**\n * This is an extension slot to be used for customizing error notification after editing a contact\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsEditErrorNotificationCustomizable>\n *   <span\n *     i18n=\"@@contact-manager-form-container.notification-edit.error\"\n *     data-role=\"failed-to-save-contact\"\n *     role=\"alert\"\n *     aria-atomic=\"true\"\n *   >\n *     Error saving Contact\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Directive({\n  selector: '[bbContactsEditErrorNotificationCustomizable]',\n})\nexport class ContactsEditErrorNotificationCustomizableDirective extends BbTemplate<\n  ContactsFormContainerComponent,\n  undefined\n> {}\n","import { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Directive } from '@angular/core';\nimport type { ContactsFormContainerComponent } from '../containers/contacts-form-container/contacts-form-container.component';\n\n/**\n * This is an extension slot to be used for customizing confirmation dialog of discarding changes\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsEditDiscardConfirmationCustomizable let-hostRef let-context=\"context\">\n *   <div class=\"modal-header\">\n *     <h4 i18n=\"@contact-manager-form-container.header.discardChanges\" class=\"modal-title\">Discard Changes</h4>\n *   </div>\n *   <div class=\"modal-body\" role=\"alert\">\n *     <p i18n=\"@@contact-manager-form-container.discardChangesConfirmation\">\n *       Are you sure you want to discard your changes? This action cannot be undone.\n *     </p>\n *   </div>\n *   <div class=\"modal-footer\">\n *     <div class=\"d-flex flex-row-reverse\">\n *       <button\n *         class=\"ml-3\"\n *         bbButton\n *         color=\"danger\"\n *         i18n=\"@@contact-manager-form-container.button.discard\"\n *         type=\"button\"\n *         (click)=\"hostRef.discardChanges()\"\n *       >\n *         Discard\n *       </button>\n *       <button\n *         i18n=\"@@contact-manager-form-container.button.cancel\"\n *         type=\"button\"\n *         bbButton\n *         color=\"secondary\"\n *         (click)=\"context.dismiss()\"\n *       >\n *         Not now\n *       </button>\n *     </div>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Directive({\n  selector: '[bbContactsEditDiscardConfirmationCustomizable]',\n})\nexport class ContactsEditDiscardConfirmationCustomizableDirective extends BbTemplate<\n  ContactsFormContainerComponent,\n  { close: (result: any) => void; dismiss: (reason: any) => void }\n> {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable, of, Subject } from 'rxjs';\nimport { catchError, map, mergeMap, take, withLatestFrom } from 'rxjs/operators';\n\nimport { ContactsService } from '../../services/contacts.service';\nimport { ContactItem } from '@backbase/contact-common-ang';\nimport { ContactsFormComponent } from '../../components/contacts-form/contacts-form.component';\nimport { ContactsNavigationService, View } from '../../services/contacts-navigation.service';\nimport { ContactsFormItem } from '../../models/types';\nimport { ContactManagerPreferencesService } from '../../services/contacts-preferences.service';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\n/**\n * Container component for showing contact details.\n *\n * @usageNotes\n *\n * ### Display create/ edit form for contacts\n *\n * ```html\n * <bb-contacts-form-container></bb-contacts-form-container>\n * ```\n *\n * ### Additionally use the container component in routing.\n *\n * ```typescript\n * const routes: [\n *   {\n *   path: 'edit/:id/:type',\n *   canDeactivate: [CanDeactivateGuard],\n *   component: ContactsFormContainerComponent,\n * }]\n *\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Component({\n  selector: 'bb-contacts-form-container',\n  templateUrl: './contacts-form-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactsFormContainerComponent implements OnInit {\n  readonly hostRef = this;\n  readonly itemId = this.route.paramMap.pipe(map((params: ParamMap) => params.get('id')));\n\n  readonly itemType$ = this.route.paramMap.pipe(map((params: ParamMap) => params.get('type')));\n\n  readonly item: Observable<ContactsFormItem | undefined> = this.service.item.pipe(\n    map((item: ContactItem | undefined): ContactsFormItem => this.fromService(item)),\n  );\n\n  readonly notificationTimeout$: Observable<number> = this.propertiesService.notificationDismissTime$;\n\n  @ViewChild(ContactsFormComponent)\n  formComponent!: ContactsFormComponent;\n\n  @ViewChild('notificationCreateSuccess')\n  notificationCreateSuccessTemplate?: TemplateRef<any>;\n\n  @ViewChild('notificationCreateError')\n  notificationCreateErrorTemplate?: TemplateRef<any>;\n\n  @ViewChild('notificationEditSuccess')\n  notificationEditSuccessTemplate?: TemplateRef<any>;\n\n  @ViewChild('notificationEditError')\n  notificationEditErrorTemplate?: TemplateRef<any>;\n\n  @ViewChild('discardChangesModalContent')\n  discardChangesModalContent!: ViewContainerRef;\n\n  isDiscardConfirmOpened = false;\n  discard$ = new Subject<boolean>();\n  isPendingRequest = false;\n\n  constructor(\n    private readonly service: ContactsService,\n    private readonly route: ActivatedRoute,\n    private readonly navigation: ContactsNavigationService,\n    private readonly notificationService: NotificationService,\n    private readonly propertiesService: ContactManagerPreferencesService,\n    private readonly cdr: ChangeDetectorRef,\n  ) {\n    service.getItemFrom(this.itemId);\n  }\n\n  /**\n   * onInit - lifecycle hook for setting current view.\n   */\n  ngOnInit(): void {\n    this.navigation.currentView = View.Edit;\n    this.isPendingRequest = false;\n  }\n\n  /**\n   * Calling the save api and showing the notification.\n   *\n   * @param {ContactsFormItem} item - Contact Object while save\n   */\n  save(item: ContactsFormItem): void {\n    this.isPendingRequest = true;\n    this.itemId\n      .pipe(\n        mergeMap(() => this.service.save(this.toService(item))),\n        catchError(() => of(undefined)),\n        withLatestFrom(this.notificationTimeout$),\n        map(([id, timeout]): { id: string | undefined; timeout: number } => ({ id, timeout })),\n        take(1),\n      )\n      .subscribe(({ id, timeout }) => {\n        this.isPendingRequest = false;\n        this.formComponent.contactsForm.markAsPristine();\n        if (id) {\n          this.navigation.select(id);\n          this.notificationService.showNotification({\n            header: (item.id\n              ? this.notificationEditSuccessTemplate\n              : this.notificationCreateSuccessTemplate) as TemplateRef<any>,\n            message: '',\n            modifier: 'success',\n            ttl: timeout,\n          });\n        } else {\n          this.notificationService.showNotification({\n            header: (item.id\n              ? this.notificationEditErrorTemplate\n              : this.notificationCreateErrorTemplate) as TemplateRef<any>,\n            message: '',\n            modifier: 'error',\n            ttl: timeout,\n          });\n        }\n        this.navigation.currentView = View.List;\n        this.navigation.list();\n      });\n  }\n\n  /**\n   * showing the confirmation modal, when moving away from route.\n   *\n   * @returns {Promise<boolean> | boolean} whether route can be deactivated\n   */\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.formComponent?.contactsForm?.dirty) {\n      this.isDiscardConfirmOpened = true;\n      this.discard$.complete();\n      this.discard$ = new Subject();\n      this.cdr.markForCheck();\n\n      return this.discard$;\n    }\n\n    return true;\n  }\n\n  /**\n   *  When the Edit is cancelled. It determines if it should show the selected contact or list\n   *\n   * @param {string} id - Contact Id.\n   */\n  cancelEdit(id: string): void {\n    if (id) {\n      this.navigation.select(id);\n      this.navigation.currentView = View.Detail;\n    } else {\n      this.navigation.list();\n      this.navigation.currentView = View.List;\n    }\n  }\n\n  /**\n   * Method to go to previous screen based on id\n   *\n   * @param {string | undefined} id - Contact Id\n   */\n  back(id: string | undefined): void {\n    if (id) {\n      this.navigation.list();\n      this.navigation.currentView = View.List;\n    } else {\n      this.navigation.newContact();\n      this.navigation.currentView = View.Select;\n    }\n  }\n\n  /**\n   *\n   * @param {ContactItem | undefined} item Contact object.\n   * @returns {ContactsFormItem} The transformed contact Object when returned from API.\n   */\n  // eslint-disable-next-line complexity\n  fromService(item: ContactItem | undefined): ContactsFormItem {\n    if (item) {\n      return {\n        id: item.id,\n        name: item.name,\n        IBAN: item.accounts && item.accounts[0] && item.accounts[0].IBAN ? item.accounts[0].IBAN : undefined,\n        accountNumber:\n          item.accounts && item.accounts[0] && item.accounts[0].accountNumber\n            ? item.accounts[0].accountNumber\n            : undefined,\n        email: item.accounts && item.accounts[0] && item.accounts[0].email ? item.accounts[0].email : undefined,\n        phoneNumber:\n          item.accounts && item.accounts[0] && item.accounts[0].phoneNumber ? item.accounts[0].phoneNumber : undefined,\n        accounts: item.accounts || [],\n        additions: item.additions || {},\n      };\n    } else {\n      return { id: '', name: '', surname: '', initials: '', accounts: [], additions: {} };\n    }\n  }\n\n  /**\n   *\n   * @param {ContactsFormItem} item Contact Object\n   * @returns {ContactItem} The trandformed contact object when submitting to API.\n   */\n  toService(item: ContactsFormItem): ContactItem {\n    return {\n      id: item.id,\n      name: item.name,\n      accounts: [\n        {\n          ...(item.accounts && item.accounts[0] ? item.accounts[0] : {}),\n          ...(item.IBAN ? { IBAN: item.IBAN } : {}),\n          ...(item.accountNumber ? { accountNumber: item.accountNumber } : {}),\n          ...(item.phoneNumber ? { phoneNumber: item.phoneNumber } : {}),\n          ...(item.email ? { email: item.email } : {}),\n        },\n      ],\n      ...(item.additions ? { additions: item.additions } : {}),\n    };\n  }\n\n  /**\n   * Method that calls the delete api and returns to the list.\n   *\n   * @param {string} id Contact Id to be deleted\n   */\n  deleteContactsItem(id: string) {\n    this.service.delete(id);\n    this.navigation.list();\n    this.navigation.currentView = View.List;\n  }\n\n  /**\n   * event handler for confirming discard\n   */\n  onConfirmDiscard() {\n    this.discard$.next(true);\n    this.discard$.complete();\n    this.isDiscardConfirmOpened = false;\n  }\n\n  /**\n   * event handler for canceling discard\n   */\n  onCancelDiscard() {\n    this.discard$.next(false);\n    this.discard$.complete();\n    this.isDiscardConfirmOpened = false;\n  }\n}\n","<ng-container *ngIf=\"item | async as item; else loadingTemplate\">\n  <bb-contacts-form\n    [item]=\"item\"\n    [type]=\"itemType$ | async\"\n    [disabledSubmit]=\"isPendingRequest\"\n    (save)=\"save($event)\"\n    (cancelEdit)=\"cancelEdit($event)\"\n    (backEvent)=\"back($event)\"\n    (deleteContactsItem)=\"deleteContactsItem($event)\"\n  ></bb-contacts-form>\n</ng-container>\n\n<ng-template #notificationCreateSuccess>\n  <ng-container bbContactsCreateSuccessNotificationCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n  <ng-template bbContactsCreateSuccessNotificationCustomizable>\n    <span\n      i18n=\"@@contact-manager-form-container.notification-create.success\"\n      data-role=\"successfully-saved-contact\"\n      role=\"alert\"\n      aria-atomic=\"true\"\n    >\n      Successfully saved Contact\n    </span>\n  </ng-template>\n</ng-template>\n\n<ng-template #notificationCreateError>\n  <ng-container bbContactsCreateErrorNotificationCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n  <ng-template bbContactsCreateErrorNotificationCustomizable>\n    <span\n      i18n=\"@@contact-manager-form-container.notification-create.error\"\n      data-role=\"failed-to-save-contact\"\n      role=\"alert\"\n      aria-atomic=\"true\"\n    >\n      Error saving Contact\n    </span>\n  </ng-template>\n</ng-template>\n\n<ng-template #notificationEditSuccess>\n  <ng-container bbContactsEditSuccessNotificationCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n  <ng-template bbContactsEditSuccessNotificationCustomizable>\n    <span\n      i18n=\"@@contact-manager-form-container.notification-edit.success\"\n      data-role=\"successfully-saved-contact\"\n      role=\"alert\"\n      aria-atomic=\"true\"\n    >\n      Successfully saved Contact\n    </span>\n  </ng-template>\n</ng-template>\n\n<ng-template #notificationEditError>\n  <ng-container bbContactsEditErrorNotificationCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n  <ng-template bbContactsEditErrorNotificationCustomizable>\n    <span\n      i18n=\"@@contact-manager-form-container.notification-edit.error\"\n      data-role=\"failed-to-save-contact\"\n      role=\"alert\"\n      aria-atomic=\"true\"\n    >\n      Error saving Contact\n    </span>\n  </ng-template>\n</ng-template>\n\n<ng-template #loadingTemplate>\n  <div class=\"bb-state-container\">\n    <bb-loading-indicator-ui\n      i18n-text=\"@@contact-manager-form-container.loading.label\"\n      text=\"Loading...\"\n    ></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n\n<ng-container bbContactsEditDiscardConfirmationCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n<ng-template bbContactsEditDiscardConfirmationCustomizable let-hostRef>\n  <bb-confirm-action-dialog\n    [isOpen]=\"hostRef.isDiscardConfirmOpened\"\n    [confirmButtonColor]=\"'danger'\"\n    (confirm)=\"hostRef.onConfirmDiscard()\"\n    (cancel)=\"hostRef.onCancelDiscard()\"\n  >\n    <span title i18n=\"@contact-manager-form-container.header.discardChanges\">Discard Changes</span>\n    <span body i18n=\"@@contact-manager-form-container.discardChangesConfirmation\">\n      Are you sure you want to discard your changes? This action cannot be undone.\n    </span>\n    <span cancelButtonLabel i18n=\"@@contact-manager-form-container.button.cancel\">Not now</span>\n    <span confirmButtonLabel i18n=\"@@contact-manager-form-container.button.discard\">Discard</span>\n  </bb-confirm-action-dialog>\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n/**\n *\n * This guard is called while deactivating the route to check if the form is dirty.\n *\n * @see ContactManagerWidgetModule\n * @usageNotes\n *\n * ### Ensure the ContactManagerWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ContactManagerWidgetModule,\n *   ],\n * })\n * export class ContactManagerWidgetModule {}\n * ```\n *\n * ### Inject this guard into your route\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [{\n *   path: 'edit/:id/:type',\n *   canDeactivate: [CanDeactivateGuard],\n *   component: ContactsFormContainerComponent,\n * },]\n * })\n *  export class ContactManagerWidgetModule {\n * ```\n */\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\n  canDeactivate(component: CanComponentDeactivate) {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AccountCreateType, CreateListType } from '../../models/types';\nimport { ContactsNavigationService, View } from '../../services/contacts-navigation.service';\n\n/**\n * Displays a list of all contact types, allowing one to be selected.\n *\n * @usageNotes\n *\n * ### Display a list of types of contact that can be created\n *\n * ```html\n * <bb-contact-account-select-type\n *   [listOfAccountTypes]=\"createContactList$ | async\"\n *   [noOfItemsinList]=\"noOfItemsinList\n * ></bb-contact-account-select-type>\n * ```\n *\n * ### Additionally set the selected contact type\n *\n * ```html\n * <bb-contact-account-select-type\n *   [listOfAccountTypes]=\"createContactList$ | async\"\n *   [noOfItemsinList]=\"noOfItemsinList\n *   (selectedAccountType)=\"selectedAccountType()\"\n * ></bb-contact-account-select-type>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n@Component({\n  selector: 'bb-contact-account-select-type',\n  templateUrl: './contact-select-account-type.component.html',\n})\nexport class ContactSelectAccountTypeComponent implements OnInit {\n  /**\n   * All the account Type in an array.\n   */\n  @Input()\n  listOfAccountTypes!: CreateListType[];\n  /**\n   * Number of properties which are enabled.\n   */\n  @Input()\n  noOfItemsinList!: number;\n  /**\n   * event when account is selected.\n   */\n  @Output()\n  selectedAccountType: EventEmitter<string> = new EventEmitter<string>();\n\n  public readonly createAccountTypeRef = AccountCreateType;\n\n  constructor(private navigation: ContactsNavigationService) {}\n  /**\n   * OnInit lifecycle hook.\n   */\n  ngOnInit(): void {\n    this.navigation.currentView = View.Edit;\n    if (this.noOfItemsinList === 0 || this.noOfItemsinList === 1) {\n      this.navigation.newContactForm(\n        this.listOfAccountTypes.find((list) => list.enableItem)?.listItem || this.createAccountTypeRef.IBAN,\n      );\n    }\n  }\n  /**\n   * Update the selected account type for contact creation.\n   *\n   * @param {CreateListType} $event -The selected contact Type details.\n   */\n  updateCreateContactType($event: CreateListType) {\n    this.navigation.currentView = View.Edit;\n    this.navigation.newContactForm($event.listItem);\n  }\n}\n","<div class=\"bb-block bb-block--xl\">\n  <div class=\"bb-stack bb-stack--align-bottom\">\n    <div class=\"bb-stack__item bb-stack__item--fill\">\n      <div class=\"bb-block\" data-role=\"contact-details-info-name\">\n        <span\n          class=\"d-none\"\n          data-role=\"create-contact-label\"\n          aria-hidden=\"true\"\n          i18n=\"Create new contact heading | Title shown when user is in select contact type@@contact-manager-detail.create.select.heading\"\n          #heading\n        >\n          Create new contact\n        </span>\n        <bb-header-ui data-role=\"create-new-contact-label\" headingType=\"h3\" [heading]=\"heading.textContent\">\n        </bb-header-ui>\n      </div>\n    </div>\n  </div>\n</div>\n<hr />\n<div class=\"bb-lock bb-text-support\">\n  <div\n    class=\"bb-bock\"\n    data-role=\"create-contact-select-new-account-info\"\n    i18n=\"@@create-contact-type-list.select.info.text\"\n  >\n    Select which information you want to use to create a contact. You can move money with an account number, a phone\n    number or an email\n  </div>\n</div>\n<div class=\"bb-select-payment-option\">\n  <div *ngFor=\"let listItem of listOfAccountTypes\">\n    <div *ngIf=\"listItem.enableItem\">\n      <ng-container *ngTemplateOutlet=\"listButton; context: { listItem: listItem}\"></ng-container>\n    </div>\n  </div>\n</div>\n\n<ng-template #listButton let-listItem=\"listItem\">\n  <div class=\"bb-button-bar m-3\">\n    <button\n      class=\"bb-button-bar__button bb-button-bar__button--across bb-inline-stack col-12 bb-select-payment-option__label\"\n      bbButton\n      color=\"unstyled\"\n      (click)=\"updateCreateContactType(listItem)\"\n    >\n      <ng-container [ngSwitch]=\"listItem.listItem\">\n        <ng-container *ngSwitchCase=\"createAccountTypeRef.IBAN\">\n          <bb-icon-ui class=\"bb-inline-stack__item col bb-text-support\" name=\"person-outline\"></bb-icon-ui>\n          <div data-role=\"iban-item\" class=\"col-10 text-left\">\n            <ng-container i18n=\"@@create-contact-type-list.select.button.text.iban\">With an IBAN </ng-container>\n          </div>\n\n          <div class=\"col\">\n            <bb-icon-ui class=\"bb-inline-stack__item col-1 bb-text-support\" name=\"angle-right\"></bb-icon-ui>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"createAccountTypeRef.ACCOUNT\">\n          <bb-icon-ui class=\"bb-inline-stack__item col bb-text-support\" name=\"person-outline\"></bb-icon-ui>\n          <div data-role=\"account-number-item\" class=\"col-10 text-left\">\n            <ng-container i18n=\"@@create-contact-type-list.select.button.text.account\"\n              >With an account number\n            </ng-container>\n          </div>\n\n          <div class=\"col\">\n            <bb-icon-ui class=\"bb-inline-stack__item col-1 bb-text-support\" name=\"angle-right\"></bb-icon-ui>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"createAccountTypeRef.EMAIL\">\n          <bb-icon-ui class=\"bb-inline-stack__item col bb-text-support\" name=\"inbox\"></bb-icon-ui>\n          <div data-role=\"email-item\" class=\"col-10 text-left\">\n            <ng-container i18n=\"@@create-contact-type-list.select.button.text.email\">With an email </ng-container>\n          </div>\n\n          <div class=\"col\">\n            <bb-icon-ui class=\"bb-inline-stack__item col-1 bb-text-support\" name=\"angle-right\"></bb-icon-ui>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"createAccountTypeRef.PHONE\">\n          <bb-icon-ui class=\"bb-inline-stack__item col bb-text-support\" name=\"phone\"></bb-icon-ui>\n          <div data-role=\"phone-number-item\" class=\"col-10 text-left\">\n            <ng-container i18n=\"@@create-contact-type-list.select.button.text.phone\">With a phone number </ng-container>\n          </div>\n\n          <div class=\"col\">\n            <bb-icon-ui class=\"bb-inline-stack__item col-1 bb-text-support\" name=\"angle-right\"></bb-icon-ui>\n          </div>\n        </ng-container>\n      </ng-container>\n    </button>\n  </div>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { AccountCreateType, CreateListType } from '../../models/types';\nimport { ContactsService } from '../../services/contacts.service';\nimport { ContactManagerPreferencesService } from '../../services/contacts-preferences.service';\n/**\n *\n * Container component for showing contact list.\n *\n * @usageNotes\n *\n * ### Display list of all the types of contacts to select before creation.\n *\n * ```html\n * <bb-contacts-type-list-container></bb-contacts-type-list-container>\n * ```\n * ### Additionally use the container component in routing.\n *\n * ```typescript\n * const routes: [\n * {\n *  path: 'select',\n *  component: ContactsTypeListContainerComponent\n * }]\n *\n *\n * @ngModule ContactManagerWidgetModule\n */\n@Component({\n  selector: 'bb-contacts-type-list-container',\n  templateUrl: './contacts-type-list-container.component.html',\n})\nexport class ContactsTypeListContainerComponent {\n  /**\n   * property from user if the contact creation through email is allowed\n   */\n  readonly allowEmail$: Observable<boolean> = this.propertiesService.createContactEmail$;\n  /**\n   * property from user if the contact creation through IBAN is allowed\n   */\n  readonly allowIBAN$: Observable<boolean> = this.propertiesService.createContactIBAN$;\n  /**\n   * property from user if the contact creation through Account Number is allowed\n   */\n  readonly allowAccount$: Observable<boolean> = this.propertiesService.createContactAccount$;\n  /**\n   * property from user if the contact creation through Phone Number is allowed\n   */\n  readonly allowPhone$: Observable<boolean> = this.propertiesService.createContactPhone$;\n\n  /**\n   * check which properties are allowed and showing them on screen.\n   */\n  createContactList$: Observable<CreateListType[]> = combineLatest([\n    this.allowAccount$,\n    this.allowIBAN$,\n    this.allowPhone$,\n    this.allowEmail$,\n  ]).pipe(\n    tap(\n      (contactListItem) =>\n        (this.noOfItemsinList = contactListItem.filter((listItem) => listItem && typeof listItem === 'boolean').length),\n    ),\n    map(([Account, IBAN, Phone, Email]) => [\n      {\n        listItem: AccountCreateType.ACCOUNT,\n        enableItem: Account?.valueOf(),\n      },\n      {\n        listItem: AccountCreateType.IBAN,\n        enableItem: IBAN?.valueOf(),\n      },\n      { listItem: AccountCreateType.PHONE, enableItem: Phone?.valueOf() },\n      { listItem: AccountCreateType.EMAIL, enableItem: Email?.valueOf() },\n    ]),\n  );\n\n  noOfItemsinList!: number;\n\n  constructor(\n    private readonly contactService: ContactsService,\n    private readonly propertiesService: ContactManagerPreferencesService,\n  ) {}\n}\n","<bb-contact-account-select-type [listOfAccountTypes]=\"createContactList$ | async\" [noOfItemsinList]=\"noOfItemsinList\">\n</bb-contact-account-select-type>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { ContactsService } from '../../../services/contacts.service';\nimport { ContactItem } from '@backbase/contact-common-ang';\nimport { AccountCreateType, AccountTypeModelKey } from '../../../models/types';\n\n/**\n * Displays an item in the  list of all contacts\n *\n * @usageNotes\n *\n * ### Display a single item in the list of types of contact.\n *\n * ```html\n * <bb-contact-list-item\n *     [contactItem]=\"item\"\n *     [showAccountNumber]=\"true\"\n *     [showAlias]=\"showAlias\"\n *  ></bb-contact-list-item>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Component({\n  selector: 'bb-contact-list-item',\n  templateUrl: './contact-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactsListItemComponent implements OnInit {\n  /**\n   * Contact item that contains the account information of the contact\n   */\n  @Input() contactItem!: ContactItem;\n\n  /**\n   * Wether to show contact account number.\n   * Default is false.\n   */\n  @Input() showAccountNumber = false;\n\n  /**\n   * Wether to show contact alias.\n   * Default is false.\n   */\n  @Input() showAlias = false;\n\n  public readonly accountTypeKeyRef = AccountTypeModelKey;\n  public readonly createAccountType = AccountCreateType;\n  public selectedAccountType!: string;\n\n  constructor(public service: ContactsService) {}\n  /**\n   * OnInit - lifecycle hook.\n   */\n  ngOnInit() {\n    if (this.contactItem === undefined) {\n      throw new Error('`item` input is required in `bb-todo-list-item` component');\n    } else {\n      this.selectedAccountType = this.service.checkaccountType(this.contactItem);\n    }\n  }\n}\n","<div class=\"bb-block bb-block--sm\">\n  <div class=\"bb-block bb-block--xs break-word\">\n    <span class=\"sr-only\">\n      <span i18n=\"name@@bb-contact-list-item.label.name\" data-role=\"name-header\"> Name </span>\n      :&nbsp;\n    </span>\n    <span class=\"bb-text-bold break-word\" data-role=\"list-name\"> {{ contactItem.name }} </span>\n  </div>\n  <div *ngIf=\"showAccountNumber\" class=\"bb-block bb-block--xs break-word\">\n    <ng-container [ngSwitch]=\"selectedAccountType\">\n      <ng-container *ngSwitchCase=\"createAccountType.IBAN\">\n        <span class=\"sr-only\">\n          <span i18n=\"account number@@bb-contact-list-item.label.iban\" data-role=\"account-header\"> IBAN </span>\n          :&nbsp;\n        </span>\n        <ng-container *ngTemplateOutlet=\"accountdetails\"></ng-container>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"createAccountType.EMAIL\">\n        <span class=\"sr-only\">\n          <span i18n=\"account number@@bb-contact-list-item.label.email\" data-role=\"email-header\"> Email </span>\n          :&nbsp;\n        </span>\n        <ng-container *ngTemplateOutlet=\"details\"></ng-container>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"createAccountType.PHONE\">\n        <span class=\"sr-only\">\n          <span i18n=\"account number@@bb-contact-list-item.label.phone.number\" data-role=\"phone-header\">\n            Phone number\n          </span>\n          :&nbsp;\n        </span>\n        <ng-container *ngTemplateOutlet=\"details\"></ng-container>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"createAccountType.ACCOUNT\">\n        <span class=\"sr-only\">\n          <span i18n=\"account number@@bb-contact-list-item.label.account.number\" data-role=\"account-header\">\n            Account number\n          </span>\n          :&nbsp;\n        </span>\n        <ng-container *ngTemplateOutlet=\"accountdetails\"></ng-container>\n      </ng-container>\n    </ng-container>\n  </div>\n  <div *ngIf=\"showAlias && contactItem.alias\" class=\"bb-block bb-block--xs break-word\">\n    <span class=\"sr-only\" data-role=\"alias-header\" i18n=\"name@@bb-contact-list-item.label.alias\">Alias</span>\n    <span class=\"sr-only\">:&nbsp;</span>\n    <span class=\"bb-text-support break-word\" data-role=\"list-alias\"> {{ contactItem.alias }} </span>\n  </div>\n\n  <ng-template #accountdetails>\n    <span class=\"bb-text-support\" data-role=\"list-account-number\" *ngIf=\"contactItem?.accounts[0] as account\">\n      {{ account[selectedAccountType] | bbIban}}\n    </span>\n  </ng-template>\n  <ng-template #details>\n    <span class=\"bb-text-support\" data-role=\"list-account-number\" *ngIf=\"contactItem?.accounts[0] as account\">\n      {{ account[selectedAccountType]}}\n    </span>\n  </ng-template>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ContactItem } from '@backbase/contact-common-ang';\nimport { startWith, takeUntil } from 'rxjs/operators';\nimport { AccountCreateType } from '../../models/types';\n\n/**\n * Displays a list of all contacts\n *\n * @usageNotes\n *\n * ### Display a list of types of contact that can be created\n *\n * ```html\n * <bb-contacts-list-widget\n *       [items]=\"items.contacts\"\n *       [showAlias]=\"false\"\n *     >\n *  </bb-contacts-list-widget>\n * ```\n *\n * ### Additionally update the list\n *\n * ```html\n *  <bb-contacts-list-widget\n *       [items]=\"items.contacts\"\n *       (selectedChange)=\"hostRef.select($event)\"\n *       (formItemChange)=\"hostRef.edit($event)\"\n *       [showAlias]=\"false\"\n *     >\n *   </bb-contacts-list-widget>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Component({\n  selector: 'bb-contacts-list-widget',\n  templateUrl: './contact-list.component.html',\n})\nexport class ContactsListWidgetComponent implements AfterViewInit, OnDestroy {\n  /**\n   * Array of contacts\n   */\n  @Input()\n  items!: Array<ContactItem>;\n  /**\n   * Event that is emitted when selected item changes\n   */\n  @Output() selectedChange = new EventEmitter<string>();\n  /**\n   * The id of current selected contact item\n   */\n  @Input()\n  selectedItemId!: string;\n\n  @ViewChildren('contactItem')\n  contactItem!: QueryList<ElementRef<HTMLLIElement>>;\n  /**\n   * to show Alias in the contact list. default is false\n   */\n  @Input()\n  showAlias!: boolean;\n\n  private focused = 0;\n  contactItemArray: ElementRef[] = [];\n  accountTypeSelected: string = AccountCreateType.IBAN;\n  gc$ = new Subject();\n  public latestSeparator!: string;\n\n  public readonly createAccountTypeRef = AccountCreateType;\n\n  /**\n   * AfterViewInit- lifecycle hook.\n   */\n  ngAfterViewInit(): void {\n    this.contactItem.changes\n      .pipe(startWith(this.contactItem))\n      .pipe(takeUntil(this.gc$))\n      .subscribe((data: QueryList<ElementRef>) => {\n        this.contactItemArray = data.toArray();\n      });\n  }\n\n  /**\n   * onDestroy - lifecycle hook.\n   */\n  ngOnDestroy(): void {\n    this.gc$.next();\n    this.gc$.complete();\n  }\n\n  /**\n   * getTabIndex defines if item can be reached by Tab,\n   * which only the focused item can\n   *\n   * @param {number} i index of an element\n   * @returns {number} [tabindex] parameter value\n   */\n  public getTabIndex(i: number): '0' | '-1' {\n    return i === this.focused ? '0' : '-1';\n  }\n\n  /**\n   * Prevents focus from going beyond the limits of the list\n   *\n   * @param {number} desiredFocus index of an element\n   * @returns {number} index of an element within bounds\n   */\n  private clampDesiredFocus(desiredFocus: number): number {\n    return Math.max(0, Math.min(desiredFocus, this.items.length - 1));\n  }\n\n  /**\n   * Implements keyboard controls for the contact list.\n   * Call on key down events to move the focus to the appropriate element.\n   *\n   * @param {Event} event HTMLEvent object\n   * @param {number} desiredFocus index of an element\n   */\n  onChangeFocusItemTo(event: Event, desiredFocus: number): void {\n    event.preventDefault();\n\n    const realisticFocus = this.clampDesiredFocus(desiredFocus);\n    if (this.focused === realisticFocus) return;\n\n    this.focused = realisticFocus;\n    this.contactItem.find((_, i) => i === this.focused)?.nativeElement?.focus();\n  }\n\n  /**\n   *\n   * @param {string} id - Id of the selcted contact\n   * @param {number} index - index of the selected contact\n   */\n  onContactSelect(id: string, index: number) {\n    this.focused = index;\n    this.accountTypeSelected = '';\n    this.selectedChange.emit(id);\n  }\n\n  /**\n   * isListHeading defines if grouping heading\n   * should be added before list item\n   *\n   * @param {ContactItem} item ContactItem object\n   * @param {number} index index of an element\n   * @returns {boolean} whether item a list heading\n   */\n  public isListHeading(item: ContactItem, index: number): boolean {\n    const char = this.getGroupHeadingChar(item.name.trim());\n    if (this.latestSeparator !== char || !index) {\n      this.latestSeparator = char;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * hasNoSeparatorClass tells if the list item\n   * should have bb-grouped-list__item--no-separator class.\n   *\n   * @param {number} index index of an element\n   * @returns {boolean} whether element should have separator class\n   */\n  public hasNoSeparatorClass(index: number): boolean {\n    const nextItem = this.items[index + 1];\n    if (!nextItem) {\n      return false;\n    } else {\n      const nextChar = this.getGroupHeadingChar(nextItem.name.trim());\n      if (this.latestSeparator !== nextChar) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private getGroupHeadingChar(name: string): string {\n    return String.fromCodePoint(name.codePointAt(0)).toUpperCase();\n  }\n}\n","<div *ngIf=\"items && items.length\">\n  <ul class=\"bb-grouped-list\" data-role=\"existing-contact\" role=\"list\">\n    <ng-container *ngFor=\"let item of items; let i = index\">\n      <li\n        *ngIf=\"isListHeading(item, i)\"\n        class=\"bb-grouped-list__group bb-text-support bb-text-bold\"\n        data-role=\"header-row\"\n      >\n        {{ latestSeparator }}\n      </li>\n      <li\n        class=\"bb-grouped-list__item\"\n        role=\"button\"\n        data-role=\"contact-manager-list-item\"\n        [tabindex]=\"getTabIndex(i)\"\n        [attr.aria-pressed]=\"selectedItemId === item.id\"\n        [ngClass]=\"{\n          'bb-grouped-list__item--is-active': selectedItemId === item.id,\n          'bb-grouped-list__item--no-separator': hasNoSeparatorClass(i)\n        }\"\n        (keydown.Home)=\"onChangeFocusItemTo($event, 0)\"\n        (keydown.ArrowUp)=\"onChangeFocusItemTo($event, i-1)\"\n        (keydown.ArrowDown)=\"onChangeFocusItemTo($event, i+1)\"\n        (keydown.End)=\"onChangeFocusItemTo($event, items.length)\"\n        (click)=\"onContactSelect(item.id, i)\"\n        (keyup.Space)=\"onContactSelect(item.id, i)\"\n        (keyup.Enter)=\"onContactSelect(item.id, i)\"\n        #contactItem\n      >\n        <bb-contact-list-item\n          [contactItem]=\"item\"\n          [showAccountNumber]=\"true\"\n          [showAlias]=\"showAlias\"\n        ></bb-contact-list-item>\n      </li>\n    </ng-container>\n  </ul>\n</div>\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Directive } from '@angular/core';\nimport { ContactItem } from '@backbase/contact-common-ang';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport type { ContactsListContainerComponent } from './contacts-list-container.component';\n\n/**\n * This is an extension slot to be used for customizing contact manager widget..\n *\n * @usageNotes\n *\n * ### Display a single contact detail\n *\n * ```html\n *  <ng-template bbContactsListContainerCustomizable let-hostRef let-items=\"context\">\n *   <div\n *     class=\"col\"\n *     [ngClass]=\"{\n *       'd-block': hostRef.isListView | async,\n *       'd-lg-block d-none': !(hostRef.isListView | async)\n *     }\"\n *   >\n *     <bb-contacts-list-widget\n *       [items]=\"items.contacts\"\n *       (selectedChange)=\"hostRef.select($event)\"\n *       (formItemChange)=\"hostRef.edit($event)\"\n *       [showAlias]=\"false\"\n *     >\n *     </bb-contacts-list-widget>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Directive({\n  selector: '[bbContactsListContainerCustomizable]',\n})\nexport class ContactsListContainerCustomizableDirective extends BbTemplate<\n  ContactsListContainerComponent,\n  Array<ContactItem>\n> {}\n/**\n * This is an extension slot to be used for customizing contact manager header section\n *\n * @usageNotes\n *\n * ### Display a header section with search box\n *\n * ```html\n *  <ng-template bbContactsTopSectionCustomizable let-hostRef let-item=\"context\">\n *   <div class=\"col bb-stack\">\n *     <div class=\"bb-stack__item bb-stack__item--fill\">\n *       <bb-search-box-ui\n *         class=\"bb-toolbar__item\"\n *         data-role=\"search-contact-textbox\"\n *         placeholder=\"Search\"\n *         i18n-placeholder=\"Search box placeholder | Placeholder for search box@@contact-manager.placeholder.search\"\n *         [showSearch]=\"true\"\n *         [showClear]=\"true\"\n *         (submit)=\"hostRef.searchBoxItemSelected()\"\n *         (clear)=\"hostRef.searchBoxItemSelected(true)\"\n *         [formControl]=\"hostRef.searchTerm\"\n *         (keyUp.enter)=\"hostRef.searchBoxItemSelected()\"\n *       ></bb-search-box-ui>\n *     </div>\n *     <div class=\"bb-stack__item\">\n *       <button\n *         bbButton\n *         i18n=\"New Contact Button | Button for creating a new contact@@contact-manager.button.newContact\"\n *         data-role=\"new-contact-button\"\n *         class=\"d-none d-lg-block bb-button-bar__button\"\n *         [disabled]=\"!(hostRef.newContactAllowed | async)\"\n *         (click)=\"hostRef.newContact(item.contacts.length)\"\n *         type=\"button\"\n *       >\n *         New Contact\n *       </button>\n *       <button\n *         bbButton\n *         i18n=\"New Contact Button | Button for creating a new contact@@contact-manager.button.newContact\"\n *         data-role=\"new-contact-button\"\n *         class=\"d-block d-lg-none bb-button-bar__button\"\n *         [disabled]=\"!hostRef.newContactAllowed\"\n *         (click)=\"hostRef.newContact(item.contacts.length)\"\n *         type=\"button\"\n *       >\n *         New Contact\n *       </button>\n *     </div>\n *   </div>\n *   <ng-template #rt let-result=\"result\" let-term=\"term\">\n *     <div class=\"text-truncate\" [title]=\"result\">\n *       <ngb-highlight [result]=\"result\" [term]=\"term\"></ngb-highlight>\n *     </div>\n *   </ng-template>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Directive({\n  selector: '[bbContactsTopSectionCustomizable]',\n})\nexport class ContactsTopSectionCustomizableDirective extends BbTemplate<\n  ContactsListContainerComponent,\n  Array<ContactItem>\n> {}\n/**\n * This is an extension slot to be used for customizing contact manager pagination\n *\n * @usageNotes\n *\n * ### Display the pagination\n *\n * ```html\n *   <ng-template bbContactsLoadMoreCustomizable let-hostRef let-items=\"context\">\n *   <bb-pagination-ui\n *     *ngIf=\"(hostRef.paginationType | async) !== 'load-more'\"\n *     class=\"bb-pagination\"\n *     [page]=\"(hostRef.pagination | async)?.from\"\n *     [boundaryLinks]=\"false\"\n *     [directionLinks]=\"true\"\n *     [totalItems]=\"items?.count\"\n *     [itemsPerPage]=\"hostRef.pageSize | async\"\n *     [maxNavPages]=\"hostRef.maxNavPages | async\"\n *     (pageChange)=\"hostRef.onPageChange($event)\"\n *   ></bb-pagination-ui>\n *   <div class=\"p-5 text-center\" *ngIf=\"(hostRef.paginationType | async) === 'load-more'\">\n *     <button\n *       class=\"border text-dark btn btn-secondary\"\n *       (click)=\"hostRef.loadMore()\"\n *       [disabled]=\"items.count && items.count <= items.contacts.length\"\n *     >\n *       <ng-container\n *          i18n=\"Load more button label | Load more button shown down bellow contact list@@contact-manager.load-more.label\">\n *         Load more\n *       </ng-container>\n *     </button>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Directive({\n  selector: '[bbContactsLoadMoreCustomizable]',\n})\nexport class ContactsLoadMoreCustomizableDirective extends BbTemplate<\n  ContactsListContainerComponent,\n  Array<ContactItem>\n> {}\n/**\n * This is an extension slot to be used for customizing contact manager widget loading view\n *\n * @usageNotes\n *\n * ### Display loading icon\n *\n * ```html\n *    <ng-template bbContactsLoadingCustomizable let-hostRef>\n *   <div class=\"bb-state-container\">\n *     <bb-loading-indicator-ui\n *       i18n-text=\"@@contact-manager.loading.label\"\n *       text=\"Loading contacts...\"\n *     ></bb-loading-indicator-ui>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Directive({\n  selector: '[bbContactsLoadingCustomizable]',\n})\nexport class ContactsLoadingCustomizableDirective extends BbTemplate<ContactsListContainerComponent, undefined> {}\n/**\n * This is an extension slot to be used for customizing contact manager widget empty view\n *\n * @usageNotes\n *\n * ### Display empty message\n *\n * ```html\n *  <ng-template bbContactsEmptyStateCustomizable let-hostRef>\n *   <div class=\"bb-state-container\">\n *     <bb-empty-state-ui\n *       i18n-title=\"@@contact-manager.state.noContactsLoaded.title\"\n *       title=\"No contacts\"\n *       i18n-subtitle=\"@@contact-manager.state.noContactsLoaded.subtitle\"\n *       subtitle=\"You don't have any contacts to display yet.<br>Try adding a new contact using the 'New Contact' button\"\n *       iconClasses=\"d-flex justify-content-center mb-3\"\n *       iconModifier=\"contacts\"\n *       iconColor=\"primary\"\n *       iconSize=\"xxl\"\n *     ></bb-empty-state-ui>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Directive({\n  selector: '[bbContactsEmptyStateCustomizable]',\n})\nexport class ContactsEmptyStateCustomizableDirective extends BbTemplate<ContactsListContainerComponent, undefined> {}\n/**\n * This is an extension slot to be used for customizing contact manager Empty view on search\n *\n * @usageNotes\n *\n * ### Display no search result found message.\n *\n * ```html\n *  <ng-template bbContactsEmptySearchStateCustomizable let-hostRef let-term=\"context\">\n *   <div class=\"bb-state-container\">\n *     <bb-empty-state-ui\n *       i18n-title=\"@@contact-manager.state.empty-search.title\"\n *       title=\"No results found\"\n *       i18n-subtitle=\"@@contact-manager.state.empty-search.subtitle\"\n *       subtitle=\"We can't find what you're looking for. Please try a different criteria.\"\n *       iconClasses=\"d-flex justify-content-center mb-3\"\n *       iconModifier=\"search\"\n *       iconColor=\"primary\"\n *       iconSize=\"xxl\"\n *     ></bb-empty-state-ui>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Directive({\n  selector: '[bbContactsEmptySearchStateCustomizable]',\n})\nexport class ContactsEmptySearchStateCustomizableDirective extends BbTemplate<ContactsListContainerComponent, string> {}\n/**\n * This is an extension slot to be used for customizing contact Error state\n *\n * @usageNotes\n *\n * ### Display error view\n *\n * ```html\n *  <ng-template bbContactsErrorStateCustomizable let-hostRef let-error=\"context\">\n *   <div class=\"bb-state-container\">\n *     <bb-common-error-state-ui [error]=\"error\"></bb-common-error-state-ui>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Directive({\n  selector: '[bbContactsErrorStateCustomizable]',\n})\nexport class ContactsErrorStateCustomizableDirective extends BbTemplate<\n  ContactsListContainerComponent,\n  HttpErrorResponse\n> {}\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of, Subject, Subscription } from 'rxjs';\nimport {\n  catchError,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  map,\n  shareReplay,\n  startWith,\n  tap,\n} from 'rxjs/operators';\n\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { ContactList, ContactsService, ItemId, ListParams, PageParams } from '../../services/contacts.service';\nimport { ContactItem, LoadMoreMethod } from '@backbase/contact-common-ang';\nimport { ContactsNavigationService, View } from '../../services/contacts-navigation.service';\nimport { ActivatedRoute, Event, NavigationEnd, ParamMap, Router } from '@angular/router';\nimport { FormControl } from '@angular/forms';\nimport { Property } from '@backbase/foundation-ang/web-sdk';\nimport { ContactManagerPreferencesService } from '../../services/contacts-preferences.service';\n\n/**\n * The following extension slots are available in this component:\n *  - `ContactsListContainerCustomizableDirective`\n *  - `ContactsTopSectionCustomizableDirective`\n *  - `ContactsLoadMoreCustomizableDirective`\n *  - `ContactsLoadingCustomizableDirective`\n *  - `ContactsEmptyStateCustomizableDirective`\n *  - `ContactsEmptySearchStateCustomizableDirective`\n *  - `ContactsErrorStateCustomizableDirective`\n *\n * @see ContactsListContainerCustomizableDirective\n * @see ContactsTopSectionCustomizableDirective\n * @see ContactsLoadMoreCustomizableDirective\n * @see ContactsLoadingCustomizableDirective\n * @see ContactsEmptyStateCustomizableDirective\n * @see ContactsEmptySearchStateCustomizableDirective\n * @see ContactsErrorStateCustomizableDirective\n * Container component for showing contact list.\n * @usageNotes\n *\n * ### Display list of all the contacts with details / edit form.\n *\n * ```html\n * <bb-contacts-list-container>\n *  <router-outlet></router-outlet>\n * </bb-contacts-list-container>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Component({\n  selector: 'bb-contacts-list-container',\n  templateUrl: 'contacts-list-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactsListContainerComponent implements OnInit, OnDestroy {\n  firstContactEdit = false;\n  error?: HttpErrorResponse;\n  subscription!: Subscription;\n  isSearchBoxVisible = true;\n  readonly searchTerm = new FormControl();\n  readonly containerlistParams = new BehaviorSubject<string>('');\n  readonly debounceSearch$ = new Subject<string>();\n\n  readonly hostRef: ContactsListContainerComponent = this;\n  readonly newContactAllowed: Observable<boolean> = this.propertiesService.newContact$;\n  readonly pageSize: Observable<number> = this.propertiesService.pageSize$;\n  readonly maxNavPages: Observable<number> = this.propertiesService.maxNavPages$;\n  readonly paginationType: Observable<string> = this.propertiesService.paginationType$;\n\n  readonly isListView: Observable<boolean> = this.router.events.pipe(\n    filter<Event, NavigationEnd>((e: Event): e is NavigationEnd => e instanceof NavigationEnd),\n    map((e: NavigationEnd): string => e.url),\n    startWith(this.router.url),\n    map(() => {\n      const isList = this.navigation.currentView === View.List;\n      if (isList) {\n        this.firstContactEdit = false;\n      }\n\n      return isList;\n    }),\n    shareReplay(),\n  );\n\n  readonly pagination: Observable<PageParams> = combineLatest([this.route.queryParamMap, this.pageSize]).pipe(\n    map(([params, pageSize]) => this.pageParamsFromRoute(params, pageSize)),\n  );\n\n  readonly items: Observable<ContactList | undefined> = this.service.items.pipe(\n    tap((results) => {\n      this.isSearchBoxVisible = !!this.searchTerm.value ? true : results.contacts.length > 0;\n      results.contacts.sort((a: ContactItem, b: ContactItem) =>\n        a.name.toLocaleUpperCase().trim() > b.name.toLocaleUpperCase().trim() ? 1 : -1,\n      );\n    }),\n    catchError((error) => {\n      this.error = error;\n\n      return of(undefined);\n    }),\n  );\n  /**\n   * Observable of currently selected item id\n   */\n  readonly selectedItemId: Observable<ItemId | null> = this.service.currentlySelectedItemId;\n  private readonly listParams: Observable<ListParams> = combineLatest([\n    this.containerlistParams,\n    this.pagination,\n    this.pageSize,\n    this.paginationType,\n  ]).pipe(\n    map(([method, paginationParams, pageSize, paginationType]) => {\n      if (method === LoadMoreMethod.LOAD_MORE && paginationType === LoadMoreMethod.LOAD_MORE) {\n        paginationParams.from++;\n        paginationParams.size = pageSize;\n      }\n\n      return {\n        paginationParams,\n        paginationType,\n        method,\n      };\n    }),\n    map(\n      ({ paginationParams, paginationType, method }): ListParams => ({\n        pagination: {\n          from: paginationParams.from,\n          size: paginationParams.size,\n          query: paginationParams.query,\n        },\n        paginationType,\n        method,\n      }),\n    ),\n  );\n\n  constructor(\n    private readonly service: ContactsService,\n    private readonly navigation: ContactsNavigationService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    private readonly propertiesService: ContactManagerPreferencesService,\n  ) {}\n\n  ngOnInit() {\n    this.subscription = this.listParams.subscribe((params) => {\n      return this.service.updateItemList(\n        params.pagination.query,\n        params.pagination.from,\n        params.pagination.size,\n        params.paginationType,\n        params.method,\n      );\n    });\n    this.subscription.add(\n      this.debounceSearch$\n        .pipe(debounceTime(300), distinctUntilChanged())\n        .subscribe((term: string) => this.searchContacts(term)),\n    );\n  }\n\n  /**\n   * Event handler for search box value change\n   *\n   * @param {string} phrase text to search for\n   */\n  onSearchTermChange(phrase: string) {\n    this.debounceSearch$.next(phrase);\n  }\n\n  /**\n   * Event handler for search box clear\n   */\n  clearSearch() {\n    this.debounceSearch$.next('');\n  }\n\n  /**\n   * Queries contacts with given phrase\n   *\n   * @param {string} phrase text to search for\n   */\n  searchContacts(phrase: string) {\n    this.containerlistParams.next('search');\n    this.navigation.list(0, phrase); // TODO: Remove query params when migrating widget\n  }\n\n  /**\n   * Navigates to list page.\n   *\n   * @param {number} page Current page number.\n   */\n  onPageChange(page: number) {\n    this.navigation.list(page);\n  }\n\n  /**\n   * Updat the list parameter as load more.\n   */\n  loadMore() {\n    this.containerlistParams.next('load-more');\n  }\n\n  /**\n   * Routes to selected contact details.\n   *\n   * @param {string} id  Contact ID\n   */\n  select(id: string) {\n    this.navigation.select(id);\n  }\n\n  /**\n   * Routes to new contact.\n   *\n   * @param {number} totalContacts - total number of contacts.\n   */\n  newContact(totalContacts: number) {\n    this.firstContactEdit = !totalContacts;\n    this.navigation.newContact();\n    this.navigation.currentView = View.Select;\n  }\n\n  /**\n   * method to return back to list view.\n   */\n  backToList() {\n    this.navigation.currentView = View.List;\n    this.navigation.list();\n  }\n\n  private pageParamsFromRoute(query: ParamMap, pageSize?: Property): PageParams {\n    const from = query.get('page');\n    this.searchTerm.setValue(query.get('query') || '');\n\n    return {\n      from: (from && Number.parseInt(from, 10)) || 0,\n      size: pageSize ? Number(pageSize) : 5,\n      query: this.searchTerm.value || '',\n    };\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","<div class=\"card card-body\" data-role=\"loading-label\">\n  <ng-container *ngIf=\"items | async as items; else loadingTemplate\">\n    <div\n      class=\"bb-block bb-block--md\"\n      [ngClass]=\"{\n        'd-none d-lg-block': !(isListView | async)\n      }\"\n    >\n      <div class=\"row\">\n        <ng-container bbContactsTopSectionCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"items\"></ng-container>\n      </div>\n    </div>\n    <div *ngIf=\"!(isListView | async)\" class=\"row d-block d-lg-none\">\n      <button bbButton color=\"unstyled\" (click)=\"backToList()\" class=\"bb-text-bold text-primary\">\n        <bb-icon-ui name=\"angle-left\"></bb-icon-ui>\n        <span i18n=\"Back to list view|Span for going back to list view@@contact-manager.span.backToList\">\n          Back to list\n        </span>\n      </button>\n    </div>\n    <div\n      class=\"row bb-block bb-block--md\"\n      *ngIf=\"(items && items.contacts.length > 0) || hostRef.firstContactEdit; else emptyTemplate\"\n    >\n      <ng-container\n        bbContactsListContainerCustomizable\n        [bbHostRef]=\"hostRef\"\n        [bbTemplateContext]=\"items\"\n      ></ng-container>\n      <div\n        class=\"col col-lg-6\"\n        [ngClass]=\"{\n          'd-none d-lg-block': isListView | async\n        }\"\n      >\n        <ng-content></ng-content>\n      </div>\n    </div>\n    <div\n      class=\"row\"\n      [ngClass]=\"{\n        'd-none d-lg-block': !(isListView | async)\n      }\"\n    >\n      <div class=\"col-lg-6\">\n        <ng-container bbContactsLoadMoreCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"items\"></ng-container>\n        <ng-template bbContactsLoadMoreCustomizable let-hostRef let-items=\"context\">\n          <bb-pagination-ui\n            *ngIf=\"(hostRef.paginationType | async) !== 'load-more'\"\n            class=\"bb-pagination\"\n            [page]=\"(hostRef.pagination | async)?.from\"\n            [boundaryLinks]=\"false\"\n            [directionLinks]=\"true\"\n            [totalItems]=\"items?.count\"\n            [itemsPerPage]=\"hostRef.pageSize | async\"\n            [maxNavPages]=\"hostRef.maxNavPages | async\"\n            (pageChange)=\"hostRef.onPageChange($event)\"\n          ></bb-pagination-ui>\n          <div\n            class=\"p-5 text-center\"\n            *ngIf=\"(hostRef.paginationType | async) === 'load-more' && items.contacts.length > 0\"\n          >\n            <bb-load-button-ui\n              class=\"bb-block bb-block--md\"\n              color=\"secondary\"\n              data-role=\"contact-load-more\"\n              *ngIf=\"items.count && items.count > items.contacts.length\"\n              (click)=\"hostRef.loadMore()\"\n            >\n              <ng-container\n                i18n=\"Load more button label | Load more button shown down bellow contact list@@contact-manager.load-more.label\"\n              >\n                Load more\n              </ng-container>\n            </bb-load-button-ui>\n          </div>\n        </ng-template>\n      </div>\n    </div>\n  </ng-container>\n\n  <ng-template bbContactsListContainerCustomizable let-hostRef let-items=\"context\">\n    <div\n      class=\"col\"\n      [ngClass]=\"{\n        'd-block': hostRef.isListView | async,\n        'd-lg-block d-none': !(hostRef.isListView | async)\n      }\"\n    >\n      <bb-contacts-list-widget\n        [items]=\"items.contacts\"\n        [selectedItemId]=\"hostRef.selectedItemId | async\"\n        [showAlias]=\"false\"\n        (selectedChange)=\"hostRef.select($event)\"\n      >\n      </bb-contacts-list-widget>\n    </div>\n  </ng-template>\n\n  <ng-template bbContactsTopSectionCustomizable let-hostRef let-items=\"context\">\n    <div class=\"col bb-stack\">\n      <div class=\"bb-stack__item bb-stack__item--fill\">\n        <bb-search-box-ui\n          *ngIf=\"hostRef.isSearchBoxVisible\"\n          class=\"bb-toolbar__item\"\n          data-role=\"contact-manager-search\"\n          placeholder=\"Search\"\n          i18n-placeholder=\"Search box placeholder | Placeholder for search box@@contact-manager.placeholder.search\"\n          aria-label=\"Search\"\n          i18n-aria-label=\"@@contact-manager.placeholder.search\"\n          [showSearch]=\"true\"\n          [showClear]=\"true\"\n          [formControl]=\"hostRef.searchTerm\"\n          (valueChange)=\"hostRef.onSearchTermChange($event)\"\n          (submit)=\"hostRef.searchContacts(hostRef.searchTerm.value)\"\n          (keyup.enter)=\"hostRef.searchContacts(hostRef.searchTerm.value)\"\n          (clear)=\"hostRef.clearSearch()\"\n        ></bb-search-box-ui>\n        <div class=\"sr-only\" aria-live=\"assertive\">\n          <p i18n=\"@@contact-manager.list.results-found\">\n            {items.count || 0, plural, =1 {1 result found} other {{{items.count}} results found}}\n          </p>\n        </div>\n      </div>\n      <div class=\"bb-stack__item align-self-start\">\n        <button\n          bbButton\n          i18n=\"New Contact Button | Button for creating a new contact@@contact-manager.button.newContact\"\n          data-role=\"new-contact-button\"\n          class=\"d-block bb-button-bar__button\"\n          [disabled]=\"!(hostRef.newContactAllowed | async)\"\n          (click)=\"hostRef.newContact(items.contacts.length)\"\n          type=\"button\"\n        >\n          New Contact\n        </button>\n      </div>\n    </div>\n    <ng-template #rt let-result=\"result\" let-term=\"term\">\n      <div class=\"text-truncate\" [title]=\"result\">\n        <ngb-highlight [result]=\"result\" [term]=\"term\"></ngb-highlight>\n      </div>\n    </ng-template>\n  </ng-template>\n\n  <ng-template bbContactsLoadingCustomizable let-hostRef>\n    <div class=\"bb-state-container\">\n      <bb-loading-indicator-ui\n        i18n-text=\"@@contact-manager.loading.label\"\n        text=\"Loading contacts...\"\n        data-role=\"contact-manager-loading\"\n      ></bb-loading-indicator-ui>\n    </div>\n  </ng-template>\n\n  <ng-template #loadingTemplate>\n    <ng-container *ngIf=\"!error; else errorTemplate\" bbContactsLoadingCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n  </ng-template>\n\n  <ng-template bbContactsEmptyStateCustomizable let-hostRef>\n    <div class=\"bb-state-container\">\n      <bb-empty-state-ui\n        i18n-title=\"@@contact-manager.state.noContactsLoaded.title\"\n        title=\"No contacts\"\n        i18n-subtitle=\"@@contact-manager.state.noContactsLoaded.subtitle\"\n        subtitle=\"You don't have any contacts to display yet.<br>Try adding a new contact using the 'New Contact' button\"\n        iconClasses=\"d-flex justify-content-center mb-3\"\n        iconModifier=\"contacts\"\n        iconSize=\"xxl\"\n        data-role=\"contact-manager-empty\"\n      ></bb-empty-state-ui>\n    </div>\n  </ng-template>\n\n  <ng-template #emptyTemplate>\n    <ng-container\n      *ngIf=\"!hostRef.searchTerm.value; else emptySearchTemplate\"\n      bbContactsEmptyStateCustomizable\n      [bbHostRef]=\"hostRef\"\n    ></ng-container>\n  </ng-template>\n\n  <ng-template bbContactsEmptySearchStateCustomizable let-hostRef let-term=\"context\">\n    <div class=\"bb-state-container\">\n      <bb-empty-state-ui\n        i18n-title=\"@@contact-manager.state.empty-search.title\"\n        title=\"No results found\"\n        i18n-subtitle=\"@@contact-manager.state.empty-search.subtitle\"\n        subtitle=\"We can't find what you're looking for. Please try a different criteria.\"\n        iconClasses=\"d-flex justify-content-center mb-3\"\n        iconModifier=\"search\"\n        iconColor=\"primary\"\n        iconSize=\"xxl\"\n        data-role=\"contact-manager-list-search-empty\"\n      ></bb-empty-state-ui>\n    </div>\n  </ng-template>\n\n  <ng-template #emptySearchTemplate>\n    <ng-container\n      bbContactsEmptySearchStateCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"searchTerm\"\n    ></ng-container>\n  </ng-template>\n\n  <ng-template bbContactsErrorStateCustomizable let-hostRef let-error=\"context\">\n    <div class=\"bb-state-container\">\n      <bb-common-error-state-ui [attr.data-role]=\"'contact-manager-error'\" [error]=\"error\"></bb-common-error-state-ui>\n    </div>\n  </ng-template>\n\n  <ng-template #errorTemplate>\n    <ng-container bbContactsErrorStateCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"error\"></ng-container>\n  </ng-template>\n</div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { RoutableWidget, RouterService } from '@backbase/foundation-ang/core';\nimport { Routes } from '@angular/router';\nimport { ContactsNavigationService } from './services/contacts-navigation.service';\n\nimport { ContactsDetailContainerComponent } from './containers/contacts-detail-container/contacts-detail-container.component';\nimport { ContactsFormContainerComponent } from './containers/contacts-form-container/contacts-form-container.component';\n\nimport { CanDeactivateGuard } from './services/can-deactivate-guard.service';\nimport { ContactsService } from './services/contacts.service';\nimport { ContactsTypeListContainerComponent } from './containers/contacts-type-list-container/contacts-type-list-container.component';\nimport { ContactManagerPreferencesService } from './services/contacts-preferences.service';\n\n/**\n * Returns the new instance of contactnavigationservice.\n *\n * @param {RouterService} service router service\n * @returns {ContactsNavigationService} new service instance\n */\nexport function makeNavigationService(service: RouterService) {\n  return new ContactsNavigationService(service);\n}\n\nexport const contactsRoutes: Routes = [\n  {\n    path: '',\n    component: ContactsDetailContainerComponent,\n  },\n  {\n    path: 'select',\n    component: ContactsTypeListContainerComponent,\n  },\n  {\n    path: ':id',\n    component: ContactsDetailContainerComponent,\n  },\n\n  {\n    path: 'edit/:id/:type',\n    canDeactivate: [CanDeactivateGuard],\n    component: ContactsFormContainerComponent,\n  },\n];\n\n@RoutableWidget({\n  routes: contactsRoutes,\n})\n/**\n * A widget for managing contacts.\n *\n * @usageNotes\n *\n * ### Include this widget in your `AppModule`:\n *\n * ```typescript\n * @NgModule({\n *   imports: [\n *     ContactManagerWidgetModule,\n *   ],\n *  providers:[{\n *     provide: ContactsNavigationService,\n *     useFactory: makeNavigationService,\n *     deps: [RouterService],\n *   }],\n *   ...\n * })\n * export class AppModule {}\n * ```\n *\n * ### Include this widget (standalone model)\n *\n * ```typescript\n * export const environment: Environment = {\n *   ...\n *   bootstrap: {\n *     pageModel: {\n *       name: 'root',\n *       properties: {},\n *       children: [\n *         {\n *           name: 'bb-contact-manager-ang',\n *           properties: {\n *             classId: 'ContactManagerWidgetModule',\n *             \"notificationDismissTime\": 0,\n *             \"createContactIBAN\": true,\n *             \"createContactPhone\": true,\n *             \"createContactAccount\": true,\n *             \"createContactEmail\": true\n *           },\n *         },\n *       ],\n *     },\n *   },\n * };\n * ```\n *\n * ### Routable Widget\n *\n * Using the `@CopyRoutes` for component\n *\n * ```typescript\n * @CopyRoutes(ContactManagerWidgetComponent)\n * export class ExtendedContactManagerWidgetComponent\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n@Component({\n  selector: 'bb-contacts, bb-contact-manager-widget',\n  template: `\n    <bb-contacts-list-container>\n      <bb-router-outlet></bb-router-outlet>\n    </bb-contacts-list-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    RouterService,\n    {\n      provide: ContactsNavigationService,\n      useFactory: makeNavigationService,\n      deps: [RouterService],\n    },\n    ContactsService,\n    ContactManagerPreferencesService,\n  ],\n})\nexport class ContactManagerWidgetComponent {\n  /**\n   * property to enable the creation of new contacts\n   */\n  @Input('newContact') set newContact(value: boolean) {\n    this.preferencesService.setNewContact(value);\n  }\n  /**\n   * Number of contacts per page\n   */\n  @Input('pageSize') set pageSize(value: number) {\n    this.preferencesService.setPageSize(value);\n  }\n  /**\n   * Max. number of navigation pages\n   */\n  @Input('maxNavPages') set maxNavPages(value: number) {\n    this.preferencesService.setMaxNavPages(value);\n  }\n  /**\n   * Pagination type (pagination, load-more)\n   */\n  @Input('paginationType') set paginationType(value: string) {\n    this.preferencesService.setPaginationType(value);\n  }\n  /**\n   * Milliseconds to dismiss any notification message\n   */\n  @Input('notificationDismissTime') set notificationDismissTime(value: number) {\n    this.preferencesService.setNotificationDismissTime(value);\n  }\n  /**\n   * property from user if the contact creation through email is allowed\n   */\n  @Input('createContactEmail') set createContactEmail(value: boolean) {\n    this.preferencesService.setCreateContactEmail(value);\n  }\n  /**\n   * property from user if the contact creation through IBAN is allowed\n   */\n  @Input('createContactIBAN') set createContactIBAN(value: boolean) {\n    this.preferencesService.setCreateContactIBAN(value);\n  }\n  /**\n   * property from user if the contact creation through Account Number is allowed\n   */\n  @Input('createContactAccount') set createContactAccount(value: boolean) {\n    this.preferencesService.setCreateContactAccount(value);\n  }\n  /**\n   * property from user if the contact creation through Phone Number is allowed\n   */\n  @Input('createContactPhone') set createContactPhone(value: boolean) {\n    this.preferencesService.setCreateContactPhone(value);\n  }\n\n  constructor(private readonly preferencesService: ContactManagerPreferencesService) {}\n}\n","import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ContactManagerWidgetComponent } from './contact-manager.component';\n\nimport { ContactsListContainerComponent } from './containers/contacts-list-container/contacts-list-container.component';\nimport {\n  ContactsEmptySearchStateCustomizableDirective,\n  ContactsEmptyStateCustomizableDirective,\n  ContactsErrorStateCustomizableDirective,\n  ContactsListContainerCustomizableDirective,\n  ContactsLoadingCustomizableDirective,\n  ContactsLoadMoreCustomizableDirective,\n  ContactsTopSectionCustomizableDirective,\n} from './containers/contacts-list-container/contacts-list-container.directive';\nimport { ContactsListWidgetComponent } from './components/contacts-list/contact-list.component';\nimport { ContactsListItemComponent } from './components/contacts-list/list-item/contact-list-item.component';\n\nimport {\n  ContactsFormComponent,\n  ContactsFormCustomizableDirective,\n} from './components/contacts-form/contacts-form.component';\nimport { ContactsFormContainerComponent } from './containers/contacts-form-container/contacts-form-container.component';\n\nimport {\n  ContactsDetailComponent,\n  ContactsDetailCustomizableDirective,\n} from './components/contacts-detail/contacts-detail.component';\nimport { ContactsDetailContainerComponent } from './containers/contacts-detail-container/contacts-detail-container.component';\nimport { CanDeactivateGuard } from './services/can-deactivate-guard.service';\nimport { ContactsService } from './services/contacts.service';\n\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { RouterModule } from '@angular/router';\n\nimport {\n  ConfirmActionDialogModule,\n  IbanValidatorModule,\n  NoWhiteSpaceModule,\n  EmailDomainModule,\n} from '@backbase/contact-common-ang';\n\nimport { NgbDropdownModule, NgbTypeaheadModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ContactConfigProviders } from './config.providers';\nimport { ContactSelectAccountTypeComponent } from './components/contact-select-account-type/contact-select-account-type.component';\nimport { ContactsTypeListContainerComponent } from './containers/contacts-type-list-container/contacts-type-list-container.component';\nimport { ContactsCreateSuccessNotificationCustomizableDirective } from './directives/contacts-create-success-notification-customizable.directive';\nimport { ContactsCreateErrorNotificationCustomizableDirective } from './directives/contacts-create-error-notification-customizable.directive';\nimport { ContactsDeleteConfirmationCustomizableDirective } from './directives/contacts-delete-confirmation-customizable.directive';\nimport { ContactsDeleteErrorNotificationCustomizableDirective } from './directives/contacts-delete-error-notification-customizable.directive';\nimport { ContactsDeleteSuccessNotificationCustomizableDirective } from './directives/contacts-delete-success-notification-customizable.directive';\nimport { ContactsEditDiscardConfirmationCustomizableDirective } from './directives/contacts-edit-discard-confirmation-customizable.directive';\nimport { ContactsEditErrorNotificationCustomizableDirective } from './directives/contacts-edit-error-notification-customizable.directive';\nimport { ContactsEditSuccessNotificationCustomizableDirective } from './directives/contacts-edit-success-notification-customizable.directive';\nimport { AvatarModule } from '@backbase/ui-ang/avatar';\nimport { BbIbanPipeModule } from '@backbase/ui-ang/iban-pipe';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';\nimport { EllipsisModule } from '@backbase/ui-ang/ellipsis';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { ErrorCommonStateModule } from '@backbase/ui-ang/common-error-state';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\nimport { PaginatorModule } from '@backbase/ui-ang/pagination';\nimport { SearchBoxModule } from '@backbase/ui-ang/search-box';\nimport { InputEmailModule } from '@backbase/ui-ang/input-email';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\n\nconst uiModules = [\n  ButtonModule,\n  IconModule,\n  NotificationModule,\n  FormsModule,\n  InputTextModule,\n  InputValidationMessageModule,\n  HeaderModule,\n  EmptyStateModule,\n  AvatarModule,\n  PaginatorModule,\n  DropdownMenuModule,\n  EllipsisModule,\n  LoadingIndicatorModule,\n  ErrorCommonStateModule,\n  NgbDropdownModule,\n  NgbTypeaheadModule,\n  ReactiveFormsModule,\n  BbIbanPipeModule,\n  SearchBoxModule,\n  InputEmailModule,\n  LoadButtonModule,\n];\n\nconst dependentModules = [IbanValidatorModule, NoWhiteSpaceModule, ConfirmActionDialogModule, EmailDomainModule];\n\nconst components = [\n  ContactManagerWidgetComponent,\n  ContactsListWidgetComponent,\n  ContactsListItemComponent,\n  ContactsListContainerComponent,\n  ContactsDetailComponent,\n  ContactsDetailContainerComponent,\n  ContactsFormComponent,\n  ContactsFormContainerComponent,\n  ContactSelectAccountTypeComponent,\n  ContactsTypeListContainerComponent,\n];\n\nconst customizationDirectives = [\n  ContactsListContainerCustomizableDirective,\n  ContactsTopSectionCustomizableDirective,\n  ContactsDetailCustomizableDirective,\n  ContactsFormCustomizableDirective,\n  ContactsLoadMoreCustomizableDirective,\n  ContactsLoadingCustomizableDirective,\n  ContactsEmptyStateCustomizableDirective,\n  ContactsEmptySearchStateCustomizableDirective,\n  ContactsErrorStateCustomizableDirective,\n\n  ContactsCreateErrorNotificationCustomizableDirective,\n  ContactsCreateSuccessNotificationCustomizableDirective,\n  ContactsDeleteConfirmationCustomizableDirective,\n  ContactsDeleteErrorNotificationCustomizableDirective,\n  ContactsDeleteSuccessNotificationCustomizableDirective,\n  ContactsEditDiscardConfirmationCustomizableDirective,\n  ContactsEditErrorNotificationCustomizableDirective,\n  ContactsEditSuccessNotificationCustomizableDirective,\n];\n/**\n * Exports the Widgets and UI components for managing contacts.\n *\n * The following widgets are included in this module:\n *  - `ContactManagerWidgetComponent`\n *\n * @see ContactManagerWidgetComponent\n * @usageNotes\n *\n * ### Include the exported widgets in your `AppModule`:\n *\n * ```typescript\n * @NgModule({\n *   imports: [\n *     ContactManagerWidgetModule,\n *   ],\n *  providers:[{\n *   provide: CONTACT_MANAGER_BASE_PATH,\n *   useFactory: getBasePath('contact-manager'),\n *   deps: [PAGE_CONFIG], },\n * {\n *   provide: ACCESS_CONTROL_BASE_PATH,\n *   useFactory: getBasePath('access-control'),\n *   deps: [PAGE_CONFIG], }]\n *   ...\n * })\n * export class AppModule {}\n * ```\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ...dependentModules,\n    ...uiModules,\n    BackbaseCoreModule.withConfig({\n      classMap: { ContactManagerWidgetComponent },\n    }),\n  ],\n  declarations: [...components, ...customizationDirectives],\n  providers: [CanDeactivateGuard, ContactsService, ...ContactConfigProviders],\n  exports: [...components, ...customizationDirectives, ...dependentModules],\n  entryComponents: [\n    ContactsDetailContainerComponent,\n    ContactsListContainerComponent,\n    ContactsFormContainerComponent,\n    ContactsTypeListContainerComponent,\n  ],\n})\nexport class ContactManagerWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["AccountCreateType","Injectable","LoadMoreMethod","Subject","BehaviorSubject","ReplaySubject","merge","map","ContactActions","mapTo","scan","switchMap","shareReplay","combineLatest","distinctUntilChanged","of","catchError","toBoolean","toInteger","Optional","BbTemplate","Directive","EventEmitter","Component","ChangeDetectionStrategy","Input","Output","Subscription","withLatestFrom","ViewChild","InjectionToken","BB_CONTACT_IBAN_COUNTRIES_LIST","IbanMask","isPlatformBrowser","PLATFORM_ID","Inject","mergeMap","take","tap","startWith","takeUntil","ViewChildren","FormControl","filter","NavigationEnd","debounceTime","ContactManagerWidgetComponent","RouterService","RoutableWidget","ButtonModule","IconModule","NotificationModule","FormsModule","InputTextModule","InputValidationMessageModule","HeaderModule","EmptyStateModule","AvatarModule","PaginatorModule","DropdownMenuModule","EllipsisModule","LoadingIndicatorModule","ErrorCommonStateModule","NgbDropdownModule","NgbTypeaheadModule","ReactiveFormsModule","BbIbanPipeModule","SearchBoxModule","InputEmailModule","LoadButtonModule","IbanValidatorModule","NoWhiteSpaceModule","ConfirmActionDialogModule","EmailDomainModule","CommonModule","RouterModule","BackbaseCoreModule","NgModule"],"mappings":"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"}