import { EventEmitter } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { Observable } from 'rxjs';
import { ServiceAgreementWithParticipants, UserPermissionsDataGroupDetailsService } from '@backbase/accessgroup-common-ang';
import { ActivatedRoute } from '@angular/router';
import * as i0 from "@angular/core";
export declare class AccountGroupDetailModalComponent {
    private dataGroupDetailsService;
    private readonly activeRoute;
    /**
     * Component context
     */
    readonly hostRef: AccountGroupDetailModalComponent;
    itemsPerPage: number;
    /**
     * Flag to show modal
     */
    isOpen: boolean;
    targetSaId: string;
    /**
     * Account group name
     */
    accountGroupName: string;
    legalEntityIds: never[];
    /**
     * Setter for account Ids
     */
    set accountIds(val: Array<string> | undefined);
    /**
     * Event emitter that emits on cancel button click
     */
    cancel: EventEmitter<void>;
    readonly serviceAgreement$: Observable<ServiceAgreementWithParticipants>;
    private readonly selectedAccountGroupAccountsCurrentPageSubject;
    readonly selectedAccountGroupAccountsCurrentPage$: Observable<number>;
    private readonly selectedAccountGroupAccountsSearchQuerySubject;
    readonly selectedAccountGroupAccountsSearchQuery$: Observable<string>;
    private readonly selectedAccountGroupSubject;
    readonly selectedAccountGroup$: Observable<any>;
    readonly selectedAccountGroupDetails$: Observable<any>;
    readonly selectedAccountGroupError$: Observable<boolean>;
    readonly loadingSelectedAccount$: Observable<boolean>;
    constructor(dataGroupDetailsService: UserPermissionsDataGroupDetailsService, activeRoute: ActivatedRoute);
    onCancel(): void;
    pageChange(page: number): void;
    searchSubmit(query: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AccountGroupDetailModalComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AccountGroupDetailModalComponent, "bb-account-group-detail-modal", never, { "isOpen": "isOpen"; "targetSaId": "targetSaId"; "accountGroupName": "accountGroupName"; "legalEntityIds": "legalEntityIds"; "accountIds": "accountIds"; }, { "cancel": "cancel"; }, never, never>;
}
export declare class AccountGroupDetailModalCustomizableDirective extends BbTemplate<AccountGroupDetailModalComponent, {
    selectedAccountGroupDetails: null;
    loadingSelectedAccount: boolean | null;
    selectedAccountGroupAccountsCurrentPage: number | null;
    selectedAccountGroupError: boolean | null;
    selectedAccountGroup: null;
}> {
    static ɵfac: i0.ɵɵFactoryDeclaration<AccountGroupDetailModalCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AccountGroupDetailModalCustomizableDirective, "[bbAccountGroupDetailModalCustomizable]", never, {}, {}, never>;
}
