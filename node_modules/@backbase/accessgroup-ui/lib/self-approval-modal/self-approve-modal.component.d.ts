import { EventEmitter } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { GetUser as User } from '@backbase/data-ang/user';
import { FormControl } from '@angular/forms';
import { CurrencyRegistryResponse } from '@backbase/data-ang/limits';
import { BusinessFunction, SelfApprovalPolicies } from '../model/types';
import * as i0 from "@angular/core";
export declare class SelfApproveModalComponent {
    /**
     * Component context
     */
    readonly hostRef: SelfApproveModalComponent;
    /**
     * Flag to show modal
     */
    isOpen: boolean;
    /**
     * User info
     */
    user: User | undefined;
    /**
     * Currency info
     */
    set currencyList(val: CurrencyRegistryResponse);
    /**
     * Business function
     */
    bf: BusinessFunction | undefined;
    /**
     * Job Role name
     */
    jobRoleName: string | undefined;
    /**
     *  Type of action
     */
    type: string | undefined;
    /**
     * Flag if support limits
     */
    isLimitSupport: boolean | undefined;
    /**
     * SelfApproval item setter
     */
    set selfApproveItemData(val: SelfApprovalPolicies | undefined);
    currencyHistory: string | undefined;
    amountHistory: string | undefined;
    /**
     * Event emitter that emits on cancel button click
     */
    cancel: EventEmitter<void>;
    /**
     * Event emitter that emits data on any action
     */
    selfApprovalDataEmit: EventEmitter<any>;
    /**
     * SelfApproval item
     */
    _selfApproveItemData: SelfApprovalPolicies | undefined;
    /**
     * Amount form
     */
    amount: FormControl;
    /**
     * Supported currency list
     */
    supportedCurrencies: string[] | undefined;
    /**
     * Currency
     */
    currency: string | undefined;
    /**
     * Flag if max amount need to be set
     */
    isCurrencySet: boolean;
    /**
     * Emit cancel event
     */
    onCancel(): void;
    /**
     * Emit data on save && enable action
     */
    onSave(): void;
    /**
     * Emit data on disable action
     */
    onDisabled(): void;
    setForm(state: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SelfApproveModalComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SelfApproveModalComponent, "bb-self-approve-modal", never, { "isOpen": "isOpen"; "user": "user"; "currencyList": "currencyList"; "bf": "bf"; "jobRoleName": "jobRoleName"; "type": "type"; "isLimitSupport": "isLimitSupport"; "selfApproveItemData": "selfApproveItemData"; }, { "cancel": "cancel"; "selfApprovalDataEmit": "selfApprovalDataEmit"; }, never, never>;
}
export declare class SelfApproveModalCustomizableDirective extends BbTemplate<SelfApproveModalComponent, void> {
    static ɵfac: i0.ɵɵFactoryDeclaration<SelfApproveModalCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<SelfApproveModalCustomizableDirective, "[bbSelfApproveModalCustomizable]", never, {}, {}, never>;
}
