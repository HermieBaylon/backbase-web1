import { EventEmitter } from '@angular/core';
import { LimitBound } from '@backbase/accessgroup-common-ang';
import { BusinessFunction } from '../model/types';
import * as i0 from "@angular/core";
export declare class PrivilegeIndicatorListComponent {
    /**
     * Business Function to check privileges against
     */
    businessFunction: BusinessFunction | undefined;
    /**
     * Limit grouped by id and type of permission
     */
    limitData: any;
    /**
     * Permission base on cxp and user permission
     */
    userPermission: any;
    /**
     * Function group id
     */
    functionGroupId: string | undefined;
    /**
     * Business Function to check privileges against
     */
    emitLimitData: EventEmitter<any>;
    /**
     * Check whether limit is allowed for specific privilege
     */
    showLimit(privilege: string): boolean;
    /**
     * Get limit context object
     */
    getLimitContext(privilege: string): {
        limit: any;
        id: string | undefined;
        type: string;
    };
    /**
     * Emit limit data
     */
    emitLimit(emitData: any): void;
    /**
     * Track when control has no amount and no limits button should be shown
     */
    isLimitBoundsEmpty(limitData: {
        limitBounds: LimitBound[];
    }): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<PrivilegeIndicatorListComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PrivilegeIndicatorListComponent, "bb-privilege-indicator-list", never, { "businessFunction": "businessFunction"; "limitData": "limitData"; "userPermission": "userPermission"; "functionGroupId": "functionGroupId"; }, { "emitLimitData": "emitLimitData"; }, never, never>;
}
