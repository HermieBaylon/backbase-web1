{"version":3,"file":"self-approve-modal.component.js","sourceRoot":"","sources":["../../../../../../libs/accessgroup-ui/src/lib/self-approval-modal/self-approve-modal.component.ts","../../../../../../libs/accessgroup-ui/src/lib/self-approval-modal/self-approve-modal.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Directive, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { GetUser as User } from '@backbase/data-ang/user';\nimport { FormControl } from '@angular/forms';\nimport { CurrencyRegistryResponse } from '@backbase/data-ang/limits';\nimport { BusinessFunction, SelfApprovalPolicies } from '../model/types';\n\n@Component({\n  selector: 'bb-self-approve-modal',\n  templateUrl: './self-approve-modal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelfApproveModalComponent {\n  /**\n   * Component context\n   */\n  readonly hostRef: SelfApproveModalComponent = this;\n\n  /**\n   * Flag to show modal\n   */\n  @Input() isOpen = false;\n\n  /**\n   * User info\n   */\n  @Input() user: User | undefined;\n\n  /**\n   * Currency info\n   */\n  @Input() set currencyList(val: CurrencyRegistryResponse) {\n    if (val) {\n      if (!this.currency) {\n        this.currency = val.defaultCurrency;\n      }\n      this.supportedCurrencies = val.allowedCurrencyList;\n    }\n  }\n\n  /**\n   * Business function\n   */\n  @Input() bf: BusinessFunction | undefined;\n\n  /**\n   * Job Role name\n   */\n  @Input() jobRoleName: string | undefined;\n\n  /**\n   *  Type of action\n   */\n  @Input() type: string | undefined;\n\n  /**\n   * Flag if support limits\n   */\n  @Input() isLimitSupport: boolean | undefined;\n\n  /**\n   * SelfApproval item setter\n   */\n  @Input() set selfApproveItemData(val: SelfApprovalPolicies | undefined) {\n    if (val) {\n      this._selfApproveItemData = val;\n      if (this._selfApproveItemData.bounds && this._selfApproveItemData.bounds.length) {\n        this.isCurrencySet = true;\n        // For MVP scope, in future change\n        this.currency = this._selfApproveItemData.bounds[0].currencyCode;\n        this.currencyHistory = this._selfApproveItemData.bounds[0].currencyCode;\n        this.amountHistory = this._selfApproveItemData.bounds[0].amount;\n        this.amount.patchValue({\n          amount: this._selfApproveItemData.bounds[0].amount,\n          currency: this._selfApproveItemData.bounds[0].currencyCode,\n        });\n      }\n    }\n  }\n\n  currencyHistory: string | undefined = '';\n  amountHistory: string | undefined = '';\n\n  /**\n   * Event emitter that emits on cancel button click\n   */\n  @Output() cancel = new EventEmitter<void>();\n\n  /**\n   * Event emitter that emits data on any action\n   */\n  @Output() selfApprovalDataEmit = new EventEmitter();\n\n  /**\n   * SelfApproval item\n   */\n  _selfApproveItemData: SelfApprovalPolicies | undefined;\n\n  /**\n   * Amount form\n   */\n  public amount = new FormControl({ currency: 'undefined' });\n\n  /**\n   * Supported currency list\n   */\n  supportedCurrencies: string[] | undefined = [];\n\n  /**\n   * Currency\n   */\n  currency: string | undefined = '';\n\n  /**\n   * Flag if max amount need to be set\n   */\n  isCurrencySet = false;\n\n  /**\n   * Emit cancel event\n   */\n  onCancel() {\n    this.cancel.emit();\n  }\n\n  /**\n   * Emit data on save && enable action\n   */\n  onSave() {\n    let dataForSelfApprove: SelfApprovalPolicies = { businessFunctionName: '', canSelfApprove: false };\n    if (this.bf) {\n      dataForSelfApprove = { businessFunctionName: this.bf.name, canSelfApprove: true };\n    }\n    if (this.isCurrencySet && this.amount.value && this.amount.value.amount) {\n      dataForSelfApprove.bounds = [];\n      dataForSelfApprove.bounds.push({\n        currencyCode: this.currency,\n        amount: this.amount.value.amount,\n      });\n    }\n    this.selfApprovalDataEmit.emit(dataForSelfApprove);\n  }\n\n  /**\n   * Emit data on disable action\n   */\n  onDisabled() {\n    let dataForSelfApprove = {};\n    if (this.bf) {\n      dataForSelfApprove = { businessFunctionName: this.bf.name, canSelfApprove: false };\n    }\n    this.selfApprovalDataEmit.emit(dataForSelfApprove);\n  }\n\n  setForm(state: boolean) {\n    this.isCurrencySet = state;\n    this.amount.patchValue({ currency: 'undefined' });\n    this.amount.markAsTouched();\n  }\n}\n\n@Directive({\n  selector: '[bbSelfApproveModalCustomizable]',\n})\nexport class SelfApproveModalCustomizableDirective extends BbTemplate<SelfApproveModalComponent, void> {}\n","<ng-container bbSelfApproveModalCustomizable [bbHostRef]=\"hostRef\"> </ng-container>\n\n<ng-template bbSelfApproveModalCustomizable let-hostRef>\n  <bb-modal-ui [isOpen]=\"hostRef.isOpen\" (cancel)=\"hostRef.onCancel()\" data-role=\"self-approval-for-user-modal\">\n    <bb-modal-header-ui\n      *ngIf=\"hostRef.type === 'enable'\"\n      i18n-title=\"Enable self approval header text@@self-approval-modal.enable.header.text\"\n      title=\"Enable self-approval for user?\"\n      data-role=\"account-modal-enable-header\"></bb-modal-header-ui>\n    <bb-modal-header-ui\n      *ngIf=\"hostRef.type === 'edit' && hostRef.isLimitSupport\"\n      i18n-title=\"Edit self approval header text@@self-approval-modal.edit.header.text\"\n      title=\"Edit self-approval for user?\"\n      data-role=\"account-modal-edit-header\"></bb-modal-header-ui>\n    <bb-modal-header-ui\n      *ngIf=\"hostRef.type === 'edit' && !hostRef.isLimitSupport\"\n      i18n-title=\"Disable self approval header text@@self-approval-modal.disable.header.text\"\n      title=\"Disable self-approval for user?\"\n      data-role=\"account-modal-disable-header\"></bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <div *ngIf=\"hostRef.user\" class=\"bb-block bb-block--md\" data-role=\"approval-modal-body\">\n          <div class=\"bb-card bb-card--highlight bb-card--sm\">\n            <div class=\"bb-card__body\">\n              <div class=\"bb-stack bb-stack--density-lg\">\n                <bb-avatar-ui\n                  [name]=\"hostRef.user?.fullName\"\n                  data-role=\"self-approval-avatar\"\n                  size=\"lg\"\n                  class=\"bb-stack__item bb-stack__item--spacing-md\"></bb-avatar-ui>\n                <div class=\"bb-stack__item\">\n                  <h5 class=\"bb-block bb-header bb-text-bold bb-block--xs\" data-role=\"self-approval-header\">\n                    {{ hostRef.user?.fullName }}\n                  </h5>\n                  <div class=\"bb-block bb-header bb-block--xs\">\n                    <span\n                      class=\"bb-subtitle bb-text-support bb-text-bold\"\n                      i18n=\"User external ID label@@self-approval-modal.external.id.label\">\n                      ID:\n                    </span>\n                    <span class=\"bb-subtitle bb-text-support break-word\" data-role=\"self-approval-external-id\">{{\n                      hostRef.user?.externalId\n                    }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"bb-block bb-block--md\">\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div>\n                <strong i18n=\"Job Role section text@@self-approval-modal.job-role.section.text\"> Job role </strong>\n              </div>\n              <div class=\"bb-inline-stack\">\n                <bb-icon-ui class=\"bb-inline-stack__item bb-text-bold\" name=\"users\" size=\"md\"></bb-icon-ui>\n                <span class=\"bb-inline-stack__item\" data-role=\"self-approval-job-role-name\">\n                  {{ hostRef.jobRoleName }}\n                </span>\n              </div>\n            </div>\n            <div class=\"col-6\">\n              <div>\n                <strong i18n=\"Business Function section text@@self-approval-modal.bf.section.text\">\n                  Business Function\n                </strong>\n              </div>\n              <div>\n                <bb-business-function-name [businessFunction]=\"hostRef.bf\"></bb-business-function-name>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div\n          class=\"bb-block bb-block--md\"\n          *ngIf=\"hostRef.isLimitSupport && hostRef.supportedCurrencies.length\"\n          data-role=\"limit-support-block\">\n          <div class=\"bb-block bb-block--md\">\n            <div class=\"bb-inline-stack\">\n              <strong\n                class=\"bb-inline-stack__item\"\n                i18n=\"Info label for max amount for self approve@@self-approval-modal.max-amount.section.text\">\n                Max amount for self-approve\n              </strong>\n            </div>\n          </div>\n          <div\n            class=\"bb-block bb-block--md\"\n            *ngIf=\"!hostRef.selfApproveItemData && !hostRef.isCurrencySet\"\n            data-role=\"no-currency-set-item-data-block\">\n            <button\n              bbButton\n              color=\"link-text\"\n              buttonSize=\"sm\"\n              data-role=\"currency-set-button\"\n              (click)=\"hostRef.setForm(true)\">\n              <bb-icon-ui name=\"add-outline\" [size]=\"'sm'\" cropped></bb-icon-ui>\n              <span i18n=\"Set max amount button text@@self-approval-modal.max-amount.button.text\">Set max amount</span>\n            </button>\n          </div>\n          <div class=\"bb-stack\" *ngIf=\"hostRef.isCurrencySet\" data-role=\"is-currency-set-block\">\n            <div class=\"bb-stack__item bb-stack__item--fill\">\n              <div class=\"row\">\n                <div class=\"col-3\" *ngIf=\"hostRef.supportedCurrencies.length\" data-role=\"supported-currencies-block\">\n                  <bb-dropdown-single-select-ui\n                    label=\"Currency\"\n                    i18n-label=\"\n                      Label text for currency amount for self approve@@self-approval-modal.currency.amount.integerLabel\"\n                    [options]=\"hostRef.supportedCurrencies\"\n                    [required]=\"true\"\n                    [(ngModel)]=\"hostRef.currency\"\n                    class=\"d-block bb-block bb-block--lg\">\n                  </bb-dropdown-single-select-ui>\n                </div>\n\n                <div class=\"col\">\n                  <bb-currency-input-ui\n                    i18n-integerLabel=\"\n                      Label text for to amount for self approve@@self-approval-modal.to.amount.integerLabel\"\n                    integerLabel=\"To(including)\"\n                    [integer]=\"true\"\n                    resultType=\"number\"\n                    [formControl]=\"hostRef.amount\"\n                    placeholder=\"\"></bb-currency-input-ui>\n                </div>\n              </div>\n            </div>\n            <div class=\"bb-stack__item bb-stack__item--push-right align-self-center\">\n              <button\n                bbButton\n                color=\"link-text\"\n                [circle]=\"true\"\n                buttonSize=\"md\"\n                (click)=\"hostRef.setForm(false)\"\n                data-role=\"close-currency-block-button\">\n                <bb-icon-ui name=\"delete\"></bb-icon-ui>\n              </button>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n    </bb-modal-body-ui>\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <div class=\"bb-button-bar\">\n          <ng-container *ngIf=\"hostRef.type === 'edit' && hostRef.isLimitSupport; else disabledButton\"></ng-container>\n          <button\n            *ngIf=\"hostRef.type === 'edit' && hostRef.isLimitSupport\"\n            bbButton\n            color=\"primary\"\n            class=\"bb-button-bar__button\"\n            (click)=\"hostRef.onSave()\"\n            data-role=\"edit-type-save-btn\"\n            [disabled]=\"\n              (hostRef.currencyHistory === hostRef.currency && hostRef.amountHistory === hostRef.amount.value.amount) ||\n              (!hostRef.amount.value.amount && hostRef.isCurrencySet) ||\n              (!hostRef.isCurrencySet && !hostRef.currencyHistory && !hostRef.amountHistory)\n            \"\n            i18n=\"Save button text for self approve@self-approval-modal.save-btn.text\">\n            Save\n          </button>\n          <button\n            *ngIf=\"hostRef.type === 'enable'\"\n            bbButton\n            color=\"primary\"\n            class=\"bb-button-bar__button\"\n            data-role=\"enable-type-save-btn\"\n            (click)=\"hostRef.onSave()\"\n            i18n=\"Enable button text for self approve@self-approval-modal.enable-btn.text\">\n            Enable\n          </button>\n          <button\n            bbButton\n            color=\"secondary\"\n            class=\"bb-button-bar__button\"\n            (click)=\"hostRef.onCancel()\"\n            data-role=\"cancel-btn\"\n            i18n=\"Cancel button text for self approve@self-approval-modal.cancel-btn.text\">\n            Cancel\n          </button>\n\n          <ng-container *ngIf=\"hostRef.type === 'edit' && !hostRef.isLimitSupport; else disabledButton\"></ng-container>\n\n          <ng-template #disabledButton>\n            <button\n              *ngIf=\"hostRef.type === 'edit'\"\n              bbButton\n              color=\"danger\"\n              class=\"bb-button-bar__button bb-button-bar__button--across\"\n              (click)=\"hostRef.onDisabled()\"\n              data-role=\"edit-type-disable-btn\"\n              i18n=\"Disable button text for self approve@self-approval-modal.disable-btn.text\">\n              Disable\n            </button>\n          </ng-template>\n        </div>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n</ng-template>\n"]}