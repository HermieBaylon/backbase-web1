import { Component, Directive, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { BehaviorSubject, combineLatest, merge, of, ReplaySubject } from 'rxjs';
import { auditTime, catchError, map, mapTo, shareReplay, switchMap } from 'rxjs/operators';
import { getRouteParams, UserPermissionsDataGroupDetailsService, } from '@backbase/accessgroup-common-ang';
import { ActivatedRoute } from '@angular/router';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/accessgroup-common-ang";
import * as i2 from "@angular/router";
import * as i3 from "@backbase/ui-ang/modal";
import * as i4 from "@backbase/ui-ang/search-box";
import * as i5 from "../payee-group-table-row/payee-group-table-row.component";
import * as i6 from "@backbase/ui-ang/pagination";
import * as i7 from "@backbase/ui-ang/loading-indicator";
import * as i8 from "@backbase/ui-ang/empty-state";
import * as i9 from "@angular/common";
import * as i10 from "@backbase/ui-ang/button";
const PAYEE_GROUP_DETAILS_ERROR = 'PAYEE_GROUP_DETAILS_ERROR';
export class PayeeGroupDetailModalComponent {
    constructor(dataGroupDetailsService, activeRoute) {
        this.dataGroupDetailsService = dataGroupDetailsService;
        this.activeRoute = activeRoute;
        /**
         * Component context
         */
        this.hostRef = this;
        this.itemsPerPage = 10;
        /**
         * Flag to show modal
         */
        this.isOpen = false;
        /**
         * Payee group name
         */
        this.payeeGroupName = '';
        this.targetSaId = '';
        /**
         * Event emitter that emits on cancel button click
         */
        this.cancel = new EventEmitter();
        this.selectedPayeeGroupPayeesCurrentPageSubject = new BehaviorSubject(0);
        this.selectedPayeeGroupPayeesCurrentPage$ = this.selectedPayeeGroupPayeesCurrentPageSubject.asObservable();
        this.selectedPayeeGroupPayeesSearchQuerySubject = new BehaviorSubject('');
        this.selectedPayeeGroupPayeesSearchQuery$ = this.selectedPayeeGroupPayeesSearchQuerySubject.asObservable();
        this.selectedPayeeGroupSubject = new ReplaySubject();
        this.selectedPayeeGroup$ = this.selectedPayeeGroupSubject.asObservable();
        this.serviceAgreement$ = getRouteParams(this.activeRoute, 'serviceAgreementId').pipe(switchMap((id) => {
            let idSa = id;
            if (this.targetSaId && !id) {
                idSa = this.targetSaId;
            }
            return idSa
                ? this.dataGroupDetailsService.getServiceAgreement(idSa)
                : this.dataGroupDetailsService.serviceAgreementFromContext;
        }), shareReplay(1));
        this.selectedPayeeGroupDetails$ = combineLatest([
            this.selectedPayeeGroup$,
            this.selectedPayeeGroupPayeesCurrentPage$,
            this.selectedPayeeGroupPayeesSearchQuery$,
            this.serviceAgreement$,
        ]).pipe(auditTime(100), switchMap(([items, from, query, serviceAgreement]) => {
            if (items.length) {
                return this.dataGroupDetailsService
                    .getPayeeGroupContacts(items, { from, query, targetSaId: serviceAgreement.serviceAgreement.id })
                    .pipe(map(payees => ({
                    data: payees.data,
                    totalCount: payees.totalCount,
                })), catchError(() => {
                    return of(PAYEE_GROUP_DETAILS_ERROR);
                }));
            }
            return of();
        }), shareReplay(1));
        this.selectedPayeeGroupError$ = this.selectedPayeeGroupDetails$.pipe(map((data) => data === PAYEE_GROUP_DETAILS_ERROR));
        this.loadingSelectedPayee$ = merge(this.selectedPayeeGroupSubject.pipe(mapTo(true)), this.selectedPayeeGroupPayeesCurrentPageSubject.pipe(mapTo(true)), this.selectedPayeeGroupPayeesSearchQuerySubject.pipe(mapTo(true)), this.selectedPayeeGroupDetails$.pipe(mapTo(false)));
    }
    /**
     * Setter for payee Ids
     */
    set payeeIds(val) {
        if (val) {
            this.selectedPayeeGroupSubject.next(val);
            this.selectedPayeeGroupPayeesCurrentPageSubject.next(0);
            this.selectedPayeeGroupPayeesSearchQuerySubject.next('');
        }
    }
    onCancel() {
        this.cancel.emit();
    }
    pageChange(page) {
        this.selectedPayeeGroupPayeesCurrentPageSubject.next(page);
    }
    searchSubmit(query) {
        this.selectedPayeeGroupPayeesCurrentPageSubject.next(0);
        this.selectedPayeeGroupPayeesSearchQuerySubject.next(query);
    }
}
/** @nocollapse */ PayeeGroupDetailModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayeeGroupDetailModalComponent, deps: [{ token: i1.UserPermissionsDataGroupDetailsService }, { token: i2.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ PayeeGroupDetailModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PayeeGroupDetailModalComponent, selector: "bb-payee-group-detail-modal", inputs: { isOpen: "isOpen", payeeGroupName: "payeeGroupName", targetSaId: "targetSaId", payeeIds: "payeeIds" }, outputs: { cancel: "cancel" }, providers: [], ngImport: i0, template: "<ng-container\n  bbPayeeGroupDetailModalCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    selectedPayeeGroupDetails: selectedPayeeGroupDetails$ | async,\n    loadingSelectedPayee: loadingSelectedPayee$ | async,\n    selectedPayeeGroupPayeesCurrentPage: selectedPayeeGroupPayeesCurrentPage$ | async,\n    selectedPayeeGroupError: selectedPayeeGroupError$ | async,\n    selectedPayeeGroup: selectedPayeeGroup$ | async\n  }\">\n</ng-container>\n\n<ng-template\n  bbPayeeGroupDetailModalCustomizable\n  let-hostRef\n  let-selectedPayeeGroupDetails=\"context.selectedPayeeGroupDetails\"\n  let-loadingSelectedPayee=\"context.loadingSelectedPayee\"\n  let-selectedPayeeGroupPayeesCurrentPage=\"context.selectedPayeeGroupPayeesCurrentPage\"\n  let-selectedPayeeGroupError=\"context.selectedPayeeGroupError\"\n  let-selectedPayeeGroup=\"context.selectedPayeeGroup\">\n  <bb-modal-ui [isOpen]=\"hostRef.isOpen\" (cancel)=\"hostRef.onCancel()\" data-role=\"payee-group-detail-modal\">\n    <bb-modal-header-ui\n      title=\"Detail for {{ hostRef.payeeGroupName }}\"\n      i18n-title=\"Title of payee group modal detail@payee-group-detail-modal.title\"\n      data-role=\"payee-modal-title\"></bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <ng-container *ngIf=\"!selectedPayeeGroupError; else errorTemplate\">\n          <ng-container *ngIf=\"selectedPayeeGroup && selectedPayeeGroup.length; else empty\">\n            <div data-role=\"payee-group-modal-detail\">\n              <bb-search-box-ui\n                *ngIf=\"hostRef.isOpen\"\n                size=\"md\"\n                placeholder=\"Search\"\n                i18n-placeholder=\"Search placeholder@@payee-group-detail-modal.search.placeholder\"\n                [showClear]=\"true\"\n                [showSearch]=\"true\"\n                (clear)=\"hostRef.searchSubmit('')\"\n                (submit)=\"hostRef.searchSubmit($event)\"\n                data-role=\"payee-group-table-search\"></bb-search-box-ui>\n              <ng-container *ngIf=\"selectedPayeeGroupDetails && !loadingSelectedPayee; else loadingTemplate\">\n                <ng-container *ngIf=\"selectedPayeeGroupDetails.data.length; else empty\">\n                  <div class=\"bb-inline-stack\">\n                    <span\n                      class=\"bb-inline-stack__item bb-subheader bb-subheader--regular bb-text-bold\"\n                      i18n=\"Table header name@@payee-group-detail-modal.row.header.name\"\n                      >Name</span\n                    >\n                  </div>\n                  <hr />\n                  <div *ngFor=\"let payee of selectedPayeeGroupDetails.data\">\n                    <bb-payee-group-table-row data-role=\"payee-item\" [payee]=\"payee\"></bb-payee-group-table-row>\n                    <hr />\n                  </div>\n                  <bb-pagination-ui\n                    data-role=\"payee-group-table-pagination\"\n                    [page]=\"selectedPayeeGroupPayeesCurrentPage\"\n                    [boundaryLinks]=\"true\"\n                    [directionLinks]=\"true\"\n                    [totalItems]=\"selectedPayeeGroupDetails.totalCount\"\n                    [itemsPerPage]=\"itemsPerPage\"\n                    (pageChange)=\"hostRef.pageChange($event)\"></bb-pagination-ui>\n                </ng-container>\n              </ng-container>\n            </div>\n          </ng-container>\n        </ng-container>\n      </ng-template>\n    </bb-modal-body-ui>\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <div class=\"bb-button-bar\">\n          <button\n            bbButton\n            color=\"secondary\"\n            class=\"bb-button-bar__button\"\n            (click)=\"hostRef.onCancel()\"\n            i18n=\"Cancel button@payee-group-detail-modal.cancel-btn\"\n            data-role=\"payee-group-modal-detail-cancel-btn\">\n            Cancel\n          </button>\n        </div>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n</ng-template>\n\n<ng-template #loadingTemplate>\n  <div class=\"bb-state-container bb-state-container--min-height\" data-role=\"payee-detail-loading\">\n    <bb-loading-indicator-ui></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n\n<ng-template #errorTemplate>\n  <bb-empty-state-ui\n    data-role=\"general-error-state\"\n    title=\"Unknown Error\"\n    i18n-title=\"Title for error state for payee group errors@@payee-group-detail-modal.unknown.title\"\n    subtitle=\"Try to reload the page or contact the system<br> administrator.\"\n    i18n-subtitle=\"Message for error state for payee group errors@@payee-group-detail-modal.unknown.subtitle\"\n    iconSize=\"xxl\"\n    iconModifier=\"error-outline\"></bb-empty-state-ui>\n</ng-template>\n\n<ng-template #empty>\n  <div class=\"bb-state-container bb-state-container--min-height\" data-role=\"payee-group-table-empty-state\">\n    <bb-empty-state-ui\n      iconSize=\"xxl\"\n      iconModifier=\"info\"\n      title=\"No payees found\"\n      i18n-title=\"Label for empty list of payees@@payee-group-detail-modal.empty.title\"\n      subtitle=\"You don't have any payees to be displayed.\"\n      i18n-subtitle=\"Payees empty state message@@payee-group-detail-modal.empty.subtitle\"></bb-empty-state-ui>\n  </div>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i3.ModalComponent; }), selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i0.forwardRef(function () { return i3.ModalHeaderComponent; }), selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i0.forwardRef(function () { return i3.ModalBodyComponent; }), selector: "bb-modal-body-ui" }, { type: i0.forwardRef(function () { return i4.SearchBoxComponent; }), selector: "bb-search-box-ui", inputs: ["placeholder", "maxLength", "squareBorder", "typeaheadOptions", "showSearch", "showClear", "searchLabel", "clearLabel", "autocomplete"], outputs: ["submit", "clear", "valueChange"] }, { type: i0.forwardRef(function () { return i5.PayeeGroupTableRowComponent; }), selector: "bb-payee-group-table-row", inputs: ["payee", "checkboxEnabled", "checkboxFormControl", "modifier"], outputs: ["checkboxChange"] }, { type: i0.forwardRef(function () { return i6.PaginatorComponent; }), selector: "bb-pagination-ui", inputs: ["page", "boundaryLinks", "directionLinks", "totalItems", "itemsPerPage", "maxNavPages"], outputs: ["pageChange"] }, { type: i0.forwardRef(function () { return i3.ModalFooterComponent; }), selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }, { type: i0.forwardRef(function () { return i7.LoadingIndicatorComponent; }), selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i0.forwardRef(function () { return i8.EmptyStateComponent; }), selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i0.forwardRef(function () { return PayeeGroupDetailModalCustomizableDirective; }), selector: "[bbPayeeGroupDetailModalCustomizable]" }, { type: i0.forwardRef(function () { return i3.CustomModalBodyDirective; }), selector: "ng-template[bbCustomModalBody]" }, { type: i0.forwardRef(function () { return i9.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i9.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i0.forwardRef(function () { return i3.CustomModalFooterDirective; }), selector: "ng-template[bbCustomModalFooter]" }, { type: i0.forwardRef(function () { return i10.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "async": i0.forwardRef(function () { return i9.AsyncPipe; }) }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayeeGroupDetailModalComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-payee-group-detail-modal',
                    templateUrl: './payee-group-detail-modal.component.html',
                    providers: [],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.UserPermissionsDataGroupDetailsService }, { type: i2.ActivatedRoute }]; }, propDecorators: { isOpen: [{
                type: Input
            }], payeeGroupName: [{
                type: Input
            }], targetSaId: [{
                type: Input
            }], payeeIds: [{
                type: Input
            }], cancel: [{
                type: Output
            }] } });
export class PayeeGroupDetailModalCustomizableDirective extends BbTemplate {
}
/** @nocollapse */ PayeeGroupDetailModalCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayeeGroupDetailModalCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ PayeeGroupDetailModalCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: PayeeGroupDetailModalCustomizableDirective, selector: "[bbPayeeGroupDetailModalCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PayeeGroupDetailModalCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbPayeeGroupDetailModalCustomizable]',
                }]
        }] });
//# sourceMappingURL=payee-group-detail-modal.component.js.map