{"version":3,"file":"function-group-time-bounds.component.js","sourceRoot":"","sources":["../../../../../../libs/accessgroup-ui/src/lib/function-group-time-bounds/function-group-time-bounds.component.ts","../../../../../../libs/accessgroup-ui/src/lib/function-group-time-bounds/function-group-time-bounds.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACjD,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;;;AAO1D,MAAM,OAAO,gCAAgC;IAJ7C;QAWE,mBAAc,GAAmB,EAAE,CAAC;KAgCrC;IA9BC;;OAEG;IACH,IAAa,aAAa,CAAC,KAAgC;QACzD,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC;YAC/D,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;YAClD,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC;YAClE,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;IACH,CAAC;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;IAEO,iBAAiB;QACvB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACpC,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC;SACvC;QACD,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;YACpC,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC;SACxC;QACD,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;YACnC,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC;SACxC;IACH,CAAC;;iJAtCU,gCAAgC;qIAAhC,gCAAgC,iHCR7C,oEACA;4FDOa,gCAAgC;kBAJ5C,SAAS;mBAAC;oBACT,QAAQ,EAAE,+BAA+B;oBACzC,WAAW,EAAE,6CAA6C;iBAC3D;8BAac,aAAa;sBAAzB,KAAK","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { formatDate, formatTime } from '../model/helpers';\nimport { FunctionGroup, ValidityFormat } from '../model/types';\n\n@Component({\n  selector: 'bb-function-group-time-bounds',\n  templateUrl: './function-group-time-bounds.component.html',\n})\nexport class FunctionGroupTimeBoundsComponent {\n  private functionGroupValue: FunctionGroup | undefined;\n\n  fromDate: Date | undefined;\n  fromTime: Date | undefined;\n  untilDate: Date | undefined;\n  untilTime: Date | undefined;\n  validityFormat: ValidityFormat = '';\n\n  /**\n   * Function group\n   */\n  @Input() set functionGroup(value: FunctionGroup | undefined) {\n    if (value) {\n      this.functionGroupValue = value;\n      this.fromDate = formatDate(value.validFromDate);\n      this.fromTime = formatTime(this.fromDate, value.validFromTime);\n      this.untilDate = formatDate(value.validUntilDate);\n      this.untilTime = formatTime(this.untilDate, value.validUntilTime);\n      this.setValidityPeriod();\n    }\n  }\n\n  get functionGroup(): FunctionGroup | undefined {\n    return this.functionGroupValue;\n  }\n\n  private setValidityPeriod() {\n    this.validityFormat = '';\n    if (this.fromDate && !this.untilDate) {\n      this.validityFormat = 'validFromOnly';\n    }\n    if (!this.fromDate && this.untilDate) {\n      this.validityFormat = 'validUntilOnly';\n    }\n    if (this.fromDate && this.untilDate) {\n      this.validityFormat = 'validFromUntil';\n    }\n  }\n}\n","<bb-time-bounds [timeBounds]=\"functionGroup\"></bb-time-bounds>\n"]}