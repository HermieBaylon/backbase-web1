import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';
import { Subject, of, BehaviorSubject, merge } from 'rxjs';
import { takeUntil, catchError, map, switchMap, filter, mapTo, startWith } from 'rxjs/operators';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { getExtendedBusinessFunctions, } from '@backbase/accessgroup-common-ang';
import { BusinessFunctionsService } from './services/business-functions.service';
import { JobRoleDetailBusinessFunctionGroupService } from './services/job-role-detail-business-function-group.service';
import * as i0 from "@angular/core";
import * as i1 from "./services/job-role-detail-business-function-group.service";
import * as i2 from "./services/business-functions.service";
import * as i3 from "@backbase/ui-ang/modal";
import * as i4 from "@backbase/ui-ang/header";
import * as i5 from "@backbase/ui-ang/icon";
import * as i6 from "../business-function-group-name/business-function-group-name.component";
import * as i7 from "../business-function-privileges-name/business-function-privileges-name.component";
import * as i8 from "../business-function-name/business-function-name.component";
import * as i9 from "./job-role-detail-privilege-indicator-list/job-role-detail-privilege-indicator-list.component";
import * as i10 from "@backbase/ui-ang/loading-indicator";
import * as i11 from "@backbase/ui-ang/empty-state";
import * as i12 from "@backbase/ui-ang/button";
import * as i13 from "@angular/common";
export class JobRoleDetailModalComponent {
    constructor(groupService, businessFunctionsService) {
        this.groupService = groupService;
        this.businessFunctionsService = businessFunctionsService;
        /**
         * Filter hook
         * @default false
         */
        this.filterHookEnabled = false;
        this._serviceAgreementId$ = new BehaviorSubject(undefined);
        /**
         * Close modal window event.
         * Propagate event when modal window should be closed.
         */
        // eslint-disable-next-line @angular-eslint/no-output-native
        this.close = new EventEmitter();
        /**
         * Unsubscribe stream
         */
        this.destroy$ = new Subject();
        /**
         * Stream of Grouped business functions
         */
        this.groupedBusinessFunctions$ = this._serviceAgreementId$.pipe(filter((x) => !!x), switchMap((id) => this.businessFunctionsService.getBusinessFunctions(id)), map((allBusinessFunctions) => getExtendedBusinessFunctions(this.jobRoleDetail, allBusinessFunctions, this.filterHookEnabled)), map((businessFunctions) => this.groupService.convertToGroups(businessFunctions)), takeUntil(this.destroy$));
        /**
         * Stream of loading state for Grouped business functions
         */
        this.groupedBusinessFunctionsLoading$ = merge(this.groupedBusinessFunctions$.pipe(mapTo(false), catchError(() => of(false)))).pipe(startWith(true));
        /**
         * Stream of error state for Grouped business functions
         */
        this.groupedBusinessFunctionsError$ = this.businessFunctionsService.businessFunctionsError$;
    }
    /**
     * Setter for serviceAgreement Id
     */
    set serviceAgreementId(id) {
        this._serviceAgreementId$.next(id);
    }
    /**
     * OpenChange modal window event handler.
     * @param isOpen - boolean
     */
    onOpenChange(isOpen) {
        if (!isOpen) {
            this.close.emit();
        }
    }
    ngOnDestroy() {
        this.destroy$.next();
    }
}
/** @nocollapse */ JobRoleDetailModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: JobRoleDetailModalComponent, deps: [{ token: i1.JobRoleDetailBusinessFunctionGroupService }, { token: i2.BusinessFunctionsService }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ JobRoleDetailModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: JobRoleDetailModalComponent, selector: "bb-job-role-detail-modal", inputs: { jobRoleDetail: "jobRoleDetail", serviceAgreementId: "serviceAgreementId", filterHookEnabled: "filterHookEnabled" }, outputs: { close: "close" }, ngImport: i0, template: "<ng-container\n  bbJobRoleDetailModalCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    groupedBusinessFunctions: groupedBusinessFunctions$ | async,\n    groupedBusinessFunctionsLoading: groupedBusinessFunctionsLoading$ | async,\n    groupedBusinessFunctionsError: groupedBusinessFunctionsError$ | async\n  }\"></ng-container>\n\n<ng-template\n  bbJobRoleDetailModalCustomizable\n  let-hostRef\n  let-groupedBusinessFunctions=\"context.groupedBusinessFunctions\"\n  let-groupedBusinessFunctionsLoading=\"context.groupedBusinessFunctionsLoading\"\n  let-groupedBusinessFunctionsError=\"context.groupedBusinessFunctionsError\">\n  <bb-modal-ui\n    data-role=\"job-role-modal\"\n    [isOpen]=\"true\"\n    [modalOptions]=\"{\n      backdrop: 'static',\n      centered: true,\n      size: 'lg'\n    }\"\n    (isOpenChange)=\"hostRef.onOpenChange($event)\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <div class=\"bb-stack\">\n          <div class=\"bb-stack__item\">\n            <bb-header-ui\n              [heading]=\"hostRef.jobRoleDetail.name\"\n              headingType=\"h2\"\n              data-role=\"job-role-modal-header-title\"></bb-header-ui>\n            <div data-role=\"job-role-modal-header-description\" class=\"bb-text-support\">\n              {{ hostRef.jobRoleDetail.description }}\n            </div>\n          </div>\n          <div class=\"bb-stack__item bb-stack__item--push-right bb-stack__item--align-top\">\n            <button\n              (click)=\"hostRef.onOpenChange(false)\"\n              bbButton\n              class=\"bb-stack__item-sm\"\n              color=\"unstyled\"\n              aria-label=\"Close dialog\"\n              i18n-aria-label=\"Close modal button in header@@job-role-detail-modal.header.close-btn.aria-label\"\n              data-role=\"job-role-modal-header-close-btn\">\n              <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n            </button>\n          </div>\n        </div>\n      </ng-template>\n    </bb-modal-header-ui>\n\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <ng-container *ngIf=\"!groupedBusinessFunctionsLoading; else loadingTemplate\">\n          <ng-container *ngIf=\"!groupedBusinessFunctionsError; else errorTemplate\">\n            <ng-container *ngIf=\"groupedBusinessFunctions && groupedBusinessFunctions.length; else emptyStateTemplate\">\n              <div\n                *ngFor=\"let group of groupedBusinessFunctions\"\n                data-role=\"job-role-modal-grouped-bf\"\n                class=\"bb-block bb-block--xl\"\n                [attr.data-test-id]=\"group.groupKey\">\n                <bb-business-function-group-name\n                  [groupKey]=\"group.groupKey\"\n                  class=\"bb-highlight\"\n                  data-role=\"job-role-modal-grouped-bf-title\"></bb-business-function-group-name>\n\n                <hr />\n\n                <div class=\"row bb-block bb-block--md\">\n                  <div class=\"col-5\"></div>\n                  <div class=\"col\">\n                    <bb-business-function-privileges-name\n                      class=\"d-flex bb-text-support bb-subtitle\"\n                      [hideExecute]=\"true\"\n                      data-role=\"job-role-modal-business-function-privileges-name\"></bb-business-function-privileges-name>\n                  </div>\n                </div>\n\n                <div\n                  *ngFor=\"let bf of group.businessFunctions; first as isFirst; last as isLast\"\n                  class=\"row align-items-center\"\n                  data-role=\"job-role-modal-bf-item\">\n                  <bb-business-function-name\n                    [businessFunction]=\"bf\"\n                    class=\"col-5 bb-text-default\"\n                    data-role=\"job-role-modal-bf-name\"></bb-business-function-name>\n\n                  <div class=\"col\">\n                    <bb-job-role-detail-privilege-indicator-list\n                      class=\"d-flex\"\n                      [businessFunction]=\"bf\"\n                      [first]=\"isFirst\"\n                      [last]=\"isLast\"\n                      data-role=\"job-role-modal-privilege-indicator-list\"></bb-job-role-detail-privilege-indicator-list>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n\n        <ng-template #loadingTemplate>\n          <div class=\"bb-state-container\" data-role=\"job-role-modal-loading-state-tmp\">\n            <bb-loading-indicator-ui></bb-loading-indicator-ui>\n          </div>\n        </ng-template>\n\n        <ng-template #errorTemplate>\n          <div class=\"bb-state-container\" data-role=\"job-role-modal-error-state-tmp\">\n            <bb-empty-state-ui\n              title=\"Failed to load business functions\"\n              i18n-title=\"Error status message title@@job-role-detail-modal.state.error.title\"\n              subtitle=\"Try to reload the page.<br> All data will be lost after reload.\"\n              i18n-subtitle=\"Error status message subtitle@@job-role-detail-modal.state.error.subtitle\"\n              iconSize=\"xxl\"\n              iconModifier=\"error-outline\"\n              iconColor=\"muted\">\n            </bb-empty-state-ui>\n          </div>\n        </ng-template>\n\n        <ng-template #emptyStateTemplate>\n          <div class=\"bb-state-container bb-state-container--min-height\" data-role=\"job-role-modal-empty-state-tmp\">\n            <bb-empty-state-ui\n              iconSize=\"xxl\"\n              iconModifier=\"help-outline\"\n              title=\"No business function assigned to this job role.\"\n              i18n-title=\"Empty state title message@@job-role-detail-modal.state.empty.subtitle\"></bb-empty-state-ui>\n          </div>\n        </ng-template>\n      </ng-template>\n    </bb-modal-body-ui>\n  </bb-modal-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i3.ModalComponent; }), selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i0.forwardRef(function () { return i3.ModalHeaderComponent; }), selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i0.forwardRef(function () { return i4.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i0.forwardRef(function () { return i5.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0.forwardRef(function () { return i3.ModalBodyComponent; }), selector: "bb-modal-body-ui" }, { type: i0.forwardRef(function () { return i6.BusinessFunctionGroupNameComponent; }), selector: "bb-business-function-group-name", inputs: ["groupKey"] }, { type: i0.forwardRef(function () { return i7.BusinessFunctionPrivilegesNameComponent; }), selector: "bb-business-function-privileges-name", inputs: ["hideExecute"] }, { type: i0.forwardRef(function () { return i8.BusinessFunctionNameComponent; }), selector: "bb-business-function-name", inputs: ["businessFunction"] }, { type: i0.forwardRef(function () { return i9.JobRoleDetailPrivilegeIndicatorListComponent; }), selector: "bb-job-role-detail-privilege-indicator-list", inputs: ["businessFunction", "first", "last"] }, { type: i0.forwardRef(function () { return i10.LoadingIndicatorComponent; }), selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i0.forwardRef(function () { return i11.EmptyStateComponent; }), selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i0.forwardRef(function () { return JobRoleDetailModalCustomizableDirective; }), selector: "[bbJobRoleDetailModalCustomizable]" }, { type: i0.forwardRef(function () { return i3.CustomModalHeaderDirective; }), selector: "ng-template[bbCustomModalHeader]" }, { type: i0.forwardRef(function () { return i12.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i0.forwardRef(function () { return i3.CustomModalBodyDirective; }), selector: "ng-template[bbCustomModalBody]" }, { type: i0.forwardRef(function () { return i13.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i13.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "async": i0.forwardRef(function () { return i13.AsyncPipe; }) } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: JobRoleDetailModalComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-job-role-detail-modal',
                    templateUrl: 'job-role-detail-modal.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.JobRoleDetailBusinessFunctionGroupService }, { type: i2.BusinessFunctionsService }]; }, propDecorators: { jobRoleDetail: [{
                type: Input
            }], serviceAgreementId: [{
                type: Input
            }], filterHookEnabled: [{
                type: Input
            }], close: [{
                type: Output
            }] } });
export class JobRoleDetailModalCustomizableDirective extends BbTemplate {
}
/** @nocollapse */ JobRoleDetailModalCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: JobRoleDetailModalCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ JobRoleDetailModalCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: JobRoleDetailModalCustomizableDirective, selector: "[bbJobRoleDetailModalCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: JobRoleDetailModalCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbJobRoleDetailModalCustomizable]',
                }]
        }] });
//# sourceMappingURL=job-role-detail-modal.component.js.map