import { Injectable } from '@angular/core';
import { BehaviorSubject, of } from 'rxjs';
import { catchError, tap } from 'rxjs/operators';
import { ServiceAgreementsHttpService } from '@backbase/data-ang/accesscontrol';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/data-ang/accesscontrol";
export class BusinessFunctionsService {
    constructor(serviceAgreementsHttpService) {
        this.serviceAgreementsHttpService = serviceAgreementsHttpService;
        /**
         * Business function error stream
         */
        this.businessFunctionsError$ = new BehaviorSubject(undefined);
    }
    /**
     * Return business functions based on provided service agreement id
     * @param id: string - service agreement id
     */
    getBusinessFunctions(id) {
        return this.serviceAgreementsHttpService.getBusinessfunctions({ id }).pipe(tap(() => this.businessFunctionsError$.next(undefined)), catchError((error) => {
            this.businessFunctionsError$.next(error);
            return of([]);
        }));
    }
}
/** @nocollapse */ BusinessFunctionsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BusinessFunctionsService, deps: [{ token: i1.ServiceAgreementsHttpService }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ BusinessFunctionsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BusinessFunctionsService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BusinessFunctionsService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.ServiceAgreementsHttpService }]; } });
//# sourceMappingURL=business-functions.service.js.map