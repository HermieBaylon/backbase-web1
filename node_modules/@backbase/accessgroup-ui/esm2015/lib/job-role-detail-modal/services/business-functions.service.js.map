{"version":3,"file":"business-functions.service.js","sourceRoot":"","sources":["../../../../../../../libs/accessgroup-ui/src/lib/job-role-detail-modal/services/business-functions.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,eAAe,EAAc,EAAE,EAAE,MAAM,MAAM,CAAC;AACvD,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACjD,OAAO,EAA4B,4BAA4B,EAAE,MAAM,kCAAkC,CAAC;;;AAG1G,MAAM,OAAO,wBAAwB;IAMnC,YAA6B,4BAA0D;QAA1D,iCAA4B,GAA5B,4BAA4B,CAA8B;QALvF;;WAEG;QACM,4BAAuB,GAAG,IAAI,eAAe,CAAgC,SAAS,CAAC,CAAC;IAEP,CAAC;IAE3F;;;OAGG;IACH,oBAAoB,CAAC,EAAU;QAC7B,OAAO,IAAI,CAAC,4BAA4B,CAAC,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CACxE,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EACvD,UAAU,CAAC,CAAC,KAAwB,EAAE,EAAE;YACtC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACzC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;yIApBU,wBAAwB;6IAAxB,wBAAwB;4FAAxB,wBAAwB;kBADpC,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { FunctionsGetResponseBody, ServiceAgreementsHttpService } from '@backbase/data-ang/accesscontrol';\n\n@Injectable()\nexport class BusinessFunctionsService {\n  /**\n   * Business function error stream\n   */\n  readonly businessFunctionsError$ = new BehaviorSubject<HttpErrorResponse | undefined>(undefined);\n\n  constructor(private readonly serviceAgreementsHttpService: ServiceAgreementsHttpService) {}\n\n  /**\n   * Return business functions based on provided service agreement id\n   * @param id: string - service agreement id\n   */\n  getBusinessFunctions(id: string): Observable<FunctionsGetResponseBody[]> {\n    return this.serviceAgreementsHttpService.getBusinessfunctions({ id }).pipe(\n      tap(() => this.businessFunctionsError$.next(undefined)),\n      catchError((error: HttpErrorResponse) => {\n        this.businessFunctionsError$.next(error);\n        return of([]);\n      }),\n    );\n  }\n}\n"]}