{"version":3,"file":"select-items-modal.component.js","sourceRoot":"","sources":["../../../../../../libs/accessgroup-ui/src/lib/select-items-modal/select-items-modal.component.ts","../../../../../../libs/accessgroup-ui/src/lib/select-items-modal/select-items-modal.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n} from '@angular/core';\nimport { NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\n\n@Directive({ selector: 'ng-template[bbSelectItemsSearch]' })\nexport class SelectItemsSearchDirective {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n@Directive({ selector: 'ng-template[bbSelectItemsItemHeader]' })\nexport class SelectItemsItemHeaderDirective {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n@Directive({ selector: 'ng-template[bbSelectItemsItem]' })\nexport class SelectItemsItemDirective {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n@Directive({ selector: 'ng-template[bbSelectItemsLoading]' })\nexport class SelectItemsLoadingDirective {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n@Directive({ selector: 'ng-template[bbSelectItemsError]' })\nexport class SelectItemsErrorDirective {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n@Directive({ selector: 'ng-template[bbSelectItemsEmpty]' })\nexport class SelectItemsEmptyDirective {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n@Component({\n  selector: 'bb-select-items-modal',\n  templateUrl: './select-items-modal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectItemsModalComponent<T = any> implements AfterContentInit {\n  @ContentChild(SelectItemsSearchDirective) searchTemplate: SelectItemsSearchDirective | undefined;\n  @ContentChild(SelectItemsItemHeaderDirective) itemHeaderTemplate: SelectItemsItemHeaderDirective | undefined;\n  @ContentChild(SelectItemsItemDirective) itemTemplate: SelectItemsItemDirective | undefined;\n  @ContentChild(SelectItemsLoadingDirective) loadingTemplate: SelectItemsLoadingDirective | null = null;\n  @ContentChild(SelectItemsErrorDirective) errorTemplate: SelectItemsErrorDirective | null = null;\n  @ContentChild(SelectItemsEmptyDirective) emptyTemplate: SelectItemsEmptyDirective | null = null;\n\n  private readonly selectedItems = new Map<T[keyof T], T>();\n  private _allItems: T[] = [];\n  private _items: T[] = [];\n  private _isOpen = false;\n\n  searchValue = '';\n\n  @Input()\n  set isOpen(value) {\n    this._isOpen = value;\n\n    this.selectedItems.clear();\n    this.searchValue = '';\n    this.allSelected = false;\n    this.someSelected = false;\n  }\n\n  /**\n   * Modal heading\n   */\n  @Input() title = '';\n\n  /**\n   * List of items to select from\n   */\n  @Input() set items(items: T[]) {\n    this._items = items;\n    this.updateSelectFlags();\n  }\n\n  /**\n   * List of all available items (to manage toggleAll over not loaded items)\n   * @param items\n   */\n  @Input() set allItems(items: T[]) {\n    if (items) {\n      this._allItems = items;\n      this.toggleSelection(items, this.areAllItemsSelected(items));\n    }\n  }\n\n  /**\n   * Number of items\n   */\n  @Input() totalCount = 0;\n  /**\n   * Loading flag\n   */\n  @Input() loading = false;\n  /**\n   * Loading flag when loading more\n   */\n  @Input() loadingMore = false;\n  /**\n   * Error flag\n   */\n  @Input() error = false;\n  /**\n   * Should the search box be shown\n   */\n  @Input() searchEnabled = false;\n  /**\n   * Indicates button group separation for selection\n   */\n  @Input() selectGroupsEnabled = false;\n  /**\n   * Placeholder for search box\n   */\n  @Input() searchPlaceholder = '';\n  /**\n   * Label for the submit button\n   */\n  @Input() submitLabel = '';\n  /**\n   * Dialog options. Defaults to empty object.\n   */\n  @Input() modalOptions: NgbModalOptions = {};\n  /**\n   * Unique identifier for the items\n   */\n  @Input() itemIdProperty: keyof T = 'id' as keyof T;\n  /**\n   * Event emitter that emits on confirm\n   * The event contains a list of the items that were selected\n   */\n  @Output() confirm = new EventEmitter<T[]>();\n  /**\n   * Event emitter that emits a search string\n   */\n  @Output() search = new EventEmitter<string>();\n  /**\n   * Event emitter that emits when canceling the selection\n   */\n  @Output() cancel = new EventEmitter<void>();\n  /**\n   * Event emitter which emits on modal close\n   */\n  @Output() isOpenChange = new EventEmitter<boolean>();\n  /**\n   * Event emitter which emits when end of list is reached\n   */\n  @Output() loadMore = new EventEmitter<void>();\n  /**\n   * Event emitter which emits when all items should be loaded\n   */\n  @Output() loadAllItems = new EventEmitter<void>();\n\n  allSelected = false;\n  someSelected = false;\n\n  // eslint-disable-next-line @typescript-eslint/adjacent-overload-signatures\n  get isOpen(): boolean {\n    return this._isOpen;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/adjacent-overload-signatures\n  get items(): T[] {\n    return this._items;\n  }\n\n  get selectedItemsLength(): number {\n    return this.selectedItems.size;\n  }\n\n  /**\n   * Case when totalCount > 0 indicates that we have paginated API\n   *\n   * TODO: Replace with optional chaining(?.) once prettier will be updated to 2.1.*\n   */\n  get areAllScrollableItemsLoaded(): boolean {\n    return this.totalCount === 0 || (this._items && this._items.length === this.totalCount);\n  }\n\n  ngAfterContentInit() {\n    if (!this.itemHeaderTemplate || !this.itemTemplate) {\n      throw new Error('itemHeaderTemplate and itemTemplate are mandatory');\n    }\n  }\n\n  isItemSelected(item: T): boolean {\n    return this.selectedItems.has(item[this.itemIdProperty]);\n  }\n\n  toggleOpen(event: boolean) {\n    this.isOpenChange.emit(event);\n  }\n\n  onToggleAll(event: Event) {\n    event.preventDefault();\n\n    // this.loadAndToggleAll.observers.length === 0 will keep backwards compatibility\n    if (this.areAllScrollableItemsLoaded || this.loadAllItems.observers.length === 0) {\n      this.toggleSelection(this._items, this.allSelected);\n    } else {\n      this.checkForAllLoadedItems();\n    }\n  }\n\n  onToggleItem(event: Event, item: T) {\n    event.preventDefault();\n\n    this.toggleSelection([item], this.selectedItems.has(item[this.itemIdProperty]));\n  }\n\n  onLastFocused() {\n    if (!this.areAllScrollableItemsLoaded) {\n      this.onLoadMore();\n    }\n  }\n\n  onCancel() {\n    this.isOpenChange.emit(false);\n  }\n\n  onSubmit() {\n    this.confirm.emit(Array.from(this.selectedItems.values()));\n    this.isOpenChange.emit(false);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  onSearch(query: string | boolean | Object | null) {\n    if (typeof query === 'string') {\n      this.search.emit(query);\n      this._allItems = [];\n    }\n  }\n\n  onLoadMore() {\n    this.loadMore.emit();\n  }\n\n  trackByItemProp(_index: number, item: T): T[keyof T] {\n    return item[this.itemIdProperty];\n  }\n\n  private checkForAllLoadedItems() {\n    // checking if we already loaded all items\n    if (this._allItems.length === this.totalCount) {\n      this.toggleSelection(this._allItems, this.areAllItemsSelected(this._allItems));\n    } else {\n      this.loadAllItems.emit();\n    }\n  }\n\n  private toggleSelection(items: T[], allSelected: boolean) {\n    if (allSelected) {\n      items.forEach(item => this.selectedItems.delete(item[this.itemIdProperty]));\n    } else {\n      items.forEach(item => this.selectedItems.set(item[this.itemIdProperty], item));\n    }\n\n    this.updateSelectFlags();\n  }\n\n  // TODO: Replace with optional chaining(?.) once prettier will be updated to 2.1.*\n  private updateSelectFlags() {\n    this.allSelected = this.areAllItemsSelected(this._items);\n    this.someSelected =\n      !this.allSelected && this._items && this._items.some(item => this.selectedItems.has(item[this.itemIdProperty]));\n  }\n\n  // TODO: Replace with optional chaining(?.) once prettier will be updated to 2.1.*\n  private areAllItemsSelected(items: T[] | undefined): boolean {\n    return Boolean(items && items.every(item => this.selectedItems.has(item[this.itemIdProperty])));\n  }\n}\n","<bb-modal-ui\n  data-role=\"select-items-modal\"\n  *ngIf=\"isOpen\"\n  [isOpen]=\"true\"\n  [modalOptions]=\"modalOptions\"\n  (isOpenChange)=\"toggleOpen($event)\">\n  <bb-modal-header-ui data-role=\"select-items-modal__header-label\" [title]=\"title\"></bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <div class=\"bb-select-items bb-outline-spacer bb-outline-spacer--all\">\n        <ng-container *ngIf=\"searchEnabled\">\n          <ng-container *ngTemplateOutlet=\"searchTpl\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!error; else errorTpl\">\n          <ng-container *ngIf=\"!loading; else loadingTpl\">\n            <ng-container *ngIf=\"items?.length! > 0; else emptyTpl\">\n              <bb-infinite-scroll-ui\n                class=\"bb-infinite-scroll bb-outline-spacer bb-outline-spacer--left\"\n                data-role=\"select-items-modal__infinite-scroll\"\n                [offset]=\"5\"\n                [disableScrollEnd]=\"areAllScrollableItemsLoaded\"\n                (scrollEnd)=\"onLoadMore()\">\n                <div class=\"bb-list bb-list--density-sm\">\n                  <div\n                    class=\"\n                      sticky-top\n                      position-sticky\n                      bb-select-items__sticky-header-top\n                      bb-outline-spacer bb-outline-spacer--left\n                    \">\n                    <div class=\"bb-list__item\">\n                      <ng-container *ngIf=\"itemHeaderTemplate\">\n                        <div\n                          class=\"bb-stack bb-stack--density-sm bb_block bb-block--sm\"\n                          data-role=\"select-items-modal__items-header\">\n                          <div\n                            class=\"bb-stack__item\"\n                            data-role=\"select-items-modal__toggle-all\"\n                            (click)=\"onToggleAll($event)\"\n                            (keyup.space)=\"onToggleAll($event)\">\n                            <bb-input-checkbox-ui\n                              label=\"&nbsp;\"\n                              aria-label=\"Checkbox value to toggle all items\"\n                              i18n-aria-label=\"\n                                Checkbox value to toggle all items@@select-items-modal.label.aria.checkbox-for-all\"\n                              [ngModel]=\"allSelected\"\n                              [indeterminate]=\"someSelected\"></bb-input-checkbox-ui>\n                          </div>\n                          <div\n                            class=\"bb-stack__item bb-stack__item--fill\"\n                            data-role=\"select-items-modal__items-header-template\">\n                            <ng-container *ngTemplateOutlet=\"itemHeaderTemplate!.templateRef\"> </ng-container>\n                          </div>\n                        </div>\n                      </ng-container>\n                    </div>\n                    <!-- this div needed for border in bb-list__item above -->\n                    <div></div>\n                  </div>\n                  <div *ngIf=\"itemTemplate\" data-role=\"select-items-modal__list\" role=\"list\">\n                    <div\n                      *ngFor=\"let item of items; let last = last; trackBy: trackByItemProp\"\n                      class=\"bb-list__item\"\n                      (click)=\"onToggleItem($event, item)\"\n                      (keyup.space)=\"onToggleItem($event, item)\"\n                      data-role=\"select-items-modal__list-item\"\n                      role=\"listitem\">\n                      <div class=\"bb-stack bb-stack--density-sm\" role=\"button\">\n                        <bb-input-checkbox-ui\n                          label=\"&nbsp;\"\n                          aria-label=\"Checkbox value for the next item\"\n                          i18n-aria-label=\"\n                            Checkbox value for the next item@@select-items-modal.label.aria.checkbox-for-item\"\n                          [ngModel]=\"isItemSelected(item)\"\n                          (focus)=\"last && onLastFocused()\"\n                          class=\"bb-stack__item\"></bb-input-checkbox-ui>\n                        <div\n                          class=\"bb-stack__item bb-stack__item--fill\"\n                          data-role=\"select-items-modal__list-item-template\">\n                          <ng-container\n                            *ngTemplateOutlet=\"\n                              itemTemplate!.templateRef;\n                              context: {\n                                item: item,\n                                isSelected: isItemSelected(item),\n                                toggleItem: onToggleItem.bind(this)\n                              }\n                            \">\n                          </ng-container>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  *ngIf=\"!areAllScrollableItemsLoaded\"\n                  [class.invisible]=\"!loadingMore\"\n                  class=\"bb-block bb-block--sm\"\n                  data-role=\"select-items-modal__list-load-more-spinner\">\n                  <bb-loading-indicator-ui loaderSize=\"sm\"></bb-loading-indicator-ui>\n                </div>\n              </bb-infinite-scroll-ui>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          class=\"bb-button-bar__button\"\n          data-role=\"select-items-modal__add-btn\"\n          bbButton\n          (click)=\"onSubmit()\"\n          [disabled]=\"selectedItemsLength === 0\">\n          <ng-container *ngIf=\"!submitLabel; else submitLabelRef\" i18n=\"Submit@@select-items-modal.label.button.submit\"\n            >Submit</ng-container\n          >\n          <span data-role=\"select-items-modal__number-of-selected-items\" *ngIf=\"selectedItemsLength\"\n            >&nbsp;({{ selectedItemsLength }})</span\n          >\n          <ng-template #submitLabelRef>{{ submitLabel }}</ng-template>\n        </button>\n        <button\n          class=\"bb-button-bar__button\"\n          bbButton\n          (click)=\"onCancel()\"\n          color=\"secondary\"\n          i18n=\"Cancel@@select-items-modal.label.button.cancel\"\n          data-role=\"select-items-modal__cancel-btn\">\n          Cancel\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n\n<ng-template #errorTpl>\n  <ng-container *ngIf=\"errorTemplate; else defaultErrorTemplate\">\n    <ng-container *ngTemplateOutlet=\"errorTemplate!.templateRef\"> </ng-container>\n  </ng-container>\n\n  <ng-template #defaultErrorTemplate>\n    <div class=\"bb-state-container bb-select-items__state\" data-role=\"select-items-modal__error-state\">\n      <bb-empty-state-ui\n        iconModifier=\"error\"\n        iconColor=\"muted\"\n        iconSize=\"xxl\"\n        title=\"Unknown error\"\n        i18n-title=\"Unknown error@@select-items-modal.label.fallback.error.title\"\n        subtitle=\"Please try again later\"\n        i18n-subtitle=\"Please try again later@@select-items-modal.label.fallback.error.message\"></bb-empty-state-ui>\n    </div>\n  </ng-template>\n</ng-template>\n\n<ng-template #searchTpl>\n  <ng-container *ngIf=\"searchTemplate; else defaultSearchTemplate\">\n    <ng-container\n      *ngTemplateOutlet=\"\n        searchTemplate!.templateRef;\n        context: {\n          searchPlaceholder: searchPlaceholder,\n          searchValue: searchValue,\n          onSearch: onSearch.bind(this)\n        }\n      \">\n    </ng-container>\n  </ng-container>\n\n  <ng-template #defaultSearchTemplate>\n    <div class=\"bb-block bb-block--sm\">\n      <bb-search-box-ui\n        data-role=\"select-items-modal__search\"\n        class=\"bb-select-items__search-box\"\n        [aria-label]=\"searchPlaceholder\"\n        [showClear]=\"true\"\n        [showSearch]=\"true\"\n        [(ngModel)]=\"searchValue\"\n        [placeholder]=\"searchPlaceholder\"\n        (submit)=\"onSearch($event)\"\n        (clear)=\"onSearch('')\"></bb-search-box-ui>\n    </div>\n  </ng-template>\n</ng-template>\n\n<ng-template #loadingTpl>\n  <ng-container *ngIf=\"loadingTemplate; else defaultLoadingTemplate\">\n    <ng-container *ngTemplateOutlet=\"loadingTemplate!.templateRef\"> </ng-container>\n  </ng-container>\n\n  <ng-template #defaultLoadingTemplate>\n    <div class=\"bb-state-container bb-select-items__state\" data-role=\"select-items-modal__loading-state\">\n      <bb-loading-indicator-ui></bb-loading-indicator-ui>\n    </div>\n  </ng-template>\n</ng-template>\n\n<ng-template #emptyTpl>\n  <ng-container *ngIf=\"emptyTemplate; else defaultEmptyTemplate\">\n    <ng-container *ngTemplateOutlet=\"emptyTemplate!.templateRef\"> </ng-container>\n  </ng-container>\n\n  <ng-template #defaultEmptyTemplate>\n    <div class=\"bb-state-container bb-select-items__state\" data-role=\"select-items-modal__empty-state\">\n      <bb-empty-state-ui\n        data-role=\"empty-state\"\n        title=\"No items\"\n        i18n-title=\"No items@@select-items-modal.label.fallback.empty.title\"></bb-empty-state-ui>\n    </div>\n  </ng-template>\n</ng-template>\n"]}