import { Component, Input } from '@angular/core';
import { formatDate, formatTime } from '../model/helpers';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/icon";
import * as i2 from "@angular/common";
export class TimeBoundsComponent {
    constructor() {
        this.validityFormat = '';
    }
    /**
     * Function group
     */
    set timeBounds(value) {
        if (value) {
            this.timeBoundsValue = value;
            this.fromDate = formatDate(value.validFromDate);
            this.fromTime = formatTime(this.fromDate, value.validFromTime);
            this.untilDate = formatDate(value.validUntilDate);
            this.untilTime = formatTime(this.untilDate, value.validUntilTime);
            this.setValidityPeriod();
        }
    }
    get timeBounds() {
        return this.timeBoundsValue;
    }
    setValidityPeriod() {
        this.validityFormat = '';
        if (this.fromDate && !this.untilDate) {
            this.validityFormat = 'validFromOnly';
        }
        if (!this.fromDate && this.untilDate) {
            this.validityFormat = 'validUntilOnly';
        }
        if (this.fromDate && this.untilDate) {
            this.validityFormat = 'validFromUntil';
        }
    }
}
/** @nocollapse */ TimeBoundsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TimeBoundsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ TimeBoundsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TimeBoundsComponent, selector: "bb-time-bounds", inputs: { timeBounds: "timeBounds" }, ngImport: i0, template: "<div *ngIf=\"timeBounds && (fromDate || untilDate)\" class=\"bb-stack\" data-role=\"time-bounds\">\n  <bb-icon-ui name=\"access-time\" class=\"bb-stack__item bb-stack__item--spacing-sm\" size=\"sm\"></bb-icon-ui>\n  <div\n    class=\"bb-stack__item bb-subheader bb-subheader--regular\"\n    i18n=\"Time bound label@@time-bounds.label.validity-period\">\n    { validityFormat, select, validFromOnly {Active from\n    <span class=\"bb-text-bold\">{{ fromDate | date: 'mediumDate' }} {{ fromTime | date: 'shortTime' }}</span\n    >} validUntilOnly {Active until\n    <span class=\"bb-text-bold\">{{ untilDate | date: 'mediumDate' }} {{ untilTime | date: 'shortTime' }}</span\n    >} validFromUntil {Active from\n    <span class=\"bb-text-bold\">{{ fromDate | date: 'mediumDate' }} {{ fromTime | date: 'shortTime' }}</span> until\n    <span class=\"bb-text-bold\">{{ untilDate | date: 'mediumDate' }} {{ untilTime | date: 'shortTime' }}</span\n    >} }\n  </div>\n</div>\n", components: [{ type: i1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "date": i2.DatePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TimeBoundsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-time-bounds',
                    templateUrl: './time-bounds.component.html',
                }]
        }], propDecorators: { timeBounds: [{
                type: Input
            }] } });
//# sourceMappingURL=time-bounds.component.js.map