{"version":3,"file":"privilege-indicator-list.component.js","sourceRoot":"","sources":["../../../../../../libs/accessgroup-ui/src/lib/privilege-indicator-list/privilege-indicator-list.component.ts","../../../../../../libs/accessgroup-ui/src/lib/privilege-indicator-list/privilege-indicator-list.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;;;;;;;;AAQvE,MAAM,OAAO,+BAA+B;IAJ5C;QAyBE;;WAEG;QACO,kBAAa,GAAG,IAAI,YAAY,EAAE,CAAC;KAkD9C;IAhDC;;OAEG;IACH,SAAS,CAAC,SAAiB;;QACzB,aAAa;QACb,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,IAAG,MAAA,IAAI,CAAC,gBAAgB,0CAAE,UAAU,CAAA,GAAG,SAAS,CAAC;QACnF,OAAO,CACL,IAAI,CAAC,SAAS;YACd,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA,MAAA,IAAI,CAAC,gBAAgB,0CAAE,UAAU,IAAG,SAAS,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aACxF,MAAA,IAAI,CAAC,gBAAgB,0CAAE,UAAU,CAAC,SAAS,EAAE,QAAQ,CAAA;aACrD,MAAA,IAAI,CAAC,gBAAgB,0CAAE,UAAU,CAAC,SAAS,EAAE,UAAU,CAAA,CACxD,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,eAAe,CAAC,SAAiB;;QAC/B,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,eAAe;gBACzB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,IAAG,MAAA,IAAI,CAAC,gBAAgB,0CAAE,UAAU,CAAA,GAAG,SAAS,CAAC;gBACtF,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA,MAAA,IAAI,CAAC,gBAAgB,0CAAE,UAAU,IAAG,SAAS,CAAC;YACjE,EAAE,EAAE,MAAA,IAAI,CAAC,gBAAgB,0CAAE,UAAU;YACrC,IAAI,EAAE,SAAS;SAChB,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,SAAS,CAAC,QAAa;QACrB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,aAAa,CAAC,IAAI,iCAClB,QAAQ,KACX,eAAe,EAAE,IAAI,CAAC,eAAe,IACrC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACnC;IACH,CAAC;IAED;;OAEG;IACH,kBAAkB,CAAC,SAAwC;QACzD,MAAM,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;QAC1C,OAAO,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,CAAC,KAAK,CAAC,EAAE,eAAC,OAAA,CAAC,CAAA,MAAA,KAAK,CAAC,OAAO,0CAAE,MAAM,CAAA,IAAI,CAAC,CAAA,MAAA,KAAK,CAAC,MAAM,0CAAE,MAAM,CAAA,CAAA,EAAA,CAAC,CAAC;IACtF,CAAC;;gJAzEU,+BAA+B;oIAA/B,+BAA+B,gQCR5C,mhTAuOA;4FD/Na,+BAA+B;kBAJ3C,SAAS;mBAAC;oBACT,QAAQ,EAAE,6BAA6B;oBACvC,WAAW,EAAE,2CAA2C;iBACzD;8BAKU,gBAAgB;sBAAxB,KAAK;gBAKG,SAAS;sBAAjB,KAAK;gBAKG,cAAc;sBAAtB,KAAK;gBAKG,eAAe;sBAAvB,KAAK;gBAKI,aAAa;sBAAtB,MAAM","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { LimitBound } from '@backbase/accessgroup-common-ang';\nimport { BusinessFunction } from '../model/types';\n\n@Component({\n  selector: 'bb-privilege-indicator-list',\n  templateUrl: './privilege-indicator-list.component.html',\n})\nexport class PrivilegeIndicatorListComponent {\n  /**\n   * Business Function to check privileges against\n   */\n  @Input() businessFunction: BusinessFunction | undefined;\n\n  /**\n   * Limit grouped by id and type of permission\n   */\n  @Input() limitData: any;\n\n  /**\n   * Permission base on cxp and user permission\n   */\n  @Input() userPermission: any;\n\n  /**\n   * Function group id\n   */\n  @Input() functionGroupId: string | undefined;\n\n  /**\n   * Business Function to check privileges against\n   */\n  @Output() emitLimitData = new EventEmitter();\n\n  /**\n   * Check whether limit is allowed for specific privilege\n   */\n  showLimit(privilege: string): boolean {\n    // @ts-ignore\n    const fgKey = this.functionGroupId + this.businessFunction?.functionId + privilege;\n    return (\n      this.limitData &&\n      (this.limitData[this.businessFunction?.functionId + privilege] || this.limitData[fgKey]) &&\n      this.businessFunction?.privileges[privilege].assigned &&\n      this.businessFunction?.privileges[privilege].applicable\n    );\n  }\n\n  /**\n   * Get limit context object\n   */\n  getLimitContext(privilege: string) {\n    return {\n      limit: this.functionGroupId\n        ? this.limitData[this.functionGroupId + this.businessFunction?.functionId + privilege]\n        : this.limitData[this.businessFunction?.functionId + privilege],\n      id: this.businessFunction?.functionId,\n      type: privilege,\n    };\n  }\n\n  /**\n   * Emit limit data\n   */\n  emitLimit(emitData: any) {\n    if (this.functionGroupId) {\n      this.emitLimitData.emit({\n        ...emitData,\n        functionGroupId: this.functionGroupId,\n      });\n    } else {\n      this.emitLimitData.emit(emitData);\n    }\n  }\n\n  /**\n   * Track when control has no amount and no limits button should be shown\n   */\n  isLimitBoundsEmpty(limitData: { limitBounds: LimitBound[] }): boolean {\n    const limitBounds = limitData.limitBounds;\n    return limitBounds?.every(bound => !bound.regular?.amount && !bound.shadow?.amount);\n  }\n}\n","<ng-container *ngIf=\"businessFunction\">\n  <span\n    class=\"col bb-privilege-indicator-list-item bb-text-align-center\"\n    data-role=\"privilege-indicator-list-execute-item\">\n    <span\n      class=\"sr-only\"\n      aria-label=\"Execute privilege\"\n      i18n-aria-label=\"Execute privilege@@privilege-indicator-list.label.privilege.aria.execute\">\n    </span>\n    <bb-privilege-indicator\n      [attr.data-role]=\"businessFunction.name + '-execute'\"\n      [applicable]=\"businessFunction.privileges.execute.applicable\"\n      [assigned]=\"businessFunction.privileges.execute.assigned\"></bb-privilege-indicator>\n    <ng-container\n      *ngIf=\"showLimit('execute')\"\n      [ngTemplateOutlet]=\"limitTemplate\"\n      [ngTemplateOutletContext]=\"getLimitContext('execute')\">\n    </ng-container>\n  </span>\n\n  <span\n    class=\"col bb-privilege-indicator-list-item bb-text-align-center\"\n    data-role=\"privilege-indicator-list-view-item\">\n    <span\n      class=\"sr-only\"\n      aria-label=\"View privilege\"\n      i18n-aria-label=\"View privilege@@privilege-indicator-list.label.privilege.aria.view\">\n    </span>\n    <bb-privilege-indicator\n      [attr.data-role]=\"businessFunction.name + '-view'\"\n      [applicable]=\"businessFunction.privileges.view.applicable\"\n      [assigned]=\"businessFunction.privileges.view.assigned\"></bb-privilege-indicator>\n    <ng-container\n      *ngIf=\"showLimit('view')\"\n      [ngTemplateOutlet]=\"limitTemplate\"\n      [ngTemplateOutletContext]=\"getLimitContext('view')\">\n    </ng-container>\n  </span>\n\n  <span\n    class=\"col bb-privilege-indicator-list-item bb-text-align-center\"\n    data-role=\"privilege-indicator-list-create-item\">\n    <span\n      class=\"sr-only\"\n      aria-label=\"Create privilege\"\n      i18n-aria-label=\"Create privilege@@privilege-indicator-list.label.privilege.aria.create\">\n    </span>\n    <bb-privilege-indicator\n      [attr.data-role]=\"businessFunction.name + '-create'\"\n      [applicable]=\"businessFunction.privileges.create.applicable\"\n      [assigned]=\"businessFunction.privileges.create.assigned\"></bb-privilege-indicator>\n    <ng-container\n      *ngIf=\"showLimit('create')\"\n      [ngTemplateOutlet]=\"limitTemplate\"\n      [ngTemplateOutletContext]=\"getLimitContext('create')\">\n    </ng-container>\n  </span>\n\n  <span\n    class=\"col bb-privilege-indicator-list-item bb-text-align-center\"\n    data-role=\"privilege-indicator-list-edit-item\">\n    <span\n      class=\"sr-only\"\n      aria-label=\"Edit privilege\"\n      i18n-aria-label=\"Edit privilege@@privilege-indicator-list.label.privilege.aria.edit\">\n    </span>\n    <bb-privilege-indicator\n      [attr.data-role]=\"businessFunction.name + '-edit'\"\n      [applicable]=\"businessFunction.privileges.edit.applicable\"\n      [assigned]=\"businessFunction.privileges.edit.assigned\"></bb-privilege-indicator>\n    <ng-container\n      *ngIf=\"showLimit('edit')\"\n      [ngTemplateOutlet]=\"limitTemplate\"\n      [ngTemplateOutletContext]=\"getLimitContext('edit')\">\n    </ng-container>\n  </span>\n\n  <span\n    class=\"col bb-privilege-indicator-list-item bb-text-align-center\"\n    data-role=\"privilege-indicator-list-delete-item\">\n    <span\n      class=\"sr-only\"\n      aria-label=\"Delete privilege\"\n      i18n-aria-label=\"Delete privilege@@privilege-indicator-list.label.privilege.aria.delete\">\n    </span>\n    <bb-privilege-indicator\n      [attr.data-role]=\"businessFunction.name + '-delete'\"\n      [applicable]=\"businessFunction.privileges.delete.applicable\"\n      [assigned]=\"businessFunction.privileges.delete.assigned\"></bb-privilege-indicator>\n    <ng-container\n      *ngIf=\"showLimit('delete')\"\n      [ngTemplateOutlet]=\"limitTemplate\"\n      [ngTemplateOutletContext]=\"getLimitContext('delete')\">\n    </ng-container>\n  </span>\n\n  <span\n    class=\"col bb-privilege-indicator-list-item bb-text-align-center\"\n    data-role=\"privilege-indicator-list-cancel-item\">\n    <span\n      class=\"sr-only\"\n      aria-label=\"Cancel privilege\"\n      i18n-aria-label=\"Cancel privilege@@privilege-indicator-list.label.privilege.aria.cancel\">\n    </span>\n    <bb-privilege-indicator\n      [attr.data-role]=\"businessFunction.name + '-cancel'\"\n      [applicable]=\"businessFunction.privileges.cancel.applicable\"\n      [assigned]=\"businessFunction.privileges.cancel.assigned\"></bb-privilege-indicator>\n    <ng-container\n      *ngIf=\"showLimit('cancel')\"\n      [ngTemplateOutlet]=\"limitTemplate\"\n      [ngTemplateOutletContext]=\"getLimitContext('cancel')\">\n    </ng-container>\n  </span>\n  <span\n    class=\"col bb-privilege-indicator-list-item bb-text-align-center\"\n    data-role=\"privilege-indicator-list-approve-item\">\n    <span\n      class=\"sr-only\"\n      aria-label=\"Approve privilege\"\n      i18n-aria-label=\"Approve privilege@@privilege-indicator-list.label.privilege.aria.approve\">\n    </span>\n    <bb-privilege-indicator\n      [attr.data-role]=\"businessFunction.name + '-approve'\"\n      [applicable]=\"businessFunction.privileges.approve.applicable\"\n      [assigned]=\"businessFunction.privileges.approve.assigned\"></bb-privilege-indicator>\n    <ng-container\n      *ngIf=\"showLimit('approve')\"\n      [ngTemplateOutlet]=\"limitTemplate\"\n      [ngTemplateOutletContext]=\"getLimitContext('approve')\">\n    </ng-container>\n  </span>\n</ng-container>\n\n<ng-template #limitTemplate let-limit=\"limit\" let-type=\"type\" let-id=\"id\">\n  <button\n    data-role=\"privilege-indicator-list-limit-create\"\n    bbButton\n    aria-label=\"Create Limit\"\n    i18n-aria-label=\"Create limit button@@privilege-indicator-list.limit.aria.label.create-limit\"\n    class=\"align-top bb-job-role-limit-icon\"\n    color=\"link-text-light\"\n    bbTooltip=\"Click to set limit\"\n    container=\"body\"\n    i18n-bbTooltip=\"Set limit button tooltip@@privilege-indicator-list.limit.set-limit.tooltip\"\n    triggers=\"hover\"\n    (bbKeyboardClick)=\"emitLimit({ type: 'create', limit: limit, privilegesType: type, id: id })\"\n    *ngIf=\"!limit?.created && (userPermission.regularLimit.create || userPermission.shadowLimit.create)\">\n    <bb-icon-ui name=\"control-point\" size=\"sm\" color=\"primary\"></bb-icon-ui>\n  </button>\n\n  <button\n    data-role=\"privilege-indicator-list-limit-edit\"\n    class=\"align-top bb-job-role-limit-icon\"\n    aria-label=\"Edit Limit\"\n    i18n-aria-label=\"Edit limit button@@privilege-indicator-list.limit.aria.label.edit-limit\"\n    color=\"link-text-light\"\n    bbButton\n    container=\"body\"\n    bbTooltip=\"Click to edit limit\"\n    i18n-bbTooltip=\"Edit limit button tooltip@@privilege-indicator-list.limit.edit-limit.tooltip\"\n    triggers=\"hover\"\n    (bbKeyboardClick)=\"emitLimit({ type: 'edit', limit: limit, privilegesType: type, id: id })\"\n    *ngIf=\"\n      limit?.created &&\n      (userPermission.regularLimit.edit || userPermission.shadowLimit.edit) &&\n      !limit?.pending &&\n      !isLimitBoundsEmpty(limit)\n    \">\n    <bb-icon-ui name=\"create\" size=\"sm\" color=\"primary\"></bb-icon-ui>\n  </button>\n\n  <button\n    data-role=\"privilege-indicator-list-limit-create-empty\"\n    class=\"align-top bb-job-role-limit-icon\"\n    aria-label=\"Create Limit\"\n    i18n-aria-label=\"Create limit button@@privilege-indicator-list.limit.aria.label.create-empty-limit\"\n    color=\"link-text-light\"\n    bbButton\n    container=\"body\"\n    bbTooltip=\"Click to set limit\"\n    i18n-bbTooltip=\"Set limit button tooltip@@privilege-indicator-list.limit.create-empty-limit.tooltip\"\n    triggers=\"hover\"\n    (bbKeyboardClick)=\"emitLimit({ type: 'edit', limit: limit, privilegesType: type, id: id })\"\n    *ngIf=\"\n      limit?.created &&\n      (userPermission.regularLimit.edit || userPermission.shadowLimit.edit) &&\n      !limit?.pending &&\n      isLimitBoundsEmpty(limit)\n    \">\n    <bb-icon-ui name=\"control-point\" size=\"sm\" color=\"primary\"></bb-icon-ui>\n  </button>\n\n  <button\n    data-role=\"privilege-indicator-list-limit-pending\"\n    aria-label=\"Pending Limit\"\n    i18n-aria-label=\"Pending limit button@@privilege-indicator-list.limit.aria.label.pending-limit\"\n    class=\"align-top bb-job-role-limit-icon\"\n    color=\"link-text-light\"\n    bbButton\n    container=\"body\"\n    bbTooltip=\"Limit awaiting approval\"\n    i18n-bbTooltip=\"Pending view limit button tooltip@@privilege-indicator-list.limit.pending-limit.tooltip\"\n    triggers=\"hover\"\n    (bbKeyboardClick)=\"emitLimit({ type: 'view', limit: limit, privilegesType: type, id: id })\"\n    *ngIf=\"limit?.pending\">\n    <bb-icon-ui name=\"access-time\" size=\"sm\" color=\"primary\"></bb-icon-ui>\n  </button>\n\n  <button\n    data-role=\"privilege-indicator-list-limit-view\"\n    aria-label=\"View Limit\"\n    i18n-aria-label=\"View limit button@@privilege-indicator-list.limit.aria.label.view-limit\"\n    *ngIf=\"\n      limit?.created &&\n      !userPermission.regularLimit.edit &&\n      !userPermission.shadowLimit.edit &&\n      !limit?.pending &&\n      (userPermission.regularLimit.view || userPermission.shadowLimit.view)\n    \"\n    class=\"align-top bb-job-role-limit-icon\"\n    (bbKeyboardClick)=\"emitLimit({ type: 'view', limit: limit, privilegesType: type, id: id })\"\n    color=\"link-text-light\"\n    bbTooltip=\"Click to view limit\"\n    i18n-bbTooltip=\"View limit button tooltip@@privilege-indicator-list.limit.view-limit.tooltip\"\n    triggers=\"hover\"\n    container=\"body\"\n    bbButton>\n    <bb-icon-ui name=\"remove-red-eye\" size=\"sm\" color=\"primary\"></bb-icon-ui>\n  </button>\n</ng-template>\n"]}