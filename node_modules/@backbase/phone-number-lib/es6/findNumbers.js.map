{"version":3,"sources":["../source/findNumbers.js"],"names":["sort_out_arguments","PhoneNumberMatcher","findNumbers","arg_1","arg_2","arg_3","arg_4","text","options","metadata","matcher","results","hasNext","push","next"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,oBAAnC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,KAAnC,EAA0CC,KAA1C,EACf;AAAA,2BACqCN,mBAAmBG,KAAnB,EAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,KAAxC,CADrC;AAAA,KACSC,IADT,uBACSA,IADT;AAAA,KACeC,OADf,uBACeA,OADf;AAAA,KACwBC,QADxB,uBACwBA,QADxB;;AAGC,KAAMC,UAAU,IAAIT,kBAAJ,CAAuBM,IAAvB,EAA6BC,OAA7B,EAAsCC,QAAtC,CAAhB;;AAEA,KAAME,UAAU,EAAhB;AACA,QAAOD,QAAQE,OAAR,EAAP,EAA0B;AACzBD,UAAQE,IAAR,CAAaH,QAAQI,IAAR,EAAb;AACA;AACD,QAAOH,OAAP;AACA","file":"findNumbers.js","sourcesContent":["import { sort_out_arguments } from './findPhoneNumbers'\nimport PhoneNumberMatcher from './PhoneNumberMatcher'\n\nexport default function findNumbers(arg_1, arg_2, arg_3, arg_4)\n{\n\tconst { text, options, metadata } = sort_out_arguments(arg_1, arg_2, arg_3, arg_4)\n\n\tconst matcher = new PhoneNumberMatcher(text, options, metadata)\n\n\tconst results = []\n\twhile (matcher.hasNext()) {\n\t\tresults.push(matcher.next())\n\t}\n\treturn results\n}"]}