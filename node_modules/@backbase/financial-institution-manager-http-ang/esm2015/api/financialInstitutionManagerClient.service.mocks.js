import { createMocks } from '@backbase/foundation-ang/data-http';
export const FinancialInstitutionManagerClientHttpServiceGetFinancialInstitutionsMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/financial-institutions",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "financialInstitutions": [{
                            "id": 1,
                            "externalId": "11da7d70-ed15-11ea-adc1-0242ac120002",
                            "name": "ABN Amro",
                            "logo": "https://landportal.org/sites/landportal.org/files/styles/220heightmax/public/abn-amro-logo-vertikaal.png",
                            "credentials": [{
                                    "name": "username",
                                    "label": "Username",
                                    "type": "TEXT"
                                }, {
                                    "name": "password",
                                    "label": "Password",
                                    "type": "PASSWORD"
                                }]
                        }, {
                            "id": 2,
                            "externalId": "b149f34b-de04-4d79-83f6-9605d698a7b5",
                            "name": "ING",
                            "logo": "https://www.ing.com/static/ingdotcompresentation/static/images/ING_lion_RGB_200x200.png",
                            "credentials": [{
                                    "name": "username",
                                    "label": "Username",
                                    "type": "TEXT"
                                }, {
                                    "name": "password",
                                    "label": "Password",
                                    "type": "PASSWORD"
                                }]
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const FinancialInstitutionManagerClientHttpServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v1/financial-institutions",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "financialInstitutions": [{
                            "id": 1,
                            "externalId": "11da7d70-ed15-11ea-adc1-0242ac120002",
                            "name": "ABN Amro",
                            "logo": "https://landportal.org/sites/landportal.org/files/styles/220heightmax/public/abn-amro-logo-vertikaal.png",
                            "credentials": [{
                                    "name": "username",
                                    "label": "Username",
                                    "type": "TEXT"
                                }, {
                                    "name": "password",
                                    "label": "Password",
                                    "type": "PASSWORD"
                                }]
                        }, {
                            "id": 2,
                            "externalId": "b149f34b-de04-4d79-83f6-9605d698a7b5",
                            "name": "ING",
                            "logo": "https://www.ing.com/static/ingdotcompresentation/static/images/ING_lion_RGB_200x200.png",
                            "credentials": [{
                                    "name": "username",
                                    "label": "Username",
                                    "type": "TEXT"
                                }, {
                                    "name": "password",
                                    "label": "Password",
                                    "type": "PASSWORD"
                                }]
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,