import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { SearchResponse } from '../model/models';
import { FinancialInstitutionManagerConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface GetFinancialInstitutionsRequestParams {
    ["ids"]?: Array<number>;
    ["from"]?: number;
    ["cursor"]?: string;
    ["size"]?: number;
}
export declare class FinancialInstitutionManagerClientHttpService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: FinancialInstitutionManagerConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: FinancialInstitutionManagerConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    getFinancialInstitutions(requestParameters: GetFinancialInstitutionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<SearchResponse>;
    getFinancialInstitutions(requestParameters: GetFinancialInstitutionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<SearchResponse>>;
    getFinancialInstitutions(requestParameters: GetFinancialInstitutionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<SearchResponse>>;
    getFinancialInstitutionsUrl(requestParameters: GetFinancialInstitutionsRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<FinancialInstitutionManagerClientHttpService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<FinancialInstitutionManagerClientHttpService>;
}
