{"version":3,"file":"transactions-controls.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-controls/transactions-controls.component.ts","../../../../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-controls/transactions-controls.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAU,MAAM,EAAE,MAAM,eAAe,CAAC;AACnH,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAC3D,OAAO,EAAE,wBAAwB,EAAE,MAAM,mCAAmC,CAAC;;;;;;;;;AAO7E,MAAM,OAAO,6BAA8B,SAAQ,wBAAwB;IAL3E;;QAME;;WAEG;QACgB,UAAK,GAAG,IAAI,YAAY,EAAE,CAAC;QAE9C;;WAEG;QACM,sBAAiB,GAAG,KAAK,CAAC;QAEnC;;WAEG;QACM,YAAO,GAAG,IAAI,CAAC;QAExB;;WAEG;QACH,kBAAa,GAAG,CAAC,CAAC;KAenB;IAbC;;OAEG;IACH,OAAO;QACL,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;IAED;;OAEG;IACH,aAAa,CAAC,aAAqB;QACjC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACrC,CAAC;;2HAjCU,6BAA6B;+GAA7B,6BAA6B,wKCT1C,umJAqHA,srCDrEa,6CAA6C,yoBAQ7C,oDAAoD;4FA/CpD,6BAA6B;kBALzC,SAAS;mBAAC;oBACT,QAAQ,EAAE,0BAA0B;oBACpC,WAAW,EAAE,wCAAwC;oBACrD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;8BAKoB,KAAK;sBAAvB,MAAM;gBAKE,iBAAiB;sBAAzB,KAAK;;AA8BR,MAAM,OAAO,6CAA8C,SAAQ,UAGlE;;2IAHY,6CAA6C;+HAA7C,6CAA6C;4FAA7C,6CAA6C;kBAHzD,SAAS;mBAAC;oBACT,QAAQ,EAAE,0CAA0C;iBACrD;;AASD,MAAM,OAAO,oDAAqD,SAAQ,UAGzE;;kJAHY,oDAAoD;sIAApD,oDAAoD;4FAApD,oDAAoD;kBAHhE,SAAS;mBAAC;oBACT,QAAQ,EAAE,iDAAiD;iBAC5D","sourcesContent":["import { ChangeDetectionStrategy, Component, Directive, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { BaseTransactionsControls } from '@backbase/transactions-common-ang';\n\n@Component({\n  selector: 'bb-transactions-controls',\n  templateUrl: './transactions-controls.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionsControlsComponent extends BaseTransactionsControls implements OnInit {\n  /**\n   * EventEmitter for triggering a search action.\n   */\n  @Output() readonly print = new EventEmitter();\n\n  /**\n   * Configuration parameter to show/hide billing status filter\n   */\n  @Input() hideBillingStatus = false;\n\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n\n  /**\n   * Amount of active filters\n   */\n  activeFilters = 0;\n\n  /**\n   * Print event callback\n   */\n  onPrint() {\n    this.print.emit();\n  }\n\n  /**\n   *  Filter Count event callback\n   */\n  onFilterCount(activeFilters: number) {\n    this.activeFilters = activeFilters;\n  }\n}\n\n@Directive({\n  selector: '[bbTransactionsListControlsCustomizable]',\n})\nexport class TransactionsListControlsCustomizableDirective extends BbTemplate<\n  TransactionsControlsComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbTransactionsListControlsButtonsCustomizable]',\n})\nexport class TransactionsListControlsButtonsCustomizableDirective extends BbTemplate<\n  TransactionsControlsComponent,\n  undefined\n> {}\n","<ng-container bbTransactionsListControlsCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n<ng-template bbTransactionsListControlsCustomizable let-hostRef>\n  <div class=\"card-header\" [ngClass]=\"{ 'bb-block--lg': hostRef.isFilterOpen }\">\n    <div class=\"bb-stack bb-stack--wrap\">\n      <!-- Search button -->\n      <div class=\"bb-transaction-list-controls__search-box bb-stack__item\">\n        <div class=\"input-group\">\n          <label class=\"sr-only\" bbDynamicId #searchLabel i18n=\"search transaction filter@@transactions.search.label\">\n            Search transaction filter\n          </label>\n          <bb-search-box-ui\n            [showSearch]=\"true\"\n            [showClear]=\"true\"\n            placeholder=\"Search\"\n            [aria-labelledby]=\"searchLabel?.id\"\n            searchLabel=\"search\"\n            i18n-searchLabel=\"search label when button in focus@@transactions.searchLabel.search.box\"\n            i18n-placeholder=\"search transactions placeholder@@transactions.ariaLabel.search.placeholder\"\n            (submit)=\"hostRef.onSearch($event)\"\n            (clear)=\"hostRef.onSearch('')\"\n          >\n          </bb-search-box-ui>\n        </div>\n      </div>\n      <!-- Filter button -->\n      <div\n        class=\"bb-stack__item bb-stack__item--fill--md-up align-self-start bb-transaction-list-controls__filter-buttons\"\n      >\n        <div class=\"bb-stack\">\n          <div class=\"bb-stack__item bb-stack__item--fill--md-up\">\n            <button\n              bbButton\n              *ngIf=\"hostRef.activeFilters\"\n              [attr.aria-expanded]=\"!!hostRef.isFilterOpen\"\n              [color]=\"hostRef.isFilterApplied || hostRef.isFilterOpen ? 'primary' : 'secondary'\"\n              data-role=\"filter\"\n              (click)=\"hostRef.toggleFilter()\"\n            >\n              <bb-icon-ui name=\"filter\"></bb-icon-ui>\n              <span\n                class=\"bb-transaction-list-controls__long-button\"\n                i18n=\"Filter toggle button@@transactions.filtersApplied.button\"\n                >Filters applied</span\n              >\n              <span\n                class=\"bb-transaction-list-controls__short-button\"\n                i18n=\"Filter toggle button@@transactions.filters.button\"\n                >Filters</span\n              >\n              <span>&nbsp;({{ hostRef.activeFilters }})</span>\n            </button>\n\n            <button\n              bbButton\n              *ngIf=\"!hostRef.activeFilters\"\n              [attr.aria-expanded]=\"!!hostRef.isFilterOpen\"\n              [color]=\"hostRef.isFilterApplied || hostRef.isFilterOpen ? 'primary' : 'secondary'\"\n              data-role=\"filter\"\n              (click)=\"hostRef.toggleFilter()\"\n            >\n              <bb-icon-ui name=\"filter\"></bb-icon-ui>\n              <ng-container i18n=\"Filter toggle button@@transactions.filter.button\">Filter</ng-container>\n            </button>\n          </div>\n          <ng-container bbTransactionsListControlsButtonsCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n  <bb-transactions-filter\n    (filter)=\"hostRef.onFilter($event)\"\n    (filterCount)=\"hostRef.onFilterCount($event)\"\n    (closeFilter)=\"hostRef.onClose()\"\n    [hidden]=\"!hostRef.isFilterOpen\"\n    [hideBillingStatus]=\"hostRef.hideBillingStatus\"\n    [availableFilters]=\"hostRef.availableFilters\"\n  ></bb-transactions-filter>\n</ng-template>\n\n<ng-template bbTransactionsListControlsButtonsCustomizable let-hostRef>\n  <!-- Print button -->\n  <button\n    bbButton\n    aria-label=\"Print\"\n    i18n-aria-label=\"Print button@@transactions.print.button\"\n    class=\"bb-stack__item\"\n    color=\"secondary\"\n    [circle]=\"true\"\n    (click)=\"hostRef.onPrint()\"\n  >\n    <bb-icon-ui name=\"print\"></bb-icon-ui>\n  </button>\n  <!-- Export button -->\n  <bb-dropdown-menu-ui\n    *ngIf=\"hostRef.exportConfig?.length\"\n    container=\"body\"\n    icon=\"expand-more\"\n    btnColor=\"secondary\"\n    ariaLabel=\"available export types\"\n    i18n-ariaLabel=\"Currently available export types dropdown@@transactions.list.exportList.ariaLabel\"\n    [btnCircle]=\"true\"\n    icon=\"get-app\"\n    iconSize=\"md\"\n  >\n    <ng-template bbDropdownMenuItem>\n      <a\n        *ngFor=\"let exportType of hostRef.exportConfig\"\n        role=\"menuitem\"\n        class=\"dropdown-item\"\n        (click)=\"hostRef.onExport(exportType)\"\n        href=\"javaScript:void(0);\"\n      >\n        <span>{{ exportType.name }}</span>\n      </a>\n    </ng-template>\n  </bb-dropdown-menu-ui>\n</ng-template>\n"]}