{"version":3,"file":"transactions-filter.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-controls/transactions-filter.component.ts","../../../../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-controls/transactions-filter.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Observable, of, Subscription } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n  AvailableFilterEnum,\n  AvailableFilters,\n  creditDebitIndicatorEnumValues,\n  defaultBillingStatusEnumValues,\n  defaultTransactionTypeEnumValues,\n  EnumValuesService,\n  TransactionsEnumValue,\n  TransactionsFilterOptions,\n} from '@backbase/transactions-common-ang';\n\nconst defaultAllOption = { name: 'All' };\n\n@Component({\n  selector: 'bb-transactions-filter',\n  templateUrl: './transactions-filter.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionsFilterComponent implements OnInit, OnDestroy {\n  /**\n   * EventEmitter for triggering a filter action.\n   */\n  @Output() readonly filter = new EventEmitter<TransactionsFilterOptions>();\n  /**\n   * EventEmitter to hide the filter options\n   */\n  @Output() readonly closeFilter = new EventEmitter();\n  /**\n   * EventEmitter with the amount of active filters\n   */\n  @Output() readonly filterCount = new EventEmitter<number>();\n  /**\n   * Configuration parameter to show/hide billing status filter\n   */\n  @Input() hideBillingStatus = false;\n  /**\n   * Configuration parameter to show/hide filters\n   */\n  @Input() availableFilters: AvailableFilters = [];\n\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n\n  readonly availableFilterEnum: typeof AvailableFilterEnum = AvailableFilterEnum;\n\n  transactionsFilterForm = new FormGroup({\n    creditDebitIndicator: new FormControl(creditDebitIndicatorEnumValues[0]),\n    types: new FormControl(),\n    billingStatus: new FormControl(),\n    amount: new FormGroup({\n      from: new FormControl(undefined, Validators.min(0)),\n      to: new FormControl(undefined, Validators.min(0)),\n    }),\n    date: new FormGroup({\n      from: new FormControl(''),\n      to: new FormControl(''),\n    }),\n    categories: new FormControl(),\n    checkSerialNumber: new FormGroup({\n      from: new FormControl(undefined, Validators.min(0)),\n      to: new FormControl(undefined, Validators.min(0)),\n    }),\n  });\n\n  creditDebitIndicatorOptions: Array<TransactionsEnumValue> = creditDebitIndicatorEnumValues;\n\n  transactionTypeOptions: Observable<Array<TransactionsEnumValue>>;\n\n  billingStatusOptions: Observable<Array<TransactionsEnumValue>>;\n\n  private subscriptions = new Subscription();\n\n  ngOnInit() {\n    this.subscriptions.add(this.transactionTypeOptions.subscribe(this.setDefaultAllOption('types')));\n\n    this.subscriptions.add(this.billingStatusOptions.subscribe(this.setDefaultAllOption('billingStatus')));\n\n    this.subscriptions.add(\n      this.serialNumberFormGroup?.valueChanges.subscribe(() => {\n        this.fromSerialNumber?.setValidators(Validators.max(this.toSerialNumber?.value));\n        this.toSerialNumber?.setValidators(Validators.min(this.fromSerialNumber?.value || 0));\n        this.fromSerialNumber?.updateValueAndValidity({ emitEvent: false });\n        this.toSerialNumber?.updateValueAndValidity({ emitEvent: false });\n      }),\n    );\n\n    this.subscriptions.add(\n      this.amountFormGroup?.valueChanges.subscribe(() => {\n        this.fromAmount?.setValidators(Validators.max(this.toAmount?.value));\n        this.toAmount?.setValidators(Validators.min(this.fromAmount?.value || 0));\n        this.fromAmount?.updateValueAndValidity({ emitEvent: false });\n        this.toAmount?.updateValueAndValidity({ emitEvent: false });\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  compareByValue(optionListedValue: any, placeholderValue: any) {\n    if (!optionListedValue || !placeholderValue) {\n      return;\n    }\n\n    return optionListedValue.value === placeholderValue.value;\n  }\n\n  private readonly setDefaultAllOption = (field: string) => (data: any) => {\n    const control = this.transactionsFilterForm.get(field);\n    if (control) {\n      control.setValue(data[0]);\n    }\n  };\n\n  /**\n   * Emit event to apply filter.\n   *\n   * @param filterParams - Options to filter transactions list with.\n   */\n  onFilter(filterParams: TransactionsFilterOptions) {\n    this.filterCount.emit(this.activeFilterCounter);\n    this.filter.emit(filterParams);\n  }\n\n  /**\n   * Checks all the form fields and looks for differences with a default model to define if a filter was applied or not\n   */\n  private get activeFilterCounter(): number {\n    const fields = [\n      this.fromDate,\n      this.toDate,\n      this.fromAmount,\n      this.toAmount,\n      this.fromSerialNumber,\n      this.toSerialNumber,\n      this.creditDebitIndicator,\n      this.transactionType,\n      this.billingStatus,\n    ];\n    const activeFilters = fields.reduce((count, field) => (this.isFilterApplied(field) ? ++count : count), 0);\n\n    return activeFilters;\n  }\n\n  private isFilterApplied(control: AbstractControl | null | undefined) {\n    if (typeof control?.value === 'object' && control.value !== null) {\n      return JSON.stringify(control.value) !== JSON.stringify(defaultAllOption);\n    } else {\n      return control?.valid && (!!control.value || control.value === 0);\n    }\n  }\n\n  /**\n   * Clear filter form and reset values to default.\n   */\n  onClearFilter() {\n    this.transactionsFilterForm.reset({\n      creditDebitIndicator: creditDebitIndicatorEnumValues[0],\n      types: defaultAllOption,\n      billingStatus: defaultAllOption,\n      date: {\n        from: '',\n        to: '',\n      },\n    });\n\n    this.transactionsFilterForm.markAsPristine();\n    this.onFilter({});\n  }\n\n  /**\n   * Emit event to close this filter form.\n   */\n  onCloseFilter() {\n    this.closeFilter.emit();\n  }\n\n  private get dateFormGroup() {\n    return this.transactionsFilterForm.get('date');\n  }\n\n  get fromDate() {\n    return this.dateFormGroup?.get('from');\n  }\n\n  get toDate() {\n    return this.dateFormGroup?.get('to');\n  }\n\n  private get amountFormGroup() {\n    return this.transactionsFilterForm.get('amount');\n  }\n\n  private get fromAmount() {\n    return this.amountFormGroup?.get('from');\n  }\n\n  private get toAmount() {\n    return this.amountFormGroup?.get('to');\n  }\n\n  private get serialNumberFormGroup() {\n    return this.transactionsFilterForm.get('checkSerialNumber');\n  }\n\n  private get fromSerialNumber() {\n    return this.serialNumberFormGroup?.get('from');\n  }\n\n  private get toSerialNumber() {\n    return this.serialNumberFormGroup?.get('to');\n  }\n\n  private get creditDebitIndicator() {\n    return this.transactionsFilterForm.get('creditDebitIndicator');\n  }\n\n  private get transactionType() {\n    return this.transactionsFilterForm.get('types');\n  }\n\n  private get billingStatus() {\n    return this.transactionsFilterForm.get('billingStatus');\n  }\n\n  formatDateToString(dateArg?: string | null | undefined) {\n    if (!!dateArg && new Date(dateArg).getTime()) {\n      const argDate = new Date(dateArg);\n      const formatedArgDate = new Date(argDate.getFullYear(), argDate.getMonth(), argDate.getDate());\n\n      return formatedArgDate.toISOString();\n    }\n\n    return;\n  }\n\n  isFieldValid(fieldGroup: string, fieldName: string): boolean {\n    const fieldControl = this.transactionsFilterForm.get(fieldGroup)?.get(fieldName);\n\n    return !!fieldControl?.valid || !!fieldControl?.untouched;\n  }\n\n  constructor(private readonly enumValuesService: EnumValuesService) {\n    const insertDefaultValue = (data: Array<TransactionsEnumValue>) => [defaultAllOption, ...data];\n\n    this.transactionTypeOptions = this.enumValuesService.getEnumValues('type').pipe(\n      map(insertDefaultValue),\n      catchError(() => of(defaultTransactionTypeEnumValues)),\n    );\n\n    this.billingStatusOptions = this.enumValuesService.getEnumValues('billingStatus').pipe(\n      map(insertDefaultValue),\n      catchError(() => of(defaultBillingStatusEnumValues)),\n    );\n  }\n}\n\n@Directive({\n  selector: '[bbTransactionsListFilterCustomizable]',\n})\nexport class TransactionsListFilterCustomizableDirective extends BbTemplate<TransactionsFilterComponent, undefined> {}\n","<ng-container bbTransactionsListFilterCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbTransactionsListFilterCustomizable let-hostRef>\n  <div class=\"bb-transactions-list-filter\">\n    <form\n      class=\"card-body\"\n      [formGroup]=\"hostRef.transactionsFilterForm\"\n      (ngSubmit)=\"hostRef.onFilter(hostRef.transactionsFilterForm.value)\"\n      novalidate\n      autocomplete=\"off\"\n    >\n      <div class=\"bb-block bb-block--sm\">\n        <div class=\"row\">\n          <!-- Date range -->\n          <div class=\"col-lg-8\" *ngIf=\"hostRef.availableFilters.includes(availableFilterEnum.Date)\">\n            <div class=\"row\" formGroupName=\"date\">\n              <div class=\"col-12 col-sm-6\">\n                <div class=\"form-group\">\n                  <bb-input-datepicker-ui\n                    name=\"dateRange\"\n                    data-role=\"start-date\"\n                    label=\"Start date\"\n                    i18n-label=\"Transaction filter for the start Date Range@@transactions.filter.form.startDate.label\"\n                    formControlName=\"from\"\n                    [maxDate]=\"hostRef.formatDateToString(hostRef.toDate?.value)\"\n                  ></bb-input-datepicker-ui>\n                </div>\n              </div>\n\n              <div class=\"col-12 col-sm-6\">\n                <div class=\"form-group\">\n                  <bb-input-datepicker-ui\n                    name=\"dateRange\"\n                    data-role=\"end-date\"\n                    label=\"End date\"\n                    i18n-label=\"Transaction filter for the end Date Range@@transactions.filter.form.endDate.label\"\n                    formControlName=\"to\"\n                    [minDate]=\"hostRef.formatDateToString(hostRef.fromDate?.value)\"\n                  ></bb-input-datepicker-ui>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- Credit/debit indicator -->\n          <div class=\"col-lg-4\" *ngIf=\"hostRef.availableFilters.includes(availableFilterEnum.CreditDebitIndicator)\">\n            <div class=\"form-group\">\n              <bb-dropdown-single-select-ui\n                label=\"Credit or debit\"\n                data-role=\"credit-debit-indicator-label\"\n                i18n-label=\"\n                  Transactions filter for credit or debit@@transactions.filter.form.creditDebitIndicator.label\"\n                [options]=\"hostRef.creditDebitIndicatorOptions\"\n                displayAttributePath=\"name\"\n                formControlName=\"creditDebitIndicator\"\n                [compareWithFn]=\"hostRef.compareByValue\"\n              ></bb-dropdown-single-select-ui>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <!-- Amount range -->\n          <div\n            class=\"col-lg-6 form-group\"\n            *ngIf=\"hostRef.availableFilters.includes(availableFilterEnum.Amount)\"\n            bbDynamicId\n            #amountGroup\n          >\n            <div class=\"bb-stack\" formGroupName=\"amount\">\n              <div class=\"bb-stack__item bb-transactions-list-filter__field\">\n                <label\n                  bbDynamicId\n                  #fromAmountLabel\n                  i18n=\"Transactions filter Minimun amount@@transactions.filter.minAmount.label\"\n                >\n                  <abbr title=\"Minimum\">Min.</abbr> amount\n                </label>\n                <bb-input-number-ui\n                  formControlName=\"from\"\n                  data-role=\"amount-from\"\n                  [aria-labelledby]=\"fromAmountLabel?.id\"\n                  placeholder=\"From\"\n                  i18n-placeholder=\"\n                    Initial filtering value|Starting value|Lower amount@@transactions.filter.form.amountFrom.placeholder\"\n                  aria-describedby=\"{{ amountGroup?.id }}-error\"\n                  [min]=\"0\"\n                ></bb-input-number-ui>\n              </div>\n\n              <div class=\"bb-stack__item bb-transactions-list-filter__field\">\n                <label\n                  bbDynamicId\n                  #toAmountLabel\n                  i18n=\"Transactions filter Maximun amount@@transactions.filter.maxAmount.label\"\n                >\n                  <abbr title=\"Maximum\">Max.</abbr> amount\n                </label>\n                <bb-input-number-ui\n                  formControlName=\"to\"\n                  data-role=\"amount-to\"\n                  placeholder=\"To\"\n                  i18n-placeholder=\"\n                    Ending filtering value|End value|Higher amount@@transactions.filter.form.amountTo.placeholder\"\n                  [aria-labelledby]=\"toAmountLabel?.id\"\n                  aria-describedby=\"{{ amountGroup?.id }}-error\"\n                  [min]=\"0\"\n                ></bb-input-number-ui>\n              </div>\n            </div>\n            <bb-input-validation-message-ui\n              [showErrors]=\"!hostRef.isFieldValid('amount', 'from') || !hostRef.isFieldValid('amount', 'to')\"\n              messageId=\"{{ amountGroup?.id }}-error\"\n            >\n              <span\n                i18n=\"\n                  Max. amount cannot be smaller than the min. amount|Error Message when max amount is smaller than min\n                  amount@@transactions.filter.form.error.amountRange\"\n              >\n                Maximum amount cannot be smaller than the minimum amount\n              </span>\n            </bb-input-validation-message-ui>\n          </div>\n          <!-- Transaction Type -->\n          <div class=\"col-lg-6\" *ngIf=\"hostRef.availableFilters.includes(availableFilterEnum.Types)\">\n            <div class=\"form-group\">\n              <bb-dropdown-single-select-ui\n                label=\"Transaction type\"\n                data-role=\"transaction-type-label\"\n                i18n-label=\"\n                  Transaction filter for the types of transaction@@transactions.filter.form.transactionType.label\"\n                [options]=\"(hostRef.transactionTypeOptions | async)!\"\n                displayAttributePath=\"name\"\n                formControlName=\"types\"\n                [compareWithFn]=\"hostRef.compareByValue\"\n              ></bb-dropdown-single-select-ui>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <!-- Billing status -->\n          <div\n            class=\"col-lg-6\"\n            *ngIf=\"!hideBillingStatus && hostRef.availableFilters.includes(availableFilterEnum.BillingStatus)\"\n          >\n            <div class=\"form-group\">\n              <bb-dropdown-single-select-ui\n                label=\"Billing status\"\n                data-role=\"billing-status-label\"\n                i18n-label=\"Transactions filter for Billing Status@@transactions.filter.form.billingStatus.label\"\n                [options]=\"(hostRef.billingStatusOptions | async)!\"\n                displayAttributePath=\"name\"\n                formControlName=\"billingStatus\"\n                [compareWithFn]=\"hostRef.compareByValue\"\n              ></bb-dropdown-single-select-ui>\n            </div>\n          </div>\n          <!-- Check range -->\n          <div\n            class=\"col-lg-6 form-group\"\n            *ngIf=\"hostRef.availableFilters.includes(availableFilterEnum.CheckSerialNumber)\"\n          >\n            <div class=\"bb-stack\" formGroupName=\"checkSerialNumber\" bbDynamicId #rangeGroup>\n              <div class=\"bb-stack__item bb-transactions-list-filter__field\">\n                <label\n                  bbDynamicId\n                  #fromCheckLabel\n                  i18n=\"Transactions filter First check number range@@transactions.filter.firstCheckSerialNumber.label\"\n                >\n                  First check <abbr title=\"Number\">Nº</abbr>\n                </label>\n                <bb-input-number-ui\n                  [aria-labelledby]=\"fromCheckLabel?.id\"\n                  formControlName=\"from\"\n                  data-role=\"check-from\"\n                  placeholder=\"From\"\n                  i18n-placeholder=\"'From' number range input@@transactions.filter.form.rangeFrom.placeholder\"\n                  aria-describedby=\"{{ rangeGroup?.id }}-error\"\n                  [min]=\"0\"\n                ></bb-input-number-ui>\n              </div>\n              <div class=\"bb-stack__item bb-transactions-list-filter__field\">\n                <label\n                  bbDynamicId\n                  #toCheckLabel\n                  i18n=\"Transactions filter Last check number range@@transactions.filter.lastCheckSerialNumber.label\"\n                >\n                  Last check <abbr title=\"Number\">Nº</abbr>\n                </label>\n                <bb-input-number-ui\n                  [aria-labelledby]=\"toCheckLabel?.id\"\n                  formControlName=\"to\"\n                  data-role=\"check-to\"\n                  placeholder=\"To\"\n                  i18n-placeholder=\"'To' number range input@@transactions.filter.form.rangeTo.placeholder\"\n                  aria-describedby=\"{{ rangeGroup?.id }}-error\"\n                  [min]=\"0\"\n                ></bb-input-number-ui>\n              </div>\n            </div>\n            <bb-input-validation-message-ui\n              [showErrors]=\"\n                !hostRef.isFieldValid('checkSerialNumber', 'from') || !hostRef.isFieldValid('checkSerialNumber', 'to')\n              \"\n              messageId=\"{{ rangeGroup?.id }}-error\"\n            >\n              <span\n                i18n=\"\n                  Last check nº cannot be smaller than first check nº|Error Message when last check nº is smaller than\n                  first check nº@@transactions.filter.form.error.checkSerialRange\"\n              >\n                Last check number cannot be smaller than first check number\n              </span>\n            </bb-input-validation-message-ui>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <!-- Apply -->\n        <button\n          bbButton\n          type=\"submit\"\n          color=\"primary\"\n          class=\"bb-button-bar__button\"\n          data-role=\"apply\"\n          i18n-title=\"Apply button|Apply selected filters@@transactions.filter.form.button.apply\"\n          title=\"Apply\"\n          i18n=\"Apply button|Apply selected filters@@transactions.filter.form.button.apply\"\n        >\n          Apply\n        </button>\n\n        <!-- Close -->\n        <button\n          bbButton\n          type=\"button\"\n          color=\"secondary\"\n          class=\"bb-button-bar__button\"\n          data-role=\"cancel\"\n          i18n-title=\"Close button|Close filter menu@@transactions.filter.form.button.close\"\n          title=\"Close\"\n          i18n=\"Close button|Close filter menu@@transactions.filter.form.button.close\"\n          (click)=\"hostRef.onCloseFilter()\"\n        >\n          Close\n        </button>\n\n        <!-- Clear filters -->\n        <button\n          bbButton\n          type=\"button\"\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          data-role=\"clear-all\"\n          i18n-title=\"Clear Filters button|Clean filters@@transactions.filter.form.button.clearAll\"\n          title=\"Clear filters\"\n          (click)=\"hostRef.onClearFilter()\"\n          *ngIf=\"hostRef.transactionsFilterForm.dirty\"\n          i18n=\"Clear filters button|Clean filters@@transactions.filter.form.button.clearAll\"\n        >\n          Clear filters\n        </button>\n      </div>\n    </form>\n  </div>\n</ng-template>\n"]}