{"version":3,"file":"transaction-notes.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transaction/transaction-notes.component.ts","../../../../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transaction/transaction-notes.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAU,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,uBAAuB,EAAE,MAAM,eAAe,CAAC;AACxG,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;;;;;;;;;AAQxD,MAAM,OAAO,yBAAyB;IALtC;QAUE;;WAEG;QACM,mBAAc,GAAG,KAAK,CAAC;QAChC;;WAEG;QACM,kBAAa,GAAG,KAAK,CAAC;QAC/B;;WAEG;QACgB,yBAAoB,GAAG,IAAI,YAAY,EAAW,CAAC;QACtE;;WAEG;QACgB,gBAAW,GAAG,IAAI,YAAY,EAAU,CAAC;QAC5D;;WAEG;QACgB,eAAU,GAAG,IAAI,YAAY,EAAU,CAAC;QAE3D,yBAAoB,GAAG,IAAI,SAAS,CAAC;YACnC,KAAK,EAAE,IAAI,WAAW,EAAE;SACzB,CAAC,CAAC;KA6BJ;IA3BC,UAAU,CAAC,OAAiB;;QAC1B,MAAM,cAAc,GAAG,OAAO,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;QAErF,IAAI,cAAc,EAAE;YAClB,MAAA,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,OAAO,CAAC,0CAAE,QAAQ,CAAC,MAAA,IAAI,CAAC,WAAW,0CAAE,KAAK,CAAC,CAAC;SAC3E;QAED,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACjD,CAAC;IAED,MAAM,CAAC,WAAgB;QACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IAED,iBAAiB,CAAC,WAAgB;QAChC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAED,QAAQ;QACN,IAAI,OAAO,IAAI,CAAC,WAAW,KAAK,WAAW,EAAE;YAC3C,MAAM,IAAI,KAAK,CAAC,uCAAuC,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,CAAC;SAClF;QAED,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC;YACjC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE;SACpC,CAAC,CAAC;IACL,CAAC;;uHAxDU,yBAAyB;2GAAzB,yBAAyB,uRCTtC,yoGA8FA;4FDrFa,yBAAyB;kBALrC,SAAS;mBAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,WAAW,EAAE,oCAAoC;oBACjD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;8BAKU,WAAW;sBAAnB,KAAK;gBAIG,cAAc;sBAAtB,KAAK;gBAIG,aAAa;sBAArB,KAAK;gBAIa,oBAAoB;sBAAtC,MAAM;gBAIY,WAAW;sBAA7B,MAAM;gBAIY,UAAU;sBAA5B,MAAM","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Transaction } from '@backbase/transactions-common-ang';\n\n@Component({\n  selector: 'bb-transaction-notes',\n  templateUrl: './transaction-notes.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionNotesComponent implements OnInit {\n  /**\n   * The transaction this component shows the notes of.\n   */\n  @Input() transaction: Transaction | undefined;\n  /**\n   * Whether the notes editing form is shown or not.\n   */\n  @Input() isEditingNotes = false;\n  /**\n   * Whether the notes editing form is saving or not.\n   */\n  @Input() isSavingNotes = false;\n  /**\n   * EventEmitter for triggering an isEditingNotesChange event.\n   */\n  @Output() readonly isEditingNotesChange = new EventEmitter<boolean>();\n  /**\n   * EventEmitter for triggering a change notes event.\n   */\n  @Output() readonly changeNotes = new EventEmitter<string>();\n  /**\n   * EventEmitter for triggering a deleteNote event.\n   */\n  @Output() readonly deleteNote = new EventEmitter<string>();\n\n  transactionNotesForm = new FormGroup({\n    notes: new FormControl(),\n  });\n\n  toggleEdit(display?: boolean) {\n    const isEditingNotes = typeof display === 'boolean' ? display : !this.isEditingNotes;\n\n    if (isEditingNotes) {\n      this.transactionNotesForm.get('notes')?.setValue(this.transaction?.notes);\n    }\n\n    this.isEditingNotesChange.emit(isEditingNotes);\n  }\n\n  onSave(notesParams: any) {\n    this.changeNotes.emit(notesParams.notes);\n  }\n\n  triggerDeleteNote(notesParams: any) {\n    this.deleteNote.emit(notesParams.notes);\n  }\n\n  ngOnInit() {\n    if (typeof this.transaction === 'undefined') {\n      throw new Error(`\"transaction\" input is required in \"${this.constructor.name}\"`);\n    }\n\n    this.transactionNotesForm.setValue({\n      notes: this.transaction.notes || '',\n    });\n  }\n}\n","<div class=\"bb-stack\" [ngClass]=\"{ 'bb-block bb-block--xs': !!transaction?.notes }\">\n  <div class=\"bb-stack__item\">\n    <label\n      class=\"bb-block bb-block--sm\"\n      data-role=\"transaction-note-label\"\n      bbDynamicId\n      #noteLabel\n      i18n=\"Note of the selected transaction@@transactions.details.label.note\"\n    >\n      Note\n    </label>\n  </div>\n  <div *ngIf=\"!isEditingNotes\" class=\"bb-stack__item--push-right\">\n    <ng-container *ngIf=\"!!transaction?.notes; then editIconSet\"></ng-container>\n  </div>\n</div>\n<ng-container *ngIf=\"isEditingNotes; then editNotes; else displayNotes\"></ng-container>\n\n<ng-template #editIconSet>\n  <div class=\"bb-stack bb-stack--density-sm bb-transaction-notes-editIconSet\">\n    <button\n      bbButton\n      class=\"bb-transaction-notes-editIconSet-button\"\n      data-role=\"transaction-note-edit-button\"\n      color=\"link-dark\"\n      buttonSize=\"sm\"\n      [circle]=\"true\"\n      aria-label=\"Edit note\"\n      i18n-aria-label=\"Edit note button@@transactions.list.edit.button.ariaLabel\"\n      (click)=\"toggleEdit()\"\n    >\n      <bb-icon-ui name=\"edit\"></bb-icon-ui>\n    </button>\n    <button\n      bbButton\n      color=\"link-dark\"\n      class=\"bb-transaction-notes-editIconSet-button\"\n      data-role=\"transaction-note-delete-button\"\n      buttonSize=\"sm\"\n      [circle]=\"true\"\n      aria-label=\"Delete note\"\n      i18n-aria-label=\"Delete note button@@transactions.list.notes.delete.button.ariaLabel\"\n      (click)=\"triggerDeleteNote(transactionNotesForm.value)\"\n    >\n      <bb-icon-ui name=\"delete\"></bb-icon-ui>\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #editNotes>\n  <form [formGroup]=\"transactionNotesForm\" (ngSubmit)=\"onSave(transactionNotesForm.value)\">\n    <div class=\"form-group\">\n      <textarea\n        class=\"form-control\"\n        name=\"notes\"\n        data-role=\"transaction-note-textarea\"\n        [attr.aria-labelledby]=\"noteLabel?.id\"\n        placeholder=\"Enter note\"\n        i18n-placeholder=\"Write a note for this transaction@@transactions.notes.input.placeholder\"\n        formControlName=\"notes\"\n        maxlength=\"4000\"\n        bbFocus\n      ></textarea>\n    </div>\n    <div class=\"bb-button-bar\">\n      <bb-load-button-ui\n        color=\"primary\"\n        class=\"bb-button-bar__button\"\n        data-role=\"transaction-note-save-button\"\n        [isLoading]=\"isSavingNotes\"\n        (click)=\"!isSavingNotes && onSave(transactionNotesForm.value)\"\n        i18n=\"Save button@@transactions.list.notes.button.save\"\n      >\n        Save\n      </bb-load-button-ui>\n      <button\n        *ngIf=\"!isSavingNotes\"\n        bbButton\n        type=\"button\"\n        color=\"secondary\"\n        data-role=\"transaction-note-cancel-button\"\n        class=\"bb-button-bar__button\"\n        (click)=\"toggleEdit(false)\"\n        i18n=\"Cancel button@@transactions.notes.button.cancel\"\n      >\n        Cancel\n      </button>\n    </div>\n  </form>\n</ng-template>\n\n<ng-template #displayNotes>\n  <span data-role=\"transaction-note\">{{ transaction?.notes }}</span>\n</ng-template>\n"]}