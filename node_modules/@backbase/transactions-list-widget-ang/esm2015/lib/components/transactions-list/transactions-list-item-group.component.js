import { Component, Input, Directive, Output, EventEmitter } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
import * as i1 from "./transactions-list-item.component";
import * as i2 from "@angular/common";
export class TransactionsListItemGroupComponent {
    constructor() {
        this.detailsOpen = new EventEmitter();
        /**
         * Reference to instance of customizable component.
         */
        this.hostRef = this;
    }
    ngOnInit() {
        if (typeof this.transactions === 'undefined') {
            throw new Error(`"transactions" input is required in "${this.constructor.name}"`);
        }
    }
    get daysElapsed() {
        if (this.transactionDate === undefined) {
            return undefined;
        }
        let transactionDate = new Date(this.transactionDate);
        if (Number.isNaN(transactionDate.getTime())) {
            return undefined;
        }
        const millisecondsPerDay = 86400000;
        const today = this.roundDate(new Date());
        transactionDate = this.roundDate(transactionDate);
        return Math.floor((today.getTime() - transactionDate.getTime()) / millisecondsPerDay);
    }
    onDetailOpen(transaction) {
        this.detailsOpen.emit(transaction);
    }
    roundDate(date) {
        date.setUTCHours(0);
        date.setUTCMinutes(0);
        date.setUTCSeconds(0);
        return date;
    }
    trackByFn(_index, element) {
        return element.id;
    }
}
TransactionsListItemGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionsListItemGroupComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TransactionsListItemGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TransactionsListItemGroupComponent, selector: "bb-transactions-list-item-group", inputs: { transactionDate: "transactionDate", transactions: "transactions", showChangeCategory: "showChangeCategory", checkImagesList: "checkImagesList", transactionDetailsLoadingStatus: "transactionDetailsLoadingStatus", inquireAndDisputeTopics: "inquireAndDisputeTopics" }, outputs: { detailsOpen: "detailsOpen" }, ngImport: i0, template: "<ng-container bbTransactionsListItemGroupCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbTransactionsListItemGroupCustomizable let-hostRef>\n  <div\n    role=\"heading\"\n    aria-level=\"2\"\n    class=\"bb-transaction-group__date bb-block--md bb-subheader\"\n    i18n=\"Date of the selected transaction@@transactions.list.transactionDate\"\n    tabindex=\"0\"\n  >\n    {hostRef.daysElapsed, plural, =0 {Today} =1 {Yesterday} other\n    {{{ hostRef.transactionDate | date:'longDate' }}} }\n  </div>\n  <div>\n    <div role=\"list\">\n      <div\n        class=\"bb-block--md\"\n        *ngFor=\"let transaction of hostRef.transactions; trackBy: hostRef.trackByFn\"\n        role=\"listitem\"\n      >\n        <bb-transactions-list-item\n          [showChangeCategory]=\"hostRef.showChangeCategory\"\n          [transaction]=\"transaction\"\n          [checkImagesList]=\"hostRef.checkImagesList\"\n          [transactionDetailsLoadingStatus]=\"hostRef.transactionDetailsLoadingStatus\"\n          [inquireAndDisputeTopics]=\"hostRef.inquireAndDisputeTopics\"\n          (detailsOpen)=\"hostRef.onDetailOpen($event)\"\n        ></bb-transactions-list-item>\n      </div>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.TransactionsListItemComponent; }), selector: "bb-transactions-list-item", inputs: ["transaction", "showBillingStatus", "showChangeCategory", "checkImagesList", "transactionDetailsLoadingStatus", "inquireAndDisputeTopics"], outputs: ["detailsOpen"] }], directives: [{ type: i0.forwardRef(function () { return TransactionsListItemGroupCustomizableDirective; }), selector: "[bbTransactionsListItemGroupCustomizable]" }, { type: i0.forwardRef(function () { return i2.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "date": i0.forwardRef(function () { return i2.DatePipe; }) } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionsListItemGroupComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-transactions-list-item-group',
                    templateUrl: './transactions-list-item-group.component.html',
                }]
        }], propDecorators: { transactionDate: [{
                type: Input
            }], transactions: [{
                type: Input
            }], showChangeCategory: [{
                type: Input
            }], checkImagesList: [{
                type: Input
            }], transactionDetailsLoadingStatus: [{
                type: Input
            }], inquireAndDisputeTopics: [{
                type: Input
            }], detailsOpen: [{
                type: Output
            }] } });
export class TransactionsListItemGroupCustomizableDirective extends BbTemplate {
}
TransactionsListItemGroupCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionsListItemGroupCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
TransactionsListItemGroupCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: TransactionsListItemGroupCustomizableDirective, selector: "[bbTransactionsListItemGroupCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TransactionsListItemGroupCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbTransactionsListItemGroupCustomizable]',
                }]
        }] });
//# sourceMappingURL=transactions-list-item-group.component.js.map