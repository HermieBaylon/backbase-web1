{"version":3,"file":"transactions-list.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-list/transactions-list.component.ts","../../../../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-list/transactions-list.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { BbTemplate, FeaturesService } from '@backbase/foundation-ang/core';\nimport {\n  InquireAndDisputeTopics,\n  LoadingState,\n  PaginationType,\n  showDetailsConfigToken,\n  Transaction,\n  TransactionCheckImageResponse,\n  TransactionsDetailsLoading,\n  TransactionsGroupedByDate,\n  TransactionsList,\n} from '@backbase/transactions-common-ang';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TRANSACTIONS_DETAILS_SHARE_MODAL } from '../../constants';\n\n@Component({\n  selector: 'bb-transactions-list',\n  templateUrl: './transactions-list.component.html',\n})\nexport class TransactionsListComponent implements OnChanges, AfterViewInit, OnDestroy {\n  /**\n   * The TransactionsList this component displays the transactions of.\n   */\n  @Input() transactionsList: TransactionsList | undefined;\n  /**\n   * The current page of transactions that is being displayed.\n   */\n  @Input() currentPage: number | undefined;\n  /**\n   * The page size.\n   */\n  @Input() pageSize: number | undefined;\n  /**\n   * Whether new transactions are being loaded.  By default, this is `LoadingState.Loaded`.\n   */\n  @Input() loadingState: LoadingState = LoadingState.Loaded;\n  /**\n   * The maximum number of pages to show (only relevant when using pagination).\n   */\n  @Input() maxNavPages: number | undefined;\n  /**\n   * The pagination type (`load-more`, `pagination` or undefined).\n   */\n  @Input() paginationType: PaginationType | undefined;\n  /**\n   * Number of results found after filtering or searching.\n   */\n  @Input() numberOfResultsFound: number | undefined;\n  /**\n   * Boolean that decides if the Change Category will be displayed.\n   */\n  @Input() showChangeCategory: boolean | undefined;\n  /**\n   * Event emitter for loading the next page of transactions.\n   */\n  @Output() readonly loadMore = new EventEmitter();\n  /**\n   * Event emitter for loading a specific page of transactions.\n   */\n  @Output() readonly pageChange = new EventEmitter<number>();\n\n  @Input() checkImagesList: TransactionCheckImageResponse | undefined;\n  @Input() inquireAndDisputeTopics: InquireAndDisputeTopics | undefined;\n  @Input() transactionDetailsLoadingStatus: TransactionsDetailsLoading | undefined;\n  @Output() readonly detailsOpen = new EventEmitter<Transaction>();\n\n  constructor(\n    private readonly featureService: FeaturesService,\n    @Optional()\n    @Inject(showDetailsConfigToken)\n    public showDetailsConfig: boolean,\n  ) {\n    if (this.showDetailsConfig === null || this.showDetailsConfig === undefined) {\n      this.showDetailsConfig = true;\n    }\n  }\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n  /**\n   * Whether the transaction details are shown or not.\n   */\n  isDetailsOpen = false;\n\n  transactionsGroupedByDate: any[] | undefined;\n  transaction: Transaction | undefined;\n\n  private unsubscribeSubject$ = new Subject<void>();\n\n  /**\n   * Whether there are any loaded transactions.\n   */\n  hasItems() {\n    if (this.numberOfResultsFound !== undefined) {\n      return this.numberOfResultsFound > 0;\n    }\n\n    return this.transactionsGroupedByDate && this.transactionsGroupedByDate.length > 0;\n  }\n\n  get hasModal(): boolean {\n    return this.featureService.isEnabled(TRANSACTIONS_DETAILS_SHARE_MODAL) && this.showDetailsConfig;\n  }\n\n  /**\n   * Whether transactions are loading.\n   */\n  get isLoading() {\n    return this.loadingState !== LoadingState.Loaded;\n  }\n\n  get isLoadingMore() {\n    return this.loadingState === LoadingState.LoadingMore || this.loadingState === LoadingState.LoadingPage;\n  }\n\n  /**\n   * Whether pagination is configured to be paged.\n   */\n  get isPaginationPaged() {\n    return this.paginationType === PaginationType.PAGINATION;\n  }\n\n  /**\n   * Whether pagination is configured to be a load-more button.\n   */\n  get isPaginationLoadMore() {\n    return this.paginationType === PaginationType.LOAD_MORE;\n  }\n\n  /**\n   * Whether pagination is configured to be a infinite-scroll.\n   */\n  get isInfiniteScrollPagination() {\n    return this.paginationType === PaginationType.INFINITE_SCROLL;\n  }\n\n  /**\n   * Returns whether all transactions have been loaded or not.\n   */\n  hasLoadedAll() {\n    return this.transactionsList && TransactionsList.hasLoadedAll(this.transactionsList);\n  }\n\n  onLoadMore() {\n    this.loadMore.emit();\n  }\n\n  onPageChange(page: number) {\n    this.pageChange.emit(page);\n  }\n\n  onDetailOpen(transaction: Transaction) {\n    this.isDetailsOpen = true;\n    this.transaction = transaction;\n    this.detailsOpen.emit(transaction);\n  }\n\n  /**\n   * Hide the transaction details.\n   */\n  closeDetails() {\n    this.isDetailsOpen = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.transactionsList) {\n      this.transactionsGroupedByDate = Object.entries(TransactionsGroupedByDate.groupByDate(this.transactionsList));\n    }\n  }\n\n  trackByFn(_index: number, group: Array<any>) {\n    return group[0];\n  }\n\n  ngAfterViewInit(): void {\n    if (this.isInfiniteScrollPagination) {\n      fromEvent(window, 'scroll')\n        .pipe(takeUntil(this.unsubscribeSubject$))\n        .subscribe(() => {\n          if (!(this.hasLoadedAll() || this.isLoading)) {\n            const element = document.documentElement;\n            const loadingOffsetHeight = element.offsetHeight * 1.5;\n            if (loadingOffsetHeight + element.scrollTop >= element.scrollHeight) {\n              this.onLoadMore();\n            }\n          }\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeSubject$.next();\n    this.unsubscribeSubject$.complete();\n  }\n}\n\n@Directive({\n  selector: '[bbTransactionsListPaginationCustomizable]',\n})\nexport class TransactionsListPaginationCustomizableDirective extends BbTemplate<TransactionsListComponent, undefined> {}\n\n@Directive({\n  selector: '[bbTransactionsListListCustomizable]',\n})\nexport class TransactionsListListCustomizableDirective extends BbTemplate<TransactionsListComponent, undefined> {}\n\n@Directive({\n  selector: '[bbTransactionsListEmptyStateCustomizable]',\n})\nexport class TransactionsListEmptyStateCustomizableDirective extends BbTemplate<TransactionsListComponent, undefined> {}\n","<ng-container *ngIf=\"!hostRef.isLoading || hostRef.isLoadingMore; else loadingState\">\n  <ng-container *ngIf=\"hostRef.hasItems(); else emptyState\">\n    <ng-container\n      *ngIf=\"hostRef.isInfiniteScrollPagination; else normalList\"\n      [ngTemplateOutlet]=\"bbTransactionsListWithInfiniteScroll\"\n      [ngTemplateOutletContext]=\"{ $implicit: hostRef }\"\n    ></ng-container>\n    <ng-template #normalList>\n      <ng-container bbTransactionsListListCustomizable [bbHostRef]=\"hostRef\"> </ng-container>\n      <ng-container bbTransactionsListPaginationCustomizable [bbHostRef]=\"hostRef\"> </ng-container>\n    </ng-template>\n  </ng-container>\n</ng-container>\n\n<ng-template #emptyState>\n  <ng-container bbTransactionsListEmptyStateCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n</ng-template>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui loaderSize=\"lg\"></bb-loading-indicator-ui>\n</ng-template>\n\n<ng-template #bbTransactionsListWithInfiniteScroll let-hostRef>\n  <div class=\"bb-list bb-block--md\">\n    <div class=\"bb-list__item\" *ngFor=\"let date of hostRef.transactionsGroupedByDate; trackBy: hostRef.trackByFn\">\n      <bb-transactions-list-item-group\n        [checkImagesList]=\"hostRef.checkImagesList\"\n        [transactions]=\"date[1]\"\n        [transactionDate]=\"date[0]\"\n        [showChangeCategory]=\"hostRef.showChangeCategory\"\n        [transactionDetailsLoadingStatus]=\"hostRef.transactionDetailsLoadingStatus\"\n        [inquireAndDisputeTopics]=\"hostRef.inquireAndDisputeTopics\"\n        (detailsOpen)=\"hostRef.onDetailOpen($event)\"\n      ></bb-transactions-list-item-group>\n    </div>\n    <ng-container *ngIf=\"hostRef.isLoading\">\n      <bb-loading-indicator-ui></bb-loading-indicator-ui>\n    </ng-container>\n    <span\n      class=\"bb-d-block bb-text-align-center\"\n      tabindex=\"0\"\n      i18n=\"Displayed message when all transactions had been loaded@@transactions.list.loadedAll\"\n      *ngIf=\"hostRef.hasLoadedAll()\"\n    >\n      All transactions have been loaded.\n    </span>\n  </div>\n  <bb-transaction-details-modal\n    *ngIf=\"hostRef.transaction && hostRef.hasModal\"\n    [transaction]=\"hostRef.transaction\"\n    [showChangeCategory]=\"hostRef.showChangeCategory\"\n    [checkImagesList]=\"hostRef.checkImagesList\"\n    [transactionDetailsLoadingStatus]=\"hostRef.transactionDetailsLoadingStatus\"\n    [isDetailsOpen]=\"hostRef.isDetailsOpen\"\n    [inquireAndDisputeTopics]=\"hostRef.inquireAndDisputeTopics\"\n    (detailsOpen)=\"hostRef.onDetailOpen($event)\"\n    (close)=\"hostRef.closeDetails()\"\n  ></bb-transaction-details-modal>\n</ng-template>\n\n<ng-template bbTransactionsListListCustomizable let-hostRef>\n  <div class=\"bb-list bb-block--md\">\n    <div class=\"bb-list__item\" *ngFor=\"let date of hostRef.transactionsGroupedByDate; trackBy: hostRef.trackByFn\">\n      <bb-transactions-list-item-group\n        [checkImagesList]=\"hostRef.checkImagesList\"\n        [transactions]=\"date[1]\"\n        [transactionDate]=\"date[0]\"\n        [showChangeCategory]=\"hostRef.showChangeCategory\"\n        [transactionDetailsLoadingStatus]=\"hostRef.transactionDetailsLoadingStatus\"\n        [inquireAndDisputeTopics]=\"hostRef.inquireAndDisputeTopics\"\n        (detailsOpen)=\"hostRef.onDetailOpen($event)\"\n      ></bb-transactions-list-item-group>\n    </div>\n  </div>\n  <bb-transaction-details-modal\n    *ngIf=\"hostRef.transaction && hostRef.hasModal\"\n    [transaction]=\"hostRef.transaction\"\n    [showChangeCategory]=\"hostRef.showChangeCategory\"\n    [checkImagesList]=\"hostRef.checkImagesList\"\n    [transactionDetailsLoadingStatus]=\"hostRef.transactionDetailsLoadingStatus\"\n    [isDetailsOpen]=\"hostRef.isDetailsOpen\"\n    [inquireAndDisputeTopics]=\"hostRef.inquireAndDisputeTopics\"\n    (detailsOpen)=\"hostRef.onDetailOpen($event)\"\n    (close)=\"hostRef.closeDetails()\"\n  ></bb-transaction-details-modal>\n</ng-template>\n\n<ng-template bbTransactionsListPaginationCustomizable let-hostRef>\n  <div class=\"bb-block bb-text-align-center\">\n    <bb-pagination-ui\n      class=\"bb-pagination\"\n      [page]=\"hostRef.currentPage\"\n      [boundaryLinks]=\"true\"\n      [directionLinks]=\"true\"\n      [totalItems]=\"hostRef.transactionsList.totalCount\"\n      [itemsPerPage]=\"hostRef.pageSize\"\n      [maxNavPages]=\"hostRef.maxNavPages\"\n      (pageChange)=\"hostRef.onPageChange($event)\"\n      *ngIf=\"hostRef.isPaginationPaged\"\n    ></bb-pagination-ui>\n    <div data-role=\"load-more\" *ngIf=\"hostRef.isPaginationLoadMore\">\n      <bb-load-button-ui\n        color=\"link\"\n        [isLoading]=\"hostRef.isLoadingMore\"\n        [from]=\"hostRef.currentPage\"\n        [size]=\"hostRef.pageSize\"\n        [totalCount]=\"hostRef.transactionsList.totalCount\"\n        (paramChange)=\"hostRef.onLoadMore($event)\"\n        i18n=\"Load more button, when there are still transactions to be loaded@@transactions.list.loadMore\"\n        *ngIf=\"!hostRef.hasLoadedAll()\"\n        >Load more</bb-load-button-ui\n      >\n      <span\n        i18n=\"Displayed message when all transactions had been loaded@@transactions.list.loadedAll\"\n        *ngIf=\"hostRef.hasLoadedAll()\"\n        >All transactions have been loaded.</span\n      >\n    </div>\n  </div>\n</ng-template>\n\n<ng-template bbTransactionsListEmptyStateCustomizable let-hostRef>\n  <div class=\"card-body bb-state-container\">\n    <!-- Success-empty -->\n    <bb-empty-state-ui\n      *ngIf=\"hostRef.transactionsList?.initialRequest === true; else filterSearchEmpty\"\n      title=\"No Transactions Found\"\n      i18n-title=\"No transactions are found@@transactions.state.noTransactionsFound.title\"\n      subtitle=\"You don't have any transactions to be displayed.\"\n      i18n-subtitle=\"No transactions to be displayed@@transactions.state.noTransactionsFound.subtitle\"\n      iconSize=\"xl\"\n      iconModifier=\"swap-horiz\"\n    ></bb-empty-state-ui>\n\n    <!-- Search/Filter empty result -->\n    <ng-template #filterSearchEmpty>\n      <bb-empty-state-ui\n        title=\"No Results Found\"\n        i18n-title=\"No results are found@@transactions.state.noResultsFound.title\"\n        subtitle=\"We can’t find what you’re looking for. Please try a different criteria.\"\n        i18n-subtitle=\"\n          Filter/Search returned no results, try a different criteria@@transactions.state.noResultsFound.subtitle\"\n        iconSize=\"xl\"\n        iconModifier=\"search\"\n      ></bb-empty-state-ui>\n    </ng-template>\n  </div>\n</ng-template>\n"]}