{"version":3,"file":"backbase-transactions-list-widget-ang.js","sources":["../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/constants.ts","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-categories/transactions-categories.component.ts","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-categories/transactions-categories.component.html","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transaction/transaction-detail-category.component.ts","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transaction/transaction-detail-category.component.html","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transaction/transaction-notes.component.ts","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transaction/transaction-notes.component.html","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transaction/transaction-details.component.ts","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transaction/transaction-details.component.html","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transaction/transaction-details-modal.component.ts","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transaction/transaction-details-modal.component.html","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transaction/transaction-header.component.ts","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transaction/transaction-header.component.html","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-list/transactions-list-item.component.ts","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-list/transactions-list-item.component.html","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-list/transactions-list-item-group.component.ts","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-list/transactions-list-item-group.component.html","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-list/transactions-list.component.ts","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-list/transactions-list.component.html","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transaction/transaction-controls.component.ts","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transaction/transaction-controls.component.html","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-controls/transactions-filter.component.ts","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-controls/transactions-filter.component.html","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-controls/transactions-controls.component.ts","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-controls/transactions-controls.component.html","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-list/transactions-list-pending-transactions.component.ts","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-list/transactions-list-pending-transactions.component.html","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-container.component.ts","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-container.component.html","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-list-widget.component.ts","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/components/transactions-list-widget.component.html","../../../../../../libs/widgets/transactions/transactions-list-widget/src/lib/transactions-list-widget.module.ts","../../../../../../libs/widgets/transactions/transactions-list-widget/src/backbase-transactions-list-widget-ang.ts"],"sourcesContent":["import { AvailableFeature } from '@backbase/foundation-ang/core';\n\nexport const TRANSACTIONS_DETAILS_SHARE_MODAL: AvailableFeature = {\n  name: 'TRANSACTIONS_DETAILS_SHARE_MODAL',\n  description:\n    'Modal dialog containing transaction details is moved to the list component and reused for different transaction selections',\n};\n","import { FormBuilder } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { Component, Directive, Output, EventEmitter, Input, OnInit } from '@angular/core';\nimport {\n  CategoriesService,\n  CategoryItem,\n  TransactionUpdateService,\n  Transaction,\n} from '@backbase/transactions-common-ang';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n@Component({\n  selector: 'bb-transactions-categories',\n  templateUrl: 'transactions-categories.component.html',\n})\nexport class TransactionsCategoriesComponent implements OnInit {\n  @Input() transaction: Transaction | undefined;\n  @Output() readonly categoryChange = new EventEmitter<string>();\n\n  readonly changeTransactionsCategoryForm = this.fb.group({\n    categoryName: [],\n  });\n\n  readonly hostRef = this;\n  readonly categoriesList: Observable<CategoryItem[]> = this.categoriesService.getCategories();\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly categoriesService: CategoriesService,\n    private readonly transactionUpdateService: TransactionUpdateService,\n  ) {}\n\n  cancelSaveCategory() {\n    this.changeTransactionsCategoryForm.reset({\n      categoryName: this.transaction && this.transaction.category,\n    });\n    this.categoryChange.emit();\n  }\n\n  changeCategory() {\n    const newCategoryControl = this.changeTransactionsCategoryForm.get('categoryName');\n\n    if (this.transaction && newCategoryControl) {\n      this.transactionUpdateService.update(this.transaction, { category: newCategoryControl.value }).subscribe(\n        () => {\n          if (this.transaction) {\n            this.transaction.category = newCategoryControl.value;\n            this.categoryChange.emit('success');\n          } else {\n            this.categoryChange.emit('error');\n          }\n        },\n        () => this.categoryChange.emit('error'),\n      );\n    }\n  }\n\n  getCategoryIconClass(transactionCategory: string): string {\n    return `${transactionCategory.toLowerCase().replace(/\\W/g, '-').replace(/-{2,}/g, '-') || 'uncategorized'}`;\n  }\n\n  ngOnInit() {\n    this.changeTransactionsCategoryForm.reset({\n      categoryName: this.transaction && this.transaction.category,\n    });\n  }\n}\n\n@Directive({\n  selector: '[bbTransactionsCategoryCustomizable]',\n})\nexport class TransactionsCategoriesCustomizableDirective extends BbTemplate<\n  TransactionsCategoriesComponent,\n  undefined\n> {}\n","<ng-container bbTransactionsCategoryCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbTransactionsCategoryCustomizable let-hostRef>\n  <form [formGroup]=\"hostRef.changeTransactionsCategoryForm\" (ngSubmit)=\"hostRef.changeCategory()\">\n    <div class=\"modal-header\">\n      <div class=\"form-group col-12 col-md-9\">\n        <bb-header-ui\n          headingType=\"h3\"\n          heading=\"Change Category\"\n          i18n-heading=\"Change Category|Change Category in change transactions category form@@transactions.form.name\"\n        ></bb-header-ui>\n      </div>\n      <button\n        type=\"button\"\n        class=\"close\"\n        color=\"muted\"\n        aria-label=\"Close\"\n        i18n-aria-label=\"Close button@@transactions.form.close\"\n        (click)=\"hostRef.cancelSaveCategory()\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body modal-body-scrollable\">\n      <div class=\"bb-list\">\n        <div class=\"bb-list__item--no-separator\" *ngFor=\"let category of categoriesList | async\">\n          <label class=\"bb-stack\" [for]=\"hostRef.getCategoryIconClass(category.categoryName)\">\n            <bb-icon-ui\n              class=\"bb-stack__item\"\n              name=\"category-{{ hostRef.getCategoryIconClass(category.categoryName) }}\"\n              backgroundType=\"circle\"\n              size=\"sm\"\n            ></bb-icon-ui>\n            <span class=\"font-weight-bold bb-stack__item\">{{ category.categoryName }}</span>\n            <div class=\"bb-stack__item bb-stack__item--fill bb-text-align-right\">\n              <input\n                [id]=\"hostRef.getCategoryIconClass(category.categoryName)\"\n                type=\"radio\"\n                name=\"categoryName\"\n                formControlName=\"categoryName\"\n                [value]=\"category.categoryName\"\n              />\n            </div>\n          </label>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"modal-footer\">\n      <button\n        bbButton\n        data-role=\"cancel\"\n        color=\"secondary\"\n        (click)=\"hostRef.cancelSaveCategory()\"\n        i18n=\"Cancel|Cancel button label@@transactions.category.modal.cancel.button\"\n      >\n        Cancel\n      </button>\n\n      <button\n        bbButton\n        type=\"submit\"\n        color=\"primary\"\n        [disabled]=\"hostRef.transaction.category === hostRef.changeTransactionsCategoryForm.value.categoryName\"\n        i18n=\"Save|Save button label@@transactions.category.modal.save.button\"\n      >\n        Save\n      </button>\n    </div>\n  </form>\n</ng-template>\n","import { Component, Input, Directive, Output, EventEmitter, OnInit } from '@angular/core';\nimport {\n  Transaction,\n  TransactionsIconCategoriesFactoryService,\n  BaseTransactionIcon,\n  TransactionIconType,\n} from '@backbase/transactions-common-ang';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n@Component({\n  selector: 'bb-transaction-detail-category',\n  templateUrl: 'transaction-detail-category.component.html',\n})\nexport class TransactionDetailCategoryComponent implements OnInit {\n  @Input() transaction: Transaction | undefined;\n  @Output() readonly categoryChange = new EventEmitter<string>();\n  /**\n   * Boolean that decides if the Change Category will be displayed.\n   */\n  @Input() displayChangeCategory: boolean | undefined;\n  hostRef = this;\n\n  isTransactionsCategoryOpen = false;\n  public transactionCategoryIcon: BaseTransactionIcon | undefined;\n  transactionIconType = TransactionIconType;\n\n  ngOnInit() {\n    if (typeof this.transaction === 'undefined') {\n      throw new Error(`\"transaction\" input is required in \"${this.constructor.name}\"`);\n    }\n    this.transactionCategoryIcon = this.transactionsIconCategoriesFactory.create(this.transaction);\n  }\n\n  get categoryTitle() {\n    if (this.transactionCategoryIcon) {\n      return this.transactionCategoryIcon.title;\n    }\n\n    return '';\n  }\n\n  openTransactionsCategory() {\n    this.isTransactionsCategoryOpen = true;\n  }\n\n  closeTransactionsCategory(categoryChangeStatus?: string) {\n    this.categoryChange.emit(categoryChangeStatus);\n    this.isTransactionsCategoryOpen = false;\n  }\n\n  constructor(private transactionsIconCategoriesFactory: TransactionsIconCategoriesFactoryService) {}\n}\n\n@Directive({\n  selector: '[bbTransactionDetailCategoryCustomizable]',\n})\nexport class TransactionDetailCategoryCustomizableDirective extends BbTemplate<\n  TransactionDetailCategoryComponent,\n  undefined\n> {}\n","<ng-container bbTransactionDetailCategoryCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbTransactionDetailCategoryCustomizable let-hostRef>\n  <ng-container *ngIf=\"hostRef.displayChangeCategory && !hostRef.transaction.isPending\">\n    <ng-container *ngIf=\"hostRef.transactionCategoryIcon.type === transactionIconType.category; else fallbackCategory\">\n      <button\n        bbButton\n        class=\"bb-transaction-list-item-detail-header__category-badge\"\n        (click)=\"hostRef.openTransactionsCategory()\"\n        buttonSize=\"sm\"\n      >\n        <span data-role=\"list-details-category\">{{ hostRef.categoryTitle | bbCapitalizePipe }}</span>\n        <span>\n          <bb-icon-ui\n            class=\"bb-transactions-list-pending-header__tooltip\"\n            name=\"edit\"\n            size=\"sm\"\n            color=\"muted\"\n          ></bb-icon-ui>\n          <span\n            class=\"sr-only\"\n            i18n=\"Change transaction category|Change the category of a transaction@@transactions.details.changeCategory\"\n          >\n            Change category\n          </span>\n        </span>\n      </button>\n    </ng-container>\n    <ng-template #fallbackCategory>\n      <div\n        class=\"\n          bb-transaction-list-item-detail-header__category-badge-fallback\n          bb-transaction-list-item-detail-header__category-badge\n        \"\n      >\n        <span data-role=\"list-details-category\">{{ hostRef.categoryTitle | titlecase }}</span>\n      </div>\n    </ng-template>\n  </ng-container>\n\n  <bb-modal-ui\n    [isOpen]=\"hostRef.isTransactionsCategoryOpen\"\n    [modalOptions]=\"{ centered: true }\"\n    (cancel)=\"hostRef.closeTransactionsCategory()\"\n  >\n    <bb-transactions-categories\n      [transaction]=\"hostRef.transaction\"\n      (categoryChange)=\"hostRef.closeTransactionsCategory($event)\"\n    ></bb-transactions-categories>\n  </bb-modal-ui>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Transaction } from '@backbase/transactions-common-ang';\n\n@Component({\n  selector: 'bb-transaction-notes',\n  templateUrl: './transaction-notes.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionNotesComponent implements OnInit {\n  /**\n   * The transaction this component shows the notes of.\n   */\n  @Input() transaction: Transaction | undefined;\n  /**\n   * Whether the notes editing form is shown or not.\n   */\n  @Input() isEditingNotes = false;\n  /**\n   * Whether the notes editing form is saving or not.\n   */\n  @Input() isSavingNotes = false;\n  /**\n   * EventEmitter for triggering an isEditingNotesChange event.\n   */\n  @Output() readonly isEditingNotesChange = new EventEmitter<boolean>();\n  /**\n   * EventEmitter for triggering a change notes event.\n   */\n  @Output() readonly changeNotes = new EventEmitter<string>();\n  /**\n   * EventEmitter for triggering a deleteNote event.\n   */\n  @Output() readonly deleteNote = new EventEmitter<string>();\n\n  transactionNotesForm = new FormGroup({\n    notes: new FormControl(),\n  });\n\n  toggleEdit(display?: boolean) {\n    const isEditingNotes = typeof display === 'boolean' ? display : !this.isEditingNotes;\n\n    if (isEditingNotes) {\n      this.transactionNotesForm.get('notes')?.setValue(this.transaction?.notes);\n    }\n\n    this.isEditingNotesChange.emit(isEditingNotes);\n  }\n\n  onSave(notesParams: any) {\n    this.changeNotes.emit(notesParams.notes);\n  }\n\n  triggerDeleteNote(notesParams: any) {\n    this.deleteNote.emit(notesParams.notes);\n  }\n\n  ngOnInit() {\n    if (typeof this.transaction === 'undefined') {\n      throw new Error(`\"transaction\" input is required in \"${this.constructor.name}\"`);\n    }\n\n    this.transactionNotesForm.setValue({\n      notes: this.transaction.notes || '',\n    });\n  }\n}\n","<div class=\"bb-stack\" [ngClass]=\"{ 'bb-block bb-block--xs': !!transaction?.notes }\">\n  <div class=\"bb-stack__item\">\n    <label\n      class=\"bb-block bb-block--sm\"\n      data-role=\"transaction-note-label\"\n      bbDynamicId\n      #noteLabel\n      i18n=\"Note of the selected transaction@@transactions.details.label.note\"\n    >\n      Note\n    </label>\n  </div>\n  <div *ngIf=\"!isEditingNotes\" class=\"bb-stack__item--push-right\">\n    <ng-container *ngIf=\"!!transaction?.notes; then editIconSet\"></ng-container>\n  </div>\n</div>\n<ng-container *ngIf=\"isEditingNotes; then editNotes; else displayNotes\"></ng-container>\n\n<ng-template #editIconSet>\n  <div class=\"bb-stack bb-stack--density-sm bb-transaction-notes-editIconSet\">\n    <button\n      bbButton\n      class=\"bb-transaction-notes-editIconSet-button\"\n      data-role=\"transaction-note-edit-button\"\n      color=\"link-dark\"\n      buttonSize=\"sm\"\n      [circle]=\"true\"\n      aria-label=\"Edit note\"\n      i18n-aria-label=\"Edit note button@@transactions.list.edit.button.ariaLabel\"\n      (click)=\"toggleEdit()\"\n    >\n      <bb-icon-ui name=\"edit\"></bb-icon-ui>\n    </button>\n    <button\n      bbButton\n      color=\"link-dark\"\n      class=\"bb-transaction-notes-editIconSet-button\"\n      data-role=\"transaction-note-delete-button\"\n      buttonSize=\"sm\"\n      [circle]=\"true\"\n      aria-label=\"Delete note\"\n      i18n-aria-label=\"Delete note button@@transactions.list.notes.delete.button.ariaLabel\"\n      (click)=\"triggerDeleteNote(transactionNotesForm.value)\"\n    >\n      <bb-icon-ui name=\"delete\"></bb-icon-ui>\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #editNotes>\n  <form [formGroup]=\"transactionNotesForm\" (ngSubmit)=\"onSave(transactionNotesForm.value)\">\n    <div class=\"form-group\">\n      <textarea\n        class=\"form-control\"\n        name=\"notes\"\n        data-role=\"transaction-note-textarea\"\n        [attr.aria-labelledby]=\"noteLabel?.id\"\n        placeholder=\"Enter note\"\n        i18n-placeholder=\"Write a note for this transaction@@transactions.notes.input.placeholder\"\n        formControlName=\"notes\"\n        maxlength=\"4000\"\n        bbFocus\n      ></textarea>\n    </div>\n    <div class=\"bb-button-bar\">\n      <bb-load-button-ui\n        color=\"primary\"\n        class=\"bb-button-bar__button\"\n        data-role=\"transaction-note-save-button\"\n        [isLoading]=\"isSavingNotes\"\n        (click)=\"!isSavingNotes && onSave(transactionNotesForm.value)\"\n        i18n=\"Save button@@transactions.list.notes.button.save\"\n      >\n        Save\n      </bb-load-button-ui>\n      <button\n        *ngIf=\"!isSavingNotes\"\n        bbButton\n        type=\"button\"\n        color=\"secondary\"\n        data-role=\"transaction-note-cancel-button\"\n        class=\"bb-button-bar__button\"\n        (click)=\"toggleEdit(false)\"\n        i18n=\"Cancel button@@transactions.notes.button.cancel\"\n      >\n        Cancel\n      </button>\n    </div>\n  </form>\n</ng-template>\n\n<ng-template #displayNotes>\n  <span data-role=\"transaction-note\">{{ transaction?.notes }}</span>\n</ng-template>\n","import {\n  Component,\n  OnInit,\n  Input,\n  Directive,\n  ChangeDetectorRef,\n  EventEmitter,\n  Output,\n  OnDestroy,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport {\n  Transaction,\n  TransactionUpdateService,\n  TransactionCheckImageResponse,\n  TransactionsDetailsLoading,\n  TransactionsDetailsLoadingState,\n  InquireAndDisputeTopics,\n  TransactionsInquireAndDisputeUIService,\n  MessageForm,\n  MessagesService,\n  InquireAndDisputeFile,\n  SubjectReport,\n} from '@backbase/transactions-common-ang';\nimport { of, Subject } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'bb-transaction-details',\n  templateUrl: 'transaction-details.component.html',\n  providers: [TransactionsInquireAndDisputeUIService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionDetailsComponent implements OnInit, OnDestroy {\n  /* eslint-enable */\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n  /**\n   * The transaction this component shows the details of.\n   */\n  @Input() transaction: Transaction | undefined;\n  /**\n   * Whether to show the account number (for example, when transactions of multiple accounts are\n   * shown) or not.\n   */\n  @Input() showAccountNumber = false;\n  /**\n   * Whether the notes editing form is shown or not.\n   */\n  @Input() isEditingNotes = false;\n  @Input() checkImagesList: TransactionCheckImageResponse | undefined;\n  @Input() transactionDetailsLoadingStatus: TransactionsDetailsLoading | undefined;\n  @Input() isPending = false;\n  @Input() showInquiryAndDispute = false;\n  @Input() inquireAndDisputeTopics: InquireAndDisputeTopics = {\n    inquire: '',\n    dispute: '',\n  };\n\n  /**\n   * EventEmitter for triggering an isEditingNotesChange event.\n   */\n  @Output() readonly isEditingNotesChange = new EventEmitter<boolean>();\n  @Output() readonly showInquiryAndDisputeChange = new EventEmitter<boolean>();\n  /* eslint-disable */\n  @Output() readonly onNotesUpdateSuccess = new EventEmitter<string>();\n  @Output() readonly onNotesUpdateError = new EventEmitter<string>();\n\n  private unsubscribeSubject = new Subject<void>();\n\n  showReportForm = (display: boolean) => {\n    if (display) {\n      this.isEditingNotes = false;\n    }\n\n    this.showInquiryAndDisputeChange.emit(display);\n  };\n\n  isSavingNotes = false;\n  deleteNoteModalActive = false;\n  readonly loadingStateEnum = TransactionsDetailsLoadingState;\n\n  //Inquire and dispute variables\n  get reportState() {\n    return this.transactionsInquireAndDispute.reportState;\n  }\n  get message() {\n    return this.transactionsInquireAndDispute.message;\n  }\n\n  set message(value: MessageForm) {\n    this.transactionsInquireAndDispute.message = value;\n  }\n\n  savedReportType: SubjectReport | undefined;\n\n  constructor(\n    private readonly transactionUpdate: TransactionUpdateService,\n    private readonly messagesService: MessagesService,\n    private readonly transactionsInquireAndDispute: TransactionsInquireAndDisputeUIService,\n    private readonly cd: ChangeDetectorRef,\n  ) {}\n\n  /**\n   * Handler function after user changes notes for the transaction.  Calls service to update the\n   * backend.\n   *\n   * @param notes - The new notes for the transaction.\n   */\n  onChangeNotes(notes: string) {\n    if (typeof this.transaction === 'undefined') {\n      return;\n    }\n\n    this.updateNotes(this.transaction, notes);\n  }\n\n  openEditNotes() {\n    this.isEditingNotes = true;\n    this.transactionsInquireAndDispute.showReportForm(false);\n  }\n\n  handleDelete(data: string) {\n    this.deleteNoteModalActive = true;\n    if (this.transaction) {\n      this.transaction.notes = data;\n    }\n  }\n\n  closeModal() {\n    this.deleteNoteModalActive = false;\n  }\n\n  submitDeleteNote() {\n    if (this.transaction) {\n      this.updateNotes(this.transaction, '');\n    }\n  }\n\n  private updateNotes(transaction: Transaction, note: string) {\n    this.isSavingNotes = true;\n    this.transactionUpdate.updateNotes(transaction, note).subscribe(\n      () => {\n        transaction.notes = note;\n        this.deleteNoteModalActive = false;\n        this.onNotesUpdateSuccess.emit(note);\n        this.updateNotesState();\n      },\n      (error) => {\n        this.onNotesUpdateError.emit(error);\n        this.updateNotesState();\n      },\n    );\n  }\n\n  private updateNotesState() {\n    this.isSavingNotes = false;\n    this.isEditingNotes = false;\n    this.cd.markForCheck();\n  }\n\n  ngOnInit() {\n    if (typeof this.transaction === 'undefined') {\n      throw new Error(`\"transaction\" input is required in \"${this.constructor.name}\"`);\n    }\n\n    if (this.inquireAndDisputeTopics) {\n      this.transactionsInquireAndDispute.showReport.subscribe({\n        next: this.showReportForm,\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.transactionsInquireAndDispute.removeAllFiles();\n    this.unsubscribeSubject.next();\n    this.unsubscribeSubject.complete();\n  }\n\n  saveReport(messageForm: MessageForm) {\n    const defaultBody = this.transaction ? this.messagesService.createDefaultBody(this.transaction) : '';\n\n    this.transactionsInquireAndDispute\n      .saveReport(\n        this.transactionsInquireAndDispute.formatMessage(\n          messageForm,\n          defaultBody,\n          this.inquireAndDisputeTopics,\n          this.transaction,\n        ),\n      )\n      .pipe(\n        takeUntil(this.unsubscribeSubject),\n        switchMap(() => {\n          if (this.transaction && messageForm.topic === 'dispute') {\n            return this.transactionUpdate.setDisputeStatus(this.transaction, 'PENDING');\n          }\n\n          return of(undefined);\n        }),\n      )\n      .subscribe({\n        next: (result) => {\n          this.savedReportType = result !== undefined ? messageForm.topic : undefined;\n          if (this.transaction && messageForm.topic === 'dispute') {\n            this.transaction.disputeStatus = 'PENDING';\n          }\n\n          if (this.transaction && messageForm.topic === 'inquire') {\n            this.savedReportType = messageForm.topic;\n          }\n\n          this.cd.markForCheck();\n        },\n      });\n  }\n\n  cancelReport() {\n    this.transactionsInquireAndDispute.cancelReport();\n  }\n\n  fileChange(file: File) {\n    this.transactionsInquireAndDispute\n      .fileChange(file)\n      .pipe(takeUntil(this.unsubscribeSubject))\n      .subscribe({\n        next: () => {\n          this.cd.markForCheck();\n        },\n      });\n  }\n\n  fileRemoved(attachment: InquireAndDisputeFile) {\n    this.transactionsInquireAndDispute\n      .fileRemoved(attachment)\n      .pipe(takeUntil(this.unsubscribeSubject))\n      .subscribe({\n        next: () => {\n          this.cd.markForCheck();\n        },\n      });\n  }\n}\n\n@Directive({\n  selector: '[bbTransactionsListItemDetailsCustomizable]',\n})\nexport class TransactionsListItemDetailsCustomizableDirective extends BbTemplate<\n  TransactionDetailsComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbTransactionsListConfirmationModalCustomizable]',\n})\nexport class TransactionsListConfirmationModalCustomizableDirective extends BbTemplate<\n  TransactionDetailsComponent,\n  undefined\n> {}\n","<ng-container bbTransactionsListItemDetailsCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbTransactionsListItemDetailsCustomizable let-hostRef>\n  <div class=\"bb-transaction-list-item-details\">\n    <div class=\"bb-block bb-block--lg\">\n      <div class=\"bb-text-align-center bb-stack bb-stack--center\">\n        <!-- Add note button -->\n        <div class=\"bb-stack__item bb-transaction-list-item-details-controls-container\">\n          <button\n            bbButton\n            [circle]=\"true\"\n            data-role=\"control-note-btn\"\n            class=\"bb-block bb-block--md\"\n            [attr.aria-expanded]=\"!!hostRef.isEditingNotes\"\n            (click)=\"hostRef.openEditNotes()\"\n          >\n            <bb-icon-ui name=\"subject\"></bb-icon-ui>\n          </button>\n          <div class=\"bb-transaction-list-item-details-controls-label\">\n            <label\n              data-role=\"add-note-label\"\n              *ngIf=\"!hostRef.transaction.notes; else editNoteLabel\"\n              i18n=\"Add note to the current transaction@@transactions.list.details.addNote.label\"\n              >Add note</label\n            >\n            <ng-template #editNoteLabel>\n              <label\n                data-role=\"edit-note-label\"\n                i18n=\"Edit note of the current transaction@@transactions.list.details.editNote.label\"\n                >Edit note</label\n              >\n            </ng-template>\n          </div>\n        </div>\n        <!-- Report button -->\n        <div\n          *ngIf=\"hostRef.transactionDetailsLoadingStatus?.enableDisputeAndInquiry === hostRef.loadingStateEnum.done\"\n          class=\"bb-stack__item bb-transaction-list-item-details-controls-container\"\n        >\n          <button\n            bbButton\n            [circle]=\"true\"\n            class=\"bb-block bb-block--md\"\n            data-role=\"report-button\"\n            (click)=\"hostRef.showReportForm(true)\"\n          >\n            <bb-icon-ui name=\"sms-failed\"></bb-icon-ui>\n          </button>\n          <div class=\"bb-transaction-list-item-details-controls-label\">\n            <label\n              data-role=\"report-label\"\n              i18n=\"Report the current transaction@@transactions.list.details.report.label\"\n            >\n              Report\n            </label>\n          </div>\n        </div>\n      </div>\n\n      <!-- Dispute and inquiry alerts -->\n      <div class=\"bb-block bb-block--lg bb-text-align-left\">\n        <!-- Dispute banners -->\n        <bb-dispute-banner [transaction]=\"hostRef.transaction\"></bb-dispute-banner>\n        <!-- Inquiry banner -->\n        <ng-container *ngIf=\"hostRef.reportState === hostRef.loadingStateEnum.done\">\n          <bb-alert-ui\n            *ngIf=\"hostRef.savedReportType === 'inquire'\"\n            modifier=\"info\"\n            data-role=\"send-inquiry-success\"\n            title=\"The bank is reviewing your transaction\"\n            i18n-title=\"\n              Send inquiry report success notification|Message for a notification displayed when sending transaction\n              inquiry report request has succeed@@transactions.notification.success.send.inquiry.title\"\n            message=\"Please go to Messages to view any responses to your request.\"\n            i18n-message=\"\n              Send inquiry report success notification message@@transactions.notification.success.send.inquiry.message\"\n          ></bb-alert-ui>\n        </ng-container>\n      </div>\n\n      <!-- Dispute and inquiry component -->\n      <div *ngIf=\"hostRef.showInquiryAndDispute\">\n        <bb-transactions-inquiry-dispute\n          [(message)]=\"hostRef.message\"\n          [enableDispute]=\"\n            hostRef.transactionDetailsLoadingStatus.disputeOption === hostRef.loadingStateEnum.done &&\n            (hostRef.transaction.disputeStatus === 'UNDISPUTED' ||\n              hostRef.transaction.disputeStatus === 'REJECTED' ||\n              !hostRef.transaction.disputeStatus)\n          \"\n          [state]=\"hostRef.reportState\"\n          [inquireAndDisputeTopics]=\"hostRef.inquireAndDisputeTopics\"\n          (submitReport)=\"hostRef.saveReport($event)\"\n          (cancelReport)=\"hostRef.cancelReport()\"\n          (fileChange)=\"hostRef.fileChange($event)\"\n          (fileRemoved)=\"hostRef.fileRemoved($event)\"\n        ></bb-transactions-inquiry-dispute>\n      </div>\n    </div>\n\n    <div class=\"bb-block--lg\">\n      <!-- Type -->\n      <div\n        class=\"bb-block--md\"\n        *ngIf=\"hostRef.transaction?.type && (!!hostRef.transaction?.category || !!hostRef.transaction.isPending)\"\n        data-role=\"list-details-type-section\"\n      >\n        <div\n          class=\"bb-text-bold\"\n          i18n=\"Type of the selected transaction@@transactions.details.label.transactionType\"\n          data-role=\"section-title\"\n        >\n          Type\n        </div>\n        <div class=\"break-word\" data-role=\"section-content\">\n          {{ hostRef.transaction?.type }}\n        </div>\n      </div>\n\n      <!-- Currency Exchange -->\n      <div\n        class=\"bb-block--md\"\n        *ngIf=\"hostRef.transaction.currencyExchangeAvailability\"\n        data-role=\"list-details-currency-exchange-section\"\n      >\n        <div\n          class=\"bb-text-bold\"\n          i18n=\"Transaction type of the selected transaction@@transactions.details.label.currencyExchange\"\n          data-role=\"section-title\"\n        >\n          Currency exchange\n        </div>\n        <div class=\"break-word\" data-role=\"section-content\">\n          <bb-amount-ui\n            amount=\"1\"\n            [currency]=\"hostRef.transaction?.instructedAmountCurrency.currencyCode\"\n          ></bb-amount-ui>\n          <span> = </span>\n          <bb-amount-ui\n            [amount]=\"hostRef.transaction?.currencyExchangeRate\"\n            [currency]=\"hostRef.transaction?.transactionAmountCurrency.currencyCode\"\n            [decimalPlaces]=\"6\"\n            [trailingZeroes]=\"false\"\n          ></bb-amount-ui>\n        </div>\n      </div>\n\n      <!-- Instructed amount -->\n      <div\n        class=\"bb-block--md\"\n        *ngIf=\"hostRef.transaction?.instructedAmountCurrency?.amount\"\n        data-role=\"list-details-instructed-amount-section\"\n      >\n        <div\n          class=\"bb-text-bold\"\n          i18n=\"Instructed Amount of the selected transaction@@transactions.details.label.instructedAmount\"\n          data-role=\"section-title\"\n        >\n          Instructed amount\n        </div>\n        <div class=\"break-word\">\n          <bb-amount-ui\n            data-role=\"section-content\"\n            [amount]=\"hostRef.transaction?.instructedAmountCurrency?.amount\"\n            [currency]=\"hostRef.transaction?.instructedAmountCurrency?.currencyCode\"\n          ></bb-amount-ui>\n        </div>\n      </div>\n\n      <!-- Counter party account number -->\n      <div\n        class=\"bb-block--md\"\n        *ngIf=\"hostRef.transaction?.counterPartyAccountNumber\"\n        data-role=\"list-details-counter-party-account-number-section\"\n      >\n        <div\n          class=\"bb-text-bold\"\n          i18n=\"\n            Counter Party Account number of the selected\n            transaction@@transactions.details.label.counterPartyAccountNumber\"\n          data-role=\"section-title\"\n        >\n          Counter party account number\n        </div>\n        <div class=\"break-word\" data-role=\"section-content\">\n          {{ hostRef.transaction?.counterPartyAccountNumber }}\n        </div>\n      </div>\n\n      <!-- Description -->\n      <div class=\"bb-block--md\" *ngIf=\"hostRef.transaction?.description\" data-role=\"list-details-description-section\">\n        <div\n          class=\"bb-text-bold\"\n          i18n=\"Description of the selected transaction@@transactions.details.label.description\"\n          data-role=\"section-title\"\n        >\n          Description\n        </div>\n        <div class=\"break-word\" data-role=\"section-content\">\n          {{ hostRef.transaction?.description }}\n        </div>\n      </div>\n\n      <!-- Original Description -->\n      <div\n        class=\"bb-block--md\"\n        *ngIf=\"hostRef.transaction?.originalDescription\"\n        data-role=\"list-details-original-description-section\"\n      >\n        <div\n          class=\"bb-text-bold\"\n          i18n=\"Original description of the selected transaction@@transactions.details.label.originalDescription\"\n          data-role=\"section-title\"\n        >\n          Original description\n        </div>\n        <div class=\"break-word\" data-role=\"section-content\">\n          {{ hostRef.transaction?.originalDescription }}\n        </div>\n      </div>\n\n      <!-- Running balance -->\n      <div\n        class=\"bb-block--md\"\n        *ngIf=\"hostRef.transaction?.runningBalance\"\n        data-role=\"list-details-running-balance-section\"\n      >\n        <div\n          class=\"bb-text-bold\"\n          i18n=\"Running balance of the selected transaction@@transactions.details.label.runningBalance\"\n          data-role=\"section-title\"\n        >\n          Running balance\n        </div>\n        <div class=\"break-word\">\n          <bb-amount-ui\n            data-role=\"section-content\"\n            [currency]=\"hostRef.transaction?.transactionAmountCurrency?.currencyCode\"\n            [amount]=\"hostRef.transaction?.runningBalance\"\n          ></bb-amount-ui>\n        </div>\n      </div>\n    </div>\n\n    <!-- Check image -->\n    <ng-container *ngIf=\"hostRef?.transactionDetailsLoadingStatus?.checkImages !== hostRef.loadingStateEnum.notStarted\">\n      <ng-container\n        *ngIf=\"hostRef?.transactionDetailsLoadingStatus?.checkImages !== hostRef.loadingStateEnum.notLoaded\"\n      >\n        <div\n          class=\"bb-block--lg\"\n          *ngIf=\"hostRef.transaction && hostRef.transaction.checkImageAvailability === 'AVAILABLE'\"\n        >\n          <span\n            class=\"bb-text-bold\"\n            i18n=\"check images of the selected transaction@@transactions.details.label.check-img\"\n          >\n            Check images\n          </span>\n          <span>\n            <bb-icon-ui\n              class=\"bb-transactions-list-pending-header__tooltip\"\n              role=\"tooltip\"\n              name=\"info\"\n              size=\"sm\"\n              [bbTooltip]=\"tipContent\"\n              triggers=\"hover click\"\n              placement=\"right\"\n              bbAccessibilityKeyboard\n            ></bb-icon-ui>\n          </span>\n          <bb-transaction-check-image\n            [transaction]=\"hostRef.transaction\"\n            [checkImagesList]=\"hostRef.checkImagesList\"\n            [transactionDetailsLoadingStatus]=\"hostRef.transactionDetailsLoadingStatus\"\n          ></bb-transaction-check-image>\n        </div>\n      </ng-container>\n    </ng-container>\n\n    <!-- Geo location -->\n    <div *ngIf=\"hostRef.transaction?.location\">\n      <div\n        class=\"bb-text-bold bb-block bb-block--sm\"\n        i18n=\"Geo location of the selected transaction@@transactions.details.label.geo-location\"\n      >\n        Location\n      </div>\n      <bb-transaction-geo-location-map\n        [transaction]=\"hostRef.transaction\"\n        [loadingStatus]=\"hostRef.transactionDetailsLoadingStatus?.geolocation\"\n      ></bb-transaction-geo-location-map>\n    </div>\n\n    <!-- Notes -->\n    <ng-container *ngIf=\"!!hostRef.isEditingNotes || !!hostRef.transaction.notes\">\n      <div class=\"bb-block bb-block--lg\"></div>\n      <div class=\"bb-transaction-list-item-detail-additional-info\">\n        <bb-transaction-notes\n          data-role=\"transaction-notes\"\n          [transaction]=\"hostRef.transaction\"\n          [isEditingNotes]=\"hostRef.isEditingNotes\"\n          [isSavingNotes]=\"hostRef.isSavingNotes\"\n          (isEditingNotesChange)=\"hostRef.isEditingNotes = $event; hostRef.isEditingNotesChange.emit($event)\"\n          (changeNotes)=\"hostRef.onChangeNotes($event)\"\n          (deleteNote)=\"hostRef.handleDelete($event)\"\n        ></bb-transaction-notes>\n      </div>\n    </ng-container>\n  </div>\n</ng-template>\n\n<!-- Delete note -->\n<bb-modal-ui [isOpen]=\"deleteNoteModalActive\" (cancel)=\"closeModal()\">\n  <ng-container bbTransactionsListConfirmationModalCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n</bb-modal-ui>\n\n<ng-template bbTransactionsListConfirmationModalCustomizable let-hostRef>\n  <div class=\"modal-header\">\n    <h2\n      id=\"modal-basic-title\"\n      class=\"modal-title\"\n      data-role=\"delete-note-modal-header\"\n      i18n=\"Delete note?|Delete note modal title@@transactions.list.note.delete.modal.title\"\n    >\n      Delete note?\n    </h2>\n  </div>\n\n  <div class=\"modal-body\">\n    <span\n      data-role=\"delete-note-modal-subHeader\"\n      i18n=\"Are you sure you want to delete this note?|Delete note info@@transactions.list.note.delete.modal.info\"\n    >\n      Are you sure you want to delete the attached note? Entered data will be lost.\n    </span>\n  </div>\n\n  <div class=\"modal-footer\">\n    <div class=\"bb-button-bar\">\n      <button\n        bbButton\n        color=\"danger\"\n        class=\"bb-button-bar__button\"\n        data-role=\"delete-note-modal-delete-button\"\n        (click)=\"hostRef.submitDeleteNote()\"\n        i18n=\"Delete note|Delete note button label@@transactions.list.note.delete.modal.delete.button\"\n      >\n        Delete note\n      </button>\n\n      <button\n        bbButton\n        color=\"link\"\n        class=\"bb-button-bar__button\"\n        data-role=\"delete-note-modal-cancel-button\"\n        (click)=\"hostRef.closeModal()\"\n        i18n=\"Cancel|Cancel button label@@transactions.list.note.confirmation.modal.cancel.button\"\n      >\n        Cancel\n      </button>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #tipContent>\n  <div class=\"bb-text-align-left\">\n    <span i18n=\"Description inside a tooltip@@transactions.list.details.check-img.tooltip.description\">\n      Some images may not be available online if:\n    </span>\n    <ul>\n      <li i18n=\"Description scheduled maintenance@transactions.list.details.check-img.tooltip.description.point1\">\n        There is a scheduled maintenance in the Check Image Service.\n      </li>\n      <li i18n=\"Check deposited earlier@transactions.list.details.check-img.tooltip.description.point2\">\n        The check has been deposited earlier than 12 months ago.\n      </li>\n      <li i18n=\"Check deposited after 48 hours@transactions.list.details.check-img.tooltip.description.point3\">\n        The checks have been received or deposited within the past 48 hours.\n      </li>\n    </ul>\n  </div>\n</ng-template>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui loaderSize=\"lg\"></bb-loading-indicator-ui>\n</ng-template>\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport {\n  BillingStatusEnum,\n  InquireAndDisputeTopics,\n  Transaction,\n  TransactionCheckImageResponse,\n  TransactionsDetailsLoading,\n} from '@backbase/transactions-common-ang';\n\n@Component({\n  selector: 'bb-transaction-details-modal',\n  templateUrl: 'transaction-details-modal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionDetailsModalComponent {\n  @Input() isDetailsOpen = false;\n  isEditingNotes = false;\n  @Input() transaction: Transaction | undefined;\n  @Input() showBillingStatus: boolean | undefined;\n  @Input() showChangeCategory: boolean | undefined;\n  @Input() checkImagesList: TransactionCheckImageResponse | undefined;\n  @Input() transactionDetailsLoadingStatus: TransactionsDetailsLoading | undefined;\n  @Input() inquireAndDisputeTopics: InquireAndDisputeTopics = {\n    inquire: '',\n    dispute: '',\n  };\n  @Output() readonly detailsOpen = new EventEmitter<Transaction>();\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() readonly close = new EventEmitter<void>();\n  showInquiryAndDispute = false;\n  alertOptions = {\n    displayAlert: false,\n    displayStatus: '',\n  };\n  onAlertDismiss(): void {\n    this.alertOptions = {\n      displayAlert: false,\n      displayStatus: '',\n    };\n  }\n  closeTransactionsCategory(categoryChangeStatus?: string): void {\n    if (categoryChangeStatus) {\n      this.alertOptions = {\n        displayAlert: true,\n        displayStatus: categoryChangeStatus,\n      };\n    } else {\n      this.onAlertDismiss();\n    }\n  }\n\n  closeDetails() {\n    this.showInquiryAndDispute = false;\n    this.close.emit();\n  }\n\n  get isPending(): boolean {\n    let isPending = false;\n    if (this.transaction && this.transaction.billingStatus) {\n      const billingStatus = this.transaction.billingStatus.toUpperCase();\n      isPending = billingStatus === BillingStatusEnum.pending || billingStatus === BillingStatusEnum.unbilled;\n    }\n\n    return isPending;\n  }\n}\n","<bb-modal-ui\n  [isOpen]=\"isDetailsOpen\"\n  [modalOptions]=\"{\n    centered: true\n  }\"\n  (cancel)=\"closeDetails()\"\n>\n  <div role=\"dialog\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <button\n          type=\"button\"\n          class=\"close bb-transaction-list-item-detail-header__close-button\"\n          aria-label=\"Close dialog\"\n          i18n-aria-label=\"Close dialog button@@transactions.list.dialog.close.button\"\n          (click)=\"closeDetails()\"\n        >\n          <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n        </button>\n      </ng-template>\n    </bb-modal-header-ui>\n    <!-- Details -->\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <div class=\"bb-text-align-center\">\n          <!-- Category icon-->\n          <div class=\"bb-block bb-block--md\">\n            <div class=\"bb-stack bb-stack--center\">\n              <bb-transaction-category-icon\n                [transaction]=\"transaction\"\n                backgroundType=\"circle\"\n                size=\"large\"\n              ></bb-transaction-category-icon>\n            </div>\n          </div>\n          <!-- Counter party, description -->\n          <div class=\"bb-block bb-block--md\">\n            <strong>\n              {{ transaction?.merchant ? transaction?.merchant?.name : transaction?.counterPartyName }}\n            </strong>\n          </div>\n          <!-- Amount -->\n          <div class=\"bb-heading-2 bb-block bb-block--md\">\n            <bb-amount-ui\n              data-role=\"list-details-amount\"\n              [showPlusSign]=\"true\"\n              [currency]=\"transaction?.transactionAmountCurrency?.currencyCode || ''\"\n              [amount]=\"transaction?.transactionAmountCurrency?.amount || 0\"\n            ></bb-amount-ui>\n            <ng-container *ngIf=\"transaction?.currencyExchangeAvailability\">\n              <bb-icon-ui\n                class=\"bb-transaction-list-item-detail-header__exchange-icon\"\n                role=\"tooltip\"\n                name=\"exchange\"\n                size=\"md\"\n                [bbTooltip]=\"tipContent\"\n                triggers=\"hover click\"\n                placement=\"right\"\n                bbAccessibilityKeyboard\n              ></bb-icon-ui>\n              <span\n                class=\"sr-only\"\n                i18n=\"An exchange rate has been applied to the current transaction@@transactions.details.exchangeRate\"\n                >An exchange rate has been applied</span\n              >\n            </ng-container>\n          </div>\n          <!-- Date -->\n          <div class=\"bb-block bb-block--md\" *ngIf=\"transaction?.bookingDate\">\n            <div class=\"break-word text-small\" data-role=\"list-details-booking-date\">\n              {{ transaction?.bookingDate | date: 'longDate' }}\n            </div>\n          </div>\n          <!-- Category name -->\n          <div class=\"bb-block bb-block--lg\">\n            <bb-transaction-detail-category\n              (categoryChange)=\"closeTransactionsCategory($event)\"\n              [displayChangeCategory]=\"showChangeCategory\"\n              [transaction]=\"transaction\"\n            >\n            </bb-transaction-detail-category>\n          </div>\n          <!-- Billing status -->\n          <div\n            class=\"bb-block bb-block--md\"\n            *ngIf=\"\n              !showBillingStatus &&\n              (transaction?.billingStatus === 'UNBILLED' || transaction?.billingStatus === 'PENDING')\n            \"\n          >\n            <bb-badge-ui\n              text=\"{{ transaction?.billingStatus }}\"\n              color=\"warning\"\n              [abbr]=\"false\"\n              [circle]=\"false\"\n            ></bb-badge-ui>\n          </div>\n          <div class=\"bb-block bb-block--md bb-text-align-left\">\n            <ng-container *ngIf=\"alertOptions.displayAlert\" [ngSwitch]=\"alertOptions.displayStatus\">\n              <bb-alert-ui\n                *ngSwitchCase=\"'error'\"\n                title=\"Transaction category was not changed\"\n                i18n-title=\"\n                  Update failed notification|Message for a notification displayed when transaction category update\n                  request has failed@@transaction.notification.error.update\"\n                [dismissible]=\"true\"\n                (close)=\"onAlertDismiss()\"\n              ></bb-alert-ui>\n\n              <bb-alert-ui\n                *ngSwitchCase=\"'success'\"\n                modifier=\"success\"\n                title=\"Transaction category changed successfully\"\n                i18n-title=\"\n                  Update notification|Message for a notification displayed when transaction category update request has\n                  been processed@@transaction.notification.success.update\"\n                [dismissible]=\"true\"\n                (close)=\"onAlertDismiss()\"\n              ></bb-alert-ui>\n            </ng-container>\n          </div>\n        </div>\n\n        <bb-transaction-details\n          *ngIf=\"isDetailsOpen\"\n          [transaction]=\"transaction\"\n          [(isEditingNotes)]=\"isEditingNotes\"\n          [(showInquiryAndDispute)]=\"showInquiryAndDispute\"\n          [checkImagesList]=\"checkImagesList\"\n          [transactionDetailsLoadingStatus]=\"transactionDetailsLoadingStatus\"\n          [inquireAndDisputeTopics]=\"inquireAndDisputeTopics\"\n          [isPending]=\"isPending\"\n        ></bb-transaction-details>\n      </ng-template>\n    </bb-modal-body-ui>\n  </div>\n</bb-modal-ui>\n<ng-template #tipContent>\n  <div class=\"bb-text-align-left\">\n    <span\n      i18n=\"\n        Description inside a tooltip describing an exchange rate has ocurred@@transactions.details.exchangeRate.tooltip\"\n    >\n      An exchange rate has been applied\n    </span>\n  </div>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport {\n  Transaction,\n  TransactionsIconCategoriesFactoryService,\n  BaseTransactionIcon,\n} from '@backbase/transactions-common-ang';\n\n@Component({\n  selector: 'bb-transaction-header',\n  templateUrl: './transaction-header.component.html',\n})\nexport class TransactionHeaderComponent implements OnInit {\n  /**\n   * The transaction this component shows the header of.\n   */\n  @Input() transaction: Transaction | undefined;\n  /**\n   * Weather to show pending transactions on top or not.\n   */\n  @Input() showBillingStatus = false;\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n  private transactionCategoryIcon: BaseTransactionIcon | undefined;\n\n  /**\n   * Subtitle to display - either the category of the transaction, or the type if the category is\n   * not available.\n   */\n  get subtitle() {\n    if (typeof this.transaction === 'undefined') {\n      return '';\n    }\n\n    if (this.transactionCategoryIcon) {\n      return this.transactionCategoryIcon.title;\n    }\n\n    return '';\n  }\n\n  /**\n   * Title to display - either the counter party name of the transaction, or the description if the\n   * name is not available.\n   */\n  get title() {\n    if (!this.transaction) {\n      return '';\n    }\n\n    if (this.transaction.merchant && this.transaction.merchant.name) {\n      return this.transaction.merchant.name;\n    } else {\n      return this.transaction.counterPartyName || this.transaction.description || '';\n    }\n  }\n\n  ngOnInit() {\n    if (typeof this.transaction === 'undefined') {\n      throw new Error(`\"transaction\" input is required in \"${this.constructor.name}\"`);\n    }\n\n    this.transactionCategoryIcon = this.transactionsIconCategoriesFactory.create(this.transaction);\n  }\n\n  showCategory() {\n    if (this.transaction) {\n      return this.transaction.isPending || !!this.ownCategory;\n    }\n\n    return false;\n  }\n\n  private get ownCategory(): string | undefined {\n    return this.transaction && this.transaction.category;\n  }\n\n  // TODO change this type from model to be number (jira -> https://backbase.atlassian.net/browse/TRANS-4722)\n  convertToNumber(value: string) {\n    return Number(value);\n  }\n\n  constructor(private transactionsIconCategoriesFactory: TransactionsIconCategoriesFactoryService) {}\n}\n","<div class=\"bb-transaction-header bb-stack w-auto row\">\n  <div class=\"bb-stack__item col-6\">\n    <div class=\"bb-stack\">\n      <!-- Category -->\n      <div class=\"bb-transaction-item-category bb-stack__item\">\n        <ng-container\n          *ngIf=\"\n            transaction?.billingStatus === 'UNBILLED' || transaction?.billingStatus === 'PENDING';\n            else transactionIcon\n          \"\n        >\n          <bb-icon-ui\n            name=\"watch-later\"\n            class=\"bb-transaction-category bb-transaction-category--pending\"\n            color=\"inactive\"\n            backgroundType=\"square\"\n          ></bb-icon-ui>\n        </ng-container>\n        <ng-template #transactionIcon>\n          <bb-transaction-category-icon\n            [transaction]=\"transaction\"\n            backgroundType=\"circle\"\n          ></bb-transaction-category-icon>\n        </ng-template>\n      </div>\n\n      <!-- Counter party, description -->\n      <div class=\"bb-transaction-item-description bb-stack__item\">\n        <div class=\"bb-transaction-item-description__title\">\n          {{ title | titlecase }}\n        </div>\n        <div class=\"bb-transaction-item-description__subtitle\">\n          {{ subtitle | titlecase }}\n        </div>\n        <div class=\"bb-text-disabled\">\n          {{ transaction?.account?.IBAN ? transaction?.account?.IBAN : transaction?.account?.BBAN }}\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"bb-stack__item col-6\">\n    <div class=\"bb-stack bb-transaction-list-header-amount\">\n      <div\n        class=\"bb-stack__item bb-stack__item--push-right bb-text-align-right bb-transaction-list-header-amount__wrapper\"\n      >\n        <div class=\"bb-stack bb-stack--wrap\">\n          <div class=\"bb-stack__item bb-stack__item--push-right\">\n            <div class=\"bb-stack bb-stack--wrap\">\n              <!-- Dispute status -->\n              <div\n                class=\"bb-stack__item bb-stack__item--push-right-lg-down bb-transaction-list-header-dispute-status-tag\"\n              >\n                <bb-dispute-status-tag [status]=\"hostRef.transaction?.disputeStatus\"></bb-dispute-status-tag>\n              </div>\n\n              <!-- Amount -->\n              <div\n                class=\"bb-stack__item bb-stack__item--push-right bb-transaction-list-header-amount__value\"\n                [ngClass]=\"{\n                  'bb-transaction-list-header-amount__value--credit':\n                    convertToNumber(transaction?.transactionAmountCurrency?.amount || '0') > 0\n                }\"\n              >\n                <bb-amount-ui\n                  [showPlusSign]=\"true\"\n                  [currency]=\"transaction?.transactionAmountCurrency?.currencyCode || ''\"\n                  [amount]=\"transaction?.transactionAmountCurrency?.amount || 0\"\n                ></bb-amount-ui>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div *ngIf=\"hostRef.transaction?.runningBalance\" class=\"bb-text-support text-small\">\n          <span class=\"sr-only\" i18n=\"Running Balance as of Transaction Date@@transactions.list.runningBalance\"\n            >Running balance</span\n          >\n          <bb-amount-ui\n            bbTooltip=\"Running balance\"\n            placement=\"left\"\n            triggers=\"hover\"\n            [currency]=\"transaction?.transactionAmountCurrency?.currencyCode || ''\"\n            [amount]=\"transaction?.runningBalance || 0\"\n          ></bb-amount-ui>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, Directive, OnInit, Output, EventEmitter, Optional, Inject } from '@angular/core';\nimport { BbTemplate, FeaturesService } from '@backbase/foundation-ang/core';\nimport {\n  Transaction,\n  BillingStatusEnum,\n  TransactionCheckImageResponse,\n  TransactionsDetailsLoading,\n  showDetailsConfigToken,\n  InquireAndDisputeTopics,\n} from '@backbase/transactions-common-ang';\nimport { TRANSACTIONS_DETAILS_SHARE_MODAL } from '../../constants';\n\n@Component({\n  selector: 'bb-transactions-list-item',\n  templateUrl: './transactions-list-item.component.html',\n})\nexport class TransactionsListItemComponent implements OnInit {\n  /**\n   * The transaction this component shows.\n   */\n  @Input() transaction: Transaction | undefined;\n  /**\n   * Whether to show pending transactions on top or not.\n   */\n  @Input() showBillingStatus = false;\n  /**\n   * Boolean that decides if the Change Category will be displayed.\n   */\n  @Input() showChangeCategory: boolean | undefined;\n  @Input() checkImagesList: TransactionCheckImageResponse | undefined;\n  @Input() transactionDetailsLoadingStatus: TransactionsDetailsLoading | undefined;\n  @Input() inquireAndDisputeTopics: InquireAndDisputeTopics | undefined;\n  @Output() readonly detailsOpen = new EventEmitter<Transaction>();\n\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n  /**\n   * Whether the transaction details are shown or not.\n   */\n  isDetailsOpen = false;\n  /**\n   * Whether the notes editing form is shown or not.\n   */\n  isEditingNotes = false;\n  /**\n   * Alert details such as visibility and type\n   */\n  alertOptions = {\n    displayAlert: false,\n    displayStatus: '',\n  };\n  /**\n   * Show the transaction details.\n   */\n  openDetails() {\n    this.isDetailsOpen = true;\n\n    if (this.transaction) {\n      this.detailsOpen.emit(this.transaction);\n    }\n  }\n\n  /**\n   * Hide the transaction details.\n   */\n  closeDetails() {\n    this.isDetailsOpen = false;\n    this.onAlertDismiss();\n  }\n\n  ngOnInit() {\n    if (typeof this.transaction === 'undefined') {\n      throw new Error(`\"transaction\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n\n  showCategory() {\n    return this.isPending || !!this.ownCategory;\n  }\n\n  get hasModal(): boolean {\n    // if the feature is not enabled, we are still displaying modal in the item component\n    return !this.featureService.isEnabled(TRANSACTIONS_DETAILS_SHARE_MODAL);\n  }\n\n  get isPending(): boolean {\n    let isPending = false;\n    if (this.transaction && this.transaction.billingStatus) {\n      const billingStatus = this.transaction.billingStatus.toUpperCase();\n      isPending = billingStatus === BillingStatusEnum.pending || billingStatus === BillingStatusEnum.unbilled;\n    }\n\n    return isPending;\n  }\n\n  private get ownCategory(): string | undefined {\n    return this.transaction && this.transaction.category;\n  }\n\n  closeTransactionsCategory(categoryChangeStatus?: string): void {\n    if (categoryChangeStatus) {\n      this.alertOptions = {\n        displayAlert: true,\n        displayStatus: categoryChangeStatus,\n      };\n    } else {\n      this.onAlertDismiss();\n    }\n  }\n\n  onAlertDismiss(): void {\n    this.alertOptions = {\n      displayAlert: false,\n      displayStatus: '',\n    };\n  }\n\n  constructor(\n    private readonly featureService: FeaturesService,\n    // eslint-disable-next-line\n    @Optional()\n    // eslint-disable-next-line\n    @Inject(showDetailsConfigToken)\n    public showDetailsConfig?: boolean,\n  ) {\n    if (this.showDetailsConfig === null || this.showDetailsConfig === undefined) {\n      this.showDetailsConfig = true;\n    }\n  }\n}\n@Directive({\n  selector: '[bbTransactionsListItemHeaderCustomizable]',\n})\nexport class TransactionsListItemHeaderCustomizableDirective extends BbTemplate<\n  TransactionsListItemComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbTransactionsListItemCustomizable]',\n})\nexport class TransactionsListItemCustomizableDirective extends BbTemplate<TransactionsListItemComponent, undefined> {}\n","<ng-container bbTransactionsListItemCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbTransactionsListItemCustomizable let-hostRef>\n  <div bbAccessibilityKeyboard (click)=\"hostRef.openDetails()\">\n    <ng-container bbTransactionsListItemHeaderCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n    <span\n      i18n=\"Transaction selector button@@transactions.list.transaction.label\"\n      i18n-aria-label=\"Transaction selector button label@@transactions.list.transaction.label\"\n      class=\"sr-only\"\n      role=\"button\"\n    >\n      Select transaction\n    </span>\n  </div>\n  <bb-transaction-details-modal\n    *ngIf=\"hostRef.showDetailsConfig && hostRef.hasModal\"\n    [transaction]=\"hostRef.transaction\"\n    [showBillingStatus]=\"hostRef.showBillingStatus\"\n    [showChangeCategory]=\"hostRef.showChangeCategory\"\n    [checkImagesList]=\"hostRef.checkImagesList\"\n    [transactionDetailsLoadingStatus]=\"hostRef.transactionDetailsLoadingStatus\"\n    [isDetailsOpen]=\"hostRef.isDetailsOpen\"\n    [inquireAndDisputeTopics]=\"hostRef.inquireAndDisputeTopics\"\n    (detailsOpen)=\"hostRef.openDetails($event)\"\n    (close)=\"hostRef.closeDetails()\"\n  ></bb-transaction-details-modal>\n</ng-template>\n\n<ng-template bbTransactionsListItemHeaderCustomizable let-hostRef>\n  <bb-transaction-header\n    [showBillingStatus]=\"hostRef.showBillingStatus\"\n    [transaction]=\"hostRef.transaction\"\n  ></bb-transaction-header>\n</ng-template>\n","import { Component, Input, Directive, OnInit, Output, EventEmitter } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport {\n  InquireAndDisputeTopics,\n  Transaction,\n  TransactionCheckImageResponse,\n  TransactionsDetailsLoading,\n} from '@backbase/transactions-common-ang';\n\n@Component({\n  selector: 'bb-transactions-list-item-group',\n  templateUrl: './transactions-list-item-group.component.html',\n})\nexport class TransactionsListItemGroupComponent implements OnInit {\n  /**\n   * Title to be displayed over transactions.\n   */\n  @Input() transactionDate: string | undefined;\n  /**\n   * The transactions this component shows.\n   */\n  @Input() transactions: Transaction[] | undefined;\n  /**\n   * Boolean that decides if the Change Category will be displayed.\n   */\n  @Input() showChangeCategory: boolean | undefined;\n\n  @Input() checkImagesList: TransactionCheckImageResponse | undefined;\n  @Input() transactionDetailsLoadingStatus: TransactionsDetailsLoading | undefined;\n  @Input() inquireAndDisputeTopics: InquireAndDisputeTopics | undefined;\n  @Output() readonly detailsOpen = new EventEmitter<Transaction>();\n\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n\n  ngOnInit() {\n    if (typeof this.transactions === 'undefined') {\n      throw new Error(`\"transactions\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n\n  get daysElapsed(): number | undefined {\n    if (this.transactionDate === undefined) {\n      return undefined;\n    }\n\n    let transactionDate = new Date(this.transactionDate);\n\n    if (Number.isNaN(transactionDate.getTime())) {\n      return undefined;\n    }\n\n    const millisecondsPerDay = 86400000;\n    const today = this.roundDate(new Date());\n    transactionDate = this.roundDate(transactionDate);\n\n    return Math.floor((today.getTime() - transactionDate.getTime()) / millisecondsPerDay);\n  }\n\n  onDetailOpen(transaction: Transaction) {\n    this.detailsOpen.emit(transaction);\n  }\n\n  private roundDate(date: Date): Date {\n    date.setUTCHours(0);\n    date.setUTCMinutes(0);\n    date.setUTCSeconds(0);\n\n    return date;\n  }\n\n  trackByFn(_index: number, element: Transaction) {\n    return element.id;\n  }\n}\n\n@Directive({\n  selector: '[bbTransactionsListItemGroupCustomizable]',\n})\nexport class TransactionsListItemGroupCustomizableDirective extends BbTemplate<\n  TransactionsListItemGroupComponent,\n  undefined\n> {}\n","<ng-container bbTransactionsListItemGroupCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbTransactionsListItemGroupCustomizable let-hostRef>\n  <div\n    role=\"heading\"\n    aria-level=\"2\"\n    class=\"bb-transaction-group__date bb-block--md bb-subheader\"\n    i18n=\"Date of the selected transaction@@transactions.list.transactionDate\"\n    tabindex=\"0\"\n  >\n    {hostRef.daysElapsed, plural, =0 {Today} =1 {Yesterday} other\n    {{{ hostRef.transactionDate | date:'longDate' }}} }\n  </div>\n  <div>\n    <div role=\"list\">\n      <div\n        class=\"bb-block--md\"\n        *ngFor=\"let transaction of hostRef.transactions; trackBy: hostRef.trackByFn\"\n        role=\"listitem\"\n      >\n        <bb-transactions-list-item\n          [showChangeCategory]=\"hostRef.showChangeCategory\"\n          [transaction]=\"transaction\"\n          [checkImagesList]=\"hostRef.checkImagesList\"\n          [transactionDetailsLoadingStatus]=\"hostRef.transactionDetailsLoadingStatus\"\n          [inquireAndDisputeTopics]=\"hostRef.inquireAndDisputeTopics\"\n          (detailsOpen)=\"hostRef.onDetailOpen($event)\"\n        ></bb-transactions-list-item>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import {\n  AfterViewInit,\n  Component,\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { BbTemplate, FeaturesService } from '@backbase/foundation-ang/core';\nimport {\n  InquireAndDisputeTopics,\n  LoadingState,\n  PaginationType,\n  showDetailsConfigToken,\n  Transaction,\n  TransactionCheckImageResponse,\n  TransactionsDetailsLoading,\n  TransactionsGroupedByDate,\n  TransactionsList,\n} from '@backbase/transactions-common-ang';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TRANSACTIONS_DETAILS_SHARE_MODAL } from '../../constants';\n\n@Component({\n  selector: 'bb-transactions-list',\n  templateUrl: './transactions-list.component.html',\n})\nexport class TransactionsListComponent implements OnChanges, AfterViewInit, OnDestroy {\n  /**\n   * The TransactionsList this component displays the transactions of.\n   */\n  @Input() transactionsList: TransactionsList | undefined;\n  /**\n   * The current page of transactions that is being displayed.\n   */\n  @Input() currentPage: number | undefined;\n  /**\n   * The page size.\n   */\n  @Input() pageSize: number | undefined;\n  /**\n   * Whether new transactions are being loaded.  By default, this is `LoadingState.Loaded`.\n   */\n  @Input() loadingState: LoadingState = LoadingState.Loaded;\n  /**\n   * The maximum number of pages to show (only relevant when using pagination).\n   */\n  @Input() maxNavPages: number | undefined;\n  /**\n   * The pagination type (`load-more`, `pagination` or undefined).\n   */\n  @Input() paginationType: PaginationType | undefined;\n  /**\n   * Number of results found after filtering or searching.\n   */\n  @Input() numberOfResultsFound: number | undefined;\n  /**\n   * Boolean that decides if the Change Category will be displayed.\n   */\n  @Input() showChangeCategory: boolean | undefined;\n  /**\n   * Event emitter for loading the next page of transactions.\n   */\n  @Output() readonly loadMore = new EventEmitter();\n  /**\n   * Event emitter for loading a specific page of transactions.\n   */\n  @Output() readonly pageChange = new EventEmitter<number>();\n\n  @Input() checkImagesList: TransactionCheckImageResponse | undefined;\n  @Input() inquireAndDisputeTopics: InquireAndDisputeTopics | undefined;\n  @Input() transactionDetailsLoadingStatus: TransactionsDetailsLoading | undefined;\n  @Output() readonly detailsOpen = new EventEmitter<Transaction>();\n\n  constructor(\n    private readonly featureService: FeaturesService,\n    @Optional()\n    @Inject(showDetailsConfigToken)\n    public showDetailsConfig: boolean,\n  ) {\n    if (this.showDetailsConfig === null || this.showDetailsConfig === undefined) {\n      this.showDetailsConfig = true;\n    }\n  }\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n  /**\n   * Whether the transaction details are shown or not.\n   */\n  isDetailsOpen = false;\n\n  transactionsGroupedByDate: any[] | undefined;\n  transaction: Transaction | undefined;\n\n  private unsubscribeSubject$ = new Subject<void>();\n\n  /**\n   * Whether there are any loaded transactions.\n   */\n  hasItems() {\n    if (this.numberOfResultsFound !== undefined) {\n      return this.numberOfResultsFound > 0;\n    }\n\n    return this.transactionsGroupedByDate && this.transactionsGroupedByDate.length > 0;\n  }\n\n  get hasModal(): boolean {\n    return this.featureService.isEnabled(TRANSACTIONS_DETAILS_SHARE_MODAL) && this.showDetailsConfig;\n  }\n\n  /**\n   * Whether transactions are loading.\n   */\n  get isLoading() {\n    return this.loadingState !== LoadingState.Loaded;\n  }\n\n  get isLoadingMore() {\n    return this.loadingState === LoadingState.LoadingMore || this.loadingState === LoadingState.LoadingPage;\n  }\n\n  /**\n   * Whether pagination is configured to be paged.\n   */\n  get isPaginationPaged() {\n    return this.paginationType === PaginationType.PAGINATION;\n  }\n\n  /**\n   * Whether pagination is configured to be a load-more button.\n   */\n  get isPaginationLoadMore() {\n    return this.paginationType === PaginationType.LOAD_MORE;\n  }\n\n  /**\n   * Whether pagination is configured to be a infinite-scroll.\n   */\n  get isInfiniteScrollPagination() {\n    return this.paginationType === PaginationType.INFINITE_SCROLL;\n  }\n\n  /**\n   * Returns whether all transactions have been loaded or not.\n   */\n  hasLoadedAll() {\n    return this.transactionsList && TransactionsList.hasLoadedAll(this.transactionsList);\n  }\n\n  onLoadMore() {\n    this.loadMore.emit();\n  }\n\n  onPageChange(page: number) {\n    this.pageChange.emit(page);\n  }\n\n  onDetailOpen(transaction: Transaction) {\n    this.isDetailsOpen = true;\n    this.transaction = transaction;\n    this.detailsOpen.emit(transaction);\n  }\n\n  /**\n   * Hide the transaction details.\n   */\n  closeDetails() {\n    this.isDetailsOpen = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.transactionsList) {\n      this.transactionsGroupedByDate = Object.entries(TransactionsGroupedByDate.groupByDate(this.transactionsList));\n    }\n  }\n\n  trackByFn(_index: number, group: Array<any>) {\n    return group[0];\n  }\n\n  ngAfterViewInit(): void {\n    if (this.isInfiniteScrollPagination) {\n      fromEvent(window, 'scroll')\n        .pipe(takeUntil(this.unsubscribeSubject$))\n        .subscribe(() => {\n          if (!(this.hasLoadedAll() || this.isLoading)) {\n            const element = document.documentElement;\n            const loadingOffsetHeight = element.offsetHeight * 1.5;\n            if (loadingOffsetHeight + element.scrollTop >= element.scrollHeight) {\n              this.onLoadMore();\n            }\n          }\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeSubject$.next();\n    this.unsubscribeSubject$.complete();\n  }\n}\n\n@Directive({\n  selector: '[bbTransactionsListPaginationCustomizable]',\n})\nexport class TransactionsListPaginationCustomizableDirective extends BbTemplate<TransactionsListComponent, undefined> {}\n\n@Directive({\n  selector: '[bbTransactionsListListCustomizable]',\n})\nexport class TransactionsListListCustomizableDirective extends BbTemplate<TransactionsListComponent, undefined> {}\n\n@Directive({\n  selector: '[bbTransactionsListEmptyStateCustomizable]',\n})\nexport class TransactionsListEmptyStateCustomizableDirective extends BbTemplate<TransactionsListComponent, undefined> {}\n","<ng-container *ngIf=\"!hostRef.isLoading || hostRef.isLoadingMore; else loadingState\">\n  <ng-container *ngIf=\"hostRef.hasItems(); else emptyState\">\n    <ng-container\n      *ngIf=\"hostRef.isInfiniteScrollPagination; else normalList\"\n      [ngTemplateOutlet]=\"bbTransactionsListWithInfiniteScroll\"\n      [ngTemplateOutletContext]=\"{ $implicit: hostRef }\"\n    ></ng-container>\n    <ng-template #normalList>\n      <ng-container bbTransactionsListListCustomizable [bbHostRef]=\"hostRef\"> </ng-container>\n      <ng-container bbTransactionsListPaginationCustomizable [bbHostRef]=\"hostRef\"> </ng-container>\n    </ng-template>\n  </ng-container>\n</ng-container>\n\n<ng-template #emptyState>\n  <ng-container bbTransactionsListEmptyStateCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n</ng-template>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui loaderSize=\"lg\"></bb-loading-indicator-ui>\n</ng-template>\n\n<ng-template #bbTransactionsListWithInfiniteScroll let-hostRef>\n  <div class=\"bb-list bb-block--md\">\n    <div class=\"bb-list__item\" *ngFor=\"let date of hostRef.transactionsGroupedByDate; trackBy: hostRef.trackByFn\">\n      <bb-transactions-list-item-group\n        [checkImagesList]=\"hostRef.checkImagesList\"\n        [transactions]=\"date[1]\"\n        [transactionDate]=\"date[0]\"\n        [showChangeCategory]=\"hostRef.showChangeCategory\"\n        [transactionDetailsLoadingStatus]=\"hostRef.transactionDetailsLoadingStatus\"\n        [inquireAndDisputeTopics]=\"hostRef.inquireAndDisputeTopics\"\n        (detailsOpen)=\"hostRef.onDetailOpen($event)\"\n      ></bb-transactions-list-item-group>\n    </div>\n    <ng-container *ngIf=\"hostRef.isLoading\">\n      <bb-loading-indicator-ui></bb-loading-indicator-ui>\n    </ng-container>\n    <span\n      class=\"bb-d-block bb-text-align-center\"\n      tabindex=\"0\"\n      i18n=\"Displayed message when all transactions had been loaded@@transactions.list.loadedAll\"\n      *ngIf=\"hostRef.hasLoadedAll()\"\n    >\n      All transactions have been loaded.\n    </span>\n  </div>\n  <bb-transaction-details-modal\n    *ngIf=\"hostRef.transaction && hostRef.hasModal\"\n    [transaction]=\"hostRef.transaction\"\n    [showChangeCategory]=\"hostRef.showChangeCategory\"\n    [checkImagesList]=\"hostRef.checkImagesList\"\n    [transactionDetailsLoadingStatus]=\"hostRef.transactionDetailsLoadingStatus\"\n    [isDetailsOpen]=\"hostRef.isDetailsOpen\"\n    [inquireAndDisputeTopics]=\"hostRef.inquireAndDisputeTopics\"\n    (detailsOpen)=\"hostRef.onDetailOpen($event)\"\n    (close)=\"hostRef.closeDetails()\"\n  ></bb-transaction-details-modal>\n</ng-template>\n\n<ng-template bbTransactionsListListCustomizable let-hostRef>\n  <div class=\"bb-list bb-block--md\">\n    <div class=\"bb-list__item\" *ngFor=\"let date of hostRef.transactionsGroupedByDate; trackBy: hostRef.trackByFn\">\n      <bb-transactions-list-item-group\n        [checkImagesList]=\"hostRef.checkImagesList\"\n        [transactions]=\"date[1]\"\n        [transactionDate]=\"date[0]\"\n        [showChangeCategory]=\"hostRef.showChangeCategory\"\n        [transactionDetailsLoadingStatus]=\"hostRef.transactionDetailsLoadingStatus\"\n        [inquireAndDisputeTopics]=\"hostRef.inquireAndDisputeTopics\"\n        (detailsOpen)=\"hostRef.onDetailOpen($event)\"\n      ></bb-transactions-list-item-group>\n    </div>\n  </div>\n  <bb-transaction-details-modal\n    *ngIf=\"hostRef.transaction && hostRef.hasModal\"\n    [transaction]=\"hostRef.transaction\"\n    [showChangeCategory]=\"hostRef.showChangeCategory\"\n    [checkImagesList]=\"hostRef.checkImagesList\"\n    [transactionDetailsLoadingStatus]=\"hostRef.transactionDetailsLoadingStatus\"\n    [isDetailsOpen]=\"hostRef.isDetailsOpen\"\n    [inquireAndDisputeTopics]=\"hostRef.inquireAndDisputeTopics\"\n    (detailsOpen)=\"hostRef.onDetailOpen($event)\"\n    (close)=\"hostRef.closeDetails()\"\n  ></bb-transaction-details-modal>\n</ng-template>\n\n<ng-template bbTransactionsListPaginationCustomizable let-hostRef>\n  <div class=\"bb-block bb-text-align-center\">\n    <bb-pagination-ui\n      class=\"bb-pagination\"\n      [page]=\"hostRef.currentPage\"\n      [boundaryLinks]=\"true\"\n      [directionLinks]=\"true\"\n      [totalItems]=\"hostRef.transactionsList.totalCount\"\n      [itemsPerPage]=\"hostRef.pageSize\"\n      [maxNavPages]=\"hostRef.maxNavPages\"\n      (pageChange)=\"hostRef.onPageChange($event)\"\n      *ngIf=\"hostRef.isPaginationPaged\"\n    ></bb-pagination-ui>\n    <div data-role=\"load-more\" *ngIf=\"hostRef.isPaginationLoadMore\">\n      <bb-load-button-ui\n        color=\"link\"\n        [isLoading]=\"hostRef.isLoadingMore\"\n        [from]=\"hostRef.currentPage\"\n        [size]=\"hostRef.pageSize\"\n        [totalCount]=\"hostRef.transactionsList.totalCount\"\n        (paramChange)=\"hostRef.onLoadMore($event)\"\n        i18n=\"Load more button, when there are still transactions to be loaded@@transactions.list.loadMore\"\n        *ngIf=\"!hostRef.hasLoadedAll()\"\n        >Load more</bb-load-button-ui\n      >\n      <span\n        i18n=\"Displayed message when all transactions had been loaded@@transactions.list.loadedAll\"\n        *ngIf=\"hostRef.hasLoadedAll()\"\n        >All transactions have been loaded.</span\n      >\n    </div>\n  </div>\n</ng-template>\n\n<ng-template bbTransactionsListEmptyStateCustomizable let-hostRef>\n  <div class=\"card-body bb-state-container\">\n    <!-- Success-empty -->\n    <bb-empty-state-ui\n      *ngIf=\"hostRef.transactionsList?.initialRequest === true; else filterSearchEmpty\"\n      title=\"No Transactions Found\"\n      i18n-title=\"No transactions are found@@transactions.state.noTransactionsFound.title\"\n      subtitle=\"You don't have any transactions to be displayed.\"\n      i18n-subtitle=\"No transactions to be displayed@@transactions.state.noTransactionsFound.subtitle\"\n      iconSize=\"xl\"\n      iconModifier=\"swap-horiz\"\n    ></bb-empty-state-ui>\n\n    <!-- Search/Filter empty result -->\n    <ng-template #filterSearchEmpty>\n      <bb-empty-state-ui\n        title=\"No Results Found\"\n        i18n-title=\"No results are found@@transactions.state.noResultsFound.title\"\n        subtitle=\"We can’t find what you’re looking for. Please try a different criteria.\"\n        i18n-subtitle=\"\n          Filter/Search returned no results, try a different criteria@@transactions.state.noResultsFound.subtitle\"\n        iconSize=\"xl\"\n        iconModifier=\"search\"\n      ></bb-empty-state-ui>\n    </ng-template>\n  </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { Transaction } from '@backbase/transactions-common-ang';\n\n@Component({\n  selector: 'bb-transaction-controls',\n  templateUrl: './transaction-controls.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionControlsComponent implements OnInit {\n  /**\n   * The transaction this component shows the details of.\n   */\n  @Input() transaction: Transaction | undefined;\n  /**\n   * Whether the notes editing form is shown or not.\n   */\n  @Input() isEditingNotes = false;\n  /**\n   * EventEmitter for triggering an isEditingNotesChange event.\n   */\n  @Output() readonly isEditingNotesChange = new EventEmitter<boolean>();\n\n  onAddNotes() {\n    this.isEditingNotesChange.emit(true);\n  }\n\n  ngOnInit() {\n    if (typeof this.transaction === 'undefined') {\n      throw new Error(`\"transaction\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n}\n","<button bbButton color=\"link\" (click)=\"onAddNotes()\" *ngIf=\"!isEditingNotes && !transaction?.notes\" bbFocus>\n  <bb-icon-ui name=\"note-add\"></bb-icon-ui>\n  <span class=\"sr-only\" i18n=\"Add a note to the current transaction@@transactions.details.addNote\">Add a note</span>\n</button>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Observable, of, Subscription } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n  AvailableFilterEnum,\n  AvailableFilters,\n  creditDebitIndicatorEnumValues,\n  defaultBillingStatusEnumValues,\n  defaultTransactionTypeEnumValues,\n  EnumValuesService,\n  TransactionsEnumValue,\n  TransactionsFilterOptions,\n} from '@backbase/transactions-common-ang';\n\nconst defaultAllOption = { name: 'All' };\n\n@Component({\n  selector: 'bb-transactions-filter',\n  templateUrl: './transactions-filter.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionsFilterComponent implements OnInit, OnDestroy {\n  /**\n   * EventEmitter for triggering a filter action.\n   */\n  @Output() readonly filter = new EventEmitter<TransactionsFilterOptions>();\n  /**\n   * EventEmitter to hide the filter options\n   */\n  @Output() readonly closeFilter = new EventEmitter();\n  /**\n   * EventEmitter with the amount of active filters\n   */\n  @Output() readonly filterCount = new EventEmitter<number>();\n  /**\n   * Configuration parameter to show/hide billing status filter\n   */\n  @Input() hideBillingStatus = false;\n  /**\n   * Configuration parameter to show/hide filters\n   */\n  @Input() availableFilters: AvailableFilters = [];\n\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n\n  readonly availableFilterEnum: typeof AvailableFilterEnum = AvailableFilterEnum;\n\n  transactionsFilterForm = new FormGroup({\n    creditDebitIndicator: new FormControl(creditDebitIndicatorEnumValues[0]),\n    types: new FormControl(),\n    billingStatus: new FormControl(),\n    amount: new FormGroup({\n      from: new FormControl(undefined, Validators.min(0)),\n      to: new FormControl(undefined, Validators.min(0)),\n    }),\n    date: new FormGroup({\n      from: new FormControl(''),\n      to: new FormControl(''),\n    }),\n    categories: new FormControl(),\n    checkSerialNumber: new FormGroup({\n      from: new FormControl(undefined, Validators.min(0)),\n      to: new FormControl(undefined, Validators.min(0)),\n    }),\n  });\n\n  creditDebitIndicatorOptions: Array<TransactionsEnumValue> = creditDebitIndicatorEnumValues;\n\n  transactionTypeOptions: Observable<Array<TransactionsEnumValue>>;\n\n  billingStatusOptions: Observable<Array<TransactionsEnumValue>>;\n\n  private subscriptions = new Subscription();\n\n  ngOnInit() {\n    this.subscriptions.add(this.transactionTypeOptions.subscribe(this.setDefaultAllOption('types')));\n\n    this.subscriptions.add(this.billingStatusOptions.subscribe(this.setDefaultAllOption('billingStatus')));\n\n    this.subscriptions.add(\n      this.serialNumberFormGroup?.valueChanges.subscribe(() => {\n        this.fromSerialNumber?.setValidators(Validators.max(this.toSerialNumber?.value));\n        this.toSerialNumber?.setValidators(Validators.min(this.fromSerialNumber?.value || 0));\n        this.fromSerialNumber?.updateValueAndValidity({ emitEvent: false });\n        this.toSerialNumber?.updateValueAndValidity({ emitEvent: false });\n      }),\n    );\n\n    this.subscriptions.add(\n      this.amountFormGroup?.valueChanges.subscribe(() => {\n        this.fromAmount?.setValidators(Validators.max(this.toAmount?.value));\n        this.toAmount?.setValidators(Validators.min(this.fromAmount?.value || 0));\n        this.fromAmount?.updateValueAndValidity({ emitEvent: false });\n        this.toAmount?.updateValueAndValidity({ emitEvent: false });\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  compareByValue(optionListedValue: any, placeholderValue: any) {\n    if (!optionListedValue || !placeholderValue) {\n      return;\n    }\n\n    return optionListedValue.value === placeholderValue.value;\n  }\n\n  private readonly setDefaultAllOption = (field: string) => (data: any) => {\n    const control = this.transactionsFilterForm.get(field);\n    if (control) {\n      control.setValue(data[0]);\n    }\n  };\n\n  /**\n   * Emit event to apply filter.\n   *\n   * @param filterParams - Options to filter transactions list with.\n   */\n  onFilter(filterParams: TransactionsFilterOptions) {\n    this.filterCount.emit(this.activeFilterCounter);\n    this.filter.emit(filterParams);\n  }\n\n  /**\n   * Checks all the form fields and looks for differences with a default model to define if a filter was applied or not\n   */\n  private get activeFilterCounter(): number {\n    const fields = [\n      this.fromDate,\n      this.toDate,\n      this.fromAmount,\n      this.toAmount,\n      this.fromSerialNumber,\n      this.toSerialNumber,\n      this.creditDebitIndicator,\n      this.transactionType,\n      this.billingStatus,\n    ];\n    const activeFilters = fields.reduce((count, field) => (this.isFilterApplied(field) ? ++count : count), 0);\n\n    return activeFilters;\n  }\n\n  private isFilterApplied(control: AbstractControl | null | undefined) {\n    if (typeof control?.value === 'object' && control.value !== null) {\n      return JSON.stringify(control.value) !== JSON.stringify(defaultAllOption);\n    } else {\n      return control?.valid && (!!control.value || control.value === 0);\n    }\n  }\n\n  /**\n   * Clear filter form and reset values to default.\n   */\n  onClearFilter() {\n    this.transactionsFilterForm.reset({\n      creditDebitIndicator: creditDebitIndicatorEnumValues[0],\n      types: defaultAllOption,\n      billingStatus: defaultAllOption,\n      date: {\n        from: '',\n        to: '',\n      },\n    });\n\n    this.transactionsFilterForm.markAsPristine();\n    this.onFilter({});\n  }\n\n  /**\n   * Emit event to close this filter form.\n   */\n  onCloseFilter() {\n    this.closeFilter.emit();\n  }\n\n  private get dateFormGroup() {\n    return this.transactionsFilterForm.get('date');\n  }\n\n  get fromDate() {\n    return this.dateFormGroup?.get('from');\n  }\n\n  get toDate() {\n    return this.dateFormGroup?.get('to');\n  }\n\n  private get amountFormGroup() {\n    return this.transactionsFilterForm.get('amount');\n  }\n\n  private get fromAmount() {\n    return this.amountFormGroup?.get('from');\n  }\n\n  private get toAmount() {\n    return this.amountFormGroup?.get('to');\n  }\n\n  private get serialNumberFormGroup() {\n    return this.transactionsFilterForm.get('checkSerialNumber');\n  }\n\n  private get fromSerialNumber() {\n    return this.serialNumberFormGroup?.get('from');\n  }\n\n  private get toSerialNumber() {\n    return this.serialNumberFormGroup?.get('to');\n  }\n\n  private get creditDebitIndicator() {\n    return this.transactionsFilterForm.get('creditDebitIndicator');\n  }\n\n  private get transactionType() {\n    return this.transactionsFilterForm.get('types');\n  }\n\n  private get billingStatus() {\n    return this.transactionsFilterForm.get('billingStatus');\n  }\n\n  formatDateToString(dateArg?: string | null | undefined) {\n    if (!!dateArg && new Date(dateArg).getTime()) {\n      const argDate = new Date(dateArg);\n      const formatedArgDate = new Date(argDate.getFullYear(), argDate.getMonth(), argDate.getDate());\n\n      return formatedArgDate.toISOString();\n    }\n\n    return;\n  }\n\n  isFieldValid(fieldGroup: string, fieldName: string): boolean {\n    const fieldControl = this.transactionsFilterForm.get(fieldGroup)?.get(fieldName);\n\n    return !!fieldControl?.valid || !!fieldControl?.untouched;\n  }\n\n  constructor(private readonly enumValuesService: EnumValuesService) {\n    const insertDefaultValue = (data: Array<TransactionsEnumValue>) => [defaultAllOption, ...data];\n\n    this.transactionTypeOptions = this.enumValuesService.getEnumValues('type').pipe(\n      map(insertDefaultValue),\n      catchError(() => of(defaultTransactionTypeEnumValues)),\n    );\n\n    this.billingStatusOptions = this.enumValuesService.getEnumValues('billingStatus').pipe(\n      map(insertDefaultValue),\n      catchError(() => of(defaultBillingStatusEnumValues)),\n    );\n  }\n}\n\n@Directive({\n  selector: '[bbTransactionsListFilterCustomizable]',\n})\nexport class TransactionsListFilterCustomizableDirective extends BbTemplate<TransactionsFilterComponent, undefined> {}\n","<ng-container bbTransactionsListFilterCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbTransactionsListFilterCustomizable let-hostRef>\n  <div class=\"bb-transactions-list-filter\">\n    <form\n      class=\"card-body\"\n      [formGroup]=\"hostRef.transactionsFilterForm\"\n      (ngSubmit)=\"hostRef.onFilter(hostRef.transactionsFilterForm.value)\"\n      novalidate\n      autocomplete=\"off\"\n    >\n      <div class=\"bb-block bb-block--sm\">\n        <div class=\"row\">\n          <!-- Date range -->\n          <div class=\"col-lg-8\" *ngIf=\"hostRef.availableFilters.includes(availableFilterEnum.Date)\">\n            <div class=\"row\" formGroupName=\"date\">\n              <div class=\"col-12 col-sm-6\">\n                <div class=\"form-group\">\n                  <bb-input-datepicker-ui\n                    name=\"dateRange\"\n                    data-role=\"start-date\"\n                    label=\"Start date\"\n                    i18n-label=\"Transaction filter for the start Date Range@@transactions.filter.form.startDate.label\"\n                    formControlName=\"from\"\n                    [maxDate]=\"hostRef.formatDateToString(hostRef.toDate?.value)\"\n                  ></bb-input-datepicker-ui>\n                </div>\n              </div>\n\n              <div class=\"col-12 col-sm-6\">\n                <div class=\"form-group\">\n                  <bb-input-datepicker-ui\n                    name=\"dateRange\"\n                    data-role=\"end-date\"\n                    label=\"End date\"\n                    i18n-label=\"Transaction filter for the end Date Range@@transactions.filter.form.endDate.label\"\n                    formControlName=\"to\"\n                    [minDate]=\"hostRef.formatDateToString(hostRef.fromDate?.value)\"\n                  ></bb-input-datepicker-ui>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- Credit/debit indicator -->\n          <div class=\"col-lg-4\" *ngIf=\"hostRef.availableFilters.includes(availableFilterEnum.CreditDebitIndicator)\">\n            <div class=\"form-group\">\n              <bb-dropdown-single-select-ui\n                label=\"Credit or debit\"\n                data-role=\"credit-debit-indicator-label\"\n                i18n-label=\"\n                  Transactions filter for credit or debit@@transactions.filter.form.creditDebitIndicator.label\"\n                [options]=\"hostRef.creditDebitIndicatorOptions\"\n                displayAttributePath=\"name\"\n                formControlName=\"creditDebitIndicator\"\n                [compareWithFn]=\"hostRef.compareByValue\"\n              ></bb-dropdown-single-select-ui>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <!-- Amount range -->\n          <div\n            class=\"col-lg-6 form-group\"\n            *ngIf=\"hostRef.availableFilters.includes(availableFilterEnum.Amount)\"\n            bbDynamicId\n            #amountGroup\n          >\n            <div class=\"bb-stack\" formGroupName=\"amount\">\n              <div class=\"bb-stack__item bb-transactions-list-filter__field\">\n                <label\n                  bbDynamicId\n                  #fromAmountLabel\n                  i18n=\"Transactions filter Minimun amount@@transactions.filter.minAmount.label\"\n                >\n                  <abbr title=\"Minimum\">Min.</abbr> amount\n                </label>\n                <bb-input-number-ui\n                  formControlName=\"from\"\n                  data-role=\"amount-from\"\n                  [aria-labelledby]=\"fromAmountLabel?.id\"\n                  placeholder=\"From\"\n                  i18n-placeholder=\"\n                    Initial filtering value|Starting value|Lower amount@@transactions.filter.form.amountFrom.placeholder\"\n                  aria-describedby=\"{{ amountGroup?.id }}-error\"\n                  [min]=\"0\"\n                ></bb-input-number-ui>\n              </div>\n\n              <div class=\"bb-stack__item bb-transactions-list-filter__field\">\n                <label\n                  bbDynamicId\n                  #toAmountLabel\n                  i18n=\"Transactions filter Maximun amount@@transactions.filter.maxAmount.label\"\n                >\n                  <abbr title=\"Maximum\">Max.</abbr> amount\n                </label>\n                <bb-input-number-ui\n                  formControlName=\"to\"\n                  data-role=\"amount-to\"\n                  placeholder=\"To\"\n                  i18n-placeholder=\"\n                    Ending filtering value|End value|Higher amount@@transactions.filter.form.amountTo.placeholder\"\n                  [aria-labelledby]=\"toAmountLabel?.id\"\n                  aria-describedby=\"{{ amountGroup?.id }}-error\"\n                  [min]=\"0\"\n                ></bb-input-number-ui>\n              </div>\n            </div>\n            <bb-input-validation-message-ui\n              [showErrors]=\"!hostRef.isFieldValid('amount', 'from') || !hostRef.isFieldValid('amount', 'to')\"\n              messageId=\"{{ amountGroup?.id }}-error\"\n            >\n              <span\n                i18n=\"\n                  Max. amount cannot be smaller than the min. amount|Error Message when max amount is smaller than min\n                  amount@@transactions.filter.form.error.amountRange\"\n              >\n                Maximum amount cannot be smaller than the minimum amount\n              </span>\n            </bb-input-validation-message-ui>\n          </div>\n          <!-- Transaction Type -->\n          <div class=\"col-lg-6\" *ngIf=\"hostRef.availableFilters.includes(availableFilterEnum.Types)\">\n            <div class=\"form-group\">\n              <bb-dropdown-single-select-ui\n                label=\"Transaction type\"\n                data-role=\"transaction-type-label\"\n                i18n-label=\"\n                  Transaction filter for the types of transaction@@transactions.filter.form.transactionType.label\"\n                [options]=\"(hostRef.transactionTypeOptions | async)!\"\n                displayAttributePath=\"name\"\n                formControlName=\"types\"\n                [compareWithFn]=\"hostRef.compareByValue\"\n              ></bb-dropdown-single-select-ui>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <!-- Billing status -->\n          <div\n            class=\"col-lg-6\"\n            *ngIf=\"!hideBillingStatus && hostRef.availableFilters.includes(availableFilterEnum.BillingStatus)\"\n          >\n            <div class=\"form-group\">\n              <bb-dropdown-single-select-ui\n                label=\"Billing status\"\n                data-role=\"billing-status-label\"\n                i18n-label=\"Transactions filter for Billing Status@@transactions.filter.form.billingStatus.label\"\n                [options]=\"(hostRef.billingStatusOptions | async)!\"\n                displayAttributePath=\"name\"\n                formControlName=\"billingStatus\"\n                [compareWithFn]=\"hostRef.compareByValue\"\n              ></bb-dropdown-single-select-ui>\n            </div>\n          </div>\n          <!-- Check range -->\n          <div\n            class=\"col-lg-6 form-group\"\n            *ngIf=\"hostRef.availableFilters.includes(availableFilterEnum.CheckSerialNumber)\"\n          >\n            <div class=\"bb-stack\" formGroupName=\"checkSerialNumber\" bbDynamicId #rangeGroup>\n              <div class=\"bb-stack__item bb-transactions-list-filter__field\">\n                <label\n                  bbDynamicId\n                  #fromCheckLabel\n                  i18n=\"Transactions filter First check number range@@transactions.filter.firstCheckSerialNumber.label\"\n                >\n                  First check <abbr title=\"Number\">Nº</abbr>\n                </label>\n                <bb-input-number-ui\n                  [aria-labelledby]=\"fromCheckLabel?.id\"\n                  formControlName=\"from\"\n                  data-role=\"check-from\"\n                  placeholder=\"From\"\n                  i18n-placeholder=\"'From' number range input@@transactions.filter.form.rangeFrom.placeholder\"\n                  aria-describedby=\"{{ rangeGroup?.id }}-error\"\n                  [min]=\"0\"\n                ></bb-input-number-ui>\n              </div>\n              <div class=\"bb-stack__item bb-transactions-list-filter__field\">\n                <label\n                  bbDynamicId\n                  #toCheckLabel\n                  i18n=\"Transactions filter Last check number range@@transactions.filter.lastCheckSerialNumber.label\"\n                >\n                  Last check <abbr title=\"Number\">Nº</abbr>\n                </label>\n                <bb-input-number-ui\n                  [aria-labelledby]=\"toCheckLabel?.id\"\n                  formControlName=\"to\"\n                  data-role=\"check-to\"\n                  placeholder=\"To\"\n                  i18n-placeholder=\"'To' number range input@@transactions.filter.form.rangeTo.placeholder\"\n                  aria-describedby=\"{{ rangeGroup?.id }}-error\"\n                  [min]=\"0\"\n                ></bb-input-number-ui>\n              </div>\n            </div>\n            <bb-input-validation-message-ui\n              [showErrors]=\"\n                !hostRef.isFieldValid('checkSerialNumber', 'from') || !hostRef.isFieldValid('checkSerialNumber', 'to')\n              \"\n              messageId=\"{{ rangeGroup?.id }}-error\"\n            >\n              <span\n                i18n=\"\n                  Last check nº cannot be smaller than first check nº|Error Message when last check nº is smaller than\n                  first check nº@@transactions.filter.form.error.checkSerialRange\"\n              >\n                Last check number cannot be smaller than first check number\n              </span>\n            </bb-input-validation-message-ui>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <!-- Apply -->\n        <button\n          bbButton\n          type=\"submit\"\n          color=\"primary\"\n          class=\"bb-button-bar__button\"\n          data-role=\"apply\"\n          i18n-title=\"Apply button|Apply selected filters@@transactions.filter.form.button.apply\"\n          title=\"Apply\"\n          i18n=\"Apply button|Apply selected filters@@transactions.filter.form.button.apply\"\n        >\n          Apply\n        </button>\n\n        <!-- Close -->\n        <button\n          bbButton\n          type=\"button\"\n          color=\"secondary\"\n          class=\"bb-button-bar__button\"\n          data-role=\"cancel\"\n          i18n-title=\"Close button|Close filter menu@@transactions.filter.form.button.close\"\n          title=\"Close\"\n          i18n=\"Close button|Close filter menu@@transactions.filter.form.button.close\"\n          (click)=\"hostRef.onCloseFilter()\"\n        >\n          Close\n        </button>\n\n        <!-- Clear filters -->\n        <button\n          bbButton\n          type=\"button\"\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          data-role=\"clear-all\"\n          i18n-title=\"Clear Filters button|Clean filters@@transactions.filter.form.button.clearAll\"\n          title=\"Clear filters\"\n          (click)=\"hostRef.onClearFilter()\"\n          *ngIf=\"hostRef.transactionsFilterForm.dirty\"\n          i18n=\"Clear filters button|Clean filters@@transactions.filter.form.button.clearAll\"\n        >\n          Clear filters\n        </button>\n      </div>\n    </form>\n  </div>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, Directive, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { BaseTransactionsControls } from '@backbase/transactions-common-ang';\n\n@Component({\n  selector: 'bb-transactions-controls',\n  templateUrl: './transactions-controls.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionsControlsComponent extends BaseTransactionsControls implements OnInit {\n  /**\n   * EventEmitter for triggering a search action.\n   */\n  @Output() readonly print = new EventEmitter();\n\n  /**\n   * Configuration parameter to show/hide billing status filter\n   */\n  @Input() hideBillingStatus = false;\n\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n\n  /**\n   * Amount of active filters\n   */\n  activeFilters = 0;\n\n  /**\n   * Print event callback\n   */\n  onPrint() {\n    this.print.emit();\n  }\n\n  /**\n   *  Filter Count event callback\n   */\n  onFilterCount(activeFilters: number) {\n    this.activeFilters = activeFilters;\n  }\n}\n\n@Directive({\n  selector: '[bbTransactionsListControlsCustomizable]',\n})\nexport class TransactionsListControlsCustomizableDirective extends BbTemplate<\n  TransactionsControlsComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbTransactionsListControlsButtonsCustomizable]',\n})\nexport class TransactionsListControlsButtonsCustomizableDirective extends BbTemplate<\n  TransactionsControlsComponent,\n  undefined\n> {}\n","<ng-container bbTransactionsListControlsCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n<ng-template bbTransactionsListControlsCustomizable let-hostRef>\n  <div class=\"card-header\" [ngClass]=\"{ 'bb-block--lg': hostRef.isFilterOpen }\">\n    <div class=\"bb-stack bb-stack--wrap\">\n      <!-- Search button -->\n      <div class=\"bb-transaction-list-controls__search-box bb-stack__item\">\n        <div class=\"input-group\">\n          <label class=\"sr-only\" bbDynamicId #searchLabel i18n=\"search transaction filter@@transactions.search.label\">\n            Search transaction filter\n          </label>\n          <bb-search-box-ui\n            [showSearch]=\"true\"\n            [showClear]=\"true\"\n            placeholder=\"Search\"\n            [aria-labelledby]=\"searchLabel?.id\"\n            searchLabel=\"search\"\n            i18n-searchLabel=\"search label when button in focus@@transactions.searchLabel.search.box\"\n            i18n-placeholder=\"search transactions placeholder@@transactions.ariaLabel.search.placeholder\"\n            (submit)=\"hostRef.onSearch($event)\"\n            (clear)=\"hostRef.onSearch('')\"\n          >\n          </bb-search-box-ui>\n        </div>\n      </div>\n      <!-- Filter button -->\n      <div\n        class=\"bb-stack__item bb-stack__item--fill--md-up align-self-start bb-transaction-list-controls__filter-buttons\"\n      >\n        <div class=\"bb-stack\">\n          <div class=\"bb-stack__item bb-stack__item--fill--md-up\">\n            <button\n              bbButton\n              *ngIf=\"hostRef.activeFilters\"\n              [attr.aria-expanded]=\"!!hostRef.isFilterOpen\"\n              [color]=\"hostRef.isFilterApplied || hostRef.isFilterOpen ? 'primary' : 'secondary'\"\n              data-role=\"filter\"\n              (click)=\"hostRef.toggleFilter()\"\n            >\n              <bb-icon-ui name=\"filter\"></bb-icon-ui>\n              <span\n                class=\"bb-transaction-list-controls__long-button\"\n                i18n=\"Filter toggle button@@transactions.filtersApplied.button\"\n                >Filters applied</span\n              >\n              <span\n                class=\"bb-transaction-list-controls__short-button\"\n                i18n=\"Filter toggle button@@transactions.filters.button\"\n                >Filters</span\n              >\n              <span>&nbsp;({{ hostRef.activeFilters }})</span>\n            </button>\n\n            <button\n              bbButton\n              *ngIf=\"!hostRef.activeFilters\"\n              [attr.aria-expanded]=\"!!hostRef.isFilterOpen\"\n              [color]=\"hostRef.isFilterApplied || hostRef.isFilterOpen ? 'primary' : 'secondary'\"\n              data-role=\"filter\"\n              (click)=\"hostRef.toggleFilter()\"\n            >\n              <bb-icon-ui name=\"filter\"></bb-icon-ui>\n              <ng-container i18n=\"Filter toggle button@@transactions.filter.button\">Filter</ng-container>\n            </button>\n          </div>\n          <ng-container bbTransactionsListControlsButtonsCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n  <bb-transactions-filter\n    (filter)=\"hostRef.onFilter($event)\"\n    (filterCount)=\"hostRef.onFilterCount($event)\"\n    (closeFilter)=\"hostRef.onClose()\"\n    [hidden]=\"!hostRef.isFilterOpen\"\n    [hideBillingStatus]=\"hostRef.hideBillingStatus\"\n    [availableFilters]=\"hostRef.availableFilters\"\n  ></bb-transactions-filter>\n</ng-template>\n\n<ng-template bbTransactionsListControlsButtonsCustomizable let-hostRef>\n  <!-- Print button -->\n  <button\n    bbButton\n    aria-label=\"Print\"\n    i18n-aria-label=\"Print button@@transactions.print.button\"\n    class=\"bb-stack__item\"\n    color=\"secondary\"\n    [circle]=\"true\"\n    (click)=\"hostRef.onPrint()\"\n  >\n    <bb-icon-ui name=\"print\"></bb-icon-ui>\n  </button>\n  <!-- Export button -->\n  <bb-dropdown-menu-ui\n    *ngIf=\"hostRef.exportConfig?.length\"\n    container=\"body\"\n    icon=\"expand-more\"\n    btnColor=\"secondary\"\n    ariaLabel=\"available export types\"\n    i18n-ariaLabel=\"Currently available export types dropdown@@transactions.list.exportList.ariaLabel\"\n    [btnCircle]=\"true\"\n    icon=\"get-app\"\n    iconSize=\"md\"\n  >\n    <ng-template bbDropdownMenuItem>\n      <a\n        *ngFor=\"let exportType of hostRef.exportConfig\"\n        role=\"menuitem\"\n        class=\"dropdown-item\"\n        (click)=\"hostRef.onExport(exportType)\"\n        href=\"javaScript:void(0);\"\n      >\n        <span>{{ exportType.name }}</span>\n      </a>\n    </ng-template>\n  </bb-dropdown-menu-ui>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport {\n  InquireAndDisputeTopics,\n  LoadingState,\n  PaginationType,\n  Transaction,\n  TransactionsList,\n} from '@backbase/transactions-common-ang';\n\n@Component({\n  selector: 'bb-pending-transactions-list',\n  templateUrl: './transactions-list-pending-transactions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionsListPendingTransactionsComponent {\n  /**\n   * List of pending transactions.\n   */\n  @Input() transactionsList: TransactionsList | undefined;\n  /**\n   * whether to show pending transactions on top or not.\n   */\n  @Input() showPendingOnTop: boolean | undefined;\n  /**\n   * The current page of transactions that is being displayed.\n   */\n  @Input() currentPage: number | undefined;\n  /**\n   * The page size.\n   */\n  @Input() pageSize: number | undefined;\n  /**\n   * The pagination type (`load-more`, `pagination` or undefined).\n   */\n  @Input() paginationType: PaginationType | undefined;\n  /**\n   * Whether new transactions are being loaded.  By default, this is `LoadingState.Loaded`.\n   */\n  @Input() loadingState: LoadingState = LoadingState.Loaded;\n  /**\n   * The maximum number of pages to show (only relevant when using pagination).\n   */\n  @Input() maxNavPages: number | undefined;\n  /**\n   * Boolean that decides if the Change Category will be displayed.\n   */\n  @Input() showChangeCategory: boolean | undefined;\n  @Input() inquireAndDisputeTopics: InquireAndDisputeTopics | undefined;\n\n  /**\n   * Event emitter that triggers when the details are open\n   */\n  @Output() readonly detailsOpen = new EventEmitter<Transaction>();\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n\n  get isLoading() {\n    return this.loadingState !== LoadingState.Loaded;\n  }\n\n  paginationOnTop() {\n    if (this.currentPage === 0) {\n      return true;\n    }\n    if (this.currentPage && this.currentPage > 0) {\n      if (this.paginationType === PaginationType.PAGINATION) {\n        return false;\n      }\n      if (this.paginationType === PaginationType.LOAD_MORE || this.paginationType === PaginationType.INFINITE_SCROLL) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  onDetailOpen(transaction: Transaction) {\n    this.detailsOpen.emit(transaction);\n  }\n\n  trackByFn(_index: number, element: Transaction) {\n    return element.id;\n  }\n}\n\n@Directive({\n  selector: '[bbPendingTransactionsListCustomizable]',\n})\nexport class PendingTransactionsListCustomizableDirective extends BbTemplate<\n  TransactionsListPendingTransactionsComponent,\n  undefined\n> {}\n","<ng-container *ngIf=\"!isLoading; else loadingState\">\n  <ng-container\n    *ngIf=\"transactionsList?.items?.length && paginationOnTop()\"\n    bbPendingTransactionsListCustomizable\n    [bbHostRef]=\"hostRef\"\n  >\n  </ng-container>\n</ng-container>\n\n<ng-template bbPendingTransactionsListCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--md\">\n    <strong\n      role=\"heading\"\n      class=\"bb-block bb-block--md\"\n      aria-level=\"2\"\n      aria-label=\" A pending transaction is a payment that has been authorized but has not been processed. For\n      instance, a transaction that is still waiting for the merchant to process it or a transaction requiring overnight\n      processing because it was made after the cutoff time of the financial institution.\"\n      i18n-aria-label=\"Pending transactions header aria-label@@transactions.list.pending.header.aria-label\"\n      tabindex=\"0\"\n    >\n      <div class=\"bb-transactions-list-pending-header bb-block--md\">\n        <span class=\"bb-subheader\" i18n=\"Pending transactions header@@transactions.list.pending.header\">Pending</span>\n        <span class=\"bb-transactions-list-pending-header__tooltip\">\n          <bb-icon-ui\n            role=\"tooltip\"\n            name=\"info\"\n            size=\"sm\"\n            [bbTooltip]=\"tipContent\"\n            placement=\"right\"\n            triggers=\"hover click\"\n            bbAccessibilityKeyboard\n          ></bb-icon-ui>\n        </span>\n      </div>\n    </strong>\n    <div class=\"bb-list\">\n      <div class=\"bb-list__item\">\n        <div\n          class=\"bb-block--md\"\n          *ngFor=\"let transaction of hostRef.transactionsList?.items; trackBy: hostRef.trackByFn\"\n        >\n          <bb-transactions-list-item\n            [transaction]=\"transaction\"\n            [showBillingStatus]=\"true\"\n            [showChangeCategory]=\"hostRef.showChangeCategory\"\n            [inquireAndDisputeTopics]=\"hostRef.inquireAndDisputeTopics\"\n            (detailsOpen)=\"hostRef.onDetailOpen($event)\"\n          ></bb-transactions-list-item>\n        </div>\n      </div>\n      <!-- forcing a line separator in bb-list-->\n      <div class=\"bb-list__item\"></div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #tipContent>\n  <div\n    class=\"bb-text-align-left\"\n    i18n=\"\n      Description inside a tooltip, describing what a Pending Transaction\n      is@@transactions.list.pending.tooltip.description\"\n  >\n    A pending transaction is a payment that has been authorized but has not been processed. For instance, a transaction\n    that is still waiting for the merchant to process it or a transaction requiring overnight processing because it was\n    made after the cutoff time of the financial institution.\n  </div>\n</ng-template>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui loaderSize=\"lg\"></bb-loading-indicator-ui>\n</ng-template>\n","import { ChangeDetectionStrategy, Inject, Optional } from '@angular/core';\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { PUBSUB, Pubsub } from '@backbase/foundation-ang/web-sdk';\nimport {\n  TransactionsService,\n  WidgetPropertiesService,\n  BaseTransactionsContainer,\n  PendingTransactionsService,\n  TransactionDetailsService,\n  showDetailsConfigToken,\n  AvailableFiltersConfigService,\n  PaginationType,\n} from '@backbase/transactions-common-ang';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\n@Component({\n  selector: 'bb-transactions-container',\n  templateUrl: './transactions-container.component.html',\n  providers: [TransactionsService, PendingTransactionsService, TransactionDetailsService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionsContainerComponent extends BaseTransactionsContainer implements OnInit {\n  constructor(\n    protected readonly model: TransactionsService,\n    protected readonly widgetProperties: WidgetPropertiesService,\n    protected readonly cd: ChangeDetectorRef,\n    @Inject(PUBSUB) protected readonly eventBusService: Pubsub,\n    protected readonly notificationService: NotificationService,\n    protected readonly pendingTransactionsService: PendingTransactionsService,\n    protected readonly transactionDetailsService: TransactionDetailsService,\n    protected readonly availableFiltersConfigService: AvailableFiltersConfigService,\n    // eslint-disable-next-line\n    @Optional()\n    // eslint-disable-next-line\n    @Inject(showDetailsConfigToken)\n    readonly showDetailsConfig?: boolean,\n  ) {\n    super(\n      model,\n      widgetProperties,\n      cd,\n      eventBusService,\n      notificationService,\n      pendingTransactionsService,\n      transactionDetailsService,\n      availableFiltersConfigService,\n      showDetailsConfig,\n    );\n\n    if (this.showDetailsConfig === null || this.showDetailsConfig === undefined) {\n      this.showDetailsConfig = true;\n    }\n  }\n\n  /**\n   * Reference to instance of customizable component.\n   */\n  readonly hostRef = this;\n  readonly PaginationType = PaginationType;\n}\n","<ng-container\n  *ngIf=\"\n    (hostRef.paginationType | async)! === PaginationType.INFINITE_SCROLL &&\n    (selectedAccount | async)! as selectedAccount\n  \"\n>\n  <ng-container\n    [ngTemplateOutlet]=\"bbPaginatedTransactionsContainer\"\n    [ngTemplateOutletContext]=\"{ $implicit: hostRef }\"\n  ></ng-container>\n  <ng-container *ngIf=\"hostRef.errors\">\n    <div class=\"mb-4\">\n      <bb-alert-ui\n        *ngFor=\"let error of hostRef.errors\"\n        title=\"Couldn't load more transactions\"\n        modifier=\"error\"\n        attr.data-role=\"alert-error\"\n      >\n        <p>{{ error?.message }}</p>\n        <a [routerLink]=\"\" class=\"alert-link\" (click)=\"hostRef.retry()\">click here</a>\n      </bb-alert-ui>\n    </div>\n  </ng-container>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    (hostRef.paginationType | async) !== PaginationType.INFINITE_SCROLL && (selectedAccount | async) as selectedAccount\n  \"\n>\n  <ng-container *ngIf=\"!errors; else errorState\">\n    <ng-container\n      [ngTemplateOutlet]=\"bbPaginatedTransactionsContainer\"\n      [ngTemplateOutletContext]=\"{ $implicit: hostRef }\"\n    ></ng-container>\n  </ng-container>\n\n  <ng-template #notificationErrorUpdateHeader>\n    <ng-container [ngSwitch]=\"hostRef.storedExportType?.reason\">\n      <ng-container *ngSwitchCase=\"'MIXED_PRODUCT_KINDS'\">\n        {{ hostRef.storedExportType?.name }}\n        <ng-container\n          i18n=\"\n            Invalid export type header for mixed products kinds|Notification header due to mixed product\n            kinds@@transaction.list.toolTip.error.header.MixedProductKinds\"\n        >\n          export not supported\n        </ng-container>\n      </ng-container>\n\n      <ng-container *ngSwitchCase=\"'UNSUPPORTED_PRODUCT_KIND'\">\n        {{ hostRef.storedExportType?.name }}\n        <ng-container\n          i18n=\"\n            Invalid export type header for unsupported product kind|Notification header due to unsupported product\n            kind@@transaction.list.toolTip.error.header.UnsupportedProductKind\"\n        >\n          export not supported\n        </ng-container>\n      </ng-container>\n\n      <ng-container\n        *ngSwitchCase=\"'TOO_MANY_ITEMS'\"\n        i18n=\"\n          Invalid export type header for too many items|Notification header due to too many\n          transactions@@transaction.list.toolTip.error.header.TooManyItems\"\n      >\n        Maximum export threshold exceeded\n      </ng-container>\n\n      <ng-container\n        *ngSwitchCase=\"'MULTIPLE_PRODUCTS'\"\n        i18n=\"\n          Invalid export type header for Multiple Products |Notification header due to Multiple\n          Products@@transaction.list.toolTip.error.header.MultipleProducts\"\n      >\n        Multiple products are selected\n      </ng-container>\n    </ng-container>\n  </ng-template>\n\n  <ng-template #notificationErrorUpdateMessage>\n    <ng-container [ngSwitch]=\"hostRef.storedExportType?.reason\">\n      <ng-container\n        *ngSwitchCase=\"'MIXED_PRODUCT_KINDS'\"\n        i18n=\"\n          Invalid export type mixed products kinds|Notification message due to mixed product\n          kinds@@transaction.list.toolTip.error.message.MixedProductKinds\"\n      >\n        This export is not supported for your selection\n      </ng-container>\n\n      <ng-container\n        *ngSwitchCase=\"'UNSUPPORTED_PRODUCT_KIND'\"\n        i18n=\"\n          Invalid export type unsupported product kind|Notification message due to unsupported product\n          kind@@transaction.list.toolTip.error.message.UnsupportedProductKind\"\n      >\n        This export is not supported for your selection\n      </ng-container>\n\n      <ng-container\n        *ngSwitchCase=\"'TOO_MANY_ITEMS'\"\n        i18n=\"\n          Invalid export type too many items|Notification message due to too many\n          transactions@@transaction.list.toolTip.error.message.TooManyItems\"\n      >\n        Please provide different filter\\search criteria\n      </ng-container>\n\n      <ng-container\n        *ngSwitchCase=\"'MULTIPLE_PRODUCTS'\"\n        i18n=\"\n          Invalid export type Multiple Products|Notification message due to Multiple\n          Products@@transaction.list.toolTip.error.message.MultipleProducts\"\n      >\n        Please select only one product. For example, only one current account\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</ng-container>\n\n<ng-container\n  *ngIf=\"!(selectedAccount | async) as selectedAccount\"\n  bbTransactionsNoAccountSelectedStateCustomizable\n  [bbHostRef]=\"hostRef\"\n>\n</ng-container>\n\n<ng-template #errorState>\n  <ng-container bbTransactionsErrorStateCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n</ng-template>\n\n<ng-template bbTransactionsNoAccountSelectedStateCustomizable let-hostRef>\n  <div class=\"card\">\n    <div class=\"card-body bb-state-container\">\n      <bb-empty-state-ui\n        i18n-title=\"No Product selected|Empty Product selector@@transactions.state.noProductSelected.title\"\n        title=\"No Product Selected\"\n        i18n-subtitle=\"Product selector@@transactions.state.noProductSelected.subtitle\"\n        subtitle=\"Please select a product first.\"\n        iconSize=\"xl\"\n        iconModifier=\"list\"\n      ></bb-empty-state-ui>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template bbTransactionsErrorStateCustomizable let-hostRef>\n  <div class=\"card\">\n    <div class=\"card-body col-md-4 offset-md-4 bb-text-align-center\">\n      <div class=\"bb-block bb-block--md\">\n        <bb-empty-state-ui title=\"\"></bb-empty-state-ui>\n        <p\n          *ngFor=\"let error of hostRef.errors\"\n          data-role=\"custom-error-state-message\"\n          class=\"bb-empty-state__message bb-empty-state\"\n        >\n          {{ error?.message }}\n        </p>\n      </div>\n      <div>\n        <button i18n=\"Retry button@transactions.state.error.retry-button\" bbButton (click)=\"hostRef.retry()\">\n          Retry\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template\n  #notificationServerErrorHeader\n  i18n=\"Internal error header|Internal error header@@transaction.list.error.header.internal\"\n>\n  Transactions export is currently not available\n</ng-template>\n\n<ng-template\n  #notificationServerErrorMessage\n  i18n=\"Internal error message|Internal error message@@transaction.list.error.message.internal\"\n>\n  Please try again later\n</ng-template>\n\n<ng-template #bbPaginatedTransactionsContainer let-hostRef>\n  <div class=\"card card-lg bb-transactions-list-container\">\n    <bb-transactions-controls\n      *ngIf=\"(hostRef.showControls | async)!\"\n      [isFilterApplied]=\"(hostRef.isFilterApplied | async)!\"\n      [hideBillingStatus]=\"(hostRef.showPendingTransactionsOnTop | async)!\"\n      [exportConfig]=\"(hostRef.exportConfig | async)!\"\n      [availableFilters]=\"(hostRef.availableFilters | async) || []\"\n      (search)=\"hostRef.onSearch($event)\"\n      (filter)=\"hostRef.onFilter($event)\"\n      (print)=\"hostRef.onPrint()\"\n      (export)=\"hostRef.onExport($event)\"\n    ></bb-transactions-controls>\n    <bb-transactions-number-of-results-found\n      [numberOfResultsFound]=\"(hostRef.numberOfResultsFound | async)!\"\n      [loadingState]=\"(hostRef.loadingState | async)!\"\n      [isFilterApplied]=\"(hostRef.isFilterApplied | async)!\"\n      [isSearchApplied]=\"(hostRef.isSearchApplied | async)!\"\n    ></bb-transactions-number-of-results-found>\n    <div class=\"card-body\">\n      <bb-pending-transactions-list\n        *ngIf=\"(hostRef.showPendingTransactionsOnTop | async)!\"\n        [transactionsList]=\"(hostRef.pendingTransactionsList | async)!\"\n        [currentPage]=\"(hostRef.currentPage | async)!\"\n        [pageSize]=\"(hostRef.pageSize | async)!\"\n        [paginationType]=\"(hostRef.paginationType | async)!\"\n        [maxNavPages]=\"(hostRef.maxNavPages | async)!\"\n        [loadingState]=\"(hostRef.loadingPendingState | async)!\"\n        [showChangeCategory]=\"(hostRef.showChangeCategory | async)!\"\n        [inquireAndDisputeTopics]=\"(hostRef.inquireAndDisputeTopics | async)!\"\n        (detailsOpen)=\"hostRef.onDetailOpen($event)\"\n      ></bb-pending-transactions-list>\n\n      <bb-transactions-list\n        [transactionsList]=\"(hostRef.transactionsList | async)!\"\n        [checkImagesList]=\"(hostRef.checkImagesList | async)!\"\n        [currentPage]=\"(hostRef.currentPage | async)!\"\n        [pageSize]=\"(hostRef.pageSize | async)!\"\n        [maxNavPages]=\"(hostRef.maxNavPages | async)!\"\n        [loadingState]=\"(hostRef.loadingState | async)!\"\n        [paginationType]=\"(hostRef.paginationType | async)!\"\n        [numberOfResultsFound]=\"(hostRef.numberOfResultsDisplayed | async)!\"\n        [showChangeCategory]=\"(hostRef.showChangeCategory | async)!\"\n        [transactionDetailsLoadingStatus]=\"(hostRef.transactionDetailsLoadingStatus | async)!\"\n        [inquireAndDisputeTopics]=\"(hostRef.inquireAndDisputeTopics | async)!\"\n        (loadMore)=\"hostRef.onLoadMore()\"\n        (pageChange)=\"hostRef.onPageChange($event)\"\n        (detailsOpen)=\"hostRef.onDetailOpen($event)\"\n      ></bb-transactions-list>\n    </div>\n  </div>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NavigationService, WidgetPropertiesService, BaseTransactionsWidget } from '@backbase/transactions-common-ang';\n\n@Component({\n  selector: 'bb-transactions-list-widget',\n  templateUrl: './transactions-list-widget.component.html',\n  providers: [NavigationService, WidgetPropertiesService],\n})\nexport class TransactionsListWidgetComponent extends BaseTransactionsWidget {\n  constructor(protected readonly route: ActivatedRoute, protected readonly widgetProperties: WidgetPropertiesService) {\n    super(route, widgetProperties);\n  }\n}\n","<bb-transactions-container\n  [googleAPIKey]=\"googleAPIKey\"\n  [selectedAccount]=\"selectedAccount\"\n  [initialFilterOptions]=\"initialFilterOptions\"\n  [initialSortOptions]=\"initialSortOptions\"\n  [pageSize]=\"pageSize\"\n  [maxNavPages]=\"maxNavPages\"\n  [paginationType]=\"paginationType\"\n  [showControls]=\"showControls\"\n  [showChangeCategory]=\"showChangeCategory\"\n  [showPendingTransactionsOnTop]=\"showPendingTransactionsOnTop\"\n  [showCheckImage]=\"showCheckImage\"\n  [showManageNotes]=\"showManageNotes\"\n  [getOrPostEndpoints]=\"getOrPostEndpoints\"\n  [enableDisputeAndInquiry]=\"enableDisputeAndInquiry\"\n  [disputeByBillingStatus]=\"disputeByBillingStatus\"\n  [disputeEligibilityDays]=\"disputeEligibilityDays\"\n  [disputeTransactionTypes]=\"disputeTransactionTypes\"\n  [inquireTopicId]=\"inquireTopicId\"\n  [disputeTopicId]=\"disputeTopicId\"\n  (transactionSelected)=\"onDetailOpen($event)\"\n  (transactionsLoaded)=\"onTransactionsLoaded($event)\"\n  [availableFiltersConfig]=\"availableFiltersConfig\"\n></bb-transactions-container>\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BackbaseCoreModule, FutureFeaturesModule } from '@backbase/foundation-ang/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  TransactionsListComponent,\n  TransactionsListEmptyStateCustomizableDirective,\n  TransactionsListListCustomizableDirective,\n  TransactionsListPaginationCustomizableDirective,\n} from './components/transactions-list/transactions-list.component';\nimport {\n  TransactionsListItemGroupComponent,\n  TransactionsListItemGroupCustomizableDirective,\n} from './components/transactions-list/transactions-list-item-group.component';\nimport {\n  TransactionsListItemComponent,\n  TransactionsListItemCustomizableDirective,\n  TransactionsListItemHeaderCustomizableDirective,\n} from './components/transactions-list/transactions-list-item.component';\nimport { TransactionHeaderComponent } from './components/transaction/transaction-header.component';\nimport {\n  TransactionDetailsComponent,\n  TransactionsListItemDetailsCustomizableDirective,\n  TransactionsListConfirmationModalCustomizableDirective,\n} from './components/transaction/transaction-details.component';\nimport { TransactionControlsComponent } from './components/transaction/transaction-controls.component';\nimport {\n  TransactionsControlsComponent,\n  TransactionsListControlsButtonsCustomizableDirective,\n  TransactionsListControlsCustomizableDirective,\n} from './components/transactions-controls/transactions-controls.component';\nimport {\n  TransactionsFilterComponent,\n  TransactionsListFilterCustomizableDirective,\n} from './components/transactions-controls/transactions-filter.component';\nimport { TransactionsContainerComponent } from './components/transactions-container.component';\nimport { TransactionsListWidgetComponent } from './components/transactions-list-widget.component';\nimport { TransactionNotesComponent } from './components/transaction/transaction-notes.component';\nimport {\n  showDetailsConfigToken,\n  TransactionsCommonModule,\n  TransactionWidgetConfig,\n} from '@backbase/transactions-common-ang';\nimport {\n  TransactionDetailCategoryComponent,\n  TransactionDetailCategoryCustomizableDirective,\n} from './components/transaction/transaction-detail-category.component';\nimport {\n  TransactionsCategoriesComponent,\n  TransactionsCategoriesCustomizableDirective,\n} from './components/transactions-categories/transactions-categories.component';\nimport {\n  TransactionsListPendingTransactionsComponent,\n  PendingTransactionsListCustomizableDirective,\n} from './components/transactions-list/transactions-list-pending-transactions.component';\nimport { TransactionDetailsModalComponent } from './components/transaction/transaction-details-modal.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputDatepickerModule } from '@backbase/ui-ang/input-datepicker';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { PaginatorModule } from '@backbase/ui-ang/pagination';\nimport { SearchBoxModule } from '@backbase/ui-ang/search-box';\nimport { FocusModule } from '@backbase/ui-ang/focus';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\nimport { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { BadgeModule } from '@backbase/ui-ang/badge';\nimport { InputNumberModule } from '@backbase/ui-ang/input-number';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { TextareaModule } from '@backbase/ui-ang/textarea';\nimport { TRANSACTIONS_DETAILS_SHARE_MODAL } from './constants';\n\nconst modules = [\n  TransactionsCommonModule,\n  AmountModule,\n  ButtonModule,\n  DropdownSingleSelectModule,\n  EmptyStateModule,\n  IconModule,\n  InputDatepickerModule,\n  InputNumberModule,\n  InputValidationMessageModule,\n  LoadButtonModule,\n  LoadingIndicatorModule,\n  ModalModule,\n  PaginatorModule,\n  SearchBoxModule,\n  FocusModule,\n  NotificationModule,\n  DropdownMenuModule,\n  TooltipModule,\n  ButtonModule,\n  AlertModule,\n  HeaderModule,\n  BadgeModule,\n  TextareaModule,\n  NgbModule,\n];\n\nconst components = [\n  TransactionsListWidgetComponent,\n  TransactionsContainerComponent,\n  TransactionsControlsComponent,\n  TransactionsFilterComponent,\n  TransactionsListComponent,\n  TransactionsListItemComponent,\n  TransactionsListItemGroupComponent,\n  TransactionHeaderComponent,\n  TransactionDetailsComponent,\n  TransactionControlsComponent,\n  TransactionNotesComponent,\n  TransactionDetailCategoryComponent,\n  TransactionsCategoriesComponent,\n  TransactionsListPendingTransactionsComponent,\n  TransactionDetailsModalComponent,\n];\n\nconst customizables = [\n  TransactionsListFilterCustomizableDirective,\n  TransactionsListControlsCustomizableDirective,\n  TransactionsListControlsButtonsCustomizableDirective,\n  TransactionsListListCustomizableDirective,\n  TransactionsListPaginationCustomizableDirective,\n  TransactionsListItemCustomizableDirective,\n  TransactionsListItemGroupCustomizableDirective,\n  TransactionsListItemHeaderCustomizableDirective,\n  TransactionsListItemDetailsCustomizableDirective,\n  TransactionsListConfirmationModalCustomizableDirective,\n  TransactionsListEmptyStateCustomizableDirective,\n  TransactionDetailCategoryCustomizableDirective,\n  TransactionsCategoriesCustomizableDirective,\n  PendingTransactionsListCustomizableDirective,\n];\n\n@NgModule({\n  imports: [\n    RouterModule,\n    CommonModule,\n    ReactiveFormsModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { TransactionsListWidgetComponent },\n    }),\n    FutureFeaturesModule.allowOptIn([TRANSACTIONS_DETAILS_SHARE_MODAL]),\n    ...modules,\n  ],\n  declarations: [...components, ...customizables],\n  exports: [...modules, ...components, ...customizables],\n  entryComponents: [TransactionsContainerComponent],\n})\nexport class TransactionsListWidgetModule {\n  static forRoot(config: TransactionWidgetConfig): ModuleWithProviders<TransactionsListWidgetModule> {\n    return {\n      ngModule: TransactionsListWidgetModule,\n      providers: [\n        {\n          provide: showDetailsConfigToken,\n          useValue: config.showDetails,\n        },\n      ],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1","i2","i4","i5","i6","i3","i4.TransactionsCategoriesComponent","i5.TransactionNotesComponent","i7","i8","i9","i5.TransactionDetailCategoryComponent","i8.TransactionDetailsComponent","i2.TransactionDetailsModalComponent","i3.TransactionHeaderComponent","i1.TransactionsListItemComponent","i3.TransactionsListItemGroupComponent","i4.TransactionDetailsModalComponent","i3.TransactionsFilterComponent","i2.TransactionsListItemComponent","i5.TransactionsControlsComponent","i6.TransactionsListPendingTransactionsComponent","i7.TransactionsListComponent","i10","i3.TransactionsContainerComponent"],"mappings":"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"}