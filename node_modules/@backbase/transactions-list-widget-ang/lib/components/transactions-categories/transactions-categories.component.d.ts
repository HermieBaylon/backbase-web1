import { FormBuilder } from '@angular/forms';
import { Observable } from 'rxjs';
import { EventEmitter, OnInit } from '@angular/core';
import { CategoriesService, CategoryItem, TransactionUpdateService, Transaction } from '@backbase/transactions-common-ang';
import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
export declare class TransactionsCategoriesComponent implements OnInit {
    private readonly fb;
    private readonly categoriesService;
    private readonly transactionUpdateService;
    transaction: Transaction | undefined;
    readonly categoryChange: EventEmitter<string>;
    readonly changeTransactionsCategoryForm: import("@angular/forms").FormGroup;
    readonly hostRef: this;
    readonly categoriesList: Observable<CategoryItem[]>;
    constructor(fb: FormBuilder, categoriesService: CategoriesService, transactionUpdateService: TransactionUpdateService);
    cancelSaveCategory(): void;
    changeCategory(): void;
    getCategoryIconClass(transactionCategory: string): string;
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TransactionsCategoriesComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TransactionsCategoriesComponent, "bb-transactions-categories", never, { "transaction": "transaction"; }, { "categoryChange": "categoryChange"; }, never, never>;
}
export declare class TransactionsCategoriesCustomizableDirective extends BbTemplate<TransactionsCategoriesComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<TransactionsCategoriesCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TransactionsCategoriesCustomizableDirective, "[bbTransactionsCategoryCustomizable]", never, {}, {}, never>;
}
