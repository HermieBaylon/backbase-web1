import { OnInit, EventEmitter } from '@angular/core';
import { BbTemplate, FeaturesService } from '@backbase/foundation-ang/core';
import { Transaction, TransactionCheckImageResponse, TransactionsDetailsLoading, InquireAndDisputeTopics } from '@backbase/transactions-common-ang';
import * as i0 from "@angular/core";
export declare class TransactionsListItemComponent implements OnInit {
    private readonly featureService;
    showDetailsConfig?: boolean | undefined;
    /**
     * The transaction this component shows.
     */
    transaction: Transaction | undefined;
    /**
     * Whether to show pending transactions on top or not.
     */
    showBillingStatus: boolean;
    /**
     * Boolean that decides if the Change Category will be displayed.
     */
    showChangeCategory: boolean | undefined;
    checkImagesList: TransactionCheckImageResponse | undefined;
    transactionDetailsLoadingStatus: TransactionsDetailsLoading | undefined;
    inquireAndDisputeTopics: InquireAndDisputeTopics | undefined;
    readonly detailsOpen: EventEmitter<Transaction>;
    /**
     * Reference to instance of customizable component.
     */
    readonly hostRef: this;
    /**
     * Whether the transaction details are shown or not.
     */
    isDetailsOpen: boolean;
    /**
     * Whether the notes editing form is shown or not.
     */
    isEditingNotes: boolean;
    /**
     * Alert details such as visibility and type
     */
    alertOptions: {
        displayAlert: boolean;
        displayStatus: string;
    };
    /**
     * Show the transaction details.
     */
    openDetails(): void;
    /**
     * Hide the transaction details.
     */
    closeDetails(): void;
    ngOnInit(): void;
    showCategory(): boolean;
    get hasModal(): boolean;
    get isPending(): boolean;
    private get ownCategory();
    closeTransactionsCategory(categoryChangeStatus?: string): void;
    onAlertDismiss(): void;
    constructor(featureService: FeaturesService, showDetailsConfig?: boolean | undefined);
    static ɵfac: i0.ɵɵFactoryDeclaration<TransactionsListItemComponent, [null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TransactionsListItemComponent, "bb-transactions-list-item", never, { "transaction": "transaction"; "showBillingStatus": "showBillingStatus"; "showChangeCategory": "showChangeCategory"; "checkImagesList": "checkImagesList"; "transactionDetailsLoadingStatus": "transactionDetailsLoadingStatus"; "inquireAndDisputeTopics": "inquireAndDisputeTopics"; }, { "detailsOpen": "detailsOpen"; }, never, never>;
}
export declare class TransactionsListItemHeaderCustomizableDirective extends BbTemplate<TransactionsListItemComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<TransactionsListItemHeaderCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TransactionsListItemHeaderCustomizableDirective, "[bbTransactionsListItemHeaderCustomizable]", never, {}, {}, never>;
}
export declare class TransactionsListItemCustomizableDirective extends BbTemplate<TransactionsListItemComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<TransactionsListItemCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TransactionsListItemCustomizableDirective, "[bbTransactionsListItemCustomizable]", never, {}, {}, never>;
}
