import { EventEmitter, OnInit } from '@angular/core';
import { Transaction, TransactionsIconCategoriesFactoryService, BaseTransactionIcon, TransactionIconType } from '@backbase/transactions-common-ang';
import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
export declare class TransactionDetailCategoryComponent implements OnInit {
    private transactionsIconCategoriesFactory;
    transaction: Transaction | undefined;
    readonly categoryChange: EventEmitter<string>;
    /**
     * Boolean that decides if the Change Category will be displayed.
     */
    displayChangeCategory: boolean | undefined;
    hostRef: this;
    isTransactionsCategoryOpen: boolean;
    transactionCategoryIcon: BaseTransactionIcon | undefined;
    transactionIconType: typeof TransactionIconType;
    ngOnInit(): void;
    get categoryTitle(): string;
    openTransactionsCategory(): void;
    closeTransactionsCategory(categoryChangeStatus?: string): void;
    constructor(transactionsIconCategoriesFactory: TransactionsIconCategoriesFactoryService);
    static ɵfac: i0.ɵɵFactoryDeclaration<TransactionDetailCategoryComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TransactionDetailCategoryComponent, "bb-transaction-detail-category", never, { "transaction": "transaction"; "displayChangeCategory": "displayChangeCategory"; }, { "categoryChange": "categoryChange"; }, never, never>;
}
export declare class TransactionDetailCategoryCustomizableDirective extends BbTemplate<TransactionDetailCategoryComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<TransactionDetailCategoryCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TransactionDetailCategoryCustomizableDirective, "[bbTransactionDetailCategoryCustomizable]", never, {}, {}, never>;
}
