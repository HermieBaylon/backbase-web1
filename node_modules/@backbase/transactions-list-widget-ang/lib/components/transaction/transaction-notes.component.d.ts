import { OnInit, EventEmitter } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { Transaction } from '@backbase/transactions-common-ang';
import * as i0 from "@angular/core";
export declare class TransactionNotesComponent implements OnInit {
    /**
     * The transaction this component shows the notes of.
     */
    transaction: Transaction | undefined;
    /**
     * Whether the notes editing form is shown or not.
     */
    isEditingNotes: boolean;
    /**
     * Whether the notes editing form is saving or not.
     */
    isSavingNotes: boolean;
    /**
     * EventEmitter for triggering an isEditingNotesChange event.
     */
    readonly isEditingNotesChange: EventEmitter<boolean>;
    /**
     * EventEmitter for triggering a change notes event.
     */
    readonly changeNotes: EventEmitter<string>;
    /**
     * EventEmitter for triggering a deleteNote event.
     */
    readonly deleteNote: EventEmitter<string>;
    transactionNotesForm: FormGroup;
    toggleEdit(display?: boolean): void;
    onSave(notesParams: any): void;
    triggerDeleteNote(notesParams: any): void;
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TransactionNotesComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TransactionNotesComponent, "bb-transaction-notes", never, { "transaction": "transaction"; "isEditingNotes": "isEditingNotes"; "isSavingNotes": "isSavingNotes"; }, { "isEditingNotesChange": "isEditingNotesChange"; "changeNotes": "changeNotes"; "deleteNote": "deleteNote"; }, never, never>;
}
