{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, HostBinding, Output, HostListener, TemplateRef, ElementRef, Component, ChangeDetectionStrategy, Inject, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport * as i4 from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDropdown, NgbDropdownToggle, NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { KEY_CODES, getDynamicId, getKeyCode } from '@backbase/ui-ang/util';\nimport * as i6 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1 from '@backbase/ui-ang/services';\nimport * as i2 from '@backbase/foundation-ang/core';\nimport * as i3 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i5 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nconst _c0 = [\"dropdownListElement\"];\nconst _c1 = [\"dropdownMenuContainer\"];\nconst _c2 = [\"dropdownMenuInnerContainer\"];\nconst _c3 = [\"button\"];\n\nfunction DropdownMenuComponent_ng_container_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction DropdownMenuComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, DropdownMenuComponent_ng_container_4_ng_container_1_Template, 1, 0, \"ng-container\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.customLabel);\n  }\n}\n\nconst _c4 = function (a0) {\n  return {\n    \"dropdown-menu__label--full-width\": a0\n  };\n};\n\nfunction DropdownMenuComponent_ng_template_5_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c4, ctx_r7.fullWidth));\n    i0.ɵɵattribute(\"data-role\", \"dropdown-menu-label\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r7.label);\n  }\n}\n\nfunction DropdownMenuComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DropdownMenuComponent_ng_template_5_span_0_Template, 2, 5, \"span\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.label);\n  }\n}\n\nfunction DropdownMenuComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"bb-icon-ui\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"color\", ctx_r4.iconColor)(\"name\", ctx_r4.icon)(\"size\", ctx_r4.iconSize)(\"cropped\", !ctx_r4.btnCircle);\n  }\n}\n\nfunction DropdownMenuComponent_div_8_ng_container_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction DropdownMenuComponent_div_8_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, DropdownMenuComponent_div_8_ng_container_4_ng_container_1_Template, 1, 0, \"ng-container\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r10.customDropdownMenuItem);\n  }\n}\n\nfunction DropdownMenuComponent_div_8_ng_template_5_a_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 18, 19);\n    i0.ɵɵlistener(\"click\", function DropdownMenuComponent_div_8_ng_template_5_a_0_Template_a_click_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const option_r15 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(3);\n      return ctx_r18.onClick($event, option_r15);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r15 = ctx.$implicit;\n    const i_r16 = ctx.index;\n    const ctx_r14 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"id\", ctx_r14.dropdownId + i_r16)(\"data-role\", \"dropdown-menu-item\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r14.getOptionLabel(option_r15), \" \");\n  }\n}\n\nfunction DropdownMenuComponent_div_8_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DropdownMenuComponent_div_8_ng_template_5_a_0_Template, 3, 3, \"a\", 17);\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.options);\n  }\n}\n\nfunction DropdownMenuComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12, 13);\n    i0.ɵɵelementStart(2, \"div\", 14, 15);\n    i0.ɵɵtemplate(4, DropdownMenuComponent_div_8_ng_container_4_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵtemplate(5, DropdownMenuComponent_div_8_ng_template_5_Template, 1, 1, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r11 = i0.ɵɵreference(6);\n\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"visibility\", ctx_r5.dropdownContainerAdjustedMaxHeight ? \"visible\" : \"hidden\");\n    i0.ɵɵattribute(\"role\", ctx_r5.dropDownMenuRole)(\"data-role\", \"dropdown-menu\")(\"id\", ctx_r5.dropDownMenuId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"max-height\", ctx_r5.dropdownContainerAdjustedMaxHeight, \"px\");\n    i0.ɵɵattribute(\"id\", ctx_r5.dropdownId)(\"data-role\", \"inner-dropdown-menu\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.customDropdownMenuItem)(\"ngIfElse\", _r11);\n  }\n}\n\nconst _c5 = function (a0) {\n  return {\n    \"dropdown-menu-toggle-button__content--full-width\": a0\n  };\n};\n\nconst DROPDOWN_MENU_OPTIONS = ['PDF', 'RTF', 'PDF', 'RTF', 'PDF', 'RTF', 'PDF', 'RTF', 'PDF', 'RTF', 'PDF', 'RTF', 'PDF', 'RTF', 'PDF', 'RTF', 'PDF', 'RTF', 'PDF', 'RTF'];\nconst DROPDOWN_TEMPLATE_MENU_OPTIONS = [{\n  name: 'google',\n  url: 'https://google.com'\n}, {\n  name: 'twitter',\n  url: 'https://twitter.com'\n}, {\n  name: 'facebook',\n  url: 'https://www.facebook.com'\n}, {\n  name: 'google',\n  url: 'https://google.com'\n}, {\n  name: 'twitter',\n  url: 'https://twitter.com'\n}, {\n  name: 'facebook',\n  url: 'https://www.facebook.com'\n}, {\n  name: 'google',\n  url: 'https://google.com'\n}, {\n  name: 'twitter',\n  url: 'https://twitter.com'\n}, {\n  name: 'facebook',\n  url: 'https://www.facebook.com'\n}, {\n  name: 'google',\n  url: 'https://google.com'\n}, {\n  name: 'twitter',\n  url: 'https://twitter.com'\n}, {\n  name: 'facebook',\n  url: 'https://www.facebook.com'\n}, {\n  name: 'google',\n  url: 'https://google.com'\n}, {\n  name: 'twitter',\n  url: 'https://twitter.com'\n}, {\n  name: 'facebook',\n  url: 'https://www.facebook.com'\n}, {\n  name: 'google',\n  url: 'https://google.com'\n}, {\n  name: 'twitter',\n  url: 'https://twitter.com'\n}, {\n  name: 'facebook',\n  url: 'https://www.facebook.com'\n}, {\n  name: 'google',\n  url: 'https://google.com'\n}, {\n  name: 'twitter',\n  url: 'https://twitter.com'\n}, {\n  name: 'facebook',\n  url: 'https://www.facebook.com'\n}, {\n  name: 'google',\n  url: 'https://google.com'\n}, {\n  name: 'twitter',\n  url: 'https://twitter.com'\n}, {\n  name: 'facebook',\n  url: 'https://www.facebook.com'\n}];\n\nclass DropdownMenuOptionToken {}\n\nclass DropdownMenuOptionDirective extends DropdownMenuOptionToken {\n  constructor() {\n    super(...arguments);\n    /**\n     * Boolean value to add/remove the active class on menuitem\n     *\n     * @default false\n     */\n\n    this.active = false;\n    /**\n     * Event that is emitted when user clicks on menuitem\n     */\n\n    this.selectionChange = new EventEmitter();\n  }\n\n  onSelect() {\n    this.selectionChange.emit(this);\n  }\n\n}\n\nDropdownMenuOptionDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDropdownMenuOptionDirective_BaseFactory;\n  return function DropdownMenuOptionDirective_Factory(t) {\n    return (ɵDropdownMenuOptionDirective_BaseFactory || (ɵDropdownMenuOptionDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DropdownMenuOptionDirective)))(t || DropdownMenuOptionDirective);\n  };\n}();\n\nDropdownMenuOptionDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DropdownMenuOptionDirective,\n  selectors: [[\"\", \"bbDropdownMenuOption\", \"\"]],\n  hostVars: 2,\n  hostBindings: function DropdownMenuOptionDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function DropdownMenuOptionDirective_click_HostBindingHandler() {\n        return ctx.onSelect();\n      })(\"keydown.enter\", function DropdownMenuOptionDirective_keydown_enter_HostBindingHandler() {\n        return ctx.onSelect();\n      })(\"keydown.space\", function DropdownMenuOptionDirective_keydown_space_HostBindingHandler() {\n        return ctx.onSelect();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"active\", ctx.active);\n    }\n  },\n  inputs: {\n    bbDropdownMenuOption: \"bbDropdownMenuOption\",\n    active: \"active\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: DropdownMenuOptionToken,\n    useExisting: DropdownMenuOptionDirective\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownMenuOptionDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbDropdownMenuOption]',\n      providers: [{\n        provide: DropdownMenuOptionToken,\n        useExisting: DropdownMenuOptionDirective\n      }]\n    }]\n  }], null, {\n    bbDropdownMenuOption: [{\n      type: Input\n    }],\n    active: [{\n      type: HostBinding,\n      args: ['class.active']\n    }, {\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    onSelect: [{\n      type: HostListener,\n      args: ['click']\n    }, {\n      type: HostListener,\n      args: ['keydown.enter']\n    }, {\n      type: HostListener,\n      args: ['keydown.space']\n    }]\n  });\n})();\n\nconst DROPDOWN_MENU_MIN_INDENT_TO_HORIZONTAL_AXIS = 1 / 10;\nconst COUNT_OF_ELEMENTS_TO_SHOW_IN_THE_DROPDOWN_LIST = 8;\n\nclass DropdownMenuItemDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nDropdownMenuItemDirective.ɵfac = function DropdownMenuItemDirective_Factory(t) {\n  return new (t || DropdownMenuItemDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nDropdownMenuItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DropdownMenuItemDirective,\n  selectors: [[\"ng-template\", \"bbDropdownMenuItem\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownMenuItemDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[bbDropdownMenuItem]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n\nclass DropdownLabelDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nDropdownLabelDirective.ɵfac = function DropdownLabelDirective_Factory(t) {\n  return new (t || DropdownLabelDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nDropdownLabelDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DropdownLabelDirective,\n  selectors: [[\"ng-template\", \"bbDropdownLabel\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownLabelDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[bbDropdownLabel]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n\nclass DropdownMenuToken {}\n/**\n * @name DropdownMenuComponent\n *\n * @description\n * Component that displays a button with a dropdown\n *\n * @a11y dropDownButtonLabel is discernible text for dropdown button.\n *\n * `aria-owns` handles contextual relationship between a parent and its child elements,\n * in this case between dropdown menu and dropdown items, it's internally handled by the component with unique ids.\n *\n * `aria-activedescendant` identifies currently active element of dropdown item. It's internally handled but\n * when `bbDropdownMenuItem`directive and [role=menuitem] is used for listing dropdown elements\n * then use [id]=\"option\". Example:\n * ```\n  <ng-template bbDropdownMenuItem>\n    <button role=\"menuitem\" [id]=\"option\" class=\"dropdown-item\" *ngFor=\"let option of [1,2,3]\">\n      {{ option}}\n   </button>\n  </ng-template>\n ```\n */\n// @dynamic (to suppress error with resolving Document type during compilation)\n\n\nclass DropdownMenuComponent extends DropdownMenuToken {\n  constructor(domAttrService, elem, renderer, deprecationsService, cdr, document) {\n    super();\n    this.domAttrService = domAttrService;\n    this.elem = elem;\n    this.renderer = renderer;\n    this.deprecationsService = deprecationsService;\n    this.cdr = cdr;\n    this.document = document;\n    this.keyActionsConfig = [{\n      predicate: key => key === KEY_CODES.DOWN,\n      resolver: (event, itemList) => {\n        event.preventDefault();\n\n        if (this.focusedItemIndex === undefined) {\n          this.focusedItemIndex = 0;\n          this.focusListItem(itemList);\n          return;\n        }\n\n        if (this.focusedItemIndex < itemList.length - 1) {\n          this.focusedItemIndex = this.focusedItemIndex + 1;\n        }\n\n        this.focusListItem(itemList);\n      }\n    }, {\n      predicate: key => key === KEY_CODES.UP,\n      resolver: (event, itemList) => {\n        event.preventDefault();\n\n        if (this.focusedItemIndex === undefined) {\n          this.focusedItemIndex = 0;\n          this.focusListItem(itemList);\n          return;\n        }\n\n        if (this.focusedItemIndex > 0) {\n          this.focusedItemIndex = this.focusedItemIndex - 1;\n        }\n\n        this.focusListItem(itemList);\n      }\n    }, {\n      predicate: key => key === KEY_CODES.SPACE || key === KEY_CODES.ENTER,\n      resolver: event => {\n        event.preventDefault(); // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\n        this.dropdownDir && this.dropdownDir.close();\n\n        if (this.dropDownToggle) {\n          this.dropDownToggle.nativeElement.focus();\n        }\n      }\n    }, {\n      predicate: key => key === KEY_CODES.TAB,\n      resolver: (event, itemList) => {\n        if (this.isDropDownOpen() && this.focusedItemIndex === undefined) {\n          if (event.shiftKey) {\n            this.closeDropDown();\n          } else {\n            event.preventDefault();\n            this.focusedItemIndex = 0;\n            this.focusListItem(itemList);\n          }\n\n          return;\n        }\n\n        if (this.isFirstListItemInFocus(itemList) && event.shiftKey) {\n          event.preventDefault();\n          this.focusToggle();\n          this.focusedItemIndex = undefined;\n          return;\n        }\n\n        if (this.isLastListItemInFocus(itemList) && !event.shiftKey) {\n          this.focusToggle();\n          this.closeDropDown();\n          this.focusedItemIndex = undefined;\n          return;\n        }\n\n        if (this.focusedItemIndex !== undefined) {\n          this.focusedItemIndex = event.shiftKey ? this.focusedItemIndex - 1 : this.focusedItemIndex + 1;\n        }\n      }\n    }];\n    this.dropdownContainerAdjustedMaxHeight = 0;\n    this.ariaActivedescendant = null;\n    this.dropdownId = getDynamicId() + '_dropdown_menu';\n    /**\n     * The label for the button dropdown. Defaults to an empty string.\n     */\n\n    this.label = '';\n    /**\n     * The disabled state for the button dropdown. Defaults to false.\n     */\n\n    this.disabled = false;\n    /**\n     * If the value is an object, please provide a optionLabelKey.\n     */\n\n    this.options = [];\n    /**\n     * Event (Output) that emits the value of selected dropdown item.\n     */\n\n    this.select = new EventEmitter();\n    /**\n     * The size of the icon to be displayed. Defaults to md.\n     */\n\n    this.iconSize = 'md';\n    /**\n     * Color of the button. Defaults to primary.\n     */\n\n    this.btnColor = 'primary';\n    /**\n     * The flag to indicate whether the dropdown button should be in a circular shape. Defaults to 'false'.\n     * This will only work when there's only an icon inside the button without a text.\n     */\n\n    this.btnCircle = false;\n    /**\n     * If true it will stretch the button inside to 100% width\n     */\n\n    this.fullWidth = false;\n    /**\n     * Whether the dropdown should be closed when clicking one of dropdown items or pressing ESC\n     */\n\n    this.autoClose = true;\n    /**\n     * Specifies which element the dropdown should be appended to.\n     */\n\n    this.container = '';\n    /**\n     * The position of the dropdown. Defaults to bottom-right.\n     */\n\n    this.position = 'bottom-right';\n    /**\n     * The role of the dropdown menu defaults to menu\n     */\n\n    this.dropDownMenuRole = 'menu';\n    /**\n     * Predefined button sizes\n     */\n\n    this.buttonSize = 'md';\n    /**\n     * Dropdown menu (toggle) button aria label\n     */\n    // todo add translation when adding default value\n\n    this.dropDownButtonLabel = '';\n    /**\n     * Count of elements which is used in showing elements in the dropdown list.\n     */\n\n    this.visibleElementDependingOnViewport = COUNT_OF_ELEMENTS_TO_SHOW_IN_THE_DROPDOWN_LIST;\n    /**\n     * Add role=group onto host\n     */\n\n    this.role = 'group';\n    this.window = this.document.defaultView;\n  }\n\n  ngOnInit() {\n    // the buttons size will be set from the group size\n    if (this.elem.nativeElement.parentElement.className.indexOf('btn-group-sm') > -1) {\n      this.buttonSize = 'sm';\n    }\n  }\n\n  ngAfterViewInit() {\n    this.domAttrService.moveAriaAttributes(this.elem.nativeElement, this.buttonEl && this.buttonEl.nativeElement, this.renderer);\n    const itemList = this.getItemList();\n\n    if (itemList) {\n      this.setItemsTabIndex(itemList);\n    }\n  }\n  /**\n   * Internal handler for clicks on dropdown items\n   *\n   * @param event Event\n   * @param item Item that has been clicked\n   */\n\n\n  onClick(event, item) {\n    event.preventDefault();\n    this.select.emit(item);\n  }\n  /**\n   * Drop down change state event handler\n   *\n   * @param isOpen\n   */\n\n\n  onOpenChange(isOpen) {\n    if (isOpen) {\n      this.adjustDropdownListToViewport();\n    } else {\n      this.focusedItemIndex = undefined;\n\n      if (this.buttonEl) {\n        this.ariaActivedescendant = null;\n      }\n    }\n  }\n  /**\n   * Function that returns the label of the dropdown item\n   *\n   * @param option Item that has been clicked\n   * @param labelKey Key that contains the label of the option object\n   */\n\n\n  getOptionLabel(option) {\n    return this.optionLabelKey && typeof option === 'object' ? option[this.optionLabelKey] : option;\n  }\n\n  onKeyUp(event) {\n    if (!this.isDropDownOpen()) {\n      return;\n    }\n\n    const itemList = this.getItemList();\n\n    if (!itemList) {\n      return;\n    }\n\n    this.setItemsTabIndex(itemList);\n    const config = this.keyActionsConfig.find(cv => cv.predicate(getKeyCode(event)));\n\n    if (config) {\n      config.resolver(event, itemList);\n    }\n\n    const selectedItem = this.getSelectedItem(itemList);\n\n    if (this.buttonEl && this.isDropDownOpen() && selectedItem) {\n      this.ariaActivedescendant = selectedItem.id;\n    }\n  }\n\n  isLastListItemInFocus(itemList) {\n    return document.activeElement === itemList.item(itemList.length - 1);\n  }\n\n  isFirstListItemInFocus(itemList) {\n    return document.activeElement === itemList.item(0);\n  }\n\n  focusToggle() {\n    if (this.dropDownToggle) {\n      this.dropDownToggle.nativeElement.focus();\n    }\n  }\n\n  closeDropDown() {\n    if (this.dropdownDir) {\n      this.dropdownDir.close();\n    }\n  }\n\n  isDropDownOpen() {\n    return Boolean(this.dropdownDir && this.dropdownDir.isOpen());\n  }\n\n  getItemList() {\n    var _a, _b, _c; //TODO: don't access private API\n\n\n    return (_c = (_b = (_a = this.dropdownDir) === null || _a === void 0 ? void 0 : _a['_menu']) === null || _b === void 0 ? void 0 : _b.nativeElement) === null || _c === void 0 ? void 0 : _c.querySelectorAll('[role=menuitem]');\n  }\n\n  setItemsTabIndex(itemList) {\n    Array.prototype.forEach.call(itemList, cv => {\n      this.renderer.setAttribute(cv, 'tabindex', '0');\n    });\n  }\n\n  focusListItem(itemList) {\n    const item = this.getSelectedItem(itemList);\n\n    if (item) {\n      item.focus();\n    }\n  }\n\n  getSelectedItem(itemList) {\n    let item;\n\n    if (itemList) {\n      // @ts-ignore\n      item = itemList.item(this.focusedItemIndex);\n    }\n\n    return item;\n  }\n\n  adjustDropdownListToViewport() {\n    if (!this.doElementsExist()) {\n      return;\n    }\n\n    this.dropdownContainerAdjustedMaxHeight = 0;\n    setTimeout(() => {\n      this.defineAdjustedDropdownMenuHeight();\n      this.cdr.detectChanges();\n    }, 0);\n  }\n\n  defineAdjustedDropdownMenuHeight() {\n    var _a, _b, _c, _d;\n\n    this.dropdownMenuItemHeight = this.customDropdownMenuItem ? ((_a = this.dropdownMenuInnerContainer) === null || _a === void 0 ? void 0 : _a.nativeElement.firstChild).clientHeight : (_b = this.dropdownListElement) === null || _b === void 0 ? void 0 : _b.nativeElement.offsetHeight;\n\n    if (!this.dropdownMenuItemHeight) {\n      this.clearStyles();\n      return;\n    } // The min height of dropdown container list started from height of 1 element;\n\n\n    let heightOfAllDropdownItems = this.dropdownMenuItemHeight;\n    let containerHeightOfDropdownItems = (((_c = this.dropdownMenuContainer) === null || _c === void 0 ? void 0 : _c.nativeElement.offsetHeight) || 0) + heightOfAllDropdownItems;\n    this.defineMaxDropdownContainerHeight();\n    const iterationsForIncreasingHeight = Math.min(this.visibleElementDependingOnViewport, // when we pass custom template items, this.options.length can be 0;\n    this.options.length || ((_d = this.dropdownMenuInnerContainer) === null || _d === void 0 ? void 0 : _d.nativeElement.childNodes.length));\n\n    for (let i = 1; i < iterationsForIncreasingHeight && // here we should avoid redundant increasing;\n    containerHeightOfDropdownItems + this.dropdownMenuItemHeight <= Number(this.dropdownContainerMaxHeight); i++) {\n      heightOfAllDropdownItems += this.dropdownMenuItemHeight;\n      containerHeightOfDropdownItems += this.dropdownMenuItemHeight;\n    }\n\n    this.dropdownContainerAdjustedMaxHeight = heightOfAllDropdownItems;\n  }\n\n  defineMaxDropdownContainerHeight() {\n    if (!this.window || !this.dropDownToggle) return;\n    const relativeIndent = DROPDOWN_MENU_MIN_INDENT_TO_HORIZONTAL_AXIS;\n    const viewportHeight = this.window.innerHeight;\n    const {\n      bottom,\n      top\n    } = this.dropDownToggle.nativeElement.getBoundingClientRect();\n    this.dropdownContainerMaxHeight = this.dropdownMenuItemHeight;\n\n    if (this.position.includes('bottom')) {\n      const viewportIndent = Math.floor(viewportHeight * relativeIndent);\n      const boundingHeight = viewportHeight - bottom; // we should include a viewport indent because dropdownContainerMaxHeight must not overlap window.\n\n      this.dropdownContainerMaxHeight = boundingHeight - viewportIndent;\n    }\n\n    if (this.position === 'left' || this.position === 'right') {\n      const offsetDifference = top + bottom - viewportHeight; // here we should calculate the smallest offset between top and bottom because dropdown list renders at middle;\n\n      const offset = offsetDifference <= 0 ? top : viewportHeight - bottom; // here we multiply by 2 because left or right position renders dropdown list at middle;\n\n      this.dropdownContainerMaxHeight = Math.floor(2 * offset * (1 - relativeIndent));\n    }\n\n    if (this.position.includes('top')) {\n      this.dropdownContainerMaxHeight = Math.floor(top * (1 - relativeIndent));\n    }\n\n    if (this.position === 'auto') {\n      // auto calculates the most suitable position that`s why it is enough to set wider limitations;\n      this.dropdownContainerMaxHeight = Math.floor(viewportHeight * (1 - 2 * relativeIndent));\n    }\n  }\n\n  doElementsExist() {\n    var _a;\n\n    const requiredElementPresented = this.customDropdownMenuItem ? (_a = this.dropdownMenuInnerContainer) === null || _a === void 0 ? void 0 : _a.nativeElement.firstChild : !this.disabled;\n    return Boolean(requiredElementPresented);\n  }\n\n  clearStyles() {\n    // if we can`t define item height we should discard style properties for disabling adjusting.\n    if (this.dropdownMenuInnerContainer && this.dropdownMenuContainer) {\n      this.renderer.removeStyle(this.dropdownMenuInnerContainer.nativeElement, 'maxHeight');\n      this.renderer.removeStyle(this.dropdownMenuContainer.nativeElement, 'visibility');\n    }\n  }\n\n}\n\nDropdownMenuComponent.ɵfac = function DropdownMenuComponent_Factory(t) {\n  return new (t || DropdownMenuComponent)(i0.ɵɵdirectiveInject(i1.DomAttributesService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.DeprecationsService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nDropdownMenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DropdownMenuComponent,\n  selectors: [[\"bb-dropdown-menu-ui\"]],\n  contentQueries: function DropdownMenuComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, DropdownLabelDirective, 7, TemplateRef);\n      i0.ɵɵcontentQuery(dirIndex, DropdownMenuItemDirective, 7, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customLabel = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customDropdownMenuItem = _t.first);\n    }\n  },\n  viewQuery: function DropdownMenuComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(NgbDropdown, 7);\n      i0.ɵɵviewQuery(NgbDropdownToggle, 7, ElementRef);\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(_c3, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdownDir = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropDownToggle = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdownListElement = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdownMenuContainer = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdownMenuInnerContainer = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.buttonEl = _t.first);\n    }\n  },\n  hostVars: 1,\n  hostBindings: function DropdownMenuComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function DropdownMenuComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKeyUp($event);\n      }, false, i0.ɵɵresolveWindow);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"role\", ctx.role);\n    }\n  },\n  inputs: {\n    label: \"label\",\n    disabled: \"disabled\",\n    options: \"options\",\n    icon: \"icon\",\n    iconSize: \"iconSize\",\n    iconColor: \"iconColor\",\n    btnColor: \"btnColor\",\n    btnCircle: \"btnCircle\",\n    optionLabelKey: \"optionLabelKey\",\n    fullWidth: \"fullWidth\",\n    autoClose: \"autoClose\",\n    container: \"container\",\n    position: \"position\",\n    ariaLabel: \"ariaLabel\",\n    dropDownMenuRole: \"dropDownMenuRole\",\n    dropDownMenuId: \"dropDownMenuId\",\n    buttonSize: \"buttonSize\",\n    dropDownButtonLabel: \"dropDownButtonLabel\",\n    visibleElementDependingOnViewport: \"visibleElementDependingOnViewport\",\n    role: \"role\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: DropdownMenuToken,\n    useExisting: DropdownMenuComponent\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 9,\n  vars: 19,\n  consts: [[\"ngbDropdown\", \"\", 1, \"bb-dropdown-btn-group-wrapper\", 3, \"autoClose\", \"container\", \"placement\", \"openChange\"], [\"bbButton\", \"\", \"ngbDropdownToggle\", \"\", 3, \"block\", \"circle\", \"color\", \"buttonSize\", \"disabled\"], [\"button\", \"\"], [1, \"dropdown-menu-toggle-button__content\", 3, \"ngClass\"], [4, \"ngIf\", \"ngIfElse\"], [\"bbDefaultDropdownLabel\", \"\"], [4, \"ngIf\"], [\"class\", \"dropdown-menu\", \"ngbDropdownMenu\", \"\", 3, \"visibility\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\"], [\"class\", \"dropdown-menu__label\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"dropdown-menu__label\", 3, \"ngClass\"], [3, \"color\", \"name\", \"size\", \"cropped\"], [\"ngbDropdownMenu\", \"\", 1, \"dropdown-menu\"], [\"dropdownMenuContainer\", \"\"], [1, \"dropdown-menu-inner-container\"], [\"dropdownMenuInnerContainer\", \"\"], [\"bbDefaultDropdown\", \"\"], [\"ngbDropdownItem\", \"\", \"role\", \"menuitem\", \"href\", \"#\", \"class\", \"dropdown-item\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"ngbDropdownItem\", \"\", \"role\", \"menuitem\", \"href\", \"#\", 1, \"dropdown-item\", 3, \"click\"], [\"dropdownListElement\", \"\"]],\n  template: function DropdownMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"openChange\", function DropdownMenuComponent_Template_div_openChange_0_listener($event) {\n        return ctx.onOpenChange($event);\n      });\n      i0.ɵɵelementStart(1, \"button\", 1, 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtemplate(4, DropdownMenuComponent_ng_container_4_Template, 2, 1, \"ng-container\", 4);\n      i0.ɵɵtemplate(5, DropdownMenuComponent_ng_template_5_Template, 1, 1, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(7, DropdownMenuComponent_ng_container_7_Template, 2, 4, \"ng-container\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, DropdownMenuComponent_div_8_Template, 7, 11, \"div\", 7);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(6);\n\n      i0.ɵɵproperty(\"autoClose\", ctx.autoClose)(\"container\", ctx.container)(\"placement\", ctx.position);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"block\", ctx.fullWidth)(\"circle\", ctx.btnCircle)(\"color\", ctx.btnColor)(\"buttonSize\", ctx.buttonSize)(\"disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"aria-label\", ctx.dropDownButtonLabel)(\"data-role\", \"dropdown-menu-toggle-button\")(\"aria-owns\", ctx.dropdownId)(\"aria-activedescendant\", ctx.ariaActivedescendant);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c5, ctx.fullWidth));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.customLabel)(\"ngIfElse\", _r2);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.icon);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.disabled);\n    }\n  },\n  directives: [i4.NgbDropdown, i5.ButtonDirective, i4.NgbDropdownToggle, i6.NgClass, i6.NgIf, i6.NgTemplateOutlet, i3.IconComponent, i4.NgbDropdownMenu, i6.NgForOf, i4.NgbDropdownItem],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownMenuComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-dropdown-menu-ui',\n      templateUrl: './dropdown-menu.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: DropdownMenuToken,\n        useExisting: DropdownMenuComponent\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i1.DomAttributesService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i2.DeprecationsService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    customLabel: [{\n      type: ContentChild,\n      args: [DropdownLabelDirective, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    customDropdownMenuItem: [{\n      type: ContentChild,\n      args: [DropdownMenuItemDirective, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    dropdownDir: [{\n      type: ViewChild,\n      args: [NgbDropdown, {\n        static: true\n      }]\n    }],\n    dropDownToggle: [{\n      type: ViewChild,\n      args: [NgbDropdownToggle, {\n        read: ElementRef,\n        static: true\n      }]\n    }],\n    dropdownListElement: [{\n      type: ViewChild,\n      args: ['dropdownListElement']\n    }],\n    dropdownMenuContainer: [{\n      type: ViewChild,\n      args: ['dropdownMenuContainer']\n    }],\n    dropdownMenuInnerContainer: [{\n      type: ViewChild,\n      args: ['dropdownMenuInnerContainer']\n    }],\n    label: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    icon: [{\n      type: Input\n    }],\n    iconSize: [{\n      type: Input\n    }],\n    iconColor: [{\n      type: Input\n    }],\n    btnColor: [{\n      type: Input\n    }],\n    btnCircle: [{\n      type: Input\n    }],\n    optionLabelKey: [{\n      type: Input\n    }],\n    fullWidth: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    dropDownMenuRole: [{\n      type: Input\n    }],\n    dropDownMenuId: [{\n      type: Input\n    }],\n    buttonSize: [{\n      type: Input\n    }],\n    dropDownButtonLabel: [{\n      type: Input\n    }],\n    visibleElementDependingOnViewport: [{\n      type: Input\n    }],\n    role: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }, {\n      type: Input\n    }],\n    buttonEl: [{\n      type: ViewChild,\n      args: ['button']\n    }],\n    onKeyUp: [{\n      type: HostListener,\n      args: ['window:keydown', ['$event']]\n    }]\n  });\n})();\n\nclass DropdownMenuFullWidthDirective {\n  constructor(elementRef, renderer) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    /**\n     * If true it will stretch the dropdown menu to 100% width\n     */\n\n    this.bbDropdownToggleFullWidth = false;\n  }\n\n  ngAfterViewInit() {\n    const dropdownBtn = this.elementRef.nativeElement.querySelector('[ngbDropdownToggle]');\n    const dropdownMenu = this.elementRef.nativeElement.querySelector('[ngbDropdownMenu]');\n    const splitBtnWrapper = dropdownBtn === null || dropdownBtn === void 0 ? void 0 : dropdownBtn.closest('div.btn-group');\n\n    if (this.bbDropdownToggleFullWidth) {\n      this.dropdownMenuChanges = new MutationObserver(mutations => {\n        mutations.forEach(mutation => {\n          if (mutation.attributeName === 'class' && dropdownMenu.classList.contains('show')) {\n            const minWidth = splitBtnWrapper ? splitBtnWrapper.clientWidth : dropdownBtn.clientWidth;\n            this.renderer.setStyle(dropdownMenu, 'min-width', `${minWidth}px`);\n          }\n        });\n      });\n      this.dropdownMenuChanges.observe(dropdownMenu, {\n        attributes: true\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    var _a;\n\n    (_a = this.dropdownMenuChanges) === null || _a === void 0 ? void 0 : _a.disconnect();\n  }\n\n}\n\nDropdownMenuFullWidthDirective.ɵfac = function DropdownMenuFullWidthDirective_Factory(t) {\n  return new (t || DropdownMenuFullWidthDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nDropdownMenuFullWidthDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DropdownMenuFullWidthDirective,\n  selectors: [[\"\", \"bbDropdownToggleFullWidth\", \"\"]],\n  inputs: {\n    bbDropdownToggleFullWidth: \"bbDropdownToggleFullWidth\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownMenuFullWidthDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbDropdownToggleFullWidth]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    bbDropdownToggleFullWidth: [{\n      type: Input\n    }]\n  });\n})();\n\nclass DropdownMenuModule {}\n\nDropdownMenuModule.ɵfac = function DropdownMenuModule_Factory(t) {\n  return new (t || DropdownMenuModule)();\n};\n\nDropdownMenuModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DropdownMenuModule\n});\nDropdownMenuModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, NgbDropdownModule, IconModule, ButtonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownMenuModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, NgbDropdownModule, IconModule, ButtonModule],\n      declarations: [DropdownMenuComponent, DropdownMenuItemDirective, DropdownLabelDirective, DropdownMenuOptionDirective, DropdownMenuFullWidthDirective],\n      exports: [DropdownMenuComponent, DropdownMenuItemDirective, DropdownLabelDirective, DropdownMenuOptionDirective, DropdownMenuFullWidthDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DROPDOWN_MENU_OPTIONS, DROPDOWN_TEMPLATE_MENU_OPTIONS, DropdownLabelDirective, DropdownMenuComponent, DropdownMenuFullWidthDirective, DropdownMenuItemDirective, DropdownMenuModule, DropdownMenuOptionDirective, DropdownMenuOptionToken, DropdownMenuToken };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-dropdown-menu.js"],"names":["i0","EventEmitter","Directive","Input","HostBinding","Output","HostListener","TemplateRef","ElementRef","Component","ChangeDetectionStrategy","Inject","ContentChild","ViewChild","NgModule","i4","NgbDropdown","NgbDropdownToggle","NgbDropdownModule","KEY_CODES","getDynamicId","getKeyCode","i6","DOCUMENT","CommonModule","i1","i2","i3","IconModule","i5","ButtonModule","DROPDOWN_MENU_OPTIONS","DROPDOWN_TEMPLATE_MENU_OPTIONS","name","url","DropdownMenuOptionToken","DropdownMenuOptionDirective","constructor","arguments","active","selectionChange","onSelect","emit","ɵfac","ɵdir","provide","useExisting","type","args","selector","providers","bbDropdownMenuOption","DROPDOWN_MENU_MIN_INDENT_TO_HORIZONTAL_AXIS","COUNT_OF_ELEMENTS_TO_SHOW_IN_THE_DROPDOWN_LIST","DropdownMenuItemDirective","templateRef","DropdownLabelDirective","DropdownMenuToken","DropdownMenuComponent","domAttrService","elem","renderer","deprecationsService","cdr","document","keyActionsConfig","predicate","key","DOWN","resolver","event","itemList","preventDefault","focusedItemIndex","undefined","focusListItem","length","UP","SPACE","ENTER","dropdownDir","close","dropDownToggle","nativeElement","focus","TAB","isDropDownOpen","shiftKey","closeDropDown","isFirstListItemInFocus","focusToggle","isLastListItemInFocus","dropdownContainerAdjustedMaxHeight","ariaActivedescendant","dropdownId","label","disabled","options","select","iconSize","btnColor","btnCircle","fullWidth","autoClose","container","position","dropDownMenuRole","buttonSize","dropDownButtonLabel","visibleElementDependingOnViewport","role","window","defaultView","ngOnInit","parentElement","className","indexOf","ngAfterViewInit","moveAriaAttributes","buttonEl","getItemList","setItemsTabIndex","onClick","item","onOpenChange","isOpen","adjustDropdownListToViewport","getOptionLabel","option","optionLabelKey","onKeyUp","config","find","cv","selectedItem","getSelectedItem","id","activeElement","Boolean","_a","_b","_c","querySelectorAll","Array","prototype","forEach","call","setAttribute","doElementsExist","setTimeout","defineAdjustedDropdownMenuHeight","detectChanges","_d","dropdownMenuItemHeight","customDropdownMenuItem","dropdownMenuInnerContainer","firstChild","clientHeight","dropdownListElement","offsetHeight","clearStyles","heightOfAllDropdownItems","containerHeightOfDropdownItems","dropdownMenuContainer","defineMaxDropdownContainerHeight","iterationsForIncreasingHeight","Math","min","childNodes","i","Number","dropdownContainerMaxHeight","relativeIndent","viewportHeight","innerHeight","bottom","top","getBoundingClientRect","includes","viewportIndent","floor","boundingHeight","offsetDifference","offset","requiredElementPresented","removeStyle","DomAttributesService","Renderer2","DeprecationsService","ChangeDetectorRef","ɵcmp","ButtonDirective","NgClass","NgIf","NgTemplateOutlet","IconComponent","NgbDropdownMenu","NgForOf","NgbDropdownItem","templateUrl","changeDetection","OnPush","Document","decorators","customLabel","read","static","icon","iconColor","ariaLabel","dropDownMenuId","DropdownMenuFullWidthDirective","elementRef","bbDropdownToggleFullWidth","dropdownBtn","querySelector","dropdownMenu","splitBtnWrapper","closest","dropdownMenuChanges","MutationObserver","mutations","mutation","attributeName","classList","contains","minWidth","clientWidth","setStyle","observe","attributes","ngOnDestroy","disconnect","DropdownMenuModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, HostBinding, Output, HostListener, TemplateRef, ElementRef, Component, ChangeDetectionStrategy, Inject, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport * as i4 from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDropdown, NgbDropdownToggle, NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { KEY_CODES, getDynamicId, getKeyCode } from '@backbase/ui-ang/util';\nimport * as i6 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1 from '@backbase/ui-ang/services';\nimport * as i2 from '@backbase/foundation-ang/core';\nimport * as i3 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i5 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\n\nconst DROPDOWN_MENU_OPTIONS = [\n    'PDF',\n    'RTF',\n    'PDF',\n    'RTF',\n    'PDF',\n    'RTF',\n    'PDF',\n    'RTF',\n    'PDF',\n    'RTF',\n    'PDF',\n    'RTF',\n    'PDF',\n    'RTF',\n    'PDF',\n    'RTF',\n    'PDF',\n    'RTF',\n    'PDF',\n    'RTF',\n];\nconst DROPDOWN_TEMPLATE_MENU_OPTIONS = [\n    { name: 'google', url: 'https://google.com' },\n    { name: 'twitter', url: 'https://twitter.com' },\n    { name: 'facebook', url: 'https://www.facebook.com' },\n    { name: 'google', url: 'https://google.com' },\n    { name: 'twitter', url: 'https://twitter.com' },\n    { name: 'facebook', url: 'https://www.facebook.com' },\n    { name: 'google', url: 'https://google.com' },\n    { name: 'twitter', url: 'https://twitter.com' },\n    { name: 'facebook', url: 'https://www.facebook.com' },\n    { name: 'google', url: 'https://google.com' },\n    { name: 'twitter', url: 'https://twitter.com' },\n    { name: 'facebook', url: 'https://www.facebook.com' },\n    { name: 'google', url: 'https://google.com' },\n    { name: 'twitter', url: 'https://twitter.com' },\n    { name: 'facebook', url: 'https://www.facebook.com' },\n    { name: 'google', url: 'https://google.com' },\n    { name: 'twitter', url: 'https://twitter.com' },\n    { name: 'facebook', url: 'https://www.facebook.com' },\n    { name: 'google', url: 'https://google.com' },\n    { name: 'twitter', url: 'https://twitter.com' },\n    { name: 'facebook', url: 'https://www.facebook.com' },\n    { name: 'google', url: 'https://google.com' },\n    { name: 'twitter', url: 'https://twitter.com' },\n    { name: 'facebook', url: 'https://www.facebook.com' },\n];\n\nclass DropdownMenuOptionToken {\n}\nclass DropdownMenuOptionDirective extends DropdownMenuOptionToken {\n    constructor() {\n        super(...arguments);\n        /**\n         * Boolean value to add/remove the active class on menuitem\n         *\n         * @default false\n         */\n        this.active = false;\n        /**\n         * Event that is emitted when user clicks on menuitem\n         */\n        this.selectionChange = new EventEmitter();\n    }\n    onSelect() {\n        this.selectionChange.emit(this);\n    }\n}\nDropdownMenuOptionDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMenuOptionDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDropdownMenuOptionDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DropdownMenuOptionDirective, selector: \"[bbDropdownMenuOption]\", inputs: { bbDropdownMenuOption: \"bbDropdownMenuOption\", active: \"active\" }, outputs: { selectionChange: \"selectionChange\" }, host: { listeners: { \"click\": \"onSelect()\", \"keydown.enter\": \"onSelect()\", \"keydown.space\": \"onSelect()\" }, properties: { \"class.active\": \"this.active\" } }, providers: [\n        {\n            provide: DropdownMenuOptionToken,\n            useExisting: DropdownMenuOptionDirective,\n        },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMenuOptionDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbDropdownMenuOption]',\n                    providers: [\n                        {\n                            provide: DropdownMenuOptionToken,\n                            useExisting: DropdownMenuOptionDirective,\n                        },\n                    ],\n                }]\n        }], propDecorators: { bbDropdownMenuOption: [{\n                type: Input\n            }], active: [{\n                type: HostBinding,\n                args: ['class.active']\n            }, {\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], onSelect: [{\n                type: HostListener,\n                args: ['click']\n            }, {\n                type: HostListener,\n                args: ['keydown.enter']\n            }, {\n                type: HostListener,\n                args: ['keydown.space']\n            }] } });\n\nconst DROPDOWN_MENU_MIN_INDENT_TO_HORIZONTAL_AXIS = 1 / 10;\nconst COUNT_OF_ELEMENTS_TO_SHOW_IN_THE_DROPDOWN_LIST = 8;\n\nclass DropdownMenuItemDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nDropdownMenuItemDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMenuItemDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nDropdownMenuItemDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DropdownMenuItemDirective, selector: \"ng-template[bbDropdownMenuItem]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMenuItemDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[bbDropdownMenuItem]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\nclass DropdownLabelDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nDropdownLabelDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownLabelDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nDropdownLabelDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DropdownLabelDirective, selector: \"ng-template[bbDropdownLabel]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownLabelDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[bbDropdownLabel]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\nclass DropdownMenuToken {\n}\n/**\n * @name DropdownMenuComponent\n *\n * @description\n * Component that displays a button with a dropdown\n *\n * @a11y dropDownButtonLabel is discernible text for dropdown button.\n *\n * `aria-owns` handles contextual relationship between a parent and its child elements,\n * in this case between dropdown menu and dropdown items, it's internally handled by the component with unique ids.\n *\n * `aria-activedescendant` identifies currently active element of dropdown item. It's internally handled but\n * when `bbDropdownMenuItem`directive and [role=menuitem] is used for listing dropdown elements\n * then use [id]=\"option\". Example:\n * ```\n  <ng-template bbDropdownMenuItem>\n    <button role=\"menuitem\" [id]=\"option\" class=\"dropdown-item\" *ngFor=\"let option of [1,2,3]\">\n      {{ option}}\n   </button>\n  </ng-template>\n ```\n */\n// @dynamic (to suppress error with resolving Document type during compilation)\nclass DropdownMenuComponent extends DropdownMenuToken {\n    constructor(domAttrService, elem, renderer, deprecationsService, cdr, document) {\n        super();\n        this.domAttrService = domAttrService;\n        this.elem = elem;\n        this.renderer = renderer;\n        this.deprecationsService = deprecationsService;\n        this.cdr = cdr;\n        this.document = document;\n        this.keyActionsConfig = [\n            {\n                predicate: (key) => key === KEY_CODES.DOWN,\n                resolver: (event, itemList) => {\n                    event.preventDefault();\n                    if (this.focusedItemIndex === undefined) {\n                        this.focusedItemIndex = 0;\n                        this.focusListItem(itemList);\n                        return;\n                    }\n                    if (this.focusedItemIndex < itemList.length - 1) {\n                        this.focusedItemIndex = this.focusedItemIndex + 1;\n                    }\n                    this.focusListItem(itemList);\n                },\n            },\n            {\n                predicate: (key) => key === KEY_CODES.UP,\n                resolver: (event, itemList) => {\n                    event.preventDefault();\n                    if (this.focusedItemIndex === undefined) {\n                        this.focusedItemIndex = 0;\n                        this.focusListItem(itemList);\n                        return;\n                    }\n                    if (this.focusedItemIndex > 0) {\n                        this.focusedItemIndex = this.focusedItemIndex - 1;\n                    }\n                    this.focusListItem(itemList);\n                },\n            },\n            {\n                predicate: (key) => key === KEY_CODES.SPACE || key === KEY_CODES.ENTER,\n                resolver: (event) => {\n                    event.preventDefault();\n                    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                    this.dropdownDir && this.dropdownDir.close();\n                    if (this.dropDownToggle) {\n                        this.dropDownToggle.nativeElement.focus();\n                    }\n                },\n            },\n            {\n                predicate: (key) => key === KEY_CODES.TAB,\n                resolver: (event, itemList) => {\n                    if (this.isDropDownOpen() && this.focusedItemIndex === undefined) {\n                        if (event.shiftKey) {\n                            this.closeDropDown();\n                        }\n                        else {\n                            event.preventDefault();\n                            this.focusedItemIndex = 0;\n                            this.focusListItem(itemList);\n                        }\n                        return;\n                    }\n                    if (this.isFirstListItemInFocus(itemList) && event.shiftKey) {\n                        event.preventDefault();\n                        this.focusToggle();\n                        this.focusedItemIndex = undefined;\n                        return;\n                    }\n                    if (this.isLastListItemInFocus(itemList) && !event.shiftKey) {\n                        this.focusToggle();\n                        this.closeDropDown();\n                        this.focusedItemIndex = undefined;\n                        return;\n                    }\n                    if (this.focusedItemIndex !== undefined) {\n                        this.focusedItemIndex = event.shiftKey ? this.focusedItemIndex - 1 : this.focusedItemIndex + 1;\n                    }\n                },\n            },\n        ];\n        this.dropdownContainerAdjustedMaxHeight = 0;\n        this.ariaActivedescendant = null;\n        this.dropdownId = getDynamicId() + '_dropdown_menu';\n        /**\n         * The label for the button dropdown. Defaults to an empty string.\n         */\n        this.label = '';\n        /**\n         * The disabled state for the button dropdown. Defaults to false.\n         */\n        this.disabled = false;\n        /**\n         * If the value is an object, please provide a optionLabelKey.\n         */\n        this.options = [];\n        /**\n         * Event (Output) that emits the value of selected dropdown item.\n         */\n        this.select = new EventEmitter();\n        /**\n         * The size of the icon to be displayed. Defaults to md.\n         */\n        this.iconSize = 'md';\n        /**\n         * Color of the button. Defaults to primary.\n         */\n        this.btnColor = 'primary';\n        /**\n         * The flag to indicate whether the dropdown button should be in a circular shape. Defaults to 'false'.\n         * This will only work when there's only an icon inside the button without a text.\n         */\n        this.btnCircle = false;\n        /**\n         * If true it will stretch the button inside to 100% width\n         */\n        this.fullWidth = false;\n        /**\n         * Whether the dropdown should be closed when clicking one of dropdown items or pressing ESC\n         */\n        this.autoClose = true;\n        /**\n         * Specifies which element the dropdown should be appended to.\n         */\n        this.container = '';\n        /**\n         * The position of the dropdown. Defaults to bottom-right.\n         */\n        this.position = 'bottom-right';\n        /**\n         * The role of the dropdown menu defaults to menu\n         */\n        this.dropDownMenuRole = 'menu';\n        /**\n         * Predefined button sizes\n         */\n        this.buttonSize = 'md';\n        /**\n         * Dropdown menu (toggle) button aria label\n         */\n        // todo add translation when adding default value\n        this.dropDownButtonLabel = '';\n        /**\n         * Count of elements which is used in showing elements in the dropdown list.\n         */\n        this.visibleElementDependingOnViewport = COUNT_OF_ELEMENTS_TO_SHOW_IN_THE_DROPDOWN_LIST;\n        /**\n         * Add role=group onto host\n         */\n        this.role = 'group';\n        this.window = this.document.defaultView;\n    }\n    ngOnInit() {\n        // the buttons size will be set from the group size\n        if (this.elem.nativeElement.parentElement.className.indexOf('btn-group-sm') > -1) {\n            this.buttonSize = 'sm';\n        }\n    }\n    ngAfterViewInit() {\n        this.domAttrService.moveAriaAttributes(this.elem.nativeElement, this.buttonEl && this.buttonEl.nativeElement, this.renderer);\n        const itemList = this.getItemList();\n        if (itemList) {\n            this.setItemsTabIndex(itemList);\n        }\n    }\n    /**\n     * Internal handler for clicks on dropdown items\n     *\n     * @param event Event\n     * @param item Item that has been clicked\n     */\n    onClick(event, item) {\n        event.preventDefault();\n        this.select.emit(item);\n    }\n    /**\n     * Drop down change state event handler\n     *\n     * @param isOpen\n     */\n    onOpenChange(isOpen) {\n        if (isOpen) {\n            this.adjustDropdownListToViewport();\n        }\n        else {\n            this.focusedItemIndex = undefined;\n            if (this.buttonEl) {\n                this.ariaActivedescendant = null;\n            }\n        }\n    }\n    /**\n     * Function that returns the label of the dropdown item\n     *\n     * @param option Item that has been clicked\n     * @param labelKey Key that contains the label of the option object\n     */\n    getOptionLabel(option) {\n        return this.optionLabelKey && typeof option === 'object' ? option[this.optionLabelKey] : option;\n    }\n    onKeyUp(event) {\n        if (!this.isDropDownOpen()) {\n            return;\n        }\n        const itemList = this.getItemList();\n        if (!itemList) {\n            return;\n        }\n        this.setItemsTabIndex(itemList);\n        const config = this.keyActionsConfig.find((cv) => cv.predicate(getKeyCode(event)));\n        if (config) {\n            config.resolver(event, itemList);\n        }\n        const selectedItem = this.getSelectedItem(itemList);\n        if (this.buttonEl && this.isDropDownOpen() && selectedItem) {\n            this.ariaActivedescendant = selectedItem.id;\n        }\n    }\n    isLastListItemInFocus(itemList) {\n        return document.activeElement === itemList.item(itemList.length - 1);\n    }\n    isFirstListItemInFocus(itemList) {\n        return document.activeElement === itemList.item(0);\n    }\n    focusToggle() {\n        if (this.dropDownToggle) {\n            this.dropDownToggle.nativeElement.focus();\n        }\n    }\n    closeDropDown() {\n        if (this.dropdownDir) {\n            this.dropdownDir.close();\n        }\n    }\n    isDropDownOpen() {\n        return Boolean(this.dropdownDir && this.dropdownDir.isOpen());\n    }\n    getItemList() {\n        var _a, _b, _c;\n        //TODO: don't access private API\n        return (_c = (_b = (_a = this.dropdownDir) === null || _a === void 0 ? void 0 : _a['_menu']) === null || _b === void 0 ? void 0 : _b.nativeElement) === null || _c === void 0 ? void 0 : _c.querySelectorAll('[role=menuitem]');\n    }\n    setItemsTabIndex(itemList) {\n        Array.prototype.forEach.call(itemList, (cv) => {\n            this.renderer.setAttribute(cv, 'tabindex', '0');\n        });\n    }\n    focusListItem(itemList) {\n        const item = this.getSelectedItem(itemList);\n        if (item) {\n            item.focus();\n        }\n    }\n    getSelectedItem(itemList) {\n        let item;\n        if (itemList) {\n            // @ts-ignore\n            item = itemList.item(this.focusedItemIndex);\n        }\n        return item;\n    }\n    adjustDropdownListToViewport() {\n        if (!this.doElementsExist()) {\n            return;\n        }\n        this.dropdownContainerAdjustedMaxHeight = 0;\n        setTimeout(() => {\n            this.defineAdjustedDropdownMenuHeight();\n            this.cdr.detectChanges();\n        }, 0);\n    }\n    defineAdjustedDropdownMenuHeight() {\n        var _a, _b, _c, _d;\n        this.dropdownMenuItemHeight = this.customDropdownMenuItem\n            ? ((_a = this.dropdownMenuInnerContainer) === null || _a === void 0 ? void 0 : _a.nativeElement.firstChild).clientHeight\n            : (_b = this.dropdownListElement) === null || _b === void 0 ? void 0 : _b.nativeElement.offsetHeight;\n        if (!this.dropdownMenuItemHeight) {\n            this.clearStyles();\n            return;\n        }\n        // The min height of dropdown container list started from height of 1 element;\n        let heightOfAllDropdownItems = this.dropdownMenuItemHeight;\n        let containerHeightOfDropdownItems = (((_c = this.dropdownMenuContainer) === null || _c === void 0 ? void 0 : _c.nativeElement.offsetHeight) || 0) + heightOfAllDropdownItems;\n        this.defineMaxDropdownContainerHeight();\n        const iterationsForIncreasingHeight = Math.min(this.visibleElementDependingOnViewport, \n        // when we pass custom template items, this.options.length can be 0;\n        this.options.length || ((_d = this.dropdownMenuInnerContainer) === null || _d === void 0 ? void 0 : _d.nativeElement.childNodes.length));\n        for (let i = 1; i < iterationsForIncreasingHeight &&\n            // here we should avoid redundant increasing;\n            containerHeightOfDropdownItems + this.dropdownMenuItemHeight <= Number(this.dropdownContainerMaxHeight); i++) {\n            heightOfAllDropdownItems += this.dropdownMenuItemHeight;\n            containerHeightOfDropdownItems += this.dropdownMenuItemHeight;\n        }\n        this.dropdownContainerAdjustedMaxHeight = heightOfAllDropdownItems;\n    }\n    defineMaxDropdownContainerHeight() {\n        if (!this.window || !this.dropDownToggle)\n            return;\n        const relativeIndent = DROPDOWN_MENU_MIN_INDENT_TO_HORIZONTAL_AXIS;\n        const viewportHeight = this.window.innerHeight;\n        const { bottom, top } = this.dropDownToggle.nativeElement.getBoundingClientRect();\n        this.dropdownContainerMaxHeight = this.dropdownMenuItemHeight;\n        if (this.position.includes('bottom')) {\n            const viewportIndent = Math.floor(viewportHeight * relativeIndent);\n            const boundingHeight = viewportHeight - bottom;\n            // we should include a viewport indent because dropdownContainerMaxHeight must not overlap window.\n            this.dropdownContainerMaxHeight = boundingHeight - viewportIndent;\n        }\n        if (this.position === 'left' || this.position === 'right') {\n            const offsetDifference = top + bottom - viewportHeight;\n            // here we should calculate the smallest offset between top and bottom because dropdown list renders at middle;\n            const offset = offsetDifference <= 0 ? top : viewportHeight - bottom;\n            // here we multiply by 2 because left or right position renders dropdown list at middle;\n            this.dropdownContainerMaxHeight = Math.floor(2 * offset * (1 - relativeIndent));\n        }\n        if (this.position.includes('top')) {\n            this.dropdownContainerMaxHeight = Math.floor(top * (1 - relativeIndent));\n        }\n        if (this.position === 'auto') {\n            // auto calculates the most suitable position that`s why it is enough to set wider limitations;\n            this.dropdownContainerMaxHeight = Math.floor(viewportHeight * (1 - 2 * relativeIndent));\n        }\n    }\n    doElementsExist() {\n        var _a;\n        const requiredElementPresented = this.customDropdownMenuItem\n            ? (_a = this.dropdownMenuInnerContainer) === null || _a === void 0 ? void 0 : _a.nativeElement.firstChild\n            : !this.disabled;\n        return Boolean(requiredElementPresented);\n    }\n    clearStyles() {\n        // if we can`t define item height we should discard style properties for disabling adjusting.\n        if (this.dropdownMenuInnerContainer && this.dropdownMenuContainer) {\n            this.renderer.removeStyle(this.dropdownMenuInnerContainer.nativeElement, 'maxHeight');\n            this.renderer.removeStyle(this.dropdownMenuContainer.nativeElement, 'visibility');\n        }\n    }\n}\nDropdownMenuComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMenuComponent, deps: [{ token: i1.DomAttributesService }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i2.DeprecationsService }, { token: i0.ChangeDetectorRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });\nDropdownMenuComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DropdownMenuComponent, selector: \"bb-dropdown-menu-ui\", inputs: { label: \"label\", disabled: \"disabled\", options: \"options\", icon: \"icon\", iconSize: \"iconSize\", iconColor: \"iconColor\", btnColor: \"btnColor\", btnCircle: \"btnCircle\", optionLabelKey: \"optionLabelKey\", fullWidth: \"fullWidth\", autoClose: \"autoClose\", container: \"container\", position: \"position\", ariaLabel: \"ariaLabel\", dropDownMenuRole: \"dropDownMenuRole\", dropDownMenuId: \"dropDownMenuId\", buttonSize: \"buttonSize\", dropDownButtonLabel: \"dropDownButtonLabel\", visibleElementDependingOnViewport: \"visibleElementDependingOnViewport\", role: \"role\" }, outputs: { select: \"select\" }, host: { listeners: { \"window:keydown\": \"onKeyUp($event)\" }, properties: { \"attr.role\": \"this.role\" } }, providers: [\n        {\n            provide: DropdownMenuToken,\n            useExisting: DropdownMenuComponent,\n        },\n    ], queries: [{ propertyName: \"customLabel\", first: true, predicate: DropdownLabelDirective, descendants: true, read: TemplateRef, static: true }, { propertyName: \"customDropdownMenuItem\", first: true, predicate: DropdownMenuItemDirective, descendants: true, read: TemplateRef, static: true }], viewQueries: [{ propertyName: \"dropdownDir\", first: true, predicate: NgbDropdown, descendants: true, static: true }, { propertyName: \"dropDownToggle\", first: true, predicate: NgbDropdownToggle, descendants: true, read: ElementRef, static: true }, { propertyName: \"dropdownListElement\", first: true, predicate: [\"dropdownListElement\"], descendants: true }, { propertyName: \"dropdownMenuContainer\", first: true, predicate: [\"dropdownMenuContainer\"], descendants: true }, { propertyName: \"dropdownMenuInnerContainer\", first: true, predicate: [\"dropdownMenuInnerContainer\"], descendants: true }, { propertyName: \"buttonEl\", first: true, predicate: [\"button\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div\\n  (openChange)=\\\"onOpenChange($event)\\\"\\n  [autoClose]=\\\"autoClose\\\"\\n  [container]=\\\"container\\\"\\n  [placement]=\\\"position\\\"\\n  class=\\\"bb-dropdown-btn-group-wrapper\\\"\\n  ngbDropdown\\n>\\n  <button\\n    bbButton\\n    #button\\n    [attr.aria-label]=\\\"dropDownButtonLabel\\\"\\n    [attr.data-role]=\\\"'dropdown-menu-toggle-button'\\\"\\n    [attr.aria-owns]=\\\"dropdownId\\\"\\n    [attr.aria-activedescendant]=\\\"ariaActivedescendant\\\"\\n    [block]=\\\"fullWidth\\\"\\n    [circle]=\\\"btnCircle\\\"\\n    [color]=\\\"btnColor\\\"\\n    [buttonSize]=\\\"buttonSize\\\"\\n    [disabled]=\\\"disabled\\\"\\n    ngbDropdownToggle\\n  >\\n    <div\\n      class=\\\"dropdown-menu-toggle-button__content\\\"\\n      [ngClass]=\\\"{ 'dropdown-menu-toggle-button__content--full-width': fullWidth }\\\"\\n    >\\n      <ng-container *ngIf=\\\"customLabel; else bbDefaultDropdownLabel\\\">\\n        <ng-container *ngTemplateOutlet=\\\"customLabel\\\"></ng-container>\\n      </ng-container>\\n      <ng-template #bbDefaultDropdownLabel>\\n        <span\\n          class=\\\"dropdown-menu__label\\\"\\n          [ngClass]=\\\"{ 'dropdown-menu__label--full-width': fullWidth }\\\"\\n          *ngIf=\\\"label\\\"\\n          [attr.data-role]=\\\"'dropdown-menu-label'\\\"\\n          >{{ label }}</span\\n        >\\n      </ng-template>\\n      <ng-container *ngIf=\\\"icon\\\">\\n        <bb-icon-ui [color]=\\\"iconColor\\\" [name]=\\\"icon\\\" [size]=\\\"iconSize\\\" [cropped]=\\\"!btnCircle\\\"></bb-icon-ui>\\n      </ng-container>\\n    </div>\\n  </button>\\n  <div\\n    #dropdownMenuContainer\\n    class=\\\"dropdown-menu\\\"\\n    ngbDropdownMenu\\n    *ngIf=\\\"!disabled\\\"\\n    [attr.role]=\\\"dropDownMenuRole\\\"\\n    [attr.data-role]=\\\"'dropdown-menu'\\\"\\n    [attr.id]=\\\"dropDownMenuId\\\"\\n    [style.visibility]=\\\"dropdownContainerAdjustedMaxHeight ? 'visible' : 'hidden'\\\"\\n  >\\n    <div\\n      [attr.id]=\\\"dropdownId\\\"\\n      #dropdownMenuInnerContainer\\n      class=\\\"dropdown-menu-inner-container\\\"\\n      [attr.data-role]=\\\"'inner-dropdown-menu'\\\"\\n      [style.maxHeight.px]=\\\"dropdownContainerAdjustedMaxHeight\\\"\\n    >\\n      <ng-container *ngIf=\\\"customDropdownMenuItem; else bbDefaultDropdown\\\">\\n        <ng-container *ngTemplateOutlet=\\\"customDropdownMenuItem\\\"></ng-container>\\n      </ng-container>\\n\\n      <ng-template #bbDefaultDropdown>\\n        <a\\n          ngbDropdownItem\\n          role=\\\"menuitem\\\"\\n          href=\\\"#\\\"\\n          [attr.id]=\\\"dropdownId + i\\\"\\n          class=\\\"dropdown-item\\\"\\n          #dropdownListElement\\n          *ngFor=\\\"let option of options; let i = index\\\"\\n          (click)=\\\"onClick($event, option)\\\"\\n          [attr.data-role]=\\\"'dropdown-menu-item'\\\"\\n        >\\n          {{ getOptionLabel(option) }}\\n        </a>\\n      </ng-template>\\n    </div>\\n  </div>\\n</div>\\n\", components: [{ type: i3.IconComponent, selector: \"bb-icon-ui\", inputs: [\"name\", \"inverse\", \"size\", \"color\", \"animate\", \"aria-label\", \"cropped\", \"backgroundType\"] }], directives: [{ type: i4.NgbDropdown, selector: \"[ngbDropdown]\", inputs: [\"open\", \"placement\", \"container\", \"autoClose\", \"display\", \"dropdownClass\"], outputs: [\"openChange\"], exportAs: [\"ngbDropdown\"] }, { type: i5.ButtonDirective, selector: \"button[bbButton]\", inputs: [\"type\", \"color\", \"buttonSize\", \"block\", \"circle\"] }, { type: i4.NgbDropdownToggle, selector: \"[ngbDropdownToggle]\" }, { type: i6.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i6.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i6.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i4.NgbDropdownMenu, selector: \"[ngbDropdownMenu]\" }, { type: i6.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i4.NgbDropdownItem, selector: \"[ngbDropdownItem]\", inputs: [\"disabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMenuComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-dropdown-menu-ui',\n                    templateUrl: './dropdown-menu.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: DropdownMenuToken,\n                            useExisting: DropdownMenuComponent,\n                        },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i1.DomAttributesService }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i2.DeprecationsService }, { type: i0.ChangeDetectorRef }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { customLabel: [{\n                type: ContentChild,\n                args: [DropdownLabelDirective, { read: TemplateRef, static: true }]\n            }], customDropdownMenuItem: [{\n                type: ContentChild,\n                args: [DropdownMenuItemDirective, { read: TemplateRef, static: true }]\n            }], dropdownDir: [{\n                type: ViewChild,\n                args: [NgbDropdown, { static: true }]\n            }], dropDownToggle: [{\n                type: ViewChild,\n                args: [NgbDropdownToggle, { read: ElementRef, static: true }]\n            }], dropdownListElement: [{\n                type: ViewChild,\n                args: ['dropdownListElement']\n            }], dropdownMenuContainer: [{\n                type: ViewChild,\n                args: ['dropdownMenuContainer']\n            }], dropdownMenuInnerContainer: [{\n                type: ViewChild,\n                args: ['dropdownMenuInnerContainer']\n            }], label: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], icon: [{\n                type: Input\n            }], iconSize: [{\n                type: Input\n            }], iconColor: [{\n                type: Input\n            }], btnColor: [{\n                type: Input\n            }], btnCircle: [{\n                type: Input\n            }], optionLabelKey: [{\n                type: Input\n            }], fullWidth: [{\n                type: Input\n            }], autoClose: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], dropDownMenuRole: [{\n                type: Input\n            }], dropDownMenuId: [{\n                type: Input\n            }], buttonSize: [{\n                type: Input\n            }], dropDownButtonLabel: [{\n                type: Input\n            }], visibleElementDependingOnViewport: [{\n                type: Input\n            }], role: [{\n                type: HostBinding,\n                args: ['attr.role']\n            }, {\n                type: Input\n            }], buttonEl: [{\n                type: ViewChild,\n                args: ['button']\n            }], onKeyUp: [{\n                type: HostListener,\n                args: ['window:keydown', ['$event']]\n            }] } });\n\nclass DropdownMenuFullWidthDirective {\n    constructor(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        /**\n         * If true it will stretch the dropdown menu to 100% width\n         */\n        this.bbDropdownToggleFullWidth = false;\n    }\n    ngAfterViewInit() {\n        const dropdownBtn = this.elementRef.nativeElement.querySelector('[ngbDropdownToggle]');\n        const dropdownMenu = this.elementRef.nativeElement.querySelector('[ngbDropdownMenu]');\n        const splitBtnWrapper = dropdownBtn === null || dropdownBtn === void 0 ? void 0 : dropdownBtn.closest('div.btn-group');\n        if (this.bbDropdownToggleFullWidth) {\n            this.dropdownMenuChanges = new MutationObserver((mutations) => {\n                mutations.forEach((mutation) => {\n                    if (mutation.attributeName === 'class' && dropdownMenu.classList.contains('show')) {\n                        const minWidth = splitBtnWrapper ? splitBtnWrapper.clientWidth : dropdownBtn.clientWidth;\n                        this.renderer.setStyle(dropdownMenu, 'min-width', `${minWidth}px`);\n                    }\n                });\n            });\n            this.dropdownMenuChanges.observe(dropdownMenu, {\n                attributes: true,\n            });\n        }\n    }\n    ngOnDestroy() {\n        var _a;\n        (_a = this.dropdownMenuChanges) === null || _a === void 0 ? void 0 : _a.disconnect();\n    }\n}\nDropdownMenuFullWidthDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMenuFullWidthDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nDropdownMenuFullWidthDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DropdownMenuFullWidthDirective, selector: \"[bbDropdownToggleFullWidth]\", inputs: { bbDropdownToggleFullWidth: \"bbDropdownToggleFullWidth\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMenuFullWidthDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbDropdownToggleFullWidth]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { bbDropdownToggleFullWidth: [{\n                type: Input\n            }] } });\n\nclass DropdownMenuModule {\n}\nDropdownMenuModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDropdownMenuModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMenuModule, declarations: [DropdownMenuComponent,\n        DropdownMenuItemDirective,\n        DropdownLabelDirective,\n        DropdownMenuOptionDirective,\n        DropdownMenuFullWidthDirective], imports: [CommonModule, NgbDropdownModule, IconModule, ButtonModule], exports: [DropdownMenuComponent,\n        DropdownMenuItemDirective,\n        DropdownLabelDirective,\n        DropdownMenuOptionDirective,\n        DropdownMenuFullWidthDirective] });\nDropdownMenuModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMenuModule, imports: [[CommonModule, NgbDropdownModule, IconModule, ButtonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMenuModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, NgbDropdownModule, IconModule, ButtonModule],\n                    declarations: [\n                        DropdownMenuComponent,\n                        DropdownMenuItemDirective,\n                        DropdownLabelDirective,\n                        DropdownMenuOptionDirective,\n                        DropdownMenuFullWidthDirective,\n                    ],\n                    exports: [\n                        DropdownMenuComponent,\n                        DropdownMenuItemDirective,\n                        DropdownLabelDirective,\n                        DropdownMenuOptionDirective,\n                        DropdownMenuFullWidthDirective,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DROPDOWN_MENU_OPTIONS, DROPDOWN_TEMPLATE_MENU_OPTIONS, DropdownLabelDirective, DropdownMenuComponent, DropdownMenuFullWidthDirective, DropdownMenuItemDirective, DropdownMenuModule, DropdownMenuOptionDirective, DropdownMenuOptionToken, DropdownMenuToken };\n"]},"metadata":{},"sourceType":"module"}