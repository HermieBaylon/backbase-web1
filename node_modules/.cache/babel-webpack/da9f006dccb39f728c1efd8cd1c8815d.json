{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\nconst ApprovalRecordStatus = {\n  INITIATED: 'INITIATED',\n  PROCESSING: 'PROCESSING',\n  SUCCESS: 'SUCCESS',\n  FAILED: 'FAILED'\n};\nconst ApprovalStatus = {\n  PENDING: 'PENDING',\n  APPROVED: 'APPROVED',\n  REJECTED: 'REJECTED',\n  CANCELLED: 'CANCELLED'\n};\nconst LogicalOperator = {\n  OR: 'OR'\n};\nconst PolicyAssignmentStatus = {\n  ACTIVE: 'ACTIVE',\n  PENDING: 'PENDING',\n  REJECTED: 'REJECTED',\n  PENDINGDELETE: 'PENDING_DELETE',\n  DELETED: 'DELETED'\n};\nconst RecordStatus = {\n  APPROVED: 'APPROVED',\n  REJECTED: 'REJECTED'\n};\nconst APPROVAL_BASE_PATH = new InjectionToken('APPROVAL_BASE_PATH');\nconst COLLECTION_FORMATS = {\n  'csv': ',',\n  'tsv': '   ',\n  'ssv': ' ',\n  'pipes': '|'\n};\n\nclass ApprovalConfiguration {\n  constructor(configurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n    this.encoder = configurationParameters.encoder;\n\n    if (configurationParameters.credentials) {\n      this.credentials = configurationParameters.credentials;\n    } else {\n      this.credentials = {};\n    }\n  }\n\n  selectHeaderContentType(contentTypes) {\n    if (contentTypes.length === 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n\n    return type;\n  }\n\n  selectHeaderAccept(accepts) {\n    if (accepts.length === 0) {\n      return undefined;\n    }\n\n    const type = accepts.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return accepts[0];\n    }\n\n    return type;\n  }\n\n  isJsonMime(mime) {\n    const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n    return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n  }\n\n  lookupCredential(key) {\n    const value = this.credentials[key];\n    return typeof value === 'function' ? value() : value;\n  }\n\n}\n\nconst CONFIG_TOKEN = new InjectionToken('api-data-module ApprovalConfiguration');\n\nclass ApprovalApiModule {\n  constructor(parentModule, http, dataModulesManager, config) {\n    if (parentModule) {\n      throw new Error('ApprovalApiModule is already loaded. Import in your base AppModule only.');\n    }\n\n    if (!http) {\n      throw new Error('You need to import the HttpClientModule in your AppModule! \\n' + 'See also https://github.com/angular/angular/issues/20575');\n    }\n\n    if (dataModulesManager) {\n      dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n        apiRoot: '',\n        servicePath: config.basePath || '',\n        headers: {}\n      });\n    }\n  }\n\n  static forRoot(configurationFactory) {\n    return {\n      ngModule: ApprovalApiModule,\n      providers: [{\n        provide: ApprovalConfiguration,\n        useFactory: configurationFactory\n      }]\n    };\n  }\n\n}\n\nApprovalApiModule.ɵfac = function ApprovalApiModule_Factory(t) {\n  return new (t || ApprovalApiModule)(i0.ɵɵinject(ApprovalApiModule, 12), i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DataModulesManager, 8), i0.ɵɵinject(ApprovalConfiguration));\n};\n\nApprovalApiModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ApprovalApiModule\n});\nApprovalApiModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [],\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ApprovalApiModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [],\n      exports: [],\n      providers: []\n    }]\n  }], function () {\n    return [{\n      type: ApprovalApiModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: i1.HttpClient,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2.DataModulesManager,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ApprovalConfiguration\n    }];\n  }, null);\n})();\n\nclass CustomHttpParameterCodec {\n  encodeKey(k) {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v) {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k) {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v) {\n    return decodeURIComponent(v);\n  }\n\n}\n\nclass ApprovalTypeAssignmentsHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new ApprovalConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  deleteApprovalTypeAssignmentById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling deleteApprovalTypeAssignmentById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/approval-type-assignments/${encodeURIComponent(String(_id))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deleteApprovalTypeAssignmentByIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling deleteApprovalTypeAssignmentById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/approval-type-assignments/${encodeURIComponent(String(_id))}`;\n  }\n\n  getAssignedApprovalTypeById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getAssignedApprovalTypeById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/approval-type-assignments/${encodeURIComponent(String(_id))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getAssignedApprovalTypeByIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getAssignedApprovalTypeById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/approval-type-assignments/${encodeURIComponent(String(_id))}`;\n  }\n\n  postAssignApprovalType(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _postApprovalTypeAssignmentRequest = requestParameters[\"postApprovalTypeAssignmentRequest\"];\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/approval-type-assignments`, _postApprovalTypeAssignmentRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postAssignApprovalTypeUrl(requestParameters) {\n    const _postApprovalTypeAssignmentRequest = requestParameters[\"postApprovalTypeAssignmentRequest\"];\n    return `${this.configuration.basePath}/client-api/v2/approval-type-assignments`;\n  }\n\n  putUpdateApprovalTypeAssignmentById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling putUpdateApprovalTypeAssignmentById.');\n    }\n\n    const _presentationPutApprovalTypeAssignmentRequest = requestParameters[\"presentationPutApprovalTypeAssignmentRequest\"];\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/approval-type-assignments/${encodeURIComponent(String(_id))}`, _presentationPutApprovalTypeAssignmentRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putUpdateApprovalTypeAssignmentByIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling putUpdateApprovalTypeAssignmentById.');\n    }\n\n    const _presentationPutApprovalTypeAssignmentRequest = requestParameters[\"presentationPutApprovalTypeAssignmentRequest\"];\n    return `${this.configuration.basePath}/client-api/v2/approval-type-assignments/${encodeURIComponent(String(_id))}`;\n  }\n\n}\n\nApprovalTypeAssignmentsHttpService.ɵfac = function ApprovalTypeAssignmentsHttpService_Factory(t) {\n  return new (t || ApprovalTypeAssignmentsHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(APPROVAL_BASE_PATH, 8), i0.ɵɵinject(ApprovalConfiguration, 8));\n};\n\nApprovalTypeAssignmentsHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ApprovalTypeAssignmentsHttpService,\n  factory: ApprovalTypeAssignmentsHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ApprovalTypeAssignmentsHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [APPROVAL_BASE_PATH]\n      }]\n    }, {\n      type: ApprovalConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst ApprovalTypeAssignmentsHttpServiceDeleteApprovalTypeAssignmentByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/approval-type-assignments/{id}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst ApprovalTypeAssignmentsHttpServiceGetAssignedApprovalTypeByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/approval-type-assignments/{id}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"approvalType\": {\n        \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n        \"name\": \"A\",\n        \"description\": \"1st approval\",\n        \"rank\": 100\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst ApprovalTypeAssignmentsHttpServicePostAssignApprovalTypeMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/approval-type-assignments\",\n  method: \"POST\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"Job profile is already assigned to an approval type\",\n        \"key\": \"approval.api.ApprovalTypeAssignmentConflict\",\n        \"context\": {\n          \"conflictingJobProfileId\": \"0f5cfbb507054d589d149e921838dc80\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"Approval type not found\",\n        \"key\": \"approval.api.ApprovalTypeNotFound\",\n        \"context\": {\n          \"invalidApprovalTypeId\": \"7c59fed4-b737-11e8-96f8-529269fb1459\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst ApprovalTypeAssignmentsHttpServicePutUpdateApprovalTypeAssignmentByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/approval-type-assignments/{id}\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"Approval type not found\",\n        \"key\": \"approval.api.ApprovalTypeNotFound\",\n        \"context\": {\n          \"invalidApprovalTypeId\": \"7c59fed4-b737-11e8-96f8-529269fb1459\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\"\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Not found\",\n      \"errors\": [{\n        \"message\": \"Assigned approval type not found\",\n        \"key\": \"approval.api.AssignedApprovalTypeNotFound\",\n        \"context\": {\n          \"jobProfileId\": \"7c59fed4-b737-11e8-96f8-529269fb1459\"\n        }\n      }]\n    }\n  }]\n}]);\nconst ApprovalTypeAssignmentsHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/approval-type-assignments/{id}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/approval-type-assignments/{id}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"approvalType\": {\n        \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n        \"name\": \"A\",\n        \"description\": \"1st approval\",\n        \"rank\": 100\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/approval-type-assignments\",\n  method: \"POST\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"Job profile is already assigned to an approval type\",\n        \"key\": \"approval.api.ApprovalTypeAssignmentConflict\",\n        \"context\": {\n          \"conflictingJobProfileId\": \"0f5cfbb507054d589d149e921838dc80\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"Approval type not found\",\n        \"key\": \"approval.api.ApprovalTypeNotFound\",\n        \"context\": {\n          \"invalidApprovalTypeId\": \"7c59fed4-b737-11e8-96f8-529269fb1459\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/approval-type-assignments/{id}\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"Approval type not found\",\n        \"key\": \"approval.api.ApprovalTypeNotFound\",\n        \"context\": {\n          \"invalidApprovalTypeId\": \"7c59fed4-b737-11e8-96f8-529269fb1459\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\"\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Not found\",\n      \"errors\": [{\n        \"message\": \"Assigned approval type not found\",\n        \"key\": \"approval.api.AssignedApprovalTypeNotFound\",\n        \"context\": {\n          \"jobProfileId\": \"7c59fed4-b737-11e8-96f8-529269fb1459\"\n        }\n      }]\n    }\n  }]\n}]);\n\nclass ApprovalTypesHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new ApprovalConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  getAvailableApprovalTypes(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/approval-types`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getAvailableApprovalTypesUrl() {\n    return `${this.configuration.basePath}/client-api/v2/approval-types`;\n  }\n\n}\n\nApprovalTypesHttpService.ɵfac = function ApprovalTypesHttpService_Factory(t) {\n  return new (t || ApprovalTypesHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(APPROVAL_BASE_PATH, 8), i0.ɵɵinject(ApprovalConfiguration, 8));\n};\n\nApprovalTypesHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ApprovalTypesHttpService,\n  factory: ApprovalTypesHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ApprovalTypesHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [APPROVAL_BASE_PATH]\n      }]\n    }, {\n      type: ApprovalConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst ApprovalTypesHttpServiceGetAvailableApprovalTypesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/approval-types\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"approvalTypes\": [{\n        \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n        \"name\": \"A\",\n        \"description\": \"1st approval\",\n        \"rank\": 100\n      }, {\n        \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n        \"name\": \"B\",\n        \"description\": \"2nd approval\",\n        \"rank\": 101\n      }, {\n        \"id\": \"7b9459a3-03be-4b80-97da-53005bad9fb7\",\n        \"name\": \"C\",\n        \"description\": \"3rd approval\",\n        \"rank\": 300\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst ApprovalTypesHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/approval-types\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"approvalTypes\": [{\n        \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n        \"name\": \"A\",\n        \"description\": \"1st approval\",\n        \"rank\": 100\n      }, {\n        \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n        \"name\": \"B\",\n        \"description\": \"2nd approval\",\n        \"rank\": 101\n      }, {\n        \"id\": \"7b9459a3-03be-4b80-97da-53005bad9fb7\",\n        \"name\": \"C\",\n        \"description\": \"3rd approval\",\n        \"rank\": 300\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\n\nclass ApprovalsHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new ApprovalConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  getApprovalByApprovalId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _approvalId = requestParameters[\"approvalId\"];\n\n    if (_approvalId === null || _approvalId === undefined) {\n      throw new Error('Required parameter approvalId was null or undefined when calling getApprovalByApprovalId.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/approvals/${encodeURIComponent(String(_approvalId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getApprovalByApprovalIdUrl(requestParameters) {\n    const _approvalId = requestParameters[\"approvalId\"];\n\n    if (_approvalId === null || _approvalId === undefined) {\n      throw new Error('Required parameter approvalId was null or undefined when calling getApprovalByApprovalId.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/approvals/${encodeURIComponent(String(_approvalId))}`;\n  }\n\n  getApprovals(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _businessFunctions = requestParameters[\"businessFunctions\"];\n\n    if (_businessFunctions === null || _businessFunctions === undefined) {\n      throw new Error('Required parameter businessFunctions was null or undefined when calling getApprovals.');\n    }\n\n    const _cursor = requestParameters[\"cursor\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_businessFunctions) {\n      _businessFunctions.forEach(element => {\n        queryParameters = this.addToHttpParams(queryParameters, element, 'businessFunctions');\n      });\n    }\n\n    if (_cursor !== undefined && _cursor !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/approvals`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getApprovalsUrl(requestParameters) {\n    const _businessFunctions = requestParameters[\"businessFunctions\"];\n\n    if (_businessFunctions === null || _businessFunctions === undefined) {\n      throw new Error('Required parameter businessFunctions was null or undefined when calling getApprovals.');\n    }\n\n    const _cursor = requestParameters[\"cursor\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_businessFunctions) {\n      _businessFunctions.forEach(element => {\n        queryParameters = this.addToHttpParams(queryParameters, element, 'businessFunctions');\n      });\n    }\n\n    if (_cursor !== undefined && _cursor !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/approvals${queryString ? `?${queryString}` : ''}`;\n  }\n\n  getProgressStatusByApprovalRecordId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _approvalRecordId = requestParameters[\"approvalRecordId\"];\n\n    if (_approvalRecordId === null || _approvalRecordId === undefined) {\n      throw new Error('Required parameter approvalRecordId was null or undefined when calling getProgressStatusByApprovalRecordId.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/approval-records/${encodeURIComponent(String(_approvalRecordId))}/progress-status`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getProgressStatusByApprovalRecordIdUrl(requestParameters) {\n    const _approvalRecordId = requestParameters[\"approvalRecordId\"];\n\n    if (_approvalRecordId === null || _approvalRecordId === undefined) {\n      throw new Error('Required parameter approvalRecordId was null or undefined when calling getProgressStatusByApprovalRecordId.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/approval-records/${encodeURIComponent(String(_approvalRecordId))}/progress-status`;\n  }\n\n}\n\nApprovalsHttpService.ɵfac = function ApprovalsHttpService_Factory(t) {\n  return new (t || ApprovalsHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(APPROVAL_BASE_PATH, 8), i0.ɵɵinject(ApprovalConfiguration, 8));\n};\n\nApprovalsHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ApprovalsHttpService,\n  factory: ApprovalsHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ApprovalsHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [APPROVAL_BASE_PATH]\n      }]\n    }, {\n      type: ApprovalConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst ApprovalsHttpServiceGetApprovalByApprovalIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/approvals/{approvalId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"approvalDetails\": {\n        \"id\": \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n        \"userId\": \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n        \"userFullName\": \"Paddy Brian\",\n        \"externalUserId\": \"paddy-brian\",\n        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n        \"itemId\": \"4cf9a1da-2f48-4f9b-8a97-204c8cd43aa0\",\n        \"dataAccessItemId\": \"975809ca-008c-4732-9ae0-a2531d4800bc\",\n        \"resource\": \"Payments\",\n        \"function\": \"SEPA_CT\",\n        \"status\": \"PENDING\",\n        \"createdAt\": \"2018-07-22T13:44:02Z\",\n        \"records\": [{\n          \"id\": \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n          \"userId\": \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n          \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n          \"externalUserId\": \"robin-green\",\n          \"userFullName\": \"Robin Green\",\n          \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n          \"status\": \"APPROVED\",\n          \"createdAt\": \"2018-01-22T13:44:02Z\"\n        }],\n        \"approvalTypes\": [{\n          \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n          \"name\": \"A\",\n          \"description\": \"1st approval\",\n          \"rank\": 100\n        }, {\n          \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n          \"name\": \"B\",\n          \"description\": \"2nd approval\",\n          \"rank\": 101\n        }],\n        \"policy\": {\n          \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n          \"name\": \"Default policy\",\n          \"description\": \"A default policy that requires two approvals of different types: A + B\",\n          \"items\": [{\n            \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n            \"approvalType\": {\n              \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n              \"name\": \"A\",\n              \"description\": \"1st approval\",\n              \"rank\": 100\n            },\n            \"numberOfApprovals\": 1\n          }, {\n            \"approvalTypeId\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n            \"approvalType\": {\n              \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n              \"name\": \"B\",\n              \"description\": \"2nd approval\",\n              \"rank\": 101\n            },\n            \"numberOfApprovals\": 1\n          }]\n        },\n        \"canApprove\": false,\n        \"canReject\": false,\n        \"finalApprover\": false\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst ApprovalsHttpServiceGetApprovalsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/approvals\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"approvals\": [{\n        \"id\": \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n        \"userId\": \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n        \"itemId\": \"4cf9a1da-2f48-4f9b-8a97-204c8cd43aa0\",\n        \"dataAccessItemId\": \"975809ca-008c-4732-9ae0-a2531d4800bc\",\n        \"resource\": \"Payments\",\n        \"function\": \"SEPA_CT\",\n        \"status\": \"PENDING\",\n        \"records\": [{\n          \"id\": \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n          \"userId\": \"fc546710-cb4d-40a2-9a5c-52f6772a907b\",\n          \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n          \"approvalTypeId\": \"8b4cf4ba-1b6d-43fe-bb44-3c762e0ba5c1\",\n          \"status\": \"APPROVED\",\n          \"createdAt\": \"2018-01-22T13:44:02Z\"\n        }],\n        \"finalApprover\": true,\n        \"createdAt\": \"2018-01-22T13:44:02Z\"\n      }, {\n        \"id\": \"21339aac-9e00-4dd5-9dd9-c9b1727471cf\",\n        \"userId\": \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n        \"itemId\": \"4af6d50e-cde5-401d-95c9-2a78f51672c9\",\n        \"dataAccessItemId\": \"4f727cdf-426f-42aa-bbf1-6a4548d1d4a9\",\n        \"resource\": \"Payments\",\n        \"function\": \"US_DOMESTIC\",\n        \"status\": \"PENDING\",\n        \"records\": [],\n        \"finalApprover\": false,\n        \"createdAt\": \"2018-01-22T13:44:02Z\"\n      }],\n      \"cursor\": \"3aa95dcf-fba8-41b8-a97b-bfae602e1a7d\"\n    }\n  }]\n}]);\nconst ApprovalsHttpServiceGetProgressStatusByApprovalRecordIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/approval-records/{approvalRecordId}/progress-status\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"status\": \"INITIATED\",\n      \"statusCode\": \"CONFIRMATION_PENDING\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst ApprovalsHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/approvals/{approvalId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"approvalDetails\": {\n        \"id\": \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n        \"userId\": \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n        \"userFullName\": \"Paddy Brian\",\n        \"externalUserId\": \"paddy-brian\",\n        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n        \"itemId\": \"4cf9a1da-2f48-4f9b-8a97-204c8cd43aa0\",\n        \"dataAccessItemId\": \"975809ca-008c-4732-9ae0-a2531d4800bc\",\n        \"resource\": \"Payments\",\n        \"function\": \"SEPA_CT\",\n        \"status\": \"PENDING\",\n        \"createdAt\": \"2018-07-22T13:44:02Z\",\n        \"records\": [{\n          \"id\": \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n          \"userId\": \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n          \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n          \"externalUserId\": \"robin-green\",\n          \"userFullName\": \"Robin Green\",\n          \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n          \"status\": \"APPROVED\",\n          \"createdAt\": \"2018-01-22T13:44:02Z\"\n        }],\n        \"approvalTypes\": [{\n          \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n          \"name\": \"A\",\n          \"description\": \"1st approval\",\n          \"rank\": 100\n        }, {\n          \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n          \"name\": \"B\",\n          \"description\": \"2nd approval\",\n          \"rank\": 101\n        }],\n        \"policy\": {\n          \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n          \"name\": \"Default policy\",\n          \"description\": \"A default policy that requires two approvals of different types: A + B\",\n          \"items\": [{\n            \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n            \"approvalType\": {\n              \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n              \"name\": \"A\",\n              \"description\": \"1st approval\",\n              \"rank\": 100\n            },\n            \"numberOfApprovals\": 1\n          }, {\n            \"approvalTypeId\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n            \"approvalType\": {\n              \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n              \"name\": \"B\",\n              \"description\": \"2nd approval\",\n              \"rank\": 101\n            },\n            \"numberOfApprovals\": 1\n          }]\n        },\n        \"canApprove\": false,\n        \"canReject\": false,\n        \"finalApprover\": false\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/approvals\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"approvals\": [{\n        \"id\": \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n        \"userId\": \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n        \"itemId\": \"4cf9a1da-2f48-4f9b-8a97-204c8cd43aa0\",\n        \"dataAccessItemId\": \"975809ca-008c-4732-9ae0-a2531d4800bc\",\n        \"resource\": \"Payments\",\n        \"function\": \"SEPA_CT\",\n        \"status\": \"PENDING\",\n        \"records\": [{\n          \"id\": \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n          \"userId\": \"fc546710-cb4d-40a2-9a5c-52f6772a907b\",\n          \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n          \"approvalTypeId\": \"8b4cf4ba-1b6d-43fe-bb44-3c762e0ba5c1\",\n          \"status\": \"APPROVED\",\n          \"createdAt\": \"2018-01-22T13:44:02Z\"\n        }],\n        \"finalApprover\": true,\n        \"createdAt\": \"2018-01-22T13:44:02Z\"\n      }, {\n        \"id\": \"21339aac-9e00-4dd5-9dd9-c9b1727471cf\",\n        \"userId\": \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n        \"itemId\": \"4af6d50e-cde5-401d-95c9-2a78f51672c9\",\n        \"dataAccessItemId\": \"4f727cdf-426f-42aa-bbf1-6a4548d1d4a9\",\n        \"resource\": \"Payments\",\n        \"function\": \"US_DOMESTIC\",\n        \"status\": \"PENDING\",\n        \"records\": [],\n        \"finalApprover\": false,\n        \"createdAt\": \"2018-01-22T13:44:02Z\"\n      }],\n      \"cursor\": \"3aa95dcf-fba8-41b8-a97b-bfae602e1a7d\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/approval-records/{approvalRecordId}/progress-status\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"status\": \"INITIATED\",\n      \"statusCode\": \"CONFIRMATION_PENDING\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\n\nclass PoliciesHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new ApprovalConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  getAvailablePolicies(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/policies`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getAvailablePoliciesUrl() {\n    return `${this.configuration.basePath}/client-api/v2/policies`;\n  }\n\n}\n\nPoliciesHttpService.ɵfac = function PoliciesHttpService_Factory(t) {\n  return new (t || PoliciesHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(APPROVAL_BASE_PATH, 8), i0.ɵɵinject(ApprovalConfiguration, 8));\n};\n\nPoliciesHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PoliciesHttpService,\n  factory: PoliciesHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PoliciesHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [APPROVAL_BASE_PATH]\n      }]\n    }, {\n      type: ApprovalConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst PoliciesHttpServiceGetAvailablePoliciesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/policies\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"policies\": [{\n        \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n        \"name\": \"Simple policy\",\n        \"description\": \"A basic policy, requires one approval of type 'A' and one of type 'B'.\",\n        \"items\": [{\n          \"approvalType\": {\n            \"id\": \"748fef85-2a7a-47fa-b016-7cae583a0b79\",\n            \"name\": \"A\",\n            \"description\": \"1st approval\",\n            \"rank\": 100\n          },\n          \"numberOfApprovals\": 1\n        }, {\n          \"approvalType\": {\n            \"id\": \"9c666d9e-92d4-4d8f-9366-a4d3ee336c0c\",\n            \"name\": \"B\",\n            \"description\": \"2nd approval\",\n            \"rank\": 200\n          },\n          \"numberOfApprovals\": 1\n        }]\n      }, {\n        \"id\": \"5a2d069a-d4c8-43aa-ba93-9069c65458ec\",\n        \"name\": \"Secondary policy\",\n        \"description\": \"A secondary policy that requires two approvals of the same type: A + A\",\n        \"items\": [{\n          \"approvalType\": {\n            \"id\": \"748fef85-2a7a-47fa-b016-7cae583a0b79\",\n            \"name\": \"A\",\n            \"description\": \"1st approval\",\n            \"rank\": 100\n          },\n          \"numberOfApprovals\": 2\n        }]\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PoliciesHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/policies\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"policies\": [{\n        \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n        \"name\": \"Simple policy\",\n        \"description\": \"A basic policy, requires one approval of type 'A' and one of type 'B'.\",\n        \"items\": [{\n          \"approvalType\": {\n            \"id\": \"748fef85-2a7a-47fa-b016-7cae583a0b79\",\n            \"name\": \"A\",\n            \"description\": \"1st approval\",\n            \"rank\": 100\n          },\n          \"numberOfApprovals\": 1\n        }, {\n          \"approvalType\": {\n            \"id\": \"9c666d9e-92d4-4d8f-9366-a4d3ee336c0c\",\n            \"name\": \"B\",\n            \"description\": \"2nd approval\",\n            \"rank\": 200\n          },\n          \"numberOfApprovals\": 1\n        }]\n      }, {\n        \"id\": \"5a2d069a-d4c8-43aa-ba93-9069c65458ec\",\n        \"name\": \"Secondary policy\",\n        \"description\": \"A secondary policy that requires two approvals of the same type: A + A\",\n        \"items\": [{\n          \"approvalType\": {\n            \"id\": \"748fef85-2a7a-47fa-b016-7cae583a0b79\",\n            \"name\": \"A\",\n            \"description\": \"1st approval\",\n            \"rank\": 100\n          },\n          \"numberOfApprovals\": 2\n        }]\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\n\nclass PolicyAssignmentsHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new ApprovalConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  deletePolicyAssignments(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n    const _resource = requestParameters[\"resource\"];\n    const _function = requestParameters[\"function\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _serviceAgreementId, 'serviceAgreementId');\n    }\n\n    if (_resource !== undefined && _resource !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _resource, 'resource');\n    }\n\n    if (_function !== undefined && _function !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _function, 'function');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/policy-assignments`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deletePolicyAssignmentsUrl(requestParameters) {\n    const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n    const _resource = requestParameters[\"resource\"];\n    const _function = requestParameters[\"function\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _serviceAgreementId, 'serviceAgreementId');\n    }\n\n    if (_resource !== undefined && _resource !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _resource, 'resource');\n    }\n\n    if (_function !== undefined && _function !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _function, 'function');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/policy-assignments${queryString ? `?${queryString}` : ''}`;\n  }\n\n  getApprovableBusinessFunctions(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _serviceAgreementId, 'serviceAgreementId');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/policy-assignments/approvable-business-functions`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getApprovableBusinessFunctionsUrl(requestParameters) {\n    const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _serviceAgreementId, 'serviceAgreementId');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/policy-assignments/approvable-business-functions${queryString ? `?${queryString}` : ''}`;\n  }\n\n  postPolicyAssignments(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _presentationPolicyAssignmentCollectionRequest = requestParameters[\"presentationPolicyAssignmentCollectionRequest\"];\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/policy-assignments`, _presentationPolicyAssignmentCollectionRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postPolicyAssignmentsUrl(requestParameters) {\n    const _presentationPolicyAssignmentCollectionRequest = requestParameters[\"presentationPolicyAssignmentCollectionRequest\"];\n    return `${this.configuration.basePath}/client-api/v2/policy-assignments`;\n  }\n\n  putApprovalsByPolicyAssignmentId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling putApprovalsByPolicyAssignmentId.');\n    }\n\n    const _presentationPolicyAssignmentApprovalRequest = requestParameters[\"presentationPolicyAssignmentApprovalRequest\"];\n\n    if (_presentationPolicyAssignmentApprovalRequest === null || _presentationPolicyAssignmentApprovalRequest === undefined) {\n      throw new Error('Required parameter presentationPolicyAssignmentApprovalRequest was null or undefined when calling putApprovalsByPolicyAssignmentId.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/policy-assignments/${encodeURIComponent(String(_id))}/approvals`, _presentationPolicyAssignmentApprovalRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putApprovalsByPolicyAssignmentIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling putApprovalsByPolicyAssignmentId.');\n    }\n\n    const _presentationPolicyAssignmentApprovalRequest = requestParameters[\"presentationPolicyAssignmentApprovalRequest\"];\n\n    if (_presentationPolicyAssignmentApprovalRequest === null || _presentationPolicyAssignmentApprovalRequest === undefined) {\n      throw new Error('Required parameter presentationPolicyAssignmentApprovalRequest was null or undefined when calling putApprovalsByPolicyAssignmentId.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/policy-assignments/${encodeURIComponent(String(_id))}/approvals`;\n  }\n\n  retrievePolicyAssignmentById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling retrievePolicyAssignmentById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/policy-assignments/${encodeURIComponent(String(_id))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  retrievePolicyAssignmentByIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling retrievePolicyAssignmentById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/policy-assignments/${encodeURIComponent(String(_id))}`;\n  }\n\n}\n\nPolicyAssignmentsHttpService.ɵfac = function PolicyAssignmentsHttpService_Factory(t) {\n  return new (t || PolicyAssignmentsHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(APPROVAL_BASE_PATH, 8), i0.ɵɵinject(ApprovalConfiguration, 8));\n};\n\nPolicyAssignmentsHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PolicyAssignmentsHttpService,\n  factory: PolicyAssignmentsHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolicyAssignmentsHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [APPROVAL_BASE_PATH]\n      }]\n    }, {\n      type: ApprovalConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst PolicyAssignmentsHttpServiceDeletePolicyAssignmentsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/policy-assignments\",\n  method: \"DELETE\",\n  responses: [{\n    status: 200,\n    body: {\n      \"numberOfRowsAffected\": 2\n    }\n  }, {\n    status: 202,\n    body: {\n      \"numberOfRowsAffected\": 2\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PolicyAssignmentsHttpServiceGetApprovableBusinessFunctionsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/policy-assignments/approvable-business-functions\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"approvableBusinessFunctions\": [{\n        \"resource\": \"Payments\",\n        \"function\": \"SEPA CT\",\n        \"status\": \"ACTIVE\",\n        \"assignedPolicies\": [{\n          \"id\": \"4a12d988-bac2-42b7-980c-f09686e3d7db\",\n          \"policyId\": \"ac007558-970f-45fc-9939-48f78d8622fa\",\n          \"name\": \"No-op policy\",\n          \"description\": \"A policy that does not require any approval\"\n        }],\n        \"dataGroupSpecificPolicies\": [{\n          \"dataGroups\": [{\n            \"id\": \"8a49404e7750618601775066a0130006\",\n            \"name\": \"Salary Accounts\",\n            \"deleted\": false\n          }, {\n            \"id\": \"8a49404e7750618601775066a0130006\",\n            \"name\": \"Tax Accounts\",\n            \"deleted\": false\n          }],\n          \"assignedPolicies\": [{\n            \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n            \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n            \"name\": \"Simple policy\",\n            \"description\": \"A simple policy that requires one approval of type A\",\n            \"upperBound\": {\n              \"amount\": \"100.00\",\n              \"currencyCode\": \"EUR\"\n            }\n          }, {\n            \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6916\",\n            \"policyId\": \"75419243-3d83-40ce-98b2-d2313bf3cf13\",\n            \"name\": \"Default policy\",\n            \"description\": \"A default policy that requires two approvals of different types: A + B\",\n            \"upperBound\": {\n              \"amount\": \"200.00\",\n              \"currencyCode\": \"EUR\"\n            }\n          }]\n        }, {\n          \"dataGroups\": [{\n            \"id\": \"8a49404e7750618601775066a0130034\",\n            \"name\": \"Marketing US\",\n            \"deleted\": false\n          }],\n          \"assignedPolicies\": [{\n            \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n            \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n            \"name\": \"Simple policy\",\n            \"description\": \"A simple policy that requires one approval of type A\"\n          }]\n        }]\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PolicyAssignmentsHttpServicePostPolicyAssignmentsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/policy-assignments\",\n  method: \"POST\",\n  responses: [{\n    status: 202,\n    body: {}\n  }, {\n    status: 204,\n    body: {}\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Policy not found\",\n      \"errors\": [{\n        \"message\": \"Policy not found\",\n        \"key\": \"approval.api.PolicyNotFound\",\n        \"context\": {\n          \"policy id\": \"7d466fef-de4d-48f2-8e72-c31ca5774b5a\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Policy assignment already exists\",\n      \"errors\": [{\n        \"message\": \"Policy assignment already exists\",\n        \"key\": \"approval.api.PolicyAssignmentAlreadyExists\",\n        \"context\": {\n          \"policy id\": \"b212069e-b6e3-4b40-add3-80f1b12d67a6\",\n          \"service agreement id\": \"8a48e61a69918d12016994f9d9160001\",\n          \"business function\": \"SEPA CT\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Policy assignment with no bounds already exists\",\n      \"errors\": [{\n        \"message\": \"Policy assignment with no bounds already exists\",\n        \"key\": \"approval.api.PolicyAssignmentAlreadyUnbounded\",\n        \"context\": {\n          \"policy id\": \"b212069e-b6e3-4b40-add3-80f1b12d67a6\",\n          \"service agreement id\": \"8a48e61a69918d12016994f9d9160001\",\n          \"business function\": \"SEPA CT\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Policy assignment has invalid bounds\",\n      \"errors\": [{\n        \"message\": \"Policy assignment has invalid bounds\",\n        \"key\": \"approval.api.PolicyAssignmentInvalidBound\",\n        \"context\": {\n          \"amount\": \"-10\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PolicyAssignmentsHttpServicePutApprovalsByPolicyAssignmentIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/policy-assignments/{id}/approvals\",\n  method: \"PUT\",\n  responses: [{\n    status: 202,\n    body: {}\n  }, {\n    status: 204,\n    body: {}\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PolicyAssignmentsHttpServiceRetrievePolicyAssignmentByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/policy-assignments/{id}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"serviceAgreementId\": \"92058e99-88f7-45d9-bb99-s4s4s4s4s4s4\",\n      \"serviceAgreementName\": \"Service agreement name\",\n      \"serviceAgreementDescription\": \"Service agreement description\",\n      \"function\": \"Sepa CT\",\n      \"resource\": \"Payments\",\n      \"status\": \"ACTIVE\",\n      \"assignedPolicies\": [{\n        \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n        \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n        \"name\": \"Simple policy\",\n        \"description\": \"A simple policy that requires one approval of type A\",\n        \"upperBound\": {\n          \"amount\": \"100.00\",\n          \"currencyCode\": \"EUR\"\n        }\n      }, {\n        \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6916\",\n        \"policyId\": \"75419243-3d83-40ce-98b2-d2313bf3cf13\",\n        \"name\": \"Default policy\",\n        \"description\": \"A default policy that requires two approvals of different types: A + B\",\n        \"upperBound\": {\n          \"amount\": \"200.00\",\n          \"currencyCode\": \"EUR\"\n        }\n      }],\n      \"dataGroupSpecificPolicies\": [{\n        \"dataGroups\": [{\n          \"id\": \"8a49404e7750618601775066a0130006\",\n          \"name\": \"Salary Accounts\",\n          \"deleted\": false\n        }, {\n          \"id\": \"8a49404e7750618601775066a0130006\",\n          \"name\": \"Tax Accounts\",\n          \"deleted\": false\n        }],\n        \"assignedPolicies\": [{\n          \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n          \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n          \"name\": \"Simple policy\",\n          \"description\": \"A simple policy that requires one approval of type A\",\n          \"upperBound\": {\n            \"amount\": \"100.00\",\n            \"currencyCode\": \"EUR\"\n          }\n        }, {\n          \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6916\",\n          \"policyId\": \"75419243-3d83-40ce-98b2-d2313bf3cf13\",\n          \"name\": \"Default policy\",\n          \"description\": \"A default policy that requires two approvals of different types: A + B\",\n          \"upperBound\": {\n            \"amount\": \"200.00\",\n            \"currencyCode\": \"EUR\"\n          }\n        }]\n      }, {\n        \"dataGroups\": [{\n          \"id\": \"8a49404e7750618601775066a0130034\",\n          \"name\": \"Marketing US\",\n          \"deleted\": false\n        }],\n        \"assignedPolicies\": [{\n          \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n          \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n          \"name\": \"Simple policy\",\n          \"description\": \"A simple policy that requires one approval of type A\"\n        }]\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PolicyAssignmentsHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/policy-assignments\",\n  method: \"DELETE\",\n  responses: [{\n    status: 200,\n    body: {\n      \"numberOfRowsAffected\": 2\n    }\n  }, {\n    status: 202,\n    body: {\n      \"numberOfRowsAffected\": 2\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/policy-assignments/approvable-business-functions\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"approvableBusinessFunctions\": [{\n        \"resource\": \"Payments\",\n        \"function\": \"SEPA CT\",\n        \"status\": \"ACTIVE\",\n        \"assignedPolicies\": [{\n          \"id\": \"4a12d988-bac2-42b7-980c-f09686e3d7db\",\n          \"policyId\": \"ac007558-970f-45fc-9939-48f78d8622fa\",\n          \"name\": \"No-op policy\",\n          \"description\": \"A policy that does not require any approval\"\n        }],\n        \"dataGroupSpecificPolicies\": [{\n          \"dataGroups\": [{\n            \"id\": \"8a49404e7750618601775066a0130006\",\n            \"name\": \"Salary Accounts\",\n            \"deleted\": false\n          }, {\n            \"id\": \"8a49404e7750618601775066a0130006\",\n            \"name\": \"Tax Accounts\",\n            \"deleted\": false\n          }],\n          \"assignedPolicies\": [{\n            \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n            \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n            \"name\": \"Simple policy\",\n            \"description\": \"A simple policy that requires one approval of type A\",\n            \"upperBound\": {\n              \"amount\": \"100.00\",\n              \"currencyCode\": \"EUR\"\n            }\n          }, {\n            \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6916\",\n            \"policyId\": \"75419243-3d83-40ce-98b2-d2313bf3cf13\",\n            \"name\": \"Default policy\",\n            \"description\": \"A default policy that requires two approvals of different types: A + B\",\n            \"upperBound\": {\n              \"amount\": \"200.00\",\n              \"currencyCode\": \"EUR\"\n            }\n          }]\n        }, {\n          \"dataGroups\": [{\n            \"id\": \"8a49404e7750618601775066a0130034\",\n            \"name\": \"Marketing US\",\n            \"deleted\": false\n          }],\n          \"assignedPolicies\": [{\n            \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n            \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n            \"name\": \"Simple policy\",\n            \"description\": \"A simple policy that requires one approval of type A\"\n          }]\n        }]\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/policy-assignments\",\n  method: \"POST\",\n  responses: [{\n    status: 202,\n    body: {}\n  }, {\n    status: 204,\n    body: {}\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Policy not found\",\n      \"errors\": [{\n        \"message\": \"Policy not found\",\n        \"key\": \"approval.api.PolicyNotFound\",\n        \"context\": {\n          \"policy id\": \"7d466fef-de4d-48f2-8e72-c31ca5774b5a\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Policy assignment already exists\",\n      \"errors\": [{\n        \"message\": \"Policy assignment already exists\",\n        \"key\": \"approval.api.PolicyAssignmentAlreadyExists\",\n        \"context\": {\n          \"policy id\": \"b212069e-b6e3-4b40-add3-80f1b12d67a6\",\n          \"service agreement id\": \"8a48e61a69918d12016994f9d9160001\",\n          \"business function\": \"SEPA CT\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Policy assignment with no bounds already exists\",\n      \"errors\": [{\n        \"message\": \"Policy assignment with no bounds already exists\",\n        \"key\": \"approval.api.PolicyAssignmentAlreadyUnbounded\",\n        \"context\": {\n          \"policy id\": \"b212069e-b6e3-4b40-add3-80f1b12d67a6\",\n          \"service agreement id\": \"8a48e61a69918d12016994f9d9160001\",\n          \"business function\": \"SEPA CT\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Policy assignment has invalid bounds\",\n      \"errors\": [{\n        \"message\": \"Policy assignment has invalid bounds\",\n        \"key\": \"approval.api.PolicyAssignmentInvalidBound\",\n        \"context\": {\n          \"amount\": \"-10\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/policy-assignments/{id}/approvals\",\n  method: \"PUT\",\n  responses: [{\n    status: 202,\n    body: {}\n  }, {\n    status: 204,\n    body: {}\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/policy-assignments/{id}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"serviceAgreementId\": \"92058e99-88f7-45d9-bb99-s4s4s4s4s4s4\",\n      \"serviceAgreementName\": \"Service agreement name\",\n      \"serviceAgreementDescription\": \"Service agreement description\",\n      \"function\": \"Sepa CT\",\n      \"resource\": \"Payments\",\n      \"status\": \"ACTIVE\",\n      \"assignedPolicies\": [{\n        \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n        \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n        \"name\": \"Simple policy\",\n        \"description\": \"A simple policy that requires one approval of type A\",\n        \"upperBound\": {\n          \"amount\": \"100.00\",\n          \"currencyCode\": \"EUR\"\n        }\n      }, {\n        \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6916\",\n        \"policyId\": \"75419243-3d83-40ce-98b2-d2313bf3cf13\",\n        \"name\": \"Default policy\",\n        \"description\": \"A default policy that requires two approvals of different types: A + B\",\n        \"upperBound\": {\n          \"amount\": \"200.00\",\n          \"currencyCode\": \"EUR\"\n        }\n      }],\n      \"dataGroupSpecificPolicies\": [{\n        \"dataGroups\": [{\n          \"id\": \"8a49404e7750618601775066a0130006\",\n          \"name\": \"Salary Accounts\",\n          \"deleted\": false\n        }, {\n          \"id\": \"8a49404e7750618601775066a0130006\",\n          \"name\": \"Tax Accounts\",\n          \"deleted\": false\n        }],\n        \"assignedPolicies\": [{\n          \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n          \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n          \"name\": \"Simple policy\",\n          \"description\": \"A simple policy that requires one approval of type A\",\n          \"upperBound\": {\n            \"amount\": \"100.00\",\n            \"currencyCode\": \"EUR\"\n          }\n        }, {\n          \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6916\",\n          \"policyId\": \"75419243-3d83-40ce-98b2-d2313bf3cf13\",\n          \"name\": \"Default policy\",\n          \"description\": \"A default policy that requires two approvals of different types: A + B\",\n          \"upperBound\": {\n            \"amount\": \"200.00\",\n            \"currencyCode\": \"EUR\"\n          }\n        }]\n      }, {\n        \"dataGroups\": [{\n          \"id\": \"8a49404e7750618601775066a0130034\",\n          \"name\": \"Marketing US\",\n          \"deleted\": false\n        }],\n        \"assignedPolicies\": [{\n          \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n          \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n          \"name\": \"Simple policy\",\n          \"description\": \"A simple policy that requires one approval of type A\"\n        }]\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nexport { APPROVAL_BASE_PATH, ApprovalApiModule, ApprovalConfiguration, ApprovalRecordStatus, ApprovalStatus, ApprovalTypeAssignmentsHttpService, ApprovalTypeAssignmentsHttpServiceDeleteApprovalTypeAssignmentByIdMocksProvider, ApprovalTypeAssignmentsHttpServiceGetAssignedApprovalTypeByIdMocksProvider, ApprovalTypeAssignmentsHttpServiceMocksProvider, ApprovalTypeAssignmentsHttpServicePostAssignApprovalTypeMocksProvider, ApprovalTypeAssignmentsHttpServicePutUpdateApprovalTypeAssignmentByIdMocksProvider, ApprovalTypesHttpService, ApprovalTypesHttpServiceGetAvailableApprovalTypesMocksProvider, ApprovalTypesHttpServiceMocksProvider, ApprovalsHttpService, ApprovalsHttpServiceGetApprovalByApprovalIdMocksProvider, ApprovalsHttpServiceGetApprovalsMocksProvider, ApprovalsHttpServiceGetProgressStatusByApprovalRecordIdMocksProvider, ApprovalsHttpServiceMocksProvider, COLLECTION_FORMATS, CONFIG_TOKEN, LogicalOperator, PoliciesHttpService, PoliciesHttpServiceGetAvailablePoliciesMocksProvider, PoliciesHttpServiceMocksProvider, PolicyAssignmentStatus, PolicyAssignmentsHttpService, PolicyAssignmentsHttpServiceDeletePolicyAssignmentsMocksProvider, PolicyAssignmentsHttpServiceGetApprovableBusinessFunctionsMocksProvider, PolicyAssignmentsHttpServiceMocksProvider, PolicyAssignmentsHttpServicePostPolicyAssignmentsMocksProvider, PolicyAssignmentsHttpServicePutApprovalsByPolicyAssignmentIdMocksProvider, PolicyAssignmentsHttpServiceRetrievePolicyAssignmentByIdMocksProvider, RecordStatus };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/approval-http-ang/fesm2015/backbase-approval-http-ang.js"],"names":["i0","InjectionToken","NgModule","Optional","SkipSelf","Injectable","Inject","i1","HttpHeaders","HttpParams","i2","createMocks","ApprovalRecordStatus","INITIATED","PROCESSING","SUCCESS","FAILED","ApprovalStatus","PENDING","APPROVED","REJECTED","CANCELLED","LogicalOperator","OR","PolicyAssignmentStatus","ACTIVE","PENDINGDELETE","DELETED","RecordStatus","APPROVAL_BASE_PATH","COLLECTION_FORMATS","ApprovalConfiguration","constructor","configurationParameters","apiKeys","username","password","accessToken","basePath","withCredentials","encoder","credentials","selectHeaderContentType","contentTypes","length","undefined","type","find","x","isJsonMime","selectHeaderAccept","accepts","mime","jsonMime","RegExp","test","toLowerCase","lookupCredential","key","value","CONFIG_TOKEN","ApprovalApiModule","parentModule","http","dataModulesManager","config","Error","setModuleConfig","apiRoot","servicePath","headers","forRoot","configurationFactory","ngModule","providers","provide","useFactory","ɵfac","HttpClient","DataModulesManager","ɵmod","ɵinj","args","imports","declarations","exports","decorators","CustomHttpParameterCodec","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeURIComponent","decodeValue","ApprovalTypeAssignmentsHttpService","httpClient","configuration","defaultHeaders","addToHttpParams","httpParams","Date","addToHttpParamsRecursive","Array","isArray","forEach","elem","append","toISOString","substr","Object","keys","deleteApprovalTypeAssignmentById","requestParameters","observe","reportProgress","options","_id","httpHeaderAcceptSelected","httpHeaderAccept","httpHeaderAccepts","set","responseType","startsWith","delete","String","deleteApprovalTypeAssignmentByIdUrl","getAssignedApprovalTypeById","get","getAssignedApprovalTypeByIdUrl","postAssignApprovalType","_postApprovalTypeAssignmentRequest","consumes","httpContentTypeSelected","post","postAssignApprovalTypeUrl","putUpdateApprovalTypeAssignmentById","_presentationPutApprovalTypeAssignmentRequest","put","putUpdateApprovalTypeAssignmentByIdUrl","ɵprov","providedIn","ApprovalTypeAssignmentsHttpServiceDeleteApprovalTypeAssignmentByIdMocksProvider","urlPattern","method","responses","status","body","ApprovalTypeAssignmentsHttpServiceGetAssignedApprovalTypeByIdMocksProvider","ApprovalTypeAssignmentsHttpServicePostAssignApprovalTypeMocksProvider","ApprovalTypeAssignmentsHttpServicePutUpdateApprovalTypeAssignmentByIdMocksProvider","ApprovalTypeAssignmentsHttpServiceMocksProvider","ApprovalTypesHttpService","getAvailableApprovalTypes","getAvailableApprovalTypesUrl","ApprovalTypesHttpServiceGetAvailableApprovalTypesMocksProvider","ApprovalTypesHttpServiceMocksProvider","ApprovalsHttpService","getApprovalByApprovalId","_approvalId","getApprovalByApprovalIdUrl","getApprovals","_businessFunctions","_cursor","_size","queryParameters","element","params","getApprovalsUrl","queryString","toString","getProgressStatusByApprovalRecordId","_approvalRecordId","getProgressStatusByApprovalRecordIdUrl","ApprovalsHttpServiceGetApprovalByApprovalIdMocksProvider","ApprovalsHttpServiceGetApprovalsMocksProvider","ApprovalsHttpServiceGetProgressStatusByApprovalRecordIdMocksProvider","ApprovalsHttpServiceMocksProvider","PoliciesHttpService","getAvailablePolicies","getAvailablePoliciesUrl","PoliciesHttpServiceGetAvailablePoliciesMocksProvider","PoliciesHttpServiceMocksProvider","PolicyAssignmentsHttpService","deletePolicyAssignments","_serviceAgreementId","_resource","_function","deletePolicyAssignmentsUrl","getApprovableBusinessFunctions","getApprovableBusinessFunctionsUrl","postPolicyAssignments","_presentationPolicyAssignmentCollectionRequest","postPolicyAssignmentsUrl","putApprovalsByPolicyAssignmentId","_presentationPolicyAssignmentApprovalRequest","putApprovalsByPolicyAssignmentIdUrl","retrievePolicyAssignmentById","retrievePolicyAssignmentByIdUrl","PolicyAssignmentsHttpServiceDeletePolicyAssignmentsMocksProvider","PolicyAssignmentsHttpServiceGetApprovableBusinessFunctionsMocksProvider","PolicyAssignmentsHttpServicePostPolicyAssignmentsMocksProvider","PolicyAssignmentsHttpServicePutApprovalsByPolicyAssignmentIdMocksProvider","PolicyAssignmentsHttpServiceRetrievePolicyAssignmentByIdMocksProvider","PolicyAssignmentsHttpServiceMocksProvider"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\n\nconst ApprovalRecordStatus = {\n    INITIATED: 'INITIATED',\n    PROCESSING: 'PROCESSING',\n    SUCCESS: 'SUCCESS',\n    FAILED: 'FAILED'\n};\n\nconst ApprovalStatus = {\n    PENDING: 'PENDING',\n    APPROVED: 'APPROVED',\n    REJECTED: 'REJECTED',\n    CANCELLED: 'CANCELLED'\n};\n\nconst LogicalOperator = {\n    OR: 'OR'\n};\n\nconst PolicyAssignmentStatus = {\n    ACTIVE: 'ACTIVE',\n    PENDING: 'PENDING',\n    REJECTED: 'REJECTED',\n    PENDINGDELETE: 'PENDING_DELETE',\n    DELETED: 'DELETED'\n};\n\nconst RecordStatus = {\n    APPROVED: 'APPROVED',\n    REJECTED: 'REJECTED'\n};\n\nconst APPROVAL_BASE_PATH = new InjectionToken('APPROVAL_BASE_PATH');\nconst COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n};\n\nclass ApprovalConfiguration {\n    constructor(configurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n    selectHeaderContentType(contentTypes) {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n        const type = contentTypes.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n    selectHeaderAccept(accepts) {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n        const type = accepts.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n    lookupCredential(key) {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\nconst CONFIG_TOKEN = new InjectionToken('api-data-module ApprovalConfiguration');\n\nclass ApprovalApiModule {\n    constructor(parentModule, http, dataModulesManager, config) {\n        if (parentModule) {\n            throw new Error('ApprovalApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n                'See also https://github.com/angular/angular/issues/20575');\n        }\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n    static forRoot(configurationFactory) {\n        return {\n            ngModule: ApprovalApiModule,\n            providers: [{ provide: ApprovalConfiguration, useFactory: configurationFactory }]\n        };\n    }\n}\nApprovalApiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ApprovalApiModule, deps: [{ token: ApprovalApiModule, optional: true, skipSelf: true }, { token: i1.HttpClient, optional: true }, { token: i2.DataModulesManager, optional: true }, { token: ApprovalConfiguration }], target: i0.ɵɵFactoryTarget.NgModule });\nApprovalApiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ApprovalApiModule });\nApprovalApiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ApprovalApiModule, providers: [], imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ApprovalApiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [],\n                    exports: [],\n                    providers: []\n                }]\n        }], ctorParameters: function () { return [{ type: ApprovalApiModule, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DataModulesManager, decorators: [{\n                    type: Optional\n                }] }, { type: ApprovalConfiguration }]; } });\n\nclass CustomHttpParameterCodec {\n    encodeKey(k) {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v) {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k) {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v) {\n        return decodeURIComponent(v);\n    }\n}\n\nclass ApprovalTypeAssignmentsHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new ApprovalConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    deleteApprovalTypeAssignmentById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteApprovalTypeAssignmentById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/approval-type-assignments/${encodeURIComponent(String(_id))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deleteApprovalTypeAssignmentByIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteApprovalTypeAssignmentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/approval-type-assignments/${encodeURIComponent(String(_id))}`;\n    }\n    getAssignedApprovalTypeById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getAssignedApprovalTypeById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/approval-type-assignments/${encodeURIComponent(String(_id))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getAssignedApprovalTypeByIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getAssignedApprovalTypeById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/approval-type-assignments/${encodeURIComponent(String(_id))}`;\n    }\n    postAssignApprovalType(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _postApprovalTypeAssignmentRequest = requestParameters[\"postApprovalTypeAssignmentRequest\"];\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/approval-type-assignments`, _postApprovalTypeAssignmentRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postAssignApprovalTypeUrl(requestParameters) {\n        const _postApprovalTypeAssignmentRequest = requestParameters[\"postApprovalTypeAssignmentRequest\"];\n        return `${this.configuration.basePath}/client-api/v2/approval-type-assignments`;\n    }\n    putUpdateApprovalTypeAssignmentById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putUpdateApprovalTypeAssignmentById.');\n        }\n        const _presentationPutApprovalTypeAssignmentRequest = requestParameters[\"presentationPutApprovalTypeAssignmentRequest\"];\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/approval-type-assignments/${encodeURIComponent(String(_id))}`, _presentationPutApprovalTypeAssignmentRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putUpdateApprovalTypeAssignmentByIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putUpdateApprovalTypeAssignmentById.');\n        }\n        const _presentationPutApprovalTypeAssignmentRequest = requestParameters[\"presentationPutApprovalTypeAssignmentRequest\"];\n        return `${this.configuration.basePath}/client-api/v2/approval-type-assignments/${encodeURIComponent(String(_id))}`;\n    }\n}\nApprovalTypeAssignmentsHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ApprovalTypeAssignmentsHttpService, deps: [{ token: i1.HttpClient }, { token: APPROVAL_BASE_PATH, optional: true }, { token: ApprovalConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nApprovalTypeAssignmentsHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ApprovalTypeAssignmentsHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ApprovalTypeAssignmentsHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [APPROVAL_BASE_PATH]\n                }] }, { type: ApprovalConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst ApprovalTypeAssignmentsHttpServiceDeleteApprovalTypeAssignmentByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/approval-type-assignments/{id}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst ApprovalTypeAssignmentsHttpServiceGetAssignedApprovalTypeByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/approval-type-assignments/{id}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"approvalType\": {\n                        \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                        \"name\": \"A\",\n                        \"description\": \"1st approval\",\n                        \"rank\": 100\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst ApprovalTypeAssignmentsHttpServicePostAssignApprovalTypeMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/approval-type-assignments\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"Job profile is already assigned to an approval type\",\n                            \"key\": \"approval.api.ApprovalTypeAssignmentConflict\",\n                            \"context\": {\n                                \"conflictingJobProfileId\": \"0f5cfbb507054d589d149e921838dc80\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"Approval type not found\",\n                            \"key\": \"approval.api.ApprovalTypeNotFound\",\n                            \"context\": {\n                                \"invalidApprovalTypeId\": \"7c59fed4-b737-11e8-96f8-529269fb1459\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst ApprovalTypeAssignmentsHttpServicePutUpdateApprovalTypeAssignmentByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/approval-type-assignments/{id}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"Approval type not found\",\n                            \"key\": \"approval.api.ApprovalTypeNotFound\",\n                            \"context\": {\n                                \"invalidApprovalTypeId\": \"7c59fed4-b737-11e8-96f8-529269fb1459\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\"\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Not found\",\n                    \"errors\": [{\n                            \"message\": \"Assigned approval type not found\",\n                            \"key\": \"approval.api.AssignedApprovalTypeNotFound\",\n                            \"context\": {\n                                \"jobProfileId\": \"7c59fed4-b737-11e8-96f8-529269fb1459\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst ApprovalTypeAssignmentsHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/approval-type-assignments/{id}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/approval-type-assignments/{id}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"approvalType\": {\n                        \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                        \"name\": \"A\",\n                        \"description\": \"1st approval\",\n                        \"rank\": 100\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/approval-type-assignments\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"Job profile is already assigned to an approval type\",\n                            \"key\": \"approval.api.ApprovalTypeAssignmentConflict\",\n                            \"context\": {\n                                \"conflictingJobProfileId\": \"0f5cfbb507054d589d149e921838dc80\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"Approval type not found\",\n                            \"key\": \"approval.api.ApprovalTypeNotFound\",\n                            \"context\": {\n                                \"invalidApprovalTypeId\": \"7c59fed4-b737-11e8-96f8-529269fb1459\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/approval-type-assignments/{id}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"Approval type not found\",\n                            \"key\": \"approval.api.ApprovalTypeNotFound\",\n                            \"context\": {\n                                \"invalidApprovalTypeId\": \"7c59fed4-b737-11e8-96f8-529269fb1459\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\"\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Not found\",\n                    \"errors\": [{\n                            \"message\": \"Assigned approval type not found\",\n                            \"key\": \"approval.api.AssignedApprovalTypeNotFound\",\n                            \"context\": {\n                                \"jobProfileId\": \"7c59fed4-b737-11e8-96f8-529269fb1459\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nclass ApprovalTypesHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new ApprovalConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    getAvailableApprovalTypes(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/approval-types`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getAvailableApprovalTypesUrl() {\n        return `${this.configuration.basePath}/client-api/v2/approval-types`;\n    }\n}\nApprovalTypesHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ApprovalTypesHttpService, deps: [{ token: i1.HttpClient }, { token: APPROVAL_BASE_PATH, optional: true }, { token: ApprovalConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nApprovalTypesHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ApprovalTypesHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ApprovalTypesHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [APPROVAL_BASE_PATH]\n                }] }, { type: ApprovalConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst ApprovalTypesHttpServiceGetAvailableApprovalTypesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/approval-types\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"approvalTypes\": [{\n                            \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                            \"name\": \"A\",\n                            \"description\": \"1st approval\",\n                            \"rank\": 100\n                        }, {\n                            \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n                            \"name\": \"B\",\n                            \"description\": \"2nd approval\",\n                            \"rank\": 101\n                        }, {\n                            \"id\": \"7b9459a3-03be-4b80-97da-53005bad9fb7\",\n                            \"name\": \"C\",\n                            \"description\": \"3rd approval\",\n                            \"rank\": 300\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst ApprovalTypesHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/approval-types\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"approvalTypes\": [{\n                            \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                            \"name\": \"A\",\n                            \"description\": \"1st approval\",\n                            \"rank\": 100\n                        }, {\n                            \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n                            \"name\": \"B\",\n                            \"description\": \"2nd approval\",\n                            \"rank\": 101\n                        }, {\n                            \"id\": \"7b9459a3-03be-4b80-97da-53005bad9fb7\",\n                            \"name\": \"C\",\n                            \"description\": \"3rd approval\",\n                            \"rank\": 300\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nclass ApprovalsHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new ApprovalConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    getApprovalByApprovalId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getApprovalByApprovalId.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/approvals/${encodeURIComponent(String(_approvalId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getApprovalByApprovalIdUrl(requestParameters) {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getApprovalByApprovalId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/approvals/${encodeURIComponent(String(_approvalId))}`;\n    }\n    getApprovals(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _businessFunctions = requestParameters[\"businessFunctions\"];\n        if (_businessFunctions === null || _businessFunctions === undefined) {\n            throw new Error('Required parameter businessFunctions was null or undefined when calling getApprovals.');\n        }\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_businessFunctions) {\n            _businessFunctions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters, element, 'businessFunctions');\n            });\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/approvals`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getApprovalsUrl(requestParameters) {\n        const _businessFunctions = requestParameters[\"businessFunctions\"];\n        if (_businessFunctions === null || _businessFunctions === undefined) {\n            throw new Error('Required parameter businessFunctions was null or undefined when calling getApprovals.');\n        }\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_businessFunctions) {\n            _businessFunctions.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters, element, 'businessFunctions');\n            });\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/approvals${queryString ? `?${queryString}` : ''}`;\n    }\n    getProgressStatusByApprovalRecordId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _approvalRecordId = requestParameters[\"approvalRecordId\"];\n        if (_approvalRecordId === null || _approvalRecordId === undefined) {\n            throw new Error('Required parameter approvalRecordId was null or undefined when calling getProgressStatusByApprovalRecordId.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/approval-records/${encodeURIComponent(String(_approvalRecordId))}/progress-status`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getProgressStatusByApprovalRecordIdUrl(requestParameters) {\n        const _approvalRecordId = requestParameters[\"approvalRecordId\"];\n        if (_approvalRecordId === null || _approvalRecordId === undefined) {\n            throw new Error('Required parameter approvalRecordId was null or undefined when calling getProgressStatusByApprovalRecordId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/approval-records/${encodeURIComponent(String(_approvalRecordId))}/progress-status`;\n    }\n}\nApprovalsHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ApprovalsHttpService, deps: [{ token: i1.HttpClient }, { token: APPROVAL_BASE_PATH, optional: true }, { token: ApprovalConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nApprovalsHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ApprovalsHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ApprovalsHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [APPROVAL_BASE_PATH]\n                }] }, { type: ApprovalConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst ApprovalsHttpServiceGetApprovalByApprovalIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/approvals/{approvalId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"approvalDetails\": {\n                        \"id\": \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n                        \"userId\": \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n                        \"userFullName\": \"Paddy Brian\",\n                        \"externalUserId\": \"paddy-brian\",\n                        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                        \"itemId\": \"4cf9a1da-2f48-4f9b-8a97-204c8cd43aa0\",\n                        \"dataAccessItemId\": \"975809ca-008c-4732-9ae0-a2531d4800bc\",\n                        \"resource\": \"Payments\",\n                        \"function\": \"SEPA_CT\",\n                        \"status\": \"PENDING\",\n                        \"createdAt\": \"2018-07-22T13:44:02Z\",\n                        \"records\": [{\n                                \"id\": \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n                                \"userId\": \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n                                \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                                \"externalUserId\": \"robin-green\",\n                                \"userFullName\": \"Robin Green\",\n                                \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                \"status\": \"APPROVED\",\n                                \"createdAt\": \"2018-01-22T13:44:02Z\"\n                            }],\n                        \"approvalTypes\": [{\n                                \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                \"name\": \"A\",\n                                \"description\": \"1st approval\",\n                                \"rank\": 100\n                            }, {\n                                \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n                                \"name\": \"B\",\n                                \"description\": \"2nd approval\",\n                                \"rank\": 101\n                            }],\n                        \"policy\": {\n                            \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n                            \"name\": \"Default policy\",\n                            \"description\": \"A default policy that requires two approvals of different types: A + B\",\n                            \"items\": [{\n                                    \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                    \"approvalType\": {\n                                        \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                        \"name\": \"A\",\n                                        \"description\": \"1st approval\",\n                                        \"rank\": 100\n                                    },\n                                    \"numberOfApprovals\": 1\n                                }, {\n                                    \"approvalTypeId\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n                                    \"approvalType\": {\n                                        \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n                                        \"name\": \"B\",\n                                        \"description\": \"2nd approval\",\n                                        \"rank\": 101\n                                    },\n                                    \"numberOfApprovals\": 1\n                                }]\n                        },\n                        \"canApprove\": false,\n                        \"canReject\": false,\n                        \"finalApprover\": false\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst ApprovalsHttpServiceGetApprovalsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/approvals\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"approvals\": [{\n                            \"id\": \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n                            \"userId\": \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n                            \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                            \"itemId\": \"4cf9a1da-2f48-4f9b-8a97-204c8cd43aa0\",\n                            \"dataAccessItemId\": \"975809ca-008c-4732-9ae0-a2531d4800bc\",\n                            \"resource\": \"Payments\",\n                            \"function\": \"SEPA_CT\",\n                            \"status\": \"PENDING\",\n                            \"records\": [{\n                                    \"id\": \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n                                    \"userId\": \"fc546710-cb4d-40a2-9a5c-52f6772a907b\",\n                                    \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                                    \"approvalTypeId\": \"8b4cf4ba-1b6d-43fe-bb44-3c762e0ba5c1\",\n                                    \"status\": \"APPROVED\",\n                                    \"createdAt\": \"2018-01-22T13:44:02Z\"\n                                }],\n                            \"finalApprover\": true,\n                            \"createdAt\": \"2018-01-22T13:44:02Z\"\n                        }, {\n                            \"id\": \"21339aac-9e00-4dd5-9dd9-c9b1727471cf\",\n                            \"userId\": \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n                            \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                            \"itemId\": \"4af6d50e-cde5-401d-95c9-2a78f51672c9\",\n                            \"dataAccessItemId\": \"4f727cdf-426f-42aa-bbf1-6a4548d1d4a9\",\n                            \"resource\": \"Payments\",\n                            \"function\": \"US_DOMESTIC\",\n                            \"status\": \"PENDING\",\n                            \"records\": [],\n                            \"finalApprover\": false,\n                            \"createdAt\": \"2018-01-22T13:44:02Z\"\n                        }],\n                    \"cursor\": \"3aa95dcf-fba8-41b8-a97b-bfae602e1a7d\"\n                }\n            },\n        ]\n    }]);\nconst ApprovalsHttpServiceGetProgressStatusByApprovalRecordIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/approval-records/{approvalRecordId}/progress-status\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"status\": \"INITIATED\",\n                    \"statusCode\": \"CONFIRMATION_PENDING\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst ApprovalsHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/approvals/{approvalId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"approvalDetails\": {\n                        \"id\": \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n                        \"userId\": \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n                        \"userFullName\": \"Paddy Brian\",\n                        \"externalUserId\": \"paddy-brian\",\n                        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                        \"itemId\": \"4cf9a1da-2f48-4f9b-8a97-204c8cd43aa0\",\n                        \"dataAccessItemId\": \"975809ca-008c-4732-9ae0-a2531d4800bc\",\n                        \"resource\": \"Payments\",\n                        \"function\": \"SEPA_CT\",\n                        \"status\": \"PENDING\",\n                        \"createdAt\": \"2018-07-22T13:44:02Z\",\n                        \"records\": [{\n                                \"id\": \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n                                \"userId\": \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n                                \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                                \"externalUserId\": \"robin-green\",\n                                \"userFullName\": \"Robin Green\",\n                                \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                \"status\": \"APPROVED\",\n                                \"createdAt\": \"2018-01-22T13:44:02Z\"\n                            }],\n                        \"approvalTypes\": [{\n                                \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                \"name\": \"A\",\n                                \"description\": \"1st approval\",\n                                \"rank\": 100\n                            }, {\n                                \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n                                \"name\": \"B\",\n                                \"description\": \"2nd approval\",\n                                \"rank\": 101\n                            }],\n                        \"policy\": {\n                            \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n                            \"name\": \"Default policy\",\n                            \"description\": \"A default policy that requires two approvals of different types: A + B\",\n                            \"items\": [{\n                                    \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                    \"approvalType\": {\n                                        \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                        \"name\": \"A\",\n                                        \"description\": \"1st approval\",\n                                        \"rank\": 100\n                                    },\n                                    \"numberOfApprovals\": 1\n                                }, {\n                                    \"approvalTypeId\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n                                    \"approvalType\": {\n                                        \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n                                        \"name\": \"B\",\n                                        \"description\": \"2nd approval\",\n                                        \"rank\": 101\n                                    },\n                                    \"numberOfApprovals\": 1\n                                }]\n                        },\n                        \"canApprove\": false,\n                        \"canReject\": false,\n                        \"finalApprover\": false\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/approvals\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"approvals\": [{\n                            \"id\": \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n                            \"userId\": \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n                            \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                            \"itemId\": \"4cf9a1da-2f48-4f9b-8a97-204c8cd43aa0\",\n                            \"dataAccessItemId\": \"975809ca-008c-4732-9ae0-a2531d4800bc\",\n                            \"resource\": \"Payments\",\n                            \"function\": \"SEPA_CT\",\n                            \"status\": \"PENDING\",\n                            \"records\": [{\n                                    \"id\": \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n                                    \"userId\": \"fc546710-cb4d-40a2-9a5c-52f6772a907b\",\n                                    \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                                    \"approvalTypeId\": \"8b4cf4ba-1b6d-43fe-bb44-3c762e0ba5c1\",\n                                    \"status\": \"APPROVED\",\n                                    \"createdAt\": \"2018-01-22T13:44:02Z\"\n                                }],\n                            \"finalApprover\": true,\n                            \"createdAt\": \"2018-01-22T13:44:02Z\"\n                        }, {\n                            \"id\": \"21339aac-9e00-4dd5-9dd9-c9b1727471cf\",\n                            \"userId\": \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n                            \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                            \"itemId\": \"4af6d50e-cde5-401d-95c9-2a78f51672c9\",\n                            \"dataAccessItemId\": \"4f727cdf-426f-42aa-bbf1-6a4548d1d4a9\",\n                            \"resource\": \"Payments\",\n                            \"function\": \"US_DOMESTIC\",\n                            \"status\": \"PENDING\",\n                            \"records\": [],\n                            \"finalApprover\": false,\n                            \"createdAt\": \"2018-01-22T13:44:02Z\"\n                        }],\n                    \"cursor\": \"3aa95dcf-fba8-41b8-a97b-bfae602e1a7d\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/approval-records/{approvalRecordId}/progress-status\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"status\": \"INITIATED\",\n                    \"statusCode\": \"CONFIRMATION_PENDING\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nclass PoliciesHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new ApprovalConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    getAvailablePolicies(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/policies`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getAvailablePoliciesUrl() {\n        return `${this.configuration.basePath}/client-api/v2/policies`;\n    }\n}\nPoliciesHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PoliciesHttpService, deps: [{ token: i1.HttpClient }, { token: APPROVAL_BASE_PATH, optional: true }, { token: ApprovalConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nPoliciesHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PoliciesHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PoliciesHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [APPROVAL_BASE_PATH]\n                }] }, { type: ApprovalConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst PoliciesHttpServiceGetAvailablePoliciesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/policies\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"policies\": [{\n                            \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n                            \"name\": \"Simple policy\",\n                            \"description\": \"A basic policy, requires one approval of type 'A' and one of type 'B'.\",\n                            \"items\": [{\n                                    \"approvalType\": {\n                                        \"id\": \"748fef85-2a7a-47fa-b016-7cae583a0b79\",\n                                        \"name\": \"A\",\n                                        \"description\": \"1st approval\",\n                                        \"rank\": 100\n                                    },\n                                    \"numberOfApprovals\": 1\n                                }, {\n                                    \"approvalType\": {\n                                        \"id\": \"9c666d9e-92d4-4d8f-9366-a4d3ee336c0c\",\n                                        \"name\": \"B\",\n                                        \"description\": \"2nd approval\",\n                                        \"rank\": 200\n                                    },\n                                    \"numberOfApprovals\": 1\n                                }]\n                        }, {\n                            \"id\": \"5a2d069a-d4c8-43aa-ba93-9069c65458ec\",\n                            \"name\": \"Secondary policy\",\n                            \"description\": \"A secondary policy that requires two approvals of the same type: A + A\",\n                            \"items\": [{\n                                    \"approvalType\": {\n                                        \"id\": \"748fef85-2a7a-47fa-b016-7cae583a0b79\",\n                                        \"name\": \"A\",\n                                        \"description\": \"1st approval\",\n                                        \"rank\": 100\n                                    },\n                                    \"numberOfApprovals\": 2\n                                }]\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PoliciesHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/policies\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"policies\": [{\n                            \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n                            \"name\": \"Simple policy\",\n                            \"description\": \"A basic policy, requires one approval of type 'A' and one of type 'B'.\",\n                            \"items\": [{\n                                    \"approvalType\": {\n                                        \"id\": \"748fef85-2a7a-47fa-b016-7cae583a0b79\",\n                                        \"name\": \"A\",\n                                        \"description\": \"1st approval\",\n                                        \"rank\": 100\n                                    },\n                                    \"numberOfApprovals\": 1\n                                }, {\n                                    \"approvalType\": {\n                                        \"id\": \"9c666d9e-92d4-4d8f-9366-a4d3ee336c0c\",\n                                        \"name\": \"B\",\n                                        \"description\": \"2nd approval\",\n                                        \"rank\": 200\n                                    },\n                                    \"numberOfApprovals\": 1\n                                }]\n                        }, {\n                            \"id\": \"5a2d069a-d4c8-43aa-ba93-9069c65458ec\",\n                            \"name\": \"Secondary policy\",\n                            \"description\": \"A secondary policy that requires two approvals of the same type: A + A\",\n                            \"items\": [{\n                                    \"approvalType\": {\n                                        \"id\": \"748fef85-2a7a-47fa-b016-7cae583a0b79\",\n                                        \"name\": \"A\",\n                                        \"description\": \"1st approval\",\n                                        \"rank\": 100\n                                    },\n                                    \"numberOfApprovals\": 2\n                                }]\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nclass PolicyAssignmentsHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new ApprovalConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    deletePolicyAssignments(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        const _resource = requestParameters[\"resource\"];\n        const _function = requestParameters[\"function\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _serviceAgreementId, 'serviceAgreementId');\n        }\n        if (_resource !== undefined && _resource !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _resource, 'resource');\n        }\n        if (_function !== undefined && _function !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _function, 'function');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/policy-assignments`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deletePolicyAssignmentsUrl(requestParameters) {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        const _resource = requestParameters[\"resource\"];\n        const _function = requestParameters[\"function\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _serviceAgreementId, 'serviceAgreementId');\n        }\n        if (_resource !== undefined && _resource !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _resource, 'resource');\n        }\n        if (_function !== undefined && _function !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _function, 'function');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/policy-assignments${queryString ? `?${queryString}` : ''}`;\n    }\n    getApprovableBusinessFunctions(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _serviceAgreementId, 'serviceAgreementId');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/policy-assignments/approvable-business-functions`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getApprovableBusinessFunctionsUrl(requestParameters) {\n        const _serviceAgreementId = requestParameters[\"serviceAgreementId\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_serviceAgreementId !== undefined && _serviceAgreementId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _serviceAgreementId, 'serviceAgreementId');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/policy-assignments/approvable-business-functions${queryString ? `?${queryString}` : ''}`;\n    }\n    postPolicyAssignments(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _presentationPolicyAssignmentCollectionRequest = requestParameters[\"presentationPolicyAssignmentCollectionRequest\"];\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/policy-assignments`, _presentationPolicyAssignmentCollectionRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postPolicyAssignmentsUrl(requestParameters) {\n        const _presentationPolicyAssignmentCollectionRequest = requestParameters[\"presentationPolicyAssignmentCollectionRequest\"];\n        return `${this.configuration.basePath}/client-api/v2/policy-assignments`;\n    }\n    putApprovalsByPolicyAssignmentId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putApprovalsByPolicyAssignmentId.');\n        }\n        const _presentationPolicyAssignmentApprovalRequest = requestParameters[\"presentationPolicyAssignmentApprovalRequest\"];\n        if (_presentationPolicyAssignmentApprovalRequest === null || _presentationPolicyAssignmentApprovalRequest === undefined) {\n            throw new Error('Required parameter presentationPolicyAssignmentApprovalRequest was null or undefined when calling putApprovalsByPolicyAssignmentId.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/policy-assignments/${encodeURIComponent(String(_id))}/approvals`, _presentationPolicyAssignmentApprovalRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putApprovalsByPolicyAssignmentIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putApprovalsByPolicyAssignmentId.');\n        }\n        const _presentationPolicyAssignmentApprovalRequest = requestParameters[\"presentationPolicyAssignmentApprovalRequest\"];\n        if (_presentationPolicyAssignmentApprovalRequest === null || _presentationPolicyAssignmentApprovalRequest === undefined) {\n            throw new Error('Required parameter presentationPolicyAssignmentApprovalRequest was null or undefined when calling putApprovalsByPolicyAssignmentId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/policy-assignments/${encodeURIComponent(String(_id))}/approvals`;\n    }\n    retrievePolicyAssignmentById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling retrievePolicyAssignmentById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/policy-assignments/${encodeURIComponent(String(_id))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    retrievePolicyAssignmentByIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling retrievePolicyAssignmentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/policy-assignments/${encodeURIComponent(String(_id))}`;\n    }\n}\nPolicyAssignmentsHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PolicyAssignmentsHttpService, deps: [{ token: i1.HttpClient }, { token: APPROVAL_BASE_PATH, optional: true }, { token: ApprovalConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nPolicyAssignmentsHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PolicyAssignmentsHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PolicyAssignmentsHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [APPROVAL_BASE_PATH]\n                }] }, { type: ApprovalConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst PolicyAssignmentsHttpServiceDeletePolicyAssignmentsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/policy-assignments\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"numberOfRowsAffected\": 2\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"numberOfRowsAffected\": 2\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PolicyAssignmentsHttpServiceGetApprovableBusinessFunctionsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/policy-assignments/approvable-business-functions\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"approvableBusinessFunctions\": [{\n                            \"resource\": \"Payments\",\n                            \"function\": \"SEPA CT\",\n                            \"status\": \"ACTIVE\",\n                            \"assignedPolicies\": [{\n                                    \"id\": \"4a12d988-bac2-42b7-980c-f09686e3d7db\",\n                                    \"policyId\": \"ac007558-970f-45fc-9939-48f78d8622fa\",\n                                    \"name\": \"No-op policy\",\n                                    \"description\": \"A policy that does not require any approval\"\n                                }],\n                            \"dataGroupSpecificPolicies\": [{\n                                    \"dataGroups\": [{\n                                            \"id\": \"8a49404e7750618601775066a0130006\",\n                                            \"name\": \"Salary Accounts\",\n                                            \"deleted\": false\n                                        }, {\n                                            \"id\": \"8a49404e7750618601775066a0130006\",\n                                            \"name\": \"Tax Accounts\",\n                                            \"deleted\": false\n                                        }],\n                                    \"assignedPolicies\": [{\n                                            \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n                                            \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n                                            \"name\": \"Simple policy\",\n                                            \"description\": \"A simple policy that requires one approval of type A\",\n                                            \"upperBound\": {\n                                                \"amount\": \"100.00\",\n                                                \"currencyCode\": \"EUR\"\n                                            }\n                                        }, {\n                                            \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6916\",\n                                            \"policyId\": \"75419243-3d83-40ce-98b2-d2313bf3cf13\",\n                                            \"name\": \"Default policy\",\n                                            \"description\": \"A default policy that requires two approvals of different types: A + B\",\n                                            \"upperBound\": {\n                                                \"amount\": \"200.00\",\n                                                \"currencyCode\": \"EUR\"\n                                            }\n                                        }]\n                                }, {\n                                    \"dataGroups\": [{\n                                            \"id\": \"8a49404e7750618601775066a0130034\",\n                                            \"name\": \"Marketing US\",\n                                            \"deleted\": false\n                                        }],\n                                    \"assignedPolicies\": [{\n                                            \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n                                            \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n                                            \"name\": \"Simple policy\",\n                                            \"description\": \"A simple policy that requires one approval of type A\"\n                                        }]\n                                }]\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PolicyAssignmentsHttpServicePostPolicyAssignmentsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/policy-assignments\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 202,\n                body: {}\n            },\n            {\n                status: 204,\n                body: {}\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Policy not found\",\n                    \"errors\": [{\n                            \"message\": \"Policy not found\",\n                            \"key\": \"approval.api.PolicyNotFound\",\n                            \"context\": {\n                                \"policy id\": \"7d466fef-de4d-48f2-8e72-c31ca5774b5a\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Policy assignment already exists\",\n                    \"errors\": [{\n                            \"message\": \"Policy assignment already exists\",\n                            \"key\": \"approval.api.PolicyAssignmentAlreadyExists\",\n                            \"context\": {\n                                \"policy id\": \"b212069e-b6e3-4b40-add3-80f1b12d67a6\",\n                                \"service agreement id\": \"8a48e61a69918d12016994f9d9160001\",\n                                \"business function\": \"SEPA CT\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Policy assignment with no bounds already exists\",\n                    \"errors\": [{\n                            \"message\": \"Policy assignment with no bounds already exists\",\n                            \"key\": \"approval.api.PolicyAssignmentAlreadyUnbounded\",\n                            \"context\": {\n                                \"policy id\": \"b212069e-b6e3-4b40-add3-80f1b12d67a6\",\n                                \"service agreement id\": \"8a48e61a69918d12016994f9d9160001\",\n                                \"business function\": \"SEPA CT\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Policy assignment has invalid bounds\",\n                    \"errors\": [{\n                            \"message\": \"Policy assignment has invalid bounds\",\n                            \"key\": \"approval.api.PolicyAssignmentInvalidBound\",\n                            \"context\": {\n                                \"amount\": \"-10\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PolicyAssignmentsHttpServicePutApprovalsByPolicyAssignmentIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/policy-assignments/{id}/approvals\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 202,\n                body: {}\n            },\n            {\n                status: 204,\n                body: {}\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PolicyAssignmentsHttpServiceRetrievePolicyAssignmentByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/policy-assignments/{id}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"serviceAgreementId\": \"92058e99-88f7-45d9-bb99-s4s4s4s4s4s4\",\n                    \"serviceAgreementName\": \"Service agreement name\",\n                    \"serviceAgreementDescription\": \"Service agreement description\",\n                    \"function\": \"Sepa CT\",\n                    \"resource\": \"Payments\",\n                    \"status\": \"ACTIVE\",\n                    \"assignedPolicies\": [{\n                            \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n                            \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n                            \"name\": \"Simple policy\",\n                            \"description\": \"A simple policy that requires one approval of type A\",\n                            \"upperBound\": {\n                                \"amount\": \"100.00\",\n                                \"currencyCode\": \"EUR\"\n                            }\n                        }, {\n                            \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6916\",\n                            \"policyId\": \"75419243-3d83-40ce-98b2-d2313bf3cf13\",\n                            \"name\": \"Default policy\",\n                            \"description\": \"A default policy that requires two approvals of different types: A + B\",\n                            \"upperBound\": {\n                                \"amount\": \"200.00\",\n                                \"currencyCode\": \"EUR\"\n                            }\n                        }],\n                    \"dataGroupSpecificPolicies\": [{\n                            \"dataGroups\": [{\n                                    \"id\": \"8a49404e7750618601775066a0130006\",\n                                    \"name\": \"Salary Accounts\",\n                                    \"deleted\": false\n                                }, {\n                                    \"id\": \"8a49404e7750618601775066a0130006\",\n                                    \"name\": \"Tax Accounts\",\n                                    \"deleted\": false\n                                }],\n                            \"assignedPolicies\": [{\n                                    \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n                                    \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n                                    \"name\": \"Simple policy\",\n                                    \"description\": \"A simple policy that requires one approval of type A\",\n                                    \"upperBound\": {\n                                        \"amount\": \"100.00\",\n                                        \"currencyCode\": \"EUR\"\n                                    }\n                                }, {\n                                    \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6916\",\n                                    \"policyId\": \"75419243-3d83-40ce-98b2-d2313bf3cf13\",\n                                    \"name\": \"Default policy\",\n                                    \"description\": \"A default policy that requires two approvals of different types: A + B\",\n                                    \"upperBound\": {\n                                        \"amount\": \"200.00\",\n                                        \"currencyCode\": \"EUR\"\n                                    }\n                                }]\n                        }, {\n                            \"dataGroups\": [{\n                                    \"id\": \"8a49404e7750618601775066a0130034\",\n                                    \"name\": \"Marketing US\",\n                                    \"deleted\": false\n                                }],\n                            \"assignedPolicies\": [{\n                                    \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n                                    \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n                                    \"name\": \"Simple policy\",\n                                    \"description\": \"A simple policy that requires one approval of type A\"\n                                }]\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PolicyAssignmentsHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/policy-assignments\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"numberOfRowsAffected\": 2\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"numberOfRowsAffected\": 2\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/policy-assignments/approvable-business-functions\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"approvableBusinessFunctions\": [{\n                            \"resource\": \"Payments\",\n                            \"function\": \"SEPA CT\",\n                            \"status\": \"ACTIVE\",\n                            \"assignedPolicies\": [{\n                                    \"id\": \"4a12d988-bac2-42b7-980c-f09686e3d7db\",\n                                    \"policyId\": \"ac007558-970f-45fc-9939-48f78d8622fa\",\n                                    \"name\": \"No-op policy\",\n                                    \"description\": \"A policy that does not require any approval\"\n                                }],\n                            \"dataGroupSpecificPolicies\": [{\n                                    \"dataGroups\": [{\n                                            \"id\": \"8a49404e7750618601775066a0130006\",\n                                            \"name\": \"Salary Accounts\",\n                                            \"deleted\": false\n                                        }, {\n                                            \"id\": \"8a49404e7750618601775066a0130006\",\n                                            \"name\": \"Tax Accounts\",\n                                            \"deleted\": false\n                                        }],\n                                    \"assignedPolicies\": [{\n                                            \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n                                            \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n                                            \"name\": \"Simple policy\",\n                                            \"description\": \"A simple policy that requires one approval of type A\",\n                                            \"upperBound\": {\n                                                \"amount\": \"100.00\",\n                                                \"currencyCode\": \"EUR\"\n                                            }\n                                        }, {\n                                            \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6916\",\n                                            \"policyId\": \"75419243-3d83-40ce-98b2-d2313bf3cf13\",\n                                            \"name\": \"Default policy\",\n                                            \"description\": \"A default policy that requires two approvals of different types: A + B\",\n                                            \"upperBound\": {\n                                                \"amount\": \"200.00\",\n                                                \"currencyCode\": \"EUR\"\n                                            }\n                                        }]\n                                }, {\n                                    \"dataGroups\": [{\n                                            \"id\": \"8a49404e7750618601775066a0130034\",\n                                            \"name\": \"Marketing US\",\n                                            \"deleted\": false\n                                        }],\n                                    \"assignedPolicies\": [{\n                                            \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n                                            \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n                                            \"name\": \"Simple policy\",\n                                            \"description\": \"A simple policy that requires one approval of type A\"\n                                        }]\n                                }]\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/policy-assignments\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 202,\n                body: {}\n            },\n            {\n                status: 204,\n                body: {}\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Policy not found\",\n                    \"errors\": [{\n                            \"message\": \"Policy not found\",\n                            \"key\": \"approval.api.PolicyNotFound\",\n                            \"context\": {\n                                \"policy id\": \"7d466fef-de4d-48f2-8e72-c31ca5774b5a\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Policy assignment already exists\",\n                    \"errors\": [{\n                            \"message\": \"Policy assignment already exists\",\n                            \"key\": \"approval.api.PolicyAssignmentAlreadyExists\",\n                            \"context\": {\n                                \"policy id\": \"b212069e-b6e3-4b40-add3-80f1b12d67a6\",\n                                \"service agreement id\": \"8a48e61a69918d12016994f9d9160001\",\n                                \"business function\": \"SEPA CT\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Policy assignment with no bounds already exists\",\n                    \"errors\": [{\n                            \"message\": \"Policy assignment with no bounds already exists\",\n                            \"key\": \"approval.api.PolicyAssignmentAlreadyUnbounded\",\n                            \"context\": {\n                                \"policy id\": \"b212069e-b6e3-4b40-add3-80f1b12d67a6\",\n                                \"service agreement id\": \"8a48e61a69918d12016994f9d9160001\",\n                                \"business function\": \"SEPA CT\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Policy assignment has invalid bounds\",\n                    \"errors\": [{\n                            \"message\": \"Policy assignment has invalid bounds\",\n                            \"key\": \"approval.api.PolicyAssignmentInvalidBound\",\n                            \"context\": {\n                                \"amount\": \"-10\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/policy-assignments/{id}/approvals\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 202,\n                body: {}\n            },\n            {\n                status: 204,\n                body: {}\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/policy-assignments/{id}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"serviceAgreementId\": \"92058e99-88f7-45d9-bb99-s4s4s4s4s4s4\",\n                    \"serviceAgreementName\": \"Service agreement name\",\n                    \"serviceAgreementDescription\": \"Service agreement description\",\n                    \"function\": \"Sepa CT\",\n                    \"resource\": \"Payments\",\n                    \"status\": \"ACTIVE\",\n                    \"assignedPolicies\": [{\n                            \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n                            \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n                            \"name\": \"Simple policy\",\n                            \"description\": \"A simple policy that requires one approval of type A\",\n                            \"upperBound\": {\n                                \"amount\": \"100.00\",\n                                \"currencyCode\": \"EUR\"\n                            }\n                        }, {\n                            \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6916\",\n                            \"policyId\": \"75419243-3d83-40ce-98b2-d2313bf3cf13\",\n                            \"name\": \"Default policy\",\n                            \"description\": \"A default policy that requires two approvals of different types: A + B\",\n                            \"upperBound\": {\n                                \"amount\": \"200.00\",\n                                \"currencyCode\": \"EUR\"\n                            }\n                        }],\n                    \"dataGroupSpecificPolicies\": [{\n                            \"dataGroups\": [{\n                                    \"id\": \"8a49404e7750618601775066a0130006\",\n                                    \"name\": \"Salary Accounts\",\n                                    \"deleted\": false\n                                }, {\n                                    \"id\": \"8a49404e7750618601775066a0130006\",\n                                    \"name\": \"Tax Accounts\",\n                                    \"deleted\": false\n                                }],\n                            \"assignedPolicies\": [{\n                                    \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n                                    \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n                                    \"name\": \"Simple policy\",\n                                    \"description\": \"A simple policy that requires one approval of type A\",\n                                    \"upperBound\": {\n                                        \"amount\": \"100.00\",\n                                        \"currencyCode\": \"EUR\"\n                                    }\n                                }, {\n                                    \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6916\",\n                                    \"policyId\": \"75419243-3d83-40ce-98b2-d2313bf3cf13\",\n                                    \"name\": \"Default policy\",\n                                    \"description\": \"A default policy that requires two approvals of different types: A + B\",\n                                    \"upperBound\": {\n                                        \"amount\": \"200.00\",\n                                        \"currencyCode\": \"EUR\"\n                                    }\n                                }]\n                        }, {\n                            \"dataGroups\": [{\n                                    \"id\": \"8a49404e7750618601775066a0130034\",\n                                    \"name\": \"Marketing US\",\n                                    \"deleted\": false\n                                }],\n                            \"assignedPolicies\": [{\n                                    \"id\": \"03de4365-43c1-4e1d-aa6f-dc687dcdffec\",\n                                    \"policyId\": \"38e4c392-de63-4b1a-b15b-9ea6b56b9e1b\",\n                                    \"name\": \"Simple policy\",\n                                    \"description\": \"A simple policy that requires one approval of type A\"\n                                }]\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nexport { APPROVAL_BASE_PATH, ApprovalApiModule, ApprovalConfiguration, ApprovalRecordStatus, ApprovalStatus, ApprovalTypeAssignmentsHttpService, ApprovalTypeAssignmentsHttpServiceDeleteApprovalTypeAssignmentByIdMocksProvider, ApprovalTypeAssignmentsHttpServiceGetAssignedApprovalTypeByIdMocksProvider, ApprovalTypeAssignmentsHttpServiceMocksProvider, ApprovalTypeAssignmentsHttpServicePostAssignApprovalTypeMocksProvider, ApprovalTypeAssignmentsHttpServicePutUpdateApprovalTypeAssignmentByIdMocksProvider, ApprovalTypesHttpService, ApprovalTypesHttpServiceGetAvailableApprovalTypesMocksProvider, ApprovalTypesHttpServiceMocksProvider, ApprovalsHttpService, ApprovalsHttpServiceGetApprovalByApprovalIdMocksProvider, ApprovalsHttpServiceGetApprovalsMocksProvider, ApprovalsHttpServiceGetProgressStatusByApprovalRecordIdMocksProvider, ApprovalsHttpServiceMocksProvider, COLLECTION_FORMATS, CONFIG_TOKEN, LogicalOperator, PoliciesHttpService, PoliciesHttpServiceGetAvailablePoliciesMocksProvider, PoliciesHttpServiceMocksProvider, PolicyAssignmentStatus, PolicyAssignmentsHttpService, PolicyAssignmentsHttpServiceDeletePolicyAssignmentsMocksProvider, PolicyAssignmentsHttpServiceGetApprovableBusinessFunctionsMocksProvider, PolicyAssignmentsHttpServiceMocksProvider, PolicyAssignmentsHttpServicePostPolicyAssignmentsMocksProvider, PolicyAssignmentsHttpServicePutApprovalsByPolicyAssignmentIdMocksProvider, PolicyAssignmentsHttpServiceRetrievePolicyAssignmentByIdMocksProvider, RecordStatus };\n"]},"metadata":{},"sourceType":"module"}