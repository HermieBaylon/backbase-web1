{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Optional, Inject, Component, NgModule } from '@angular/core';\nimport * as i1 from '@angular/router';\nimport { provideRoutes, RouterModule } from '@angular/router';\nimport * as i1$2 from '@backbase/foundation-ang/core';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport * as i1$1 from '@backbase/payment-orders-ang';\nimport { Routes, normalizePaymentType, INTERNATIONAL_TRANSFER, P2P_TRANSFER, INTERNAL_TRANSFER_BUSINESS, INTRABANK_TRANSFER, INTERNAL_TRANSFER, US_DOMESTIC_WIRE, CHAPS, UK_FASTER_PAYMENT, ACH_DEBIT, US_ACH_CREDIT, SEPA, InitiatePaymentHeaderStates, AccessContextScope, PaymentMode, StateService, NavigationService, RoutableModalService, PaymentOptionsService, PaymentOrderHttpService, PayordPaymentErrorsConfigProvider } from '@backbase/payment-orders-ang';\nexport { AccessContextScope, CounterPartyFields, Frequencies, INTERNAL_TRANSFER, INTERNAL_TRANSFER_BUSINESS, INTERNATIONAL_TRANSFER, INTRABANK_TRANSFER, InitiatorFields, P2P_TRANSFER, PaymentBaseFields, PaymentComponents, PaymentFormFieldHooks, PaymentHooks, PaymentMode, PayordOmniPaymentConfigProvider, RemittanceInfoFields, ReviewScreens, SEPA, ScheduleEndType, ScheduleFields, US_ACH_CREDIT, US_DOMESTIC_WIRE } from '@backbase/payment-orders-ang';\nimport * as i3 from '@backbase/payments-collection-ui-ang';\nimport { CreatePaymentConfigSetupService, CreatePaymentFormComponent, ReviewPaymentContainerComponent, ReviewPaymentModule, CreatePaymentFormModule, CreatePaymentService } from '@backbase/payments-collection-ui-ang';\nimport * as i2 from '@backbase/payord-form-builder-ang';\nimport { PayordFormBuilderAngModule } from '@backbase/payord-form-builder-ang';\nimport { Subject } from 'rxjs';\n/** @internal */\n\nclass InitiatePaymentNavigationService {\n  constructor(router, route) {\n    this.router = router;\n    this.route = route;\n    this.emitAfterSuccess = new Subject();\n    this.routingExtras = {\n      queryParamsHandling: 'merge',\n      relativeTo: this.route,\n      skipLocationChange: true\n    };\n  }\n  /**\n   * Navigate to the initiate payment form\n   */\n\n\n  form() {\n    return this.router.navigate([Routes.FORM], this.routingExtras);\n  }\n  /**\n   * Navigate to the initiate payment review screen.\n   */\n\n\n  review() {\n    return this.router.navigate([Routes.REVIEW], this.routingExtras);\n  }\n  /**\n   * Method to emit success event after form is submitted\n   */\n\n\n  afterSuccess() {\n    this.emitAfterSuccess.next();\n  }\n\n}\n/** @nocollapse */\n\n\nInitiatePaymentNavigationService.ɵfac = function InitiatePaymentNavigationService_Factory(t) {\n  return new (t || InitiatePaymentNavigationService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i1.ActivatedRoute));\n};\n/** @nocollapse */\n\n\nInitiatePaymentNavigationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: InitiatePaymentNavigationService,\n  factory: InitiatePaymentNavigationService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InitiatePaymentNavigationService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.Router\n    }, {\n      type: i1.ActivatedRoute\n    }];\n  }, null);\n})();\n\nconst INITIATE_PAYMENT_JOURNEY_COMMUNICATOR = new InjectionToken('bb-initiate-payment-journey-communicator');\n/** @internal */\n\nclass InitiatePaymentRoutableModalService {\n  constructor(communicator) {\n    this.communicator = communicator;\n  }\n\n  closeModal() {\n    var _a;\n\n    (_a = this.communicator) === null || _a === void 0 ? void 0 : _a.closeEvent();\n  }\n\n  openModal() {\n    var _a;\n\n    (_a = this.communicator) === null || _a === void 0 ? void 0 : _a.headerNavigationAction('new-debit-ach');\n  }\n\n}\n/** @nocollapse */\n\n\nInitiatePaymentRoutableModalService.ɵfac = function InitiatePaymentRoutableModalService_Factory(t) {\n  return new (t || InitiatePaymentRoutableModalService)(i0.ɵɵinject(INITIATE_PAYMENT_JOURNEY_COMMUNICATOR, 8));\n};\n/** @nocollapse */\n\n\nInitiatePaymentRoutableModalService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: InitiatePaymentRoutableModalService,\n  factory: InitiatePaymentRoutableModalService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InitiatePaymentRoutableModalService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [INITIATE_PAYMENT_JOURNEY_COMMUNICATOR]\n      }]\n    }];\n  }, null);\n})();\n\nfunction getPaymentConfig(paymentType) {\n  switch (normalizePaymentType(paymentType)) {\n    case 'SEPA_CREDIT_TRANSFER':\n    case 'SEPA_CT':\n    case 'SEPA':\n      return SEPA;\n\n    case 'ACH_CREDIT':\n    case 'US_ACH_CREDIT':\n      return US_ACH_CREDIT;\n\n    case 'US_ACH_DEBIT':\n    case 'ACH_DEBIT':\n      return ACH_DEBIT;\n\n    case 'FASTER_PAYMENT':\n      return UK_FASTER_PAYMENT;\n\n    case 'CHAPS':\n      return CHAPS;\n\n    case 'US_DOMESTIC_WIRE':\n      return US_DOMESTIC_WIRE;\n\n    case 'INTERNAL_TRANSFER':\n      return INTERNAL_TRANSFER;\n\n    case 'INTRABANK_TRANSFER':\n      return INTRABANK_TRANSFER;\n\n    case 'INTERNAL_TRANSFER_BUSINESS':\n      return INTERNAL_TRANSFER_BUSINESS;\n\n    case 'P2P_TRANSFER':\n      return P2P_TRANSFER;\n\n    case 'INTERNATIONAL_TRANSFER':\n      return INTERNATIONAL_TRANSFER;\n  }\n\n  return US_DOMESTIC_WIRE;\n}\n\nfunction getBusinessFunction(paymentType) {\n  switch (normalizePaymentType(paymentType)) {\n    case 'SEPA_CREDIT_TRANSFER':\n    case 'SEPA_CT':\n    case 'SEPA':\n      return 'SEPA CT';\n\n    case 'ACH_DEBIT':\n      return 'ACH Debit';\n\n    case 'ACH_CREDIT':\n    case 'US_ACH_CREDIT':\n    case 'CUSTOM_ACH_CREDIT':\n      return 'ACH Credit Transfer';\n\n    case 'CHAPS':\n      return 'UK CHAPS';\n\n    case 'FASTER_PAYMENT':\n      return 'UK Faster Payments';\n\n    case 'US_DOMESTIC_WIRE':\n      return 'US Domestic Wire';\n\n    case 'INTERNAL_TRANSFER':\n    case 'INTERNAL_TRANSFER_BUSINESS':\n    case 'INTRABANK_TRANSFER':\n      return 'A2A Transfer';\n\n    case 'INTERNATIONAL_TRANSFER':\n      return 'US Foreign Wire';\n\n    case 'P2P_TRANSFER':\n      return 'P2P Transfer';\n  }\n\n  return 'US Domestic Wire';\n}\n\nfunction getPaymentTypeTitle(paymentType) {\n  switch (normalizePaymentType(paymentType)) {\n    case 'SEPA_CREDIT_TRANSFER':\n    case 'SEPA_CT':\n    case 'SEPA':\n      return $localize`:@@initiate-payment.payment-title.payment-type-sepa:SEPA`;\n\n    case 'ACH_DEBIT':\n    case 'ACH_CREDIT':\n    case 'US_ACH_CREDIT':\n    case 'CUSTOM_ACH_CREDIT':\n      return $localize`:@@initiate-payment.payment-title.payment-type-ach:ACH`;\n\n    case 'US_DOMESTIC_WIRE':\n      return $localize`:@@initiate-payment.payment-title.payment-type-wire:Wire`;\n\n    case 'INTERNAL_TRANSFER':\n    case 'INTERNAL_TRANSFER_BUSINESS':\n    case 'INTRABANK_TRANSFER':\n      return $localize`:@@initiate-payment.payment-title.payment-type-internal:Internal`;\n\n    case 'INTERNATIONAL_TRANSFER':\n      return $localize`:@@initiate-payment.payment-title.payment-type-international-wire:International Wire`;\n\n    case 'P2P_TRANSFER':\n      return $localize`:@@initiate-payment.payment-title.payment-type-p2p:P2P`;\n  }\n\n  return $localize`:@@initiate-payment.payment-title.payment-type-default:`;\n}\n\nfunction defaultHeaderSetup({\n  paymentType,\n  paymentMode,\n  state,\n  isDebit\n}) {\n  const payment = isDebit ? $localize`:@@initiate-payment.payment-title.debit: Debit` : '';\n  let title = `${getPaymentTypeTitle(paymentType)}${payment}`;\n\n  if (paymentMode === null || paymentMode === void 0 ? void 0 : paymentMode.includes('EDIT')) {\n    title = $localize`:@@initiate-payment.payment-title.edit-mode:Edit ${title}`;\n  } else {\n    title = $localize`:@@initiate-payment.payment-title.new-mode:New ${title}`;\n  }\n\n  if (paymentMode === null || paymentMode === void 0 ? void 0 : paymentMode.includes('TEMPLATE')) {\n    title = $localize`:@@initiate-payment.payment-title.template:${title} Template`;\n  } else if (!isDebit) {\n    title = $localize`:@@initiate-payment.payment-title.payment:${title} Payment`;\n  }\n\n  if (state === InitiatePaymentHeaderStates.REVIEW) {\n    title = $localize`:@@initiate-payment.payment-title.review-state:${title} - Review`;\n  } else if (state === InitiatePaymentHeaderStates.SUBMITTED) {\n    title = $localize`:@@initiate-payment.payment-title.submitted-state:${title} - Submitted`;\n  }\n\n  return title;\n}\n\nconst InitiatePaymentDefaultOptions = {\n  pageSize: 50,\n  isModalView: true,\n  pollInterval: 1000,\n  defaultCountry: 'US',\n  enableApprovals: true,\n  defaultScheme: 'BBAN',\n  isTemplateMode: false,\n  isDebitPayment: false,\n  isErrorTitleDisplayed: true,\n  enableNewPaymentButton: false,\n  checkClosedPaymentsAccess: false,\n  enableSavePaymentAsTemplate: true,\n  isOneOffToRecurrentAllowed: false,\n  isRecurrentToOneOffAllowed: false,\n  enablePaymentTemplateSelector: true,\n  accessContextScope: AccessContextScope.SA,\n  successEventName: 'bb.success.create.payment',\n  header: defaultHeaderSetup\n};\nconst INITIATE_PAYMENT_CONFIG = new InjectionToken('INITIATE_PAYMENT_CONFIG');\n\nclass InitiatePaymentConfigService {\n  constructor(stateService, componentsFactory, paymentOrderHttpService, createPaymentSetup, initiatePaymentConfig) {\n    this.stateService = stateService;\n    this.componentsFactory = componentsFactory;\n    this.paymentOrderHttpService = paymentOrderHttpService;\n    this.createPaymentSetup = createPaymentSetup;\n    this.initiatePaymentConfig = initiatePaymentConfig;\n  }\n  /**\n   * @param {TriggerInitiatePaymentPayload} [data] - Initiate payment payload\n   */\n\n\n  setup(data) {\n    var _a;\n\n    if (data) {\n      ((_a = data.options) === null || _a === void 0 ? void 0 : _a.paymentMode) !== PaymentMode.CREATE_PAYMENT ? this.applyData(data) : this.applyConfigWithData(data);\n    } else {\n      this.applyConfig();\n    }\n  }\n\n  applyConfig() {\n    const {\n      paymentTypes,\n      hooks,\n      options,\n      businessFunctions,\n      baseFields,\n      fetchPaymentOptionsListener,\n      customFields\n    } = this.initiatePaymentConfig;\n    this.createPaymentSetup.setHooks(hooks);\n    this.createPaymentSetup.setConfigs(paymentTypes);\n    this.createPaymentSetup.setOptions(Object.assign(Object.assign({}, InitiatePaymentDefaultOptions), options || {}));\n    this.createPaymentSetup.setBaseFields(baseFields);\n    this.createPaymentSetup.setFetchPaymentOptionsListener(fetchPaymentOptionsListener);\n    this.paymentOrderHttpService.businessFunction = businessFunctions.join(',');\n    this.componentsFactory.registerCustomFields(customFields);\n    this.componentsFactory.registerCustomFieldsForPaymentConfigs(paymentTypes);\n  }\n\n  applyData(data) {\n    var _a;\n\n    const template = data.template;\n    const paymentType = template ? template.details.paymentType : (_a = data.payment) === null || _a === void 0 ? void 0 : _a.paymentType;\n    this.paymentOrderHttpService.businessFunction = getBusinessFunction(paymentType);\n\n    if (template) {\n      this.stateService.setPaymentTemplate(data.template);\n    } else {\n      this.stateService.setEditPayment(data.payment);\n    }\n\n    this.createPaymentSetup.setConfigs([Object.assign({}, getPaymentConfig(paymentType))]);\n    this.createPaymentSetup.setOptions(Object.assign(Object.assign({}, InitiatePaymentDefaultOptions), data.options || {}));\n  }\n\n  applyConfigWithData(data) {\n    const template = data.template;\n\n    if (template) {\n      this.stateService.setPaymentTemplate(data.template);\n    } else {\n      this.stateService.setEditPayment(data.payment);\n    }\n\n    this.applyConfig();\n  }\n\n}\n/** @nocollapse */\n\n\nInitiatePaymentConfigService.ɵfac = function InitiatePaymentConfigService_Factory(t) {\n  return new (t || InitiatePaymentConfigService)(i0.ɵɵinject(i1$1.StateService), i0.ɵɵinject(i2.ComponentsFactoryService), i0.ɵɵinject(i1$1.PaymentOrderHttpService), i0.ɵɵinject(i3.CreatePaymentConfigSetupService), i0.ɵɵinject(INITIATE_PAYMENT_CONFIG));\n};\n/** @nocollapse */\n\n\nInitiatePaymentConfigService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: InitiatePaymentConfigService,\n  factory: InitiatePaymentConfigService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InitiatePaymentConfigService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.StateService\n    }, {\n      type: i2.ComponentsFactoryService\n    }, {\n      type: i1$1.PaymentOrderHttpService\n    }, {\n      type: i3.CreatePaymentConfigSetupService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [INITIATE_PAYMENT_CONFIG]\n      }]\n    }];\n  }, null);\n})();\n\nclass InitiatePaymentJourneyComponent {\n  constructor(configService, communicator) {\n    this.configService = configService;\n    this.communicator = communicator;\n\n    if (communicator) {\n      communicator.init({\n        setupData(data) {\n          configService.setup(data);\n        }\n\n      });\n    } else {\n      configService.setup();\n    }\n  }\n\n  ngOnDestroy() {\n    this.communicator.reset();\n  }\n\n}\n/** @nocollapse */\n\n\nInitiatePaymentJourneyComponent.ɵfac = function InitiatePaymentJourneyComponent_Factory(t) {\n  return new (t || InitiatePaymentJourneyComponent)(i0.ɵɵdirectiveInject(InitiatePaymentConfigService), i0.ɵɵdirectiveInject(INITIATE_PAYMENT_JOURNEY_COMMUNICATOR, 8));\n};\n/** @nocollapse */\n\n\nInitiatePaymentJourneyComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: InitiatePaymentJourneyComponent,\n  selectors: [[\"bb-initiate-payment-journey\"]],\n  features: [i0.ɵɵProvidersFeature([StateService, InitiatePaymentConfigService, CreatePaymentConfigSetupService, {\n    provide: NavigationService,\n    useClass: InitiatePaymentNavigationService\n  }, {\n    provide: RoutableModalService,\n    useClass: InitiatePaymentRoutableModalService\n  }])],\n  decls: 1,\n  vars: 0,\n  template: function InitiatePaymentJourneyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"router-outlet\");\n    }\n  },\n  directives: [i1.RouterOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InitiatePaymentJourneyComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-initiate-payment-journey',\n      template: ` <router-outlet></router-outlet>`,\n      providers: [StateService, InitiatePaymentConfigService, CreatePaymentConfigSetupService, {\n        provide: NavigationService,\n        useClass: InitiatePaymentNavigationService\n      }, {\n        provide: RoutableModalService,\n        useClass: InitiatePaymentRoutableModalService\n      }]\n    }]\n  }], function () {\n    return [{\n      type: InitiatePaymentConfigService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [INITIATE_PAYMENT_JOURNEY_COMMUNICATOR]\n      }]\n    }];\n  }, null);\n})();\n\nconst InitiatePaymentDefaultRoute = {\n  path: '',\n  component: InitiatePaymentJourneyComponent,\n  children: [{\n    path: '',\n    redirectTo: Routes.FORM,\n    pathMatch: 'full'\n  }, {\n    path: Routes.FORM,\n    component: CreatePaymentFormComponent\n  }, {\n    path: Routes.REVIEW,\n    component: ReviewPaymentContainerComponent\n  }]\n};\n\nclass InitiatePaymentJourneyModule {\n  static forRoot(data = {\n    route: InitiatePaymentDefaultRoute\n  }) {\n    return {\n      ngModule: InitiatePaymentJourneyModule,\n      providers: [provideRoutes([data.route])]\n    };\n  }\n\n}\n/** @nocollapse */\n\n\nInitiatePaymentJourneyModule.ɵfac = function InitiatePaymentJourneyModule_Factory(t) {\n  return new (t || InitiatePaymentJourneyModule)();\n};\n/** @nocollapse */\n\n\nInitiatePaymentJourneyModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: InitiatePaymentJourneyModule\n});\n/** @nocollapse */\n\nInitiatePaymentJourneyModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [CreatePaymentService, PaymentOptionsService, PaymentOrderHttpService, PayordPaymentErrorsConfigProvider],\n  imports: [[CommonModule, RouterModule, ReviewPaymentModule, CreatePaymentFormModule, PayordFormBuilderAngModule, BackbaseCoreModule.withConfig({\n    classMap: {\n      InitiatePaymentJourneyComponent\n    }\n  })]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InitiatePaymentJourneyModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [InitiatePaymentJourneyComponent],\n      imports: [CommonModule, RouterModule, ReviewPaymentModule, CreatePaymentFormModule, PayordFormBuilderAngModule, BackbaseCoreModule.withConfig({\n        classMap: {\n          InitiatePaymentJourneyComponent\n        }\n      })],\n      providers: [CreatePaymentService, PaymentOptionsService, PaymentOrderHttpService, PayordPaymentErrorsConfigProvider]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { INITIATE_PAYMENT_CONFIG, INITIATE_PAYMENT_JOURNEY_COMMUNICATOR, InitiatePaymentConfigService, InitiatePaymentDefaultOptions, InitiatePaymentDefaultRoute, InitiatePaymentJourneyComponent, InitiatePaymentJourneyModule, InitiatePaymentNavigationService };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/initiate-payment-journey-ang/fesm2015/backbase-initiate-payment-journey-ang.js"],"names":["CommonModule","i0","Injectable","InjectionToken","Optional","Inject","Component","NgModule","i1","provideRoutes","RouterModule","i1$2","BackbaseCoreModule","i1$1","Routes","normalizePaymentType","INTERNATIONAL_TRANSFER","P2P_TRANSFER","INTERNAL_TRANSFER_BUSINESS","INTRABANK_TRANSFER","INTERNAL_TRANSFER","US_DOMESTIC_WIRE","CHAPS","UK_FASTER_PAYMENT","ACH_DEBIT","US_ACH_CREDIT","SEPA","InitiatePaymentHeaderStates","AccessContextScope","PaymentMode","StateService","NavigationService","RoutableModalService","PaymentOptionsService","PaymentOrderHttpService","PayordPaymentErrorsConfigProvider","CounterPartyFields","Frequencies","InitiatorFields","PaymentBaseFields","PaymentComponents","PaymentFormFieldHooks","PaymentHooks","PayordOmniPaymentConfigProvider","RemittanceInfoFields","ReviewScreens","ScheduleEndType","ScheduleFields","i3","CreatePaymentConfigSetupService","CreatePaymentFormComponent","ReviewPaymentContainerComponent","ReviewPaymentModule","CreatePaymentFormModule","CreatePaymentService","i2","PayordFormBuilderAngModule","Subject","InitiatePaymentNavigationService","constructor","router","route","emitAfterSuccess","routingExtras","queryParamsHandling","relativeTo","skipLocationChange","form","navigate","FORM","review","REVIEW","afterSuccess","next","ɵfac","Router","ActivatedRoute","ɵprov","type","INITIATE_PAYMENT_JOURNEY_COMMUNICATOR","InitiatePaymentRoutableModalService","communicator","closeModal","_a","closeEvent","openModal","headerNavigationAction","undefined","decorators","args","getPaymentConfig","paymentType","getBusinessFunction","getPaymentTypeTitle","$localize","defaultHeaderSetup","paymentMode","state","isDebit","payment","title","includes","SUBMITTED","InitiatePaymentDefaultOptions","pageSize","isModalView","pollInterval","defaultCountry","enableApprovals","defaultScheme","isTemplateMode","isDebitPayment","isErrorTitleDisplayed","enableNewPaymentButton","checkClosedPaymentsAccess","enableSavePaymentAsTemplate","isOneOffToRecurrentAllowed","isRecurrentToOneOffAllowed","enablePaymentTemplateSelector","accessContextScope","SA","successEventName","header","INITIATE_PAYMENT_CONFIG","InitiatePaymentConfigService","stateService","componentsFactory","paymentOrderHttpService","createPaymentSetup","initiatePaymentConfig","setup","data","options","CREATE_PAYMENT","applyData","applyConfigWithData","applyConfig","paymentTypes","hooks","businessFunctions","baseFields","fetchPaymentOptionsListener","customFields","setHooks","setConfigs","setOptions","Object","assign","setBaseFields","setFetchPaymentOptionsListener","businessFunction","join","registerCustomFields","registerCustomFieldsForPaymentConfigs","template","details","setPaymentTemplate","setEditPayment","ComponentsFactoryService","InitiatePaymentJourneyComponent","configService","init","setupData","ngOnDestroy","reset","ɵcmp","provide","useClass","RouterOutlet","selector","providers","InitiatePaymentDefaultRoute","path","component","children","redirectTo","pathMatch","InitiatePaymentJourneyModule","forRoot","ngModule","ɵmod","ɵinj","withConfig","classMap","declarations","imports"],"mappings":"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","sourcesContent":["import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Optional, Inject, Component, NgModule } from '@angular/core';\nimport * as i1 from '@angular/router';\nimport { provideRoutes, RouterModule } from '@angular/router';\nimport * as i1$2 from '@backbase/foundation-ang/core';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport * as i1$1 from '@backbase/payment-orders-ang';\nimport { Routes, normalizePaymentType, INTERNATIONAL_TRANSFER, P2P_TRANSFER, INTERNAL_TRANSFER_BUSINESS, INTRABANK_TRANSFER, INTERNAL_TRANSFER, US_DOMESTIC_WIRE, CHAPS, UK_FASTER_PAYMENT, ACH_DEBIT, US_ACH_CREDIT, SEPA, InitiatePaymentHeaderStates, AccessContextScope, PaymentMode, StateService, NavigationService, RoutableModalService, PaymentOptionsService, PaymentOrderHttpService, PayordPaymentErrorsConfigProvider } from '@backbase/payment-orders-ang';\nexport { AccessContextScope, CounterPartyFields, Frequencies, INTERNAL_TRANSFER, INTERNAL_TRANSFER_BUSINESS, INTERNATIONAL_TRANSFER, INTRABANK_TRANSFER, InitiatorFields, P2P_TRANSFER, PaymentBaseFields, PaymentComponents, PaymentFormFieldHooks, PaymentHooks, PaymentMode, PayordOmniPaymentConfigProvider, RemittanceInfoFields, ReviewScreens, SEPA, ScheduleEndType, ScheduleFields, US_ACH_CREDIT, US_DOMESTIC_WIRE } from '@backbase/payment-orders-ang';\nimport * as i3 from '@backbase/payments-collection-ui-ang';\nimport { CreatePaymentConfigSetupService, CreatePaymentFormComponent, ReviewPaymentContainerComponent, ReviewPaymentModule, CreatePaymentFormModule, CreatePaymentService } from '@backbase/payments-collection-ui-ang';\nimport * as i2 from '@backbase/payord-form-builder-ang';\nimport { PayordFormBuilderAngModule } from '@backbase/payord-form-builder-ang';\nimport { Subject } from 'rxjs';\n\n/** @internal */\nclass InitiatePaymentNavigationService {\n    constructor(router, route) {\n        this.router = router;\n        this.route = route;\n        this.emitAfterSuccess = new Subject();\n        this.routingExtras = {\n            queryParamsHandling: 'merge',\n            relativeTo: this.route,\n            skipLocationChange: true,\n        };\n    }\n    /**\n     * Navigate to the initiate payment form\n     */\n    form() {\n        return this.router.navigate([Routes.FORM], this.routingExtras);\n    }\n    /**\n     * Navigate to the initiate payment review screen.\n     */\n    review() {\n        return this.router.navigate([Routes.REVIEW], this.routingExtras);\n    }\n    /**\n     * Method to emit success event after form is submitted\n     */\n    afterSuccess() {\n        this.emitAfterSuccess.next();\n    }\n}\n/** @nocollapse */ InitiatePaymentNavigationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InitiatePaymentNavigationService, deps: [{ token: i1.Router }, { token: i1.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ InitiatePaymentNavigationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InitiatePaymentNavigationService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InitiatePaymentNavigationService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i1.ActivatedRoute }]; } });\n\nconst INITIATE_PAYMENT_JOURNEY_COMMUNICATOR = new InjectionToken('bb-initiate-payment-journey-communicator');\n\n/** @internal */\nclass InitiatePaymentRoutableModalService {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n    closeModal() {\n        var _a;\n        (_a = this.communicator) === null || _a === void 0 ? void 0 : _a.closeEvent();\n    }\n    openModal() {\n        var _a;\n        (_a = this.communicator) === null || _a === void 0 ? void 0 : _a.headerNavigationAction('new-debit-ach');\n    }\n}\n/** @nocollapse */ InitiatePaymentRoutableModalService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InitiatePaymentRoutableModalService, deps: [{ token: INITIATE_PAYMENT_JOURNEY_COMMUNICATOR, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ InitiatePaymentRoutableModalService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InitiatePaymentRoutableModalService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InitiatePaymentRoutableModalService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [INITIATE_PAYMENT_JOURNEY_COMMUNICATOR]\n                }] }]; } });\n\nfunction getPaymentConfig(paymentType) {\n    switch (normalizePaymentType(paymentType)) {\n        case 'SEPA_CREDIT_TRANSFER':\n        case 'SEPA_CT':\n        case 'SEPA':\n            return SEPA;\n        case 'ACH_CREDIT':\n        case 'US_ACH_CREDIT':\n            return US_ACH_CREDIT;\n        case 'US_ACH_DEBIT':\n        case 'ACH_DEBIT':\n            return ACH_DEBIT;\n        case 'FASTER_PAYMENT':\n            return UK_FASTER_PAYMENT;\n        case 'CHAPS':\n            return CHAPS;\n        case 'US_DOMESTIC_WIRE':\n            return US_DOMESTIC_WIRE;\n        case 'INTERNAL_TRANSFER':\n            return INTERNAL_TRANSFER;\n        case 'INTRABANK_TRANSFER':\n            return INTRABANK_TRANSFER;\n        case 'INTERNAL_TRANSFER_BUSINESS':\n            return INTERNAL_TRANSFER_BUSINESS;\n        case 'P2P_TRANSFER':\n            return P2P_TRANSFER;\n        case 'INTERNATIONAL_TRANSFER':\n            return INTERNATIONAL_TRANSFER;\n    }\n    return US_DOMESTIC_WIRE;\n}\nfunction getBusinessFunction(paymentType) {\n    switch (normalizePaymentType(paymentType)) {\n        case 'SEPA_CREDIT_TRANSFER':\n        case 'SEPA_CT':\n        case 'SEPA':\n            return 'SEPA CT';\n        case 'ACH_DEBIT':\n            return 'ACH Debit';\n        case 'ACH_CREDIT':\n        case 'US_ACH_CREDIT':\n        case 'CUSTOM_ACH_CREDIT':\n            return 'ACH Credit Transfer';\n        case 'CHAPS':\n            return 'UK CHAPS';\n        case 'FASTER_PAYMENT':\n            return 'UK Faster Payments';\n        case 'US_DOMESTIC_WIRE':\n            return 'US Domestic Wire';\n        case 'INTERNAL_TRANSFER':\n        case 'INTERNAL_TRANSFER_BUSINESS':\n        case 'INTRABANK_TRANSFER':\n            return 'A2A Transfer';\n        case 'INTERNATIONAL_TRANSFER':\n            return 'US Foreign Wire';\n        case 'P2P_TRANSFER':\n            return 'P2P Transfer';\n    }\n    return 'US Domestic Wire';\n}\nfunction getPaymentTypeTitle(paymentType) {\n    switch (normalizePaymentType(paymentType)) {\n        case 'SEPA_CREDIT_TRANSFER':\n        case 'SEPA_CT':\n        case 'SEPA':\n            return $localize `:@@initiate-payment.payment-title.payment-type-sepa:SEPA`;\n        case 'ACH_DEBIT':\n        case 'ACH_CREDIT':\n        case 'US_ACH_CREDIT':\n        case 'CUSTOM_ACH_CREDIT':\n            return $localize `:@@initiate-payment.payment-title.payment-type-ach:ACH`;\n        case 'US_DOMESTIC_WIRE':\n            return $localize `:@@initiate-payment.payment-title.payment-type-wire:Wire`;\n        case 'INTERNAL_TRANSFER':\n        case 'INTERNAL_TRANSFER_BUSINESS':\n        case 'INTRABANK_TRANSFER':\n            return $localize `:@@initiate-payment.payment-title.payment-type-internal:Internal`;\n        case 'INTERNATIONAL_TRANSFER':\n            return $localize `:@@initiate-payment.payment-title.payment-type-international-wire:International Wire`;\n        case 'P2P_TRANSFER':\n            return $localize `:@@initiate-payment.payment-title.payment-type-p2p:P2P`;\n    }\n    return $localize `:@@initiate-payment.payment-title.payment-type-default:`;\n}\nfunction defaultHeaderSetup({ paymentType, paymentMode, state, isDebit, }) {\n    const payment = isDebit\n        ? $localize `:@@initiate-payment.payment-title.debit: Debit`\n        : '';\n    let title = `${getPaymentTypeTitle(paymentType)}${payment}`;\n    if (paymentMode === null || paymentMode === void 0 ? void 0 : paymentMode.includes('EDIT')) {\n        title = $localize `:@@initiate-payment.payment-title.edit-mode:Edit ${title}`;\n    }\n    else {\n        title = $localize `:@@initiate-payment.payment-title.new-mode:New ${title}`;\n    }\n    if (paymentMode === null || paymentMode === void 0 ? void 0 : paymentMode.includes('TEMPLATE')) {\n        title = $localize `:@@initiate-payment.payment-title.template:${title} Template`;\n    }\n    else if (!isDebit) {\n        title = $localize `:@@initiate-payment.payment-title.payment:${title} Payment`;\n    }\n    if (state === InitiatePaymentHeaderStates.REVIEW) {\n        title = $localize `:@@initiate-payment.payment-title.review-state:${title} - Review`;\n    }\n    else if (state === InitiatePaymentHeaderStates.SUBMITTED) {\n        title = $localize `:@@initiate-payment.payment-title.submitted-state:${title} - Submitted`;\n    }\n    return title;\n}\n\nconst InitiatePaymentDefaultOptions = {\n    pageSize: 50,\n    isModalView: true,\n    pollInterval: 1000,\n    defaultCountry: 'US',\n    enableApprovals: true,\n    defaultScheme: 'BBAN',\n    isTemplateMode: false,\n    isDebitPayment: false,\n    isErrorTitleDisplayed: true,\n    enableNewPaymentButton: false,\n    checkClosedPaymentsAccess: false,\n    enableSavePaymentAsTemplate: true,\n    isOneOffToRecurrentAllowed: false,\n    isRecurrentToOneOffAllowed: false,\n    enablePaymentTemplateSelector: true,\n    accessContextScope: AccessContextScope.SA,\n    successEventName: 'bb.success.create.payment',\n    header: defaultHeaderSetup,\n};\nconst INITIATE_PAYMENT_CONFIG = new InjectionToken('INITIATE_PAYMENT_CONFIG');\n\nclass InitiatePaymentConfigService {\n    constructor(stateService, componentsFactory, paymentOrderHttpService, createPaymentSetup, initiatePaymentConfig) {\n        this.stateService = stateService;\n        this.componentsFactory = componentsFactory;\n        this.paymentOrderHttpService = paymentOrderHttpService;\n        this.createPaymentSetup = createPaymentSetup;\n        this.initiatePaymentConfig = initiatePaymentConfig;\n    }\n    /**\n     * @param {TriggerInitiatePaymentPayload} [data] - Initiate payment payload\n     */\n    setup(data) {\n        var _a;\n        if (data) {\n            ((_a = data.options) === null || _a === void 0 ? void 0 : _a.paymentMode) !== PaymentMode.CREATE_PAYMENT\n                ? this.applyData(data)\n                : this.applyConfigWithData(data);\n        }\n        else {\n            this.applyConfig();\n        }\n    }\n    applyConfig() {\n        const { paymentTypes, hooks, options, businessFunctions, baseFields, fetchPaymentOptionsListener, customFields, } = this.initiatePaymentConfig;\n        this.createPaymentSetup.setHooks(hooks);\n        this.createPaymentSetup.setConfigs(paymentTypes);\n        this.createPaymentSetup.setOptions(Object.assign(Object.assign({}, InitiatePaymentDefaultOptions), (options || {})));\n        this.createPaymentSetup.setBaseFields(baseFields);\n        this.createPaymentSetup.setFetchPaymentOptionsListener(fetchPaymentOptionsListener);\n        this.paymentOrderHttpService.businessFunction = businessFunctions.join(',');\n        this.componentsFactory.registerCustomFields(customFields);\n        this.componentsFactory.registerCustomFieldsForPaymentConfigs(paymentTypes);\n    }\n    applyData(data) {\n        var _a;\n        const template = data.template;\n        const paymentType = template\n            ? template.details.paymentType\n            : (_a = data.payment) === null || _a === void 0 ? void 0 : _a.paymentType;\n        this.paymentOrderHttpService.businessFunction = getBusinessFunction(paymentType);\n        if (template) {\n            this.stateService.setPaymentTemplate(data.template);\n        }\n        else {\n            this.stateService.setEditPayment(data.payment);\n        }\n        this.createPaymentSetup.setConfigs([\n            Object.assign({}, getPaymentConfig(paymentType)),\n        ]);\n        this.createPaymentSetup.setOptions(Object.assign(Object.assign({}, InitiatePaymentDefaultOptions), (data.options || {})));\n    }\n    applyConfigWithData(data) {\n        const template = data.template;\n        if (template) {\n            this.stateService.setPaymentTemplate(data.template);\n        }\n        else {\n            this.stateService.setEditPayment(data.payment);\n        }\n        this.applyConfig();\n    }\n}\n/** @nocollapse */ InitiatePaymentConfigService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InitiatePaymentConfigService, deps: [{ token: i1$1.StateService }, { token: i2.ComponentsFactoryService }, { token: i1$1.PaymentOrderHttpService }, { token: i3.CreatePaymentConfigSetupService }, { token: INITIATE_PAYMENT_CONFIG }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ InitiatePaymentConfigService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InitiatePaymentConfigService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InitiatePaymentConfigService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.StateService }, { type: i2.ComponentsFactoryService }, { type: i1$1.PaymentOrderHttpService }, { type: i3.CreatePaymentConfigSetupService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [INITIATE_PAYMENT_CONFIG]\n                }] }]; } });\n\nclass InitiatePaymentJourneyComponent {\n    constructor(configService, communicator) {\n        this.configService = configService;\n        this.communicator = communicator;\n        if (communicator) {\n            communicator.init({\n                setupData(data) {\n                    configService.setup(data);\n                },\n            });\n        }\n        else {\n            configService.setup();\n        }\n    }\n    ngOnDestroy() {\n        this.communicator.reset();\n    }\n}\n/** @nocollapse */ InitiatePaymentJourneyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InitiatePaymentJourneyComponent, deps: [{ token: InitiatePaymentConfigService }, { token: INITIATE_PAYMENT_JOURNEY_COMMUNICATOR, optional: true }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ InitiatePaymentJourneyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: InitiatePaymentJourneyComponent, selector: \"bb-initiate-payment-journey\", providers: [\n        StateService,\n        InitiatePaymentConfigService,\n        CreatePaymentConfigSetupService,\n        { provide: NavigationService, useClass: InitiatePaymentNavigationService },\n        {\n            provide: RoutableModalService,\n            useClass: InitiatePaymentRoutableModalService,\n        },\n    ], ngImport: i0, template: ` <router-outlet></router-outlet>`, isInline: true, directives: [{ type: i1.RouterOutlet, selector: \"router-outlet\", outputs: [\"activate\", \"deactivate\"], exportAs: [\"outlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InitiatePaymentJourneyComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-initiate-payment-journey',\n                    template: ` <router-outlet></router-outlet>`,\n                    providers: [\n                        StateService,\n                        InitiatePaymentConfigService,\n                        CreatePaymentConfigSetupService,\n                        { provide: NavigationService, useClass: InitiatePaymentNavigationService },\n                        {\n                            provide: RoutableModalService,\n                            useClass: InitiatePaymentRoutableModalService,\n                        },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: InitiatePaymentConfigService }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [INITIATE_PAYMENT_JOURNEY_COMMUNICATOR]\n                }] }]; } });\n\nconst InitiatePaymentDefaultRoute = {\n    path: '',\n    component: InitiatePaymentJourneyComponent,\n    children: [\n        { path: '', redirectTo: Routes.FORM, pathMatch: 'full' },\n        { path: Routes.FORM, component: CreatePaymentFormComponent },\n        { path: Routes.REVIEW, component: ReviewPaymentContainerComponent },\n    ],\n};\nclass InitiatePaymentJourneyModule {\n    static forRoot(data = {\n        route: InitiatePaymentDefaultRoute,\n    }) {\n        return {\n            ngModule: InitiatePaymentJourneyModule,\n            providers: [provideRoutes([data.route])],\n        };\n    }\n}\n/** @nocollapse */ InitiatePaymentJourneyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InitiatePaymentJourneyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ InitiatePaymentJourneyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InitiatePaymentJourneyModule, declarations: [InitiatePaymentJourneyComponent], imports: [CommonModule,\n        RouterModule,\n        ReviewPaymentModule,\n        CreatePaymentFormModule,\n        PayordFormBuilderAngModule, i1$2.BackbaseCoreModule] });\n/** @nocollapse */ InitiatePaymentJourneyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InitiatePaymentJourneyModule, providers: [\n        CreatePaymentService,\n        PaymentOptionsService,\n        PaymentOrderHttpService,\n        PayordPaymentErrorsConfigProvider,\n    ], imports: [[\n            CommonModule,\n            RouterModule,\n            ReviewPaymentModule,\n            CreatePaymentFormModule,\n            PayordFormBuilderAngModule,\n            BackbaseCoreModule.withConfig({\n                classMap: {\n                    InitiatePaymentJourneyComponent,\n                },\n            }),\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InitiatePaymentJourneyModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [InitiatePaymentJourneyComponent],\n                    imports: [\n                        CommonModule,\n                        RouterModule,\n                        ReviewPaymentModule,\n                        CreatePaymentFormModule,\n                        PayordFormBuilderAngModule,\n                        BackbaseCoreModule.withConfig({\n                            classMap: {\n                                InitiatePaymentJourneyComponent,\n                            },\n                        }),\n                    ],\n                    providers: [\n                        CreatePaymentService,\n                        PaymentOptionsService,\n                        PaymentOrderHttpService,\n                        PayordPaymentErrorsConfigProvider,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { INITIATE_PAYMENT_CONFIG, INITIATE_PAYMENT_JOURNEY_COMMUNICATOR, InitiatePaymentConfigService, InitiatePaymentDefaultOptions, InitiatePaymentDefaultRoute, InitiatePaymentJourneyComponent, InitiatePaymentJourneyModule, InitiatePaymentNavigationService };\n"]},"metadata":{},"sourceType":"module"}