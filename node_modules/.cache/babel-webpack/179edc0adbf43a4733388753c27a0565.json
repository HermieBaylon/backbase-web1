{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, Input, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@backbase/ui-ang/loading-indicator';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport * as i2 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\n/**\n * @name ActionStatusComponent\n *\n * @description\n * Component that displays a loading indicator or icon to indicate an action response.\n */\n\nfunction ActionStatusComponent_bb_loading_indicator_ui_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-loading-indicator-ui\", 3);\n  }\n}\n\nfunction ActionStatusComponent_bb_icon_ui_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-icon-ui\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"name\", ctx_r1.state)(\"color\", ctx_r1.getColor());\n  }\n}\n\nclass ActionStatusComponent {\n  isLoading() {\n    return this.state === 'loading';\n  }\n\n  getColor() {\n    switch (this.state) {\n      case 'message':\n        return 'info';\n\n      case 'error':\n        return 'danger';\n\n      default:\n        return this.state;\n    }\n  }\n\n}\n\nActionStatusComponent.ɵfac = function ActionStatusComponent_Factory(t) {\n  return new (t || ActionStatusComponent)();\n};\n\nActionStatusComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ActionStatusComponent,\n  selectors: [[\"bb-action-status-ui\"]],\n  inputs: {\n    state: \"state\"\n  },\n  decls: 3,\n  vars: 2,\n  consts: [[1, \"bb-action-status\"], [\"loaderSize\", \"sm\", 4, \"ngIf\"], [\"size\", \"md\", 3, \"name\", \"color\", 4, \"ngIf\"], [\"loaderSize\", \"sm\"], [\"size\", \"md\", 3, \"name\", \"color\"]],\n  template: function ActionStatusComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ActionStatusComponent_bb_loading_indicator_ui_1_Template, 1, 0, \"bb-loading-indicator-ui\", 1);\n      i0.ɵɵtemplate(2, ActionStatusComponent_bb_icon_ui_2_Template, 1, 2, \"bb-icon-ui\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading() && ctx.state);\n    }\n  },\n  directives: [i3.NgIf, i1.LoadingIndicatorComponent, i2.IconComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionStatusComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-action-status-ui',\n      templateUrl: './action-status.component.html'\n    }]\n  }], null, {\n    state: [{\n      type: Input\n    }]\n  });\n})();\n\nclass ActionStatusModule {}\n\nActionStatusModule.ɵfac = function ActionStatusModule_Factory(t) {\n  return new (t || ActionStatusModule)();\n};\n\nActionStatusModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ActionStatusModule\n});\nActionStatusModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, LoadingIndicatorModule, IconModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionStatusModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, LoadingIndicatorModule, IconModule],\n      declarations: [ActionStatusComponent],\n      exports: [ActionStatusComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ActionStatusComponent, ActionStatusModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-action-status.js"],"names":["i0","Component","Input","NgModule","i3","CommonModule","i1","LoadingIndicatorModule","i2","IconModule","ActionStatusComponent","isLoading","state","getColor","ɵfac","ɵcmp","NgIf","LoadingIndicatorComponent","IconComponent","type","args","selector","templateUrl","ActionStatusModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,QAA3B,QAA2C,eAA3C;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,KAAKC,EAAZ,MAAoB,oCAApB;AACA,SAASC,sBAAT,QAAuC,oCAAvC;AACA,OAAO,KAAKC,EAAZ,MAAoB,uBAApB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAgByGT,IAAAA,EAC+I,2C;;;;;;AAD/IA,IAAAA,EAC8O,8B;;;;mBAD9OA,E;AAAAA,IAAAA,EACsS,6D;;;;AAhB/Y,MAAMU,qBAAN,CAA4B;AACxBC,EAAAA,SAAS,GAAG;AACR,WAAO,KAAKC,KAAL,KAAe,SAAtB;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,YAAQ,KAAKD,KAAb;AACI,WAAK,SAAL;AACI,eAAO,MAAP;;AACJ,WAAK,OAAL;AACI,eAAO,QAAP;;AACJ;AACI,eAAO,KAAKA,KAAZ;AANR;AAQH;;AAbuB;;AAe5BF,qBAAqB,CAACI,IAAtB;AAAA,mBAAmHJ,qBAAnH;AAAA;;AACAA,qBAAqB,CAACK,IAAtB,kBADyGf,EACzG;AAAA,QAAuGU,qBAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADyGV,MAAAA,EAC2G,4BAApN;AADyGA,MAAAA,EAC+I,4GAAxP;AADyGA,MAAAA,EAC8O,kFAAvV;AADyGA,MAAAA,EAC6V,eAAtc;AAAA;;AAAA;AADyGA,MAAAA,EACyK,aAAlR;AADyGA,MAAAA,EACyK,oCAAlR;AADyGA,MAAAA,EAC2P,aAApW;AADyGA,MAAAA,EAC2P,kDAApW;AAAA;AAAA;AAAA,eAAiyBI,EAAE,CAACY,IAApyB,EAAseV,EAAE,CAACW,yBAAze,EAA2nBT,EAAE,CAACU,aAA9nB;AAAA;AAAA;;AACA;AAAA,qDAFyGlB,EAEzG,mBAA4FU,qBAA5F,EAA+H,CAAC;AACpHS,IAAAA,IAAI,EAAElB,SAD8G;AAEpHmB,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,QAAQ,EAAE,qBADX;AAECC,MAAAA,WAAW,EAAE;AAFd,KAAD;AAF8G,GAAD,CAA/H,QAM4B;AAAEV,IAAAA,KAAK,EAAE,CAAC;AACtBO,MAAAA,IAAI,EAAEjB;AADgB,KAAD;AAAT,GAN5B;AAAA;;AAUA,MAAMqB,kBAAN,CAAyB;;AAEzBA,kBAAkB,CAACT,IAAnB;AAAA,mBAAgHS,kBAAhH;AAAA;;AACAA,kBAAkB,CAACC,IAAnB,kBAfyGxB,EAezG;AAAA,QAAiHuB;AAAjH;AACAA,kBAAkB,CAACE,IAAnB,kBAhByGzB,EAgBzG;AAAA,YAA+I,CAACK,YAAD,EAAeE,sBAAf,EAAuCE,UAAvC,CAA/I;AAAA;;AACA;AAAA,qDAjByGT,EAiBzG,mBAA4FuB,kBAA5F,EAA4H,CAAC;AACjHJ,IAAAA,IAAI,EAAEhB,QAD2G;AAEjHiB,IAAAA,IAAI,EAAE,CAAC;AACCM,MAAAA,OAAO,EAAE,CAACrB,YAAD,EAAeE,sBAAf,EAAuCE,UAAvC,CADV;AAECkB,MAAAA,YAAY,EAAE,CAACjB,qBAAD,CAFf;AAGCkB,MAAAA,OAAO,EAAE,CAAClB,qBAAD;AAHV,KAAD;AAF2G,GAAD,CAA5H;AAAA;AASA;AACA;AACA;;;AAEA,SAASA,qBAAT,EAAgCa,kBAAhC","sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, Input, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@backbase/ui-ang/loading-indicator';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport * as i2 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\n\n/**\n * @name ActionStatusComponent\n *\n * @description\n * Component that displays a loading indicator or icon to indicate an action response.\n */\nclass ActionStatusComponent {\n    isLoading() {\n        return this.state === 'loading';\n    }\n    getColor() {\n        switch (this.state) {\n            case 'message':\n                return 'info';\n            case 'error':\n                return 'danger';\n            default:\n                return this.state;\n        }\n    }\n}\nActionStatusComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ActionStatusComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nActionStatusComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ActionStatusComponent, selector: \"bb-action-status-ui\", inputs: { state: \"state\" }, ngImport: i0, template: \"<div class=\\\"bb-action-status\\\">\\n  <bb-loading-indicator-ui *ngIf=\\\"isLoading()\\\" loaderSize=\\\"sm\\\"></bb-loading-indicator-ui>\\n  <bb-icon-ui *ngIf=\\\"!isLoading() && state\\\" size=\\\"md\\\" [name]=\\\"state\\\" [color]=\\\"getColor()\\\"></bb-icon-ui>\\n</div>\\n\", components: [{ type: i1.LoadingIndicatorComponent, selector: \"bb-loading-indicator-ui\", inputs: [\"text\", \"loaderSize\", \"showDelay\", \"hasBackground\", \"inline\"] }, { type: i2.IconComponent, selector: \"bb-icon-ui\", inputs: [\"name\", \"inverse\", \"size\", \"color\", \"animate\", \"aria-label\", \"cropped\", \"backgroundType\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ActionStatusComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-action-status-ui',\n                    templateUrl: './action-status.component.html',\n                }]\n        }], propDecorators: { state: [{\n                type: Input\n            }] } });\n\nclass ActionStatusModule {\n}\nActionStatusModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ActionStatusModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nActionStatusModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ActionStatusModule, declarations: [ActionStatusComponent], imports: [CommonModule, LoadingIndicatorModule, IconModule], exports: [ActionStatusComponent] });\nActionStatusModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ActionStatusModule, imports: [[CommonModule, LoadingIndicatorModule, IconModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ActionStatusModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, LoadingIndicatorModule, IconModule],\n                    declarations: [ActionStatusComponent],\n                    exports: [ActionStatusComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ActionStatusComponent, ActionStatusModule };\n"]},"metadata":{},"sourceType":"module"}