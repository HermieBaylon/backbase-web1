{"ast":null,"code":"import '@angular/localize/init';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, NgModule, HostListener, InjectionToken, Injectable, Inject, Optional, Pipe } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@backbase/ui-ang/notification';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\nimport * as i1 from '@backbase/data-ang/arrangements';\nimport { MaskableAttribute } from '@backbase/data-ang/arrangements';\nimport { ReplaySubject, BehaviorSubject, of, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, filter, tap, switchMap, catchError, scan, map, take, publishReplay, refCount, pluck, shareReplay } from 'rxjs/operators';\nimport { PUBSUB } from '@backbase/foundation-ang/web-sdk';\nimport * as i1$1 from '@backbase/data-ang/financial-institution-manager';\nimport * as i1$2 from '@backbase/data-ang/accesscontrol';\nimport * as i1$3 from '@backbase/foundation-ang/core';\nimport { By } from '@angular/platform-browser';\nimport * as i1$4 from '@backbase/ui-ang/account-number-pipe';\nimport { AccountNumberPipeModule } from '@backbase/ui-ang/account-number-pipe';\nimport { PaymentCardNumberModule } from '@backbase/ui-ang/payment-card-number-pipe';\nimport * as i1$5 from '@backbase/ui-ang/date-pipe';\nimport { BbDatePipeModule, BbDatePipe } from '@backbase/ui-ang/date-pipe';\n\nclass ProductSummaryAccountDetailsBaseComponent {\n  constructor() {\n    /**\n     * List of maskable attributes. Holds states of the attributes.\n     */\n    this.maskableAttributes = [];\n    /**\n     * Event when a user clicked on the `unmask-attribute-button` button\n     */\n\n    this.unmaskAttribute = new EventEmitter();\n    /**\n     * Event when a user clicked on the `mask-attribute-button` button\n     */\n\n    this.maskAttribute = new EventEmitter();\n    /**\n     * All unmaskable attributes\n     */\n\n    this.maskableAttribute = MaskableAttribute;\n    /**\n     * Details info sections availability\n     */\n\n    this.infoAvailability = {};\n  }\n  /**\n   * Product type data that this component displays.\n   */\n\n\n  set product(data) {\n    this._product = data;\n    this.infoAvailability = this.getProductInfoAvailability(data);\n  }\n\n  get product() {\n    return this._product;\n  }\n  /**\n   * Returns `true` if the given `attributeName` is masked\n   *\n   * @param attributeName\n   */\n\n\n  isMasked(attributeName) {\n    const maskableAttribute = this.maskableAttributes.find(attribute => attribute.attributeName === attributeName);\n    return (maskableAttribute === null || maskableAttribute === void 0 ? void 0 : maskableAttribute.masked) === undefined ? true : maskableAttribute === null || maskableAttribute === void 0 ? void 0 : maskableAttribute.masked;\n  }\n  /**\n   * Event handler for the `click` event of the unmask buttons\n   * Emits `MaskableAttribute` to the `unmaskAttribute` Output\n   *\n   * @param attributeName\n   */\n\n\n  onUnmaskAttribute(attributeName) {\n    if (Object.values(MaskableAttribute).includes(attributeName)) {\n      this.unmaskAttribute.emit(attributeName);\n    }\n  }\n  /**\n   * Event handler for the `click` event of the mask buttons\n   * Emits `MaskableAttribute` to the `maskAttribute` Output\n   *\n   * @param attributeName\n   */\n\n\n  onMaskAttribute(attributeName) {\n    if (Object.values(MaskableAttribute).includes(attributeName)) {\n      this.maskAttribute.emit(attributeName);\n    }\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars,no-unused-vars\n\n\n  getProductInfoAvailability(product) {\n    return {};\n  }\n\n}\n\nProductSummaryAccountDetailsBaseComponent.ɵfac = function ProductSummaryAccountDetailsBaseComponent_Factory(t) {\n  return new (t || ProductSummaryAccountDetailsBaseComponent)();\n};\n\nProductSummaryAccountDetailsBaseComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ProductSummaryAccountDetailsBaseComponent,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    product: \"product\",\n    maskableAttributes: \"maskableAttributes\"\n  },\n  outputs: {\n    unmaskAttribute: \"unmaskAttribute\",\n    maskAttribute: \"maskAttribute\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function ProductSummaryAccountDetailsBaseComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductSummaryAccountDetailsBaseComponent, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, {\n    product: [{\n      type: Input\n    }],\n    maskableAttributes: [{\n      type: Input\n    }],\n    unmaskAttribute: [{\n      type: Output\n    }],\n    maskAttribute: [{\n      type: Output\n    }]\n  });\n})();\n\nclass ProductSummaryAccountDetailsBaseModule {}\n\nProductSummaryAccountDetailsBaseModule.ɵfac = function ProductSummaryAccountDetailsBaseModule_Factory(t) {\n  return new (t || ProductSummaryAccountDetailsBaseModule)();\n};\n\nProductSummaryAccountDetailsBaseModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ProductSummaryAccountDetailsBaseModule\n});\nProductSummaryAccountDetailsBaseModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductSummaryAccountDetailsBaseModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ProductSummaryAccountDetailsBaseComponent],\n      exports: [ProductSummaryAccountDetailsBaseComponent]\n    }]\n  }], null, null);\n})();\n\nconst SIZE_TABLET_DEFAULT = 768;\nconst SIZE_MOBILE_DEFAULT = 375;\n\nclass ResponsiveContainerComponent {\n  constructor(element, changeDetector) {\n    /**\n     * Specifies screen size: `mobile` | `tablet` | 'screen'\n     *\n     * @default 'screen'\n     */\n    this._responsiveView = 'screen';\n    this._sizeTablet = SIZE_TABLET_DEFAULT;\n    this._sizeMobile = SIZE_MOBILE_DEFAULT;\n    this._element = element;\n    this._changeDetector = changeDetector;\n  }\n\n  get responsiveView() {\n    return this._customResponsiveView || this._responsiveView;\n  }\n\n  set responsiveView(value) {\n    this._customResponsiveView = value;\n  }\n\n  get sizeMobile() {\n    return this._sizeMobile;\n  }\n\n  set sizeMobile(value) {\n    this._sizeMobile = value;\n  }\n\n  get sizeTablet() {\n    return this._sizeTablet;\n  }\n\n  set sizeTablet(value) {\n    this._sizeTablet = value;\n  }\n  /**\n   * @internal\n   */\n\n\n  ngAfterViewInit() {\n    if (!this._customResponsiveView) {\n      this.checkElementSize();\n\n      this._changeDetector.detectChanges();\n    }\n  }\n  /**\n   * Event handler on `windows:resize`\n   * Checks size of the container\n   */\n\n\n  onResize() {\n    if (!this._customResponsiveView) {\n      this.checkElementSize();\n    }\n  }\n  /**\n   * Checks width of the parent container and updates `isSmallScreen$` and `isExtraSmallScreen$`\n   */\n\n\n  checkElementSize() {\n    var _a, _b;\n\n    const containerWidth = ((_b = (_a = this._element.nativeElement) === null || _a === void 0 ? void 0 : _a.firstElementChild) === null || _b === void 0 ? void 0 : _b.getBoundingClientRect().width) || 0;\n    this._responsiveView = this.getResponsiveView(containerWidth);\n  }\n\n  getResponsiveView(containerWidth) {\n    let responseView = 'screen';\n\n    if (containerWidth <= this.sizeMobile) {\n      responseView = 'mobile';\n    } else if (containerWidth <= this.sizeTablet) {\n      responseView = 'tablet';\n    }\n\n    return responseView;\n  }\n\n}\n\nResponsiveContainerComponent.ɵfac = function ResponsiveContainerComponent_Factory(t) {\n  return new (t || ResponsiveContainerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nResponsiveContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ResponsiveContainerComponent,\n  selectors: [[\"ng-component\"]],\n  hostBindings: function ResponsiveContainerComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"resize\", function ResponsiveContainerComponent_resize_HostBindingHandler() {\n        return ctx.onResize();\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  inputs: {\n    responsiveView: \"responsiveView\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function ResponsiveContainerComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResponsiveContainerComponent, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    responsiveView: [{\n      type: Input\n    }],\n    onResize: [{\n      type: HostListener,\n      args: ['window:resize', []]\n    }]\n  });\n})();\n\nclass ResponsiveContainerModule {}\n\nResponsiveContainerModule.ɵfac = function ResponsiveContainerModule_Factory(t) {\n  return new (t || ResponsiveContainerModule)();\n};\n\nResponsiveContainerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ResponsiveContainerModule\n});\nResponsiveContainerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResponsiveContainerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ResponsiveContainerComponent],\n      exports: [ResponsiveContainerComponent]\n    }]\n  }], null, null);\n})();\n\nconst WINDOW = new InjectionToken('ProductSummaryCommon :: WindowToken');\n\nconst windowFactory = () => window;\n\nconst WindowProvider = {\n  provide: WINDOW,\n  useFactory: windowFactory\n};\n/**\n * Injection token for widget properties configuration\n */\n\nconst PRODUCT_SUMMARY_WIDGET_PROPERTIES = new InjectionToken('ProductSummaryCommon :: WidgetProperties');\n/**\n * Injection token for account alias displaying level configuration\n */\n\nconst ACCOUNT_ALIAS_DISPLAYING_LEVEL = new InjectionToken('ProductSummaryCommon :: AccountAliasDisplayingLevel');\nconst sharedModules = [NotificationModule, ProductSummaryAccountDetailsBaseModule, ResponsiveContainerModule];\n\nclass ProductSummaryCommon {}\n\nProductSummaryCommon.ɵfac = function ProductSummaryCommon_Factory(t) {\n  return new (t || ProductSummaryCommon)();\n};\n\nProductSummaryCommon.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ProductSummaryCommon\n});\nProductSummaryCommon.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [WindowProvider],\n  imports: [[CommonModule, ...sharedModules], NotificationModule, ProductSummaryAccountDetailsBaseModule, ResponsiveContainerModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductSummaryCommon, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ...sharedModules],\n      exports: [...sharedModules],\n      providers: [WindowProvider]\n    }]\n  }], null, null);\n})();\n\nclass DownloadResourcesService {\n  constructor(localWindow) {\n    this.localWindow = localWindow;\n  }\n\n  downloadFile(name, type, data) {\n    const fileData = new Blob([data], {\n      type\n    });\n\n    if (this.isFileSaverAvailable()) {\n      this.downloadViaFileSaver(name, fileData);\n    } else {\n      this.downloadViaLink(name, fileData);\n    }\n  }\n\n  isFileSaverAvailable() {\n    const {\n      navigator\n    } = this.localWindow; // @ts-ignore\n\n    return navigator !== undefined && navigator.msSaveOrOpenBlob !== undefined;\n  }\n\n  downloadViaFileSaver(name, data) {\n    const {\n      navigator\n    } = this.localWindow; // @ts-ignore\n\n    navigator.msSaveOrOpenBlob(data, name);\n  }\n\n  downloadViaLink(name, data) {\n    const {\n      document,\n      URL\n    } = this.localWindow;\n    const downloadLink = document.createElement('a');\n    downloadLink.href = URL.createObjectURL(data);\n    downloadLink.download = name;\n    downloadLink.click();\n    downloadLink.remove();\n  }\n\n}\n\nDownloadResourcesService.ɵfac = function DownloadResourcesService_Factory(t) {\n  return new (t || DownloadResourcesService)(i0.ɵɵinject(WINDOW));\n};\n\nDownloadResourcesService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DownloadResourcesService,\n  factory: DownloadResourcesService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DownloadResourcesService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [WINDOW]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Utility service for DOM manipulations\n */\n\n\nclass DomAttributesService {\n  constructor() {\n    this.idPrefix = 'bb_product_summary_element_';\n    this.nextId = 0;\n  }\n  /**\n   * Generates unique Id for product-summary DOM elements\n   */\n\n\n  generateId() {\n    return `${this.idPrefix}${this.nextId++}`;\n  }\n\n}\n\nDomAttributesService.ɵfac = function DomAttributesService_Factory(t) {\n  return new (t || DomAttributesService)();\n};\n\nDomAttributesService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomAttributesService,\n  factory: DomAttributesService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomAttributesService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nvar HttpResponseType;\n\n(function (HttpResponseType) {\n  HttpResponseType[\"BODY\"] = \"body\";\n  HttpResponseType[\"RESPONSE\"] = \"response\";\n  HttpResponseType[\"EVENT\"] = \"event\";\n})(HttpResponseType || (HttpResponseType = {}));\n\nvar BalanceHistoryExportFormat;\n\n(function (BalanceHistoryExportFormat) {\n  BalanceHistoryExportFormat[\"JSON\"] = \"application/json\";\n  BalanceHistoryExportFormat[\"CSV\"] = \"text/csv\";\n})(BalanceHistoryExportFormat || (BalanceHistoryExportFormat = {}));\n\nvar PaginationType;\n\n(function (PaginationType) {\n  PaginationType[\"LOAD_MORE\"] = \"load-more\";\n  PaginationType[\"PAGINATION\"] = \"pagination\";\n})(PaginationType || (PaginationType = {}));\n\nvar ProductKindNames;\n\n(function (ProductKindNames) {\n  ProductKindNames[\"CURRENT_ACCOUNT\"] = \"Current Account\";\n  ProductKindNames[\"SAVINGS_ACCOUNT\"] = \"Savings Account\";\n  ProductKindNames[\"TERM_DEPOSIT\"] = \"Term Deposit\";\n  ProductKindNames[\"LOAN\"] = \"Loan\";\n  ProductKindNames[\"CREDIT_CARD\"] = \"Credit Card\";\n  ProductKindNames[\"DEBIT_CARD\"] = \"Debit Card\";\n  ProductKindNames[\"INVESTMENT_ACCOUNT\"] = \"Investment Account\";\n})(ProductKindNames || (ProductKindNames = {}));\n/**\n * Default values of \"kindUri\" per product kind\n */\n\n\nvar ProductKindUri;\n\n(function (ProductKindUri) {\n  ProductKindUri[\"CREDIT_CARD\"] = \"credit-card\";\n  ProductKindUri[\"CURRENT_ACCOUNT\"] = \"current-account\";\n  ProductKindUri[\"DEBIT_CARD\"] = \"debit-card\";\n  ProductKindUri[\"INVESTMENT_ACCOUNT\"] = \"investment-account\";\n  ProductKindUri[\"LOAN\"] = \"loan\";\n  ProductKindUri[\"POCKET\"] = \"pocket\";\n  ProductKindUri[\"POCKET_PARENT\"] = \"pocket-parent\";\n  ProductKindUri[\"SAVINGS_ACCOUNT\"] = \"savings-account\";\n  ProductKindUri[\"TERM_DEPOSIT\"] = \"term-deposit\";\n})(ProductKindUri || (ProductKindUri = {}));\n/**\n * Available navigation types from account\n */\n\n\nvar AccountNavigationType;\n\n(function (AccountNavigationType) {\n  AccountNavigationType[\"PAYMENTS\"] = \"PAYMENTS\";\n  AccountNavigationType[\"TRANSACTIONS\"] = \"TRANSACTIONS\";\n  AccountNavigationType[\"BALANCE_HISTORY\"] = \"BALANCE_HISTORY\";\n  AccountNavigationType[\"STATEMENTS\"] = \"STATEMENTS\";\n})(AccountNavigationType || (AccountNavigationType = {}));\n/**\n * Privileges applicable to product summary business functions\n */\n\n\nvar ProductSummaryPrivilege;\n\n(function (ProductSummaryPrivilege) {\n  ProductSummaryPrivilege[\"VIEW\"] = \"view\";\n  ProductSummaryPrivilege[\"EDIT\"] = \"edit\";\n})(ProductSummaryPrivilege || (ProductSummaryPrivilege = {}));\n/**\n * Displaying level of account aliases\n */\n\n\nvar AccountAliasDisplayingLevel;\n\n(function (AccountAliasDisplayingLevel) {\n  AccountAliasDisplayingLevel[\"ACCOUNT\"] = \"ACCOUNT\";\n  AccountAliasDisplayingLevel[\"USER\"] = \"USER\";\n})(AccountAliasDisplayingLevel || (AccountAliasDisplayingLevel = {}));\n/**\n * Duplicates validation settings from the `user-preferences` schema of fe-presentation-spec\n * TODO: remove these constants, when min/max length settings will be part of the generated client API\n */\n\n\nconst UserPreferencesValidationSettings = {\n  ALIAS_MAX_LENGTH: 50\n}; //TODO: check if this can be like id\n\nconst defaultArrangementName = '';\nconst WidgetProperty = {\n  BUSINESS_FUNCTION: 'businessFunction',\n  RESOURCE_NAME: 'resourceName',\n  PRIVILEGE_TYPE: 'privilege',\n  SIZE: 'size',\n  ACTIVE_VIEW: 'activeView'\n};\nconst SMALL_SCREEN_SIZE = 640;\nconst EXTRA_SMALL_SCREEN_SIZE = 576;\nconst DEFAULT_DEBOUNCE_TIME = 300;\nvar DefaultProductKindNameList;\n\n(function (DefaultProductKindNameList) {\n  DefaultProductKindNameList[\"CURRENT_ACCOUNT\"] = \"current-account\";\n  DefaultProductKindNameList[\"SAVINGS_ACCOUNT\"] = \"savings-account\";\n  DefaultProductKindNameList[\"TERM_DEPOSIT\"] = \"term-deposit\";\n  DefaultProductKindNameList[\"LOAN\"] = \"loan\";\n  DefaultProductKindNameList[\"CREDIT_CARD\"] = \"credit-card\";\n  DefaultProductKindNameList[\"DEBIT_CARD\"] = \"debit-card\";\n  DefaultProductKindNameList[\"INVESTMENT_ACCOUNT\"] = \"investment-account\";\n})(DefaultProductKindNameList || (DefaultProductKindNameList = {}));\n\nconst DefaultProductKindName = DefaultProductKindNameList.CURRENT_ACCOUNT;\nconst CardProductKindName = ['credit card', 'debit card'];\n/**\n * Default value for allowed navigation types per account,\n * by default all navigation types are allowed\n */\n\nconst DefaultAllowedNavigationTypes = [AccountNavigationType.BALANCE_HISTORY, AccountNavigationType.PAYMENTS, AccountNavigationType.TRANSACTIONS, AccountNavigationType.STATEMENTS];\n\nconst getColorTrend = (index, series) => {\n  const serie = series[index];\n\n  if (serie.value === 0) {\n    if (index > 0) {\n      return getColorTrend(index - 1, series);\n    }\n\n    if (series.length > 1) {\n      return series[1].value < 0 ? -1 : 1;\n    }\n  }\n\n  if (serie.value < 0) {\n    return -1;\n  }\n\n  return 1;\n};\n\nconst getCurrentSeriesName = trend => trend === -1 ? 'negative' : 'positive';\n\nconst getFirstSeries = (datum, trend) => [{\n  name: getCurrentSeriesName(trend),\n  series: [datum]\n}];\n\nconst createNewSeries = (result, lastResult, series, trend) => {\n  const lastName = lastResult.series[lastResult.series.length - 1].name;\n  const lastValue = lastResult.series[lastResult.series.length - 1].value;\n  const valuesSum = Math.abs(lastValue) + Math.abs(series.value);\n  const step = series.name.getTime() - lastName.getTime();\n  const valuesRatio = Math.abs(lastValue) / valuesSum;\n  const prevValue = lastResult.series[lastResult.series.length - 1].value;\n  const crossingPoint = {\n    name: new Date(lastName.getTime() + step * valuesRatio),\n    value: 0\n  };\n  const crossPointSection = prevValue ? [crossingPoint] : [];\n  return [...result.slice(0, -1), {\n    name: lastResult.name,\n    series: [...lastResult.series, ...crossPointSection]\n  }, {\n    name: getCurrentSeriesName(trend),\n    series: [crossingPoint, series]\n  }];\n};\n\nconst concatExistingSeries = (result, lastResult, series) => {\n  const name = lastResult.name;\n  return [...result.slice(0, -1), {\n    name,\n    series: [...lastResult.series, series]\n  }];\n};\n\nconst splitDataByTrend = series => series.reduce((result, seriesData, i) => {\n  const currentTrend = getColorTrend(i, series);\n\n  if (i === 0) {\n    return getFirstSeries(seriesData, currentTrend);\n  }\n\n  const previousTrend = getColorTrend(i - 1, series);\n  const lastResult = result[result.length - 1];\n\n  if (previousTrend === currentTrend) {\n    return concatExistingSeries(result, lastResult, seriesData);\n  } else {\n    return createNewSeries(result, lastResult, seriesData, currentTrend);\n  }\n}, []);\n\nclass BalanceHistoryNotFound {\n  constructor(response) {\n    this.response = response;\n    this.kind = 'BalanceHistoryNotFound';\n    this.messages = ((response.error || {}).errors || []).map(e => e.message);\n  }\n\n}\n\nclass BalanceHistoryBadRequest {\n  constructor(response) {\n    this.response = response;\n    this.kind = 'BalanceHistoryBadRequest';\n    this.messages = ((response.error || {}).errors || []).map(e => e.message);\n  }\n\n}\n\nclass BalanceHistoryAccessDenied {\n  constructor(response) {\n    this.response = response;\n    this.kind = 'BalanceHistoryAccessDenied';\n    this.messages = ((response.error || {}).errors || []).map(e => e.message);\n  }\n\n}\n\nclass BalanceHistoryUnknownError {\n  constructor(response) {\n    this.response = response;\n    this.kind = 'BalanceHistoryUnknownError';\n    this.messages = [response.message];\n  }\n\n}\n\nclass BalanceHistoryConnectivityError {\n  constructor(response) {\n    this.response = response;\n    this.kind = 'BalanceHistoryConnectivityError';\n    this.messages = ((response.error || {}).errors || []).map(e => e.message);\n  }\n\n}\n\nconst parseBalanceHistoryError = error => {\n  if (error.error instanceof ErrorEvent) {\n    return new BalanceHistoryUnknownError(error);\n  } else {\n    switch (error.status) {\n      case 0:\n        return new BalanceHistoryConnectivityError(error);\n\n      case 401:\n        return new BalanceHistoryAccessDenied(error);\n\n      case 403:\n        return new BalanceHistoryAccessDenied(error);\n\n      case 400:\n        return new BalanceHistoryBadRequest(error);\n\n      case 404:\n        return new BalanceHistoryNotFound(error);\n\n      default:\n        return new BalanceHistoryUnknownError(error);\n    }\n  }\n};\n\nclass BalanceHistoryCommonService {\n  constructor(accountDataService) {\n    this.accountDataService = accountDataService;\n    this.reportDefaultFileName = {\n      [BalanceHistoryExportFormat.CSV]: 'balance-history.csv',\n      [BalanceHistoryExportFormat.JSON]: 'balance-history.json'\n    };\n    this.requestObjectSeries = new ReplaySubject(1);\n    this.requestObjectPaginated = new ReplaySubject(1);\n    this.errorSeries = new BehaviorSubject(undefined);\n    this.errorPaginated = new BehaviorSubject(undefined);\n    this.loadingPaginated = new BehaviorSubject(true);\n    this.loadingSeries = new BehaviorSubject(true);\n    this.balanceHistorySeries = this.requestObjectSeries.pipe(distinctUntilChanged(), filter(param => !!param.arrangementIds), tap(() => this.loadingSeries.next(true)), tap(() => this.errorSeries.next(undefined)), switchMap(res => this.getBalanceHistorySeries(res).pipe(catchError(errorSeries => {\n      this.errorSeries.next(errorSeries);\n      return of(undefined);\n    }))), tap(() => this.loadingSeries.next(false)));\n    this.balanceHistoryPaginated = this.requestObjectPaginated.pipe(distinctUntilChanged(), filter(param => !!param.arrangementId), tap(() => this.loadingPaginated.next(true)), tap(() => this.errorPaginated.next(undefined)), switchMap(res => this.getBalanceHistoryPaginated(res).pipe(catchError(errorPaginated => {\n      this.errorPaginated.next(errorPaginated);\n      return of({\n        count: 0,\n        items: [],\n        params: res\n      });\n    }))), scan((acc, curr) => ({\n      count: curr.count,\n      items: this.responsesMerge(acc, curr),\n      params: curr.params\n    })), tap(() => this.loadingPaginated.next(false)));\n  }\n\n  getBalanceHistorySeries(request) {\n    const parameters = this.getBalanceHistoryRequestParameters(request);\n    return this.accountDataService.getBalanceHistory(parameters).pipe(catchError(error => {\n      throw parseBalanceHistoryError(error);\n    }));\n  }\n\n  getBalanceHistoryPaginated(request) {\n    const paginationType = request.params ? request.params.paginationType || '' : '';\n    const from = request.params ? request.params.from || 0 : 0;\n    const parameters = this.getBalanceHistoryForArrangementRequestParameters(request);\n    return this.accountDataService.getBalanceHistoryForArrangement(parameters, HttpResponseType.RESPONSE).pipe(map(res => this.mapResponseWithCount(res, {\n      from,\n      paginationType\n    })), catchError(error => {\n      throw parseBalanceHistoryError(error);\n    }));\n  }\n\n  loadBalanceHistorySeries(requestObjectSeries) {\n    requestObjectSeries.subscribe(this.requestObjectSeries);\n  }\n\n  loadBalanceHistoryPaginated(requestObjectPaginated) {\n    requestObjectPaginated.subscribe(this.requestObjectPaginated);\n  }\n  /**\n   * Returns URL for fetching balance history data\n   *\n   * @param format\n   * @param exportParameters\n   */\n\n\n  exportBalanceHistory(format, exportParameters) {\n    const parameters = this.getBalanceHistoryRequestParameters(exportParameters, format);\n    return this.accountDataService.getBalanceHistoryUrl(parameters);\n  }\n  /**\n   * Fetches balance history data in one of the available formats\n   *\n   * @param format\n   * @param exportParameters\n   */\n\n\n  getBalanceHistory(format, exportParameters) {\n    const parameters = this.getBalanceHistoryRequestParameters(exportParameters, format);\n    const options = {\n      httpHeaderAccept: format\n    };\n    return this.accountDataService.getBalanceHistory(parameters, HttpResponseType.RESPONSE, false, options).pipe(map(({\n      headers,\n      body\n    }) => {\n      const defaultFileName = this.reportDefaultFileName[format];\n      const fileNameInHeaders = this.getFileNameFromHeaders(headers);\n      return {\n        name: fileNameInHeaders || defaultFileName,\n        content: body\n      };\n    }));\n  }\n\n  responsesMerge(acc, current) {\n    if (acc && acc.items && current && current.items && acc.params.paginationType === PaginationType.LOAD_MORE && current.params.from !== 0) {\n      return [...acc.items, ...current.items];\n    }\n\n    return current.items;\n  }\n\n  processBalanceHistory(balanceHistory) {\n    const [balanceHistoryItem] = balanceHistory.items;\n    const defaultSeries = {\n      name: defaultArrangementName,\n      series: balanceHistoryItem.balanceHistory.map(({\n        dateTo,\n        value,\n        valuePtc\n      }) => ({\n        name: new Date(dateTo),\n        value: value ? value.balance : valuePtc\n      }))\n    };\n    return defaultSeries ? splitDataByTrend(defaultSeries.series) : [];\n  }\n\n  mapResponseWithCount(response, {\n    from,\n    paginationType\n  }) {\n    // eslint-disable-next-line no-null/no-null\n    if (response.body === null) {\n      throw new Error();\n    }\n\n    const headerCount = response.headers ? response.headers.get('x-total-count') : undefined;\n    const counter = headerCount ? parseInt(headerCount, 10) : response.body.length || 0;\n    return {\n      count: counter,\n      items: response.body,\n      params: {\n        from,\n        paginationType\n      }\n    };\n  }\n\n  getBalanceHistoryRequestParameters({\n    arrangementIds,\n    params\n  }, requestFormat) {\n    const format = requestFormat !== null && requestFormat !== void 0 ? requestFormat : params.format;\n    return Object.assign({\n      arrangementIds\n    }, this.toRequestParameters(Object.assign(Object.assign({}, params), {\n      format\n    })));\n  }\n\n  getBalanceHistoryForArrangementRequestParameters({\n    arrangementId,\n    params\n  }) {\n    const format = undefined;\n    return Object.assign({\n      arrangementId\n    }, this.toRequestParameters(Object.assign(Object.assign({}, params), {\n      format\n    })));\n  }\n\n  toRequestParameters(params) {\n    const requestParameters = Object.assign(Object.assign({}, params), {\n      timePeriod: params.timePeriod\n    });\n    delete requestParameters.paginationType;\n\n    if (!requestParameters.format) {\n      delete requestParameters.format;\n    }\n\n    if (requestParameters.timePeriod) {\n      delete requestParameters.dateFrom;\n      delete requestParameters.dateTo;\n    } else {\n      delete requestParameters.timePeriod;\n    }\n\n    return requestParameters;\n  }\n\n  getFileNameFromHeaders(headers) {\n    const contentDisposition = headers && headers.get('content-disposition') || '';\n    const contentDispositionWithoutQuotes = contentDisposition.replace(/['\"]*/g, '');\n    return (contentDispositionWithoutQuotes.match(/filename[^;=\\n]*=([^;\\n]*)/) || [])[1];\n  }\n\n}\n\nBalanceHistoryCommonService.ɵfac = function BalanceHistoryCommonService_Factory(t) {\n  return new (t || BalanceHistoryCommonService)(i0.ɵɵinject(i1.AccountsHttpService));\n};\n\nBalanceHistoryCommonService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BalanceHistoryCommonService,\n  factory: BalanceHistoryCommonService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BalanceHistoryCommonService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.AccountsHttpService\n    }];\n  }, null);\n})();\n\nclass AccountsOverviewNotFound {\n  constructor(response) {\n    this.response = response;\n    this.kind = 'AccountsOverviewNotFound';\n    this.messages = ((response.error || {}).errors || []).map(e => e.message);\n  }\n\n}\n\nclass AccountsOverviewBadRequest {\n  constructor(response) {\n    this.response = response;\n    this.kind = 'AccountsOverviewBadRequest';\n    this.messages = ((response.error || {}).errors || []).map(e => e.message);\n  }\n\n}\n\nclass AccountsOverviewAccessDenied {\n  constructor(response) {\n    this.response = response;\n    this.kind = 'AccountsOverviewAccessDenied';\n    this.messages = ((response.error || {}).errors || []).map(e => e.message);\n  }\n\n}\n\nclass AccountsOverviewUnknownError {\n  constructor(response) {\n    this.response = response;\n    this.kind = 'AccountsOverviewUnknownError';\n    this.messages = [response.message];\n  }\n\n}\n\nclass AccountsOverviewConnectivityError {\n  constructor(response) {\n    this.response = response;\n    this.kind = 'AccountsOverviewConnectivityError';\n    this.messages = ((response.error || {}).errors || []).map(e => e.message);\n  }\n\n}\n\nconst parseError = error => {\n  if (error.error instanceof ErrorEvent) {\n    return new AccountsOverviewUnknownError(error);\n  } else {\n    switch (error.status) {\n      case 0:\n        return new AccountsOverviewConnectivityError(error);\n\n      case 401:\n        return new AccountsOverviewAccessDenied(error);\n\n      case 403:\n        return new AccountsOverviewAccessDenied(error);\n\n      case 400:\n        return new AccountsOverviewBadRequest(error);\n\n      case 404:\n        return new AccountsOverviewNotFound(error);\n\n      default:\n        return new AccountsOverviewUnknownError(error);\n    }\n  }\n};\n\nconst bbEventToggleAccountFavoriteUpdate = 'bb.event.toggle-account-favorite.update';\n\nclass ProductSummaryAccountsService {\n  constructor(productSummaryDataService, accountDataService, balancesHttpService, notificationService, pubSub) {\n    this.productSummaryDataService = productSummaryDataService;\n    this.accountDataService = accountDataService;\n    this.balancesHttpService = balancesHttpService;\n    this.notificationService = notificationService;\n    this.pubSub = pubSub;\n    this.requestObject = new ReplaySubject(1);\n    this.favoriteRequestComplete = new BehaviorSubject(true);\n    this.updateError = new BehaviorSubject(undefined);\n    this.error = new BehaviorSubject(undefined);\n    this.loading = new BehaviorSubject(true);\n    this.aggregatedBalancesErrorSubject = new BehaviorSubject(undefined);\n    this.aggregatedBalancesError = this.aggregatedBalancesErrorSubject.asObservable();\n    this.loadingAggregatedBalancesSubject = new BehaviorSubject(false);\n    this.loadingAggregatedBalances = this.loadingAggregatedBalancesSubject.asObservable();\n    this.refreshAggregatedBalancesSubject = new BehaviorSubject(false);\n    this.accountsList = combineLatest([this.requestObject, this.favoriteRequestComplete]).pipe(distinctUntilChanged(), tap(() => this.loading.next(true)), switchMap(([requestObject]) => this.getAccounts(requestObject)), scan((acc, curr) => ({\n      count: curr.count,\n      items: this.mergeResponses(acc, curr),\n      params: curr.params\n    })), tap(() => this.error.next(undefined)), catchError(error => {\n      this.error.next(error);\n      return of(undefined);\n    }), tap(() => this.loading.next(false)));\n    this.aggregatedBalances = combineLatest([this.refreshAggregatedBalancesSubject]).pipe(tap(() => this.loadingAggregatedBalancesSubject.next(true)), switchMap(() => this.getAggregatedBalances()), tap(() => this.loadingAggregatedBalancesSubject.next(false)));\n    this.pubSub.subscribe(bbEventToggleAccountFavoriteUpdate, this.retriggerGetAccounts.bind(this));\n  }\n\n  getAccountById(arrangementId) {\n    return this.accountDataService.getArrangementById({\n      arrangementId\n    });\n  }\n  /**\n   * Fetches an unmasked attribute for the given `UnmaskedAttributeRequestParams`\n   *\n   * @param requestParameters\n   */\n\n\n  getUnmaskedAttribute(requestParameters) {\n    return this.accountDataService.unmaskedAttribute(requestParameters, 'body', false, {\n      httpHeaderAccept: 'text/plain'\n    });\n  }\n\n  toggleAccountFavorite(body, errorTemplateRef, successTemplateRef) {\n    return this.putAccountFavorite(body).pipe(take(1), tap(() => {\n      this.showNotification(successTemplateRef, 'success');\n      this.updateError.next(undefined);\n      this.pubSub.publish(bbEventToggleAccountFavoriteUpdate, undefined);\n    }), catchError(error => {\n      this.updateError.next(error);\n      this.showNotification(errorTemplateRef, 'error');\n      return of(undefined);\n    }));\n  }\n\n  putAccountFavorite(accountUserPreferences) {\n    return this.accountDataService.updateUserPreferences({\n      accountUserPreferences\n    }).pipe(catchError(error => {\n      throw parseError(error);\n    }));\n  }\n\n  getAccounts(requestObject) {\n    const paginationType = requestObject.paginationType || '';\n    const from = requestObject.from || 0;\n    const params = Object.assign({}, requestObject);\n    delete params.paginationType;\n    return this.productSummaryDataService.getArrangementsByBusinessFunction(params, HttpResponseType.RESPONSE).pipe(map(res => this.mapResponseWithCount(res, {\n      from,\n      paginationType\n    })), catchError(error => {\n      throw parseError(error);\n    }));\n  }\n\n  mapResponseWithCount(response, {\n    from,\n    paginationType\n  }) {\n    // eslint-disable-next-line no-null/no-null\n    if (response.body === null) {\n      throw new Error();\n    }\n\n    const headerCount = response.headers ? response.headers.get('x-total-count') : undefined;\n    const counter = headerCount ? parseInt(headerCount, 10) : response.body.length || 0;\n    return {\n      count: counter,\n      items: response.body || [],\n      params: {\n        from,\n        paginationType\n      }\n    };\n  }\n\n  mergeResponses(acc, current) {\n    if (acc && acc.items && current && current.items && acc.params.paginationType === PaginationType.LOAD_MORE && current.params.from !== 0) {\n      return [...acc.items, ...current.items];\n    }\n\n    return current.items;\n  }\n\n  showNotification(templateRef, modifier) {\n    this.notificationService.showNotification({\n      header: templateRef,\n      modifier,\n      message: ''\n    });\n  }\n\n  getAccountsFrom(requestObject) {\n    requestObject.subscribe(this.requestObject);\n  }\n\n  refreshAggregatedBalances() {\n    this.refreshAggregatedBalancesSubject.next(true);\n  }\n\n  getAggregatedBalances() {\n    const requestParameters = {};\n    return this.balancesHttpService.getAggregations(requestParameters).pipe(map(response => this.mapResponseToAggregatedBalances(response)), tap(() => this.aggregatedBalancesErrorSubject.next(undefined)), catchError(error => this.parseAggregatedBalanceError(error)));\n  }\n\n  mapResponseToAggregatedBalances(aggregations) {\n    const allBalances = (aggregations || [{}])[0];\n    return allBalances && allBalances.aggregatedBalances;\n  }\n\n  parseAggregatedBalanceError(error) {\n    this.aggregatedBalancesErrorSubject.next(error);\n    return of(undefined);\n  }\n\n  retriggerGetAccounts() {\n    this.favoriteRequestComplete.next(true);\n  }\n\n}\n\nProductSummaryAccountsService.ɵfac = function ProductSummaryAccountsService_Factory(t) {\n  return new (t || ProductSummaryAccountsService)(i0.ɵɵinject(i1.ProductSummaryHttpService), i0.ɵɵinject(i1.ArrangementsHttpService), i0.ɵɵinject(i1.BalancesHttpService), i0.ɵɵinject(i2.NotificationService), i0.ɵɵinject(PUBSUB));\n};\n\nProductSummaryAccountsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ProductSummaryAccountsService,\n  factory: ProductSummaryAccountsService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductSummaryAccountsService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.ProductSummaryHttpService\n    }, {\n      type: i1.ArrangementsHttpService\n    }, {\n      type: i1.BalancesHttpService\n    }, {\n      type: i2.NotificationService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PUBSUB]\n      }]\n    }];\n  }, null);\n})();\n\nconst toKebabCase = (accountType = '') => accountType ? accountType.trim().toLowerCase().split(' ').join('-') : '';\n\nconst isCardNumber = account => Boolean(account.productKindName && CardProductKindName.includes(account.productKindName.toLowerCase()));\n\nconst modelItemToBoolean = value => {\n  if (typeof value === 'boolean') {\n    return value;\n  }\n\n  return value === 'true';\n};\n\nconst isFavorite = account => {\n  const accountPreferencesFavoriteValue = account.userPreferences && account.userPreferences.favorite;\n  const accountFavoriteValue = 'favorite' in account ? account.favorite : undefined;\n  return accountPreferencesFavoriteValue !== null && accountPreferencesFavoriteValue !== void 0 ? accountPreferencesFavoriteValue : accountFavoriteValue;\n};\n\nconst isProductVisible = product => {\n  if (product.userPreferences && product.userPreferences.visible !== undefined) {\n    return product.userPreferences.visible;\n  } else if (product.visible !== undefined) {\n    return product.visible;\n  }\n\n  return true;\n};\n\nconst isFunction = param => typeof param === 'function';\n\nconst findBy = (collection, key, value) => collection.find(item => item && item[key] === value);\n\nconst findByName = (collection, name) => findBy(collection, 'name', name);\n\nconst getAccountAlias = account => {\n  if (account.userPreferences) {\n    return account.userPreferences.alias ? account.userPreferences.alias : account.bankAlias || account.name;\n  } else {\n    return account.bankAlias || account.name || ''; // todo: replace with `??` typesScript is upgraded to 3.7.0\n  }\n};\n\nconst getProductKindIconName = productKindName => {\n  let iconName = toKebabCase(productKindName);\n  const isDefaultProductKindName = Object.values(DefaultProductKindNameList).some(name => iconName === name);\n\n  if (!isDefaultProductKindName) {\n    iconName = 'account';\n  }\n\n  return `${iconName}s`;\n};\n/**\n * Gets a valid product number type for a given product\n *\n * @param product\n *\n * for CreditCard/DebitCard:\n * - returns `number` if exists\n * - else `IBAN` if exists\n * - otherwise `BBAN`\n * for other products:\n * - returns `IBAN` if exists\n * - else `BBAN` if exists\n * - otherwise `number`\n */\n\n\nconst getProductNumberType = product => {\n  const isCardFormat = isCardNumber(product);\n\n  if (isCardFormat && 'number' in product) {\n    return 'cardNumber';\n  } else if ('IBAN' in product) {\n    return 'iban';\n  } else if ('BBAN' in product || isCardFormat) {\n    return 'bban';\n  } else {\n    return 'cardNumber';\n  }\n};\n\nconst processErrorMessages = messages => messages ? messages.join(' ') : undefined;\n/**\n * Sets the passed unmasked attribute to the item\n *\n * @param item\n * @param attributeName\n * @param attributeValue\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n\nconst setAttribute = (item, attributeName, attributeValue) => Object.assign(Object.assign({}, item ? item : {}), attributeName ? {\n  [attributeName]: attributeValue\n} : {});\n/**\n * Verifies if values is defined (not null and not undefined)\n *\n * @param value\n */\n// eslint-disable-next-line no-null/no-null\n\n\nconst isDefined = value => value !== null && value !== undefined;\n/**\n * Returns configuration property based on the priority\n */\n\n\nconst filterInputParameters = (input, prop) => combineLatest([input, prop]).pipe(map(([inputVal, propVal]) => inputVal !== undefined ? inputVal : propVal));\n/**\n * Caches the request (shares between subscribers)\n *\n * @param request\n */\n\n\nconst cacheRequest = request => source => source.pipe(switchMap(request), publishReplay(1), refCount());\n/**\n * Returns route parameter\n * takes parameter from component route if parameter exists, otherwise looks for parameter in parent routes\n *\n * @param route\n * @param param\n */\n\n\nconst getRouteParameter = (route, param) => {\n  const routeParam = route.paramMap.pipe(pluck('params', param));\n  const allParams = route.parent ? [routeParam, getRouteParameter(route.parent, param)] : [routeParam];\n  return combineLatest(allParams).pipe(map(params => params[0] || params[1]), map(value => value !== null && value !== void 0 ? value : ''));\n};\n/**\n * Returns true if product has external info (external logo, alias, etc.)\n *\n * @param product\n */\n\n\nconst hasExternalInfo = product => product.financialInstitutionId !== undefined;\n/**\n * A service for getting external info for products\n */\n\n\nclass ProductsExternalInfoService {\n  constructor(financialInstitutionsHttpService) {\n    this.financialInstitutionsHttpService = financialInstitutionsHttpService;\n  }\n\n  getProductsWithExternalInfo(products) {\n    const productsList = Array.isArray(products) ? products : [products];\n    const financialInstitutionIds = this.getAssignedFinancialInstitutionIds(productsList);\n    return financialInstitutionIds.length ? this.getFinancialInstitutions(financialInstitutionIds).pipe(map(institutions => Array.isArray(products) ? productsList.map(product => this.addExternalInfoToProduct(product, institutions)) : this.addExternalInfoToProduct(products, institutions))) : of(products);\n  }\n\n  getAssignedFinancialInstitutionIds(items) {\n    const itemsWithExternalInfo = items.filter(hasExternalInfo);\n    const financialInstitutionIds = itemsWithExternalInfo.map(item => item.financialInstitutionId);\n    return financialInstitutionIds.filter((item, index) => financialInstitutionIds.indexOf(item, index + 1) === -1);\n  }\n\n  addExternalInfoToProduct(product, institutions) {\n    return Object.assign(Object.assign({}, product), this.getExternalInfo(product, institutions));\n  }\n\n  getExternalInfo(product, institutions) {\n    const isExternalInfoAvailable = hasExternalInfo(product);\n    return isExternalInfoAvailable ? {\n      financialInstitution: institutions.find(institution => institution.id === product.financialInstitutionId)\n    } : {};\n  }\n\n  getFinancialInstitutions(ids) {\n    return this.financialInstitutionsHttpService.getFinancialInstitutions({\n      ids\n    }).pipe(pluck('financialInstitutions'));\n  }\n\n}\n\nProductsExternalInfoService.ɵfac = function ProductsExternalInfoService_Factory(t) {\n  return new (t || ProductsExternalInfoService)(i0.ɵɵinject(i1$1.FinancialInstitutionManagerClientHttpService));\n};\n\nProductsExternalInfoService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ProductsExternalInfoService,\n  factory: ProductsExternalInfoService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductsExternalInfoService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.FinancialInstitutionManagerClientHttpService\n    }];\n  }, null);\n})();\n\nclass ProductSummaryUserPermissionsService {\n  constructor(usersDataService) {\n    this.usersDataService = usersDataService;\n    this.productSummaryPermissionParameters = {\n      resourceName: 'Product Summary',\n      functionName: 'Product Summary'\n    };\n    this.manageArrangementsPermissionParameters = {\n      resourceName: 'Product Summary',\n      functionName: 'Manage Arrangement Alias'\n    };\n    this.productSummaryPrivileges = this.usersDataService.getUserPrivileges(this.productSummaryPermissionParameters).pipe(map(privileges => privileges.map(({\n      privilege\n    }) => privilege)), shareReplay());\n    this.managerArrangementsPrivileges = this.usersDataService.getUserPrivileges(this.manageArrangementsPermissionParameters).pipe(map(privileges => privileges.map(({\n      privilege\n    }) => privilege)), shareReplay());\n    this.hasFullViewPermission = this.productSummaryPrivileges.pipe(map(privileges => privileges.includes(ProductSummaryPrivilege.VIEW)), shareReplay());\n    this.hasFullEditPermission = this.productSummaryPrivileges.pipe(map(privileges => privileges.includes(ProductSummaryPrivilege.EDIT)), shareReplay());\n    this.hasArrangementAliasEditPermission = this.managerArrangementsPrivileges.pipe(map(privileges => privileges.includes(ProductSummaryPrivilege.EDIT)), shareReplay());\n    this.allowedAccountNavigationTypes = this.hasFullViewPermission.pipe(map(hasFullViewPermission => hasFullViewPermission ? DefaultAllowedNavigationTypes : DefaultAllowedNavigationTypes.filter(type => type !== AccountNavigationType.BALANCE_HISTORY)), shareReplay());\n  }\n\n}\n\nProductSummaryUserPermissionsService.ɵfac = function ProductSummaryUserPermissionsService_Factory(t) {\n  return new (t || ProductSummaryUserPermissionsService)(i0.ɵɵinject(i1$2.UsersHttpService));\n};\n\nProductSummaryUserPermissionsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ProductSummaryUserPermissionsService,\n  factory: ProductSummaryUserPermissionsService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductSummaryUserPermissionsService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$2.UsersHttpService\n    }];\n  }, null);\n})();\n/** @dynamic */\n\n\nclass ProductSummaryWidgetPropertiesService {\n  /**\n   * @internal\n   * @param defaultConfiguration\n   * @param itemModel\n   */\n  constructor(defaultConfiguration, itemModel) {\n    this.defaultConfiguration = defaultConfiguration;\n    this.itemModel = itemModel;\n    /**\n     * Widget properties configuration\n     */\n\n    this.configuration = new BehaviorSubject({});\n    /**\n     * Gets a property value for each value in `propertyNames` input,\n     * joins them into `WidgetProperties` structure\n     */\n\n    const propertyNames = Object.keys(defaultConfiguration);\n    this.properties = combineLatest(propertyNames.map(propertyName => this.getWidgetProperty(propertyName))).pipe(map(properties => propertyNames.reduce((widgetProperties, propertyName, index) => Object.assign(Object.assign({}, widgetProperties), {\n      [propertyName]: properties[index]\n    }), {})));\n  }\n  /**\n   * Sets widget properties\n   *\n   * @param config\n   */\n\n\n  setConfiguration(config) {\n    this.configuration.next(config);\n  }\n  /**\n   * Returns observable with a widget property\n   *\n   * @param propertyName\n   */\n\n\n  getProperty(propertyName) {\n    return this.properties.pipe(map(properties => properties[propertyName]));\n  }\n  /**\n   * Returns a widget configuration property,\n   * takes the value in the following order:\n   * - configuration value if exists (widget input)\n   * - item-model value if exists (CXP configuration)\n   * - default value (constant value)\n   */\n\n\n  getWidgetProperty(propertyName) {\n    const defaultValue = this.defaultConfiguration[propertyName];\n    const configurationValue$ = this.configuration.pipe(map(configuration => configuration[propertyName]));\n    const modelValue$ = this.itemModel ? this.itemModel.property(propertyName, defaultValue) : of(defaultValue);\n    return combineLatest([configurationValue$, modelValue$]).pipe(map(([configurationValue, modelValue]) => configurationValue !== undefined ? configurationValue : modelValue));\n  }\n\n}\n\nProductSummaryWidgetPropertiesService.ɵfac = function ProductSummaryWidgetPropertiesService_Factory(t) {\n  return new (t || ProductSummaryWidgetPropertiesService)(i0.ɵɵinject(PRODUCT_SUMMARY_WIDGET_PROPERTIES), i0.ɵɵinject(i1$3.ItemModel, 8));\n};\n\nProductSummaryWidgetPropertiesService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ProductSummaryWidgetPropertiesService,\n  factory: ProductSummaryWidgetPropertiesService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductSummaryWidgetPropertiesService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PRODUCT_SUMMARY_WIDGET_PROPERTIES]\n      }]\n    }, {\n      type: i1$3.ItemModel,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst CurrencyToCountryMap = {\n  BDT: 'BD',\n  EUR: 'EU',\n  XOF: 'TG',\n  BGN: 'BG',\n  BAM: 'BA',\n  BBD: 'BB',\n  XPF: 'NC',\n  BMD: 'BM',\n  BND: 'BN',\n  BOB: 'BO',\n  BHD: 'BH',\n  BIF: 'BI',\n  BTN: 'BT',\n  JMD: 'JM',\n  NOK: 'NO',\n  BWP: 'BW',\n  WST: 'WS',\n  USD: 'US',\n  BRL: 'BR',\n  BSD: 'BS',\n  GBP: 'IM',\n  BYR: 'BY',\n  BZD: 'BZ',\n  RUB: 'RU',\n  RWF: 'RW',\n  RSD: 'RS',\n  TMT: 'TM',\n  TJS: 'TJ',\n  RON: 'RO',\n  NZD: 'CK',\n  GTQ: 'GT',\n  XAF: 'TD',\n  JPY: 'JP',\n  GYD: 'GY',\n  GEL: 'GE',\n  XCD: 'AI',\n  GNF: 'GN',\n  GMD: 'GM',\n  DKK: 'DK',\n  GIP: 'GI',\n  GHS: 'GH',\n  OMR: 'OM',\n  TND: 'TN',\n  JOD: 'JO',\n  HRK: 'HR',\n  HTG: 'HT',\n  HUF: 'HU',\n  HKD: 'HK',\n  HNL: 'HN',\n  AUD: 'AU',\n  VEF: 'VE',\n  ILS: 'IL',\n  PYG: 'PY',\n  IQD: 'IQ',\n  PAB: 'PA',\n  PGK: 'PG',\n  PEN: 'PE',\n  PKR: 'PK',\n  PHP: 'PH',\n  PLN: 'PL',\n  ZMK: 'ZM',\n  MAD: 'MA',\n  EGP: 'EG',\n  ZAR: 'ZA',\n  VND: 'VN',\n  SBD: 'SB',\n  ETB: 'ET',\n  SOS: 'SO',\n  ZWL: 'ZW',\n  SAR: 'SA',\n  ERN: 'ER',\n  MDL: 'MD',\n  MGA: 'MG',\n  UZS: 'UZ',\n  MMK: 'MM',\n  MOP: 'MO',\n  MNT: 'MN',\n  MKD: 'MK',\n  MUR: 'MU',\n  MWK: 'MW',\n  MVR: 'MV',\n  MRO: 'MR',\n  UGX: 'UG',\n  TZS: 'TZ',\n  MYR: 'MY',\n  MXN: 'MX',\n  SHP: 'SH',\n  FJD: 'FJ',\n  FKP: 'FK',\n  NIO: 'NI',\n  NAD: 'NA',\n  VUV: 'VU',\n  NGN: 'NG',\n  NPR: 'NP',\n  CHF: 'LI',\n  COP: 'CO',\n  CNY: 'CN',\n  CLP: 'CL',\n  CAD: 'CA',\n  CDF: 'CD',\n  CZK: 'CZ',\n  CRC: 'CR',\n  ANG: 'SX',\n  CVE: 'CV',\n  CUP: 'CU',\n  SZL: 'SZ',\n  SYP: 'SY',\n  KGS: 'KG',\n  KES: 'KE',\n  SSP: 'SS',\n  SRD: 'SR',\n  KHR: 'KH',\n  KMF: 'KM',\n  STD: 'ST',\n  KRW: 'KR',\n  KPW: 'KP',\n  KWD: 'KW',\n  SLL: 'SL',\n  SCR: 'SC',\n  KZT: 'KZ',\n  KYD: 'KY',\n  SGD: 'SG',\n  SEK: 'SE',\n  SDG: 'SD',\n  DOP: 'DO',\n  DJF: 'DJ',\n  YER: 'YE',\n  DZD: 'DZ',\n  UYU: 'UY',\n  LBP: 'LB',\n  LAK: 'LA',\n  TWD: 'TW',\n  TTD: 'TT',\n  TRY: 'TR',\n  LKR: 'LK',\n  TOP: 'TO',\n  LTL: 'LT',\n  LRD: 'LR',\n  LSL: 'LS',\n  THB: 'TH',\n  LYD: 'LY',\n  AED: 'AE',\n  AFN: 'AF',\n  ISK: 'IS',\n  IRR: 'IR',\n  AMD: 'AM',\n  ALL: 'AL',\n  AOA: 'AO',\n  ARS: 'AR',\n  AWG: 'AW',\n  INR: 'IN',\n  AZN: 'AZ',\n  IDR: 'ID',\n  UAH: 'UA',\n  QAR: 'QA',\n  MZN: 'MZ'\n};\nconst balanceHistorySeriesMock = {\n  items: [{\n    arrangementId: '3cdb2224-8926-4b4d-a99f-1c9dfbbb4699',\n    balanceHistory: [{\n      dateFrom: '2017-05-10T00:00:00.000Z',\n      dateTo: '2017-06-01T00:00:00.000Z',\n      value: {\n        currency: 'EUR',\n        balance: '12'\n      },\n      valuePtc: '12'\n    }, {\n      dateFrom: '2017-05-11T00:00:00Z',\n      dateTo: '2017-06-01T00:00:00Z',\n      value: {\n        currency: 'EUR',\n        balance: '22'\n      },\n      valuePtc: '22'\n    }, {\n      dateFrom: '2017-05-23T00:00:00+0000',\n      dateTo: '2017-06-01T00:00:00+0000',\n      value: {\n        currency: 'EUR',\n        balance: '32'\n      },\n      valuePtc: '32'\n    }, {\n      dateFrom: '2017-06-01T00:00:00.000Z',\n      dateTo: '2017-06-01T00:00:00.000Z',\n      value: {\n        currency: 'EUR',\n        balance: '54'\n      },\n      valuePtc: '54'\n    }, {\n      dateFrom: '2017-06-02T00:00:00.000Z',\n      dateTo: '2017-06-01T00:00:00.000Z',\n      value: {\n        currency: 'EUR',\n        balance: '34'\n      },\n      valuePtc: '34'\n    }, {\n      dateFrom: '2017-06-12T00:00:00.000Z',\n      dateTo: '2017-06-01T00:00:00.000Z',\n      value: {\n        currency: 'EUR',\n        balance: '4'\n      },\n      valuePtc: '4'\n    }, {\n      dateFrom: '2017-06-18T00:00:00.000Z',\n      dateTo: '2017-06-01T00:00:00.000Z',\n      value: {\n        currency: 'EUR',\n        balance: '-14'\n      },\n      valuePtc: '-14'\n    }]\n  }]\n};\nconst balanceHistoryPaginatedMock = [{\n  dateFrom: '2017-05-10T00:00:00.000Z',\n  dateTo: '2017-06-01T00:00:00.000Z',\n  value: {\n    currency: 'EUR',\n    balance: '12'\n  },\n  valuePtc: '12'\n}, {\n  dateFrom: '2017-05-11T00:00:00.000Z',\n  dateTo: '2017-06-01T00:00:00.000Z',\n  value: {\n    currency: 'EUR',\n    balance: '22'\n  },\n  valuePtc: '22'\n}, {\n  dateFrom: '2017-05-23T00:00:00.000Z',\n  dateTo: '2017-06-01T00:00:00.000Z',\n  value: {\n    currency: 'EUR',\n    balance: '32'\n  },\n  valuePtc: '32'\n}, {\n  dateFrom: '2017-06-01T00:00:00.000Z',\n  dateTo: '2017-06-01T00:00:00.000Z',\n  value: {\n    currency: 'EUR',\n    balance: '54'\n  },\n  valuePtc: '54'\n}, {\n  dateFrom: '2017-06-02T00:00:00.000Z',\n  dateTo: '2017-07-01T00:00:00.000Z',\n  value: {\n    currency: 'EUR',\n    balance: '34'\n  },\n  valuePtc: '34'\n}, {\n  dateFrom: '2017-06-12T00:00:00.000Z',\n  dateTo: '2017-07-01T00:00:00.000Z',\n  value: {\n    currency: 'EUR',\n    balance: '4'\n  },\n  valuePtc: '4'\n}, {\n  dateFrom: '2017-06-18T00:00:00.000Z',\n  dateTo: '2017-07-01T00:00:00.000Z',\n  value: {\n    currency: 'EUR',\n    balance: '-14'\n  },\n  valuePtc: '-14'\n}];\nconst balanceHistoryPaginatedMockWithCount = {\n  count: 3,\n  items: balanceHistoryPaginatedMock,\n  params: {\n    from: 1,\n    paginationType: 'load-more'\n  }\n};\nconst emptyBalanceHistoryPaginatedMockWithCount = {\n  count: 0,\n  items: [],\n  params: {\n    from: 0,\n    paginationType: 'pagination'\n  }\n};\nconst requestObjectMockSeries = {\n  arrangementIds: '1',\n  params: {\n    dateFrom: '2017-06-18',\n    dateTo: '2017-06-18',\n    timePeriod: '',\n    format: '',\n    paginationType: 'pagination',\n    from: 0\n  }\n};\nconst requestObjectMockPaginated = {\n  arrangementId: '1',\n  params: {\n    dateFrom: '2017-06-18',\n    dateTo: '2017-06-18',\n    timePeriod: '',\n    format: '',\n    paginationType: 'pagination',\n    from: 0\n  }\n};\nconst processedBalanceHistoryMock = [{\n  name: defaultArrangementName,\n  series: [{\n    name: new Date('2017-06-01T00:00:00.000Z'),\n    value: '12'\n  }, {\n    name: new Date('2017-06-01T00:00:00Z'),\n    value: '22'\n  }, {\n    name: new Date('2017-06-01T00:00:00+0000'),\n    value: '32'\n  }, {\n    name: new Date('2017-06-01T00:00:00.000Z'),\n    value: '54'\n  }, {\n    name: new Date('2017-06-01T00:00:00.000Z'),\n    value: '34'\n  }, {\n    name: new Date('2017-06-01T00:00:00.000Z'),\n    value: '4'\n  }, {\n    name: new Date('2017-06-01T00:00:00.000Z'),\n    value: 0\n  }]\n}, {\n  name: defaultArrangementName,\n  series: [{\n    name: new Date('2017-06-01T00:00:00.000Z'),\n    value: 0\n  }, {\n    name: new Date('2017-06-01T00:00:00.000Z'),\n    value: '-14'\n  }]\n}];\nconst mockRequestObject = {\n  businessFunction: '',\n  resourceName: '',\n  privilege: '',\n  paginationType: PaginationType.LOAD_MORE\n};\nconst mockAccountsResponse = [{\n  id: '1cdb2224-8926-4b4d-a99f-1c9dfbbb4699',\n  externalArrangementId: 'kjh4567-asd1-11e7-b114-b2f933d50000',\n  externalLegalEntityId: 'COOOOO1',\n  externalProductId: '1234567',\n  name: 'Mr and Mrs J. Smith',\n  productKindName: 'Current Account',\n  bankAlias: 'Secret account',\n  bookedBalance: 100.1,\n  availableBalance: 100.2,\n  creditLimit: 100.3,\n  IBAN: 'GB29NWBK60161331926819',\n  BBAN: 'BBAN',\n  currency: 'EUR',\n  externalTransferAllowed: true,\n  urgentTransferAllowed: false,\n  accruedInterest: 2.2,\n  principalAmount: 100.4,\n  currentInvestmentValue: 100.5,\n  legalEntityIds: ['257da57a-11e4-4553-9175-54baf755069b', 'cd83683b-13f2-43d8-882b-39c9ab27d499'],\n  productId: '36c8fc42-ec97-4f83-8a7c-d622625007f3',\n  productTypeName: 'Current Account',\n  BIC: 'BICExample1',\n  bankBranchCode: 'bankBranchCode1',\n  accountOpeningDate: '2016-01-28T16:41:41.090Z',\n  accountInterestRate: 100.2,\n  valueDateBalance: 100.1,\n  creditLimitUsage: 100.3,\n  creditLimitInterestRate: 100.4,\n  creditLimitExpiryDate: '2019-09-28T16:41:41.090Z',\n  debitCards: [{\n    number: '4578',\n    expiryDate: '2018-08-22T16:41:41.090Z'\n  }, {\n    number: '3241',\n    expiryDate: '2019-01-14T16:41:41.090Z'\n  }],\n  startDate: '2016-02-28T16:41:41.090Z',\n  termUnit: 'Y',\n  termNumber: 50,\n  maturityDate: '2017-02-28T16:41:41.090Z',\n  maturityAmount: 99.5,\n  autoRenewalIndicator: true,\n  interestPaymentFrequencyUnit: 'M',\n  interestPaymentFrequencyNumber: 15,\n  interestSettlementAccount: 'interestSettlementAccount1',\n  outstandingPrincipalAmount: 100.2,\n  monthlyInstalmentAmount: 100.1,\n  amountInArrear: 100.3,\n  minimumRequiredBalance: 80.4,\n  creditCardAccountNumber: '123456',\n  validThru: '2019-02-28T16:41:41.090Z',\n  applicableInterestRate: 101.2,\n  remainingCredit: 50,\n  outstandingPayment: 105.5,\n  minimumPayment: 51.1,\n  minimumPaymentDueDate: '2018-02-28T16:41:41.090Z',\n  totalInvestmentValue: 110.2,\n  accountHolderAddressLine1: 'accountHolderAddressLine11',\n  accountHolderAddressLine2: 'accountHolderAddressLine12',\n  creditAccount: true,\n  debitAccount: true,\n  visible: true,\n  lastUpdateDate: '2019-09-28T16:41:41.090Z'\n}, {\n  id: '2222222-8926-4b4d-a99f-1c9dfbbb4610',\n  externalArrangementId: 'kjh4567-asd1-11e7-b114-b2f933d50000',\n  externalLegalEntityId: 'COOOOO1',\n  externalProductId: '1234567',\n  name: 'Mr and Mrs J. Smith second one',\n  productKindName: 'Current Account',\n  bankAlias: 'Secret account Mr and Mrs J. Smith second one',\n  bookedBalance: 100.1,\n  availableBalance: 100.2,\n  creditLimit: 100.3,\n  IBAN: 'GB29NWBK60161331926819',\n  BBAN: 'BBAN',\n  currency: 'EUR',\n  externalTransferAllowed: true,\n  urgentTransferAllowed: false,\n  accruedInterest: 2.2,\n  principalAmount: 100.4,\n  currentInvestmentValue: 100.5,\n  legalEntityIds: ['257da57a-11e4-4553-9175-54baf755069b', 'cd83683b-13f2-43d8-882b-39c9ab27d499'],\n  productId: '36c8fc42-ec97-4f83-8a7c-d622625007f3',\n  productTypeName: 'Current Account',\n  BIC: 'BICExample2',\n  bankBranchCode: 'bankBranchCode1',\n  accountOpeningDate: '2016-01-28T16:41:41.090Z',\n  accountInterestRate: 100.2,\n  valueDateBalance: 100.1,\n  creditLimitUsage: 100.3,\n  creditLimitInterestRate: 100.4,\n  creditLimitExpiryDate: '2019-09-28T16:41:41.090Z',\n  debitCards: [{\n    number: '6378',\n    expiryDate: '2018-02-12T16:41:41.090Z'\n  }, {\n    number: '5111',\n    expiryDate: '2019-03-24T16:41:41.090Z'\n  }],\n  startDate: '2016-02-28T16:41:41.090Z',\n  termUnit: 'Y',\n  termNumber: 50,\n  maturityDate: '2017-02-28T16:41:41.090Z',\n  maturityAmount: 99.5,\n  autoRenewalIndicator: true,\n  interestPaymentFrequencyUnit: 'M',\n  interestPaymentFrequencyNumber: 15,\n  interestSettlementAccount: 'interestSettlementAccount1',\n  outstandingPrincipalAmount: 100.2,\n  monthlyInstalmentAmount: 100.1,\n  amountInArrear: 100.3,\n  minimumRequiredBalance: 80.4,\n  creditCardAccountNumber: '123456',\n  validThru: '2019-02-28T16:41:41.090Z',\n  applicableInterestRate: 101.2,\n  remainingCredit: 50,\n  outstandingPayment: 105.5,\n  minimumPayment: 51.1,\n  minimumPaymentDueDate: '2018-02-28T16:41:41.090Z',\n  totalInvestmentValue: 110.2,\n  accountHolderAddressLine1: 'accountHolderAddressLine11',\n  accountHolderAddressLine2: 'accountHolderAddressLine12',\n  creditAccount: true,\n  debitAccount: true,\n  visible: true,\n  lastUpdateDate: '2019-09-28T16:41:41.090Z',\n  userPreferences: {\n    visible: true,\n    alias: 'nice',\n    favorite: true\n  }\n}, {\n  id: '1cdb2224-8926-4b4d-a99f-1c9dfbbb4699',\n  externalArrangementId: 'kjh4567-asd1-11e7-b114-b2f933d50000',\n  externalLegalEntityId: 'COOOOO1',\n  externalProductId: '1234567',\n  name: 'Mr and Mrs J. Smith',\n  productKindName: 'Current Account',\n  bankAlias: 'Secret account',\n  bookedBalance: 100.1,\n  availableBalance: 100.2,\n  creditLimit: 100.3,\n  IBAN: 'GB29NWBK60161331926819',\n  BBAN: 'BBAN',\n  currency: 'EUR',\n  externalTransferAllowed: true,\n  urgentTransferAllowed: false,\n  accruedInterest: 2.2,\n  principalAmount: 100.4,\n  currentInvestmentValue: 100.5,\n  legalEntityIds: ['257da57a-11e4-4553-9175-54baf755069b', 'cd83683b-13f2-43d8-882b-39c9ab27d499'],\n  productId: '36c8fc42-ec97-4f83-8a7c-d622625007f3',\n  productTypeName: 'Current Account',\n  BIC: 'BICExample1',\n  bankBranchCode: 'bankBranchCode1',\n  accountOpeningDate: '2016-01-28T16:41:41.090Z',\n  accountInterestRate: 100.2,\n  valueDateBalance: 100.1,\n  creditLimitUsage: 100.3,\n  creditLimitInterestRate: 100.4,\n  creditLimitExpiryDate: '2019-09-28T16:41:41.090Z',\n  debitCards: [{\n    number: '4578',\n    expiryDate: '2018-08-22T16:41:41.090Z'\n  }, {\n    number: '3241',\n    expiryDate: '2019-01-14T16:41:41.090Z'\n  }],\n  startDate: '2016-02-28T16:41:41.090Z',\n  termUnit: 'Y',\n  termNumber: 50,\n  maturityDate: '2017-02-28T16:41:41.090Z',\n  maturityAmount: 99.5,\n  autoRenewalIndicator: true,\n  interestPaymentFrequencyUnit: 'M',\n  interestPaymentFrequencyNumber: 15,\n  interestSettlementAccount: 'interestSettlementAccount1',\n  outstandingPrincipalAmount: 100.2,\n  monthlyInstalmentAmount: 100.1,\n  amountInArrear: 100.3,\n  minimumRequiredBalance: 80.4,\n  creditCardAccountNumber: '123456',\n  validThru: '2019-02-28T16:41:41.090Z',\n  applicableInterestRate: 101.2,\n  remainingCredit: 50,\n  outstandingPayment: 105.5,\n  minimumPayment: 51.1,\n  minimumPaymentDueDate: '2018-02-28T16:41:41.090Z',\n  totalInvestmentValue: 110.2,\n  accountHolderAddressLine1: 'accountHolderAddressLine11',\n  accountHolderAddressLine2: 'accountHolderAddressLine12',\n  creditAccount: true,\n  debitAccount: true,\n  visible: true,\n  lastUpdateDate: '2019-09-28T16:41:41.090Z',\n  userPreferences: {\n    alias: 'nice'\n  }\n}];\nconst accountsWithCount = {\n  count: 3,\n  items: mockAccountsResponse,\n  params: {\n    from: 1,\n    paginationType: 'load-more'\n  }\n};\nconst balanceAggregationResponseMock = [{\n  aggregatedBalances: [{\n    currencyCode: 'EUR',\n    amount: '3289.0',\n    numberOfArrangements: 3\n  }, {\n    currencyCode: 'USD',\n    amount: '2500.0',\n    numberOfArrangements: 10\n  }]\n}];\n/* eslint-enable */\n// eslint-disable-next-line no-null/no-null\n\nconst isPlainObject = obj => typeof obj === 'object' && obj !== null;\n/**\n * Equality check between two \"plain\" (i.e. JSON compatible) values.\n * By \"plain\" value, we mean a primitive or an object/array that contains only other primitives and no methods or internal state.\n */\n\n\nconst isEqual = (a, b) => {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.length === b.length && a.every((aValue, i) => isEqual(aValue, b[i]));\n  }\n\n  if (Array.isArray(a) || Array.isArray(b)) {\n    return false;\n  }\n\n  if (isPlainObject(a) && isPlainObject(b)) {\n    const aObject = a;\n    const bObject = b;\n    const aKeys = Object.keys(aObject);\n    const bKeys = Object.keys(bObject);\n    return aKeys.length === bKeys.length && aKeys.every(aKey => isEqual(aObject[aKey], bObject[aKey]));\n  }\n\n  return a === b;\n};\n\nclass TestHelper {\n  constructor(fixture) {\n    this._fixture = fixture;\n  }\n\n  getElement(locator) {\n    return this._fixture.debugElement.query(By.css(locator));\n  }\n\n  getElements(locator) {\n    return this._fixture.debugElement.queryAll(By.css(locator));\n  }\n\n  getText(locator) {\n    const element = this.getElement(locator);\n\n    if (element) {\n      return element.nativeElement.textContent.trim();\n    }\n\n    return undefined;\n  }\n\n  isElementPresent(locator) {\n    return isDefined(this.getElement(locator));\n  }\n\n}\n/**\n * Converts number to an absolute value\n * {{ -100 | bbAbsoluteValue }}\n */\n\n\nclass AbsoluteValuePipe {\n  /**\n   * @name AbsoluteValuePipe#transform\n   * @param value - number value\n   *\n   * @description\n   * Converts number to an absolute value\n   */\n  transform(value) {\n    return value !== undefined ? Math.abs(value) : NaN;\n  }\n\n}\n\nAbsoluteValuePipe.ɵfac = function AbsoluteValuePipe_Factory(t) {\n  return new (t || AbsoluteValuePipe)();\n};\n\nAbsoluteValuePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"bbAbsoluteValue\",\n  type: AbsoluteValuePipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AbsoluteValuePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'bbAbsoluteValue'\n    }]\n  }], null, null);\n})();\n\nconst sharedPipes$2 = [AccountNumberPipeModule, PaymentCardNumberModule];\nconst pipes$3 = [AbsoluteValuePipe];\n\nclass FormatPipeModule {}\n\nFormatPipeModule.ɵfac = function FormatPipeModule_Factory(t) {\n  return new (t || FormatPipeModule)();\n};\n\nFormatPipeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FormatPipeModule\n});\nFormatPipeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ...sharedPipes$2], AccountNumberPipeModule, PaymentCardNumberModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormatPipeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ...sharedPipes$2],\n      declarations: [...pipes$3],\n      exports: [...sharedPipes$2, ...pipes$3]\n    }]\n  }], null, null);\n})();\n/**\n * Gets a valid account number that should be displayed for Product (iban, bban or cardNumber)\n */\n\n\nclass ProductNumberValuePipe {\n  /**\n   * @name ProductNumberValuePipe#transform\n   * @param product - a product that contains account number\n   *\n   * @description\n   * Provides a valid account number for the product,\n   * for example:\n   * - IBAN for CurrentAccount product\n   * - BBAN for CurrentAccount product that doesn't have IBAN\n   * - number for CreditCard product\n   */\n  transform(product) {\n    const productNumberType = getProductNumberType(product);\n\n    if (productNumberType === 'iban' && 'IBAN' in product) {\n      return product.IBAN;\n    } else if (productNumberType === 'bban' && 'BBAN' in product) {\n      return product.BBAN;\n    } else if ('number' in product) {\n      return product.number;\n    }\n\n    return '';\n  }\n\n}\n\nProductNumberValuePipe.ɵfac = function ProductNumberValuePipe_Factory(t) {\n  return new (t || ProductNumberValuePipe)();\n};\n\nProductNumberValuePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"bbProductNumberValue\",\n  type: ProductNumberValuePipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductNumberValuePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'bbProductNumberValue'\n    }]\n  }], null, null);\n})();\n/**\n * Gets a valid account number type that should be displayed for Product (iban, bban or cardNumber)\n */\n\n\nclass ProductNumberTypePipe {\n  /**\n   * @name ProductNumberTypePipe#transform\n   * @param product - a product that contains account number\n   *\n   * @description\n   * Provides a valid account number for the product,\n   * for example:\n   * - 'iban' for CurrentAccount product\n   * - 'bban' for CurrentAccount product that doesn't have IBAN\n   * - 'cardNumber' for CreditCard product\n   */\n  transform(product) {\n    return getProductNumberType(product);\n  }\n\n}\n\nProductNumberTypePipe.ɵfac = function ProductNumberTypePipe_Factory(t) {\n  return new (t || ProductNumberTypePipe)();\n};\n\nProductNumberTypePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"bbProductNumberType\",\n  type: ProductNumberTypePipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductNumberTypePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'bbProductNumberType'\n    }]\n  }], null, null);\n})();\n/**\n * Provides numbers format per product or number type\n * a format includes masking and formatting configuration\n *\n * TODO: remove this pipe when all necessary ui-ang components support using `bbAccountNumber` pipe\n */\n\n\nclass ProductNumberFormatPipe {\n  /**\n   * @name ProductNumberFormatPipe#constructor\n   * @param accountsDisplayingFormatService - AccountsDisplayingFormatService\n   *\n   * @internal\n   */\n  constructor(accountsDisplayingFormatService) {\n    this.accountsDisplayingFormatService = accountsDisplayingFormatService;\n  }\n  /**\n   * @name ProductNumberFormatPipe#transform\n   * @param product - product that should be formatted or specific product number type\n   *\n   * @description\n   * Formats account numbers\n   */\n\n\n  transform(product) {\n    const productType = typeof product === 'object' ? getProductNumberType(product) : product;\n    const displayingFormat = this.accountsDisplayingFormatService.getDefaultFormat(productType);\n    return Object.assign({\n      length: 0,\n      maskRange: [0, 0]\n    }, displayingFormat);\n  }\n\n}\n\nProductNumberFormatPipe.ɵfac = function ProductNumberFormatPipe_Factory(t) {\n  return new (t || ProductNumberFormatPipe)(i0.ɵɵdirectiveInject(i1$4.AccountsDisplayingFormatService, 16));\n};\n\nProductNumberFormatPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"bbProductNumberFormat\",\n  type: ProductNumberFormatPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductNumberFormatPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'bbProductNumberFormat'\n    }]\n  }], function () {\n    return [{\n      type: i1$4.AccountsDisplayingFormatService\n    }];\n  }, null);\n})();\n\nconst sharedPipes$1 = [AccountNumberPipeModule, PaymentCardNumberModule];\nconst pipes$2 = [ProductNumberValuePipe, ProductNumberTypePipe, ProductNumberFormatPipe];\n\nclass ProductNumberPipeModule {}\n\nProductNumberPipeModule.ɵfac = function ProductNumberPipeModule_Factory(t) {\n  return new (t || ProductNumberPipeModule)();\n};\n\nProductNumberPipeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ProductNumberPipeModule\n});\nProductNumberPipeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ...sharedPipes$1], AccountNumberPipeModule, PaymentCardNumberModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductNumberPipeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ...sharedPipes$1],\n      declarations: [...pipes$2],\n      exports: [...sharedPipes$1, ...pipes$2]\n    }]\n  }], null, null);\n})();\n/**\n * Verifies if values is defined (not null and not undefined)\n */\n\n\nclass IsDefinedPipe {\n  /**\n   * @name IsDefinedPipe#transform\n   * @param value - value of any type\n   *\n   * @description\n   * Verifies if values is defined\n   * for example:\n   * - true for '' string\n   * - true for 0 number\n   * - false for undefined value\n   */\n  transform(value) {\n    return isDefined(value);\n  }\n\n}\n\nIsDefinedPipe.ɵfac = function IsDefinedPipe_Factory(t) {\n  return new (t || IsDefinedPipe)();\n};\n\nIsDefinedPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"bbIsDefined\",\n  type: IsDefinedPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IsDefinedPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'bbIsDefined'\n    }]\n  }], null, null);\n})();\n/**\n * Verifies if the passed item is presented in the array\n * Note: deep-equal is not supported\n *\n * @usageNotes\n * ### Example\n * ```html\n * <div *ngIf=\"{{ item|bbIsArray:array }}\"></div>\n * ```\n */\n\n\nclass IsInArrayPipe {\n  /**\n   * Verifies if `item` is presented in `array`\n   *\n   * @param item\n   * @param array\n   */\n  transform(item, array) {\n    if (array && array.length) {\n      return array.indexOf(item) !== -1;\n    }\n\n    return false;\n  }\n\n}\n\nIsInArrayPipe.ɵfac = function IsInArrayPipe_Factory(t) {\n  return new (t || IsInArrayPipe)();\n};\n\nIsInArrayPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"bbIsInArray\",\n  type: IsInArrayPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IsInArrayPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'bbIsInArray'\n    }]\n  }], null, null);\n})();\n/**\n * Verifies if the passed item is a percent value\n *\n * @usageNotes\n * ### Example\n * ```html\n * <div *ngIf=\"{{ \"10%\"|bbIsPercentValue }}\"></div>\n * ```\n */\n\n\nclass IsPercentValue {\n  /**\n   * Verifies if the passed item is a percent value\n   *\n   * @param item\n   */\n  transform(item) {\n    if (isDefined(item) && typeof item === 'string') {\n      const percentIndex = item.indexOf('%');\n      return percentIndex === 0 || percentIndex === item.length - 1;\n    }\n\n    return false;\n  }\n\n}\n\nIsPercentValue.ɵfac = function IsPercentValue_Factory(t) {\n  return new (t || IsPercentValue)();\n};\n\nIsPercentValue.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"bbIsPercentValue\",\n  type: IsPercentValue,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IsPercentValue, [{\n    type: Pipe,\n    args: [{\n      name: 'bbIsPercentValue'\n    }]\n  }], null, null);\n})();\n/**\n * Verifies if \"kind\" of productKindItem is equal to expected \"kind\"\n *\n * @usageNotes\n * ### Example\n * ```html\n * <div *ngIf=\"productKind | bbIsProductKind:expectedProductKindType\"></div>\n * ```\n */\n\n\nclass IsProductKindPipe {\n  /**\n   * Verifies if \"kind\" of productKindItem is equal to expected \"kind\"\n   *\n   * @param productKindItem\n   * @param expectedProductKindType\n   */\n  transform(productKindItem, expectedProductKindType) {\n    if (isDefined(productKindItem === null || productKindItem === void 0 ? void 0 : productKindItem.kindUri)) {\n      return Array.isArray(expectedProductKindType) ? expectedProductKindType.includes(productKindItem === null || productKindItem === void 0 ? void 0 : productKindItem.kindUri) : (productKindItem === null || productKindItem === void 0 ? void 0 : productKindItem.kindUri) === expectedProductKindType;\n    }\n\n    return false;\n  }\n\n}\n\nIsProductKindPipe.ɵfac = function IsProductKindPipe_Factory(t) {\n  return new (t || IsProductKindPipe)();\n};\n\nIsProductKindPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"bbIsProductKind\",\n  type: IsProductKindPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IsProductKindPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'bbIsProductKind'\n    }]\n  }], null, null);\n})();\n\nconst pipes$1 = [IsDefinedPipe, IsInArrayPipe, IsPercentValue, IsProductKindPipe];\n\nclass ValidationModule {}\n\nValidationModule.ɵfac = function ValidationModule_Factory(t) {\n  return new (t || ValidationModule)();\n};\n\nValidationModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ValidationModule\n});\nValidationModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ValidationModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [...pipes$1],\n      exports: [...pipes$1]\n    }]\n  }], null, null);\n})();\n/**\n * Returns localised info of date of update\n *\n * @usageNotes\n * ### Example\n * ```html\n * <p>{{ '2020-10-10' | bbDateUpdateAgo }}</p>\n * <p>{{ '2020-10-10' | bbDateUpdateAgo:'mediumDate' }}</p>\n * ```\n */\n\n\nclass DateUpdatedAgoPipe {\n  /**\n   * @name DateUpdatedAgoPipe#constructor\n   * @param datePipe - BbDatePipe\n   *\n   * @internal\n   */\n  constructor(datePipe) {\n    this.datePipe = datePipe;\n    this.millisecondsInPeriod = {\n      day: 86400000,\n      hours: 7200000,\n      hour: 3600000,\n      minutes: 120000,\n      minute: 60000\n    };\n    this.localisationByPeriod = {\n      date: date => $localize`:@@product-summary.update-date.date:Updated on ${date}`,\n      hours: hours => $localize`:@@product-summary.update-date.hours:Updated ${hours} hours ago`,\n      hour: () => $localize`:@@product-summary.update-date.hour:Updated 1 hour ago`,\n      minutes: minutes => $localize`:@@product-summary.update-date.minutes:Updated ${minutes} minutes ago`,\n      minute: () => $localize`:@@product-summary.update-date.minute:Updated 1 minute ago`\n    };\n  }\n  /**\n   * @name DateUpdatedAgoPipe#transform\n   * @param updateTimestamp - update date\n   * @param dateFormat - the format type for the date to be formatted (for update time >= 1 day ago)\n   *\n   * @description\n   * Returns localised info of date of update\n   *\n   * Example:\n   *  transform(hourAgo) - 'Updated 1 hour ago'\n   *  transform(minuteAgo) - 'Updated 1 minute ago'\n   */\n\n\n  transform(updateTimestamp, dateFormat = 'longDate') {\n    const millisecondsAgo = Math.max(new Date().getTime() - new Date(updateTimestamp).getTime(), 0);\n\n    if (millisecondsAgo < this.millisecondsInPeriod.minutes) {\n      return this.localisationByPeriod.minute();\n    } else if (millisecondsAgo < this.millisecondsInPeriod.hour) {\n      const minutesAgo = Math.floor(millisecondsAgo / this.millisecondsInPeriod.minute);\n      return this.localisationByPeriod.minutes(minutesAgo);\n    } else if (millisecondsAgo < this.millisecondsInPeriod.hours) {\n      return this.localisationByPeriod.hour();\n    } else if (millisecondsAgo < this.millisecondsInPeriod.day) {\n      const hoursAgo = Math.floor(millisecondsAgo / this.millisecondsInPeriod.hour);\n      return this.localisationByPeriod.hours(hoursAgo);\n    } else {\n      const updateDate = this.datePipe.transform(updateTimestamp, dateFormat);\n      return this.localisationByPeriod.date(updateDate);\n    }\n  }\n\n}\n\nDateUpdatedAgoPipe.ɵfac = function DateUpdatedAgoPipe_Factory(t) {\n  return new (t || DateUpdatedAgoPipe)(i0.ɵɵdirectiveInject(i1$5.BbDatePipe, 16));\n};\n\nDateUpdatedAgoPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"bbDateUpdatedAgo\",\n  type: DateUpdatedAgoPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DateUpdatedAgoPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'bbDateUpdatedAgo'\n    }]\n  }], function () {\n    return [{\n      type: i1$5.BbDatePipe\n    }];\n  }, null);\n})();\n\nconst sharedPipes = [BbDatePipeModule];\nconst pipes = [DateUpdatedAgoPipe];\n\nclass DatePipeModule {}\n\nDatePipeModule.ɵfac = function DatePipeModule_Factory(t) {\n  return new (t || DatePipeModule)();\n};\n\nDatePipeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DatePipeModule\n});\nDatePipeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [BbDatePipe],\n  imports: [[CommonModule, ...sharedPipes], BbDatePipeModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DatePipeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ...sharedPipes],\n      declarations: [...pipes],\n      exports: [...pipes, ...sharedPipes],\n      providers: [BbDatePipe]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ACCOUNT_ALIAS_DISPLAYING_LEVEL, AbsoluteValuePipe, AccountAliasDisplayingLevel, AccountNavigationType, AccountsOverviewAccessDenied, AccountsOverviewBadRequest, AccountsOverviewConnectivityError, AccountsOverviewNotFound, AccountsOverviewUnknownError, BalanceHistoryAccessDenied, BalanceHistoryBadRequest, BalanceHistoryCommonService, BalanceHistoryConnectivityError, BalanceHistoryExportFormat, BalanceHistoryNotFound, BalanceHistoryUnknownError, CardProductKindName, CurrencyToCountryMap, DEFAULT_DEBOUNCE_TIME, DatePipeModule, DateUpdatedAgoPipe, DefaultAllowedNavigationTypes, DefaultProductKindName, DefaultProductKindNameList, DomAttributesService, DownloadResourcesService, EXTRA_SMALL_SCREEN_SIZE, FormatPipeModule, HttpResponseType, IsDefinedPipe, IsInArrayPipe, IsPercentValue, IsProductKindPipe, PRODUCT_SUMMARY_WIDGET_PROPERTIES, PaginationType, ProductKindNames, ProductKindUri, ProductNumberFormatPipe, ProductNumberPipeModule, ProductNumberTypePipe, ProductNumberValuePipe, ProductSummaryAccountDetailsBaseComponent, ProductSummaryAccountDetailsBaseModule, ProductSummaryAccountsService, ProductSummaryCommon, ProductSummaryPrivilege, ProductSummaryUserPermissionsService, ProductSummaryWidgetPropertiesService, ProductsExternalInfoService, ResponsiveContainerComponent, ResponsiveContainerModule, SMALL_SCREEN_SIZE, TestHelper, UserPreferencesValidationSettings, ValidationModule, WINDOW, WidgetProperty, WindowProvider, accountsWithCount, balanceAggregationResponseMock, balanceHistoryPaginatedMock, balanceHistoryPaginatedMockWithCount, balanceHistorySeriesMock, bbEventToggleAccountFavoriteUpdate, cacheRequest, defaultArrangementName, emptyBalanceHistoryPaginatedMockWithCount, filterInputParameters, findBy, findByName, getAccountAlias, getProductKindIconName, getProductNumberType, getRouteParameter, hasExternalInfo, isCardNumber, isDefined, isEqual, isFavorite, isFunction, isPlainObject, isProductVisible, mockAccountsResponse, mockRequestObject, modelItemToBoolean, parseBalanceHistoryError, parseError, processErrorMessages, processedBalanceHistoryMock, requestObjectMockPaginated, requestObjectMockSeries, setAttribute, toKebabCase, windowFactory };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/retail-loans-journey-ang/node_modules/@backbase/product-summary-common-ang/fesm2015/backbase-product-summary-common-ang.js"],"names":["i0","EventEmitter","Component","Input","Output","NgModule","HostListener","InjectionToken","Injectable","Inject","Optional","Pipe","CommonModule","i2","NotificationModule","i1","MaskableAttribute","ReplaySubject","BehaviorSubject","of","combineLatest","distinctUntilChanged","filter","tap","switchMap","catchError","scan","map","take","publishReplay","refCount","pluck","shareReplay","PUBSUB","i1$1","i1$2","i1$3","By","i1$4","AccountNumberPipeModule","PaymentCardNumberModule","i1$5","BbDatePipeModule","BbDatePipe","ProductSummaryAccountDetailsBaseComponent","constructor","maskableAttributes","unmaskAttribute","maskAttribute","maskableAttribute","infoAvailability","product","data","_product","getProductInfoAvailability","isMasked","attributeName","find","attribute","masked","undefined","onUnmaskAttribute","Object","values","includes","emit","onMaskAttribute","ɵfac","ɵcmp","type","args","template","ProductSummaryAccountDetailsBaseModule","ɵmod","ɵinj","declarations","exports","SIZE_TABLET_DEFAULT","SIZE_MOBILE_DEFAULT","ResponsiveContainerComponent","element","changeDetector","_responsiveView","_sizeTablet","_sizeMobile","_element","_changeDetector","responsiveView","_customResponsiveView","value","sizeMobile","sizeTablet","ngAfterViewInit","checkElementSize","detectChanges","onResize","_a","_b","containerWidth","nativeElement","firstElementChild","getBoundingClientRect","width","getResponsiveView","responseView","ElementRef","ChangeDetectorRef","ResponsiveContainerModule","WINDOW","windowFactory","window","WindowProvider","provide","useFactory","PRODUCT_SUMMARY_WIDGET_PROPERTIES","ACCOUNT_ALIAS_DISPLAYING_LEVEL","sharedModules","ProductSummaryCommon","imports","providers","DownloadResourcesService","localWindow","downloadFile","name","fileData","Blob","isFileSaverAvailable","downloadViaFileSaver","downloadViaLink","navigator","msSaveOrOpenBlob","document","URL","downloadLink","createElement","href","createObjectURL","download","click","remove","ɵprov","decorators","DomAttributesService","idPrefix","nextId","generateId","HttpResponseType","BalanceHistoryExportFormat","PaginationType","ProductKindNames","ProductKindUri","AccountNavigationType","ProductSummaryPrivilege","AccountAliasDisplayingLevel","UserPreferencesValidationSettings","ALIAS_MAX_LENGTH","defaultArrangementName","WidgetProperty","BUSINESS_FUNCTION","RESOURCE_NAME","PRIVILEGE_TYPE","SIZE","ACTIVE_VIEW","SMALL_SCREEN_SIZE","EXTRA_SMALL_SCREEN_SIZE","DEFAULT_DEBOUNCE_TIME","DefaultProductKindNameList","DefaultProductKindName","CURRENT_ACCOUNT","CardProductKindName","DefaultAllowedNavigationTypes","BALANCE_HISTORY","PAYMENTS","TRANSACTIONS","STATEMENTS","getColorTrend","index","series","serie","length","getCurrentSeriesName","trend","getFirstSeries","datum","createNewSeries","result","lastResult","lastName","lastValue","valuesSum","Math","abs","step","getTime","valuesRatio","prevValue","crossingPoint","Date","crossPointSection","slice","concatExistingSeries","splitDataByTrend","reduce","seriesData","i","currentTrend","previousTrend","BalanceHistoryNotFound","response","kind","messages","error","errors","e","message","BalanceHistoryBadRequest","BalanceHistoryAccessDenied","BalanceHistoryUnknownError","BalanceHistoryConnectivityError","parseBalanceHistoryError","ErrorEvent","status","BalanceHistoryCommonService","accountDataService","reportDefaultFileName","CSV","JSON","requestObjectSeries","requestObjectPaginated","errorSeries","errorPaginated","loadingPaginated","loadingSeries","balanceHistorySeries","pipe","param","arrangementIds","next","res","getBalanceHistorySeries","balanceHistoryPaginated","arrangementId","getBalanceHistoryPaginated","count","items","params","acc","curr","responsesMerge","request","parameters","getBalanceHistoryRequestParameters","getBalanceHistory","paginationType","from","getBalanceHistoryForArrangementRequestParameters","getBalanceHistoryForArrangement","RESPONSE","mapResponseWithCount","loadBalanceHistorySeries","subscribe","loadBalanceHistoryPaginated","exportBalanceHistory","format","exportParameters","getBalanceHistoryUrl","options","httpHeaderAccept","headers","body","defaultFileName","fileNameInHeaders","getFileNameFromHeaders","content","current","LOAD_MORE","processBalanceHistory","balanceHistory","balanceHistoryItem","defaultSeries","dateTo","valuePtc","balance","Error","headerCount","get","counter","parseInt","requestFormat","assign","toRequestParameters","requestParameters","timePeriod","dateFrom","contentDisposition","contentDispositionWithoutQuotes","replace","match","AccountsHttpService","AccountsOverviewNotFound","AccountsOverviewBadRequest","AccountsOverviewAccessDenied","AccountsOverviewUnknownError","AccountsOverviewConnectivityError","parseError","bbEventToggleAccountFavoriteUpdate","ProductSummaryAccountsService","productSummaryDataService","balancesHttpService","notificationService","pubSub","requestObject","favoriteRequestComplete","updateError","loading","aggregatedBalancesErrorSubject","aggregatedBalancesError","asObservable","loadingAggregatedBalancesSubject","loadingAggregatedBalances","refreshAggregatedBalancesSubject","accountsList","getAccounts","mergeResponses","aggregatedBalances","getAggregatedBalances","retriggerGetAccounts","bind","getAccountById","getArrangementById","getUnmaskedAttribute","unmaskedAttribute","toggleAccountFavorite","errorTemplateRef","successTemplateRef","putAccountFavorite","showNotification","publish","accountUserPreferences","updateUserPreferences","getArrangementsByBusinessFunction","templateRef","modifier","header","getAccountsFrom","refreshAggregatedBalances","getAggregations","mapResponseToAggregatedBalances","parseAggregatedBalanceError","aggregations","allBalances","ProductSummaryHttpService","ArrangementsHttpService","BalancesHttpService","NotificationService","toKebabCase","accountType","trim","toLowerCase","split","join","isCardNumber","account","Boolean","productKindName","modelItemToBoolean","isFavorite","accountPreferencesFavoriteValue","userPreferences","favorite","accountFavoriteValue","isProductVisible","visible","isFunction","findBy","collection","key","item","findByName","getAccountAlias","alias","bankAlias","getProductKindIconName","iconName","isDefaultProductKindName","some","getProductNumberType","isCardFormat","processErrorMessages","setAttribute","attributeValue","isDefined","filterInputParameters","input","prop","inputVal","propVal","cacheRequest","source","getRouteParameter","route","routeParam","paramMap","allParams","parent","hasExternalInfo","financialInstitutionId","ProductsExternalInfoService","financialInstitutionsHttpService","getProductsWithExternalInfo","products","productsList","Array","isArray","financialInstitutionIds","getAssignedFinancialInstitutionIds","getFinancialInstitutions","institutions","addExternalInfoToProduct","itemsWithExternalInfo","indexOf","getExternalInfo","isExternalInfoAvailable","financialInstitution","institution","id","ids","FinancialInstitutionManagerClientHttpService","ProductSummaryUserPermissionsService","usersDataService","productSummaryPermissionParameters","resourceName","functionName","manageArrangementsPermissionParameters","productSummaryPrivileges","getUserPrivileges","privileges","privilege","managerArrangementsPrivileges","hasFullViewPermission","VIEW","hasFullEditPermission","EDIT","hasArrangementAliasEditPermission","allowedAccountNavigationTypes","UsersHttpService","ProductSummaryWidgetPropertiesService","defaultConfiguration","itemModel","configuration","propertyNames","keys","properties","propertyName","getWidgetProperty","widgetProperties","setConfiguration","config","getProperty","defaultValue","configurationValue$","modelValue$","property","configurationValue","modelValue","ItemModel","CurrencyToCountryMap","BDT","EUR","XOF","BGN","BAM","BBD","XPF","BMD","BND","BOB","BHD","BIF","BTN","JMD","NOK","BWP","WST","USD","BRL","BSD","GBP","BYR","BZD","RUB","RWF","RSD","TMT","TJS","RON","NZD","GTQ","XAF","JPY","GYD","GEL","XCD","GNF","GMD","DKK","GIP","GHS","OMR","TND","JOD","HRK","HTG","HUF","HKD","HNL","AUD","VEF","ILS","PYG","IQD","PAB","PGK","PEN","PKR","PHP","PLN","ZMK","MAD","EGP","ZAR","VND","SBD","ETB","SOS","ZWL","SAR","ERN","MDL","MGA","UZS","MMK","MOP","MNT","MKD","MUR","MWK","MVR","MRO","UGX","TZS","MYR","MXN","SHP","FJD","FKP","NIO","NAD","VUV","NGN","NPR","CHF","COP","CNY","CLP","CAD","CDF","CZK","CRC","ANG","CVE","CUP","SZL","SYP","KGS","KES","SSP","SRD","KHR","KMF","STD","KRW","KPW","KWD","SLL","SCR","KZT","KYD","SGD","SEK","SDG","DOP","DJF","YER","DZD","UYU","LBP","LAK","TWD","TTD","TRY","LKR","TOP","LTL","LRD","LSL","THB","LYD","AED","AFN","ISK","IRR","AMD","ALL","AOA","ARS","AWG","INR","AZN","IDR","UAH","QAR","MZN","balanceHistorySeriesMock","currency","balanceHistoryPaginatedMock","balanceHistoryPaginatedMockWithCount","emptyBalanceHistoryPaginatedMockWithCount","requestObjectMockSeries","requestObjectMockPaginated","processedBalanceHistoryMock","mockRequestObject","businessFunction","mockAccountsResponse","externalArrangementId","externalLegalEntityId","externalProductId","bookedBalance","availableBalance","creditLimit","IBAN","BBAN","externalTransferAllowed","urgentTransferAllowed","accruedInterest","principalAmount","currentInvestmentValue","legalEntityIds","productId","productTypeName","BIC","bankBranchCode","accountOpeningDate","accountInterestRate","valueDateBalance","creditLimitUsage","creditLimitInterestRate","creditLimitExpiryDate","debitCards","number","expiryDate","startDate","termUnit","termNumber","maturityDate","maturityAmount","autoRenewalIndicator","interestPaymentFrequencyUnit","interestPaymentFrequencyNumber","interestSettlementAccount","outstandingPrincipalAmount","monthlyInstalmentAmount","amountInArrear","minimumRequiredBalance","creditCardAccountNumber","validThru","applicableInterestRate","remainingCredit","outstandingPayment","minimumPayment","minimumPaymentDueDate","totalInvestmentValue","accountHolderAddressLine1","accountHolderAddressLine2","creditAccount","debitAccount","lastUpdateDate","accountsWithCount","balanceAggregationResponseMock","currencyCode","amount","numberOfArrangements","isPlainObject","obj","isEqual","a","b","every","aValue","aObject","bObject","aKeys","bKeys","aKey","TestHelper","fixture","_fixture","getElement","locator","debugElement","query","css","getElements","queryAll","getText","textContent","isElementPresent","AbsoluteValuePipe","transform","NaN","ɵpipe","sharedPipes$2","pipes$3","FormatPipeModule","ProductNumberValuePipe","productNumberType","ProductNumberTypePipe","ProductNumberFormatPipe","accountsDisplayingFormatService","productType","displayingFormat","getDefaultFormat","maskRange","AccountsDisplayingFormatService","sharedPipes$1","pipes$2","ProductNumberPipeModule","IsDefinedPipe","IsInArrayPipe","array","IsPercentValue","percentIndex","IsProductKindPipe","productKindItem","expectedProductKindType","kindUri","pipes$1","ValidationModule","DateUpdatedAgoPipe","datePipe","millisecondsInPeriod","day","hours","hour","minutes","minute","localisationByPeriod","date","$localize","updateTimestamp","dateFormat","millisecondsAgo","max","minutesAgo","floor","hoursAgo","updateDate","sharedPipes","pipes","DatePipeModule"],"mappings":"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","sourcesContent":["import '@angular/localize/init';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, NgModule, HostListener, InjectionToken, Injectable, Inject, Optional, Pipe } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@backbase/ui-ang/notification';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\nimport * as i1 from '@backbase/data-ang/arrangements';\nimport { MaskableAttribute } from '@backbase/data-ang/arrangements';\nimport { ReplaySubject, BehaviorSubject, of, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, filter, tap, switchMap, catchError, scan, map, take, publishReplay, refCount, pluck, shareReplay } from 'rxjs/operators';\nimport { PUBSUB } from '@backbase/foundation-ang/web-sdk';\nimport * as i1$1 from '@backbase/data-ang/financial-institution-manager';\nimport * as i1$2 from '@backbase/data-ang/accesscontrol';\nimport * as i1$3 from '@backbase/foundation-ang/core';\nimport { By } from '@angular/platform-browser';\nimport * as i1$4 from '@backbase/ui-ang/account-number-pipe';\nimport { AccountNumberPipeModule } from '@backbase/ui-ang/account-number-pipe';\nimport { PaymentCardNumberModule } from '@backbase/ui-ang/payment-card-number-pipe';\nimport * as i1$5 from '@backbase/ui-ang/date-pipe';\nimport { BbDatePipeModule, BbDatePipe } from '@backbase/ui-ang/date-pipe';\n\nclass ProductSummaryAccountDetailsBaseComponent {\n    constructor() {\n        /**\n         * List of maskable attributes. Holds states of the attributes.\n         */\n        this.maskableAttributes = [];\n        /**\n         * Event when a user clicked on the `unmask-attribute-button` button\n         */\n        this.unmaskAttribute = new EventEmitter();\n        /**\n         * Event when a user clicked on the `mask-attribute-button` button\n         */\n        this.maskAttribute = new EventEmitter();\n        /**\n         * All unmaskable attributes\n         */\n        this.maskableAttribute = MaskableAttribute;\n        /**\n         * Details info sections availability\n         */\n        this.infoAvailability = {};\n    }\n    /**\n     * Product type data that this component displays.\n     */\n    set product(data) {\n        this._product = data;\n        this.infoAvailability = this.getProductInfoAvailability(data);\n    }\n    get product() {\n        return this._product;\n    }\n    /**\n     * Returns `true` if the given `attributeName` is masked\n     *\n     * @param attributeName\n     */\n    isMasked(attributeName) {\n        const maskableAttribute = this.maskableAttributes.find(attribute => attribute.attributeName === attributeName);\n        return (maskableAttribute === null || maskableAttribute === void 0 ? void 0 : maskableAttribute.masked) === undefined ? true : maskableAttribute === null || maskableAttribute === void 0 ? void 0 : maskableAttribute.masked;\n    }\n    /**\n     * Event handler for the `click` event of the unmask buttons\n     * Emits `MaskableAttribute` to the `unmaskAttribute` Output\n     *\n     * @param attributeName\n     */\n    onUnmaskAttribute(attributeName) {\n        if (Object.values(MaskableAttribute).includes(attributeName)) {\n            this.unmaskAttribute.emit(attributeName);\n        }\n    }\n    /**\n     * Event handler for the `click` event of the mask buttons\n     * Emits `MaskableAttribute` to the `maskAttribute` Output\n     *\n     * @param attributeName\n     */\n    onMaskAttribute(attributeName) {\n        if (Object.values(MaskableAttribute).includes(attributeName)) {\n            this.maskAttribute.emit(attributeName);\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars,no-unused-vars\n    getProductInfoAvailability(product) {\n        return {};\n    }\n}\nProductSummaryAccountDetailsBaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductSummaryAccountDetailsBaseComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nProductSummaryAccountDetailsBaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.15\", type: ProductSummaryAccountDetailsBaseComponent, selector: \"ng-component\", inputs: { product: \"product\", maskableAttributes: \"maskableAttributes\" }, outputs: { unmaskAttribute: \"unmaskAttribute\", maskAttribute: \"maskAttribute\" }, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductSummaryAccountDetailsBaseComponent, decorators: [{\n            type: Component,\n            args: [{ template: '' }]\n        }], propDecorators: { product: [{\n                type: Input\n            }], maskableAttributes: [{\n                type: Input\n            }], unmaskAttribute: [{\n                type: Output\n            }], maskAttribute: [{\n                type: Output\n            }] } });\n\nclass ProductSummaryAccountDetailsBaseModule {\n}\nProductSummaryAccountDetailsBaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductSummaryAccountDetailsBaseModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nProductSummaryAccountDetailsBaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductSummaryAccountDetailsBaseModule, declarations: [ProductSummaryAccountDetailsBaseComponent], exports: [ProductSummaryAccountDetailsBaseComponent] });\nProductSummaryAccountDetailsBaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductSummaryAccountDetailsBaseModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductSummaryAccountDetailsBaseModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [ProductSummaryAccountDetailsBaseComponent],\n                    exports: [ProductSummaryAccountDetailsBaseComponent],\n                }]\n        }] });\n\nconst SIZE_TABLET_DEFAULT = 768;\nconst SIZE_MOBILE_DEFAULT = 375;\n\nclass ResponsiveContainerComponent {\n    constructor(element, changeDetector) {\n        /**\n         * Specifies screen size: `mobile` | `tablet` | 'screen'\n         *\n         * @default 'screen'\n         */\n        this._responsiveView = 'screen';\n        this._sizeTablet = SIZE_TABLET_DEFAULT;\n        this._sizeMobile = SIZE_MOBILE_DEFAULT;\n        this._element = element;\n        this._changeDetector = changeDetector;\n    }\n    get responsiveView() {\n        return this._customResponsiveView || this._responsiveView;\n    }\n    set responsiveView(value) {\n        this._customResponsiveView = value;\n    }\n    get sizeMobile() {\n        return this._sizeMobile;\n    }\n    set sizeMobile(value) {\n        this._sizeMobile = value;\n    }\n    get sizeTablet() {\n        return this._sizeTablet;\n    }\n    set sizeTablet(value) {\n        this._sizeTablet = value;\n    }\n    /**\n     * @internal\n     */\n    ngAfterViewInit() {\n        if (!this._customResponsiveView) {\n            this.checkElementSize();\n            this._changeDetector.detectChanges();\n        }\n    }\n    /**\n     * Event handler on `windows:resize`\n     * Checks size of the container\n     */\n    onResize() {\n        if (!this._customResponsiveView) {\n            this.checkElementSize();\n        }\n    }\n    /**\n     * Checks width of the parent container and updates `isSmallScreen$` and `isExtraSmallScreen$`\n     */\n    checkElementSize() {\n        var _a, _b;\n        const containerWidth = ((_b = (_a = this._element.nativeElement) === null || _a === void 0 ? void 0 : _a.firstElementChild) === null || _b === void 0 ? void 0 : _b.getBoundingClientRect().width) || 0;\n        this._responsiveView = this.getResponsiveView(containerWidth);\n    }\n    getResponsiveView(containerWidth) {\n        let responseView = 'screen';\n        if (containerWidth <= this.sizeMobile) {\n            responseView = 'mobile';\n        }\n        else if (containerWidth <= this.sizeTablet) {\n            responseView = 'tablet';\n        }\n        return responseView;\n    }\n}\nResponsiveContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ResponsiveContainerComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nResponsiveContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.15\", type: ResponsiveContainerComponent, selector: \"ng-component\", inputs: { responsiveView: \"responsiveView\" }, host: { listeners: { \"window:resize\": \"onResize()\" } }, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ResponsiveContainerComponent, decorators: [{\n            type: Component,\n            args: [{ template: '' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { responsiveView: [{\n                type: Input\n            }], onResize: [{\n                type: HostListener,\n                args: ['window:resize', []]\n            }] } });\n\nclass ResponsiveContainerModule {\n}\nResponsiveContainerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ResponsiveContainerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nResponsiveContainerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ResponsiveContainerModule, declarations: [ResponsiveContainerComponent], exports: [ResponsiveContainerComponent] });\nResponsiveContainerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ResponsiveContainerModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ResponsiveContainerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [ResponsiveContainerComponent],\n                    exports: [ResponsiveContainerComponent],\n                }]\n        }] });\n\nconst WINDOW = new InjectionToken('ProductSummaryCommon :: WindowToken');\nconst windowFactory = () => window;\nconst WindowProvider = {\n    provide: WINDOW,\n    useFactory: windowFactory,\n};\n/**\n * Injection token for widget properties configuration\n */\nconst PRODUCT_SUMMARY_WIDGET_PROPERTIES = new InjectionToken('ProductSummaryCommon :: WidgetProperties');\n/**\n * Injection token for account alias displaying level configuration\n */\nconst ACCOUNT_ALIAS_DISPLAYING_LEVEL = new InjectionToken('ProductSummaryCommon :: AccountAliasDisplayingLevel');\n\nconst sharedModules = [NotificationModule, ProductSummaryAccountDetailsBaseModule, ResponsiveContainerModule];\nclass ProductSummaryCommon {\n}\nProductSummaryCommon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductSummaryCommon, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nProductSummaryCommon.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductSummaryCommon, imports: [CommonModule, NotificationModule, ProductSummaryAccountDetailsBaseModule, ResponsiveContainerModule], exports: [NotificationModule, ProductSummaryAccountDetailsBaseModule, ResponsiveContainerModule] });\nProductSummaryCommon.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductSummaryCommon, providers: [WindowProvider], imports: [[CommonModule, ...sharedModules], NotificationModule, ProductSummaryAccountDetailsBaseModule, ResponsiveContainerModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductSummaryCommon, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, ...sharedModules],\n                    exports: [...sharedModules],\n                    providers: [WindowProvider],\n                }]\n        }] });\n\nclass DownloadResourcesService {\n    constructor(localWindow) {\n        this.localWindow = localWindow;\n    }\n    downloadFile(name, type, data) {\n        const fileData = new Blob([data], { type });\n        if (this.isFileSaverAvailable()) {\n            this.downloadViaFileSaver(name, fileData);\n        }\n        else {\n            this.downloadViaLink(name, fileData);\n        }\n    }\n    isFileSaverAvailable() {\n        const { navigator } = this.localWindow;\n        // @ts-ignore\n        return navigator !== undefined && navigator.msSaveOrOpenBlob !== undefined;\n    }\n    downloadViaFileSaver(name, data) {\n        const { navigator } = this.localWindow;\n        // @ts-ignore\n        navigator.msSaveOrOpenBlob(data, name);\n    }\n    downloadViaLink(name, data) {\n        const { document, URL } = this.localWindow;\n        const downloadLink = document.createElement('a');\n        downloadLink.href = URL.createObjectURL(data);\n        downloadLink.download = name;\n        downloadLink.click();\n        downloadLink.remove();\n    }\n}\nDownloadResourcesService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DownloadResourcesService, deps: [{ token: WINDOW }], target: i0.ɵɵFactoryTarget.Injectable });\nDownloadResourcesService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DownloadResourcesService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DownloadResourcesService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [WINDOW]\n                }] }]; } });\n\n/**\n * Utility service for DOM manipulations\n */\nclass DomAttributesService {\n    constructor() {\n        this.idPrefix = 'bb_product_summary_element_';\n        this.nextId = 0;\n    }\n    /**\n     * Generates unique Id for product-summary DOM elements\n     */\n    generateId() {\n        return `${this.idPrefix}${this.nextId++}`;\n    }\n}\nDomAttributesService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DomAttributesService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDomAttributesService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DomAttributesService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DomAttributesService, decorators: [{\n            type: Injectable\n        }] });\n\nvar HttpResponseType;\n(function (HttpResponseType) {\n    HttpResponseType[\"BODY\"] = \"body\";\n    HttpResponseType[\"RESPONSE\"] = \"response\";\n    HttpResponseType[\"EVENT\"] = \"event\";\n})(HttpResponseType || (HttpResponseType = {}));\nvar BalanceHistoryExportFormat;\n(function (BalanceHistoryExportFormat) {\n    BalanceHistoryExportFormat[\"JSON\"] = \"application/json\";\n    BalanceHistoryExportFormat[\"CSV\"] = \"text/csv\";\n})(BalanceHistoryExportFormat || (BalanceHistoryExportFormat = {}));\nvar PaginationType;\n(function (PaginationType) {\n    PaginationType[\"LOAD_MORE\"] = \"load-more\";\n    PaginationType[\"PAGINATION\"] = \"pagination\";\n})(PaginationType || (PaginationType = {}));\nvar ProductKindNames;\n(function (ProductKindNames) {\n    ProductKindNames[\"CURRENT_ACCOUNT\"] = \"Current Account\";\n    ProductKindNames[\"SAVINGS_ACCOUNT\"] = \"Savings Account\";\n    ProductKindNames[\"TERM_DEPOSIT\"] = \"Term Deposit\";\n    ProductKindNames[\"LOAN\"] = \"Loan\";\n    ProductKindNames[\"CREDIT_CARD\"] = \"Credit Card\";\n    ProductKindNames[\"DEBIT_CARD\"] = \"Debit Card\";\n    ProductKindNames[\"INVESTMENT_ACCOUNT\"] = \"Investment Account\";\n})(ProductKindNames || (ProductKindNames = {}));\n/**\n * Default values of \"kindUri\" per product kind\n */\nvar ProductKindUri;\n(function (ProductKindUri) {\n    ProductKindUri[\"CREDIT_CARD\"] = \"credit-card\";\n    ProductKindUri[\"CURRENT_ACCOUNT\"] = \"current-account\";\n    ProductKindUri[\"DEBIT_CARD\"] = \"debit-card\";\n    ProductKindUri[\"INVESTMENT_ACCOUNT\"] = \"investment-account\";\n    ProductKindUri[\"LOAN\"] = \"loan\";\n    ProductKindUri[\"POCKET\"] = \"pocket\";\n    ProductKindUri[\"POCKET_PARENT\"] = \"pocket-parent\";\n    ProductKindUri[\"SAVINGS_ACCOUNT\"] = \"savings-account\";\n    ProductKindUri[\"TERM_DEPOSIT\"] = \"term-deposit\";\n})(ProductKindUri || (ProductKindUri = {}));\n/**\n * Available navigation types from account\n */\nvar AccountNavigationType;\n(function (AccountNavigationType) {\n    AccountNavigationType[\"PAYMENTS\"] = \"PAYMENTS\";\n    AccountNavigationType[\"TRANSACTIONS\"] = \"TRANSACTIONS\";\n    AccountNavigationType[\"BALANCE_HISTORY\"] = \"BALANCE_HISTORY\";\n    AccountNavigationType[\"STATEMENTS\"] = \"STATEMENTS\";\n})(AccountNavigationType || (AccountNavigationType = {}));\n/**\n * Privileges applicable to product summary business functions\n */\nvar ProductSummaryPrivilege;\n(function (ProductSummaryPrivilege) {\n    ProductSummaryPrivilege[\"VIEW\"] = \"view\";\n    ProductSummaryPrivilege[\"EDIT\"] = \"edit\";\n})(ProductSummaryPrivilege || (ProductSummaryPrivilege = {}));\n/**\n * Displaying level of account aliases\n */\nvar AccountAliasDisplayingLevel;\n(function (AccountAliasDisplayingLevel) {\n    AccountAliasDisplayingLevel[\"ACCOUNT\"] = \"ACCOUNT\";\n    AccountAliasDisplayingLevel[\"USER\"] = \"USER\";\n})(AccountAliasDisplayingLevel || (AccountAliasDisplayingLevel = {}));\n/**\n * Duplicates validation settings from the `user-preferences` schema of fe-presentation-spec\n * TODO: remove these constants, when min/max length settings will be part of the generated client API\n */\nconst UserPreferencesValidationSettings = {\n    ALIAS_MAX_LENGTH: 50,\n};\n\n//TODO: check if this can be like id\nconst defaultArrangementName = '';\nconst WidgetProperty = {\n    BUSINESS_FUNCTION: 'businessFunction',\n    RESOURCE_NAME: 'resourceName',\n    PRIVILEGE_TYPE: 'privilege',\n    SIZE: 'size',\n    ACTIVE_VIEW: 'activeView',\n};\nconst SMALL_SCREEN_SIZE = 640;\nconst EXTRA_SMALL_SCREEN_SIZE = 576;\nconst DEFAULT_DEBOUNCE_TIME = 300;\nvar DefaultProductKindNameList;\n(function (DefaultProductKindNameList) {\n    DefaultProductKindNameList[\"CURRENT_ACCOUNT\"] = \"current-account\";\n    DefaultProductKindNameList[\"SAVINGS_ACCOUNT\"] = \"savings-account\";\n    DefaultProductKindNameList[\"TERM_DEPOSIT\"] = \"term-deposit\";\n    DefaultProductKindNameList[\"LOAN\"] = \"loan\";\n    DefaultProductKindNameList[\"CREDIT_CARD\"] = \"credit-card\";\n    DefaultProductKindNameList[\"DEBIT_CARD\"] = \"debit-card\";\n    DefaultProductKindNameList[\"INVESTMENT_ACCOUNT\"] = \"investment-account\";\n})(DefaultProductKindNameList || (DefaultProductKindNameList = {}));\nconst DefaultProductKindName = DefaultProductKindNameList.CURRENT_ACCOUNT;\nconst CardProductKindName = ['credit card', 'debit card'];\n/**\n * Default value for allowed navigation types per account,\n * by default all navigation types are allowed\n */\nconst DefaultAllowedNavigationTypes = [\n    AccountNavigationType.BALANCE_HISTORY,\n    AccountNavigationType.PAYMENTS,\n    AccountNavigationType.TRANSACTIONS,\n    AccountNavigationType.STATEMENTS,\n];\n\nconst getColorTrend = (index, series) => {\n    const serie = series[index];\n    if (serie.value === 0) {\n        if (index > 0) {\n            return getColorTrend(index - 1, series);\n        }\n        if (series.length > 1) {\n            return series[1].value < 0 ? -1 : 1;\n        }\n    }\n    if (serie.value < 0) {\n        return -1;\n    }\n    return 1;\n};\nconst getCurrentSeriesName = (trend) => (trend === -1 ? 'negative' : 'positive');\nconst getFirstSeries = (datum, trend) => [\n    {\n        name: getCurrentSeriesName(trend),\n        series: [datum],\n    },\n];\nconst createNewSeries = (result, lastResult, series, trend) => {\n    const lastName = lastResult.series[lastResult.series.length - 1].name;\n    const lastValue = lastResult.series[lastResult.series.length - 1].value;\n    const valuesSum = Math.abs(lastValue) + Math.abs(series.value);\n    const step = series.name.getTime() - lastName.getTime();\n    const valuesRatio = Math.abs(lastValue) / valuesSum;\n    const prevValue = lastResult.series[lastResult.series.length - 1].value;\n    const crossingPoint = { name: new Date(lastName.getTime() + step * valuesRatio), value: 0 };\n    const crossPointSection = prevValue ? [crossingPoint] : [];\n    return [\n        ...result.slice(0, -1),\n        {\n            name: lastResult.name,\n            series: [...lastResult.series, ...crossPointSection],\n        },\n        {\n            name: getCurrentSeriesName(trend),\n            series: [crossingPoint, series],\n        },\n    ];\n};\nconst concatExistingSeries = (result, lastResult, series) => {\n    const name = lastResult.name;\n    return [\n        ...result.slice(0, -1),\n        {\n            name,\n            series: [...lastResult.series, series],\n        },\n    ];\n};\nconst splitDataByTrend = (series) => series.reduce((result, seriesData, i) => {\n    const currentTrend = getColorTrend(i, series);\n    if (i === 0) {\n        return getFirstSeries(seriesData, currentTrend);\n    }\n    const previousTrend = getColorTrend(i - 1, series);\n    const lastResult = result[result.length - 1];\n    if (previousTrend === currentTrend) {\n        return concatExistingSeries(result, lastResult, seriesData);\n    }\n    else {\n        return createNewSeries(result, lastResult, seriesData, currentTrend);\n    }\n}, []);\n\nclass BalanceHistoryNotFound {\n    constructor(response) {\n        this.response = response;\n        this.kind = 'BalanceHistoryNotFound';\n        this.messages = ((response.error || {}).errors || []).map((e) => e.message);\n    }\n}\nclass BalanceHistoryBadRequest {\n    constructor(response) {\n        this.response = response;\n        this.kind = 'BalanceHistoryBadRequest';\n        this.messages = ((response.error || {}).errors || []).map((e) => e.message);\n    }\n}\nclass BalanceHistoryAccessDenied {\n    constructor(response) {\n        this.response = response;\n        this.kind = 'BalanceHistoryAccessDenied';\n        this.messages = ((response.error || {}).errors || []).map((e) => e.message);\n    }\n}\nclass BalanceHistoryUnknownError {\n    constructor(response) {\n        this.response = response;\n        this.kind = 'BalanceHistoryUnknownError';\n        this.messages = [response.message];\n    }\n}\nclass BalanceHistoryConnectivityError {\n    constructor(response) {\n        this.response = response;\n        this.kind = 'BalanceHistoryConnectivityError';\n        this.messages = ((response.error || {}).errors || []).map((e) => e.message);\n    }\n}\nconst parseBalanceHistoryError = (error) => {\n    if (error.error instanceof ErrorEvent) {\n        return new BalanceHistoryUnknownError(error);\n    }\n    else {\n        switch (error.status) {\n            case 0:\n                return new BalanceHistoryConnectivityError(error);\n            case 401:\n                return new BalanceHistoryAccessDenied(error);\n            case 403:\n                return new BalanceHistoryAccessDenied(error);\n            case 400:\n                return new BalanceHistoryBadRequest(error);\n            case 404:\n                return new BalanceHistoryNotFound(error);\n            default:\n                return new BalanceHistoryUnknownError(error);\n        }\n    }\n};\n\nclass BalanceHistoryCommonService {\n    constructor(accountDataService) {\n        this.accountDataService = accountDataService;\n        this.reportDefaultFileName = {\n            [BalanceHistoryExportFormat.CSV]: 'balance-history.csv',\n            [BalanceHistoryExportFormat.JSON]: 'balance-history.json',\n        };\n        this.requestObjectSeries = new ReplaySubject(1);\n        this.requestObjectPaginated = new ReplaySubject(1);\n        this.errorSeries = new BehaviorSubject(undefined);\n        this.errorPaginated = new BehaviorSubject(undefined);\n        this.loadingPaginated = new BehaviorSubject(true);\n        this.loadingSeries = new BehaviorSubject(true);\n        this.balanceHistorySeries = this.requestObjectSeries.pipe(distinctUntilChanged(), filter(param => !!param.arrangementIds), tap(() => this.loadingSeries.next(true)), tap(() => this.errorSeries.next(undefined)), switchMap(res => this.getBalanceHistorySeries(res).pipe(catchError((errorSeries) => {\n            this.errorSeries.next(errorSeries);\n            return of(undefined);\n        }))), tap(() => this.loadingSeries.next(false)));\n        this.balanceHistoryPaginated = this.requestObjectPaginated.pipe(distinctUntilChanged(), filter(param => !!param.arrangementId), tap(() => this.loadingPaginated.next(true)), tap(() => this.errorPaginated.next(undefined)), switchMap(res => this.getBalanceHistoryPaginated(res).pipe(catchError((errorPaginated) => {\n            this.errorPaginated.next(errorPaginated);\n            return of({\n                count: 0,\n                items: [],\n                params: res,\n            });\n        }))), scan((acc, curr) => ({\n            count: curr.count,\n            items: this.responsesMerge(acc, curr),\n            params: curr.params,\n        })), tap(() => this.loadingPaginated.next(false)));\n    }\n    getBalanceHistorySeries(request) {\n        const parameters = this.getBalanceHistoryRequestParameters(request);\n        return this.accountDataService.getBalanceHistory(parameters).pipe(catchError((error) => {\n            throw parseBalanceHistoryError(error);\n        }));\n    }\n    getBalanceHistoryPaginated(request) {\n        const paginationType = request.params ? request.params.paginationType || '' : '';\n        const from = request.params ? request.params.from || 0 : 0;\n        const parameters = this.getBalanceHistoryForArrangementRequestParameters(request);\n        return this.accountDataService.getBalanceHistoryForArrangement(parameters, HttpResponseType.RESPONSE).pipe(map((res) => this.mapResponseWithCount(res, { from, paginationType })), catchError((error) => {\n            throw parseBalanceHistoryError(error);\n        }));\n    }\n    loadBalanceHistorySeries(requestObjectSeries) {\n        requestObjectSeries.subscribe(this.requestObjectSeries);\n    }\n    loadBalanceHistoryPaginated(requestObjectPaginated) {\n        requestObjectPaginated.subscribe(this.requestObjectPaginated);\n    }\n    /**\n     * Returns URL for fetching balance history data\n     *\n     * @param format\n     * @param exportParameters\n     */\n    exportBalanceHistory(format, exportParameters) {\n        const parameters = this.getBalanceHistoryRequestParameters(exportParameters, format);\n        return this.accountDataService.getBalanceHistoryUrl(parameters);\n    }\n    /**\n     * Fetches balance history data in one of the available formats\n     *\n     * @param format\n     * @param exportParameters\n     */\n    getBalanceHistory(format, exportParameters) {\n        const parameters = this.getBalanceHistoryRequestParameters(exportParameters, format);\n        const options = { httpHeaderAccept: format };\n        return this.accountDataService.getBalanceHistory(parameters, HttpResponseType.RESPONSE, false, options).pipe(map(({ headers, body }) => {\n            const defaultFileName = this.reportDefaultFileName[format];\n            const fileNameInHeaders = this.getFileNameFromHeaders(headers);\n            return { name: fileNameInHeaders || defaultFileName, content: body };\n        }));\n    }\n    responsesMerge(acc, current) {\n        if (acc &&\n            acc.items &&\n            current &&\n            current.items &&\n            acc.params.paginationType === PaginationType.LOAD_MORE &&\n            current.params.from !== 0) {\n            return [...acc.items, ...current.items];\n        }\n        return current.items;\n    }\n    processBalanceHistory(balanceHistory) {\n        const [balanceHistoryItem] = balanceHistory.items;\n        const defaultSeries = {\n            name: defaultArrangementName,\n            series: balanceHistoryItem.balanceHistory.map(({ dateTo, value, valuePtc }) => ({\n                name: new Date(dateTo),\n                value: (value ? value.balance : valuePtc),\n            })),\n        };\n        return defaultSeries ? splitDataByTrend(defaultSeries.series) : [];\n    }\n    mapResponseWithCount(response, { from, paginationType }) {\n        // eslint-disable-next-line no-null/no-null\n        if (response.body === null) {\n            throw new Error();\n        }\n        const headerCount = response.headers ? response.headers.get('x-total-count') : undefined;\n        const counter = headerCount ? parseInt(headerCount, 10) : response.body.length || 0;\n        return {\n            count: counter,\n            items: response.body,\n            params: { from, paginationType },\n        };\n    }\n    getBalanceHistoryRequestParameters({ arrangementIds, params }, requestFormat) {\n        const format = requestFormat !== null && requestFormat !== void 0 ? requestFormat : params.format;\n        return Object.assign({ arrangementIds }, this.toRequestParameters(Object.assign(Object.assign({}, params), { format })));\n    }\n    getBalanceHistoryForArrangementRequestParameters({ arrangementId, params, }) {\n        const format = undefined;\n        return Object.assign({ arrangementId }, this.toRequestParameters(Object.assign(Object.assign({}, params), { format })));\n    }\n    toRequestParameters(params) {\n        const requestParameters = Object.assign(Object.assign({}, params), { timePeriod: params.timePeriod });\n        delete requestParameters.paginationType;\n        if (!requestParameters.format) {\n            delete requestParameters.format;\n        }\n        if (requestParameters.timePeriod) {\n            delete requestParameters.dateFrom;\n            delete requestParameters.dateTo;\n        }\n        else {\n            delete requestParameters.timePeriod;\n        }\n        return requestParameters;\n    }\n    getFileNameFromHeaders(headers) {\n        const contentDisposition = (headers && headers.get('content-disposition')) || '';\n        const contentDispositionWithoutQuotes = contentDisposition.replace(/['\"]*/g, '');\n        return (contentDispositionWithoutQuotes.match(/filename[^;=\\n]*=([^;\\n]*)/) || [])[1];\n    }\n}\nBalanceHistoryCommonService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BalanceHistoryCommonService, deps: [{ token: i1.AccountsHttpService }], target: i0.ɵɵFactoryTarget.Injectable });\nBalanceHistoryCommonService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BalanceHistoryCommonService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BalanceHistoryCommonService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.AccountsHttpService }]; } });\n\nclass AccountsOverviewNotFound {\n    constructor(response) {\n        this.response = response;\n        this.kind = 'AccountsOverviewNotFound';\n        this.messages = ((response.error || {}).errors || []).map((e) => e.message);\n    }\n}\nclass AccountsOverviewBadRequest {\n    constructor(response) {\n        this.response = response;\n        this.kind = 'AccountsOverviewBadRequest';\n        this.messages = ((response.error || {}).errors || []).map((e) => e.message);\n    }\n}\nclass AccountsOverviewAccessDenied {\n    constructor(response) {\n        this.response = response;\n        this.kind = 'AccountsOverviewAccessDenied';\n        this.messages = ((response.error || {}).errors || []).map((e) => e.message);\n    }\n}\nclass AccountsOverviewUnknownError {\n    constructor(response) {\n        this.response = response;\n        this.kind = 'AccountsOverviewUnknownError';\n        this.messages = [response.message];\n    }\n}\nclass AccountsOverviewConnectivityError {\n    constructor(response) {\n        this.response = response;\n        this.kind = 'AccountsOverviewConnectivityError';\n        this.messages = ((response.error || {}).errors || []).map((e) => e.message);\n    }\n}\nconst parseError = (error) => {\n    if (error.error instanceof ErrorEvent) {\n        return new AccountsOverviewUnknownError(error);\n    }\n    else {\n        switch (error.status) {\n            case 0:\n                return new AccountsOverviewConnectivityError(error);\n            case 401:\n                return new AccountsOverviewAccessDenied(error);\n            case 403:\n                return new AccountsOverviewAccessDenied(error);\n            case 400:\n                return new AccountsOverviewBadRequest(error);\n            case 404:\n                return new AccountsOverviewNotFound(error);\n            default:\n                return new AccountsOverviewUnknownError(error);\n        }\n    }\n};\n\nconst bbEventToggleAccountFavoriteUpdate = 'bb.event.toggle-account-favorite.update';\nclass ProductSummaryAccountsService {\n    constructor(productSummaryDataService, accountDataService, balancesHttpService, notificationService, pubSub) {\n        this.productSummaryDataService = productSummaryDataService;\n        this.accountDataService = accountDataService;\n        this.balancesHttpService = balancesHttpService;\n        this.notificationService = notificationService;\n        this.pubSub = pubSub;\n        this.requestObject = new ReplaySubject(1);\n        this.favoriteRequestComplete = new BehaviorSubject(true);\n        this.updateError = new BehaviorSubject(undefined);\n        this.error = new BehaviorSubject(undefined);\n        this.loading = new BehaviorSubject(true);\n        this.aggregatedBalancesErrorSubject = new BehaviorSubject(undefined);\n        this.aggregatedBalancesError = this.aggregatedBalancesErrorSubject.asObservable();\n        this.loadingAggregatedBalancesSubject = new BehaviorSubject(false);\n        this.loadingAggregatedBalances = this.loadingAggregatedBalancesSubject.asObservable();\n        this.refreshAggregatedBalancesSubject = new BehaviorSubject(false);\n        this.accountsList = combineLatest([\n            this.requestObject,\n            this.favoriteRequestComplete,\n        ]).pipe(distinctUntilChanged(), tap(() => this.loading.next(true)), switchMap(([requestObject]) => this.getAccounts(requestObject)), scan((acc, curr) => ({\n            count: curr.count,\n            items: this.mergeResponses(acc, curr),\n            params: curr.params,\n        })), tap(() => this.error.next(undefined)), catchError((error) => {\n            this.error.next(error);\n            return of(undefined);\n        }), tap(() => this.loading.next(false)));\n        this.aggregatedBalances = combineLatest([\n            this.refreshAggregatedBalancesSubject,\n        ]).pipe(tap(() => this.loadingAggregatedBalancesSubject.next(true)), switchMap(() => this.getAggregatedBalances()), tap(() => this.loadingAggregatedBalancesSubject.next(false)));\n        this.pubSub.subscribe(bbEventToggleAccountFavoriteUpdate, this.retriggerGetAccounts.bind(this));\n    }\n    getAccountById(arrangementId) {\n        return this.accountDataService.getArrangementById({ arrangementId });\n    }\n    /**\n     * Fetches an unmasked attribute for the given `UnmaskedAttributeRequestParams`\n     *\n     * @param requestParameters\n     */\n    getUnmaskedAttribute(requestParameters) {\n        return this.accountDataService.unmaskedAttribute(requestParameters, 'body', false, {\n            httpHeaderAccept: 'text/plain',\n        });\n    }\n    toggleAccountFavorite(body, errorTemplateRef, successTemplateRef) {\n        return this.putAccountFavorite(body).pipe(take(1), tap(() => {\n            this.showNotification(successTemplateRef, 'success');\n            this.updateError.next(undefined);\n            this.pubSub.publish(bbEventToggleAccountFavoriteUpdate, undefined);\n        }), catchError((error) => {\n            this.updateError.next(error);\n            this.showNotification(errorTemplateRef, 'error');\n            return of(undefined);\n        }));\n    }\n    putAccountFavorite(accountUserPreferences) {\n        return this.accountDataService.updateUserPreferences({ accountUserPreferences }).pipe(catchError((error) => {\n            throw parseError(error);\n        }));\n    }\n    getAccounts(requestObject) {\n        const paginationType = requestObject.paginationType || '';\n        const from = requestObject.from || 0;\n        const params = Object.assign({}, requestObject);\n        delete params.paginationType;\n        return this.productSummaryDataService.getArrangementsByBusinessFunction(params, HttpResponseType.RESPONSE).pipe(map(res => this.mapResponseWithCount(res, { from, paginationType })), catchError((error) => {\n            throw parseError(error);\n        }));\n    }\n    mapResponseWithCount(response, { from, paginationType }) {\n        // eslint-disable-next-line no-null/no-null\n        if (response.body === null) {\n            throw new Error();\n        }\n        const headerCount = response.headers ? response.headers.get('x-total-count') : undefined;\n        const counter = headerCount ? parseInt(headerCount, 10) : response.body.length || 0;\n        return {\n            count: counter,\n            items: response.body || [],\n            params: { from, paginationType },\n        };\n    }\n    mergeResponses(acc, current) {\n        if (acc &&\n            acc.items &&\n            current &&\n            current.items &&\n            acc.params.paginationType === PaginationType.LOAD_MORE &&\n            current.params.from !== 0) {\n            return [...acc.items, ...current.items];\n        }\n        return current.items;\n    }\n    showNotification(templateRef, modifier) {\n        this.notificationService.showNotification({\n            header: templateRef,\n            modifier,\n            message: '',\n        });\n    }\n    getAccountsFrom(requestObject) {\n        requestObject.subscribe(this.requestObject);\n    }\n    refreshAggregatedBalances() {\n        this.refreshAggregatedBalancesSubject.next(true);\n    }\n    getAggregatedBalances() {\n        const requestParameters = {};\n        return this.balancesHttpService.getAggregations(requestParameters).pipe(map(response => this.mapResponseToAggregatedBalances(response)), tap(() => this.aggregatedBalancesErrorSubject.next(undefined)), catchError(error => this.parseAggregatedBalanceError(error)));\n    }\n    mapResponseToAggregatedBalances(aggregations) {\n        const allBalances = (aggregations || [{}])[0];\n        return allBalances && allBalances.aggregatedBalances;\n    }\n    parseAggregatedBalanceError(error) {\n        this.aggregatedBalancesErrorSubject.next(error);\n        return of(undefined);\n    }\n    retriggerGetAccounts() {\n        this.favoriteRequestComplete.next(true);\n    }\n}\nProductSummaryAccountsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductSummaryAccountsService, deps: [{ token: i1.ProductSummaryHttpService }, { token: i1.ArrangementsHttpService }, { token: i1.BalancesHttpService }, { token: i2.NotificationService }, { token: PUBSUB }], target: i0.ɵɵFactoryTarget.Injectable });\nProductSummaryAccountsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductSummaryAccountsService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductSummaryAccountsService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.ProductSummaryHttpService }, { type: i1.ArrangementsHttpService }, { type: i1.BalancesHttpService }, { type: i2.NotificationService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PUBSUB]\n                }] }]; } });\n\nconst toKebabCase = (accountType = '') => accountType ? accountType.trim().toLowerCase().split(' ').join('-') : '';\nconst isCardNumber = (account) => Boolean(account.productKindName && CardProductKindName.includes(account.productKindName.toLowerCase()));\nconst modelItemToBoolean = (value) => {\n    if (typeof value === 'boolean') {\n        return value;\n    }\n    return value === 'true';\n};\nconst isFavorite = (account) => {\n    const accountPreferencesFavoriteValue = account.userPreferences && account.userPreferences.favorite;\n    const accountFavoriteValue = 'favorite' in account ? account.favorite : undefined;\n    return accountPreferencesFavoriteValue !== null && accountPreferencesFavoriteValue !== void 0 ? accountPreferencesFavoriteValue : accountFavoriteValue;\n};\nconst isProductVisible = (product) => {\n    if (product.userPreferences && product.userPreferences.visible !== undefined) {\n        return product.userPreferences.visible;\n    }\n    else if (product.visible !== undefined) {\n        return product.visible;\n    }\n    return true;\n};\nconst isFunction = (param) => typeof param === 'function';\nconst findBy = (collection, key, value) => collection.find(item => item && item[key] === value);\nconst findByName = (collection, name) => findBy(collection, 'name', name);\nconst getAccountAlias = (account) => {\n    if (account.userPreferences) {\n        return account.userPreferences.alias ? account.userPreferences.alias : account.bankAlias || account.name;\n    }\n    else {\n        return account.bankAlias || account.name || ''; // todo: replace with `??` typesScript is upgraded to 3.7.0\n    }\n};\nconst getProductKindIconName = (productKindName) => {\n    let iconName = toKebabCase(productKindName);\n    const isDefaultProductKindName = Object.values(DefaultProductKindNameList).some(name => iconName === name);\n    if (!isDefaultProductKindName) {\n        iconName = 'account';\n    }\n    return `${iconName}s`;\n};\n/**\n * Gets a valid product number type for a given product\n *\n * @param product\n *\n * for CreditCard/DebitCard:\n * - returns `number` if exists\n * - else `IBAN` if exists\n * - otherwise `BBAN`\n * for other products:\n * - returns `IBAN` if exists\n * - else `BBAN` if exists\n * - otherwise `number`\n */\nconst getProductNumberType = (product) => {\n    const isCardFormat = isCardNumber(product);\n    if (isCardFormat && 'number' in product) {\n        return 'cardNumber';\n    }\n    else if ('IBAN' in product) {\n        return 'iban';\n    }\n    else if ('BBAN' in product || isCardFormat) {\n        return 'bban';\n    }\n    else {\n        return 'cardNumber';\n    }\n};\nconst processErrorMessages = (messages) => messages ? messages.join(' ') : undefined;\n/**\n * Sets the passed unmasked attribute to the item\n *\n * @param item\n * @param attributeName\n * @param attributeValue\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst setAttribute = (item, attributeName, attributeValue) => (Object.assign(Object.assign({}, (item ? item : {})), (attributeName ? { [attributeName]: attributeValue } : {})));\n/**\n * Verifies if values is defined (not null and not undefined)\n *\n * @param value\n */\n// eslint-disable-next-line no-null/no-null\nconst isDefined = (value) => value !== null && value !== undefined;\n/**\n * Returns configuration property based on the priority\n */\nconst filterInputParameters = (input, prop) => combineLatest([input, prop]).pipe(map(([inputVal, propVal]) => (inputVal !== undefined ? inputVal : propVal)));\n/**\n * Caches the request (shares between subscribers)\n *\n * @param request\n */\nconst cacheRequest = (request) => (source) => source.pipe(switchMap(request), publishReplay(1), refCount());\n/**\n * Returns route parameter\n * takes parameter from component route if parameter exists, otherwise looks for parameter in parent routes\n *\n * @param route\n * @param param\n */\nconst getRouteParameter = (route, param) => {\n    const routeParam = route.paramMap.pipe(pluck('params', param));\n    const allParams = route.parent ? [routeParam, getRouteParameter(route.parent, param)] : [routeParam];\n    return combineLatest(allParams).pipe(map(params => params[0] || params[1]), map(value => value !== null && value !== void 0 ? value : ''));\n};\n/**\n * Returns true if product has external info (external logo, alias, etc.)\n *\n * @param product\n */\nconst hasExternalInfo = (product) => product.financialInstitutionId !== undefined;\n\n/**\n * A service for getting external info for products\n */\nclass ProductsExternalInfoService {\n    constructor(financialInstitutionsHttpService) {\n        this.financialInstitutionsHttpService = financialInstitutionsHttpService;\n    }\n    getProductsWithExternalInfo(products) {\n        const productsList = Array.isArray(products) ? products : [products];\n        const financialInstitutionIds = this.getAssignedFinancialInstitutionIds(productsList);\n        return financialInstitutionIds.length\n            ? this.getFinancialInstitutions(financialInstitutionIds).pipe(map(institutions => Array.isArray(products)\n                ? productsList.map(product => this.addExternalInfoToProduct(product, institutions))\n                : this.addExternalInfoToProduct(products, institutions)))\n            : of(products);\n    }\n    getAssignedFinancialInstitutionIds(items) {\n        const itemsWithExternalInfo = items.filter(hasExternalInfo);\n        const financialInstitutionIds = itemsWithExternalInfo.map(item => item.financialInstitutionId);\n        return financialInstitutionIds.filter((item, index) => financialInstitutionIds.indexOf(item, index + 1) === -1);\n    }\n    addExternalInfoToProduct(product, institutions) {\n        return Object.assign(Object.assign({}, product), this.getExternalInfo(product, institutions));\n    }\n    getExternalInfo(product, institutions) {\n        const isExternalInfoAvailable = hasExternalInfo(product);\n        return isExternalInfoAvailable\n            ? { financialInstitution: institutions.find(institution => institution.id === product.financialInstitutionId) }\n            : {};\n    }\n    getFinancialInstitutions(ids) {\n        return this.financialInstitutionsHttpService.getFinancialInstitutions({ ids }).pipe(pluck('financialInstitutions'));\n    }\n}\nProductsExternalInfoService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductsExternalInfoService, deps: [{ token: i1$1.FinancialInstitutionManagerClientHttpService }], target: i0.ɵɵFactoryTarget.Injectable });\nProductsExternalInfoService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductsExternalInfoService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductsExternalInfoService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.FinancialInstitutionManagerClientHttpService }]; } });\n\nclass ProductSummaryUserPermissionsService {\n    constructor(usersDataService) {\n        this.usersDataService = usersDataService;\n        this.productSummaryPermissionParameters = {\n            resourceName: 'Product Summary',\n            functionName: 'Product Summary',\n        };\n        this.manageArrangementsPermissionParameters = {\n            resourceName: 'Product Summary',\n            functionName: 'Manage Arrangement Alias',\n        };\n        this.productSummaryPrivileges = this.usersDataService.getUserPrivileges(this.productSummaryPermissionParameters).pipe(map(privileges => privileges.map(({ privilege }) => privilege)), shareReplay());\n        this.managerArrangementsPrivileges = this.usersDataService.getUserPrivileges(this.manageArrangementsPermissionParameters).pipe(map(privileges => privileges.map(({ privilege }) => privilege)), shareReplay());\n        this.hasFullViewPermission = this.productSummaryPrivileges.pipe(map(privileges => privileges.includes(ProductSummaryPrivilege.VIEW)), shareReplay());\n        this.hasFullEditPermission = this.productSummaryPrivileges.pipe(map(privileges => privileges.includes(ProductSummaryPrivilege.EDIT)), shareReplay());\n        this.hasArrangementAliasEditPermission = this.managerArrangementsPrivileges.pipe(map(privileges => privileges.includes(ProductSummaryPrivilege.EDIT)), shareReplay());\n        this.allowedAccountNavigationTypes = this.hasFullViewPermission.pipe(map(hasFullViewPermission => hasFullViewPermission\n            ? DefaultAllowedNavigationTypes\n            : DefaultAllowedNavigationTypes.filter(type => type !== AccountNavigationType.BALANCE_HISTORY)), shareReplay());\n    }\n}\nProductSummaryUserPermissionsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductSummaryUserPermissionsService, deps: [{ token: i1$2.UsersHttpService }], target: i0.ɵɵFactoryTarget.Injectable });\nProductSummaryUserPermissionsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductSummaryUserPermissionsService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductSummaryUserPermissionsService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$2.UsersHttpService }]; } });\n\n/** @dynamic */\nclass ProductSummaryWidgetPropertiesService {\n    /**\n     * @internal\n     * @param defaultConfiguration\n     * @param itemModel\n     */\n    constructor(defaultConfiguration, itemModel) {\n        this.defaultConfiguration = defaultConfiguration;\n        this.itemModel = itemModel;\n        /**\n         * Widget properties configuration\n         */\n        this.configuration = new BehaviorSubject({});\n        /**\n         * Gets a property value for each value in `propertyNames` input,\n         * joins them into `WidgetProperties` structure\n         */\n        const propertyNames = Object.keys(defaultConfiguration);\n        this.properties = combineLatest(propertyNames.map(propertyName => this.getWidgetProperty(propertyName))).pipe(map(properties => propertyNames.reduce((widgetProperties, propertyName, index) => (Object.assign(Object.assign({}, widgetProperties), { [propertyName]: properties[index] })), {})));\n    }\n    /**\n     * Sets widget properties\n     *\n     * @param config\n     */\n    setConfiguration(config) {\n        this.configuration.next(config);\n    }\n    /**\n     * Returns observable with a widget property\n     *\n     * @param propertyName\n     */\n    getProperty(propertyName) {\n        return this.properties.pipe(map(properties => properties[propertyName]));\n    }\n    /**\n     * Returns a widget configuration property,\n     * takes the value in the following order:\n     * - configuration value if exists (widget input)\n     * - item-model value if exists (CXP configuration)\n     * - default value (constant value)\n     */\n    getWidgetProperty(propertyName) {\n        const defaultValue = this.defaultConfiguration[propertyName];\n        const configurationValue$ = this.configuration.pipe(map(configuration => configuration[propertyName]));\n        const modelValue$ = this.itemModel\n            ? this.itemModel.property(propertyName, defaultValue)\n            : of(defaultValue);\n        return combineLatest([configurationValue$, modelValue$]).pipe(map(([configurationValue, modelValue]) => (configurationValue !== undefined ? configurationValue : modelValue)));\n    }\n}\nProductSummaryWidgetPropertiesService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductSummaryWidgetPropertiesService, deps: [{ token: PRODUCT_SUMMARY_WIDGET_PROPERTIES }, { token: i1$3.ItemModel, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nProductSummaryWidgetPropertiesService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductSummaryWidgetPropertiesService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductSummaryWidgetPropertiesService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PRODUCT_SUMMARY_WIDGET_PROPERTIES]\n                }] }, { type: i1$3.ItemModel, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst CurrencyToCountryMap = {\n    BDT: 'BD',\n    EUR: 'EU',\n    XOF: 'TG',\n    BGN: 'BG',\n    BAM: 'BA',\n    BBD: 'BB',\n    XPF: 'NC',\n    BMD: 'BM',\n    BND: 'BN',\n    BOB: 'BO',\n    BHD: 'BH',\n    BIF: 'BI',\n    BTN: 'BT',\n    JMD: 'JM',\n    NOK: 'NO',\n    BWP: 'BW',\n    WST: 'WS',\n    USD: 'US',\n    BRL: 'BR',\n    BSD: 'BS',\n    GBP: 'IM',\n    BYR: 'BY',\n    BZD: 'BZ',\n    RUB: 'RU',\n    RWF: 'RW',\n    RSD: 'RS',\n    TMT: 'TM',\n    TJS: 'TJ',\n    RON: 'RO',\n    NZD: 'CK',\n    GTQ: 'GT',\n    XAF: 'TD',\n    JPY: 'JP',\n    GYD: 'GY',\n    GEL: 'GE',\n    XCD: 'AI',\n    GNF: 'GN',\n    GMD: 'GM',\n    DKK: 'DK',\n    GIP: 'GI',\n    GHS: 'GH',\n    OMR: 'OM',\n    TND: 'TN',\n    JOD: 'JO',\n    HRK: 'HR',\n    HTG: 'HT',\n    HUF: 'HU',\n    HKD: 'HK',\n    HNL: 'HN',\n    AUD: 'AU',\n    VEF: 'VE',\n    ILS: 'IL',\n    PYG: 'PY',\n    IQD: 'IQ',\n    PAB: 'PA',\n    PGK: 'PG',\n    PEN: 'PE',\n    PKR: 'PK',\n    PHP: 'PH',\n    PLN: 'PL',\n    ZMK: 'ZM',\n    MAD: 'MA',\n    EGP: 'EG',\n    ZAR: 'ZA',\n    VND: 'VN',\n    SBD: 'SB',\n    ETB: 'ET',\n    SOS: 'SO',\n    ZWL: 'ZW',\n    SAR: 'SA',\n    ERN: 'ER',\n    MDL: 'MD',\n    MGA: 'MG',\n    UZS: 'UZ',\n    MMK: 'MM',\n    MOP: 'MO',\n    MNT: 'MN',\n    MKD: 'MK',\n    MUR: 'MU',\n    MWK: 'MW',\n    MVR: 'MV',\n    MRO: 'MR',\n    UGX: 'UG',\n    TZS: 'TZ',\n    MYR: 'MY',\n    MXN: 'MX',\n    SHP: 'SH',\n    FJD: 'FJ',\n    FKP: 'FK',\n    NIO: 'NI',\n    NAD: 'NA',\n    VUV: 'VU',\n    NGN: 'NG',\n    NPR: 'NP',\n    CHF: 'LI',\n    COP: 'CO',\n    CNY: 'CN',\n    CLP: 'CL',\n    CAD: 'CA',\n    CDF: 'CD',\n    CZK: 'CZ',\n    CRC: 'CR',\n    ANG: 'SX',\n    CVE: 'CV',\n    CUP: 'CU',\n    SZL: 'SZ',\n    SYP: 'SY',\n    KGS: 'KG',\n    KES: 'KE',\n    SSP: 'SS',\n    SRD: 'SR',\n    KHR: 'KH',\n    KMF: 'KM',\n    STD: 'ST',\n    KRW: 'KR',\n    KPW: 'KP',\n    KWD: 'KW',\n    SLL: 'SL',\n    SCR: 'SC',\n    KZT: 'KZ',\n    KYD: 'KY',\n    SGD: 'SG',\n    SEK: 'SE',\n    SDG: 'SD',\n    DOP: 'DO',\n    DJF: 'DJ',\n    YER: 'YE',\n    DZD: 'DZ',\n    UYU: 'UY',\n    LBP: 'LB',\n    LAK: 'LA',\n    TWD: 'TW',\n    TTD: 'TT',\n    TRY: 'TR',\n    LKR: 'LK',\n    TOP: 'TO',\n    LTL: 'LT',\n    LRD: 'LR',\n    LSL: 'LS',\n    THB: 'TH',\n    LYD: 'LY',\n    AED: 'AE',\n    AFN: 'AF',\n    ISK: 'IS',\n    IRR: 'IR',\n    AMD: 'AM',\n    ALL: 'AL',\n    AOA: 'AO',\n    ARS: 'AR',\n    AWG: 'AW',\n    INR: 'IN',\n    AZN: 'AZ',\n    IDR: 'ID',\n    UAH: 'UA',\n    QAR: 'QA',\n    MZN: 'MZ',\n};\n\nconst balanceHistorySeriesMock = {\n    items: [\n        {\n            arrangementId: '3cdb2224-8926-4b4d-a99f-1c9dfbbb4699',\n            balanceHistory: [\n                {\n                    dateFrom: '2017-05-10T00:00:00.000Z',\n                    dateTo: '2017-06-01T00:00:00.000Z',\n                    value: {\n                        currency: 'EUR',\n                        balance: '12',\n                    },\n                    valuePtc: '12',\n                },\n                {\n                    dateFrom: '2017-05-11T00:00:00Z',\n                    dateTo: '2017-06-01T00:00:00Z',\n                    value: {\n                        currency: 'EUR',\n                        balance: '22',\n                    },\n                    valuePtc: '22',\n                },\n                {\n                    dateFrom: '2017-05-23T00:00:00+0000',\n                    dateTo: '2017-06-01T00:00:00+0000',\n                    value: {\n                        currency: 'EUR',\n                        balance: '32',\n                    },\n                    valuePtc: '32',\n                },\n                {\n                    dateFrom: '2017-06-01T00:00:00.000Z',\n                    dateTo: '2017-06-01T00:00:00.000Z',\n                    value: {\n                        currency: 'EUR',\n                        balance: '54',\n                    },\n                    valuePtc: '54',\n                },\n                {\n                    dateFrom: '2017-06-02T00:00:00.000Z',\n                    dateTo: '2017-06-01T00:00:00.000Z',\n                    value: {\n                        currency: 'EUR',\n                        balance: '34',\n                    },\n                    valuePtc: '34',\n                },\n                {\n                    dateFrom: '2017-06-12T00:00:00.000Z',\n                    dateTo: '2017-06-01T00:00:00.000Z',\n                    value: {\n                        currency: 'EUR',\n                        balance: '4',\n                    },\n                    valuePtc: '4',\n                },\n                {\n                    dateFrom: '2017-06-18T00:00:00.000Z',\n                    dateTo: '2017-06-01T00:00:00.000Z',\n                    value: {\n                        currency: 'EUR',\n                        balance: '-14',\n                    },\n                    valuePtc: '-14',\n                },\n            ],\n        },\n    ],\n};\nconst balanceHistoryPaginatedMock = [\n    {\n        dateFrom: '2017-05-10T00:00:00.000Z',\n        dateTo: '2017-06-01T00:00:00.000Z',\n        value: {\n            currency: 'EUR',\n            balance: '12',\n        },\n        valuePtc: '12',\n    },\n    {\n        dateFrom: '2017-05-11T00:00:00.000Z',\n        dateTo: '2017-06-01T00:00:00.000Z',\n        value: {\n            currency: 'EUR',\n            balance: '22',\n        },\n        valuePtc: '22',\n    },\n    {\n        dateFrom: '2017-05-23T00:00:00.000Z',\n        dateTo: '2017-06-01T00:00:00.000Z',\n        value: {\n            currency: 'EUR',\n            balance: '32',\n        },\n        valuePtc: '32',\n    },\n    {\n        dateFrom: '2017-06-01T00:00:00.000Z',\n        dateTo: '2017-06-01T00:00:00.000Z',\n        value: {\n            currency: 'EUR',\n            balance: '54',\n        },\n        valuePtc: '54',\n    },\n    {\n        dateFrom: '2017-06-02T00:00:00.000Z',\n        dateTo: '2017-07-01T00:00:00.000Z',\n        value: {\n            currency: 'EUR',\n            balance: '34',\n        },\n        valuePtc: '34',\n    },\n    {\n        dateFrom: '2017-06-12T00:00:00.000Z',\n        dateTo: '2017-07-01T00:00:00.000Z',\n        value: {\n            currency: 'EUR',\n            balance: '4',\n        },\n        valuePtc: '4',\n    },\n    {\n        dateFrom: '2017-06-18T00:00:00.000Z',\n        dateTo: '2017-07-01T00:00:00.000Z',\n        value: {\n            currency: 'EUR',\n            balance: '-14',\n        },\n        valuePtc: '-14',\n    },\n];\nconst balanceHistoryPaginatedMockWithCount = {\n    count: 3,\n    items: balanceHistoryPaginatedMock,\n    params: { from: 1, paginationType: 'load-more' },\n};\nconst emptyBalanceHistoryPaginatedMockWithCount = {\n    count: 0,\n    items: [],\n    params: { from: 0, paginationType: 'pagination' },\n};\nconst requestObjectMockSeries = {\n    arrangementIds: '1',\n    params: {\n        dateFrom: '2017-06-18',\n        dateTo: '2017-06-18',\n        timePeriod: '',\n        format: '',\n        paginationType: 'pagination',\n        from: 0,\n    },\n};\nconst requestObjectMockPaginated = {\n    arrangementId: '1',\n    params: {\n        dateFrom: '2017-06-18',\n        dateTo: '2017-06-18',\n        timePeriod: '',\n        format: '',\n        paginationType: 'pagination',\n        from: 0,\n    },\n};\nconst processedBalanceHistoryMock = [\n    {\n        name: defaultArrangementName,\n        series: [\n            {\n                name: new Date('2017-06-01T00:00:00.000Z'),\n                value: '12',\n            },\n            {\n                name: new Date('2017-06-01T00:00:00Z'),\n                value: '22',\n            },\n            {\n                name: new Date('2017-06-01T00:00:00+0000'),\n                value: '32',\n            },\n            {\n                name: new Date('2017-06-01T00:00:00.000Z'),\n                value: '54',\n            },\n            {\n                name: new Date('2017-06-01T00:00:00.000Z'),\n                value: '34',\n            },\n            {\n                name: new Date('2017-06-01T00:00:00.000Z'),\n                value: '4',\n            },\n            {\n                name: new Date('2017-06-01T00:00:00.000Z'),\n                value: 0,\n            },\n        ],\n    },\n    {\n        name: defaultArrangementName,\n        series: [\n            {\n                name: new Date('2017-06-01T00:00:00.000Z'),\n                value: 0,\n            },\n            {\n                name: new Date('2017-06-01T00:00:00.000Z'),\n                value: '-14',\n            },\n        ],\n    },\n];\nconst mockRequestObject = {\n    businessFunction: '',\n    resourceName: '',\n    privilege: '',\n    paginationType: PaginationType.LOAD_MORE,\n};\nconst mockAccountsResponse = [\n    {\n        id: '1cdb2224-8926-4b4d-a99f-1c9dfbbb4699',\n        externalArrangementId: 'kjh4567-asd1-11e7-b114-b2f933d50000',\n        externalLegalEntityId: 'COOOOO1',\n        externalProductId: '1234567',\n        name: 'Mr and Mrs J. Smith',\n        productKindName: 'Current Account',\n        bankAlias: 'Secret account',\n        bookedBalance: 100.1,\n        availableBalance: 100.2,\n        creditLimit: 100.3,\n        IBAN: 'GB29NWBK60161331926819',\n        BBAN: 'BBAN',\n        currency: 'EUR',\n        externalTransferAllowed: true,\n        urgentTransferAllowed: false,\n        accruedInterest: 2.2,\n        principalAmount: 100.4,\n        currentInvestmentValue: 100.5,\n        legalEntityIds: ['257da57a-11e4-4553-9175-54baf755069b', 'cd83683b-13f2-43d8-882b-39c9ab27d499'],\n        productId: '36c8fc42-ec97-4f83-8a7c-d622625007f3',\n        productTypeName: 'Current Account',\n        BIC: 'BICExample1',\n        bankBranchCode: 'bankBranchCode1',\n        accountOpeningDate: '2016-01-28T16:41:41.090Z',\n        accountInterestRate: 100.2,\n        valueDateBalance: 100.1,\n        creditLimitUsage: 100.3,\n        creditLimitInterestRate: 100.4,\n        creditLimitExpiryDate: '2019-09-28T16:41:41.090Z',\n        debitCards: [\n            {\n                number: '4578',\n                expiryDate: '2018-08-22T16:41:41.090Z',\n            },\n            {\n                number: '3241',\n                expiryDate: '2019-01-14T16:41:41.090Z',\n            },\n        ],\n        startDate: '2016-02-28T16:41:41.090Z',\n        termUnit: 'Y',\n        termNumber: 50,\n        maturityDate: '2017-02-28T16:41:41.090Z',\n        maturityAmount: 99.5,\n        autoRenewalIndicator: true,\n        interestPaymentFrequencyUnit: 'M',\n        interestPaymentFrequencyNumber: 15,\n        interestSettlementAccount: 'interestSettlementAccount1',\n        outstandingPrincipalAmount: 100.2,\n        monthlyInstalmentAmount: 100.1,\n        amountInArrear: 100.3,\n        minimumRequiredBalance: 80.4,\n        creditCardAccountNumber: '123456',\n        validThru: '2019-02-28T16:41:41.090Z',\n        applicableInterestRate: 101.2,\n        remainingCredit: 50,\n        outstandingPayment: 105.5,\n        minimumPayment: 51.1,\n        minimumPaymentDueDate: '2018-02-28T16:41:41.090Z',\n        totalInvestmentValue: 110.2,\n        accountHolderAddressLine1: 'accountHolderAddressLine11',\n        accountHolderAddressLine2: 'accountHolderAddressLine12',\n        creditAccount: true,\n        debitAccount: true,\n        visible: true,\n        lastUpdateDate: '2019-09-28T16:41:41.090Z',\n    },\n    {\n        id: '2222222-8926-4b4d-a99f-1c9dfbbb4610',\n        externalArrangementId: 'kjh4567-asd1-11e7-b114-b2f933d50000',\n        externalLegalEntityId: 'COOOOO1',\n        externalProductId: '1234567',\n        name: 'Mr and Mrs J. Smith second one',\n        productKindName: 'Current Account',\n        bankAlias: 'Secret account Mr and Mrs J. Smith second one',\n        bookedBalance: 100.1,\n        availableBalance: 100.2,\n        creditLimit: 100.3,\n        IBAN: 'GB29NWBK60161331926819',\n        BBAN: 'BBAN',\n        currency: 'EUR',\n        externalTransferAllowed: true,\n        urgentTransferAllowed: false,\n        accruedInterest: 2.2,\n        principalAmount: 100.4,\n        currentInvestmentValue: 100.5,\n        legalEntityIds: ['257da57a-11e4-4553-9175-54baf755069b', 'cd83683b-13f2-43d8-882b-39c9ab27d499'],\n        productId: '36c8fc42-ec97-4f83-8a7c-d622625007f3',\n        productTypeName: 'Current Account',\n        BIC: 'BICExample2',\n        bankBranchCode: 'bankBranchCode1',\n        accountOpeningDate: '2016-01-28T16:41:41.090Z',\n        accountInterestRate: 100.2,\n        valueDateBalance: 100.1,\n        creditLimitUsage: 100.3,\n        creditLimitInterestRate: 100.4,\n        creditLimitExpiryDate: '2019-09-28T16:41:41.090Z',\n        debitCards: [\n            {\n                number: '6378',\n                expiryDate: '2018-02-12T16:41:41.090Z',\n            },\n            {\n                number: '5111',\n                expiryDate: '2019-03-24T16:41:41.090Z',\n            },\n        ],\n        startDate: '2016-02-28T16:41:41.090Z',\n        termUnit: 'Y',\n        termNumber: 50,\n        maturityDate: '2017-02-28T16:41:41.090Z',\n        maturityAmount: 99.5,\n        autoRenewalIndicator: true,\n        interestPaymentFrequencyUnit: 'M',\n        interestPaymentFrequencyNumber: 15,\n        interestSettlementAccount: 'interestSettlementAccount1',\n        outstandingPrincipalAmount: 100.2,\n        monthlyInstalmentAmount: 100.1,\n        amountInArrear: 100.3,\n        minimumRequiredBalance: 80.4,\n        creditCardAccountNumber: '123456',\n        validThru: '2019-02-28T16:41:41.090Z',\n        applicableInterestRate: 101.2,\n        remainingCredit: 50,\n        outstandingPayment: 105.5,\n        minimumPayment: 51.1,\n        minimumPaymentDueDate: '2018-02-28T16:41:41.090Z',\n        totalInvestmentValue: 110.2,\n        accountHolderAddressLine1: 'accountHolderAddressLine11',\n        accountHolderAddressLine2: 'accountHolderAddressLine12',\n        creditAccount: true,\n        debitAccount: true,\n        visible: true,\n        lastUpdateDate: '2019-09-28T16:41:41.090Z',\n        userPreferences: {\n            visible: true,\n            alias: 'nice',\n            favorite: true,\n        },\n    },\n    {\n        id: '1cdb2224-8926-4b4d-a99f-1c9dfbbb4699',\n        externalArrangementId: 'kjh4567-asd1-11e7-b114-b2f933d50000',\n        externalLegalEntityId: 'COOOOO1',\n        externalProductId: '1234567',\n        name: 'Mr and Mrs J. Smith',\n        productKindName: 'Current Account',\n        bankAlias: 'Secret account',\n        bookedBalance: 100.1,\n        availableBalance: 100.2,\n        creditLimit: 100.3,\n        IBAN: 'GB29NWBK60161331926819',\n        BBAN: 'BBAN',\n        currency: 'EUR',\n        externalTransferAllowed: true,\n        urgentTransferAllowed: false,\n        accruedInterest: 2.2,\n        principalAmount: 100.4,\n        currentInvestmentValue: 100.5,\n        legalEntityIds: ['257da57a-11e4-4553-9175-54baf755069b', 'cd83683b-13f2-43d8-882b-39c9ab27d499'],\n        productId: '36c8fc42-ec97-4f83-8a7c-d622625007f3',\n        productTypeName: 'Current Account',\n        BIC: 'BICExample1',\n        bankBranchCode: 'bankBranchCode1',\n        accountOpeningDate: '2016-01-28T16:41:41.090Z',\n        accountInterestRate: 100.2,\n        valueDateBalance: 100.1,\n        creditLimitUsage: 100.3,\n        creditLimitInterestRate: 100.4,\n        creditLimitExpiryDate: '2019-09-28T16:41:41.090Z',\n        debitCards: [\n            {\n                number: '4578',\n                expiryDate: '2018-08-22T16:41:41.090Z',\n            },\n            {\n                number: '3241',\n                expiryDate: '2019-01-14T16:41:41.090Z',\n            },\n        ],\n        startDate: '2016-02-28T16:41:41.090Z',\n        termUnit: 'Y',\n        termNumber: 50,\n        maturityDate: '2017-02-28T16:41:41.090Z',\n        maturityAmount: 99.5,\n        autoRenewalIndicator: true,\n        interestPaymentFrequencyUnit: 'M',\n        interestPaymentFrequencyNumber: 15,\n        interestSettlementAccount: 'interestSettlementAccount1',\n        outstandingPrincipalAmount: 100.2,\n        monthlyInstalmentAmount: 100.1,\n        amountInArrear: 100.3,\n        minimumRequiredBalance: 80.4,\n        creditCardAccountNumber: '123456',\n        validThru: '2019-02-28T16:41:41.090Z',\n        applicableInterestRate: 101.2,\n        remainingCredit: 50,\n        outstandingPayment: 105.5,\n        minimumPayment: 51.1,\n        minimumPaymentDueDate: '2018-02-28T16:41:41.090Z',\n        totalInvestmentValue: 110.2,\n        accountHolderAddressLine1: 'accountHolderAddressLine11',\n        accountHolderAddressLine2: 'accountHolderAddressLine12',\n        creditAccount: true,\n        debitAccount: true,\n        visible: true,\n        lastUpdateDate: '2019-09-28T16:41:41.090Z',\n        userPreferences: {\n            alias: 'nice',\n        },\n    },\n];\nconst accountsWithCount = {\n    count: 3,\n    items: mockAccountsResponse,\n    params: { from: 1, paginationType: 'load-more' },\n};\nconst balanceAggregationResponseMock = [\n    {\n        aggregatedBalances: [\n            {\n                currencyCode: 'EUR',\n                amount: '3289.0',\n                numberOfArrangements: 3,\n            },\n            {\n                currencyCode: 'USD',\n                amount: '2500.0',\n                numberOfArrangements: 10,\n            },\n        ],\n    },\n];\n\n/* eslint-enable */\n// eslint-disable-next-line no-null/no-null\nconst isPlainObject = (obj) => typeof obj === 'object' && obj !== null;\n/**\n * Equality check between two \"plain\" (i.e. JSON compatible) values.\n * By \"plain\" value, we mean a primitive or an object/array that contains only other primitives and no methods or internal state.\n */\nconst isEqual = (a, b) => {\n    if (Array.isArray(a) && Array.isArray(b)) {\n        return a.length === b.length && a.every((aValue, i) => isEqual(aValue, b[i]));\n    }\n    if (Array.isArray(a) || Array.isArray(b)) {\n        return false;\n    }\n    if (isPlainObject(a) && isPlainObject(b)) {\n        const aObject = a;\n        const bObject = b;\n        const aKeys = Object.keys(aObject);\n        const bKeys = Object.keys(bObject);\n        return aKeys.length === bKeys.length && aKeys.every(aKey => isEqual(aObject[aKey], bObject[aKey]));\n    }\n    return a === b;\n};\n\nclass TestHelper {\n    constructor(fixture) {\n        this._fixture = fixture;\n    }\n    getElement(locator) {\n        return this._fixture.debugElement.query(By.css(locator));\n    }\n    getElements(locator) {\n        return this._fixture.debugElement.queryAll(By.css(locator));\n    }\n    getText(locator) {\n        const element = this.getElement(locator);\n        if (element) {\n            return element.nativeElement.textContent.trim();\n        }\n        return undefined;\n    }\n    isElementPresent(locator) {\n        return isDefined(this.getElement(locator));\n    }\n}\n\n/**\n * Converts number to an absolute value\n * {{ -100 | bbAbsoluteValue }}\n */\nclass AbsoluteValuePipe {\n    /**\n     * @name AbsoluteValuePipe#transform\n     * @param value - number value\n     *\n     * @description\n     * Converts number to an absolute value\n     */\n    transform(value) {\n        return value !== undefined ? Math.abs(value) : NaN;\n    }\n}\nAbsoluteValuePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: AbsoluteValuePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nAbsoluteValuePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: AbsoluteValuePipe, name: \"bbAbsoluteValue\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: AbsoluteValuePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'bbAbsoluteValue',\n                }]\n        }] });\n\nconst sharedPipes$2 = [AccountNumberPipeModule, PaymentCardNumberModule];\nconst pipes$3 = [AbsoluteValuePipe];\nclass FormatPipeModule {\n}\nFormatPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: FormatPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFormatPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: FormatPipeModule, declarations: [AbsoluteValuePipe], imports: [CommonModule, AccountNumberPipeModule, PaymentCardNumberModule], exports: [AccountNumberPipeModule, PaymentCardNumberModule, AbsoluteValuePipe] });\nFormatPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: FormatPipeModule, imports: [[CommonModule, ...sharedPipes$2], AccountNumberPipeModule, PaymentCardNumberModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: FormatPipeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, ...sharedPipes$2],\n                    declarations: [...pipes$3],\n                    exports: [...sharedPipes$2, ...pipes$3],\n                }]\n        }] });\n\n/**\n * Gets a valid account number that should be displayed for Product (iban, bban or cardNumber)\n */\nclass ProductNumberValuePipe {\n    /**\n     * @name ProductNumberValuePipe#transform\n     * @param product - a product that contains account number\n     *\n     * @description\n     * Provides a valid account number for the product,\n     * for example:\n     * - IBAN for CurrentAccount product\n     * - BBAN for CurrentAccount product that doesn't have IBAN\n     * - number for CreditCard product\n     */\n    transform(product) {\n        const productNumberType = getProductNumberType(product);\n        if (productNumberType === 'iban' && 'IBAN' in product) {\n            return product.IBAN;\n        }\n        else if (productNumberType === 'bban' && 'BBAN' in product) {\n            return product.BBAN;\n        }\n        else if ('number' in product) {\n            return product.number;\n        }\n        return '';\n    }\n}\nProductNumberValuePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductNumberValuePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nProductNumberValuePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductNumberValuePipe, name: \"bbProductNumberValue\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductNumberValuePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'bbProductNumberValue',\n                }]\n        }] });\n\n/**\n * Gets a valid account number type that should be displayed for Product (iban, bban or cardNumber)\n */\nclass ProductNumberTypePipe {\n    /**\n     * @name ProductNumberTypePipe#transform\n     * @param product - a product that contains account number\n     *\n     * @description\n     * Provides a valid account number for the product,\n     * for example:\n     * - 'iban' for CurrentAccount product\n     * - 'bban' for CurrentAccount product that doesn't have IBAN\n     * - 'cardNumber' for CreditCard product\n     */\n    transform(product) {\n        return getProductNumberType(product);\n    }\n}\nProductNumberTypePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductNumberTypePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nProductNumberTypePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductNumberTypePipe, name: \"bbProductNumberType\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductNumberTypePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'bbProductNumberType',\n                }]\n        }] });\n\n/**\n * Provides numbers format per product or number type\n * a format includes masking and formatting configuration\n *\n * TODO: remove this pipe when all necessary ui-ang components support using `bbAccountNumber` pipe\n */\nclass ProductNumberFormatPipe {\n    /**\n     * @name ProductNumberFormatPipe#constructor\n     * @param accountsDisplayingFormatService - AccountsDisplayingFormatService\n     *\n     * @internal\n     */\n    constructor(accountsDisplayingFormatService) {\n        this.accountsDisplayingFormatService = accountsDisplayingFormatService;\n    }\n    /**\n     * @name ProductNumberFormatPipe#transform\n     * @param product - product that should be formatted or specific product number type\n     *\n     * @description\n     * Formats account numbers\n     */\n    transform(product) {\n        const productType = typeof product === 'object' ? getProductNumberType(product) : product;\n        const displayingFormat = this.accountsDisplayingFormatService.getDefaultFormat(productType);\n        return Object.assign({ length: 0, maskRange: [0, 0] }, displayingFormat);\n    }\n}\nProductNumberFormatPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductNumberFormatPipe, deps: [{ token: i1$4.AccountsDisplayingFormatService }], target: i0.ɵɵFactoryTarget.Pipe });\nProductNumberFormatPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductNumberFormatPipe, name: \"bbProductNumberFormat\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductNumberFormatPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'bbProductNumberFormat',\n                }]\n        }], ctorParameters: function () { return [{ type: i1$4.AccountsDisplayingFormatService }]; } });\n\nconst sharedPipes$1 = [AccountNumberPipeModule, PaymentCardNumberModule];\nconst pipes$2 = [ProductNumberValuePipe, ProductNumberTypePipe, ProductNumberFormatPipe];\nclass ProductNumberPipeModule {\n}\nProductNumberPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductNumberPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nProductNumberPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductNumberPipeModule, declarations: [ProductNumberValuePipe, ProductNumberTypePipe, ProductNumberFormatPipe], imports: [CommonModule, AccountNumberPipeModule, PaymentCardNumberModule], exports: [AccountNumberPipeModule, PaymentCardNumberModule, ProductNumberValuePipe, ProductNumberTypePipe, ProductNumberFormatPipe] });\nProductNumberPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductNumberPipeModule, imports: [[CommonModule, ...sharedPipes$1], AccountNumberPipeModule, PaymentCardNumberModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ProductNumberPipeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, ...sharedPipes$1],\n                    declarations: [...pipes$2],\n                    exports: [...sharedPipes$1, ...pipes$2],\n                }]\n        }] });\n\n/**\n * Verifies if values is defined (not null and not undefined)\n */\nclass IsDefinedPipe {\n    /**\n     * @name IsDefinedPipe#transform\n     * @param value - value of any type\n     *\n     * @description\n     * Verifies if values is defined\n     * for example:\n     * - true for '' string\n     * - true for 0 number\n     * - false for undefined value\n     */\n    transform(value) {\n        return isDefined(value);\n    }\n}\nIsDefinedPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: IsDefinedPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nIsDefinedPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: IsDefinedPipe, name: \"bbIsDefined\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: IsDefinedPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'bbIsDefined',\n                }]\n        }] });\n\n/**\n * Verifies if the passed item is presented in the array\n * Note: deep-equal is not supported\n *\n * @usageNotes\n * ### Example\n * ```html\n * <div *ngIf=\"{{ item|bbIsArray:array }}\"></div>\n * ```\n */\nclass IsInArrayPipe {\n    /**\n     * Verifies if `item` is presented in `array`\n     *\n     * @param item\n     * @param array\n     */\n    transform(item, array) {\n        if (array && array.length) {\n            return array.indexOf(item) !== -1;\n        }\n        return false;\n    }\n}\nIsInArrayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: IsInArrayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nIsInArrayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: IsInArrayPipe, name: \"bbIsInArray\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: IsInArrayPipe, decorators: [{\n            type: Pipe,\n            args: [{ name: 'bbIsInArray' }]\n        }] });\n\n/**\n * Verifies if the passed item is a percent value\n *\n * @usageNotes\n * ### Example\n * ```html\n * <div *ngIf=\"{{ \"10%\"|bbIsPercentValue }}\"></div>\n * ```\n */\nclass IsPercentValue {\n    /**\n     * Verifies if the passed item is a percent value\n     *\n     * @param item\n     */\n    transform(item) {\n        if (isDefined(item) && typeof item === 'string') {\n            const percentIndex = item.indexOf('%');\n            return percentIndex === 0 || percentIndex === item.length - 1;\n        }\n        return false;\n    }\n}\nIsPercentValue.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: IsPercentValue, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nIsPercentValue.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: IsPercentValue, name: \"bbIsPercentValue\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: IsPercentValue, decorators: [{\n            type: Pipe,\n            args: [{ name: 'bbIsPercentValue' }]\n        }] });\n\n/**\n * Verifies if \"kind\" of productKindItem is equal to expected \"kind\"\n *\n * @usageNotes\n * ### Example\n * ```html\n * <div *ngIf=\"productKind | bbIsProductKind:expectedProductKindType\"></div>\n * ```\n */\nclass IsProductKindPipe {\n    /**\n     * Verifies if \"kind\" of productKindItem is equal to expected \"kind\"\n     *\n     * @param productKindItem\n     * @param expectedProductKindType\n     */\n    transform(productKindItem, expectedProductKindType) {\n        if (isDefined(productKindItem === null || productKindItem === void 0 ? void 0 : productKindItem.kindUri)) {\n            return Array.isArray(expectedProductKindType)\n                ? expectedProductKindType.includes(productKindItem === null || productKindItem === void 0 ? void 0 : productKindItem.kindUri)\n                : (productKindItem === null || productKindItem === void 0 ? void 0 : productKindItem.kindUri) === expectedProductKindType;\n        }\n        return false;\n    }\n}\nIsProductKindPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: IsProductKindPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nIsProductKindPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: IsProductKindPipe, name: \"bbIsProductKind\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: IsProductKindPipe, decorators: [{\n            type: Pipe,\n            args: [{ name: 'bbIsProductKind' }]\n        }] });\n\nconst pipes$1 = [IsDefinedPipe, IsInArrayPipe, IsPercentValue, IsProductKindPipe];\nclass ValidationModule {\n}\nValidationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ValidationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nValidationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ValidationModule, declarations: [IsDefinedPipe, IsInArrayPipe, IsPercentValue, IsProductKindPipe], imports: [CommonModule], exports: [IsDefinedPipe, IsInArrayPipe, IsPercentValue, IsProductKindPipe] });\nValidationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ValidationModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ValidationModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [...pipes$1],\n                    exports: [...pipes$1],\n                }]\n        }] });\n\n/**\n * Returns localised info of date of update\n *\n * @usageNotes\n * ### Example\n * ```html\n * <p>{{ '2020-10-10' | bbDateUpdateAgo }}</p>\n * <p>{{ '2020-10-10' | bbDateUpdateAgo:'mediumDate' }}</p>\n * ```\n */\nclass DateUpdatedAgoPipe {\n    /**\n     * @name DateUpdatedAgoPipe#constructor\n     * @param datePipe - BbDatePipe\n     *\n     * @internal\n     */\n    constructor(datePipe) {\n        this.datePipe = datePipe;\n        this.millisecondsInPeriod = {\n            day: 86400000,\n            hours: 7200000,\n            hour: 3600000,\n            minutes: 120000,\n            minute: 60000,\n        };\n        this.localisationByPeriod = {\n            date: (date) => $localize `:@@product-summary.update-date.date:Updated on ${date}`,\n            hours: (hours) => $localize `:@@product-summary.update-date.hours:Updated ${hours} hours ago`,\n            hour: () => $localize `:@@product-summary.update-date.hour:Updated 1 hour ago`,\n            minutes: (minutes) => $localize `:@@product-summary.update-date.minutes:Updated ${minutes} minutes ago`,\n            minute: () => $localize `:@@product-summary.update-date.minute:Updated 1 minute ago`,\n        };\n    }\n    /**\n     * @name DateUpdatedAgoPipe#transform\n     * @param updateTimestamp - update date\n     * @param dateFormat - the format type for the date to be formatted (for update time >= 1 day ago)\n     *\n     * @description\n     * Returns localised info of date of update\n     *\n     * Example:\n     *  transform(hourAgo) - 'Updated 1 hour ago'\n     *  transform(minuteAgo) - 'Updated 1 minute ago'\n     */\n    transform(updateTimestamp, dateFormat = 'longDate') {\n        const millisecondsAgo = Math.max(new Date().getTime() - new Date(updateTimestamp).getTime(), 0);\n        if (millisecondsAgo < this.millisecondsInPeriod.minutes) {\n            return this.localisationByPeriod.minute();\n        }\n        else if (millisecondsAgo < this.millisecondsInPeriod.hour) {\n            const minutesAgo = Math.floor(millisecondsAgo / this.millisecondsInPeriod.minute);\n            return this.localisationByPeriod.minutes(minutesAgo);\n        }\n        else if (millisecondsAgo < this.millisecondsInPeriod.hours) {\n            return this.localisationByPeriod.hour();\n        }\n        else if (millisecondsAgo < this.millisecondsInPeriod.day) {\n            const hoursAgo = Math.floor(millisecondsAgo / this.millisecondsInPeriod.hour);\n            return this.localisationByPeriod.hours(hoursAgo);\n        }\n        else {\n            const updateDate = this.datePipe.transform(updateTimestamp, dateFormat);\n            return this.localisationByPeriod.date(updateDate);\n        }\n    }\n}\nDateUpdatedAgoPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DateUpdatedAgoPipe, deps: [{ token: i1$5.BbDatePipe }], target: i0.ɵɵFactoryTarget.Pipe });\nDateUpdatedAgoPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DateUpdatedAgoPipe, name: \"bbDateUpdatedAgo\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DateUpdatedAgoPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'bbDateUpdatedAgo',\n                }]\n        }], ctorParameters: function () { return [{ type: i1$5.BbDatePipe }]; } });\n\nconst sharedPipes = [BbDatePipeModule];\nconst pipes = [DateUpdatedAgoPipe];\nclass DatePipeModule {\n}\nDatePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DatePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDatePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DatePipeModule, declarations: [DateUpdatedAgoPipe], imports: [CommonModule, BbDatePipeModule], exports: [DateUpdatedAgoPipe, BbDatePipeModule] });\nDatePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DatePipeModule, providers: [BbDatePipe], imports: [[CommonModule, ...sharedPipes], BbDatePipeModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DatePipeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, ...sharedPipes],\n                    declarations: [...pipes],\n                    exports: [...pipes, ...sharedPipes],\n                    providers: [BbDatePipe],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ACCOUNT_ALIAS_DISPLAYING_LEVEL, AbsoluteValuePipe, AccountAliasDisplayingLevel, AccountNavigationType, AccountsOverviewAccessDenied, AccountsOverviewBadRequest, AccountsOverviewConnectivityError, AccountsOverviewNotFound, AccountsOverviewUnknownError, BalanceHistoryAccessDenied, BalanceHistoryBadRequest, BalanceHistoryCommonService, BalanceHistoryConnectivityError, BalanceHistoryExportFormat, BalanceHistoryNotFound, BalanceHistoryUnknownError, CardProductKindName, CurrencyToCountryMap, DEFAULT_DEBOUNCE_TIME, DatePipeModule, DateUpdatedAgoPipe, DefaultAllowedNavigationTypes, DefaultProductKindName, DefaultProductKindNameList, DomAttributesService, DownloadResourcesService, EXTRA_SMALL_SCREEN_SIZE, FormatPipeModule, HttpResponseType, IsDefinedPipe, IsInArrayPipe, IsPercentValue, IsProductKindPipe, PRODUCT_SUMMARY_WIDGET_PROPERTIES, PaginationType, ProductKindNames, ProductKindUri, ProductNumberFormatPipe, ProductNumberPipeModule, ProductNumberTypePipe, ProductNumberValuePipe, ProductSummaryAccountDetailsBaseComponent, ProductSummaryAccountDetailsBaseModule, ProductSummaryAccountsService, ProductSummaryCommon, ProductSummaryPrivilege, ProductSummaryUserPermissionsService, ProductSummaryWidgetPropertiesService, ProductsExternalInfoService, ResponsiveContainerComponent, ResponsiveContainerModule, SMALL_SCREEN_SIZE, TestHelper, UserPreferencesValidationSettings, ValidationModule, WINDOW, WidgetProperty, WindowProvider, accountsWithCount, balanceAggregationResponseMock, balanceHistoryPaginatedMock, balanceHistoryPaginatedMockWithCount, balanceHistorySeriesMock, bbEventToggleAccountFavoriteUpdate, cacheRequest, defaultArrangementName, emptyBalanceHistoryPaginatedMockWithCount, filterInputParameters, findBy, findByName, getAccountAlias, getProductKindIconName, getProductNumberType, getRouteParameter, hasExternalInfo, isCardNumber, isDefined, isEqual, isFavorite, isFunction, isPlainObject, isProductVisible, mockAccountsResponse, mockRequestObject, modelItemToBoolean, parseBalanceHistoryError, parseError, processErrorMessages, processedBalanceHistoryMock, requestObjectMockPaginated, requestObjectMockSeries, setAttribute, toKebabCase, windowFactory };\n"]},"metadata":{},"sourceType":"module"}