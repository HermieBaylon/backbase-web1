{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\nconst SELF_ENROLLMENT_BASE_PATH = new InjectionToken('SELF_ENROLLMENT_BASE_PATH');\nconst COLLECTION_FORMATS = {\n  'csv': ',',\n  'tsv': '   ',\n  'ssv': ' ',\n  'pipes': '|'\n};\n\nclass SelfEnrollmentConfiguration {\n  constructor(configurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n    this.encoder = configurationParameters.encoder;\n\n    if (configurationParameters.credentials) {\n      this.credentials = configurationParameters.credentials;\n    } else {\n      this.credentials = {};\n    }\n  }\n\n  selectHeaderContentType(contentTypes) {\n    if (contentTypes.length === 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n\n    return type;\n  }\n\n  selectHeaderAccept(accepts) {\n    if (accepts.length === 0) {\n      return undefined;\n    }\n\n    const type = accepts.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return accepts[0];\n    }\n\n    return type;\n  }\n\n  isJsonMime(mime) {\n    const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n    return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n  }\n\n  lookupCredential(key) {\n    const value = this.credentials[key];\n    return typeof value === 'function' ? value() : value;\n  }\n\n}\n\nconst CONFIG_TOKEN = new InjectionToken('api-data-module SelfEnrollmentConfiguration');\n\nclass SelfEnrollmentApiModule {\n  constructor(parentModule, http, dataModulesManager, config) {\n    if (parentModule) {\n      throw new Error('SelfEnrollmentApiModule is already loaded. Import in your base AppModule only.');\n    }\n\n    if (!http) {\n      throw new Error('You need to import the HttpClientModule in your AppModule! \\n' + 'See also https://github.com/angular/angular/issues/20575');\n    }\n\n    if (dataModulesManager) {\n      dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n        apiRoot: '',\n        servicePath: config.basePath || '',\n        headers: {}\n      });\n    }\n  }\n\n  static forRoot(configurationFactory) {\n    return {\n      ngModule: SelfEnrollmentApiModule,\n      providers: [{\n        provide: SelfEnrollmentConfiguration,\n        useFactory: configurationFactory\n      }]\n    };\n  }\n\n}\n\nSelfEnrollmentApiModule.ɵfac = function SelfEnrollmentApiModule_Factory(t) {\n  return new (t || SelfEnrollmentApiModule)(i0.ɵɵinject(SelfEnrollmentApiModule, 12), i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DataModulesManager, 8), i0.ɵɵinject(SelfEnrollmentConfiguration));\n};\n\nSelfEnrollmentApiModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SelfEnrollmentApiModule\n});\nSelfEnrollmentApiModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [],\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelfEnrollmentApiModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [],\n      exports: [],\n      providers: []\n    }]\n  }], function () {\n    return [{\n      type: SelfEnrollmentApiModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: i1.HttpClient,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2.DataModulesManager,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: SelfEnrollmentConfiguration\n    }];\n  }, null);\n})();\n\nclass CustomHttpParameterCodec {\n  encodeKey(k) {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v) {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k) {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v) {\n    return decodeURIComponent(v);\n  }\n\n}\n\nclass SelfEnrollmentService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new SelfEnrollmentConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  getStatus(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/status`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getStatusUrl() {\n    return `${this.configuration.basePath}/client-api/v2/status`;\n  }\n\n  getUsernameByUsername(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _username = requestParameters[\"username\"];\n\n    if (_username === null || _username === undefined) {\n      throw new Error('Required parameter username was null or undefined when calling getUsernameByUsername.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/credentials/existing/username/${encodeURIComponent(String(_username))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getUsernameByUsernameUrl(requestParameters) {\n    const _username = requestParameters[\"username\"];\n\n    if (_username === null || _username === undefined) {\n      throw new Error('Required parameter username was null or undefined when calling getUsernameByUsername.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/credentials/existing/username/${encodeURIComponent(String(_username))}`;\n  }\n\n  getVerifications(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/verifications`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getVerificationsUrl() {\n    return `${this.configuration.basePath}/client-api/v2/verifications`;\n  }\n\n  postCredentials(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _createCredentials = requestParameters[\"createCredentials\"];\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/credentials`, _createCredentials, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postCredentialsUrl(requestParameters) {\n    const _createCredentials = requestParameters[\"createCredentials\"];\n    return `${this.configuration.basePath}/client-api/v2/credentials`;\n  }\n\n  postEnrollments(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _createEnrollment = requestParameters[\"createEnrollment\"];\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/enrollments`, _createEnrollment, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postEnrollmentsUrl(requestParameters) {\n    const _createEnrollment = requestParameters[\"createEnrollment\"];\n    return `${this.configuration.basePath}/client-api/v2/enrollments`;\n  }\n\n  postVerifications(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _verificationRequestItem = requestParameters[\"verificationRequestItem\"];\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/verifications`, _verificationRequestItem, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postVerificationsUrl(requestParameters) {\n    const _verificationRequestItem = requestParameters[\"verificationRequestItem\"];\n    return `${this.configuration.basePath}/client-api/v2/verifications`;\n  }\n\n}\n\nSelfEnrollmentService.ɵfac = function SelfEnrollmentService_Factory(t) {\n  return new (t || SelfEnrollmentService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(SELF_ENROLLMENT_BASE_PATH, 8), i0.ɵɵinject(SelfEnrollmentConfiguration, 8));\n};\n\nSelfEnrollmentService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SelfEnrollmentService,\n  factory: SelfEnrollmentService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelfEnrollmentService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [SELF_ENROLLMENT_BASE_PATH]\n      }]\n    }, {\n      type: SelfEnrollmentConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst SelfEnrollmentServiceGetStatusMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/status\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"status\": \"IDENTIFIED\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}]);\nconst SelfEnrollmentServiceGetUsernameByUsernameMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/credentials/existing/username/{username}\",\n  method: \"GET\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst SelfEnrollmentServiceGetVerificationsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/verifications\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"question\": {\n        \"id\": \"12ghr44356-54mpkm65\",\n        \"text\": \"When did you open your Loan account?\"\n      },\n      \"answers\": [{\n        \"id\": \"wrghr44356-54mpkm65\",\n        \"text\": \"January 2017\"\n      }, {\n        \"id\": \"ds-0h-903285hb6\",\n        \"text\": \"March 2017\"\n      }, {\n        \"id\": \"34bkbdfs89sdfnj\",\n        \"text\": \"July 2017\"\n      }, {\n        \"id\": \"123-3456-nkbjhbdf\",\n        \"text\": \"None of the above\"\n      }]\n    }, {\n      \"question\": {\n        \"id\": \"12ghr44356-54mpkerwfvd5\",\n        \"text\": \"What state was your SSN issued in?\"\n      },\n      \"answers\": [{\n        \"id\": \"123kbbb43500fds\",\n        \"text\": \"New York\"\n      }, {\n        \"id\": \"453-65njb453-45657\",\n        \"text\": \"Virginia\"\n      }, {\n        \"id\": \"csgdf-35436njgf\",\n        \"text\": \"Missouri\"\n      }, {\n        \"id\": \"aaa-23454363jb634\",\n        \"text\": \"None of the above\"\n      }]\n    }, {\n      \"question\": {\n        \"id\": \"18hgdd8756-54botdf8876\",\n        \"text\": \"In 2017, your Car Loan was approved by which bank?\"\n      },\n      \"answers\": [{\n        \"id\": \"1mlfjur-i094s\",\n        \"text\": \"Bank of America\"\n      }, {\n        \"id\": \"473-65iiktnd93-433457\",\n        \"text\": \"Wells Fargo\"\n      }, {\n        \"id\": \"cujhf-356657ytjgf\",\n        \"text\": \"Chase\"\n      }, {\n        \"id\": \"abb-236678435jb634\",\n        \"text\": \"None of the above\"\n      }]\n    }, {\n      \"question\": {\n        \"id\": \"109jjhbft6-590-ouhgj345\",\n        \"text\": \"Which of the following cities has a current or former association to you?\"\n      },\n      \"answers\": [{\n        \"id\": \"19874yhrgsvdr5\",\n        \"text\": \"Houston\"\n      }, {\n        \"id\": \"4577-8576ijuth-45659\",\n        \"text\": \"Los Angeles\"\n      }, {\n        \"id\": \"cascadf-3554r66t-uu\",\n        \"text\": \"Chicago\"\n      }, {\n        \"id\": \"aga-264547789-jb634\",\n        \"text\": \"None of the above\"\n      }]\n    }]\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst SelfEnrollmentServicePostCredentialsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/credentials\",\n  method: \"POST\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}]);\nconst SelfEnrollmentServicePostEnrollmentsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/enrollments\",\n  method: \"POST\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst SelfEnrollmentServicePostVerificationsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/verifications\",\n  method: \"POST\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst SelfEnrollmentServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/status\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"status\": \"IDENTIFIED\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/credentials/existing/username/{username}\",\n  method: \"GET\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/verifications\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"question\": {\n        \"id\": \"12ghr44356-54mpkm65\",\n        \"text\": \"When did you open your Loan account?\"\n      },\n      \"answers\": [{\n        \"id\": \"wrghr44356-54mpkm65\",\n        \"text\": \"January 2017\"\n      }, {\n        \"id\": \"ds-0h-903285hb6\",\n        \"text\": \"March 2017\"\n      }, {\n        \"id\": \"34bkbdfs89sdfnj\",\n        \"text\": \"July 2017\"\n      }, {\n        \"id\": \"123-3456-nkbjhbdf\",\n        \"text\": \"None of the above\"\n      }]\n    }, {\n      \"question\": {\n        \"id\": \"12ghr44356-54mpkerwfvd5\",\n        \"text\": \"What state was your SSN issued in?\"\n      },\n      \"answers\": [{\n        \"id\": \"123kbbb43500fds\",\n        \"text\": \"New York\"\n      }, {\n        \"id\": \"453-65njb453-45657\",\n        \"text\": \"Virginia\"\n      }, {\n        \"id\": \"csgdf-35436njgf\",\n        \"text\": \"Missouri\"\n      }, {\n        \"id\": \"aaa-23454363jb634\",\n        \"text\": \"None of the above\"\n      }]\n    }, {\n      \"question\": {\n        \"id\": \"18hgdd8756-54botdf8876\",\n        \"text\": \"In 2017, your Car Loan was approved by which bank?\"\n      },\n      \"answers\": [{\n        \"id\": \"1mlfjur-i094s\",\n        \"text\": \"Bank of America\"\n      }, {\n        \"id\": \"473-65iiktnd93-433457\",\n        \"text\": \"Wells Fargo\"\n      }, {\n        \"id\": \"cujhf-356657ytjgf\",\n        \"text\": \"Chase\"\n      }, {\n        \"id\": \"abb-236678435jb634\",\n        \"text\": \"None of the above\"\n      }]\n    }, {\n      \"question\": {\n        \"id\": \"109jjhbft6-590-ouhgj345\",\n        \"text\": \"Which of the following cities has a current or former association to you?\"\n      },\n      \"answers\": [{\n        \"id\": \"19874yhrgsvdr5\",\n        \"text\": \"Houston\"\n      }, {\n        \"id\": \"4577-8576ijuth-45659\",\n        \"text\": \"Los Angeles\"\n      }, {\n        \"id\": \"cascadf-3554r66t-uu\",\n        \"text\": \"Chicago\"\n      }, {\n        \"id\": \"aga-264547789-jb634\",\n        \"text\": \"None of the above\"\n      }]\n    }]\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/credentials\",\n  method: \"POST\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/enrollments\",\n  method: \"POST\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/verifications\",\n  method: \"POST\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nexport { COLLECTION_FORMATS, CONFIG_TOKEN, SELF_ENROLLMENT_BASE_PATH, SelfEnrollmentApiModule, SelfEnrollmentConfiguration, SelfEnrollmentService, SelfEnrollmentServiceGetStatusMocksProvider, SelfEnrollmentServiceGetUsernameByUsernameMocksProvider, SelfEnrollmentServiceGetVerificationsMocksProvider, SelfEnrollmentServiceMocksProvider, SelfEnrollmentServicePostCredentialsMocksProvider, SelfEnrollmentServicePostEnrollmentsMocksProvider, SelfEnrollmentServicePostVerificationsMocksProvider };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/self-enrollment-http-ang/fesm2015/backbase-self-enrollment-http-ang.js"],"names":["i0","InjectionToken","NgModule","Optional","SkipSelf","Injectable","Inject","i1","HttpHeaders","i2","createMocks","SELF_ENROLLMENT_BASE_PATH","COLLECTION_FORMATS","SelfEnrollmentConfiguration","constructor","configurationParameters","apiKeys","username","password","accessToken","basePath","withCredentials","encoder","credentials","selectHeaderContentType","contentTypes","length","undefined","type","find","x","isJsonMime","selectHeaderAccept","accepts","mime","jsonMime","RegExp","test","toLowerCase","lookupCredential","key","value","CONFIG_TOKEN","SelfEnrollmentApiModule","parentModule","http","dataModulesManager","config","Error","setModuleConfig","apiRoot","servicePath","headers","forRoot","configurationFactory","ngModule","providers","provide","useFactory","ɵfac","HttpClient","DataModulesManager","ɵmod","ɵinj","args","imports","declarations","exports","decorators","CustomHttpParameterCodec","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeURIComponent","decodeValue","SelfEnrollmentService","httpClient","configuration","defaultHeaders","addToHttpParams","httpParams","Date","addToHttpParamsRecursive","Array","isArray","forEach","elem","append","toISOString","substr","Object","keys","getStatus","observe","reportProgress","options","httpHeaderAcceptSelected","httpHeaderAccept","httpHeaderAccepts","set","responseType","startsWith","get","getStatusUrl","getUsernameByUsername","requestParameters","_username","String","getUsernameByUsernameUrl","getVerifications","getVerificationsUrl","postCredentials","_createCredentials","consumes","httpContentTypeSelected","post","postCredentialsUrl","postEnrollments","_createEnrollment","postEnrollmentsUrl","postVerifications","_verificationRequestItem","postVerificationsUrl","ɵprov","providedIn","SelfEnrollmentServiceGetStatusMocksProvider","urlPattern","method","responses","status","body","SelfEnrollmentServiceGetUsernameByUsernameMocksProvider","SelfEnrollmentServiceGetVerificationsMocksProvider","SelfEnrollmentServicePostCredentialsMocksProvider","SelfEnrollmentServicePostEnrollmentsMocksProvider","SelfEnrollmentServicePostVerificationsMocksProvider","SelfEnrollmentServiceMocksProvider"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\n\nconst SELF_ENROLLMENT_BASE_PATH = new InjectionToken('SELF_ENROLLMENT_BASE_PATH');\nconst COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n};\n\nclass SelfEnrollmentConfiguration {\n    constructor(configurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n    selectHeaderContentType(contentTypes) {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n        const type = contentTypes.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n    selectHeaderAccept(accepts) {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n        const type = accepts.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n    lookupCredential(key) {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\nconst CONFIG_TOKEN = new InjectionToken('api-data-module SelfEnrollmentConfiguration');\n\nclass SelfEnrollmentApiModule {\n    constructor(parentModule, http, dataModulesManager, config) {\n        if (parentModule) {\n            throw new Error('SelfEnrollmentApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n                'See also https://github.com/angular/angular/issues/20575');\n        }\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n    static forRoot(configurationFactory) {\n        return {\n            ngModule: SelfEnrollmentApiModule,\n            providers: [{ provide: SelfEnrollmentConfiguration, useFactory: configurationFactory }]\n        };\n    }\n}\nSelfEnrollmentApiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: SelfEnrollmentApiModule, deps: [{ token: SelfEnrollmentApiModule, optional: true, skipSelf: true }, { token: i1.HttpClient, optional: true }, { token: i2.DataModulesManager, optional: true }, { token: SelfEnrollmentConfiguration }], target: i0.ɵɵFactoryTarget.NgModule });\nSelfEnrollmentApiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: SelfEnrollmentApiModule });\nSelfEnrollmentApiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: SelfEnrollmentApiModule, providers: [], imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: SelfEnrollmentApiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [],\n                    exports: [],\n                    providers: []\n                }]\n        }], ctorParameters: function () { return [{ type: SelfEnrollmentApiModule, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DataModulesManager, decorators: [{\n                    type: Optional\n                }] }, { type: SelfEnrollmentConfiguration }]; } });\n\nclass CustomHttpParameterCodec {\n    encodeKey(k) {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v) {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k) {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v) {\n        return decodeURIComponent(v);\n    }\n}\n\nclass SelfEnrollmentService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new SelfEnrollmentConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    getStatus(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/status`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getStatusUrl() {\n        return `${this.configuration.basePath}/client-api/v2/status`;\n    }\n    getUsernameByUsername(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _username = requestParameters[\"username\"];\n        if (_username === null || _username === undefined) {\n            throw new Error('Required parameter username was null or undefined when calling getUsernameByUsername.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/credentials/existing/username/${encodeURIComponent(String(_username))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getUsernameByUsernameUrl(requestParameters) {\n        const _username = requestParameters[\"username\"];\n        if (_username === null || _username === undefined) {\n            throw new Error('Required parameter username was null or undefined when calling getUsernameByUsername.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/credentials/existing/username/${encodeURIComponent(String(_username))}`;\n    }\n    getVerifications(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/verifications`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getVerificationsUrl() {\n        return `${this.configuration.basePath}/client-api/v2/verifications`;\n    }\n    postCredentials(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _createCredentials = requestParameters[\"createCredentials\"];\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/credentials`, _createCredentials, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postCredentialsUrl(requestParameters) {\n        const _createCredentials = requestParameters[\"createCredentials\"];\n        return `${this.configuration.basePath}/client-api/v2/credentials`;\n    }\n    postEnrollments(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _createEnrollment = requestParameters[\"createEnrollment\"];\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/enrollments`, _createEnrollment, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postEnrollmentsUrl(requestParameters) {\n        const _createEnrollment = requestParameters[\"createEnrollment\"];\n        return `${this.configuration.basePath}/client-api/v2/enrollments`;\n    }\n    postVerifications(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _verificationRequestItem = requestParameters[\"verificationRequestItem\"];\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/verifications`, _verificationRequestItem, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postVerificationsUrl(requestParameters) {\n        const _verificationRequestItem = requestParameters[\"verificationRequestItem\"];\n        return `${this.configuration.basePath}/client-api/v2/verifications`;\n    }\n}\nSelfEnrollmentService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: SelfEnrollmentService, deps: [{ token: i1.HttpClient }, { token: SELF_ENROLLMENT_BASE_PATH, optional: true }, { token: SelfEnrollmentConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nSelfEnrollmentService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: SelfEnrollmentService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: SelfEnrollmentService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [SELF_ENROLLMENT_BASE_PATH]\n                }] }, { type: SelfEnrollmentConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst SelfEnrollmentServiceGetStatusMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/status\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"status\": \"IDENTIFIED\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst SelfEnrollmentServiceGetUsernameByUsernameMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/credentials/existing/username/{username}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst SelfEnrollmentServiceGetVerificationsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/verifications\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"question\": {\n                            \"id\": \"12ghr44356-54mpkm65\",\n                            \"text\": \"When did you open your Loan account?\"\n                        },\n                        \"answers\": [{\n                                \"id\": \"wrghr44356-54mpkm65\",\n                                \"text\": \"January 2017\"\n                            }, {\n                                \"id\": \"ds-0h-903285hb6\",\n                                \"text\": \"March 2017\"\n                            }, {\n                                \"id\": \"34bkbdfs89sdfnj\",\n                                \"text\": \"July 2017\"\n                            }, {\n                                \"id\": \"123-3456-nkbjhbdf\",\n                                \"text\": \"None of the above\"\n                            }]\n                    }, {\n                        \"question\": {\n                            \"id\": \"12ghr44356-54mpkerwfvd5\",\n                            \"text\": \"What state was your SSN issued in?\"\n                        },\n                        \"answers\": [{\n                                \"id\": \"123kbbb43500fds\",\n                                \"text\": \"New York\"\n                            }, {\n                                \"id\": \"453-65njb453-45657\",\n                                \"text\": \"Virginia\"\n                            }, {\n                                \"id\": \"csgdf-35436njgf\",\n                                \"text\": \"Missouri\"\n                            }, {\n                                \"id\": \"aaa-23454363jb634\",\n                                \"text\": \"None of the above\"\n                            }]\n                    }, {\n                        \"question\": {\n                            \"id\": \"18hgdd8756-54botdf8876\",\n                            \"text\": \"In 2017, your Car Loan was approved by which bank?\"\n                        },\n                        \"answers\": [{\n                                \"id\": \"1mlfjur-i094s\",\n                                \"text\": \"Bank of America\"\n                            }, {\n                                \"id\": \"473-65iiktnd93-433457\",\n                                \"text\": \"Wells Fargo\"\n                            }, {\n                                \"id\": \"cujhf-356657ytjgf\",\n                                \"text\": \"Chase\"\n                            }, {\n                                \"id\": \"abb-236678435jb634\",\n                                \"text\": \"None of the above\"\n                            }]\n                    }, {\n                        \"question\": {\n                            \"id\": \"109jjhbft6-590-ouhgj345\",\n                            \"text\": \"Which of the following cities has a current or former association to you?\"\n                        },\n                        \"answers\": [{\n                                \"id\": \"19874yhrgsvdr5\",\n                                \"text\": \"Houston\"\n                            }, {\n                                \"id\": \"4577-8576ijuth-45659\",\n                                \"text\": \"Los Angeles\"\n                            }, {\n                                \"id\": \"cascadf-3554r66t-uu\",\n                                \"text\": \"Chicago\"\n                            }, {\n                                \"id\": \"aga-264547789-jb634\",\n                                \"text\": \"None of the above\"\n                            }]\n                    }]\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst SelfEnrollmentServicePostCredentialsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/credentials\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst SelfEnrollmentServicePostEnrollmentsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/enrollments\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst SelfEnrollmentServicePostVerificationsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/verifications\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst SelfEnrollmentServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/status\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"status\": \"IDENTIFIED\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/credentials/existing/username/{username}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/verifications\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"question\": {\n                            \"id\": \"12ghr44356-54mpkm65\",\n                            \"text\": \"When did you open your Loan account?\"\n                        },\n                        \"answers\": [{\n                                \"id\": \"wrghr44356-54mpkm65\",\n                                \"text\": \"January 2017\"\n                            }, {\n                                \"id\": \"ds-0h-903285hb6\",\n                                \"text\": \"March 2017\"\n                            }, {\n                                \"id\": \"34bkbdfs89sdfnj\",\n                                \"text\": \"July 2017\"\n                            }, {\n                                \"id\": \"123-3456-nkbjhbdf\",\n                                \"text\": \"None of the above\"\n                            }]\n                    }, {\n                        \"question\": {\n                            \"id\": \"12ghr44356-54mpkerwfvd5\",\n                            \"text\": \"What state was your SSN issued in?\"\n                        },\n                        \"answers\": [{\n                                \"id\": \"123kbbb43500fds\",\n                                \"text\": \"New York\"\n                            }, {\n                                \"id\": \"453-65njb453-45657\",\n                                \"text\": \"Virginia\"\n                            }, {\n                                \"id\": \"csgdf-35436njgf\",\n                                \"text\": \"Missouri\"\n                            }, {\n                                \"id\": \"aaa-23454363jb634\",\n                                \"text\": \"None of the above\"\n                            }]\n                    }, {\n                        \"question\": {\n                            \"id\": \"18hgdd8756-54botdf8876\",\n                            \"text\": \"In 2017, your Car Loan was approved by which bank?\"\n                        },\n                        \"answers\": [{\n                                \"id\": \"1mlfjur-i094s\",\n                                \"text\": \"Bank of America\"\n                            }, {\n                                \"id\": \"473-65iiktnd93-433457\",\n                                \"text\": \"Wells Fargo\"\n                            }, {\n                                \"id\": \"cujhf-356657ytjgf\",\n                                \"text\": \"Chase\"\n                            }, {\n                                \"id\": \"abb-236678435jb634\",\n                                \"text\": \"None of the above\"\n                            }]\n                    }, {\n                        \"question\": {\n                            \"id\": \"109jjhbft6-590-ouhgj345\",\n                            \"text\": \"Which of the following cities has a current or former association to you?\"\n                        },\n                        \"answers\": [{\n                                \"id\": \"19874yhrgsvdr5\",\n                                \"text\": \"Houston\"\n                            }, {\n                                \"id\": \"4577-8576ijuth-45659\",\n                                \"text\": \"Los Angeles\"\n                            }, {\n                                \"id\": \"cascadf-3554r66t-uu\",\n                                \"text\": \"Chicago\"\n                            }, {\n                                \"id\": \"aga-264547789-jb634\",\n                                \"text\": \"None of the above\"\n                            }]\n                    }]\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/credentials\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/enrollments\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/verifications\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nexport { COLLECTION_FORMATS, CONFIG_TOKEN, SELF_ENROLLMENT_BASE_PATH, SelfEnrollmentApiModule, SelfEnrollmentConfiguration, SelfEnrollmentService, SelfEnrollmentServiceGetStatusMocksProvider, SelfEnrollmentServiceGetUsernameByUsernameMocksProvider, SelfEnrollmentServiceGetVerificationsMocksProvider, SelfEnrollmentServiceMocksProvider, SelfEnrollmentServicePostCredentialsMocksProvider, SelfEnrollmentServicePostEnrollmentsMocksProvider, SelfEnrollmentServicePostVerificationsMocksProvider };\n"]},"metadata":{},"sourceType":"module"}