{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, Self, Optional, ContentChild, Input, NgModule } from '@angular/core';\nimport { InputBaseComponent } from '@backbase/ui-ang/base-classes';\nimport * as i1 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport * as i2 from '@backbase/foundation-ang/future';\nimport * as i3 from '@backbase/ui-ang/checkbox-group';\nimport { CheckboxGroupModule } from '@backbase/ui-ang/checkbox-group';\nimport * as i4 from '@backbase/ui-ang/input-checkbox';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport * as i5 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i6 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nfunction ListMultipleSelectComponent_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ListMultipleSelectComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵtemplate(2, ListMultipleSelectComponent_ng_container_1_ng_container_2_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"div\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.listMultipleSelectAction == null ? null : ctx_r0.listMultipleSelectAction.templateRef);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    control: a0,\n    config: a1,\n    root: true\n  };\n};\n\nfunction ListMultipleSelectComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n\n    const _r2 = i0.ɵɵreference(4);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r2)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c0, ctx_r1.control, ctx_r1.config));\n  }\n}\n\nconst _c1 = function (a0, a1) {\n  return {\n    config: a0,\n    key: a1\n  };\n};\n\nconst _c2 = function (a0, a1) {\n  return {\n    control: a0,\n    config: a1\n  };\n};\n\nfunction ListMultipleSelectComponent_ng_template_3_li_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"bb-checkbox-group-ui\", 13);\n    i0.ɵɵelementContainer(2, 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainer(3, 7);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const key_r9 = i0.ɵɵnextContext().$implicit;\n\n    const _r13 = i0.ɵɵreference(5);\n\n    const ctx_r15 = i0.ɵɵnextContext();\n    const control_r5 = ctx_r15.control;\n    const config_r6 = ctx_r15.config;\n    const ctx_r10 = i0.ɵɵnextContext();\n\n    const _r2 = i0.ɵɵreference(4);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", control_r5 == null ? null : control_r5.controls[key_r9])(\"aria-label\", key_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r10.listMultipleSelectItem == null ? null : ctx_r10.listMultipleSelectItem.templateRef) || _r13)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(6, _c1, config_r6, key_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r2)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(9, _c2, control_r5 == null ? null : control_r5.controls[key_r9], config_r6 && (config_r6[key_r9] == null ? null : config_r6[key_r9].items)));\n  }\n}\n\nfunction ListMultipleSelectComponent_ng_template_3_li_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"bb-input-checkbox-ui\", 14);\n    i0.ɵɵelementContainer(1, 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const key_r9 = i0.ɵɵnextContext().$implicit;\n\n    const _r13 = i0.ɵɵreference(5);\n\n    const config_r6 = i0.ɵɵnextContext().config;\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formControlName\", key_r9)(\"aria-label\", key_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r12.listMultipleSelectItem == null ? null : ctx_r12.listMultipleSelectItem.templateRef) || _r13)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(4, _c1, config_r6, key_r9));\n  }\n}\n\nfunction ListMultipleSelectComponent_ng_template_3_li_1_ng_template_4_bb_icon_ui_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-icon-ui\", 17);\n  }\n\n  if (rf & 2) {\n    const ctx_r22 = i0.ɵɵnextContext();\n    const config_r19 = ctx_r22.config;\n    const key_r20 = ctx_r22.key;\n    i0.ɵɵproperty(\"name\", config_r19[key_r20].icon)(\"color\", config_r19[key_r20].iconColor);\n  }\n}\n\nfunction ListMultipleSelectComponent_ng_template_3_li_1_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ListMultipleSelectComponent_ng_template_3_li_1_ng_template_4_bb_icon_ui_0_Template, 1, 2, \"bb-icon-ui\", 15);\n    i0.ɵɵelementStart(1, \"span\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const config_r19 = ctx.config;\n    const key_r20 = ctx.key;\n    i0.ɵɵproperty(\"ngIf\", config_r19 && (config_r19[key_r20] == null ? null : config_r19[key_r20].icon));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(key_r20);\n  }\n}\n\nfunction ListMultipleSelectComponent_ng_template_3_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtemplate(1, ListMultipleSelectComponent_ng_template_3_li_1_ng_container_1_Template, 4, 12, \"ng-container\", 10);\n    i0.ɵɵtemplate(2, ListMultipleSelectComponent_ng_template_3_li_1_ng_template_2_Template, 2, 7, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(4, ListMultipleSelectComponent_ng_template_3_li_1_ng_template_4_Template, 3, 2, \"ng-template\", null, 12, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const key_r9 = ctx.$implicit;\n\n    const _r11 = i0.ɵɵreference(3);\n\n    const control_r5 = i0.ɵɵnextContext().control;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", control_r5 == null ? null : control_r5.controls[key_r9].controls)(\"ngIfElse\", _r11);\n  }\n}\n\nconst _c3 = function (a0) {\n  return {\n    \"bb-checkbox-group\": a0\n  };\n};\n\nfunction ListMultipleSelectComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 8);\n    i0.ɵɵtemplate(1, ListMultipleSelectComponent_ng_template_3_li_1_Template, 6, 2, \"li\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const control_r5 = ctx.control;\n    const root_r7 = ctx.root;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", control_r5)(\"ngClass\", i0.ɵɵpureFunction1(3, _c3, !root_r7));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.getKeys(control_r5 == null ? null : control_r5.controls));\n  }\n}\n\nclass ListMultipleSelectActionDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nListMultipleSelectActionDirective.ɵfac = function ListMultipleSelectActionDirective_Factory(t) {\n  return new (t || ListMultipleSelectActionDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nListMultipleSelectActionDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ListMultipleSelectActionDirective,\n  selectors: [[\"ng-template\", \"bbListMultipleSelectAction\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListMultipleSelectActionDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[bbListMultipleSelectAction]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n\nclass ListMultipleSelectItemDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nListMultipleSelectItemDirective.ɵfac = function ListMultipleSelectItemDirective_Factory(t) {\n  return new (t || ListMultipleSelectItemDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nListMultipleSelectItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ListMultipleSelectItemDirective,\n  selectors: [[\"ng-template\", \"bbListMultipleSelectItem\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListMultipleSelectItemDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[bbListMultipleSelectItem]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @name ListMultipleSelectComponent\n *\n * @description\n * Component that displays list with checkboxes.\n */\n\n\nclass ListMultipleSelectComponent extends InputBaseComponent {\n  constructor(cd, controlContainer, deprecationsService, parentFormControl) {\n    super(cd, deprecationsService);\n    this.cd = cd;\n    this.controlContainer = controlContainer;\n    this.deprecationsService = deprecationsService;\n    this.parentFormControl = parentFormControl;\n\n    if (this.parentFormControl) {\n      this.parentFormControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit() {\n    this.control = this.controlContainer.control;\n  } // TODO: use keyvalue pipe instead when angular will be upgraded to v6.1\n\n\n  getKeys(object) {\n    return Object.keys(object);\n  }\n\n}\n\nListMultipleSelectComponent.ɵfac = function ListMultipleSelectComponent_Factory(t) {\n  return new (t || ListMultipleSelectComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ControlContainer), i0.ɵɵdirectiveInject(i2.DeprecationsService), i0.ɵɵdirectiveInject(i1.NgControl, 10));\n};\n\nListMultipleSelectComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ListMultipleSelectComponent,\n  selectors: [[\"bb-list-multiple-select-ui\"]],\n  contentQueries: function ListMultipleSelectComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ListMultipleSelectActionDirective, 7);\n      i0.ɵɵcontentQuery(dirIndex, ListMultipleSelectItemDirective, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listMultipleSelectAction = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listMultipleSelectItem = _t.first);\n    }\n  },\n  inputs: {\n    config: \"config\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"bb-list-multiple-select\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [\"groupTemplate\", \"\"], [1, \"bb-list-multiple-select__action\"], [4, \"ngTemplateOutlet\"], [1, \"bb-list-multiple-select__dropdown-divider\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"bb-list-multiple-select__list\", 3, \"formGroup\", \"ngClass\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\", \"ngIfElse\"], [\"itemTemplate\", \"\"], [\"itemContent\", \"\"], [3, \"formGroup\", \"aria-label\"], [3, \"formControlName\", \"aria-label\"], [3, \"name\", \"color\", 4, \"ngIf\"], [\"data-role\", \"bb-list-multiple-select-item\"], [3, \"name\", \"color\"]],\n  template: function ListMultipleSelectComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ListMultipleSelectComponent_ng_container_1_Template, 4, 1, \"ng-container\", 1);\n      i0.ɵɵtemplate(2, ListMultipleSelectComponent_ng_container_2_Template, 1, 5, \"ng-container\", 2);\n      i0.ɵɵtemplate(3, ListMultipleSelectComponent_ng_template_3_Template, 2, 5, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.listMultipleSelectAction);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.control);\n    }\n  },\n  directives: [i6.NgIf, i6.NgTemplateOutlet, i1.NgControlStatusGroup, i1.FormGroupDirective, i6.NgClass, i6.NgForOf, i3.CheckboxGroupComponent, i4.InputCheckboxComponent, i1.NgControlStatus, i1.FormControlName, i5.IconComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListMultipleSelectComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-list-multiple-select-ui',\n      templateUrl: './list-multiple-select.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.ControlContainer\n    }, {\n      type: i2.DeprecationsService\n    }, {\n      type: i1.NgControl,\n      decorators: [{\n        type: Self\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    listMultipleSelectAction: [{\n      type: ContentChild,\n      args: [ListMultipleSelectActionDirective, {\n        static: true\n      }]\n    }],\n    listMultipleSelectItem: [{\n      type: ContentChild,\n      args: [ListMultipleSelectItemDirective, {\n        static: true\n      }]\n    }],\n    config: [{\n      type: Input\n    }]\n  });\n})();\n\nclass ListMultipleSelectModule {}\n\nListMultipleSelectModule.ɵfac = function ListMultipleSelectModule_Factory(t) {\n  return new (t || ListMultipleSelectModule)();\n};\n\nListMultipleSelectModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ListMultipleSelectModule\n});\nListMultipleSelectModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ReactiveFormsModule, InputCheckboxModule, IconModule, CheckboxGroupModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListMultipleSelectModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ReactiveFormsModule, InputCheckboxModule, IconModule, CheckboxGroupModule],\n      declarations: [ListMultipleSelectComponent, ListMultipleSelectActionDirective, ListMultipleSelectItemDirective],\n      exports: [ListMultipleSelectComponent, ListMultipleSelectActionDirective, ListMultipleSelectItemDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ListMultipleSelectActionDirective, ListMultipleSelectComponent, ListMultipleSelectItemDirective, ListMultipleSelectModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-list-multiple-select.js"],"names":["i0","Directive","Component","ChangeDetectionStrategy","Self","Optional","ContentChild","Input","NgModule","InputBaseComponent","i1","ReactiveFormsModule","i2","i3","CheckboxGroupModule","i4","InputCheckboxModule","i5","IconModule","i6","CommonModule","ListMultipleSelectActionDirective","constructor","templateRef","ɵfac","TemplateRef","ɵdir","type","args","selector","ListMultipleSelectItemDirective","ListMultipleSelectComponent","cd","controlContainer","deprecationsService","parentFormControl","valueAccessor","ngAfterContentInit","control","getKeys","object","Object","keys","ChangeDetectorRef","ControlContainer","DeprecationsService","NgControl","ɵcmp","NgIf","NgTemplateOutlet","NgControlStatusGroup","FormGroupDirective","NgClass","NgForOf","CheckboxGroupComponent","InputCheckboxComponent","NgControlStatus","FormControlName","IconComponent","templateUrl","changeDetection","OnPush","decorators","listMultipleSelectAction","static","listMultipleSelectItem","config","ListMultipleSelectModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, Self, Optional, ContentChild, Input, NgModule } from '@angular/core';\nimport { InputBaseComponent } from '@backbase/ui-ang/base-classes';\nimport * as i1 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport * as i2 from '@backbase/foundation-ang/future';\nimport * as i3 from '@backbase/ui-ang/checkbox-group';\nimport { CheckboxGroupModule } from '@backbase/ui-ang/checkbox-group';\nimport * as i4 from '@backbase/ui-ang/input-checkbox';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport * as i5 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i6 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass ListMultipleSelectActionDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nListMultipleSelectActionDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ListMultipleSelectActionDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nListMultipleSelectActionDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ListMultipleSelectActionDirective, selector: \"ng-template[bbListMultipleSelectAction]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ListMultipleSelectActionDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[bbListMultipleSelectAction]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\nclass ListMultipleSelectItemDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nListMultipleSelectItemDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ListMultipleSelectItemDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nListMultipleSelectItemDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ListMultipleSelectItemDirective, selector: \"ng-template[bbListMultipleSelectItem]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ListMultipleSelectItemDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[bbListMultipleSelectItem]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * @name ListMultipleSelectComponent\n *\n * @description\n * Component that displays list with checkboxes.\n */\nclass ListMultipleSelectComponent extends InputBaseComponent {\n    constructor(cd, controlContainer, deprecationsService, parentFormControl) {\n        super(cd, deprecationsService);\n        this.cd = cd;\n        this.controlContainer = controlContainer;\n        this.deprecationsService = deprecationsService;\n        this.parentFormControl = parentFormControl;\n        if (this.parentFormControl) {\n            this.parentFormControl.valueAccessor = this;\n        }\n    }\n    ngAfterContentInit() {\n        this.control = this.controlContainer.control;\n    }\n    // TODO: use keyvalue pipe instead when angular will be upgraded to v6.1\n    getKeys(object) {\n        return Object.keys(object);\n    }\n}\nListMultipleSelectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ListMultipleSelectComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.ControlContainer }, { token: i2.DeprecationsService }, { token: i1.NgControl, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Component });\nListMultipleSelectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ListMultipleSelectComponent, selector: \"bb-list-multiple-select-ui\", inputs: { config: \"config\" }, queries: [{ propertyName: \"listMultipleSelectAction\", first: true, predicate: ListMultipleSelectActionDirective, descendants: true, static: true }, { propertyName: \"listMultipleSelectItem\", first: true, predicate: ListMultipleSelectItemDirective, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"bb-list-multiple-select\\\">\\n  <ng-container *ngIf=\\\"listMultipleSelectAction\\\">\\n    <div class=\\\"bb-list-multiple-select__action\\\">\\n      <ng-container *ngTemplateOutlet=\\\"listMultipleSelectAction?.templateRef\\\"> </ng-container>\\n    </div>\\n    <div class=\\\"bb-list-multiple-select__dropdown-divider\\\"></div>\\n  </ng-container>\\n\\n  <ng-container\\n    *ngIf=\\\"control\\\"\\n    [ngTemplateOutlet]=\\\"groupTemplate\\\"\\n    [ngTemplateOutletContext]=\\\"{\\n      control: control,\\n      config: config,\\n      root: true\\n    }\\\"\\n  ></ng-container>\\n\\n  <ng-template #groupTemplate let-control=\\\"control\\\" let-config=\\\"config\\\" let-root=\\\"root\\\">\\n    <ul [formGroup]=\\\"control\\\" class=\\\"bb-list-multiple-select__list\\\" [ngClass]=\\\"{ 'bb-checkbox-group': !root }\\\">\\n      <li *ngFor=\\\"let key of getKeys(control?.controls)\\\">\\n        <ng-container *ngIf=\\\"(control?.controls)[key].controls; else itemTemplate\\\">\\n          <bb-checkbox-group-ui [formGroup]=\\\"(control?.controls)[key]\\\" [aria-label]=\\\"key\\\">\\n            <ng-container\\n              [ngTemplateOutlet]=\\\"listMultipleSelectItem?.templateRef || itemContent\\\"\\n              [ngTemplateOutletContext]=\\\"{\\n                config: config,\\n                key: key\\n              }\\\"\\n            ></ng-container>\\n          </bb-checkbox-group-ui>\\n\\n          <ng-container\\n            [ngTemplateOutlet]=\\\"groupTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{\\n              control: (control?.controls)[key],\\n              config: config && config[key]?.items\\n            }\\\"\\n          ></ng-container>\\n        </ng-container>\\n\\n        <ng-template #itemTemplate>\\n          <bb-input-checkbox-ui [formControlName]=\\\"key\\\" [aria-label]=\\\"key\\\">\\n            <ng-container\\n              [ngTemplateOutlet]=\\\"listMultipleSelectItem?.templateRef || itemContent\\\"\\n              [ngTemplateOutletContext]=\\\"{\\n                config: config,\\n                key: key\\n              }\\\"\\n            ></ng-container>\\n          </bb-input-checkbox-ui>\\n        </ng-template>\\n\\n        <ng-template #itemContent let-config=\\\"config\\\" let-key=\\\"key\\\">\\n          <bb-icon-ui\\n            *ngIf=\\\"config && config[key]?.icon\\\"\\n            [name]=\\\"config[key].icon\\\"\\n            [color]=\\\"config[key].iconColor\\\"\\n          ></bb-icon-ui>\\n          <span data-role=\\\"bb-list-multiple-select-item\\\">{{ key }}</span>\\n        </ng-template>\\n      </li>\\n    </ul>\\n  </ng-template>\\n</div>\\n\", components: [{ type: i3.CheckboxGroupComponent, selector: \"bb-checkbox-group-ui\" }, { type: i4.InputCheckboxComponent, selector: \"bb-input-checkbox-ui\", inputs: [\"indeterminate\"], outputs: [\"indeterminateChange\"] }, { type: i5.IconComponent, selector: \"bb-icon-ui\", inputs: [\"name\", \"inverse\", \"size\", \"color\", \"animate\", \"aria-label\", \"cropped\", \"backgroundType\"] }], directives: [{ type: i6.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i6.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i6.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i6.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.FormControlName, selector: \"[formControlName]\", inputs: [\"disabled\", \"formControlName\", \"ngModel\"], outputs: [\"ngModelChange\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ListMultipleSelectComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-list-multiple-select-ui',\n                    templateUrl: './list-multiple-select.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.ControlContainer }, { type: i2.DeprecationsService }, { type: i1.NgControl, decorators: [{\n                    type: Self\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { listMultipleSelectAction: [{\n                type: ContentChild,\n                args: [ListMultipleSelectActionDirective, { static: true }]\n            }], listMultipleSelectItem: [{\n                type: ContentChild,\n                args: [ListMultipleSelectItemDirective, { static: true }]\n            }], config: [{\n                type: Input\n            }] } });\n\nclass ListMultipleSelectModule {\n}\nListMultipleSelectModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ListMultipleSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nListMultipleSelectModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ListMultipleSelectModule, declarations: [ListMultipleSelectComponent, ListMultipleSelectActionDirective, ListMultipleSelectItemDirective], imports: [CommonModule, ReactiveFormsModule, InputCheckboxModule, IconModule, CheckboxGroupModule], exports: [ListMultipleSelectComponent, ListMultipleSelectActionDirective, ListMultipleSelectItemDirective] });\nListMultipleSelectModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ListMultipleSelectModule, imports: [[CommonModule, ReactiveFormsModule, InputCheckboxModule, IconModule, CheckboxGroupModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ListMultipleSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, ReactiveFormsModule, InputCheckboxModule, IconModule, CheckboxGroupModule],\n                    declarations: [ListMultipleSelectComponent, ListMultipleSelectActionDirective, ListMultipleSelectItemDirective],\n                    exports: [ListMultipleSelectComponent, ListMultipleSelectActionDirective, ListMultipleSelectItemDirective],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ListMultipleSelectActionDirective, ListMultipleSelectComponent, ListMultipleSelectItemDirective, ListMultipleSelectModule };\n"]},"metadata":{},"sourceType":"module"}