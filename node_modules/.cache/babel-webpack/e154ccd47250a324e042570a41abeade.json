{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\nconst PresentationAccountCategory = {\n  Asset: 'Asset',\n  Expense: 'Expense',\n  Income: 'Income',\n  Liability: 'Liability',\n  Equity: 'Equity',\n  Uncategorised: 'Uncategorised'\n};\nconst PresentationAuthorizationStatus = {\n  PendingInitialAuth: 'PendingInitialAuth',\n  Authorized: 'Authorized',\n  Deauthorized: 'Deauthorized'\n};\nconst PresentationCounterpartyType = {\n  Customer: 'Customer',\n  Supplier: 'Supplier'\n};\nconst PresentationPayableStatus = {\n  Draft: 'Draft',\n  Open: 'Open',\n  PartiallyPaid: 'PartiallyPaid',\n  Paid: 'Paid',\n  Unknown: 'Unknown'\n};\nconst PresentationReceivableStatus = {\n  Draft: 'Draft',\n  Submitted: 'Submitted',\n  PartiallyPaid: 'PartiallyPaid',\n  Paid: 'Paid'\n};\nconst CASH_FLOW_BASE_PATH = new InjectionToken('CASH_FLOW_BASE_PATH');\nconst COLLECTION_FORMATS = {\n  'csv': ',',\n  'tsv': '   ',\n  'ssv': ' ',\n  'pipes': '|'\n};\n\nclass CashFlowConfiguration {\n  constructor(configurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n    this.encoder = configurationParameters.encoder;\n\n    if (configurationParameters.credentials) {\n      this.credentials = configurationParameters.credentials;\n    } else {\n      this.credentials = {};\n    }\n  }\n\n  selectHeaderContentType(contentTypes) {\n    if (contentTypes.length === 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n\n    return type;\n  }\n\n  selectHeaderAccept(accepts) {\n    if (accepts.length === 0) {\n      return undefined;\n    }\n\n    const type = accepts.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return accepts[0];\n    }\n\n    return type;\n  }\n\n  isJsonMime(mime) {\n    const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n    return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n  }\n\n  lookupCredential(key) {\n    const value = this.credentials[key];\n    return typeof value === 'function' ? value() : value;\n  }\n\n}\n\nconst CONFIG_TOKEN = new InjectionToken('api-data-module CashFlowConfiguration');\n\nclass CashFlowApiModule {\n  constructor(parentModule, http, dataModulesManager, config) {\n    if (parentModule) {\n      throw new Error('CashFlowApiModule is already loaded. Import in your base AppModule only.');\n    }\n\n    if (!http) {\n      throw new Error('You need to import the HttpClientModule in your AppModule! \\n' + 'See also https://github.com/angular/angular/issues/20575');\n    }\n\n    if (dataModulesManager) {\n      dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n        apiRoot: '',\n        servicePath: config.basePath || '',\n        headers: {}\n      });\n    }\n  }\n\n  static forRoot(configurationFactory) {\n    return {\n      ngModule: CashFlowApiModule,\n      providers: [{\n        provide: CashFlowConfiguration,\n        useFactory: configurationFactory\n      }]\n    };\n  }\n\n}\n\nCashFlowApiModule.ɵfac = function CashFlowApiModule_Factory(t) {\n  return new (t || CashFlowApiModule)(i0.ɵɵinject(CashFlowApiModule, 12), i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DataModulesManager, 8), i0.ɵɵinject(CashFlowConfiguration));\n};\n\nCashFlowApiModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CashFlowApiModule\n});\nCashFlowApiModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [],\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CashFlowApiModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [],\n      exports: [],\n      providers: []\n    }]\n  }], function () {\n    return [{\n      type: CashFlowApiModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: i1.HttpClient,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2.DataModulesManager,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: CashFlowConfiguration\n    }];\n  }, null);\n})();\n\nclass CustomHttpParameterCodec {\n  encodeKey(k) {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v) {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k) {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v) {\n    return decodeURIComponent(v);\n  }\n\n}\n\nclass AccountingPlatformsHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new CashFlowConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  getAccountingPlatforms(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/accounting-platforms`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getAccountingPlatformsUrl() {\n    return `${this.configuration.basePath}/client-api/v1/accounting-platforms`;\n  }\n\n}\n\nAccountingPlatformsHttpService.ɵfac = function AccountingPlatformsHttpService_Factory(t) {\n  return new (t || AccountingPlatformsHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(CASH_FLOW_BASE_PATH, 8), i0.ɵɵinject(CashFlowConfiguration, 8));\n};\n\nAccountingPlatformsHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AccountingPlatformsHttpService,\n  factory: AccountingPlatformsHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AccountingPlatformsHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [CASH_FLOW_BASE_PATH]\n      }]\n    }, {\n      type: CashFlowConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst AccountingPlatformsHttpServiceGetAccountingPlatformsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/accounting-platforms\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"id\": \"quickbooks\",\n      \"logoUrl\": \"https://quickbooks.intuit.com/content/dam/intuit/quickbooks/common/qb_thumb.png\",\n      \"name\": \"QuickBooks\"\n    }, {\n      \"id\": \"xero\",\n      \"logoUrl\": \"https://www.xero.com/etc/designs/xero-cms/clientlib/assets/img/logo/logo-xero-blue.svg\",\n      \"name\": \"Xero\"\n    }]\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst AccountingPlatformsHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/accounting-platforms\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"id\": \"quickbooks\",\n      \"logoUrl\": \"https://quickbooks.intuit.com/content/dam/intuit/quickbooks/common/qb_thumb.png\",\n      \"name\": \"QuickBooks\"\n    }, {\n      \"id\": \"xero\",\n      \"logoUrl\": \"https://www.xero.com/etc/designs/xero-cms/clientlib/assets/img/logo/logo-xero-blue.svg\",\n      \"name\": \"Xero\"\n    }]\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\n\nclass ChartOfAccountsHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new CashFlowConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  getChartOfAccounts(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/chart-of-accounts`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getChartOfAccountsUrl() {\n    return `${this.configuration.basePath}/client-api/v1/chart-of-accounts`;\n  }\n\n}\n\nChartOfAccountsHttpService.ɵfac = function ChartOfAccountsHttpService_Factory(t) {\n  return new (t || ChartOfAccountsHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(CASH_FLOW_BASE_PATH, 8), i0.ɵɵinject(CashFlowConfiguration, 8));\n};\n\nChartOfAccountsHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ChartOfAccountsHttpService,\n  factory: ChartOfAccountsHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartOfAccountsHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [CASH_FLOW_BASE_PATH]\n      }]\n    }, {\n      type: CashFlowConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst ChartOfAccountsHttpServiceGetChartOfAccountsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/chart-of-accounts\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"syncDatetime\": \"2020-11-05T12:06:43Z\",\n      \"chartOfAccounts\": [{\n        \"id\": \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\",\n        \"name\": \"Accounts Receivable\",\n        \"nominalCode\": \"84\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"77b9ba20-924e-4be8-8077-87278297d915\",\n        \"name\": \"Checking\",\n        \"nominalCode\": \"35\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"7e776b86-151e-4a4a-a60a-f36e682e2a50\",\n        \"name\": \"Depreciation\",\n        \"nominalCode\": \"39\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\",\n        \"name\": \"Inventory Asset\",\n        \"nominalCode\": \"81\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"271c798c-031c-4cfc-828c-d40e37fbb003\",\n        \"name\": \"Original Cost\",\n        \"nominalCode\": \"38\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\",\n        \"name\": \"Prepaid Expenses\",\n        \"nominalCode\": \"3\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"497559c7-60bf-476c-8b16-09b8952a9722\",\n        \"name\": \"Savings\",\n        \"nominalCode\": \"36\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"9e68b349-72af-4cf3-8ea8-abd76f31064e\",\n        \"name\": \"Truck\",\n        \"nominalCode\": \"37\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\",\n        \"name\": \"Uncategorized Asset\",\n        \"nominalCode\": \"32\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\",\n        \"name\": \"Undeposited Funds\",\n        \"nominalCode\": \"4\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"6b718262-6099-4f32-9795-7aae2a25eac7\",\n        \"name\": \"Opening Balance Equity\",\n        \"nominalCode\": \"34\",\n        \"category\": \"Equity\"\n      }, {\n        \"id\": \"22a92103-3ee1-41fa-9722-1fc209caa2c2\",\n        \"name\": \"Retained Earnings\",\n        \"nominalCode\": \"2\",\n        \"category\": \"Equity\"\n      }, {\n        \"id\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n        \"name\": \"Accounting\",\n        \"nominalCode\": \"69\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"d4721d9a-d77b-4361-9807-09331ffcb6af\",\n        \"name\": \"Advertising\",\n        \"nominalCode\": \"7\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\",\n        \"name\": \"Automobile\",\n        \"nominalCode\": \"55\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"771aad7c-70d2-4f7e-9309-0ab33e11e589\",\n        \"name\": \"Bank Charges\",\n        \"nominalCode\": \"8\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"3d9747ce-afbf-4ff1-b23d-559206c5998c\",\n        \"name\": \"Bookkeeper\",\n        \"nominalCode\": \"70\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\",\n        \"name\": \"Building Repairs\",\n        \"nominalCode\": \"73\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\",\n        \"name\": \"Commissions & fees\",\n        \"nominalCode\": \"9\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"4339c2ee-4040-4996-acf5-810b6c8eb337\",\n        \"name\": \"Computer Repairs\",\n        \"nominalCode\": \"74\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\",\n        \"name\": \"Cost of Goods Sold\",\n        \"nominalCode\": \"80\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"f421c967-88eb-43c1-b19e-aa03f15f67ce\",\n        \"name\": \"Cost of Labor\",\n        \"nominalCode\": \"59\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"1137cd94-52b1-45b5-a573-1723c89a35f2\",\n        \"name\": \"Decks and Patios\",\n        \"nominalCode\": \"64\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\",\n        \"name\": \"Depreciation\",\n        \"nominalCode\": \"40\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ccfb434a-b289-441c-99a2-30e05a572057\",\n        \"name\": \"Disposal Fees\",\n        \"nominalCode\": \"28\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"9c400ca0-009e-475a-abc6-d5a76154aa0a\",\n        \"name\": \"Dues & Subscriptions\",\n        \"nominalCode\": \"10\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"74d34736-f4a0-4638-9465-4f5254ddb1b5\",\n        \"name\": \"Equipment Rental\",\n        \"nominalCode\": \"29\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\",\n        \"name\": \"Equipment Rental\",\n        \"nominalCode\": \"62\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"0d9d51d4-b347-480b-88f3-6107f0ba343f\",\n        \"name\": \"Equipment Repairs\",\n        \"nominalCode\": \"75\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\",\n        \"name\": \"Fountain and Garden Lighting\",\n        \"nominalCode\": \"65\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"7877e117-f0ac-4142-841f-84e062f77128\",\n        \"name\": \"Fuel\",\n        \"nominalCode\": \"56\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"225f6f2a-445e-48b3-88b5-e3f9daae059a\",\n        \"name\": \"Gas and Electric\",\n        \"nominalCode\": \"76\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\",\n        \"name\": \"Installation\",\n        \"nominalCode\": \"60\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\",\n        \"name\": \"Insurance\",\n        \"nominalCode\": \"11\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\",\n        \"name\": \"Job Expenses\",\n        \"nominalCode\": \"58\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ecc43720-0fb4-4b20-9561-73f78021a3fa\",\n        \"name\": \"Job Materials\",\n        \"nominalCode\": \"63\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"4a959dfe-428f-48c2-88f6-efc155f2a19c\",\n        \"name\": \"Lawyer\",\n        \"nominalCode\": \"71\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n        \"name\": \"Legal & Professional Fees\",\n        \"nominalCode\": \"12\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"6333a502-088a-4314-a8d1-05e5cf61e023\",\n        \"name\": \"Maintenance and Repair\",\n        \"nominalCode\": \"72\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\",\n        \"name\": \"Maintenance and Repairs\",\n        \"nominalCode\": \"61\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\",\n        \"name\": \"Meals and Entertainment\",\n        \"nominalCode\": \"13\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"b2e758c5-92f5-4f52-b915-cc8ea0357868\",\n        \"name\": \"Miscellaneous\",\n        \"nominalCode\": \"14\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"1e870df7-7255-41e2-8220-e24c301af038\",\n        \"name\": \"Office Expenses\",\n        \"nominalCode\": \"15\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\",\n        \"name\": \"Penalties & Settlements\",\n        \"nominalCode\": \"27\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ba81920a-23b7-4634-946f-47f0067d9e1a\",\n        \"name\": \"Permits\",\n        \"nominalCode\": \"68\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\",\n        \"name\": \"Plants and Soil\",\n        \"nominalCode\": \"66\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n        \"name\": \"Promotional\",\n        \"nominalCode\": \"16\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\",\n        \"name\": \"Purchases\",\n        \"nominalCode\": \"78\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"3b353731-f571-4854-8240-0d49cc81fecc\",\n        \"name\": \"Rent or Lease\",\n        \"nominalCode\": \"17\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"8e03d0a6-f172-40bd-adf1-3834e9734267\",\n        \"name\": \"Repair & Maintenance (deleted)\",\n        \"nominalCode\": \"18\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"bc366bf7-30db-4856-9f65-06ffc01596f5\",\n        \"name\": \"Sprinklers and Drip Systems\",\n        \"nominalCode\": \"67\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"c9205c03-ea6a-48a0-be07-733f894db4d8\",\n        \"name\": \"Stationery & Printing\",\n        \"nominalCode\": \"19\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"d61afb14-0da1-43ba-935e-4b4a08a012fe\",\n        \"name\": \"Supplies\",\n        \"nominalCode\": \"20\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\",\n        \"name\": \"Taxes & Licenses\",\n        \"nominalCode\": \"21\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"acf2e2dd-cc98-4c16-a705-d0010b593083\",\n        \"name\": \"Telephone\",\n        \"nominalCode\": \"77\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"0e0f7942-612f-481c-8166-ea33fe398a74\",\n        \"name\": \"Travel\",\n        \"nominalCode\": \"22\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\",\n        \"name\": \"Travel Meals\",\n        \"nominalCode\": \"23\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\",\n        \"name\": \"Unapplied Cash Bill Payment Expense\",\n        \"nominalCode\": \"88\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\",\n        \"name\": \"Uncategorized Expense\",\n        \"nominalCode\": \"31\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ca5ea429-6cc0-4870-8513-a4e696b312d4\",\n        \"name\": \"Utilities\",\n        \"nominalCode\": \"24\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"a3ad5046-6a41-4b55-9072-66e5872fba62\",\n        \"name\": \"Workers Compensation\",\n        \"nominalCode\": \"57\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"773e43aa-8505-48b9-94ef-d7bc5786609a\",\n        \"name\": \"Billable Expense Income\",\n        \"nominalCode\": \"85\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\",\n        \"name\": \"Decks and Patios\",\n        \"nominalCode\": \"47\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n        \"name\": \"Design income\",\n        \"nominalCode\": \"82\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"587bc9dd-553d-4b3d-88d8-5256eedfb499\",\n        \"name\": \"Discounts given\",\n        \"nominalCode\": \"86\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"ef961774-568d-4746-a790-fa8e22907db5\",\n        \"name\": \"Fees Billed\",\n        \"nominalCode\": \"5\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n        \"name\": \"Fountains and Garden Lighting\",\n        \"nominalCode\": \"48\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"442e062b-8585-4f14-9763-8990c9fd6087\",\n        \"name\": \"Installation\",\n        \"nominalCode\": \"52\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"81860ebb-997f-47b6-a1ff-30988af2520d\",\n        \"name\": \"Interest Earned\",\n        \"nominalCode\": \"25\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"1bb12d54-9d81-4b63-b1c1-af419e47a687\",\n        \"name\": \"Job Materials\",\n        \"nominalCode\": \"46\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\",\n        \"name\": \"Labor\",\n        \"nominalCode\": \"51\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\",\n        \"name\": \"Landscaping Services\",\n        \"nominalCode\": \"45\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\",\n        \"name\": \"Maintenance and Repair\",\n        \"nominalCode\": \"53\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\",\n        \"name\": \"Other Income\",\n        \"nominalCode\": \"83\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"45b174a0-45be-4134-95ee-27b751f29b6e\",\n        \"name\": \"Other Portfolio Income\",\n        \"nominalCode\": \"26\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"de6e8ce5-90fc-4379-9972-951b94897fcc\",\n        \"name\": \"Pest Control Services\",\n        \"nominalCode\": \"54\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\",\n        \"name\": \"Plants and Soil\",\n        \"nominalCode\": \"49\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"700def49-ca84-4fa5-83d3-3de9cf393200\",\n        \"name\": \"Refunds-Allowances\",\n        \"nominalCode\": \"6\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"b15090b5-bcea-4655-a7aa-861e6084ca8b\",\n        \"name\": \"Sales of Product Income\",\n        \"nominalCode\": \"79\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\",\n        \"name\": \"Services\",\n        \"nominalCode\": \"1\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\",\n        \"name\": \"Sprinklers and Drip Systems\",\n        \"nominalCode\": \"50\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"c9c3eff9-0968-4d1f-b321-c2499c079014\",\n        \"name\": \"Unapplied Cash Payment Income\",\n        \"nominalCode\": \"87\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\",\n        \"name\": \"Uncategorized Income\",\n        \"nominalCode\": \"30\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"a4163fda-a2c0-4d12-93cb-e016f049fee6\",\n        \"name\": \"Accounts Payable\",\n        \"nominalCode\": \"33\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"e2521f1a-ab18-483f-89d9-ea0434f00989\",\n        \"name\": \"Arizona Dept. of Revenue Payable\",\n        \"nominalCode\": \"89\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\",\n        \"name\": \"Board of Equalization Payable\",\n        \"nominalCode\": \"90\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"26dfb943-b6fb-484b-82b5-85eca47fe07c\",\n        \"name\": \"Loan Payable\",\n        \"nominalCode\": \"43\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"109b5a2f-8b10-4953-a388-2934f4f60a6e\",\n        \"name\": \"Mastercard\",\n        \"nominalCode\": \"41\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"e11719b8-0ec3-4bd7-943a-72f575ef7890\",\n        \"name\": \"Notes Payable\",\n        \"nominalCode\": \"44\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"484ef212-372c-41bc-9a0b-9a3b64c78218\",\n        \"name\": \"Visa\",\n        \"nominalCode\": \"42\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"da439b63-4dc2-45c4-9cf8-d4984413403e\",\n        \"name\": \"Unknown\",\n        \"description\": \"Amounts that are not attributed to any specific account.\",\n        \"category\": \"Uncategorised\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst ChartOfAccountsHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/chart-of-accounts\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"syncDatetime\": \"2020-11-05T12:06:43Z\",\n      \"chartOfAccounts\": [{\n        \"id\": \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\",\n        \"name\": \"Accounts Receivable\",\n        \"nominalCode\": \"84\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"77b9ba20-924e-4be8-8077-87278297d915\",\n        \"name\": \"Checking\",\n        \"nominalCode\": \"35\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"7e776b86-151e-4a4a-a60a-f36e682e2a50\",\n        \"name\": \"Depreciation\",\n        \"nominalCode\": \"39\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\",\n        \"name\": \"Inventory Asset\",\n        \"nominalCode\": \"81\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"271c798c-031c-4cfc-828c-d40e37fbb003\",\n        \"name\": \"Original Cost\",\n        \"nominalCode\": \"38\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\",\n        \"name\": \"Prepaid Expenses\",\n        \"nominalCode\": \"3\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"497559c7-60bf-476c-8b16-09b8952a9722\",\n        \"name\": \"Savings\",\n        \"nominalCode\": \"36\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"9e68b349-72af-4cf3-8ea8-abd76f31064e\",\n        \"name\": \"Truck\",\n        \"nominalCode\": \"37\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\",\n        \"name\": \"Uncategorized Asset\",\n        \"nominalCode\": \"32\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\",\n        \"name\": \"Undeposited Funds\",\n        \"nominalCode\": \"4\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"6b718262-6099-4f32-9795-7aae2a25eac7\",\n        \"name\": \"Opening Balance Equity\",\n        \"nominalCode\": \"34\",\n        \"category\": \"Equity\"\n      }, {\n        \"id\": \"22a92103-3ee1-41fa-9722-1fc209caa2c2\",\n        \"name\": \"Retained Earnings\",\n        \"nominalCode\": \"2\",\n        \"category\": \"Equity\"\n      }, {\n        \"id\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n        \"name\": \"Accounting\",\n        \"nominalCode\": \"69\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"d4721d9a-d77b-4361-9807-09331ffcb6af\",\n        \"name\": \"Advertising\",\n        \"nominalCode\": \"7\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\",\n        \"name\": \"Automobile\",\n        \"nominalCode\": \"55\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"771aad7c-70d2-4f7e-9309-0ab33e11e589\",\n        \"name\": \"Bank Charges\",\n        \"nominalCode\": \"8\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"3d9747ce-afbf-4ff1-b23d-559206c5998c\",\n        \"name\": \"Bookkeeper\",\n        \"nominalCode\": \"70\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\",\n        \"name\": \"Building Repairs\",\n        \"nominalCode\": \"73\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\",\n        \"name\": \"Commissions & fees\",\n        \"nominalCode\": \"9\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"4339c2ee-4040-4996-acf5-810b6c8eb337\",\n        \"name\": \"Computer Repairs\",\n        \"nominalCode\": \"74\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\",\n        \"name\": \"Cost of Goods Sold\",\n        \"nominalCode\": \"80\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"f421c967-88eb-43c1-b19e-aa03f15f67ce\",\n        \"name\": \"Cost of Labor\",\n        \"nominalCode\": \"59\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"1137cd94-52b1-45b5-a573-1723c89a35f2\",\n        \"name\": \"Decks and Patios\",\n        \"nominalCode\": \"64\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\",\n        \"name\": \"Depreciation\",\n        \"nominalCode\": \"40\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ccfb434a-b289-441c-99a2-30e05a572057\",\n        \"name\": \"Disposal Fees\",\n        \"nominalCode\": \"28\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"9c400ca0-009e-475a-abc6-d5a76154aa0a\",\n        \"name\": \"Dues & Subscriptions\",\n        \"nominalCode\": \"10\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"74d34736-f4a0-4638-9465-4f5254ddb1b5\",\n        \"name\": \"Equipment Rental\",\n        \"nominalCode\": \"29\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\",\n        \"name\": \"Equipment Rental\",\n        \"nominalCode\": \"62\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"0d9d51d4-b347-480b-88f3-6107f0ba343f\",\n        \"name\": \"Equipment Repairs\",\n        \"nominalCode\": \"75\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\",\n        \"name\": \"Fountain and Garden Lighting\",\n        \"nominalCode\": \"65\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"7877e117-f0ac-4142-841f-84e062f77128\",\n        \"name\": \"Fuel\",\n        \"nominalCode\": \"56\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"225f6f2a-445e-48b3-88b5-e3f9daae059a\",\n        \"name\": \"Gas and Electric\",\n        \"nominalCode\": \"76\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\",\n        \"name\": \"Installation\",\n        \"nominalCode\": \"60\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\",\n        \"name\": \"Insurance\",\n        \"nominalCode\": \"11\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\",\n        \"name\": \"Job Expenses\",\n        \"nominalCode\": \"58\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ecc43720-0fb4-4b20-9561-73f78021a3fa\",\n        \"name\": \"Job Materials\",\n        \"nominalCode\": \"63\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"4a959dfe-428f-48c2-88f6-efc155f2a19c\",\n        \"name\": \"Lawyer\",\n        \"nominalCode\": \"71\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n        \"name\": \"Legal & Professional Fees\",\n        \"nominalCode\": \"12\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"6333a502-088a-4314-a8d1-05e5cf61e023\",\n        \"name\": \"Maintenance and Repair\",\n        \"nominalCode\": \"72\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\",\n        \"name\": \"Maintenance and Repairs\",\n        \"nominalCode\": \"61\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\",\n        \"name\": \"Meals and Entertainment\",\n        \"nominalCode\": \"13\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"b2e758c5-92f5-4f52-b915-cc8ea0357868\",\n        \"name\": \"Miscellaneous\",\n        \"nominalCode\": \"14\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"1e870df7-7255-41e2-8220-e24c301af038\",\n        \"name\": \"Office Expenses\",\n        \"nominalCode\": \"15\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\",\n        \"name\": \"Penalties & Settlements\",\n        \"nominalCode\": \"27\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ba81920a-23b7-4634-946f-47f0067d9e1a\",\n        \"name\": \"Permits\",\n        \"nominalCode\": \"68\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\",\n        \"name\": \"Plants and Soil\",\n        \"nominalCode\": \"66\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n        \"name\": \"Promotional\",\n        \"nominalCode\": \"16\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\",\n        \"name\": \"Purchases\",\n        \"nominalCode\": \"78\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"3b353731-f571-4854-8240-0d49cc81fecc\",\n        \"name\": \"Rent or Lease\",\n        \"nominalCode\": \"17\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"8e03d0a6-f172-40bd-adf1-3834e9734267\",\n        \"name\": \"Repair & Maintenance (deleted)\",\n        \"nominalCode\": \"18\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"bc366bf7-30db-4856-9f65-06ffc01596f5\",\n        \"name\": \"Sprinklers and Drip Systems\",\n        \"nominalCode\": \"67\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"c9205c03-ea6a-48a0-be07-733f894db4d8\",\n        \"name\": \"Stationery & Printing\",\n        \"nominalCode\": \"19\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"d61afb14-0da1-43ba-935e-4b4a08a012fe\",\n        \"name\": \"Supplies\",\n        \"nominalCode\": \"20\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\",\n        \"name\": \"Taxes & Licenses\",\n        \"nominalCode\": \"21\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"acf2e2dd-cc98-4c16-a705-d0010b593083\",\n        \"name\": \"Telephone\",\n        \"nominalCode\": \"77\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"0e0f7942-612f-481c-8166-ea33fe398a74\",\n        \"name\": \"Travel\",\n        \"nominalCode\": \"22\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\",\n        \"name\": \"Travel Meals\",\n        \"nominalCode\": \"23\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\",\n        \"name\": \"Unapplied Cash Bill Payment Expense\",\n        \"nominalCode\": \"88\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\",\n        \"name\": \"Uncategorized Expense\",\n        \"nominalCode\": \"31\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ca5ea429-6cc0-4870-8513-a4e696b312d4\",\n        \"name\": \"Utilities\",\n        \"nominalCode\": \"24\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"a3ad5046-6a41-4b55-9072-66e5872fba62\",\n        \"name\": \"Workers Compensation\",\n        \"nominalCode\": \"57\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"773e43aa-8505-48b9-94ef-d7bc5786609a\",\n        \"name\": \"Billable Expense Income\",\n        \"nominalCode\": \"85\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\",\n        \"name\": \"Decks and Patios\",\n        \"nominalCode\": \"47\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n        \"name\": \"Design income\",\n        \"nominalCode\": \"82\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"587bc9dd-553d-4b3d-88d8-5256eedfb499\",\n        \"name\": \"Discounts given\",\n        \"nominalCode\": \"86\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"ef961774-568d-4746-a790-fa8e22907db5\",\n        \"name\": \"Fees Billed\",\n        \"nominalCode\": \"5\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n        \"name\": \"Fountains and Garden Lighting\",\n        \"nominalCode\": \"48\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"442e062b-8585-4f14-9763-8990c9fd6087\",\n        \"name\": \"Installation\",\n        \"nominalCode\": \"52\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"81860ebb-997f-47b6-a1ff-30988af2520d\",\n        \"name\": \"Interest Earned\",\n        \"nominalCode\": \"25\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"1bb12d54-9d81-4b63-b1c1-af419e47a687\",\n        \"name\": \"Job Materials\",\n        \"nominalCode\": \"46\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\",\n        \"name\": \"Labor\",\n        \"nominalCode\": \"51\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\",\n        \"name\": \"Landscaping Services\",\n        \"nominalCode\": \"45\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\",\n        \"name\": \"Maintenance and Repair\",\n        \"nominalCode\": \"53\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\",\n        \"name\": \"Other Income\",\n        \"nominalCode\": \"83\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"45b174a0-45be-4134-95ee-27b751f29b6e\",\n        \"name\": \"Other Portfolio Income\",\n        \"nominalCode\": \"26\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"de6e8ce5-90fc-4379-9972-951b94897fcc\",\n        \"name\": \"Pest Control Services\",\n        \"nominalCode\": \"54\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\",\n        \"name\": \"Plants and Soil\",\n        \"nominalCode\": \"49\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"700def49-ca84-4fa5-83d3-3de9cf393200\",\n        \"name\": \"Refunds-Allowances\",\n        \"nominalCode\": \"6\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"b15090b5-bcea-4655-a7aa-861e6084ca8b\",\n        \"name\": \"Sales of Product Income\",\n        \"nominalCode\": \"79\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\",\n        \"name\": \"Services\",\n        \"nominalCode\": \"1\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\",\n        \"name\": \"Sprinklers and Drip Systems\",\n        \"nominalCode\": \"50\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"c9c3eff9-0968-4d1f-b321-c2499c079014\",\n        \"name\": \"Unapplied Cash Payment Income\",\n        \"nominalCode\": \"87\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\",\n        \"name\": \"Uncategorized Income\",\n        \"nominalCode\": \"30\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"a4163fda-a2c0-4d12-93cb-e016f049fee6\",\n        \"name\": \"Accounts Payable\",\n        \"nominalCode\": \"33\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"e2521f1a-ab18-483f-89d9-ea0434f00989\",\n        \"name\": \"Arizona Dept. of Revenue Payable\",\n        \"nominalCode\": \"89\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\",\n        \"name\": \"Board of Equalization Payable\",\n        \"nominalCode\": \"90\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"26dfb943-b6fb-484b-82b5-85eca47fe07c\",\n        \"name\": \"Loan Payable\",\n        \"nominalCode\": \"43\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"109b5a2f-8b10-4953-a388-2934f4f60a6e\",\n        \"name\": \"Mastercard\",\n        \"nominalCode\": \"41\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"e11719b8-0ec3-4bd7-943a-72f575ef7890\",\n        \"name\": \"Notes Payable\",\n        \"nominalCode\": \"44\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"484ef212-372c-41bc-9a0b-9a3b64c78218\",\n        \"name\": \"Visa\",\n        \"nominalCode\": \"42\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"da439b63-4dc2-45c4-9cf8-d4984413403e\",\n        \"name\": \"Unknown\",\n        \"description\": \"Amounts that are not attributed to any specific account.\",\n        \"category\": \"Uncategorised\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\n\nclass DefaultCurrencyHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new CashFlowConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  getDefaultCurrency(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/default-currency`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getDefaultCurrencyUrl() {\n    return `${this.configuration.basePath}/client-api/v1/default-currency`;\n  }\n\n}\n\nDefaultCurrencyHttpService.ɵfac = function DefaultCurrencyHttpService_Factory(t) {\n  return new (t || DefaultCurrencyHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(CASH_FLOW_BASE_PATH, 8), i0.ɵɵinject(CashFlowConfiguration, 8));\n};\n\nDefaultCurrencyHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DefaultCurrencyHttpService,\n  factory: DefaultCurrencyHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultCurrencyHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [CASH_FLOW_BASE_PATH]\n      }]\n    }, {\n      type: CashFlowConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst DefaultCurrencyHttpServiceGetDefaultCurrencyMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/default-currency\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"value\": \"USD\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst DefaultCurrencyHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/default-currency\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"value\": \"USD\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\n\nclass ForecastConfigurationsHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new CashFlowConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  getForecastConfigurationById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _configurationId = requestParameters[\"configurationId\"];\n\n    if (_configurationId === null || _configurationId === undefined) {\n      throw new Error('Required parameter configurationId was null or undefined when calling getForecastConfigurationById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/forecast-configurations/${encodeURIComponent(String(_configurationId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getForecastConfigurationByIdUrl(requestParameters) {\n    const _configurationId = requestParameters[\"configurationId\"];\n\n    if (_configurationId === null || _configurationId === undefined) {\n      throw new Error('Required parameter configurationId was null or undefined when calling getForecastConfigurationById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v1/forecast-configurations/${encodeURIComponent(String(_configurationId))}`;\n  }\n\n  getForecastConfigurations(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/forecast-configurations`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getForecastConfigurationsUrl() {\n    return `${this.configuration.basePath}/client-api/v1/forecast-configurations`;\n  }\n\n  postForecastConfigurations(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _presentationForecastConfiguration = requestParameters[\"presentationForecastConfiguration\"];\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v1/forecast-configurations`, _presentationForecastConfiguration, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postForecastConfigurationsUrl(requestParameters) {\n    const _presentationForecastConfiguration = requestParameters[\"presentationForecastConfiguration\"];\n    return `${this.configuration.basePath}/client-api/v1/forecast-configurations`;\n  }\n\n  putForecastConfigurationById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _configurationId = requestParameters[\"configurationId\"];\n\n    if (_configurationId === null || _configurationId === undefined) {\n      throw new Error('Required parameter configurationId was null or undefined when calling putForecastConfigurationById.');\n    }\n\n    const _presentationForecastConfiguration = requestParameters[\"presentationForecastConfiguration\"];\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v1/forecast-configurations/${encodeURIComponent(String(_configurationId))}`, _presentationForecastConfiguration, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putForecastConfigurationByIdUrl(requestParameters) {\n    const _configurationId = requestParameters[\"configurationId\"];\n\n    if (_configurationId === null || _configurationId === undefined) {\n      throw new Error('Required parameter configurationId was null or undefined when calling putForecastConfigurationById.');\n    }\n\n    const _presentationForecastConfiguration = requestParameters[\"presentationForecastConfiguration\"];\n    return `${this.configuration.basePath}/client-api/v1/forecast-configurations/${encodeURIComponent(String(_configurationId))}`;\n  }\n\n}\n\nForecastConfigurationsHttpService.ɵfac = function ForecastConfigurationsHttpService_Factory(t) {\n  return new (t || ForecastConfigurationsHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(CASH_FLOW_BASE_PATH, 8), i0.ɵɵinject(CashFlowConfiguration, 8));\n};\n\nForecastConfigurationsHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ForecastConfigurationsHttpService,\n  factory: ForecastConfigurationsHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ForecastConfigurationsHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [CASH_FLOW_BASE_PATH]\n      }]\n    }, {\n      type: CashFlowConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst ForecastConfigurationsHttpServiceGetForecastConfigurationByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/forecast-configurations/{configurationId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n      \"currencyCode\": \"USD\",\n      \"bankAccountIds\": [\"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\", \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\", \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\"],\n      \"chartOfAccountIds\": [\"a3ad5046-6a41-4b55-9072-66e5872fba62\", \"6b718262-6099-4f32-9795-7aae2a25eac7\", \"b2e758c5-92f5-4f52-b915-cc8ea0357868\", \"700def49-ca84-4fa5-83d3-3de9cf393200\", \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\", \"d4721d9a-d77b-4361-9807-09331ffcb6af\", \"6333a502-088a-4314-a8d1-05e5cf61e023\", \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\", \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\", \"773e43aa-8505-48b9-94ef-d7bc5786609a\", \"e11719b8-0ec3-4bd7-943a-72f575ef7890\", \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\", \"109b5a2f-8b10-4953-a388-2934f4f60a6e\", \"8e03d0a6-f172-40bd-adf1-3834e9734267\", \"4a959dfe-428f-48c2-88f6-efc155f2a19c\", \"1bb12d54-9d81-4b63-b1c1-af419e47a687\", \"d61afb14-0da1-43ba-935e-4b4a08a012fe\", \"f421c967-88eb-43c1-b19e-aa03f15f67ce\", \"8fca197a-3242-4795-8b06-48d821315ad1\", \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\", \"26dfb943-b6fb-484b-82b5-85eca47fe07c\", \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\", \"4339c2ee-4040-4996-acf5-810b6c8eb337\", \"77b9ba20-924e-4be8-8077-87278297d915\", \"0e0f7942-612f-481c-8166-ea33fe398a74\", \"81860ebb-997f-47b6-a1ff-30988af2520d\", \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\", \"c9c3eff9-0968-4d1f-b321-c2499c079014\", \"271c798c-031c-4cfc-828c-d40e37fbb003\", \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\", \"587bc9dd-553d-4b3d-88d8-5256eedfb499\", \"ccfb434a-b289-441c-99a2-30e05a572057\", \"484ef212-372c-41bc-9a0b-9a3b64c78218\", \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\", \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\", \"b15090b5-bcea-4655-a7aa-861e6084ca8b\", \"497559c7-60bf-476c-8b16-09b8952a9722\", \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\", \"9c400ca0-009e-475a-abc6-d5a76154aa0a\", \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\", \"9e68b349-72af-4cf3-8ea8-abd76f31064e\", \"771aad7c-70d2-4f7e-9309-0ab33e11e589\", \"45b174a0-45be-4134-95ee-27b751f29b6e\", \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\", \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\", \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\", \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\", \"3d9747ce-afbf-4ff1-b23d-559206c5998c\", \"1158aa19-894e-40ea-a54f-f2c6808c879a\", \"1e870df7-7255-41e2-8220-e24c301af038\", \"e2521f1a-ab18-483f-89d9-ea0434f00989\", \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\", \"1137cd94-52b1-45b5-a573-1723c89a35f2\", \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\", \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\", \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\", \"0d9d51d4-b347-480b-88f3-6107f0ba343f\", \"bc366bf7-30db-4856-9f65-06ffc01596f5\", \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\", \"7877e117-f0ac-4142-841f-84e062f77128\", \"ca5ea429-6cc0-4870-8513-a4e696b312d4\", \"ba81920a-23b7-4634-946f-47f0067d9e1a\", \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\", \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\", \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\", \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\", \"74d34736-f4a0-4638-9465-4f5254ddb1b5\", \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\", \"ef961774-568d-4746-a790-fa8e22907db5\", \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\", \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\", \"442e062b-8585-4f14-9763-8990c9fd6087\", \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\", \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\", \"da439b63-4dc2-45c4-9cf8-d4984413403e\", \"3b353731-f571-4854-8240-0d49cc81fecc\", \"ecc43720-0fb4-4b20-9561-73f78021a3fa\", \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\", \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\", \"22a92103-3ee1-41fa-9722-1fc209caa2c2\", \"f934846d-8461-44dd-89be-3d4cc7b59a53\", \"a4163fda-a2c0-4d12-93cb-e016f049fee6\", \"225f6f2a-445e-48b3-88b5-e3f9daae059a\", \"acf2e2dd-cc98-4c16-a705-d0010b593083\", \"de6e8ce5-90fc-4379-9972-951b94897fcc\", \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\", \"c9205c03-ea6a-48a0-be07-733f894db4d8\", \"7e776b86-151e-4a4a-a60a-f36e682e2a50\", \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\", \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\", \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\"]\n    }\n  }, {\n    status: 200,\n    body: {\n      \"chartOfAccountIds\": [\"chartOfAccountIds\", \"chartOfAccountIds\"],\n      \"id\": \"id\",\n      \"currencyCode\": \"currencyCode\",\n      \"bankAccountIds\": [\"bankAccountIds\", \"bankAccountIds\"]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst ForecastConfigurationsHttpServiceGetForecastConfigurationsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/forecast-configurations\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"configurations\": [{\n        \"currencyCode\": \"EUR\",\n        \"bankAccountIds\": [\"99bae364-1aa4-45a7-87e5-249d5b22242c\", \"4d3740af-11f3-4bd8-915e-4850184ede9f\", \"473ec899-85a7-49f0-9fca-961bfb133d9c\"],\n        \"chartOfAccountIds\": [\"43032a1e-f466-40fd-8ed7-f92acbd0ecb6\", \"846bdab7-5b95-4977-a71f-3a8fdd28770b\", \"860acb60-ddcb-4a56-a773-947b1883eaf0\"]\n      }, {\n        \"currencyCode\": \"USD\",\n        \"bankAccountIds\": [\"fecfcdc6-8675-457d-b3b1-07b254bc7445\", \"02556b90-d759-4efe-ac74-4fa6286b07ab\", \"2c04b8e1-4fdf-4317-870e-d2caf5474b75\"],\n        \"chartOfAccountIds\": [\"0bd55bdb-f407-4b1b-a049-995a534a6877\", \"6e37e319-c753-4f70-8842-50dec650ed67\", \"0f52a8d1-66a7-4a0c-94fb-3f7f3644c913\"]\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst ForecastConfigurationsHttpServicePostForecastConfigurationsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/forecast-configurations\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"id\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n      \"currencyCode\": \"USD\",\n      \"bankAccountIds\": [\"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\", \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\", \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\"],\n      \"chartOfAccountIds\": [\"a3ad5046-6a41-4b55-9072-66e5872fba62\", \"6b718262-6099-4f32-9795-7aae2a25eac7\", \"b2e758c5-92f5-4f52-b915-cc8ea0357868\", \"700def49-ca84-4fa5-83d3-3de9cf393200\", \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\", \"d4721d9a-d77b-4361-9807-09331ffcb6af\", \"6333a502-088a-4314-a8d1-05e5cf61e023\", \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\", \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\", \"773e43aa-8505-48b9-94ef-d7bc5786609a\", \"e11719b8-0ec3-4bd7-943a-72f575ef7890\", \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\", \"109b5a2f-8b10-4953-a388-2934f4f60a6e\", \"8e03d0a6-f172-40bd-adf1-3834e9734267\", \"4a959dfe-428f-48c2-88f6-efc155f2a19c\", \"1bb12d54-9d81-4b63-b1c1-af419e47a687\", \"d61afb14-0da1-43ba-935e-4b4a08a012fe\", \"f421c967-88eb-43c1-b19e-aa03f15f67ce\", \"8fca197a-3242-4795-8b06-48d821315ad1\", \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\", \"26dfb943-b6fb-484b-82b5-85eca47fe07c\", \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\", \"4339c2ee-4040-4996-acf5-810b6c8eb337\", \"77b9ba20-924e-4be8-8077-87278297d915\", \"0e0f7942-612f-481c-8166-ea33fe398a74\", \"81860ebb-997f-47b6-a1ff-30988af2520d\", \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\", \"c9c3eff9-0968-4d1f-b321-c2499c079014\", \"271c798c-031c-4cfc-828c-d40e37fbb003\", \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\", \"587bc9dd-553d-4b3d-88d8-5256eedfb499\", \"ccfb434a-b289-441c-99a2-30e05a572057\", \"484ef212-372c-41bc-9a0b-9a3b64c78218\", \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\", \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\", \"b15090b5-bcea-4655-a7aa-861e6084ca8b\", \"497559c7-60bf-476c-8b16-09b8952a9722\", \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\", \"9c400ca0-009e-475a-abc6-d5a76154aa0a\", \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\", \"9e68b349-72af-4cf3-8ea8-abd76f31064e\", \"771aad7c-70d2-4f7e-9309-0ab33e11e589\", \"45b174a0-45be-4134-95ee-27b751f29b6e\", \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\", \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\", \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\", \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\", \"3d9747ce-afbf-4ff1-b23d-559206c5998c\", \"1158aa19-894e-40ea-a54f-f2c6808c879a\", \"1e870df7-7255-41e2-8220-e24c301af038\", \"e2521f1a-ab18-483f-89d9-ea0434f00989\", \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\", \"1137cd94-52b1-45b5-a573-1723c89a35f2\", \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\", \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\", \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\", \"0d9d51d4-b347-480b-88f3-6107f0ba343f\", \"bc366bf7-30db-4856-9f65-06ffc01596f5\", \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\", \"7877e117-f0ac-4142-841f-84e062f77128\", \"ca5ea429-6cc0-4870-8513-a4e696b312d4\", \"ba81920a-23b7-4634-946f-47f0067d9e1a\", \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\", \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\", \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\", \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\", \"74d34736-f4a0-4638-9465-4f5254ddb1b5\", \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\", \"ef961774-568d-4746-a790-fa8e22907db5\", \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\", \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\", \"442e062b-8585-4f14-9763-8990c9fd6087\", \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\", \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\", \"da439b63-4dc2-45c4-9cf8-d4984413403e\", \"3b353731-f571-4854-8240-0d49cc81fecc\", \"ecc43720-0fb4-4b20-9561-73f78021a3fa\", \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\", \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\", \"22a92103-3ee1-41fa-9722-1fc209caa2c2\", \"f934846d-8461-44dd-89be-3d4cc7b59a53\", \"a4163fda-a2c0-4d12-93cb-e016f049fee6\", \"225f6f2a-445e-48b3-88b5-e3f9daae059a\", \"acf2e2dd-cc98-4c16-a705-d0010b593083\", \"de6e8ce5-90fc-4379-9972-951b94897fcc\", \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\", \"c9205c03-ea6a-48a0-be07-733f894db4d8\", \"7e776b86-151e-4a4a-a60a-f36e682e2a50\", \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\", \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\", \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\"]\n    }\n  }, {\n    status: 201,\n    body: {\n      \"chartOfAccountIds\": [\"chartOfAccountIds\", \"chartOfAccountIds\"],\n      \"id\": \"id\",\n      \"currencyCode\": \"currencyCode\",\n      \"bankAccountIds\": [\"bankAccountIds\", \"bankAccountIds\"]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst ForecastConfigurationsHttpServicePutForecastConfigurationByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/forecast-configurations/{configurationId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n      \"currencyCode\": \"USD\",\n      \"bankAccountIds\": [\"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\", \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\", \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\"],\n      \"chartOfAccountIds\": [\"a3ad5046-6a41-4b55-9072-66e5872fba62\", \"6b718262-6099-4f32-9795-7aae2a25eac7\", \"b2e758c5-92f5-4f52-b915-cc8ea0357868\", \"700def49-ca84-4fa5-83d3-3de9cf393200\", \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\", \"d4721d9a-d77b-4361-9807-09331ffcb6af\", \"6333a502-088a-4314-a8d1-05e5cf61e023\", \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\", \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\", \"773e43aa-8505-48b9-94ef-d7bc5786609a\", \"e11719b8-0ec3-4bd7-943a-72f575ef7890\", \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\", \"109b5a2f-8b10-4953-a388-2934f4f60a6e\", \"8e03d0a6-f172-40bd-adf1-3834e9734267\", \"4a959dfe-428f-48c2-88f6-efc155f2a19c\", \"1bb12d54-9d81-4b63-b1c1-af419e47a687\", \"d61afb14-0da1-43ba-935e-4b4a08a012fe\", \"f421c967-88eb-43c1-b19e-aa03f15f67ce\", \"8fca197a-3242-4795-8b06-48d821315ad1\", \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\", \"26dfb943-b6fb-484b-82b5-85eca47fe07c\", \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\", \"4339c2ee-4040-4996-acf5-810b6c8eb337\", \"77b9ba20-924e-4be8-8077-87278297d915\", \"0e0f7942-612f-481c-8166-ea33fe398a74\", \"81860ebb-997f-47b6-a1ff-30988af2520d\", \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\", \"c9c3eff9-0968-4d1f-b321-c2499c079014\", \"271c798c-031c-4cfc-828c-d40e37fbb003\", \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\", \"587bc9dd-553d-4b3d-88d8-5256eedfb499\", \"ccfb434a-b289-441c-99a2-30e05a572057\", \"484ef212-372c-41bc-9a0b-9a3b64c78218\", \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\", \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\", \"b15090b5-bcea-4655-a7aa-861e6084ca8b\", \"497559c7-60bf-476c-8b16-09b8952a9722\", \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\", \"9c400ca0-009e-475a-abc6-d5a76154aa0a\", \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\", \"9e68b349-72af-4cf3-8ea8-abd76f31064e\", \"771aad7c-70d2-4f7e-9309-0ab33e11e589\", \"45b174a0-45be-4134-95ee-27b751f29b6e\", \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\", \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\", \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\", \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\", \"3d9747ce-afbf-4ff1-b23d-559206c5998c\", \"1158aa19-894e-40ea-a54f-f2c6808c879a\", \"1e870df7-7255-41e2-8220-e24c301af038\", \"e2521f1a-ab18-483f-89d9-ea0434f00989\", \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\", \"1137cd94-52b1-45b5-a573-1723c89a35f2\", \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\", \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\", \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\", \"0d9d51d4-b347-480b-88f3-6107f0ba343f\", \"bc366bf7-30db-4856-9f65-06ffc01596f5\", \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\", \"7877e117-f0ac-4142-841f-84e062f77128\", \"ca5ea429-6cc0-4870-8513-a4e696b312d4\", \"ba81920a-23b7-4634-946f-47f0067d9e1a\", \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\", \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\", \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\", \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\", \"74d34736-f4a0-4638-9465-4f5254ddb1b5\", \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\", \"ef961774-568d-4746-a790-fa8e22907db5\", \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\", \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\", \"442e062b-8585-4f14-9763-8990c9fd6087\", \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\", \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\", \"da439b63-4dc2-45c4-9cf8-d4984413403e\", \"3b353731-f571-4854-8240-0d49cc81fecc\", \"ecc43720-0fb4-4b20-9561-73f78021a3fa\", \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\", \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\", \"22a92103-3ee1-41fa-9722-1fc209caa2c2\", \"f934846d-8461-44dd-89be-3d4cc7b59a53\", \"a4163fda-a2c0-4d12-93cb-e016f049fee6\", \"225f6f2a-445e-48b3-88b5-e3f9daae059a\", \"acf2e2dd-cc98-4c16-a705-d0010b593083\", \"de6e8ce5-90fc-4379-9972-951b94897fcc\", \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\", \"c9205c03-ea6a-48a0-be07-733f894db4d8\", \"7e776b86-151e-4a4a-a60a-f36e682e2a50\", \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\", \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\", \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\"]\n    }\n  }, {\n    status: 200,\n    body: {\n      \"chartOfAccountIds\": [\"chartOfAccountIds\", \"chartOfAccountIds\"],\n      \"id\": \"id\",\n      \"currencyCode\": \"currencyCode\",\n      \"bankAccountIds\": [\"bankAccountIds\", \"bankAccountIds\"]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst ForecastConfigurationsHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/forecast-configurations/{configurationId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n      \"currencyCode\": \"USD\",\n      \"bankAccountIds\": [\"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\", \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\", \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\"],\n      \"chartOfAccountIds\": [\"a3ad5046-6a41-4b55-9072-66e5872fba62\", \"6b718262-6099-4f32-9795-7aae2a25eac7\", \"b2e758c5-92f5-4f52-b915-cc8ea0357868\", \"700def49-ca84-4fa5-83d3-3de9cf393200\", \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\", \"d4721d9a-d77b-4361-9807-09331ffcb6af\", \"6333a502-088a-4314-a8d1-05e5cf61e023\", \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\", \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\", \"773e43aa-8505-48b9-94ef-d7bc5786609a\", \"e11719b8-0ec3-4bd7-943a-72f575ef7890\", \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\", \"109b5a2f-8b10-4953-a388-2934f4f60a6e\", \"8e03d0a6-f172-40bd-adf1-3834e9734267\", \"4a959dfe-428f-48c2-88f6-efc155f2a19c\", \"1bb12d54-9d81-4b63-b1c1-af419e47a687\", \"d61afb14-0da1-43ba-935e-4b4a08a012fe\", \"f421c967-88eb-43c1-b19e-aa03f15f67ce\", \"8fca197a-3242-4795-8b06-48d821315ad1\", \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\", \"26dfb943-b6fb-484b-82b5-85eca47fe07c\", \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\", \"4339c2ee-4040-4996-acf5-810b6c8eb337\", \"77b9ba20-924e-4be8-8077-87278297d915\", \"0e0f7942-612f-481c-8166-ea33fe398a74\", \"81860ebb-997f-47b6-a1ff-30988af2520d\", \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\", \"c9c3eff9-0968-4d1f-b321-c2499c079014\", \"271c798c-031c-4cfc-828c-d40e37fbb003\", \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\", \"587bc9dd-553d-4b3d-88d8-5256eedfb499\", \"ccfb434a-b289-441c-99a2-30e05a572057\", \"484ef212-372c-41bc-9a0b-9a3b64c78218\", \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\", \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\", \"b15090b5-bcea-4655-a7aa-861e6084ca8b\", \"497559c7-60bf-476c-8b16-09b8952a9722\", \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\", \"9c400ca0-009e-475a-abc6-d5a76154aa0a\", \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\", \"9e68b349-72af-4cf3-8ea8-abd76f31064e\", \"771aad7c-70d2-4f7e-9309-0ab33e11e589\", \"45b174a0-45be-4134-95ee-27b751f29b6e\", \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\", \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\", \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\", \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\", \"3d9747ce-afbf-4ff1-b23d-559206c5998c\", \"1158aa19-894e-40ea-a54f-f2c6808c879a\", \"1e870df7-7255-41e2-8220-e24c301af038\", \"e2521f1a-ab18-483f-89d9-ea0434f00989\", \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\", \"1137cd94-52b1-45b5-a573-1723c89a35f2\", \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\", \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\", \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\", \"0d9d51d4-b347-480b-88f3-6107f0ba343f\", \"bc366bf7-30db-4856-9f65-06ffc01596f5\", \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\", \"7877e117-f0ac-4142-841f-84e062f77128\", \"ca5ea429-6cc0-4870-8513-a4e696b312d4\", \"ba81920a-23b7-4634-946f-47f0067d9e1a\", \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\", \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\", \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\", \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\", \"74d34736-f4a0-4638-9465-4f5254ddb1b5\", \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\", \"ef961774-568d-4746-a790-fa8e22907db5\", \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\", \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\", \"442e062b-8585-4f14-9763-8990c9fd6087\", \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\", \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\", \"da439b63-4dc2-45c4-9cf8-d4984413403e\", \"3b353731-f571-4854-8240-0d49cc81fecc\", \"ecc43720-0fb4-4b20-9561-73f78021a3fa\", \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\", \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\", \"22a92103-3ee1-41fa-9722-1fc209caa2c2\", \"f934846d-8461-44dd-89be-3d4cc7b59a53\", \"a4163fda-a2c0-4d12-93cb-e016f049fee6\", \"225f6f2a-445e-48b3-88b5-e3f9daae059a\", \"acf2e2dd-cc98-4c16-a705-d0010b593083\", \"de6e8ce5-90fc-4379-9972-951b94897fcc\", \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\", \"c9205c03-ea6a-48a0-be07-733f894db4d8\", \"7e776b86-151e-4a4a-a60a-f36e682e2a50\", \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\", \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\", \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\"]\n    }\n  }, {\n    status: 200,\n    body: {\n      \"chartOfAccountIds\": [\"chartOfAccountIds\", \"chartOfAccountIds\"],\n      \"id\": \"id\",\n      \"currencyCode\": \"currencyCode\",\n      \"bankAccountIds\": [\"bankAccountIds\", \"bankAccountIds\"]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/forecast-configurations\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"configurations\": [{\n        \"currencyCode\": \"EUR\",\n        \"bankAccountIds\": [\"99bae364-1aa4-45a7-87e5-249d5b22242c\", \"4d3740af-11f3-4bd8-915e-4850184ede9f\", \"473ec899-85a7-49f0-9fca-961bfb133d9c\"],\n        \"chartOfAccountIds\": [\"43032a1e-f466-40fd-8ed7-f92acbd0ecb6\", \"846bdab7-5b95-4977-a71f-3a8fdd28770b\", \"860acb60-ddcb-4a56-a773-947b1883eaf0\"]\n      }, {\n        \"currencyCode\": \"USD\",\n        \"bankAccountIds\": [\"fecfcdc6-8675-457d-b3b1-07b254bc7445\", \"02556b90-d759-4efe-ac74-4fa6286b07ab\", \"2c04b8e1-4fdf-4317-870e-d2caf5474b75\"],\n        \"chartOfAccountIds\": [\"0bd55bdb-f407-4b1b-a049-995a534a6877\", \"6e37e319-c753-4f70-8842-50dec650ed67\", \"0f52a8d1-66a7-4a0c-94fb-3f7f3644c913\"]\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/forecast-configurations\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"id\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n      \"currencyCode\": \"USD\",\n      \"bankAccountIds\": [\"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\", \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\", \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\"],\n      \"chartOfAccountIds\": [\"a3ad5046-6a41-4b55-9072-66e5872fba62\", \"6b718262-6099-4f32-9795-7aae2a25eac7\", \"b2e758c5-92f5-4f52-b915-cc8ea0357868\", \"700def49-ca84-4fa5-83d3-3de9cf393200\", \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\", \"d4721d9a-d77b-4361-9807-09331ffcb6af\", \"6333a502-088a-4314-a8d1-05e5cf61e023\", \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\", \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\", \"773e43aa-8505-48b9-94ef-d7bc5786609a\", \"e11719b8-0ec3-4bd7-943a-72f575ef7890\", \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\", \"109b5a2f-8b10-4953-a388-2934f4f60a6e\", \"8e03d0a6-f172-40bd-adf1-3834e9734267\", \"4a959dfe-428f-48c2-88f6-efc155f2a19c\", \"1bb12d54-9d81-4b63-b1c1-af419e47a687\", \"d61afb14-0da1-43ba-935e-4b4a08a012fe\", \"f421c967-88eb-43c1-b19e-aa03f15f67ce\", \"8fca197a-3242-4795-8b06-48d821315ad1\", \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\", \"26dfb943-b6fb-484b-82b5-85eca47fe07c\", \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\", \"4339c2ee-4040-4996-acf5-810b6c8eb337\", \"77b9ba20-924e-4be8-8077-87278297d915\", \"0e0f7942-612f-481c-8166-ea33fe398a74\", \"81860ebb-997f-47b6-a1ff-30988af2520d\", \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\", \"c9c3eff9-0968-4d1f-b321-c2499c079014\", \"271c798c-031c-4cfc-828c-d40e37fbb003\", \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\", \"587bc9dd-553d-4b3d-88d8-5256eedfb499\", \"ccfb434a-b289-441c-99a2-30e05a572057\", \"484ef212-372c-41bc-9a0b-9a3b64c78218\", \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\", \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\", \"b15090b5-bcea-4655-a7aa-861e6084ca8b\", \"497559c7-60bf-476c-8b16-09b8952a9722\", \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\", \"9c400ca0-009e-475a-abc6-d5a76154aa0a\", \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\", \"9e68b349-72af-4cf3-8ea8-abd76f31064e\", \"771aad7c-70d2-4f7e-9309-0ab33e11e589\", \"45b174a0-45be-4134-95ee-27b751f29b6e\", \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\", \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\", \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\", \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\", \"3d9747ce-afbf-4ff1-b23d-559206c5998c\", \"1158aa19-894e-40ea-a54f-f2c6808c879a\", \"1e870df7-7255-41e2-8220-e24c301af038\", \"e2521f1a-ab18-483f-89d9-ea0434f00989\", \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\", \"1137cd94-52b1-45b5-a573-1723c89a35f2\", \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\", \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\", \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\", \"0d9d51d4-b347-480b-88f3-6107f0ba343f\", \"bc366bf7-30db-4856-9f65-06ffc01596f5\", \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\", \"7877e117-f0ac-4142-841f-84e062f77128\", \"ca5ea429-6cc0-4870-8513-a4e696b312d4\", \"ba81920a-23b7-4634-946f-47f0067d9e1a\", \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\", \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\", \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\", \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\", \"74d34736-f4a0-4638-9465-4f5254ddb1b5\", \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\", \"ef961774-568d-4746-a790-fa8e22907db5\", \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\", \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\", \"442e062b-8585-4f14-9763-8990c9fd6087\", \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\", \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\", \"da439b63-4dc2-45c4-9cf8-d4984413403e\", \"3b353731-f571-4854-8240-0d49cc81fecc\", \"ecc43720-0fb4-4b20-9561-73f78021a3fa\", \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\", \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\", \"22a92103-3ee1-41fa-9722-1fc209caa2c2\", \"f934846d-8461-44dd-89be-3d4cc7b59a53\", \"a4163fda-a2c0-4d12-93cb-e016f049fee6\", \"225f6f2a-445e-48b3-88b5-e3f9daae059a\", \"acf2e2dd-cc98-4c16-a705-d0010b593083\", \"de6e8ce5-90fc-4379-9972-951b94897fcc\", \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\", \"c9205c03-ea6a-48a0-be07-733f894db4d8\", \"7e776b86-151e-4a4a-a60a-f36e682e2a50\", \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\", \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\", \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\"]\n    }\n  }, {\n    status: 201,\n    body: {\n      \"chartOfAccountIds\": [\"chartOfAccountIds\", \"chartOfAccountIds\"],\n      \"id\": \"id\",\n      \"currencyCode\": \"currencyCode\",\n      \"bankAccountIds\": [\"bankAccountIds\", \"bankAccountIds\"]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/forecast-configurations/{configurationId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n      \"currencyCode\": \"USD\",\n      \"bankAccountIds\": [\"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\", \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\", \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\"],\n      \"chartOfAccountIds\": [\"a3ad5046-6a41-4b55-9072-66e5872fba62\", \"6b718262-6099-4f32-9795-7aae2a25eac7\", \"b2e758c5-92f5-4f52-b915-cc8ea0357868\", \"700def49-ca84-4fa5-83d3-3de9cf393200\", \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\", \"d4721d9a-d77b-4361-9807-09331ffcb6af\", \"6333a502-088a-4314-a8d1-05e5cf61e023\", \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\", \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\", \"773e43aa-8505-48b9-94ef-d7bc5786609a\", \"e11719b8-0ec3-4bd7-943a-72f575ef7890\", \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\", \"109b5a2f-8b10-4953-a388-2934f4f60a6e\", \"8e03d0a6-f172-40bd-adf1-3834e9734267\", \"4a959dfe-428f-48c2-88f6-efc155f2a19c\", \"1bb12d54-9d81-4b63-b1c1-af419e47a687\", \"d61afb14-0da1-43ba-935e-4b4a08a012fe\", \"f421c967-88eb-43c1-b19e-aa03f15f67ce\", \"8fca197a-3242-4795-8b06-48d821315ad1\", \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\", \"26dfb943-b6fb-484b-82b5-85eca47fe07c\", \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\", \"4339c2ee-4040-4996-acf5-810b6c8eb337\", \"77b9ba20-924e-4be8-8077-87278297d915\", \"0e0f7942-612f-481c-8166-ea33fe398a74\", \"81860ebb-997f-47b6-a1ff-30988af2520d\", \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\", \"c9c3eff9-0968-4d1f-b321-c2499c079014\", \"271c798c-031c-4cfc-828c-d40e37fbb003\", \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\", \"587bc9dd-553d-4b3d-88d8-5256eedfb499\", \"ccfb434a-b289-441c-99a2-30e05a572057\", \"484ef212-372c-41bc-9a0b-9a3b64c78218\", \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\", \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\", \"b15090b5-bcea-4655-a7aa-861e6084ca8b\", \"497559c7-60bf-476c-8b16-09b8952a9722\", \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\", \"9c400ca0-009e-475a-abc6-d5a76154aa0a\", \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\", \"9e68b349-72af-4cf3-8ea8-abd76f31064e\", \"771aad7c-70d2-4f7e-9309-0ab33e11e589\", \"45b174a0-45be-4134-95ee-27b751f29b6e\", \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\", \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\", \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\", \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\", \"3d9747ce-afbf-4ff1-b23d-559206c5998c\", \"1158aa19-894e-40ea-a54f-f2c6808c879a\", \"1e870df7-7255-41e2-8220-e24c301af038\", \"e2521f1a-ab18-483f-89d9-ea0434f00989\", \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\", \"1137cd94-52b1-45b5-a573-1723c89a35f2\", \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\", \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\", \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\", \"0d9d51d4-b347-480b-88f3-6107f0ba343f\", \"bc366bf7-30db-4856-9f65-06ffc01596f5\", \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\", \"7877e117-f0ac-4142-841f-84e062f77128\", \"ca5ea429-6cc0-4870-8513-a4e696b312d4\", \"ba81920a-23b7-4634-946f-47f0067d9e1a\", \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\", \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\", \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\", \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\", \"74d34736-f4a0-4638-9465-4f5254ddb1b5\", \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\", \"ef961774-568d-4746-a790-fa8e22907db5\", \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\", \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\", \"442e062b-8585-4f14-9763-8990c9fd6087\", \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\", \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\", \"da439b63-4dc2-45c4-9cf8-d4984413403e\", \"3b353731-f571-4854-8240-0d49cc81fecc\", \"ecc43720-0fb4-4b20-9561-73f78021a3fa\", \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\", \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\", \"22a92103-3ee1-41fa-9722-1fc209caa2c2\", \"f934846d-8461-44dd-89be-3d4cc7b59a53\", \"a4163fda-a2c0-4d12-93cb-e016f049fee6\", \"225f6f2a-445e-48b3-88b5-e3f9daae059a\", \"acf2e2dd-cc98-4c16-a705-d0010b593083\", \"de6e8ce5-90fc-4379-9972-951b94897fcc\", \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\", \"c9205c03-ea6a-48a0-be07-733f894db4d8\", \"7e776b86-151e-4a4a-a60a-f36e682e2a50\", \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\", \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\", \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\"]\n    }\n  }, {\n    status: 200,\n    body: {\n      \"chartOfAccountIds\": [\"chartOfAccountIds\", \"chartOfAccountIds\"],\n      \"id\": \"id\",\n      \"currencyCode\": \"currencyCode\",\n      \"bankAccountIds\": [\"bankAccountIds\", \"bankAccountIds\"]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\n\nclass ForecastsHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new CashFlowConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  getForecastById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _forecastId = requestParameters[\"forecastId\"];\n\n    if (_forecastId === null || _forecastId === undefined) {\n      throw new Error('Required parameter forecastId was null or undefined when calling getForecastById.');\n    }\n\n    const _cadenceType = requestParameters[\"cadenceType\"];\n\n    if (_cadenceType === null || _cadenceType === undefined) {\n      throw new Error('Required parameter cadenceType was null or undefined when calling getForecastById.');\n    }\n\n    const _projectionAmount = requestParameters[\"projectionAmount\"];\n    const _historyAmount = requestParameters[\"historyAmount\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_cadenceType !== undefined && _cadenceType !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cadenceType, 'cadenceType');\n    }\n\n    if (_projectionAmount !== undefined && _projectionAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _projectionAmount, 'projectionAmount');\n    }\n\n    if (_historyAmount !== undefined && _historyAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _historyAmount, 'historyAmount');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/forecasts/${encodeURIComponent(String(_forecastId))}`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getForecastByIdUrl(requestParameters) {\n    const _forecastId = requestParameters[\"forecastId\"];\n\n    if (_forecastId === null || _forecastId === undefined) {\n      throw new Error('Required parameter forecastId was null or undefined when calling getForecastById.');\n    }\n\n    const _cadenceType = requestParameters[\"cadenceType\"];\n\n    if (_cadenceType === null || _cadenceType === undefined) {\n      throw new Error('Required parameter cadenceType was null or undefined when calling getForecastById.');\n    }\n\n    const _projectionAmount = requestParameters[\"projectionAmount\"];\n    const _historyAmount = requestParameters[\"historyAmount\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_cadenceType !== undefined && _cadenceType !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cadenceType, 'cadenceType');\n    }\n\n    if (_projectionAmount !== undefined && _projectionAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _projectionAmount, 'projectionAmount');\n    }\n\n    if (_historyAmount !== undefined && _historyAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _historyAmount, 'historyAmount');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v1/forecasts/${encodeURIComponent(String(_forecastId))}${queryString ? `?${queryString}` : ''}`;\n  }\n\n  getForecasts(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/forecasts`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getForecastsUrl() {\n    return `${this.configuration.basePath}/client-api/v1/forecasts`;\n  }\n\n}\n\nForecastsHttpService.ɵfac = function ForecastsHttpService_Factory(t) {\n  return new (t || ForecastsHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(CASH_FLOW_BASE_PATH, 8), i0.ɵɵinject(CashFlowConfiguration, 8));\n};\n\nForecastsHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ForecastsHttpService,\n  factory: ForecastsHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ForecastsHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [CASH_FLOW_BASE_PATH]\n      }]\n    }, {\n      type: CashFlowConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst ForecastsHttpServiceGetForecastByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/forecasts/{forecastId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"configurationId\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n      \"syncDatetime\": \"2020-11-05T11:56:15Z\",\n      \"currentBalance\": \"10575882.77283\",\n      \"currencyCode\": \"USD\",\n      \"history\": [{\n        \"startDate\": \"2020-11-03\",\n        \"endDate\": \"2020-11-03\",\n        \"openingBalance\": \"-20500.00000\",\n        \"closingBalance\": \"-15500.00000\",\n        \"netChange\": \"5000.00000\"\n      }, {\n        \"startDate\": \"2020-11-04\",\n        \"endDate\": \"2020-11-04\",\n        \"openingBalance\": \"-15500.00000\",\n        \"closingBalance\": \"0\",\n        \"netChange\": \"15500.00000\"\n      }],\n      \"projection\": [{\n        \"startDate\": \"2020-11-05\",\n        \"endDate\": \"2020-11-05\",\n        \"openingBalance\": \"0\",\n        \"closingBalance\": \"6682.33000\",\n        \"netChange\": \"6682.33000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Expense\",\n          \"balanceChange\": \"-1412.67000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n            \"balanceChange\": \"-1085.00000\"\n          }, {\n            \"accountId\": \"225f6f2a-445e-48b3-88b5-e3f9daae059a\",\n            \"balanceChange\": \"-86.44000\"\n          }, {\n            \"accountId\": \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\",\n            \"balanceChange\": \"-241.23000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"8300.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n            \"balanceChange\": \"8300.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Uncategorised\",\n          \"balanceChange\": \"-205.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"da439b63-4dc2-45c4-9cf8-d4984413403e\",\n            \"balanceChange\": \"-205.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-06\",\n        \"endDate\": \"2020-11-06\",\n        \"openingBalance\": \"6682.33000\",\n        \"closingBalance\": \"2337.33000\",\n        \"netChange\": \"-4345.00000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Expense\",\n          \"balanceChange\": \"-14840.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\",\n            \"balanceChange\": \"-14840.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"10495.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n            \"balanceChange\": \"10495.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-07\",\n        \"endDate\": \"2020-11-07\",\n        \"openingBalance\": \"2337.33000\",\n        \"closingBalance\": \"-447.67000\",\n        \"netChange\": \"-2785.00000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Expense\",\n          \"balanceChange\": \"-17785.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"0d9d51d4-b347-480b-88f3-6107f0ba343f\",\n            \"balanceChange\": \"-755.00000\"\n          }, {\n            \"accountId\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n            \"balanceChange\": \"-17030.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"15000.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n            \"balanceChange\": \"15000.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-08\",\n        \"endDate\": \"2020-11-08\",\n        \"openingBalance\": \"-447.67000\",\n        \"closingBalance\": \"38332.33000\",\n        \"netChange\": \"38780.00000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Expense\",\n          \"balanceChange\": \"-200.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n            \"balanceChange\": \"-200.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"38980.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n            \"balanceChange\": \"38980.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-09\",\n        \"endDate\": \"2020-11-09\",\n        \"openingBalance\": \"38332.33000\",\n        \"closingBalance\": \"62587.33000\",\n        \"netChange\": \"24255.00000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Expense\",\n          \"balanceChange\": \"-945.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n            \"balanceChange\": \"-945.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"25200.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n            \"balanceChange\": \"25200.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-10\",\n        \"endDate\": \"2020-11-10\",\n        \"openingBalance\": \"62587.33000\",\n        \"closingBalance\": \"76977.33000\",\n        \"netChange\": \"14390.00000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Expense\",\n          \"balanceChange\": \"-12760.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\",\n            \"balanceChange\": \"-12760.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"27150.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n            \"balanceChange\": \"27150.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-11\",\n        \"endDate\": \"2020-11-11\",\n        \"openingBalance\": \"76977.33000\",\n        \"closingBalance\": \"72327.33000\",\n        \"netChange\": \"-4650.00000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Asset\",\n          \"balanceChange\": \"-18900.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"7e776b86-151e-4a4a-a60a-f36e682e2a50\",\n            \"balanceChange\": \"-18900.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"14250.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\",\n            \"balanceChange\": \"14250.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-12\",\n        \"endDate\": \"2020-11-12\",\n        \"openingBalance\": \"72327.33000\",\n        \"closingBalance\": \"86627.33000\",\n        \"netChange\": \"14300.00000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Expense\",\n          \"balanceChange\": \"-4600.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n            \"balanceChange\": \"-4600.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"18900.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n            \"balanceChange\": \"18900.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-13\",\n        \"endDate\": \"2020-11-13\",\n        \"openingBalance\": \"86627.33000\",\n        \"closingBalance\": \"87837.33000\",\n        \"netChange\": \"1210.00000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Expense\",\n          \"balanceChange\": \"-5800.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n            \"balanceChange\": \"-5800.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"7010.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\",\n            \"balanceChange\": \"7010.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-14\",\n        \"endDate\": \"2020-11-14\",\n        \"openingBalance\": \"87837.33000\",\n        \"closingBalance\": \"109937.33000\",\n        \"netChange\": \"22100.00000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Expense\",\n          \"balanceChange\": \"-900.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"4339c2ee-4040-4996-acf5-810b6c8eb337\",\n            \"balanceChange\": \"-300.00000\"\n          }, {\n            \"accountId\": \"3b353731-f571-4854-8240-0d49cc81fecc\",\n            \"balanceChange\": \"-600.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"23000.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n            \"balanceChange\": \"23000.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-15\",\n        \"endDate\": \"2020-11-15\",\n        \"openingBalance\": \"109937.33000\",\n        \"closingBalance\": \"109937.33000\",\n        \"netChange\": \"0.00000\",\n        \"categoryBalanceChanges\": []\n      }, {\n        \"startDate\": \"2020-11-16\",\n        \"endDate\": \"2020-11-16\",\n        \"openingBalance\": \"109937.33000\",\n        \"closingBalance\": \"109937.33000\",\n        \"netChange\": \"0.00000\",\n        \"categoryBalanceChanges\": []\n      }, {\n        \"startDate\": \"2020-11-17\",\n        \"endDate\": \"2020-11-17\",\n        \"openingBalance\": \"109937.33000\",\n        \"closingBalance\": \"109937.33000\",\n        \"netChange\": \"0.00000\",\n        \"categoryBalanceChanges\": []\n      }, {\n        \"startDate\": \"2020-11-18\",\n        \"endDate\": \"2020-11-18\",\n        \"openingBalance\": \"109937.33000\",\n        \"closingBalance\": \"109937.33000\",\n        \"netChange\": \"0.00000\",\n        \"categoryBalanceChanges\": []\n      }],\n      \"chartOfAccounts\": [{\n        \"id\": \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\",\n        \"name\": \"Accounts Receivable (A/R)\",\n        \"nominalCode\": \"84\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"77b9ba20-924e-4be8-8077-87278297d915\",\n        \"name\": \"Checking\",\n        \"nominalCode\": \"35\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"7e776b86-151e-4a4a-a60a-f36e682e2a50\",\n        \"name\": \"Depreciation\",\n        \"nominalCode\": \"39\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\",\n        \"name\": \"Inventory Asset\",\n        \"nominalCode\": \"81\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"271c798c-031c-4cfc-828c-d40e37fbb003\",\n        \"name\": \"Original Cost\",\n        \"nominalCode\": \"38\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\",\n        \"name\": \"Prepaid Expenses\",\n        \"nominalCode\": \"3\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"497559c7-60bf-476c-8b16-09b8952a9722\",\n        \"name\": \"Savings\",\n        \"nominalCode\": \"36\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"9e68b349-72af-4cf3-8ea8-abd76f31064e\",\n        \"name\": \"Truck\",\n        \"nominalCode\": \"37\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\",\n        \"name\": \"Uncategorized Asset\",\n        \"nominalCode\": \"32\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\",\n        \"name\": \"Undeposited Funds\",\n        \"nominalCode\": \"4\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"6b718262-6099-4f32-9795-7aae2a25eac7\",\n        \"name\": \"Opening Balance Equity\",\n        \"nominalCode\": \"34\",\n        \"category\": \"Equity\"\n      }, {\n        \"id\": \"22a92103-3ee1-41fa-9722-1fc209caa2c2\",\n        \"name\": \"Retained Earnings\",\n        \"nominalCode\": \"2\",\n        \"category\": \"Equity\"\n      }, {\n        \"id\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n        \"name\": \"Accounting\",\n        \"nominalCode\": \"69\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"d4721d9a-d77b-4361-9807-09331ffcb6af\",\n        \"name\": \"Advertising\",\n        \"nominalCode\": \"7\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\",\n        \"name\": \"Automobile\",\n        \"nominalCode\": \"55\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"771aad7c-70d2-4f7e-9309-0ab33e11e589\",\n        \"name\": \"Bank Charges\",\n        \"nominalCode\": \"8\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"3d9747ce-afbf-4ff1-b23d-559206c5998c\",\n        \"name\": \"Bookkeeper\",\n        \"nominalCode\": \"70\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\",\n        \"name\": \"Building Repairs\",\n        \"nominalCode\": \"73\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\",\n        \"name\": \"Commissions & fees\",\n        \"nominalCode\": \"9\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"4339c2ee-4040-4996-acf5-810b6c8eb337\",\n        \"name\": \"Computer Repairs\",\n        \"nominalCode\": \"74\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\",\n        \"name\": \"Cost of Goods Sold\",\n        \"nominalCode\": \"80\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"f421c967-88eb-43c1-b19e-aa03f15f67ce\",\n        \"name\": \"Cost of Labor\",\n        \"nominalCode\": \"59\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"1137cd94-52b1-45b5-a573-1723c89a35f2\",\n        \"name\": \"Decks and Patios\",\n        \"nominalCode\": \"64\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\",\n        \"name\": \"Depreciation\",\n        \"nominalCode\": \"40\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ccfb434a-b289-441c-99a2-30e05a572057\",\n        \"name\": \"Disposal Fees\",\n        \"nominalCode\": \"28\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"9c400ca0-009e-475a-abc6-d5a76154aa0a\",\n        \"name\": \"Dues & Subscriptions\",\n        \"nominalCode\": \"10\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"74d34736-f4a0-4638-9465-4f5254ddb1b5\",\n        \"name\": \"Equipment Rental\",\n        \"nominalCode\": \"29\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\",\n        \"name\": \"Equipment Rental\",\n        \"nominalCode\": \"62\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"0d9d51d4-b347-480b-88f3-6107f0ba343f\",\n        \"name\": \"Equipment Repairs\",\n        \"nominalCode\": \"75\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\",\n        \"name\": \"Fountain and Garden Lighting\",\n        \"nominalCode\": \"65\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"7877e117-f0ac-4142-841f-84e062f77128\",\n        \"name\": \"Fuel\",\n        \"nominalCode\": \"56\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"225f6f2a-445e-48b3-88b5-e3f9daae059a\",\n        \"name\": \"Gas and Electric\",\n        \"nominalCode\": \"76\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\",\n        \"name\": \"Installation\",\n        \"nominalCode\": \"60\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\",\n        \"name\": \"Insurance\",\n        \"nominalCode\": \"11\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\",\n        \"name\": \"Job Expenses\",\n        \"nominalCode\": \"58\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ecc43720-0fb4-4b20-9561-73f78021a3fa\",\n        \"name\": \"Job Materials\",\n        \"nominalCode\": \"63\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"4a959dfe-428f-48c2-88f6-efc155f2a19c\",\n        \"name\": \"Lawyer\",\n        \"nominalCode\": \"71\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n        \"name\": \"Legal & Professional Fees\",\n        \"nominalCode\": \"12\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"6333a502-088a-4314-a8d1-05e5cf61e023\",\n        \"name\": \"Maintenance and Repair\",\n        \"nominalCode\": \"72\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\",\n        \"name\": \"Maintenance and Repairs\",\n        \"nominalCode\": \"61\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\",\n        \"name\": \"Meals and Entertainment\",\n        \"nominalCode\": \"13\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"b2e758c5-92f5-4f52-b915-cc8ea0357868\",\n        \"name\": \"Miscellaneous\",\n        \"nominalCode\": \"14\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"1e870df7-7255-41e2-8220-e24c301af038\",\n        \"name\": \"Office Expenses\",\n        \"nominalCode\": \"15\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\",\n        \"name\": \"Penalties & Settlements\",\n        \"nominalCode\": \"27\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ba81920a-23b7-4634-946f-47f0067d9e1a\",\n        \"name\": \"Permits\",\n        \"nominalCode\": \"68\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\",\n        \"name\": \"Plants and Soil\",\n        \"nominalCode\": \"66\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n        \"name\": \"Promotional\",\n        \"nominalCode\": \"16\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\",\n        \"name\": \"Purchases\",\n        \"nominalCode\": \"78\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"3b353731-f571-4854-8240-0d49cc81fecc\",\n        \"name\": \"Rent or Lease\",\n        \"nominalCode\": \"17\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"8e03d0a6-f172-40bd-adf1-3834e9734267\",\n        \"name\": \"Repair & Maintenance (deleted)\",\n        \"nominalCode\": \"18\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"bc366bf7-30db-4856-9f65-06ffc01596f5\",\n        \"name\": \"Sprinklers and Drip Systems\",\n        \"nominalCode\": \"67\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"c9205c03-ea6a-48a0-be07-733f894db4d8\",\n        \"name\": \"Stationery & Printing\",\n        \"nominalCode\": \"19\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"d61afb14-0da1-43ba-935e-4b4a08a012fe\",\n        \"name\": \"Supplies\",\n        \"nominalCode\": \"20\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\",\n        \"name\": \"Taxes & Licenses\",\n        \"nominalCode\": \"21\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"acf2e2dd-cc98-4c16-a705-d0010b593083\",\n        \"name\": \"Telephone\",\n        \"nominalCode\": \"77\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"0e0f7942-612f-481c-8166-ea33fe398a74\",\n        \"name\": \"Travel\",\n        \"nominalCode\": \"22\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\",\n        \"name\": \"Travel Meals\",\n        \"nominalCode\": \"23\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\",\n        \"name\": \"Unapplied Cash Bill Payment Expense\",\n        \"nominalCode\": \"88\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\",\n        \"name\": \"Uncategorized Expense\",\n        \"nominalCode\": \"31\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ca5ea429-6cc0-4870-8513-a4e696b312d4\",\n        \"name\": \"Utilities\",\n        \"nominalCode\": \"24\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"a3ad5046-6a41-4b55-9072-66e5872fba62\",\n        \"name\": \"Workers Compensation\",\n        \"nominalCode\": \"57\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"773e43aa-8505-48b9-94ef-d7bc5786609a\",\n        \"name\": \"Billable Expense Income\",\n        \"nominalCode\": \"85\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\",\n        \"name\": \"Decks and Patios\",\n        \"nominalCode\": \"47\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n        \"name\": \"Design income\",\n        \"nominalCode\": \"82\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"587bc9dd-553d-4b3d-88d8-5256eedfb499\",\n        \"name\": \"Discounts given\",\n        \"nominalCode\": \"86\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"ef961774-568d-4746-a790-fa8e22907db5\",\n        \"name\": \"Fees Billed\",\n        \"nominalCode\": \"5\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n        \"name\": \"Fountains and Garden Lighting\",\n        \"nominalCode\": \"48\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"442e062b-8585-4f14-9763-8990c9fd6087\",\n        \"name\": \"Installation\",\n        \"nominalCode\": \"52\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"81860ebb-997f-47b6-a1ff-30988af2520d\",\n        \"name\": \"Interest Earned\",\n        \"nominalCode\": \"25\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"1bb12d54-9d81-4b63-b1c1-af419e47a687\",\n        \"name\": \"Job Materials\",\n        \"nominalCode\": \"46\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\",\n        \"name\": \"Labor\",\n        \"nominalCode\": \"51\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\",\n        \"name\": \"Landscaping Services\",\n        \"nominalCode\": \"45\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\",\n        \"name\": \"Maintenance and Repair\",\n        \"nominalCode\": \"53\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\",\n        \"name\": \"Other Income\",\n        \"nominalCode\": \"83\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"45b174a0-45be-4134-95ee-27b751f29b6e\",\n        \"name\": \"Other Portfolio Income\",\n        \"nominalCode\": \"26\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"de6e8ce5-90fc-4379-9972-951b94897fcc\",\n        \"name\": \"Pest Control Services\",\n        \"nominalCode\": \"54\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\",\n        \"name\": \"Plants and Soil\",\n        \"nominalCode\": \"49\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"700def49-ca84-4fa5-83d3-3de9cf393200\",\n        \"name\": \"Refunds-Allowances\",\n        \"nominalCode\": \"6\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"b15090b5-bcea-4655-a7aa-861e6084ca8b\",\n        \"name\": \"Sales of Product Income\",\n        \"nominalCode\": \"79\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\",\n        \"name\": \"Services\",\n        \"nominalCode\": \"1\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\",\n        \"name\": \"Sprinklers and Drip Systems\",\n        \"nominalCode\": \"50\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"c9c3eff9-0968-4d1f-b321-c2499c079014\",\n        \"name\": \"Unapplied Cash Payment Income\",\n        \"nominalCode\": \"87\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\",\n        \"name\": \"Uncategorized Income\",\n        \"nominalCode\": \"30\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"a4163fda-a2c0-4d12-93cb-e016f049fee6\",\n        \"name\": \"Accounts Payable (A/P)\",\n        \"nominalCode\": \"33\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"e2521f1a-ab18-483f-89d9-ea0434f00989\",\n        \"name\": \"Arizona Dept. of Revenue Payable\",\n        \"nominalCode\": \"89\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\",\n        \"name\": \"Board of Equalization Payable\",\n        \"nominalCode\": \"90\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"26dfb943-b6fb-484b-82b5-85eca47fe07c\",\n        \"name\": \"Loan Payable\",\n        \"nominalCode\": \"43\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"109b5a2f-8b10-4953-a388-2934f4f60a6e\",\n        \"name\": \"Mastercard\",\n        \"nominalCode\": \"41\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"e11719b8-0ec3-4bd7-943a-72f575ef7890\",\n        \"name\": \"Notes Payable\",\n        \"nominalCode\": \"44\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"484ef212-372c-41bc-9a0b-9a3b64c78218\",\n        \"name\": \"Visa\",\n        \"nominalCode\": \"42\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"da439b63-4dc2-45c4-9cf8-d4984413403e\",\n        \"name\": \"Unknown\",\n        \"description\": \"Amounts that are not attributed to any specific account.\",\n        \"category\": \"Uncategorised\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst ForecastsHttpServiceGetForecastsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/forecasts\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"references\": [{\n        \"id\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst ForecastsHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/forecasts/{forecastId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"configurationId\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n      \"syncDatetime\": \"2020-11-05T11:56:15Z\",\n      \"currentBalance\": \"10575882.77283\",\n      \"currencyCode\": \"USD\",\n      \"history\": [{\n        \"startDate\": \"2020-11-03\",\n        \"endDate\": \"2020-11-03\",\n        \"openingBalance\": \"-20500.00000\",\n        \"closingBalance\": \"-15500.00000\",\n        \"netChange\": \"5000.00000\"\n      }, {\n        \"startDate\": \"2020-11-04\",\n        \"endDate\": \"2020-11-04\",\n        \"openingBalance\": \"-15500.00000\",\n        \"closingBalance\": \"0\",\n        \"netChange\": \"15500.00000\"\n      }],\n      \"projection\": [{\n        \"startDate\": \"2020-11-05\",\n        \"endDate\": \"2020-11-05\",\n        \"openingBalance\": \"0\",\n        \"closingBalance\": \"6682.33000\",\n        \"netChange\": \"6682.33000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Expense\",\n          \"balanceChange\": \"-1412.67000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n            \"balanceChange\": \"-1085.00000\"\n          }, {\n            \"accountId\": \"225f6f2a-445e-48b3-88b5-e3f9daae059a\",\n            \"balanceChange\": \"-86.44000\"\n          }, {\n            \"accountId\": \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\",\n            \"balanceChange\": \"-241.23000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"8300.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n            \"balanceChange\": \"8300.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Uncategorised\",\n          \"balanceChange\": \"-205.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"da439b63-4dc2-45c4-9cf8-d4984413403e\",\n            \"balanceChange\": \"-205.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-06\",\n        \"endDate\": \"2020-11-06\",\n        \"openingBalance\": \"6682.33000\",\n        \"closingBalance\": \"2337.33000\",\n        \"netChange\": \"-4345.00000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Expense\",\n          \"balanceChange\": \"-14840.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\",\n            \"balanceChange\": \"-14840.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"10495.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n            \"balanceChange\": \"10495.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-07\",\n        \"endDate\": \"2020-11-07\",\n        \"openingBalance\": \"2337.33000\",\n        \"closingBalance\": \"-447.67000\",\n        \"netChange\": \"-2785.00000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Expense\",\n          \"balanceChange\": \"-17785.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"0d9d51d4-b347-480b-88f3-6107f0ba343f\",\n            \"balanceChange\": \"-755.00000\"\n          }, {\n            \"accountId\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n            \"balanceChange\": \"-17030.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"15000.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n            \"balanceChange\": \"15000.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-08\",\n        \"endDate\": \"2020-11-08\",\n        \"openingBalance\": \"-447.67000\",\n        \"closingBalance\": \"38332.33000\",\n        \"netChange\": \"38780.00000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Expense\",\n          \"balanceChange\": \"-200.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n            \"balanceChange\": \"-200.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"38980.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n            \"balanceChange\": \"38980.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-09\",\n        \"endDate\": \"2020-11-09\",\n        \"openingBalance\": \"38332.33000\",\n        \"closingBalance\": \"62587.33000\",\n        \"netChange\": \"24255.00000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Expense\",\n          \"balanceChange\": \"-945.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n            \"balanceChange\": \"-945.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"25200.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n            \"balanceChange\": \"25200.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-10\",\n        \"endDate\": \"2020-11-10\",\n        \"openingBalance\": \"62587.33000\",\n        \"closingBalance\": \"76977.33000\",\n        \"netChange\": \"14390.00000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Expense\",\n          \"balanceChange\": \"-12760.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\",\n            \"balanceChange\": \"-12760.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"27150.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n            \"balanceChange\": \"27150.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-11\",\n        \"endDate\": \"2020-11-11\",\n        \"openingBalance\": \"76977.33000\",\n        \"closingBalance\": \"72327.33000\",\n        \"netChange\": \"-4650.00000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Asset\",\n          \"balanceChange\": \"-18900.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"7e776b86-151e-4a4a-a60a-f36e682e2a50\",\n            \"balanceChange\": \"-18900.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"14250.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\",\n            \"balanceChange\": \"14250.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-12\",\n        \"endDate\": \"2020-11-12\",\n        \"openingBalance\": \"72327.33000\",\n        \"closingBalance\": \"86627.33000\",\n        \"netChange\": \"14300.00000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Expense\",\n          \"balanceChange\": \"-4600.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n            \"balanceChange\": \"-4600.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"18900.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n            \"balanceChange\": \"18900.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-13\",\n        \"endDate\": \"2020-11-13\",\n        \"openingBalance\": \"86627.33000\",\n        \"closingBalance\": \"87837.33000\",\n        \"netChange\": \"1210.00000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Expense\",\n          \"balanceChange\": \"-5800.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n            \"balanceChange\": \"-5800.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"7010.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\",\n            \"balanceChange\": \"7010.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-14\",\n        \"endDate\": \"2020-11-14\",\n        \"openingBalance\": \"87837.33000\",\n        \"closingBalance\": \"109937.33000\",\n        \"netChange\": \"22100.00000\",\n        \"categoryBalanceChanges\": [{\n          \"categoryName\": \"Expense\",\n          \"balanceChange\": \"-900.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"4339c2ee-4040-4996-acf5-810b6c8eb337\",\n            \"balanceChange\": \"-300.00000\"\n          }, {\n            \"accountId\": \"3b353731-f571-4854-8240-0d49cc81fecc\",\n            \"balanceChange\": \"-600.00000\"\n          }]\n        }, {\n          \"categoryName\": \"Income\",\n          \"balanceChange\": \"23000.00000\",\n          \"accountBalanceChanges\": [{\n            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n            \"balanceChange\": \"23000.00000\"\n          }]\n        }]\n      }, {\n        \"startDate\": \"2020-11-15\",\n        \"endDate\": \"2020-11-15\",\n        \"openingBalance\": \"109937.33000\",\n        \"closingBalance\": \"109937.33000\",\n        \"netChange\": \"0.00000\",\n        \"categoryBalanceChanges\": []\n      }, {\n        \"startDate\": \"2020-11-16\",\n        \"endDate\": \"2020-11-16\",\n        \"openingBalance\": \"109937.33000\",\n        \"closingBalance\": \"109937.33000\",\n        \"netChange\": \"0.00000\",\n        \"categoryBalanceChanges\": []\n      }, {\n        \"startDate\": \"2020-11-17\",\n        \"endDate\": \"2020-11-17\",\n        \"openingBalance\": \"109937.33000\",\n        \"closingBalance\": \"109937.33000\",\n        \"netChange\": \"0.00000\",\n        \"categoryBalanceChanges\": []\n      }, {\n        \"startDate\": \"2020-11-18\",\n        \"endDate\": \"2020-11-18\",\n        \"openingBalance\": \"109937.33000\",\n        \"closingBalance\": \"109937.33000\",\n        \"netChange\": \"0.00000\",\n        \"categoryBalanceChanges\": []\n      }],\n      \"chartOfAccounts\": [{\n        \"id\": \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\",\n        \"name\": \"Accounts Receivable (A/R)\",\n        \"nominalCode\": \"84\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"77b9ba20-924e-4be8-8077-87278297d915\",\n        \"name\": \"Checking\",\n        \"nominalCode\": \"35\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"7e776b86-151e-4a4a-a60a-f36e682e2a50\",\n        \"name\": \"Depreciation\",\n        \"nominalCode\": \"39\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\",\n        \"name\": \"Inventory Asset\",\n        \"nominalCode\": \"81\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"271c798c-031c-4cfc-828c-d40e37fbb003\",\n        \"name\": \"Original Cost\",\n        \"nominalCode\": \"38\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\",\n        \"name\": \"Prepaid Expenses\",\n        \"nominalCode\": \"3\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"497559c7-60bf-476c-8b16-09b8952a9722\",\n        \"name\": \"Savings\",\n        \"nominalCode\": \"36\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"9e68b349-72af-4cf3-8ea8-abd76f31064e\",\n        \"name\": \"Truck\",\n        \"nominalCode\": \"37\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\",\n        \"name\": \"Uncategorized Asset\",\n        \"nominalCode\": \"32\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\",\n        \"name\": \"Undeposited Funds\",\n        \"nominalCode\": \"4\",\n        \"category\": \"Asset\"\n      }, {\n        \"id\": \"6b718262-6099-4f32-9795-7aae2a25eac7\",\n        \"name\": \"Opening Balance Equity\",\n        \"nominalCode\": \"34\",\n        \"category\": \"Equity\"\n      }, {\n        \"id\": \"22a92103-3ee1-41fa-9722-1fc209caa2c2\",\n        \"name\": \"Retained Earnings\",\n        \"nominalCode\": \"2\",\n        \"category\": \"Equity\"\n      }, {\n        \"id\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n        \"name\": \"Accounting\",\n        \"nominalCode\": \"69\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"d4721d9a-d77b-4361-9807-09331ffcb6af\",\n        \"name\": \"Advertising\",\n        \"nominalCode\": \"7\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\",\n        \"name\": \"Automobile\",\n        \"nominalCode\": \"55\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"771aad7c-70d2-4f7e-9309-0ab33e11e589\",\n        \"name\": \"Bank Charges\",\n        \"nominalCode\": \"8\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"3d9747ce-afbf-4ff1-b23d-559206c5998c\",\n        \"name\": \"Bookkeeper\",\n        \"nominalCode\": \"70\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\",\n        \"name\": \"Building Repairs\",\n        \"nominalCode\": \"73\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\",\n        \"name\": \"Commissions & fees\",\n        \"nominalCode\": \"9\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"4339c2ee-4040-4996-acf5-810b6c8eb337\",\n        \"name\": \"Computer Repairs\",\n        \"nominalCode\": \"74\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\",\n        \"name\": \"Cost of Goods Sold\",\n        \"nominalCode\": \"80\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"f421c967-88eb-43c1-b19e-aa03f15f67ce\",\n        \"name\": \"Cost of Labor\",\n        \"nominalCode\": \"59\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"1137cd94-52b1-45b5-a573-1723c89a35f2\",\n        \"name\": \"Decks and Patios\",\n        \"nominalCode\": \"64\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\",\n        \"name\": \"Depreciation\",\n        \"nominalCode\": \"40\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ccfb434a-b289-441c-99a2-30e05a572057\",\n        \"name\": \"Disposal Fees\",\n        \"nominalCode\": \"28\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"9c400ca0-009e-475a-abc6-d5a76154aa0a\",\n        \"name\": \"Dues & Subscriptions\",\n        \"nominalCode\": \"10\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"74d34736-f4a0-4638-9465-4f5254ddb1b5\",\n        \"name\": \"Equipment Rental\",\n        \"nominalCode\": \"29\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\",\n        \"name\": \"Equipment Rental\",\n        \"nominalCode\": \"62\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"0d9d51d4-b347-480b-88f3-6107f0ba343f\",\n        \"name\": \"Equipment Repairs\",\n        \"nominalCode\": \"75\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\",\n        \"name\": \"Fountain and Garden Lighting\",\n        \"nominalCode\": \"65\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"7877e117-f0ac-4142-841f-84e062f77128\",\n        \"name\": \"Fuel\",\n        \"nominalCode\": \"56\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"225f6f2a-445e-48b3-88b5-e3f9daae059a\",\n        \"name\": \"Gas and Electric\",\n        \"nominalCode\": \"76\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\",\n        \"name\": \"Installation\",\n        \"nominalCode\": \"60\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\",\n        \"name\": \"Insurance\",\n        \"nominalCode\": \"11\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\",\n        \"name\": \"Job Expenses\",\n        \"nominalCode\": \"58\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ecc43720-0fb4-4b20-9561-73f78021a3fa\",\n        \"name\": \"Job Materials\",\n        \"nominalCode\": \"63\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"4a959dfe-428f-48c2-88f6-efc155f2a19c\",\n        \"name\": \"Lawyer\",\n        \"nominalCode\": \"71\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n        \"name\": \"Legal & Professional Fees\",\n        \"nominalCode\": \"12\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"6333a502-088a-4314-a8d1-05e5cf61e023\",\n        \"name\": \"Maintenance and Repair\",\n        \"nominalCode\": \"72\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\",\n        \"name\": \"Maintenance and Repairs\",\n        \"nominalCode\": \"61\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\",\n        \"name\": \"Meals and Entertainment\",\n        \"nominalCode\": \"13\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"b2e758c5-92f5-4f52-b915-cc8ea0357868\",\n        \"name\": \"Miscellaneous\",\n        \"nominalCode\": \"14\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"1e870df7-7255-41e2-8220-e24c301af038\",\n        \"name\": \"Office Expenses\",\n        \"nominalCode\": \"15\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\",\n        \"name\": \"Penalties & Settlements\",\n        \"nominalCode\": \"27\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ba81920a-23b7-4634-946f-47f0067d9e1a\",\n        \"name\": \"Permits\",\n        \"nominalCode\": \"68\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\",\n        \"name\": \"Plants and Soil\",\n        \"nominalCode\": \"66\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n        \"name\": \"Promotional\",\n        \"nominalCode\": \"16\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\",\n        \"name\": \"Purchases\",\n        \"nominalCode\": \"78\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"3b353731-f571-4854-8240-0d49cc81fecc\",\n        \"name\": \"Rent or Lease\",\n        \"nominalCode\": \"17\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"8e03d0a6-f172-40bd-adf1-3834e9734267\",\n        \"name\": \"Repair & Maintenance (deleted)\",\n        \"nominalCode\": \"18\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"bc366bf7-30db-4856-9f65-06ffc01596f5\",\n        \"name\": \"Sprinklers and Drip Systems\",\n        \"nominalCode\": \"67\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"c9205c03-ea6a-48a0-be07-733f894db4d8\",\n        \"name\": \"Stationery & Printing\",\n        \"nominalCode\": \"19\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"d61afb14-0da1-43ba-935e-4b4a08a012fe\",\n        \"name\": \"Supplies\",\n        \"nominalCode\": \"20\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\",\n        \"name\": \"Taxes & Licenses\",\n        \"nominalCode\": \"21\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"acf2e2dd-cc98-4c16-a705-d0010b593083\",\n        \"name\": \"Telephone\",\n        \"nominalCode\": \"77\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"0e0f7942-612f-481c-8166-ea33fe398a74\",\n        \"name\": \"Travel\",\n        \"nominalCode\": \"22\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\",\n        \"name\": \"Travel Meals\",\n        \"nominalCode\": \"23\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\",\n        \"name\": \"Unapplied Cash Bill Payment Expense\",\n        \"nominalCode\": \"88\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\",\n        \"name\": \"Uncategorized Expense\",\n        \"nominalCode\": \"31\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"ca5ea429-6cc0-4870-8513-a4e696b312d4\",\n        \"name\": \"Utilities\",\n        \"nominalCode\": \"24\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"a3ad5046-6a41-4b55-9072-66e5872fba62\",\n        \"name\": \"Workers Compensation\",\n        \"nominalCode\": \"57\",\n        \"category\": \"Expense\"\n      }, {\n        \"id\": \"773e43aa-8505-48b9-94ef-d7bc5786609a\",\n        \"name\": \"Billable Expense Income\",\n        \"nominalCode\": \"85\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\",\n        \"name\": \"Decks and Patios\",\n        \"nominalCode\": \"47\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n        \"name\": \"Design income\",\n        \"nominalCode\": \"82\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"587bc9dd-553d-4b3d-88d8-5256eedfb499\",\n        \"name\": \"Discounts given\",\n        \"nominalCode\": \"86\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"ef961774-568d-4746-a790-fa8e22907db5\",\n        \"name\": \"Fees Billed\",\n        \"nominalCode\": \"5\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n        \"name\": \"Fountains and Garden Lighting\",\n        \"nominalCode\": \"48\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"442e062b-8585-4f14-9763-8990c9fd6087\",\n        \"name\": \"Installation\",\n        \"nominalCode\": \"52\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"81860ebb-997f-47b6-a1ff-30988af2520d\",\n        \"name\": \"Interest Earned\",\n        \"nominalCode\": \"25\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"1bb12d54-9d81-4b63-b1c1-af419e47a687\",\n        \"name\": \"Job Materials\",\n        \"nominalCode\": \"46\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\",\n        \"name\": \"Labor\",\n        \"nominalCode\": \"51\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\",\n        \"name\": \"Landscaping Services\",\n        \"nominalCode\": \"45\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\",\n        \"name\": \"Maintenance and Repair\",\n        \"nominalCode\": \"53\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\",\n        \"name\": \"Other Income\",\n        \"nominalCode\": \"83\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"45b174a0-45be-4134-95ee-27b751f29b6e\",\n        \"name\": \"Other Portfolio Income\",\n        \"nominalCode\": \"26\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"de6e8ce5-90fc-4379-9972-951b94897fcc\",\n        \"name\": \"Pest Control Services\",\n        \"nominalCode\": \"54\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\",\n        \"name\": \"Plants and Soil\",\n        \"nominalCode\": \"49\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"700def49-ca84-4fa5-83d3-3de9cf393200\",\n        \"name\": \"Refunds-Allowances\",\n        \"nominalCode\": \"6\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"b15090b5-bcea-4655-a7aa-861e6084ca8b\",\n        \"name\": \"Sales of Product Income\",\n        \"nominalCode\": \"79\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\",\n        \"name\": \"Services\",\n        \"nominalCode\": \"1\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\",\n        \"name\": \"Sprinklers and Drip Systems\",\n        \"nominalCode\": \"50\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"c9c3eff9-0968-4d1f-b321-c2499c079014\",\n        \"name\": \"Unapplied Cash Payment Income\",\n        \"nominalCode\": \"87\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\",\n        \"name\": \"Uncategorized Income\",\n        \"nominalCode\": \"30\",\n        \"category\": \"Income\"\n      }, {\n        \"id\": \"a4163fda-a2c0-4d12-93cb-e016f049fee6\",\n        \"name\": \"Accounts Payable (A/P)\",\n        \"nominalCode\": \"33\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"e2521f1a-ab18-483f-89d9-ea0434f00989\",\n        \"name\": \"Arizona Dept. of Revenue Payable\",\n        \"nominalCode\": \"89\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\",\n        \"name\": \"Board of Equalization Payable\",\n        \"nominalCode\": \"90\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"26dfb943-b6fb-484b-82b5-85eca47fe07c\",\n        \"name\": \"Loan Payable\",\n        \"nominalCode\": \"43\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"109b5a2f-8b10-4953-a388-2934f4f60a6e\",\n        \"name\": \"Mastercard\",\n        \"nominalCode\": \"41\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"e11719b8-0ec3-4bd7-943a-72f575ef7890\",\n        \"name\": \"Notes Payable\",\n        \"nominalCode\": \"44\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"484ef212-372c-41bc-9a0b-9a3b64c78218\",\n        \"name\": \"Visa\",\n        \"nominalCode\": \"42\",\n        \"category\": \"Liability\"\n      }, {\n        \"id\": \"da439b63-4dc2-45c4-9cf8-d4984413403e\",\n        \"name\": \"Unknown\",\n        \"description\": \"Amounts that are not attributed to any specific account.\",\n        \"category\": \"Uncategorised\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/forecasts\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"references\": [{\n        \"id\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\n\nclass PayablesHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new CashFlowConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  getPayableById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _payableId = requestParameters[\"payableId\"];\n\n    if (_payableId === null || _payableId === undefined) {\n      throw new Error('Required parameter payableId was null or undefined when calling getPayableById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/payables/${encodeURIComponent(String(_payableId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getPayableByIdUrl(requestParameters) {\n    const _payableId = requestParameters[\"payableId\"];\n\n    if (_payableId === null || _payableId === undefined) {\n      throw new Error('Required parameter payableId was null or undefined when calling getPayableById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v1/payables/${encodeURIComponent(String(_payableId))}`;\n  }\n\n  getPayables(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _query = requestParameters[\"query\"];\n    const _statuses = requestParameters[\"statuses\"];\n    const _sort = requestParameters[\"sort\"];\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_query !== undefined && _query !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n    }\n\n    if (_statuses) {\n      _statuses.forEach(element => {\n        queryParameters = this.addToHttpParams(queryParameters, element, 'statuses');\n      });\n    }\n\n    if (_sort !== undefined && _sort !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _sort, 'sort');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/payables`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getPayablesUrl(requestParameters) {\n    const _query = requestParameters[\"query\"];\n    const _statuses = requestParameters[\"statuses\"];\n    const _sort = requestParameters[\"sort\"];\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_query !== undefined && _query !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n    }\n\n    if (_statuses) {\n      _statuses.forEach(element => {\n        queryParameters = this.addToHttpParams(queryParameters, element, 'statuses');\n      });\n    }\n\n    if (_sort !== undefined && _sort !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _sort, 'sort');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v1/payables${queryString ? `?${queryString}` : ''}`;\n  }\n\n  putExpectedDateByPayableId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _payableId = requestParameters[\"payableId\"];\n\n    if (_payableId === null || _payableId === undefined) {\n      throw new Error('Required parameter payableId was null or undefined when calling putExpectedDateByPayableId.');\n    }\n\n    const _putPaymentRequestExpectedDateRequest = requestParameters[\"putPaymentRequestExpectedDateRequest\"];\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v1/payables/${encodeURIComponent(String(_payableId))}/expected-date`, _putPaymentRequestExpectedDateRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putExpectedDateByPayableIdUrl(requestParameters) {\n    const _payableId = requestParameters[\"payableId\"];\n\n    if (_payableId === null || _payableId === undefined) {\n      throw new Error('Required parameter payableId was null or undefined when calling putExpectedDateByPayableId.');\n    }\n\n    const _putPaymentRequestExpectedDateRequest = requestParameters[\"putPaymentRequestExpectedDateRequest\"];\n    return `${this.configuration.basePath}/client-api/v1/payables/${encodeURIComponent(String(_payableId))}/expected-date`;\n  }\n\n}\n\nPayablesHttpService.ɵfac = function PayablesHttpService_Factory(t) {\n  return new (t || PayablesHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(CASH_FLOW_BASE_PATH, 8), i0.ɵɵinject(CashFlowConfiguration, 8));\n};\n\nPayablesHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PayablesHttpService,\n  factory: PayablesHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PayablesHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [CASH_FLOW_BASE_PATH]\n      }]\n    }, {\n      type: CashFlowConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst PayablesHttpServiceGetPayableByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/payables/{payableId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"status\": \"Open\",\n      \"id\": \"c041aa5f-8d64-4c03-b7a4-9f84bb030811\",\n      \"referenceNumber\": \"SEP00-1\",\n      \"issueDate\": \"2020-11-05T00:00:00Z\",\n      \"dueDate\": \"2020-12-02T00:00:00Z\",\n      \"expectedDate\": \"2020-12-02T00:00:00Z\",\n      \"dueAmount\": \"770.00000\",\n      \"paidAmount\": \"0.00000\",\n      \"totalAmount\": \"770.00000\",\n      \"currencyCode\": \"USD\",\n      \"counterparty\": {\n        \"id\": \"f8dbd544-ea7c-48b1-96a4-fffee569f236\",\n        \"name\": \"Robertson & Associates\",\n        \"type\": \"Supplier\"\n      },\n      \"chartOfAccounts\": [{\n        \"id\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n        \"name\": \"Accounting\",\n        \"nominalCode\": \"69\",\n        \"category\": \"Expense\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst PayablesHttpServiceGetPayablesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/payables\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"syncDatetime\": \"2020-01-31T12:12:12Z\",\n      \"payables\": [{\n        \"id\": \"1234-5678-9012-3457\",\n        \"dueDate\": \"2020-01-31T12:12:12Z\",\n        \"expectedDate\": \"2020-02-24T12:12:12Z\",\n        \"dueAmount\": \"2.00\",\n        \"paidAmount\": \"0.00\",\n        \"totalAmount\": \"2.00\",\n        \"currencyCode\": \"USD\",\n        \"referenceNumber\": \"123-bill-number\",\n        \"issueDate\": \"2020-01-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4444-3333\",\n          \"name\": \"Richard Brautigan\",\n          \"type\": \"Supplier\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"4a0a5e6d-bb31-463a-802f-65a7effsfr52\",\n          \"name\": \"Unknown\",\n          \"category\": \"Uncategorised\"\n        }],\n        \"status\": \"Open\"\n      }, {\n        \"id\": \"1234-5678-9012-3458\",\n        \"dueDate\": \"2020-01-31T12:12:12Z\",\n        \"expectedDate\": \"2020-02-12T12:12:12Z\",\n        \"dueAmount\": \"10.00\",\n        \"paidAmount\": \"0.00\",\n        \"totalAmount\": \"10.00\",\n        \"currencyCode\": \"CAD\",\n        \"referenceNumber\": \"125-bill-number\",\n        \"issueDate\": \"2020-01-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3334\",\n          \"name\": \"Walt Whitman\",\n          \"type\": \"Supplier\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"4a0a5e6d-bb31-463a-802f-65a7eff72345\",\n          \"name\": \"Accounts Payable\",\n          \"category\": \"Asset\"\n        }, {\n          \"id\": \"b068a7bb-917d-4484-8dd6-71cb2a9c9873\",\n          \"name\": \"It Consults\",\n          \"category\": \"Expenses\"\n        }],\n        \"status\": \"Draft\"\n      }, {\n        \"id\": \"1234-5678-9012-3459\",\n        \"dueDate\": \"2019-12-31T12:12:12Z\",\n        \"expectedDate\": \"2020-03-13T12:12:12Z\",\n        \"dueAmount\": \"0\",\n        \"paidAmount\": \"155.00\",\n        \"totalAmount\": \"155.00\",\n        \"currencyCode\": \"EUR\",\n        \"referenceNumber\": \"124-bill-number\",\n        \"issueDate\": \"2019-10-10T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3335\",\n          \"name\": \"Paul Celan\",\n          \"type\": \"Supplier\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"4a0a5e6d-bb31-463a-802f-65a7eff98fh6\",\n          \"name\": \"Accounts Payable\",\n          \"category\": \"Liability\"\n        }],\n        \"status\": \"Paid\"\n      }, {\n        \"id\": \"1234-5678-9012-3460\",\n        \"dueDate\": \"2020-01-31T12:12:12Z\",\n        \"expectedDate\": \"2020-04-15T12:12:12Z\",\n        \"dueAmount\": \"20020.00\",\n        \"paidAmount\": \"20000.00\",\n        \"totalAmount\": \"40020.00\",\n        \"currencyCode\": \"USD\",\n        \"referenceNumber\": \"123-bill-number\",\n        \"issueDate\": \"2020-01-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4444-3336\",\n          \"name\": \"Sylvia Plath\",\n          \"type\": \"Supplier\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"b068a7bb-917d-4484-8dd6-71cb2ad8t528\",\n          \"name\": \"Accounts Payable\",\n          \"category\": \"Liability\"\n        }, {\n          \"id\": \"4a0a5e6d-bb31-463a-802f-65a7ef0nfh67\",\n          \"name\": \"It Consults\",\n          \"category\": \"Expenses\"\n        }, {\n          \"id\": \"6hfy2e6d-bb31-463a-802f-65a7eff98fh6\",\n          \"name\": \"Business Bank Account\",\n          \"category\": \"Asset\"\n        }],\n        \"status\": \"PartiallyPaid\"\n      }, {\n        \"id\": \"1234-5678-9012-3461\",\n        \"dueDate\": \"2020-02-28T12:12:12Z\",\n        \"expectedDate\": \"2020-05-15T12:12:12Z\",\n        \"dueAmount\": \"10000.00\",\n        \"paidAmount\": \"10000.00\",\n        \"totalAmount\": \"20000.00\",\n        \"currencyCode\": \"USD\",\n        \"referenceNumber\": \"125-bill-number\",\n        \"issueDate\": \"2019-12-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3337\",\n          \"name\": \"Jeff Beck\",\n          \"type\": \"Supplier\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"4a0a5e6d-bb31-463a-802f-65a7eff9ufy6\",\n          \"name\": \"Accounts Payable\",\n          \"category\": \"Liability\"\n        }],\n        \"status\": \"PartiallyPaid\"\n      }, {\n        \"id\": \"1234-5678-9012-3462\",\n        \"dueDate\": \"2019-12-21T12:12:12Z\",\n        \"expectedDate\": \"2020-06-17T12:12:12Z\",\n        \"dueAmount\": \"10000.00\",\n        \"paidAmount\": \"20000.00\",\n        \"totalAmount\": \"30000.00\",\n        \"currencyCode\": \"RUB\",\n        \"referenceNumber\": \"124-bill-number\",\n        \"issueDate\": \"2019-11-10T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3338\",\n          \"name\": \"Boris Ryzhyi\",\n          \"type\": \"Supplier\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"4a0a5e6d-bb31-463a-802f-78ahy3f98fh6\",\n          \"name\": \"Unknown\",\n          \"category\": \"Uncategorised\"\n        }],\n        \"status\": \"PartiallyPaid\"\n      }, {\n        \"id\": \"1234-5678-9012-3463\",\n        \"dueDate\": \"2020-01-19T12:12:12Z\",\n        \"expectedDate\": \"2019-11-30T12:12:12Z\",\n        \"dueAmount\": \"0\",\n        \"paidAmount\": \"400000.00\",\n        \"totalAmount\": \"400000.00\",\n        \"currencyCode\": \"CAD\",\n        \"referenceNumber\": \"125-bill-number\",\n        \"issueDate\": \"2019-11-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3339\",\n          \"name\": \"Emily Dickinson\",\n          \"type\": \"Supplier\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"7hn1f542-bb31-463a-802f-78ahy3f98fh6\",\n          \"name\": \"It Consults\",\n          \"category\": \"Expenses\"\n        }],\n        \"status\": \"Paid\"\n      }, {\n        \"id\": \"1234-5678-9012-3464\",\n        \"dueDate\": \"2019-12-26T12:12:12Z\",\n        \"expectedDate\": \"2020-07-17T12:12:12Z\",\n        \"dueAmount\": \"2000.00\",\n        \"paidAmount\": \"8000.00\",\n        \"totalAmount\": \"10000.00\",\n        \"currencyCode\": \"EUR\",\n        \"referenceNumber\": \"124-bill-number\",\n        \"issueDate\": \"2019-10-15T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3340\",\n          \"name\": \"Mary Jane\",\n          \"type\": \"Supplier\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"13bgf542-bb31-463a-802f-78ahy3f98fh6\",\n          \"name\": \"It Consults\",\n          \"category\": \"Expenses\"\n        }],\n        \"status\": \"PartiallyPaid\"\n      }, {\n        \"id\": \"1234-5678-9012-3465\",\n        \"dueDate\": \"2019-11-30T12:12:12Z\",\n        \"expectedDate\": \"2019-11-30T12:12:12Z\",\n        \"dueAmount\": \"20020.00\",\n        \"paidAmount\": \"0.00\",\n        \"totalAmount\": \"20020.00\",\n        \"currencyCode\": \"USD\",\n        \"referenceNumber\": \"123-bill-number\",\n        \"issueDate\": \"2019-10-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4444-3341\",\n          \"name\": \"William Yeats\",\n          \"type\": \"Supplier\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"7hn1f542-bb31-463a-802f-1gtr23f98fh6\",\n          \"name\": \"Business Bank Account\",\n          \"category\": \"Asset\"\n        }],\n        \"status\": \"Unknown\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst PayablesHttpServicePutExpectedDateByPayableIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/payables/{payableId}/expected-date\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"status\": \"Open\",\n      \"id\": \"c041aa5f-8d64-4c03-b7a4-9f84bb030811\",\n      \"referenceNumber\": \"SEP00-1\",\n      \"issueDate\": \"2020-11-05T00:00:00Z\",\n      \"dueDate\": \"2020-12-02T00:00:00Z\",\n      \"expectedDate\": \"2020-12-02T00:00:00Z\",\n      \"dueAmount\": \"770.00000\",\n      \"paidAmount\": \"0.00000\",\n      \"totalAmount\": \"770.00000\",\n      \"currencyCode\": \"USD\",\n      \"counterparty\": {\n        \"id\": \"f8dbd544-ea7c-48b1-96a4-fffee569f236\",\n        \"name\": \"Robertson & Associates\",\n        \"type\": \"Supplier\"\n      },\n      \"chartOfAccounts\": [{\n        \"id\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n        \"name\": \"Accounting\",\n        \"nominalCode\": \"69\",\n        \"category\": \"Expense\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst PayablesHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/payables/{payableId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"status\": \"Open\",\n      \"id\": \"c041aa5f-8d64-4c03-b7a4-9f84bb030811\",\n      \"referenceNumber\": \"SEP00-1\",\n      \"issueDate\": \"2020-11-05T00:00:00Z\",\n      \"dueDate\": \"2020-12-02T00:00:00Z\",\n      \"expectedDate\": \"2020-12-02T00:00:00Z\",\n      \"dueAmount\": \"770.00000\",\n      \"paidAmount\": \"0.00000\",\n      \"totalAmount\": \"770.00000\",\n      \"currencyCode\": \"USD\",\n      \"counterparty\": {\n        \"id\": \"f8dbd544-ea7c-48b1-96a4-fffee569f236\",\n        \"name\": \"Robertson & Associates\",\n        \"type\": \"Supplier\"\n      },\n      \"chartOfAccounts\": [{\n        \"id\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n        \"name\": \"Accounting\",\n        \"nominalCode\": \"69\",\n        \"category\": \"Expense\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/payables\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"syncDatetime\": \"2020-01-31T12:12:12Z\",\n      \"payables\": [{\n        \"id\": \"1234-5678-9012-3457\",\n        \"dueDate\": \"2020-01-31T12:12:12Z\",\n        \"expectedDate\": \"2020-02-24T12:12:12Z\",\n        \"dueAmount\": \"2.00\",\n        \"paidAmount\": \"0.00\",\n        \"totalAmount\": \"2.00\",\n        \"currencyCode\": \"USD\",\n        \"referenceNumber\": \"123-bill-number\",\n        \"issueDate\": \"2020-01-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4444-3333\",\n          \"name\": \"Richard Brautigan\",\n          \"type\": \"Supplier\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"4a0a5e6d-bb31-463a-802f-65a7effsfr52\",\n          \"name\": \"Unknown\",\n          \"category\": \"Uncategorised\"\n        }],\n        \"status\": \"Open\"\n      }, {\n        \"id\": \"1234-5678-9012-3458\",\n        \"dueDate\": \"2020-01-31T12:12:12Z\",\n        \"expectedDate\": \"2020-02-12T12:12:12Z\",\n        \"dueAmount\": \"10.00\",\n        \"paidAmount\": \"0.00\",\n        \"totalAmount\": \"10.00\",\n        \"currencyCode\": \"CAD\",\n        \"referenceNumber\": \"125-bill-number\",\n        \"issueDate\": \"2020-01-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3334\",\n          \"name\": \"Walt Whitman\",\n          \"type\": \"Supplier\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"4a0a5e6d-bb31-463a-802f-65a7eff72345\",\n          \"name\": \"Accounts Payable\",\n          \"category\": \"Asset\"\n        }, {\n          \"id\": \"b068a7bb-917d-4484-8dd6-71cb2a9c9873\",\n          \"name\": \"It Consults\",\n          \"category\": \"Expenses\"\n        }],\n        \"status\": \"Draft\"\n      }, {\n        \"id\": \"1234-5678-9012-3459\",\n        \"dueDate\": \"2019-12-31T12:12:12Z\",\n        \"expectedDate\": \"2020-03-13T12:12:12Z\",\n        \"dueAmount\": \"0\",\n        \"paidAmount\": \"155.00\",\n        \"totalAmount\": \"155.00\",\n        \"currencyCode\": \"EUR\",\n        \"referenceNumber\": \"124-bill-number\",\n        \"issueDate\": \"2019-10-10T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3335\",\n          \"name\": \"Paul Celan\",\n          \"type\": \"Supplier\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"4a0a5e6d-bb31-463a-802f-65a7eff98fh6\",\n          \"name\": \"Accounts Payable\",\n          \"category\": \"Liability\"\n        }],\n        \"status\": \"Paid\"\n      }, {\n        \"id\": \"1234-5678-9012-3460\",\n        \"dueDate\": \"2020-01-31T12:12:12Z\",\n        \"expectedDate\": \"2020-04-15T12:12:12Z\",\n        \"dueAmount\": \"20020.00\",\n        \"paidAmount\": \"20000.00\",\n        \"totalAmount\": \"40020.00\",\n        \"currencyCode\": \"USD\",\n        \"referenceNumber\": \"123-bill-number\",\n        \"issueDate\": \"2020-01-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4444-3336\",\n          \"name\": \"Sylvia Plath\",\n          \"type\": \"Supplier\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"b068a7bb-917d-4484-8dd6-71cb2ad8t528\",\n          \"name\": \"Accounts Payable\",\n          \"category\": \"Liability\"\n        }, {\n          \"id\": \"4a0a5e6d-bb31-463a-802f-65a7ef0nfh67\",\n          \"name\": \"It Consults\",\n          \"category\": \"Expenses\"\n        }, {\n          \"id\": \"6hfy2e6d-bb31-463a-802f-65a7eff98fh6\",\n          \"name\": \"Business Bank Account\",\n          \"category\": \"Asset\"\n        }],\n        \"status\": \"PartiallyPaid\"\n      }, {\n        \"id\": \"1234-5678-9012-3461\",\n        \"dueDate\": \"2020-02-28T12:12:12Z\",\n        \"expectedDate\": \"2020-05-15T12:12:12Z\",\n        \"dueAmount\": \"10000.00\",\n        \"paidAmount\": \"10000.00\",\n        \"totalAmount\": \"20000.00\",\n        \"currencyCode\": \"USD\",\n        \"referenceNumber\": \"125-bill-number\",\n        \"issueDate\": \"2019-12-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3337\",\n          \"name\": \"Jeff Beck\",\n          \"type\": \"Supplier\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"4a0a5e6d-bb31-463a-802f-65a7eff9ufy6\",\n          \"name\": \"Accounts Payable\",\n          \"category\": \"Liability\"\n        }],\n        \"status\": \"PartiallyPaid\"\n      }, {\n        \"id\": \"1234-5678-9012-3462\",\n        \"dueDate\": \"2019-12-21T12:12:12Z\",\n        \"expectedDate\": \"2020-06-17T12:12:12Z\",\n        \"dueAmount\": \"10000.00\",\n        \"paidAmount\": \"20000.00\",\n        \"totalAmount\": \"30000.00\",\n        \"currencyCode\": \"RUB\",\n        \"referenceNumber\": \"124-bill-number\",\n        \"issueDate\": \"2019-11-10T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3338\",\n          \"name\": \"Boris Ryzhyi\",\n          \"type\": \"Supplier\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"4a0a5e6d-bb31-463a-802f-78ahy3f98fh6\",\n          \"name\": \"Unknown\",\n          \"category\": \"Uncategorised\"\n        }],\n        \"status\": \"PartiallyPaid\"\n      }, {\n        \"id\": \"1234-5678-9012-3463\",\n        \"dueDate\": \"2020-01-19T12:12:12Z\",\n        \"expectedDate\": \"2019-11-30T12:12:12Z\",\n        \"dueAmount\": \"0\",\n        \"paidAmount\": \"400000.00\",\n        \"totalAmount\": \"400000.00\",\n        \"currencyCode\": \"CAD\",\n        \"referenceNumber\": \"125-bill-number\",\n        \"issueDate\": \"2019-11-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3339\",\n          \"name\": \"Emily Dickinson\",\n          \"type\": \"Supplier\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"7hn1f542-bb31-463a-802f-78ahy3f98fh6\",\n          \"name\": \"It Consults\",\n          \"category\": \"Expenses\"\n        }],\n        \"status\": \"Paid\"\n      }, {\n        \"id\": \"1234-5678-9012-3464\",\n        \"dueDate\": \"2019-12-26T12:12:12Z\",\n        \"expectedDate\": \"2020-07-17T12:12:12Z\",\n        \"dueAmount\": \"2000.00\",\n        \"paidAmount\": \"8000.00\",\n        \"totalAmount\": \"10000.00\",\n        \"currencyCode\": \"EUR\",\n        \"referenceNumber\": \"124-bill-number\",\n        \"issueDate\": \"2019-10-15T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3340\",\n          \"name\": \"Mary Jane\",\n          \"type\": \"Supplier\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"13bgf542-bb31-463a-802f-78ahy3f98fh6\",\n          \"name\": \"It Consults\",\n          \"category\": \"Expenses\"\n        }],\n        \"status\": \"PartiallyPaid\"\n      }, {\n        \"id\": \"1234-5678-9012-3465\",\n        \"dueDate\": \"2019-11-30T12:12:12Z\",\n        \"expectedDate\": \"2019-11-30T12:12:12Z\",\n        \"dueAmount\": \"20020.00\",\n        \"paidAmount\": \"0.00\",\n        \"totalAmount\": \"20020.00\",\n        \"currencyCode\": \"USD\",\n        \"referenceNumber\": \"123-bill-number\",\n        \"issueDate\": \"2019-10-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4444-3341\",\n          \"name\": \"William Yeats\",\n          \"type\": \"Supplier\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"7hn1f542-bb31-463a-802f-1gtr23f98fh6\",\n          \"name\": \"Business Bank Account\",\n          \"category\": \"Asset\"\n        }],\n        \"status\": \"Unknown\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/payables/{payableId}/expected-date\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"status\": \"Open\",\n      \"id\": \"c041aa5f-8d64-4c03-b7a4-9f84bb030811\",\n      \"referenceNumber\": \"SEP00-1\",\n      \"issueDate\": \"2020-11-05T00:00:00Z\",\n      \"dueDate\": \"2020-12-02T00:00:00Z\",\n      \"expectedDate\": \"2020-12-02T00:00:00Z\",\n      \"dueAmount\": \"770.00000\",\n      \"paidAmount\": \"0.00000\",\n      \"totalAmount\": \"770.00000\",\n      \"currencyCode\": \"USD\",\n      \"counterparty\": {\n        \"id\": \"f8dbd544-ea7c-48b1-96a4-fffee569f236\",\n        \"name\": \"Robertson & Associates\",\n        \"type\": \"Supplier\"\n      },\n      \"chartOfAccounts\": [{\n        \"id\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n        \"name\": \"Accounting\",\n        \"nominalCode\": \"69\",\n        \"category\": \"Expense\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\n\nclass ReceivablesHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new CashFlowConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  getReceivableById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _receivableId = requestParameters[\"receivableId\"];\n\n    if (_receivableId === null || _receivableId === undefined) {\n      throw new Error('Required parameter receivableId was null or undefined when calling getReceivableById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/receivables/${encodeURIComponent(String(_receivableId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getReceivableByIdUrl(requestParameters) {\n    const _receivableId = requestParameters[\"receivableId\"];\n\n    if (_receivableId === null || _receivableId === undefined) {\n      throw new Error('Required parameter receivableId was null or undefined when calling getReceivableById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v1/receivables/${encodeURIComponent(String(_receivableId))}`;\n  }\n\n  getReceivables(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _query = requestParameters[\"query\"];\n    const _statuses = requestParameters[\"statuses\"];\n    const _sort = requestParameters[\"sort\"];\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_query !== undefined && _query !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n    }\n\n    if (_statuses) {\n      _statuses.forEach(element => {\n        queryParameters = this.addToHttpParams(queryParameters, element, 'statuses');\n      });\n    }\n\n    if (_sort !== undefined && _sort !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _sort, 'sort');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/receivables`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getReceivablesUrl(requestParameters) {\n    const _query = requestParameters[\"query\"];\n    const _statuses = requestParameters[\"statuses\"];\n    const _sort = requestParameters[\"sort\"];\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_query !== undefined && _query !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n    }\n\n    if (_statuses) {\n      _statuses.forEach(element => {\n        queryParameters = this.addToHttpParams(queryParameters, element, 'statuses');\n      });\n    }\n\n    if (_sort !== undefined && _sort !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _sort, 'sort');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v1/receivables${queryString ? `?${queryString}` : ''}`;\n  }\n\n  putExpectedDateByReceivableId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _receivableId = requestParameters[\"receivableId\"];\n\n    if (_receivableId === null || _receivableId === undefined) {\n      throw new Error('Required parameter receivableId was null or undefined when calling putExpectedDateByReceivableId.');\n    }\n\n    const _putPaymentRequestExpectedDateRequest = requestParameters[\"putPaymentRequestExpectedDateRequest\"];\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v1/receivables/${encodeURIComponent(String(_receivableId))}/expected-date`, _putPaymentRequestExpectedDateRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putExpectedDateByReceivableIdUrl(requestParameters) {\n    const _receivableId = requestParameters[\"receivableId\"];\n\n    if (_receivableId === null || _receivableId === undefined) {\n      throw new Error('Required parameter receivableId was null or undefined when calling putExpectedDateByReceivableId.');\n    }\n\n    const _putPaymentRequestExpectedDateRequest = requestParameters[\"putPaymentRequestExpectedDateRequest\"];\n    return `${this.configuration.basePath}/client-api/v1/receivables/${encodeURIComponent(String(_receivableId))}/expected-date`;\n  }\n\n}\n\nReceivablesHttpService.ɵfac = function ReceivablesHttpService_Factory(t) {\n  return new (t || ReceivablesHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(CASH_FLOW_BASE_PATH, 8), i0.ɵɵinject(CashFlowConfiguration, 8));\n};\n\nReceivablesHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ReceivablesHttpService,\n  factory: ReceivablesHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReceivablesHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [CASH_FLOW_BASE_PATH]\n      }]\n    }, {\n      type: CashFlowConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst ReceivablesHttpServiceGetReceivableByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/receivables/{receivableId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"status\": \"Submitted\",\n      \"id\": \"08849602-262b-40b4-a7be-ecd9db00d048\",\n      \"referenceNumber\": \"1050\",\n      \"issueDate\": \"2020-08-13T00:00:00Z\",\n      \"dueDate\": \"2020-12-02T00:00:00Z\",\n      \"expectedDate\": \"2020-12-02T00:00:00Z\",\n      \"dueAmount\": \"9055.30000\",\n      \"paidAmount\": \"0.00000\",\n      \"totalAmount\": \"9055.30000\",\n      \"currencyCode\": \"USD\",\n      \"counterparty\": {\n        \"id\": \"85c069ea-4f65-45de-9e56-a3f3592e0db7\",\n        \"name\": \"Cool Cars\",\n        \"type\": \"Customer\"\n      },\n      \"chartOfAccounts\": [{\n        \"id\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n        \"name\": \"Design income\",\n        \"nominalCode\": \"82\",\n        \"category\": \"Income\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst ReceivablesHttpServiceGetReceivablesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/receivables\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"syncDatetime\": \"2020-01-31T12:12:12Z\",\n      \"receivables\": [{\n        \"id\": \"1234-5678-9012-3457\",\n        \"dueDate\": \"2020-01-31T12:12:12Z\",\n        \"expectedDate\": \"2020-02-13T12:12:12Z\",\n        \"dueAmount\": \"2.00\",\n        \"paidAmount\": \"0.00\",\n        \"totalAmount\": \"2.00\",\n        \"currencyCode\": \"USD\",\n        \"referenceNumber\": \"123-invoice-number\",\n        \"issueDate\": \"2020-01-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4444-3333\",\n          \"name\": \"Richard Brautigan\",\n          \"type\": \"Customer\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"4a0a5e6d-bb31-463a-802f-65a7eff70536\",\n          \"name\": \"Sales\",\n          \"category\": \"Income\"\n        }, {\n          \"id\": \"b068a7bb-917d-4484-8dd6-71cb2a9c9723\",\n          \"name\": \"Accounts Receivable\",\n          \"category\": \"Asset\"\n        }],\n        \"status\": \"Draft\"\n      }, {\n        \"id\": \"1234-5678-9012-3458\",\n        \"dueDate\": \"2020-01-31T12:12:12Z\",\n        \"expectedDate\": \"2020-03-14T12:12:12Z\",\n        \"dueAmount\": \"10.00\",\n        \"paidAmount\": \"0.00\",\n        \"totalAmount\": \"10.00\",\n        \"currencyCode\": \"CAD\",\n        \"referenceNumber\": \"125-invoice-number\",\n        \"issueDate\": \"2020-01-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3334\",\n          \"name\": \"Walt Whitman\",\n          \"type\": \"Customer\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"2th355ar-bb31-463a-802f-65a7eff70536\",\n          \"name\": \"Unknown\",\n          \"category\": \"Uncategorised\"\n        }, {\n          \"id\": \"abr256dr-917d-4484-8dd6-71cb2a9c9723\",\n          \"name\": \"Accounts Receivable\",\n          \"category\": \"Asset\"\n        }, {\n          \"id\": \"4a0a5e6d-bb31-463a-802f-1hnf56at0536\",\n          \"name\": \"Sales\",\n          \"category\": \"Income\"\n        }],\n        \"status\": \"Submitted\"\n      }, {\n        \"id\": \"1234-5678-9012-3459\",\n        \"dueDate\": \"2019-12-31T12:12:12Z\",\n        \"expectedDate\": \"2020-04-14T12:12:12Z\",\n        \"dueAmount\": \"155.00\",\n        \"paidAmount\": \"145.00\",\n        \"totalAmount\": \"300.00\",\n        \"currencyCode\": \"EUR\",\n        \"referenceNumber\": \"124-invoice-number\",\n        \"issueDate\": \"2019-10-10T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3335\",\n          \"name\": \"Paul Celan\",\n          \"type\": \"Customer\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"3gt6jka1-bb31-463a-802f-65a7eff70536\",\n          \"name\": \"Sales\",\n          \"category\": \"Income\"\n        }],\n        \"status\": \"PartiallyPaid\"\n      }, {\n        \"id\": \"1234-5678-9012-3460\",\n        \"dueDate\": \"2020-01-31T12:12:12Z\",\n        \"expectedDate\": \"2020-05-15T12:12:12Z\",\n        \"dueAmount\": \"20020.00\",\n        \"paidAmount\": \"0.00\",\n        \"totalAmount\": \"20020.00\",\n        \"currencyCode\": \"USD\",\n        \"referenceNumber\": \"123-invoice-number\",\n        \"issueDate\": \"2020-01-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4444-3336\",\n          \"name\": \"Sylvia Plath\",\n          \"type\": \"Customer\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"bg2ya541-bb31-463a-802f-65a7eff70536\",\n          \"name\": \"Unknown\",\n          \"category\": \"Uncategorised\"\n        }],\n        \"status\": \"Submitted\"\n      }, {\n        \"id\": \"1234-5678-9012-3461\",\n        \"dueDate\": \"2020-02-28T12:12:12Z\",\n        \"expectedDate\": \"2020-06-16T12:12:12Z\",\n        \"dueAmount\": \"5000.00\",\n        \"paidAmount\": \"5000.00\",\n        \"totalAmount\": \"10000.00\",\n        \"currencyCode\": \"USD\",\n        \"referenceNumber\": \"125-invoice-number\",\n        \"issueDate\": \"2019-12-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3337\",\n          \"name\": \"Jeff Beck\",\n          \"type\": \"Customer\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"aa54f12y-bb31-463a-802f-65a7eff70536\",\n          \"name\": \"Accounts Receivable\",\n          \"category\": \"Asset\"\n        }],\n        \"status\": \"PartiallyPaid\"\n      }, {\n        \"id\": \"1234-5678-9012-3462\",\n        \"dueDate\": \"2019-12-21T12:12:12Z\",\n        \"expectedDate\": \"2020-07-17T12:12:12Z\",\n        \"dueAmount\": \"0\",\n        \"paidAmount\": \"10000.00\",\n        \"totalAmount\": \"10000.00\",\n        \"currencyCode\": \"RUB\",\n        \"referenceNumber\": \"124-invoice-number\",\n        \"issueDate\": \"2019-11-10T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3338\",\n          \"name\": \"Boris Ryzhyi\",\n          \"type\": \"Customer\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"h1t45dre-bb31-463a-802f-65a7eff70536\",\n          \"name\": \"Accounts Receivable\",\n          \"category\": \"Asset\"\n        }],\n        \"status\": \"Paid\"\n      }, {\n        \"id\": \"1234-5678-9012-3463\",\n        \"dueDate\": \"2020-01-19T12:12:12Z\",\n        \"expectedDate\": \"2020-08-18T12:12:12Z\",\n        \"dueAmount\": \"120000.00\",\n        \"paidAmount\": \"0.00\",\n        \"totalAmount\": \"120000.00\",\n        \"currencyCode\": \"CAD\",\n        \"referenceNumber\": \"125-invoice-number\",\n        \"issueDate\": \"2019-11-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3339\",\n          \"name\": \"Emily Dickinson\",\n          \"type\": \"Customer\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"11bg3rp7-bb31-463a-802f-65a7ef1htr56\",\n          \"name\": \"Sales\",\n          \"category\": \"Income\"\n        }],\n        \"status\": \"Submitted\"\n      }, {\n        \"id\": \"1234-5678-9012-3464\",\n        \"dueDate\": \"2019-12-26T12:12:12Z\",\n        \"expectedDate\": \"2020-09-19T12:12:12Z\",\n        \"dueAmount\": \"10000.00\",\n        \"paidAmount\": \"0.00\",\n        \"totalAmount\": \"10000.00\",\n        \"currencyCode\": \"EUR\",\n        \"referenceNumber\": \"124-invoice-number\",\n        \"issueDate\": \"2019-10-15T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3340\",\n          \"name\": \"Mary Jane\",\n          \"type\": \"Customer\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"aa5gpm67-bb31-463a-802f-65a7ef1ht1gt\",\n          \"name\": \"Sales\",\n          \"category\": \"Income\"\n        }, {\n          \"id\": \"ba784pt1-bb31-463a-802f-65a7ef1htr56\",\n          \"name\": \"Unknown\",\n          \"category\": \"Uncategorised\"\n        }],\n        \"status\": \"PartiallyPaid\"\n      }, {\n        \"id\": \"1234-5678-9012-3465\",\n        \"dueDate\": \"2019-11-30T12:12:12Z\",\n        \"expectedDate\": \"2020-10-20T12:12:12Z\",\n        \"dueAmount\": \"20020.00\",\n        \"paidAmount\": \"0.00\",\n        \"totalAmount\": \"20020.00\",\n        \"currencyCode\": \"USD\",\n        \"referenceNumber\": \"123-invoice-number\",\n        \"issueDate\": \"2019-10-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4444-3341\",\n          \"name\": \"William Yeats\",\n          \"type\": \"Customer\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"ee79mn61-bb31-463a-802f-65a7ef1htr56\",\n          \"name\": \"Sales\",\n          \"category\": \"Income\"\n        }],\n        \"status\": \"Draft\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst ReceivablesHttpServicePutExpectedDateByReceivableIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/receivables/{receivableId}/expected-date\",\n  method: \"PUT\",\n  responses: [{\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst ReceivablesHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/receivables/{receivableId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"status\": \"Submitted\",\n      \"id\": \"08849602-262b-40b4-a7be-ecd9db00d048\",\n      \"referenceNumber\": \"1050\",\n      \"issueDate\": \"2020-08-13T00:00:00Z\",\n      \"dueDate\": \"2020-12-02T00:00:00Z\",\n      \"expectedDate\": \"2020-12-02T00:00:00Z\",\n      \"dueAmount\": \"9055.30000\",\n      \"paidAmount\": \"0.00000\",\n      \"totalAmount\": \"9055.30000\",\n      \"currencyCode\": \"USD\",\n      \"counterparty\": {\n        \"id\": \"85c069ea-4f65-45de-9e56-a3f3592e0db7\",\n        \"name\": \"Cool Cars\",\n        \"type\": \"Customer\"\n      },\n      \"chartOfAccounts\": [{\n        \"id\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n        \"name\": \"Design income\",\n        \"nominalCode\": \"82\",\n        \"category\": \"Income\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/receivables\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"syncDatetime\": \"2020-01-31T12:12:12Z\",\n      \"receivables\": [{\n        \"id\": \"1234-5678-9012-3457\",\n        \"dueDate\": \"2020-01-31T12:12:12Z\",\n        \"expectedDate\": \"2020-02-13T12:12:12Z\",\n        \"dueAmount\": \"2.00\",\n        \"paidAmount\": \"0.00\",\n        \"totalAmount\": \"2.00\",\n        \"currencyCode\": \"USD\",\n        \"referenceNumber\": \"123-invoice-number\",\n        \"issueDate\": \"2020-01-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4444-3333\",\n          \"name\": \"Richard Brautigan\",\n          \"type\": \"Customer\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"4a0a5e6d-bb31-463a-802f-65a7eff70536\",\n          \"name\": \"Sales\",\n          \"category\": \"Income\"\n        }, {\n          \"id\": \"b068a7bb-917d-4484-8dd6-71cb2a9c9723\",\n          \"name\": \"Accounts Receivable\",\n          \"category\": \"Asset\"\n        }],\n        \"status\": \"Draft\"\n      }, {\n        \"id\": \"1234-5678-9012-3458\",\n        \"dueDate\": \"2020-01-31T12:12:12Z\",\n        \"expectedDate\": \"2020-03-14T12:12:12Z\",\n        \"dueAmount\": \"10.00\",\n        \"paidAmount\": \"0.00\",\n        \"totalAmount\": \"10.00\",\n        \"currencyCode\": \"CAD\",\n        \"referenceNumber\": \"125-invoice-number\",\n        \"issueDate\": \"2020-01-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3334\",\n          \"name\": \"Walt Whitman\",\n          \"type\": \"Customer\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"2th355ar-bb31-463a-802f-65a7eff70536\",\n          \"name\": \"Unknown\",\n          \"category\": \"Uncategorised\"\n        }, {\n          \"id\": \"abr256dr-917d-4484-8dd6-71cb2a9c9723\",\n          \"name\": \"Accounts Receivable\",\n          \"category\": \"Asset\"\n        }, {\n          \"id\": \"4a0a5e6d-bb31-463a-802f-1hnf56at0536\",\n          \"name\": \"Sales\",\n          \"category\": \"Income\"\n        }],\n        \"status\": \"Submitted\"\n      }, {\n        \"id\": \"1234-5678-9012-3459\",\n        \"dueDate\": \"2019-12-31T12:12:12Z\",\n        \"expectedDate\": \"2020-04-14T12:12:12Z\",\n        \"dueAmount\": \"155.00\",\n        \"paidAmount\": \"145.00\",\n        \"totalAmount\": \"300.00\",\n        \"currencyCode\": \"EUR\",\n        \"referenceNumber\": \"124-invoice-number\",\n        \"issueDate\": \"2019-10-10T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3335\",\n          \"name\": \"Paul Celan\",\n          \"type\": \"Customer\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"3gt6jka1-bb31-463a-802f-65a7eff70536\",\n          \"name\": \"Sales\",\n          \"category\": \"Income\"\n        }],\n        \"status\": \"PartiallyPaid\"\n      }, {\n        \"id\": \"1234-5678-9012-3460\",\n        \"dueDate\": \"2020-01-31T12:12:12Z\",\n        \"expectedDate\": \"2020-05-15T12:12:12Z\",\n        \"dueAmount\": \"20020.00\",\n        \"paidAmount\": \"0.00\",\n        \"totalAmount\": \"20020.00\",\n        \"currencyCode\": \"USD\",\n        \"referenceNumber\": \"123-invoice-number\",\n        \"issueDate\": \"2020-01-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4444-3336\",\n          \"name\": \"Sylvia Plath\",\n          \"type\": \"Customer\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"bg2ya541-bb31-463a-802f-65a7eff70536\",\n          \"name\": \"Unknown\",\n          \"category\": \"Uncategorised\"\n        }],\n        \"status\": \"Submitted\"\n      }, {\n        \"id\": \"1234-5678-9012-3461\",\n        \"dueDate\": \"2020-02-28T12:12:12Z\",\n        \"expectedDate\": \"2020-06-16T12:12:12Z\",\n        \"dueAmount\": \"5000.00\",\n        \"paidAmount\": \"5000.00\",\n        \"totalAmount\": \"10000.00\",\n        \"currencyCode\": \"USD\",\n        \"referenceNumber\": \"125-invoice-number\",\n        \"issueDate\": \"2019-12-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3337\",\n          \"name\": \"Jeff Beck\",\n          \"type\": \"Customer\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"aa54f12y-bb31-463a-802f-65a7eff70536\",\n          \"name\": \"Accounts Receivable\",\n          \"category\": \"Asset\"\n        }],\n        \"status\": \"PartiallyPaid\"\n      }, {\n        \"id\": \"1234-5678-9012-3462\",\n        \"dueDate\": \"2019-12-21T12:12:12Z\",\n        \"expectedDate\": \"2020-07-17T12:12:12Z\",\n        \"dueAmount\": \"0\",\n        \"paidAmount\": \"10000.00\",\n        \"totalAmount\": \"10000.00\",\n        \"currencyCode\": \"RUB\",\n        \"referenceNumber\": \"124-invoice-number\",\n        \"issueDate\": \"2019-11-10T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3338\",\n          \"name\": \"Boris Ryzhyi\",\n          \"type\": \"Customer\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"h1t45dre-bb31-463a-802f-65a7eff70536\",\n          \"name\": \"Accounts Receivable\",\n          \"category\": \"Asset\"\n        }],\n        \"status\": \"Paid\"\n      }, {\n        \"id\": \"1234-5678-9012-3463\",\n        \"dueDate\": \"2020-01-19T12:12:12Z\",\n        \"expectedDate\": \"2020-08-18T12:12:12Z\",\n        \"dueAmount\": \"120000.00\",\n        \"paidAmount\": \"0.00\",\n        \"totalAmount\": \"120000.00\",\n        \"currencyCode\": \"CAD\",\n        \"referenceNumber\": \"125-invoice-number\",\n        \"issueDate\": \"2019-11-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3339\",\n          \"name\": \"Emily Dickinson\",\n          \"type\": \"Customer\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"11bg3rp7-bb31-463a-802f-65a7ef1htr56\",\n          \"name\": \"Sales\",\n          \"category\": \"Income\"\n        }],\n        \"status\": \"Submitted\"\n      }, {\n        \"id\": \"1234-5678-9012-3464\",\n        \"dueDate\": \"2019-12-26T12:12:12Z\",\n        \"expectedDate\": \"2020-09-19T12:12:12Z\",\n        \"dueAmount\": \"10000.00\",\n        \"paidAmount\": \"0.00\",\n        \"totalAmount\": \"10000.00\",\n        \"currencyCode\": \"EUR\",\n        \"referenceNumber\": \"124-invoice-number\",\n        \"issueDate\": \"2019-10-15T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4443-3340\",\n          \"name\": \"Mary Jane\",\n          \"type\": \"Customer\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"aa5gpm67-bb31-463a-802f-65a7ef1ht1gt\",\n          \"name\": \"Sales\",\n          \"category\": \"Income\"\n        }, {\n          \"id\": \"ba784pt1-bb31-463a-802f-65a7ef1htr56\",\n          \"name\": \"Unknown\",\n          \"category\": \"Uncategorised\"\n        }],\n        \"status\": \"PartiallyPaid\"\n      }, {\n        \"id\": \"1234-5678-9012-3465\",\n        \"dueDate\": \"2019-11-30T12:12:12Z\",\n        \"expectedDate\": \"2020-10-20T12:12:12Z\",\n        \"dueAmount\": \"20020.00\",\n        \"paidAmount\": \"0.00\",\n        \"totalAmount\": \"20020.00\",\n        \"currencyCode\": \"USD\",\n        \"referenceNumber\": \"123-invoice-number\",\n        \"issueDate\": \"2019-10-20T12:12:12Z\",\n        \"counterparty\": {\n          \"id\": \"1234-4444-4444-3341\",\n          \"name\": \"William Yeats\",\n          \"type\": \"Customer\"\n        },\n        \"chartOfAccounts\": [{\n          \"id\": \"ee79mn61-bb31-463a-802f-65a7ef1htr56\",\n          \"name\": \"Sales\",\n          \"category\": \"Income\"\n        }],\n        \"status\": \"Draft\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/receivables/{receivableId}/expected-date\",\n  method: \"PUT\",\n  responses: [{\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\n\nclass SmeHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new CashFlowConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  getAccountingAuthorization(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/sme/accounting-authorization`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getAccountingAuthorizationUrl() {\n    return `${this.configuration.basePath}/client-api/v1/sme/accounting-authorization`;\n  }\n\n  getSme(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/sme`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getSmeUrl() {\n    return `${this.configuration.basePath}/client-api/v1/sme`;\n  }\n\n  postSme(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _presentationCreateSmeRequest = requestParameters[\"presentationCreateSmeRequest\"];\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v1/sme`, _presentationCreateSmeRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postSmeUrl(requestParameters) {\n    const _presentationCreateSmeRequest = requestParameters[\"presentationCreateSmeRequest\"];\n    return `${this.configuration.basePath}/client-api/v1/sme`;\n  }\n\n}\n\nSmeHttpService.ɵfac = function SmeHttpService_Factory(t) {\n  return new (t || SmeHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(CASH_FLOW_BASE_PATH, 8), i0.ɵɵinject(CashFlowConfiguration, 8));\n};\n\nSmeHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SmeHttpService,\n  factory: SmeHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SmeHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [CASH_FLOW_BASE_PATH]\n      }]\n    }, {\n      type: CashFlowConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst SmeHttpServiceGetAccountingAuthorizationMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/sme/accounting-authorization\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"type\": \"OAuth\",\n      \"authorizationUrl\": \"https://authorization.url\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst SmeHttpServiceGetSmeMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/sme\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"name\": \"Test SME\",\n      \"accountingPlatformId\": \"quickbooks\",\n      \"accountingAuthorizationStatus\": \"Authorized\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst SmeHttpServicePostSmeMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/sme\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"name\": \"Test SME\",\n      \"accountingPlatformId\": \"quickbooks\",\n      \"accountingAuthorizationStatus\": \"Authorized\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"accountingPlatformId\": \"accountingPlatformId\",\n      \"name\": \"name\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst SmeHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/sme/accounting-authorization\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"type\": \"OAuth\",\n      \"authorizationUrl\": \"https://authorization.url\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/sme\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"name\": \"Test SME\",\n      \"accountingPlatformId\": \"quickbooks\",\n      \"accountingAuthorizationStatus\": \"Authorized\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/sme\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"name\": \"Test SME\",\n      \"accountingPlatformId\": \"quickbooks\",\n      \"accountingAuthorizationStatus\": \"Authorized\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"accountingPlatformId\": \"accountingPlatformId\",\n      \"name\": \"name\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nexport { AccountingPlatformsHttpService, AccountingPlatformsHttpServiceGetAccountingPlatformsMocksProvider, AccountingPlatformsHttpServiceMocksProvider, CASH_FLOW_BASE_PATH, COLLECTION_FORMATS, CONFIG_TOKEN, CashFlowApiModule, CashFlowConfiguration, ChartOfAccountsHttpService, ChartOfAccountsHttpServiceGetChartOfAccountsMocksProvider, ChartOfAccountsHttpServiceMocksProvider, DefaultCurrencyHttpService, DefaultCurrencyHttpServiceGetDefaultCurrencyMocksProvider, DefaultCurrencyHttpServiceMocksProvider, ForecastConfigurationsHttpService, ForecastConfigurationsHttpServiceGetForecastConfigurationByIdMocksProvider, ForecastConfigurationsHttpServiceGetForecastConfigurationsMocksProvider, ForecastConfigurationsHttpServiceMocksProvider, ForecastConfigurationsHttpServicePostForecastConfigurationsMocksProvider, ForecastConfigurationsHttpServicePutForecastConfigurationByIdMocksProvider, ForecastsHttpService, ForecastsHttpServiceGetForecastByIdMocksProvider, ForecastsHttpServiceGetForecastsMocksProvider, ForecastsHttpServiceMocksProvider, PayablesHttpService, PayablesHttpServiceGetPayableByIdMocksProvider, PayablesHttpServiceGetPayablesMocksProvider, PayablesHttpServiceMocksProvider, PayablesHttpServicePutExpectedDateByPayableIdMocksProvider, PresentationAccountCategory, PresentationAuthorizationStatus, PresentationCounterpartyType, PresentationPayableStatus, PresentationReceivableStatus, ReceivablesHttpService, ReceivablesHttpServiceGetReceivableByIdMocksProvider, ReceivablesHttpServiceGetReceivablesMocksProvider, ReceivablesHttpServiceMocksProvider, ReceivablesHttpServicePutExpectedDateByReceivableIdMocksProvider, SmeHttpService, SmeHttpServiceGetAccountingAuthorizationMocksProvider, SmeHttpServiceGetSmeMocksProvider, SmeHttpServiceMocksProvider, SmeHttpServicePostSmeMocksProvider };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/cashflow-http-ang/fesm2015/backbase-cashflow-http-ang.js"],"names":["i0","InjectionToken","NgModule","Optional","SkipSelf","Injectable","Inject","i1","HttpHeaders","HttpParams","i2","createMocks","PresentationAccountCategory","Asset","Expense","Income","Liability","Equity","Uncategorised","PresentationAuthorizationStatus","PendingInitialAuth","Authorized","Deauthorized","PresentationCounterpartyType","Customer","Supplier","PresentationPayableStatus","Draft","Open","PartiallyPaid","Paid","Unknown","PresentationReceivableStatus","Submitted","CASH_FLOW_BASE_PATH","COLLECTION_FORMATS","CashFlowConfiguration","constructor","configurationParameters","apiKeys","username","password","accessToken","basePath","withCredentials","encoder","credentials","selectHeaderContentType","contentTypes","length","undefined","type","find","x","isJsonMime","selectHeaderAccept","accepts","mime","jsonMime","RegExp","test","toLowerCase","lookupCredential","key","value","CONFIG_TOKEN","CashFlowApiModule","parentModule","http","dataModulesManager","config","Error","setModuleConfig","apiRoot","servicePath","headers","forRoot","configurationFactory","ngModule","providers","provide","useFactory","ɵfac","HttpClient","DataModulesManager","ɵmod","ɵinj","args","imports","declarations","exports","decorators","CustomHttpParameterCodec","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeURIComponent","decodeValue","AccountingPlatformsHttpService","httpClient","configuration","defaultHeaders","addToHttpParams","httpParams","Date","addToHttpParamsRecursive","Array","isArray","forEach","elem","append","toISOString","substr","Object","keys","getAccountingPlatforms","observe","reportProgress","options","httpHeaderAcceptSelected","httpHeaderAccept","httpHeaderAccepts","set","responseType","startsWith","get","getAccountingPlatformsUrl","ɵprov","providedIn","AccountingPlatformsHttpServiceGetAccountingPlatformsMocksProvider","urlPattern","method","responses","status","body","AccountingPlatformsHttpServiceMocksProvider","ChartOfAccountsHttpService","getChartOfAccounts","getChartOfAccountsUrl","ChartOfAccountsHttpServiceGetChartOfAccountsMocksProvider","ChartOfAccountsHttpServiceMocksProvider","DefaultCurrencyHttpService","getDefaultCurrency","getDefaultCurrencyUrl","DefaultCurrencyHttpServiceGetDefaultCurrencyMocksProvider","DefaultCurrencyHttpServiceMocksProvider","ForecastConfigurationsHttpService","getForecastConfigurationById","requestParameters","_configurationId","String","getForecastConfigurationByIdUrl","getForecastConfigurations","getForecastConfigurationsUrl","postForecastConfigurations","_presentationForecastConfiguration","consumes","httpContentTypeSelected","post","postForecastConfigurationsUrl","putForecastConfigurationById","put","putForecastConfigurationByIdUrl","ForecastConfigurationsHttpServiceGetForecastConfigurationByIdMocksProvider","ForecastConfigurationsHttpServiceGetForecastConfigurationsMocksProvider","ForecastConfigurationsHttpServicePostForecastConfigurationsMocksProvider","ForecastConfigurationsHttpServicePutForecastConfigurationByIdMocksProvider","ForecastConfigurationsHttpServiceMocksProvider","ForecastsHttpService","getForecastById","_forecastId","_cadenceType","_projectionAmount","_historyAmount","queryParameters","params","getForecastByIdUrl","queryString","toString","getForecasts","getForecastsUrl","ForecastsHttpServiceGetForecastByIdMocksProvider","ForecastsHttpServiceGetForecastsMocksProvider","ForecastsHttpServiceMocksProvider","PayablesHttpService","getPayableById","_payableId","getPayableByIdUrl","getPayables","_query","_statuses","_sort","_from","_size","element","getPayablesUrl","putExpectedDateByPayableId","_putPaymentRequestExpectedDateRequest","putExpectedDateByPayableIdUrl","PayablesHttpServiceGetPayableByIdMocksProvider","PayablesHttpServiceGetPayablesMocksProvider","PayablesHttpServicePutExpectedDateByPayableIdMocksProvider","PayablesHttpServiceMocksProvider","ReceivablesHttpService","getReceivableById","_receivableId","getReceivableByIdUrl","getReceivables","getReceivablesUrl","putExpectedDateByReceivableId","putExpectedDateByReceivableIdUrl","ReceivablesHttpServiceGetReceivableByIdMocksProvider","ReceivablesHttpServiceGetReceivablesMocksProvider","ReceivablesHttpServicePutExpectedDateByReceivableIdMocksProvider","ReceivablesHttpServiceMocksProvider","SmeHttpService","getAccountingAuthorization","getAccountingAuthorizationUrl","getSme","getSmeUrl","postSme","_presentationCreateSmeRequest","postSmeUrl","SmeHttpServiceGetAccountingAuthorizationMocksProvider","SmeHttpServiceGetSmeMocksProvider","SmeHttpServicePostSmeMocksProvider","SmeHttpServiceMocksProvider"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\n\nconst PresentationAccountCategory = {\n    Asset: 'Asset',\n    Expense: 'Expense',\n    Income: 'Income',\n    Liability: 'Liability',\n    Equity: 'Equity',\n    Uncategorised: 'Uncategorised'\n};\n\nconst PresentationAuthorizationStatus = {\n    PendingInitialAuth: 'PendingInitialAuth',\n    Authorized: 'Authorized',\n    Deauthorized: 'Deauthorized'\n};\n\nconst PresentationCounterpartyType = {\n    Customer: 'Customer',\n    Supplier: 'Supplier'\n};\n\nconst PresentationPayableStatus = {\n    Draft: 'Draft',\n    Open: 'Open',\n    PartiallyPaid: 'PartiallyPaid',\n    Paid: 'Paid',\n    Unknown: 'Unknown'\n};\n\nconst PresentationReceivableStatus = {\n    Draft: 'Draft',\n    Submitted: 'Submitted',\n    PartiallyPaid: 'PartiallyPaid',\n    Paid: 'Paid'\n};\n\nconst CASH_FLOW_BASE_PATH = new InjectionToken('CASH_FLOW_BASE_PATH');\nconst COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n};\n\nclass CashFlowConfiguration {\n    constructor(configurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n    selectHeaderContentType(contentTypes) {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n        const type = contentTypes.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n    selectHeaderAccept(accepts) {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n        const type = accepts.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n    lookupCredential(key) {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\nconst CONFIG_TOKEN = new InjectionToken('api-data-module CashFlowConfiguration');\n\nclass CashFlowApiModule {\n    constructor(parentModule, http, dataModulesManager, config) {\n        if (parentModule) {\n            throw new Error('CashFlowApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n                'See also https://github.com/angular/angular/issues/20575');\n        }\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n    static forRoot(configurationFactory) {\n        return {\n            ngModule: CashFlowApiModule,\n            providers: [{ provide: CashFlowConfiguration, useFactory: configurationFactory }]\n        };\n    }\n}\nCashFlowApiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: CashFlowApiModule, deps: [{ token: CashFlowApiModule, optional: true, skipSelf: true }, { token: i1.HttpClient, optional: true }, { token: i2.DataModulesManager, optional: true }, { token: CashFlowConfiguration }], target: i0.ɵɵFactoryTarget.NgModule });\nCashFlowApiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: CashFlowApiModule });\nCashFlowApiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: CashFlowApiModule, providers: [], imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: CashFlowApiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [],\n                    exports: [],\n                    providers: []\n                }]\n        }], ctorParameters: function () { return [{ type: CashFlowApiModule, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DataModulesManager, decorators: [{\n                    type: Optional\n                }] }, { type: CashFlowConfiguration }]; } });\n\nclass CustomHttpParameterCodec {\n    encodeKey(k) {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v) {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k) {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v) {\n        return decodeURIComponent(v);\n    }\n}\n\nclass AccountingPlatformsHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new CashFlowConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    getAccountingPlatforms(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/accounting-platforms`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getAccountingPlatformsUrl() {\n        return `${this.configuration.basePath}/client-api/v1/accounting-platforms`;\n    }\n}\nAccountingPlatformsHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: AccountingPlatformsHttpService, deps: [{ token: i1.HttpClient }, { token: CASH_FLOW_BASE_PATH, optional: true }, { token: CashFlowConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nAccountingPlatformsHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: AccountingPlatformsHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: AccountingPlatformsHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CASH_FLOW_BASE_PATH]\n                }] }, { type: CashFlowConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst AccountingPlatformsHttpServiceGetAccountingPlatformsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/accounting-platforms\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"id\": \"quickbooks\",\n                        \"logoUrl\": \"https://quickbooks.intuit.com/content/dam/intuit/quickbooks/common/qb_thumb.png\",\n                        \"name\": \"QuickBooks\"\n                    }, {\n                        \"id\": \"xero\",\n                        \"logoUrl\": \"https://www.xero.com/etc/designs/xero-cms/clientlib/assets/img/logo/logo-xero-blue.svg\",\n                        \"name\": \"Xero\"\n                    }]\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst AccountingPlatformsHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v1/accounting-platforms\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"id\": \"quickbooks\",\n                        \"logoUrl\": \"https://quickbooks.intuit.com/content/dam/intuit/quickbooks/common/qb_thumb.png\",\n                        \"name\": \"QuickBooks\"\n                    }, {\n                        \"id\": \"xero\",\n                        \"logoUrl\": \"https://www.xero.com/etc/designs/xero-cms/clientlib/assets/img/logo/logo-xero-blue.svg\",\n                        \"name\": \"Xero\"\n                    }]\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n]);\n\nclass ChartOfAccountsHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new CashFlowConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    getChartOfAccounts(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/chart-of-accounts`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getChartOfAccountsUrl() {\n        return `${this.configuration.basePath}/client-api/v1/chart-of-accounts`;\n    }\n}\nChartOfAccountsHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ChartOfAccountsHttpService, deps: [{ token: i1.HttpClient }, { token: CASH_FLOW_BASE_PATH, optional: true }, { token: CashFlowConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nChartOfAccountsHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ChartOfAccountsHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ChartOfAccountsHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CASH_FLOW_BASE_PATH]\n                }] }, { type: CashFlowConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst ChartOfAccountsHttpServiceGetChartOfAccountsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/chart-of-accounts\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"syncDatetime\": \"2020-11-05T12:06:43Z\",\n                    \"chartOfAccounts\": [{\n                            \"id\": \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\",\n                            \"name\": \"Accounts Receivable\",\n                            \"nominalCode\": \"84\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"77b9ba20-924e-4be8-8077-87278297d915\",\n                            \"name\": \"Checking\",\n                            \"nominalCode\": \"35\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"7e776b86-151e-4a4a-a60a-f36e682e2a50\",\n                            \"name\": \"Depreciation\",\n                            \"nominalCode\": \"39\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\",\n                            \"name\": \"Inventory Asset\",\n                            \"nominalCode\": \"81\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"271c798c-031c-4cfc-828c-d40e37fbb003\",\n                            \"name\": \"Original Cost\",\n                            \"nominalCode\": \"38\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\",\n                            \"name\": \"Prepaid Expenses\",\n                            \"nominalCode\": \"3\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"497559c7-60bf-476c-8b16-09b8952a9722\",\n                            \"name\": \"Savings\",\n                            \"nominalCode\": \"36\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"9e68b349-72af-4cf3-8ea8-abd76f31064e\",\n                            \"name\": \"Truck\",\n                            \"nominalCode\": \"37\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\",\n                            \"name\": \"Uncategorized Asset\",\n                            \"nominalCode\": \"32\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\",\n                            \"name\": \"Undeposited Funds\",\n                            \"nominalCode\": \"4\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"6b718262-6099-4f32-9795-7aae2a25eac7\",\n                            \"name\": \"Opening Balance Equity\",\n                            \"nominalCode\": \"34\",\n                            \"category\": \"Equity\"\n                        }, {\n                            \"id\": \"22a92103-3ee1-41fa-9722-1fc209caa2c2\",\n                            \"name\": \"Retained Earnings\",\n                            \"nominalCode\": \"2\",\n                            \"category\": \"Equity\"\n                        }, {\n                            \"id\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n                            \"name\": \"Accounting\",\n                            \"nominalCode\": \"69\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"d4721d9a-d77b-4361-9807-09331ffcb6af\",\n                            \"name\": \"Advertising\",\n                            \"nominalCode\": \"7\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\",\n                            \"name\": \"Automobile\",\n                            \"nominalCode\": \"55\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"771aad7c-70d2-4f7e-9309-0ab33e11e589\",\n                            \"name\": \"Bank Charges\",\n                            \"nominalCode\": \"8\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"3d9747ce-afbf-4ff1-b23d-559206c5998c\",\n                            \"name\": \"Bookkeeper\",\n                            \"nominalCode\": \"70\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\",\n                            \"name\": \"Building Repairs\",\n                            \"nominalCode\": \"73\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\",\n                            \"name\": \"Commissions & fees\",\n                            \"nominalCode\": \"9\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"4339c2ee-4040-4996-acf5-810b6c8eb337\",\n                            \"name\": \"Computer Repairs\",\n                            \"nominalCode\": \"74\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\",\n                            \"name\": \"Cost of Goods Sold\",\n                            \"nominalCode\": \"80\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"f421c967-88eb-43c1-b19e-aa03f15f67ce\",\n                            \"name\": \"Cost of Labor\",\n                            \"nominalCode\": \"59\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"1137cd94-52b1-45b5-a573-1723c89a35f2\",\n                            \"name\": \"Decks and Patios\",\n                            \"nominalCode\": \"64\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\",\n                            \"name\": \"Depreciation\",\n                            \"nominalCode\": \"40\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ccfb434a-b289-441c-99a2-30e05a572057\",\n                            \"name\": \"Disposal Fees\",\n                            \"nominalCode\": \"28\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"9c400ca0-009e-475a-abc6-d5a76154aa0a\",\n                            \"name\": \"Dues & Subscriptions\",\n                            \"nominalCode\": \"10\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"74d34736-f4a0-4638-9465-4f5254ddb1b5\",\n                            \"name\": \"Equipment Rental\",\n                            \"nominalCode\": \"29\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\",\n                            \"name\": \"Equipment Rental\",\n                            \"nominalCode\": \"62\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"0d9d51d4-b347-480b-88f3-6107f0ba343f\",\n                            \"name\": \"Equipment Repairs\",\n                            \"nominalCode\": \"75\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\",\n                            \"name\": \"Fountain and Garden Lighting\",\n                            \"nominalCode\": \"65\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"7877e117-f0ac-4142-841f-84e062f77128\",\n                            \"name\": \"Fuel\",\n                            \"nominalCode\": \"56\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"225f6f2a-445e-48b3-88b5-e3f9daae059a\",\n                            \"name\": \"Gas and Electric\",\n                            \"nominalCode\": \"76\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\",\n                            \"name\": \"Installation\",\n                            \"nominalCode\": \"60\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\",\n                            \"name\": \"Insurance\",\n                            \"nominalCode\": \"11\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\",\n                            \"name\": \"Job Expenses\",\n                            \"nominalCode\": \"58\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ecc43720-0fb4-4b20-9561-73f78021a3fa\",\n                            \"name\": \"Job Materials\",\n                            \"nominalCode\": \"63\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"4a959dfe-428f-48c2-88f6-efc155f2a19c\",\n                            \"name\": \"Lawyer\",\n                            \"nominalCode\": \"71\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n                            \"name\": \"Legal & Professional Fees\",\n                            \"nominalCode\": \"12\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"6333a502-088a-4314-a8d1-05e5cf61e023\",\n                            \"name\": \"Maintenance and Repair\",\n                            \"nominalCode\": \"72\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\",\n                            \"name\": \"Maintenance and Repairs\",\n                            \"nominalCode\": \"61\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\",\n                            \"name\": \"Meals and Entertainment\",\n                            \"nominalCode\": \"13\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"b2e758c5-92f5-4f52-b915-cc8ea0357868\",\n                            \"name\": \"Miscellaneous\",\n                            \"nominalCode\": \"14\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"1e870df7-7255-41e2-8220-e24c301af038\",\n                            \"name\": \"Office Expenses\",\n                            \"nominalCode\": \"15\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\",\n                            \"name\": \"Penalties & Settlements\",\n                            \"nominalCode\": \"27\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ba81920a-23b7-4634-946f-47f0067d9e1a\",\n                            \"name\": \"Permits\",\n                            \"nominalCode\": \"68\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\",\n                            \"name\": \"Plants and Soil\",\n                            \"nominalCode\": \"66\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n                            \"name\": \"Promotional\",\n                            \"nominalCode\": \"16\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\",\n                            \"name\": \"Purchases\",\n                            \"nominalCode\": \"78\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"3b353731-f571-4854-8240-0d49cc81fecc\",\n                            \"name\": \"Rent or Lease\",\n                            \"nominalCode\": \"17\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"8e03d0a6-f172-40bd-adf1-3834e9734267\",\n                            \"name\": \"Repair & Maintenance (deleted)\",\n                            \"nominalCode\": \"18\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"bc366bf7-30db-4856-9f65-06ffc01596f5\",\n                            \"name\": \"Sprinklers and Drip Systems\",\n                            \"nominalCode\": \"67\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"c9205c03-ea6a-48a0-be07-733f894db4d8\",\n                            \"name\": \"Stationery & Printing\",\n                            \"nominalCode\": \"19\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"d61afb14-0da1-43ba-935e-4b4a08a012fe\",\n                            \"name\": \"Supplies\",\n                            \"nominalCode\": \"20\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\",\n                            \"name\": \"Taxes & Licenses\",\n                            \"nominalCode\": \"21\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"acf2e2dd-cc98-4c16-a705-d0010b593083\",\n                            \"name\": \"Telephone\",\n                            \"nominalCode\": \"77\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"0e0f7942-612f-481c-8166-ea33fe398a74\",\n                            \"name\": \"Travel\",\n                            \"nominalCode\": \"22\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\",\n                            \"name\": \"Travel Meals\",\n                            \"nominalCode\": \"23\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\",\n                            \"name\": \"Unapplied Cash Bill Payment Expense\",\n                            \"nominalCode\": \"88\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\",\n                            \"name\": \"Uncategorized Expense\",\n                            \"nominalCode\": \"31\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ca5ea429-6cc0-4870-8513-a4e696b312d4\",\n                            \"name\": \"Utilities\",\n                            \"nominalCode\": \"24\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"a3ad5046-6a41-4b55-9072-66e5872fba62\",\n                            \"name\": \"Workers Compensation\",\n                            \"nominalCode\": \"57\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"773e43aa-8505-48b9-94ef-d7bc5786609a\",\n                            \"name\": \"Billable Expense Income\",\n                            \"nominalCode\": \"85\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\",\n                            \"name\": \"Decks and Patios\",\n                            \"nominalCode\": \"47\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n                            \"name\": \"Design income\",\n                            \"nominalCode\": \"82\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"587bc9dd-553d-4b3d-88d8-5256eedfb499\",\n                            \"name\": \"Discounts given\",\n                            \"nominalCode\": \"86\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"ef961774-568d-4746-a790-fa8e22907db5\",\n                            \"name\": \"Fees Billed\",\n                            \"nominalCode\": \"5\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n                            \"name\": \"Fountains and Garden Lighting\",\n                            \"nominalCode\": \"48\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"442e062b-8585-4f14-9763-8990c9fd6087\",\n                            \"name\": \"Installation\",\n                            \"nominalCode\": \"52\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"81860ebb-997f-47b6-a1ff-30988af2520d\",\n                            \"name\": \"Interest Earned\",\n                            \"nominalCode\": \"25\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"1bb12d54-9d81-4b63-b1c1-af419e47a687\",\n                            \"name\": \"Job Materials\",\n                            \"nominalCode\": \"46\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\",\n                            \"name\": \"Labor\",\n                            \"nominalCode\": \"51\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\",\n                            \"name\": \"Landscaping Services\",\n                            \"nominalCode\": \"45\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\",\n                            \"name\": \"Maintenance and Repair\",\n                            \"nominalCode\": \"53\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\",\n                            \"name\": \"Other Income\",\n                            \"nominalCode\": \"83\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"45b174a0-45be-4134-95ee-27b751f29b6e\",\n                            \"name\": \"Other Portfolio Income\",\n                            \"nominalCode\": \"26\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"de6e8ce5-90fc-4379-9972-951b94897fcc\",\n                            \"name\": \"Pest Control Services\",\n                            \"nominalCode\": \"54\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\",\n                            \"name\": \"Plants and Soil\",\n                            \"nominalCode\": \"49\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"700def49-ca84-4fa5-83d3-3de9cf393200\",\n                            \"name\": \"Refunds-Allowances\",\n                            \"nominalCode\": \"6\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"b15090b5-bcea-4655-a7aa-861e6084ca8b\",\n                            \"name\": \"Sales of Product Income\",\n                            \"nominalCode\": \"79\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\",\n                            \"name\": \"Services\",\n                            \"nominalCode\": \"1\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\",\n                            \"name\": \"Sprinklers and Drip Systems\",\n                            \"nominalCode\": \"50\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"c9c3eff9-0968-4d1f-b321-c2499c079014\",\n                            \"name\": \"Unapplied Cash Payment Income\",\n                            \"nominalCode\": \"87\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\",\n                            \"name\": \"Uncategorized Income\",\n                            \"nominalCode\": \"30\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"a4163fda-a2c0-4d12-93cb-e016f049fee6\",\n                            \"name\": \"Accounts Payable\",\n                            \"nominalCode\": \"33\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"e2521f1a-ab18-483f-89d9-ea0434f00989\",\n                            \"name\": \"Arizona Dept. of Revenue Payable\",\n                            \"nominalCode\": \"89\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\",\n                            \"name\": \"Board of Equalization Payable\",\n                            \"nominalCode\": \"90\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"26dfb943-b6fb-484b-82b5-85eca47fe07c\",\n                            \"name\": \"Loan Payable\",\n                            \"nominalCode\": \"43\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"109b5a2f-8b10-4953-a388-2934f4f60a6e\",\n                            \"name\": \"Mastercard\",\n                            \"nominalCode\": \"41\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"e11719b8-0ec3-4bd7-943a-72f575ef7890\",\n                            \"name\": \"Notes Payable\",\n                            \"nominalCode\": \"44\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"484ef212-372c-41bc-9a0b-9a3b64c78218\",\n                            \"name\": \"Visa\",\n                            \"nominalCode\": \"42\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"da439b63-4dc2-45c4-9cf8-d4984413403e\",\n                            \"name\": \"Unknown\",\n                            \"description\": \"Amounts that are not attributed to any specific account.\",\n                            \"category\": \"Uncategorised\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst ChartOfAccountsHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v1/chart-of-accounts\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"syncDatetime\": \"2020-11-05T12:06:43Z\",\n                    \"chartOfAccounts\": [{\n                            \"id\": \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\",\n                            \"name\": \"Accounts Receivable\",\n                            \"nominalCode\": \"84\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"77b9ba20-924e-4be8-8077-87278297d915\",\n                            \"name\": \"Checking\",\n                            \"nominalCode\": \"35\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"7e776b86-151e-4a4a-a60a-f36e682e2a50\",\n                            \"name\": \"Depreciation\",\n                            \"nominalCode\": \"39\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\",\n                            \"name\": \"Inventory Asset\",\n                            \"nominalCode\": \"81\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"271c798c-031c-4cfc-828c-d40e37fbb003\",\n                            \"name\": \"Original Cost\",\n                            \"nominalCode\": \"38\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\",\n                            \"name\": \"Prepaid Expenses\",\n                            \"nominalCode\": \"3\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"497559c7-60bf-476c-8b16-09b8952a9722\",\n                            \"name\": \"Savings\",\n                            \"nominalCode\": \"36\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"9e68b349-72af-4cf3-8ea8-abd76f31064e\",\n                            \"name\": \"Truck\",\n                            \"nominalCode\": \"37\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\",\n                            \"name\": \"Uncategorized Asset\",\n                            \"nominalCode\": \"32\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\",\n                            \"name\": \"Undeposited Funds\",\n                            \"nominalCode\": \"4\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"6b718262-6099-4f32-9795-7aae2a25eac7\",\n                            \"name\": \"Opening Balance Equity\",\n                            \"nominalCode\": \"34\",\n                            \"category\": \"Equity\"\n                        }, {\n                            \"id\": \"22a92103-3ee1-41fa-9722-1fc209caa2c2\",\n                            \"name\": \"Retained Earnings\",\n                            \"nominalCode\": \"2\",\n                            \"category\": \"Equity\"\n                        }, {\n                            \"id\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n                            \"name\": \"Accounting\",\n                            \"nominalCode\": \"69\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"d4721d9a-d77b-4361-9807-09331ffcb6af\",\n                            \"name\": \"Advertising\",\n                            \"nominalCode\": \"7\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\",\n                            \"name\": \"Automobile\",\n                            \"nominalCode\": \"55\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"771aad7c-70d2-4f7e-9309-0ab33e11e589\",\n                            \"name\": \"Bank Charges\",\n                            \"nominalCode\": \"8\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"3d9747ce-afbf-4ff1-b23d-559206c5998c\",\n                            \"name\": \"Bookkeeper\",\n                            \"nominalCode\": \"70\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\",\n                            \"name\": \"Building Repairs\",\n                            \"nominalCode\": \"73\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\",\n                            \"name\": \"Commissions & fees\",\n                            \"nominalCode\": \"9\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"4339c2ee-4040-4996-acf5-810b6c8eb337\",\n                            \"name\": \"Computer Repairs\",\n                            \"nominalCode\": \"74\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\",\n                            \"name\": \"Cost of Goods Sold\",\n                            \"nominalCode\": \"80\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"f421c967-88eb-43c1-b19e-aa03f15f67ce\",\n                            \"name\": \"Cost of Labor\",\n                            \"nominalCode\": \"59\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"1137cd94-52b1-45b5-a573-1723c89a35f2\",\n                            \"name\": \"Decks and Patios\",\n                            \"nominalCode\": \"64\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\",\n                            \"name\": \"Depreciation\",\n                            \"nominalCode\": \"40\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ccfb434a-b289-441c-99a2-30e05a572057\",\n                            \"name\": \"Disposal Fees\",\n                            \"nominalCode\": \"28\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"9c400ca0-009e-475a-abc6-d5a76154aa0a\",\n                            \"name\": \"Dues & Subscriptions\",\n                            \"nominalCode\": \"10\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"74d34736-f4a0-4638-9465-4f5254ddb1b5\",\n                            \"name\": \"Equipment Rental\",\n                            \"nominalCode\": \"29\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\",\n                            \"name\": \"Equipment Rental\",\n                            \"nominalCode\": \"62\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"0d9d51d4-b347-480b-88f3-6107f0ba343f\",\n                            \"name\": \"Equipment Repairs\",\n                            \"nominalCode\": \"75\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\",\n                            \"name\": \"Fountain and Garden Lighting\",\n                            \"nominalCode\": \"65\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"7877e117-f0ac-4142-841f-84e062f77128\",\n                            \"name\": \"Fuel\",\n                            \"nominalCode\": \"56\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"225f6f2a-445e-48b3-88b5-e3f9daae059a\",\n                            \"name\": \"Gas and Electric\",\n                            \"nominalCode\": \"76\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\",\n                            \"name\": \"Installation\",\n                            \"nominalCode\": \"60\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\",\n                            \"name\": \"Insurance\",\n                            \"nominalCode\": \"11\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\",\n                            \"name\": \"Job Expenses\",\n                            \"nominalCode\": \"58\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ecc43720-0fb4-4b20-9561-73f78021a3fa\",\n                            \"name\": \"Job Materials\",\n                            \"nominalCode\": \"63\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"4a959dfe-428f-48c2-88f6-efc155f2a19c\",\n                            \"name\": \"Lawyer\",\n                            \"nominalCode\": \"71\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n                            \"name\": \"Legal & Professional Fees\",\n                            \"nominalCode\": \"12\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"6333a502-088a-4314-a8d1-05e5cf61e023\",\n                            \"name\": \"Maintenance and Repair\",\n                            \"nominalCode\": \"72\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\",\n                            \"name\": \"Maintenance and Repairs\",\n                            \"nominalCode\": \"61\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\",\n                            \"name\": \"Meals and Entertainment\",\n                            \"nominalCode\": \"13\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"b2e758c5-92f5-4f52-b915-cc8ea0357868\",\n                            \"name\": \"Miscellaneous\",\n                            \"nominalCode\": \"14\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"1e870df7-7255-41e2-8220-e24c301af038\",\n                            \"name\": \"Office Expenses\",\n                            \"nominalCode\": \"15\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\",\n                            \"name\": \"Penalties & Settlements\",\n                            \"nominalCode\": \"27\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ba81920a-23b7-4634-946f-47f0067d9e1a\",\n                            \"name\": \"Permits\",\n                            \"nominalCode\": \"68\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\",\n                            \"name\": \"Plants and Soil\",\n                            \"nominalCode\": \"66\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n                            \"name\": \"Promotional\",\n                            \"nominalCode\": \"16\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\",\n                            \"name\": \"Purchases\",\n                            \"nominalCode\": \"78\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"3b353731-f571-4854-8240-0d49cc81fecc\",\n                            \"name\": \"Rent or Lease\",\n                            \"nominalCode\": \"17\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"8e03d0a6-f172-40bd-adf1-3834e9734267\",\n                            \"name\": \"Repair & Maintenance (deleted)\",\n                            \"nominalCode\": \"18\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"bc366bf7-30db-4856-9f65-06ffc01596f5\",\n                            \"name\": \"Sprinklers and Drip Systems\",\n                            \"nominalCode\": \"67\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"c9205c03-ea6a-48a0-be07-733f894db4d8\",\n                            \"name\": \"Stationery & Printing\",\n                            \"nominalCode\": \"19\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"d61afb14-0da1-43ba-935e-4b4a08a012fe\",\n                            \"name\": \"Supplies\",\n                            \"nominalCode\": \"20\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\",\n                            \"name\": \"Taxes & Licenses\",\n                            \"nominalCode\": \"21\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"acf2e2dd-cc98-4c16-a705-d0010b593083\",\n                            \"name\": \"Telephone\",\n                            \"nominalCode\": \"77\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"0e0f7942-612f-481c-8166-ea33fe398a74\",\n                            \"name\": \"Travel\",\n                            \"nominalCode\": \"22\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\",\n                            \"name\": \"Travel Meals\",\n                            \"nominalCode\": \"23\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\",\n                            \"name\": \"Unapplied Cash Bill Payment Expense\",\n                            \"nominalCode\": \"88\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\",\n                            \"name\": \"Uncategorized Expense\",\n                            \"nominalCode\": \"31\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ca5ea429-6cc0-4870-8513-a4e696b312d4\",\n                            \"name\": \"Utilities\",\n                            \"nominalCode\": \"24\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"a3ad5046-6a41-4b55-9072-66e5872fba62\",\n                            \"name\": \"Workers Compensation\",\n                            \"nominalCode\": \"57\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"773e43aa-8505-48b9-94ef-d7bc5786609a\",\n                            \"name\": \"Billable Expense Income\",\n                            \"nominalCode\": \"85\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\",\n                            \"name\": \"Decks and Patios\",\n                            \"nominalCode\": \"47\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n                            \"name\": \"Design income\",\n                            \"nominalCode\": \"82\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"587bc9dd-553d-4b3d-88d8-5256eedfb499\",\n                            \"name\": \"Discounts given\",\n                            \"nominalCode\": \"86\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"ef961774-568d-4746-a790-fa8e22907db5\",\n                            \"name\": \"Fees Billed\",\n                            \"nominalCode\": \"5\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n                            \"name\": \"Fountains and Garden Lighting\",\n                            \"nominalCode\": \"48\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"442e062b-8585-4f14-9763-8990c9fd6087\",\n                            \"name\": \"Installation\",\n                            \"nominalCode\": \"52\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"81860ebb-997f-47b6-a1ff-30988af2520d\",\n                            \"name\": \"Interest Earned\",\n                            \"nominalCode\": \"25\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"1bb12d54-9d81-4b63-b1c1-af419e47a687\",\n                            \"name\": \"Job Materials\",\n                            \"nominalCode\": \"46\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\",\n                            \"name\": \"Labor\",\n                            \"nominalCode\": \"51\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\",\n                            \"name\": \"Landscaping Services\",\n                            \"nominalCode\": \"45\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\",\n                            \"name\": \"Maintenance and Repair\",\n                            \"nominalCode\": \"53\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\",\n                            \"name\": \"Other Income\",\n                            \"nominalCode\": \"83\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"45b174a0-45be-4134-95ee-27b751f29b6e\",\n                            \"name\": \"Other Portfolio Income\",\n                            \"nominalCode\": \"26\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"de6e8ce5-90fc-4379-9972-951b94897fcc\",\n                            \"name\": \"Pest Control Services\",\n                            \"nominalCode\": \"54\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\",\n                            \"name\": \"Plants and Soil\",\n                            \"nominalCode\": \"49\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"700def49-ca84-4fa5-83d3-3de9cf393200\",\n                            \"name\": \"Refunds-Allowances\",\n                            \"nominalCode\": \"6\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"b15090b5-bcea-4655-a7aa-861e6084ca8b\",\n                            \"name\": \"Sales of Product Income\",\n                            \"nominalCode\": \"79\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\",\n                            \"name\": \"Services\",\n                            \"nominalCode\": \"1\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\",\n                            \"name\": \"Sprinklers and Drip Systems\",\n                            \"nominalCode\": \"50\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"c9c3eff9-0968-4d1f-b321-c2499c079014\",\n                            \"name\": \"Unapplied Cash Payment Income\",\n                            \"nominalCode\": \"87\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\",\n                            \"name\": \"Uncategorized Income\",\n                            \"nominalCode\": \"30\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"a4163fda-a2c0-4d12-93cb-e016f049fee6\",\n                            \"name\": \"Accounts Payable\",\n                            \"nominalCode\": \"33\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"e2521f1a-ab18-483f-89d9-ea0434f00989\",\n                            \"name\": \"Arizona Dept. of Revenue Payable\",\n                            \"nominalCode\": \"89\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\",\n                            \"name\": \"Board of Equalization Payable\",\n                            \"nominalCode\": \"90\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"26dfb943-b6fb-484b-82b5-85eca47fe07c\",\n                            \"name\": \"Loan Payable\",\n                            \"nominalCode\": \"43\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"109b5a2f-8b10-4953-a388-2934f4f60a6e\",\n                            \"name\": \"Mastercard\",\n                            \"nominalCode\": \"41\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"e11719b8-0ec3-4bd7-943a-72f575ef7890\",\n                            \"name\": \"Notes Payable\",\n                            \"nominalCode\": \"44\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"484ef212-372c-41bc-9a0b-9a3b64c78218\",\n                            \"name\": \"Visa\",\n                            \"nominalCode\": \"42\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"da439b63-4dc2-45c4-9cf8-d4984413403e\",\n                            \"name\": \"Unknown\",\n                            \"description\": \"Amounts that are not attributed to any specific account.\",\n                            \"category\": \"Uncategorised\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n]);\n\nclass DefaultCurrencyHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new CashFlowConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    getDefaultCurrency(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/default-currency`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getDefaultCurrencyUrl() {\n        return `${this.configuration.basePath}/client-api/v1/default-currency`;\n    }\n}\nDefaultCurrencyHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DefaultCurrencyHttpService, deps: [{ token: i1.HttpClient }, { token: CASH_FLOW_BASE_PATH, optional: true }, { token: CashFlowConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nDefaultCurrencyHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DefaultCurrencyHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DefaultCurrencyHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CASH_FLOW_BASE_PATH]\n                }] }, { type: CashFlowConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst DefaultCurrencyHttpServiceGetDefaultCurrencyMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/default-currency\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"value\": \"USD\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst DefaultCurrencyHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v1/default-currency\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"value\": \"USD\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n]);\n\nclass ForecastConfigurationsHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new CashFlowConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    getForecastConfigurationById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _configurationId = requestParameters[\"configurationId\"];\n        if (_configurationId === null || _configurationId === undefined) {\n            throw new Error('Required parameter configurationId was null or undefined when calling getForecastConfigurationById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/forecast-configurations/${encodeURIComponent(String(_configurationId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getForecastConfigurationByIdUrl(requestParameters) {\n        const _configurationId = requestParameters[\"configurationId\"];\n        if (_configurationId === null || _configurationId === undefined) {\n            throw new Error('Required parameter configurationId was null or undefined when calling getForecastConfigurationById.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/forecast-configurations/${encodeURIComponent(String(_configurationId))}`;\n    }\n    getForecastConfigurations(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/forecast-configurations`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getForecastConfigurationsUrl() {\n        return `${this.configuration.basePath}/client-api/v1/forecast-configurations`;\n    }\n    postForecastConfigurations(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _presentationForecastConfiguration = requestParameters[\"presentationForecastConfiguration\"];\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v1/forecast-configurations`, _presentationForecastConfiguration, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postForecastConfigurationsUrl(requestParameters) {\n        const _presentationForecastConfiguration = requestParameters[\"presentationForecastConfiguration\"];\n        return `${this.configuration.basePath}/client-api/v1/forecast-configurations`;\n    }\n    putForecastConfigurationById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _configurationId = requestParameters[\"configurationId\"];\n        if (_configurationId === null || _configurationId === undefined) {\n            throw new Error('Required parameter configurationId was null or undefined when calling putForecastConfigurationById.');\n        }\n        const _presentationForecastConfiguration = requestParameters[\"presentationForecastConfiguration\"];\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v1/forecast-configurations/${encodeURIComponent(String(_configurationId))}`, _presentationForecastConfiguration, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putForecastConfigurationByIdUrl(requestParameters) {\n        const _configurationId = requestParameters[\"configurationId\"];\n        if (_configurationId === null || _configurationId === undefined) {\n            throw new Error('Required parameter configurationId was null or undefined when calling putForecastConfigurationById.');\n        }\n        const _presentationForecastConfiguration = requestParameters[\"presentationForecastConfiguration\"];\n        return `${this.configuration.basePath}/client-api/v1/forecast-configurations/${encodeURIComponent(String(_configurationId))}`;\n    }\n}\nForecastConfigurationsHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ForecastConfigurationsHttpService, deps: [{ token: i1.HttpClient }, { token: CASH_FLOW_BASE_PATH, optional: true }, { token: CashFlowConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nForecastConfigurationsHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ForecastConfigurationsHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ForecastConfigurationsHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CASH_FLOW_BASE_PATH]\n                }] }, { type: CashFlowConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst ForecastConfigurationsHttpServiceGetForecastConfigurationByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/forecast-configurations/{configurationId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n                    \"currencyCode\": \"USD\",\n                    \"bankAccountIds\": [\"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\", \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\", \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\"],\n                    \"chartOfAccountIds\": [\"a3ad5046-6a41-4b55-9072-66e5872fba62\", \"6b718262-6099-4f32-9795-7aae2a25eac7\", \"b2e758c5-92f5-4f52-b915-cc8ea0357868\", \"700def49-ca84-4fa5-83d3-3de9cf393200\", \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\", \"d4721d9a-d77b-4361-9807-09331ffcb6af\", \"6333a502-088a-4314-a8d1-05e5cf61e023\", \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\", \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\", \"773e43aa-8505-48b9-94ef-d7bc5786609a\", \"e11719b8-0ec3-4bd7-943a-72f575ef7890\", \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\", \"109b5a2f-8b10-4953-a388-2934f4f60a6e\", \"8e03d0a6-f172-40bd-adf1-3834e9734267\", \"4a959dfe-428f-48c2-88f6-efc155f2a19c\", \"1bb12d54-9d81-4b63-b1c1-af419e47a687\", \"d61afb14-0da1-43ba-935e-4b4a08a012fe\", \"f421c967-88eb-43c1-b19e-aa03f15f67ce\", \"8fca197a-3242-4795-8b06-48d821315ad1\", \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\", \"26dfb943-b6fb-484b-82b5-85eca47fe07c\", \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\", \"4339c2ee-4040-4996-acf5-810b6c8eb337\", \"77b9ba20-924e-4be8-8077-87278297d915\", \"0e0f7942-612f-481c-8166-ea33fe398a74\", \"81860ebb-997f-47b6-a1ff-30988af2520d\", \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\", \"c9c3eff9-0968-4d1f-b321-c2499c079014\", \"271c798c-031c-4cfc-828c-d40e37fbb003\", \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\", \"587bc9dd-553d-4b3d-88d8-5256eedfb499\", \"ccfb434a-b289-441c-99a2-30e05a572057\", \"484ef212-372c-41bc-9a0b-9a3b64c78218\", \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\", \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\", \"b15090b5-bcea-4655-a7aa-861e6084ca8b\", \"497559c7-60bf-476c-8b16-09b8952a9722\", \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\", \"9c400ca0-009e-475a-abc6-d5a76154aa0a\", \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\", \"9e68b349-72af-4cf3-8ea8-abd76f31064e\", \"771aad7c-70d2-4f7e-9309-0ab33e11e589\", \"45b174a0-45be-4134-95ee-27b751f29b6e\", \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\", \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\", \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\", \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\", \"3d9747ce-afbf-4ff1-b23d-559206c5998c\", \"1158aa19-894e-40ea-a54f-f2c6808c879a\", \"1e870df7-7255-41e2-8220-e24c301af038\", \"e2521f1a-ab18-483f-89d9-ea0434f00989\", \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\", \"1137cd94-52b1-45b5-a573-1723c89a35f2\", \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\", \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\", \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\", \"0d9d51d4-b347-480b-88f3-6107f0ba343f\", \"bc366bf7-30db-4856-9f65-06ffc01596f5\", \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\", \"7877e117-f0ac-4142-841f-84e062f77128\", \"ca5ea429-6cc0-4870-8513-a4e696b312d4\", \"ba81920a-23b7-4634-946f-47f0067d9e1a\", \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\", \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\", \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\", \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\", \"74d34736-f4a0-4638-9465-4f5254ddb1b5\", \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\", \"ef961774-568d-4746-a790-fa8e22907db5\", \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\", \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\", \"442e062b-8585-4f14-9763-8990c9fd6087\", \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\", \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\", \"da439b63-4dc2-45c4-9cf8-d4984413403e\", \"3b353731-f571-4854-8240-0d49cc81fecc\", \"ecc43720-0fb4-4b20-9561-73f78021a3fa\", \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\", \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\", \"22a92103-3ee1-41fa-9722-1fc209caa2c2\", \"f934846d-8461-44dd-89be-3d4cc7b59a53\", \"a4163fda-a2c0-4d12-93cb-e016f049fee6\", \"225f6f2a-445e-48b3-88b5-e3f9daae059a\", \"acf2e2dd-cc98-4c16-a705-d0010b593083\", \"de6e8ce5-90fc-4379-9972-951b94897fcc\", \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\", \"c9205c03-ea6a-48a0-be07-733f894db4d8\", \"7e776b86-151e-4a4a-a60a-f36e682e2a50\", \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\", \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\", \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\"]\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"chartOfAccountIds\": [\"chartOfAccountIds\", \"chartOfAccountIds\"],\n                    \"id\": \"id\",\n                    \"currencyCode\": \"currencyCode\",\n                    \"bankAccountIds\": [\"bankAccountIds\", \"bankAccountIds\"]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst ForecastConfigurationsHttpServiceGetForecastConfigurationsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/forecast-configurations\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"configurations\": [{\n                            \"currencyCode\": \"EUR\",\n                            \"bankAccountIds\": [\"99bae364-1aa4-45a7-87e5-249d5b22242c\", \"4d3740af-11f3-4bd8-915e-4850184ede9f\", \"473ec899-85a7-49f0-9fca-961bfb133d9c\"],\n                            \"chartOfAccountIds\": [\"43032a1e-f466-40fd-8ed7-f92acbd0ecb6\", \"846bdab7-5b95-4977-a71f-3a8fdd28770b\", \"860acb60-ddcb-4a56-a773-947b1883eaf0\"]\n                        }, {\n                            \"currencyCode\": \"USD\",\n                            \"bankAccountIds\": [\"fecfcdc6-8675-457d-b3b1-07b254bc7445\", \"02556b90-d759-4efe-ac74-4fa6286b07ab\", \"2c04b8e1-4fdf-4317-870e-d2caf5474b75\"],\n                            \"chartOfAccountIds\": [\"0bd55bdb-f407-4b1b-a049-995a534a6877\", \"6e37e319-c753-4f70-8842-50dec650ed67\", \"0f52a8d1-66a7-4a0c-94fb-3f7f3644c913\"]\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst ForecastConfigurationsHttpServicePostForecastConfigurationsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/forecast-configurations\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"id\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n                    \"currencyCode\": \"USD\",\n                    \"bankAccountIds\": [\"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\", \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\", \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\"],\n                    \"chartOfAccountIds\": [\"a3ad5046-6a41-4b55-9072-66e5872fba62\", \"6b718262-6099-4f32-9795-7aae2a25eac7\", \"b2e758c5-92f5-4f52-b915-cc8ea0357868\", \"700def49-ca84-4fa5-83d3-3de9cf393200\", \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\", \"d4721d9a-d77b-4361-9807-09331ffcb6af\", \"6333a502-088a-4314-a8d1-05e5cf61e023\", \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\", \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\", \"773e43aa-8505-48b9-94ef-d7bc5786609a\", \"e11719b8-0ec3-4bd7-943a-72f575ef7890\", \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\", \"109b5a2f-8b10-4953-a388-2934f4f60a6e\", \"8e03d0a6-f172-40bd-adf1-3834e9734267\", \"4a959dfe-428f-48c2-88f6-efc155f2a19c\", \"1bb12d54-9d81-4b63-b1c1-af419e47a687\", \"d61afb14-0da1-43ba-935e-4b4a08a012fe\", \"f421c967-88eb-43c1-b19e-aa03f15f67ce\", \"8fca197a-3242-4795-8b06-48d821315ad1\", \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\", \"26dfb943-b6fb-484b-82b5-85eca47fe07c\", \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\", \"4339c2ee-4040-4996-acf5-810b6c8eb337\", \"77b9ba20-924e-4be8-8077-87278297d915\", \"0e0f7942-612f-481c-8166-ea33fe398a74\", \"81860ebb-997f-47b6-a1ff-30988af2520d\", \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\", \"c9c3eff9-0968-4d1f-b321-c2499c079014\", \"271c798c-031c-4cfc-828c-d40e37fbb003\", \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\", \"587bc9dd-553d-4b3d-88d8-5256eedfb499\", \"ccfb434a-b289-441c-99a2-30e05a572057\", \"484ef212-372c-41bc-9a0b-9a3b64c78218\", \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\", \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\", \"b15090b5-bcea-4655-a7aa-861e6084ca8b\", \"497559c7-60bf-476c-8b16-09b8952a9722\", \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\", \"9c400ca0-009e-475a-abc6-d5a76154aa0a\", \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\", \"9e68b349-72af-4cf3-8ea8-abd76f31064e\", \"771aad7c-70d2-4f7e-9309-0ab33e11e589\", \"45b174a0-45be-4134-95ee-27b751f29b6e\", \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\", \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\", \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\", \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\", \"3d9747ce-afbf-4ff1-b23d-559206c5998c\", \"1158aa19-894e-40ea-a54f-f2c6808c879a\", \"1e870df7-7255-41e2-8220-e24c301af038\", \"e2521f1a-ab18-483f-89d9-ea0434f00989\", \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\", \"1137cd94-52b1-45b5-a573-1723c89a35f2\", \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\", \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\", \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\", \"0d9d51d4-b347-480b-88f3-6107f0ba343f\", \"bc366bf7-30db-4856-9f65-06ffc01596f5\", \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\", \"7877e117-f0ac-4142-841f-84e062f77128\", \"ca5ea429-6cc0-4870-8513-a4e696b312d4\", \"ba81920a-23b7-4634-946f-47f0067d9e1a\", \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\", \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\", \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\", \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\", \"74d34736-f4a0-4638-9465-4f5254ddb1b5\", \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\", \"ef961774-568d-4746-a790-fa8e22907db5\", \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\", \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\", \"442e062b-8585-4f14-9763-8990c9fd6087\", \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\", \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\", \"da439b63-4dc2-45c4-9cf8-d4984413403e\", \"3b353731-f571-4854-8240-0d49cc81fecc\", \"ecc43720-0fb4-4b20-9561-73f78021a3fa\", \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\", \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\", \"22a92103-3ee1-41fa-9722-1fc209caa2c2\", \"f934846d-8461-44dd-89be-3d4cc7b59a53\", \"a4163fda-a2c0-4d12-93cb-e016f049fee6\", \"225f6f2a-445e-48b3-88b5-e3f9daae059a\", \"acf2e2dd-cc98-4c16-a705-d0010b593083\", \"de6e8ce5-90fc-4379-9972-951b94897fcc\", \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\", \"c9205c03-ea6a-48a0-be07-733f894db4d8\", \"7e776b86-151e-4a4a-a60a-f36e682e2a50\", \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\", \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\", \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\"]\n                }\n            },\n            {\n                status: 201,\n                body: {\n                    \"chartOfAccountIds\": [\"chartOfAccountIds\", \"chartOfAccountIds\"],\n                    \"id\": \"id\",\n                    \"currencyCode\": \"currencyCode\",\n                    \"bankAccountIds\": [\"bankAccountIds\", \"bankAccountIds\"]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst ForecastConfigurationsHttpServicePutForecastConfigurationByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/forecast-configurations/{configurationId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n                    \"currencyCode\": \"USD\",\n                    \"bankAccountIds\": [\"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\", \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\", \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\"],\n                    \"chartOfAccountIds\": [\"a3ad5046-6a41-4b55-9072-66e5872fba62\", \"6b718262-6099-4f32-9795-7aae2a25eac7\", \"b2e758c5-92f5-4f52-b915-cc8ea0357868\", \"700def49-ca84-4fa5-83d3-3de9cf393200\", \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\", \"d4721d9a-d77b-4361-9807-09331ffcb6af\", \"6333a502-088a-4314-a8d1-05e5cf61e023\", \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\", \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\", \"773e43aa-8505-48b9-94ef-d7bc5786609a\", \"e11719b8-0ec3-4bd7-943a-72f575ef7890\", \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\", \"109b5a2f-8b10-4953-a388-2934f4f60a6e\", \"8e03d0a6-f172-40bd-adf1-3834e9734267\", \"4a959dfe-428f-48c2-88f6-efc155f2a19c\", \"1bb12d54-9d81-4b63-b1c1-af419e47a687\", \"d61afb14-0da1-43ba-935e-4b4a08a012fe\", \"f421c967-88eb-43c1-b19e-aa03f15f67ce\", \"8fca197a-3242-4795-8b06-48d821315ad1\", \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\", \"26dfb943-b6fb-484b-82b5-85eca47fe07c\", \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\", \"4339c2ee-4040-4996-acf5-810b6c8eb337\", \"77b9ba20-924e-4be8-8077-87278297d915\", \"0e0f7942-612f-481c-8166-ea33fe398a74\", \"81860ebb-997f-47b6-a1ff-30988af2520d\", \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\", \"c9c3eff9-0968-4d1f-b321-c2499c079014\", \"271c798c-031c-4cfc-828c-d40e37fbb003\", \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\", \"587bc9dd-553d-4b3d-88d8-5256eedfb499\", \"ccfb434a-b289-441c-99a2-30e05a572057\", \"484ef212-372c-41bc-9a0b-9a3b64c78218\", \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\", \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\", \"b15090b5-bcea-4655-a7aa-861e6084ca8b\", \"497559c7-60bf-476c-8b16-09b8952a9722\", \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\", \"9c400ca0-009e-475a-abc6-d5a76154aa0a\", \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\", \"9e68b349-72af-4cf3-8ea8-abd76f31064e\", \"771aad7c-70d2-4f7e-9309-0ab33e11e589\", \"45b174a0-45be-4134-95ee-27b751f29b6e\", \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\", \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\", \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\", \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\", \"3d9747ce-afbf-4ff1-b23d-559206c5998c\", \"1158aa19-894e-40ea-a54f-f2c6808c879a\", \"1e870df7-7255-41e2-8220-e24c301af038\", \"e2521f1a-ab18-483f-89d9-ea0434f00989\", \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\", \"1137cd94-52b1-45b5-a573-1723c89a35f2\", \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\", \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\", \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\", \"0d9d51d4-b347-480b-88f3-6107f0ba343f\", \"bc366bf7-30db-4856-9f65-06ffc01596f5\", \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\", \"7877e117-f0ac-4142-841f-84e062f77128\", \"ca5ea429-6cc0-4870-8513-a4e696b312d4\", \"ba81920a-23b7-4634-946f-47f0067d9e1a\", \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\", \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\", \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\", \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\", \"74d34736-f4a0-4638-9465-4f5254ddb1b5\", \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\", \"ef961774-568d-4746-a790-fa8e22907db5\", \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\", \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\", \"442e062b-8585-4f14-9763-8990c9fd6087\", \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\", \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\", \"da439b63-4dc2-45c4-9cf8-d4984413403e\", \"3b353731-f571-4854-8240-0d49cc81fecc\", \"ecc43720-0fb4-4b20-9561-73f78021a3fa\", \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\", \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\", \"22a92103-3ee1-41fa-9722-1fc209caa2c2\", \"f934846d-8461-44dd-89be-3d4cc7b59a53\", \"a4163fda-a2c0-4d12-93cb-e016f049fee6\", \"225f6f2a-445e-48b3-88b5-e3f9daae059a\", \"acf2e2dd-cc98-4c16-a705-d0010b593083\", \"de6e8ce5-90fc-4379-9972-951b94897fcc\", \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\", \"c9205c03-ea6a-48a0-be07-733f894db4d8\", \"7e776b86-151e-4a4a-a60a-f36e682e2a50\", \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\", \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\", \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\"]\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"chartOfAccountIds\": [\"chartOfAccountIds\", \"chartOfAccountIds\"],\n                    \"id\": \"id\",\n                    \"currencyCode\": \"currencyCode\",\n                    \"bankAccountIds\": [\"bankAccountIds\", \"bankAccountIds\"]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst ForecastConfigurationsHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v1/forecast-configurations/{configurationId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n                    \"currencyCode\": \"USD\",\n                    \"bankAccountIds\": [\"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\", \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\", \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\"],\n                    \"chartOfAccountIds\": [\"a3ad5046-6a41-4b55-9072-66e5872fba62\", \"6b718262-6099-4f32-9795-7aae2a25eac7\", \"b2e758c5-92f5-4f52-b915-cc8ea0357868\", \"700def49-ca84-4fa5-83d3-3de9cf393200\", \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\", \"d4721d9a-d77b-4361-9807-09331ffcb6af\", \"6333a502-088a-4314-a8d1-05e5cf61e023\", \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\", \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\", \"773e43aa-8505-48b9-94ef-d7bc5786609a\", \"e11719b8-0ec3-4bd7-943a-72f575ef7890\", \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\", \"109b5a2f-8b10-4953-a388-2934f4f60a6e\", \"8e03d0a6-f172-40bd-adf1-3834e9734267\", \"4a959dfe-428f-48c2-88f6-efc155f2a19c\", \"1bb12d54-9d81-4b63-b1c1-af419e47a687\", \"d61afb14-0da1-43ba-935e-4b4a08a012fe\", \"f421c967-88eb-43c1-b19e-aa03f15f67ce\", \"8fca197a-3242-4795-8b06-48d821315ad1\", \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\", \"26dfb943-b6fb-484b-82b5-85eca47fe07c\", \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\", \"4339c2ee-4040-4996-acf5-810b6c8eb337\", \"77b9ba20-924e-4be8-8077-87278297d915\", \"0e0f7942-612f-481c-8166-ea33fe398a74\", \"81860ebb-997f-47b6-a1ff-30988af2520d\", \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\", \"c9c3eff9-0968-4d1f-b321-c2499c079014\", \"271c798c-031c-4cfc-828c-d40e37fbb003\", \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\", \"587bc9dd-553d-4b3d-88d8-5256eedfb499\", \"ccfb434a-b289-441c-99a2-30e05a572057\", \"484ef212-372c-41bc-9a0b-9a3b64c78218\", \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\", \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\", \"b15090b5-bcea-4655-a7aa-861e6084ca8b\", \"497559c7-60bf-476c-8b16-09b8952a9722\", \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\", \"9c400ca0-009e-475a-abc6-d5a76154aa0a\", \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\", \"9e68b349-72af-4cf3-8ea8-abd76f31064e\", \"771aad7c-70d2-4f7e-9309-0ab33e11e589\", \"45b174a0-45be-4134-95ee-27b751f29b6e\", \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\", \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\", \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\", \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\", \"3d9747ce-afbf-4ff1-b23d-559206c5998c\", \"1158aa19-894e-40ea-a54f-f2c6808c879a\", \"1e870df7-7255-41e2-8220-e24c301af038\", \"e2521f1a-ab18-483f-89d9-ea0434f00989\", \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\", \"1137cd94-52b1-45b5-a573-1723c89a35f2\", \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\", \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\", \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\", \"0d9d51d4-b347-480b-88f3-6107f0ba343f\", \"bc366bf7-30db-4856-9f65-06ffc01596f5\", \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\", \"7877e117-f0ac-4142-841f-84e062f77128\", \"ca5ea429-6cc0-4870-8513-a4e696b312d4\", \"ba81920a-23b7-4634-946f-47f0067d9e1a\", \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\", \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\", \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\", \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\", \"74d34736-f4a0-4638-9465-4f5254ddb1b5\", \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\", \"ef961774-568d-4746-a790-fa8e22907db5\", \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\", \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\", \"442e062b-8585-4f14-9763-8990c9fd6087\", \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\", \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\", \"da439b63-4dc2-45c4-9cf8-d4984413403e\", \"3b353731-f571-4854-8240-0d49cc81fecc\", \"ecc43720-0fb4-4b20-9561-73f78021a3fa\", \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\", \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\", \"22a92103-3ee1-41fa-9722-1fc209caa2c2\", \"f934846d-8461-44dd-89be-3d4cc7b59a53\", \"a4163fda-a2c0-4d12-93cb-e016f049fee6\", \"225f6f2a-445e-48b3-88b5-e3f9daae059a\", \"acf2e2dd-cc98-4c16-a705-d0010b593083\", \"de6e8ce5-90fc-4379-9972-951b94897fcc\", \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\", \"c9205c03-ea6a-48a0-be07-733f894db4d8\", \"7e776b86-151e-4a4a-a60a-f36e682e2a50\", \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\", \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\", \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\"]\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"chartOfAccountIds\": [\"chartOfAccountIds\", \"chartOfAccountIds\"],\n                    \"id\": \"id\",\n                    \"currencyCode\": \"currencyCode\",\n                    \"bankAccountIds\": [\"bankAccountIds\", \"bankAccountIds\"]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/forecast-configurations\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"configurations\": [{\n                            \"currencyCode\": \"EUR\",\n                            \"bankAccountIds\": [\"99bae364-1aa4-45a7-87e5-249d5b22242c\", \"4d3740af-11f3-4bd8-915e-4850184ede9f\", \"473ec899-85a7-49f0-9fca-961bfb133d9c\"],\n                            \"chartOfAccountIds\": [\"43032a1e-f466-40fd-8ed7-f92acbd0ecb6\", \"846bdab7-5b95-4977-a71f-3a8fdd28770b\", \"860acb60-ddcb-4a56-a773-947b1883eaf0\"]\n                        }, {\n                            \"currencyCode\": \"USD\",\n                            \"bankAccountIds\": [\"fecfcdc6-8675-457d-b3b1-07b254bc7445\", \"02556b90-d759-4efe-ac74-4fa6286b07ab\", \"2c04b8e1-4fdf-4317-870e-d2caf5474b75\"],\n                            \"chartOfAccountIds\": [\"0bd55bdb-f407-4b1b-a049-995a534a6877\", \"6e37e319-c753-4f70-8842-50dec650ed67\", \"0f52a8d1-66a7-4a0c-94fb-3f7f3644c913\"]\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/forecast-configurations\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"id\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n                    \"currencyCode\": \"USD\",\n                    \"bankAccountIds\": [\"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\", \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\", \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\"],\n                    \"chartOfAccountIds\": [\"a3ad5046-6a41-4b55-9072-66e5872fba62\", \"6b718262-6099-4f32-9795-7aae2a25eac7\", \"b2e758c5-92f5-4f52-b915-cc8ea0357868\", \"700def49-ca84-4fa5-83d3-3de9cf393200\", \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\", \"d4721d9a-d77b-4361-9807-09331ffcb6af\", \"6333a502-088a-4314-a8d1-05e5cf61e023\", \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\", \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\", \"773e43aa-8505-48b9-94ef-d7bc5786609a\", \"e11719b8-0ec3-4bd7-943a-72f575ef7890\", \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\", \"109b5a2f-8b10-4953-a388-2934f4f60a6e\", \"8e03d0a6-f172-40bd-adf1-3834e9734267\", \"4a959dfe-428f-48c2-88f6-efc155f2a19c\", \"1bb12d54-9d81-4b63-b1c1-af419e47a687\", \"d61afb14-0da1-43ba-935e-4b4a08a012fe\", \"f421c967-88eb-43c1-b19e-aa03f15f67ce\", \"8fca197a-3242-4795-8b06-48d821315ad1\", \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\", \"26dfb943-b6fb-484b-82b5-85eca47fe07c\", \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\", \"4339c2ee-4040-4996-acf5-810b6c8eb337\", \"77b9ba20-924e-4be8-8077-87278297d915\", \"0e0f7942-612f-481c-8166-ea33fe398a74\", \"81860ebb-997f-47b6-a1ff-30988af2520d\", \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\", \"c9c3eff9-0968-4d1f-b321-c2499c079014\", \"271c798c-031c-4cfc-828c-d40e37fbb003\", \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\", \"587bc9dd-553d-4b3d-88d8-5256eedfb499\", \"ccfb434a-b289-441c-99a2-30e05a572057\", \"484ef212-372c-41bc-9a0b-9a3b64c78218\", \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\", \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\", \"b15090b5-bcea-4655-a7aa-861e6084ca8b\", \"497559c7-60bf-476c-8b16-09b8952a9722\", \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\", \"9c400ca0-009e-475a-abc6-d5a76154aa0a\", \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\", \"9e68b349-72af-4cf3-8ea8-abd76f31064e\", \"771aad7c-70d2-4f7e-9309-0ab33e11e589\", \"45b174a0-45be-4134-95ee-27b751f29b6e\", \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\", \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\", \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\", \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\", \"3d9747ce-afbf-4ff1-b23d-559206c5998c\", \"1158aa19-894e-40ea-a54f-f2c6808c879a\", \"1e870df7-7255-41e2-8220-e24c301af038\", \"e2521f1a-ab18-483f-89d9-ea0434f00989\", \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\", \"1137cd94-52b1-45b5-a573-1723c89a35f2\", \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\", \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\", \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\", \"0d9d51d4-b347-480b-88f3-6107f0ba343f\", \"bc366bf7-30db-4856-9f65-06ffc01596f5\", \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\", \"7877e117-f0ac-4142-841f-84e062f77128\", \"ca5ea429-6cc0-4870-8513-a4e696b312d4\", \"ba81920a-23b7-4634-946f-47f0067d9e1a\", \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\", \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\", \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\", \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\", \"74d34736-f4a0-4638-9465-4f5254ddb1b5\", \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\", \"ef961774-568d-4746-a790-fa8e22907db5\", \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\", \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\", \"442e062b-8585-4f14-9763-8990c9fd6087\", \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\", \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\", \"da439b63-4dc2-45c4-9cf8-d4984413403e\", \"3b353731-f571-4854-8240-0d49cc81fecc\", \"ecc43720-0fb4-4b20-9561-73f78021a3fa\", \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\", \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\", \"22a92103-3ee1-41fa-9722-1fc209caa2c2\", \"f934846d-8461-44dd-89be-3d4cc7b59a53\", \"a4163fda-a2c0-4d12-93cb-e016f049fee6\", \"225f6f2a-445e-48b3-88b5-e3f9daae059a\", \"acf2e2dd-cc98-4c16-a705-d0010b593083\", \"de6e8ce5-90fc-4379-9972-951b94897fcc\", \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\", \"c9205c03-ea6a-48a0-be07-733f894db4d8\", \"7e776b86-151e-4a4a-a60a-f36e682e2a50\", \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\", \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\", \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\"]\n                }\n            },\n            {\n                status: 201,\n                body: {\n                    \"chartOfAccountIds\": [\"chartOfAccountIds\", \"chartOfAccountIds\"],\n                    \"id\": \"id\",\n                    \"currencyCode\": \"currencyCode\",\n                    \"bankAccountIds\": [\"bankAccountIds\", \"bankAccountIds\"]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/forecast-configurations/{configurationId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n                    \"currencyCode\": \"USD\",\n                    \"bankAccountIds\": [\"3cdb2224-8926-4b4d-a99f-1c9dfbbb4600\", \"4cdb2224-8926-4b4d-a99f-1c9dfbbb4697\", \"5cdb2224-8926-4b4d-a99f-1c9dfbbb4696\"],\n                    \"chartOfAccountIds\": [\"a3ad5046-6a41-4b55-9072-66e5872fba62\", \"6b718262-6099-4f32-9795-7aae2a25eac7\", \"b2e758c5-92f5-4f52-b915-cc8ea0357868\", \"700def49-ca84-4fa5-83d3-3de9cf393200\", \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\", \"d4721d9a-d77b-4361-9807-09331ffcb6af\", \"6333a502-088a-4314-a8d1-05e5cf61e023\", \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\", \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\", \"773e43aa-8505-48b9-94ef-d7bc5786609a\", \"e11719b8-0ec3-4bd7-943a-72f575ef7890\", \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\", \"109b5a2f-8b10-4953-a388-2934f4f60a6e\", \"8e03d0a6-f172-40bd-adf1-3834e9734267\", \"4a959dfe-428f-48c2-88f6-efc155f2a19c\", \"1bb12d54-9d81-4b63-b1c1-af419e47a687\", \"d61afb14-0da1-43ba-935e-4b4a08a012fe\", \"f421c967-88eb-43c1-b19e-aa03f15f67ce\", \"8fca197a-3242-4795-8b06-48d821315ad1\", \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\", \"26dfb943-b6fb-484b-82b5-85eca47fe07c\", \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\", \"4339c2ee-4040-4996-acf5-810b6c8eb337\", \"77b9ba20-924e-4be8-8077-87278297d915\", \"0e0f7942-612f-481c-8166-ea33fe398a74\", \"81860ebb-997f-47b6-a1ff-30988af2520d\", \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\", \"c9c3eff9-0968-4d1f-b321-c2499c079014\", \"271c798c-031c-4cfc-828c-d40e37fbb003\", \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\", \"587bc9dd-553d-4b3d-88d8-5256eedfb499\", \"ccfb434a-b289-441c-99a2-30e05a572057\", \"484ef212-372c-41bc-9a0b-9a3b64c78218\", \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\", \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\", \"b15090b5-bcea-4655-a7aa-861e6084ca8b\", \"497559c7-60bf-476c-8b16-09b8952a9722\", \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\", \"9c400ca0-009e-475a-abc6-d5a76154aa0a\", \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\", \"9e68b349-72af-4cf3-8ea8-abd76f31064e\", \"771aad7c-70d2-4f7e-9309-0ab33e11e589\", \"45b174a0-45be-4134-95ee-27b751f29b6e\", \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\", \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\", \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\", \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\", \"3d9747ce-afbf-4ff1-b23d-559206c5998c\", \"1158aa19-894e-40ea-a54f-f2c6808c879a\", \"1e870df7-7255-41e2-8220-e24c301af038\", \"e2521f1a-ab18-483f-89d9-ea0434f00989\", \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\", \"1137cd94-52b1-45b5-a573-1723c89a35f2\", \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\", \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\", \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\", \"0d9d51d4-b347-480b-88f3-6107f0ba343f\", \"bc366bf7-30db-4856-9f65-06ffc01596f5\", \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\", \"7877e117-f0ac-4142-841f-84e062f77128\", \"ca5ea429-6cc0-4870-8513-a4e696b312d4\", \"ba81920a-23b7-4634-946f-47f0067d9e1a\", \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\", \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\", \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\", \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\", \"74d34736-f4a0-4638-9465-4f5254ddb1b5\", \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\", \"ef961774-568d-4746-a790-fa8e22907db5\", \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\", \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\", \"442e062b-8585-4f14-9763-8990c9fd6087\", \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\", \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\", \"da439b63-4dc2-45c4-9cf8-d4984413403e\", \"3b353731-f571-4854-8240-0d49cc81fecc\", \"ecc43720-0fb4-4b20-9561-73f78021a3fa\", \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\", \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\", \"22a92103-3ee1-41fa-9722-1fc209caa2c2\", \"f934846d-8461-44dd-89be-3d4cc7b59a53\", \"a4163fda-a2c0-4d12-93cb-e016f049fee6\", \"225f6f2a-445e-48b3-88b5-e3f9daae059a\", \"acf2e2dd-cc98-4c16-a705-d0010b593083\", \"de6e8ce5-90fc-4379-9972-951b94897fcc\", \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\", \"c9205c03-ea6a-48a0-be07-733f894db4d8\", \"7e776b86-151e-4a4a-a60a-f36e682e2a50\", \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\", \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\", \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\"]\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"chartOfAccountIds\": [\"chartOfAccountIds\", \"chartOfAccountIds\"],\n                    \"id\": \"id\",\n                    \"currencyCode\": \"currencyCode\",\n                    \"bankAccountIds\": [\"bankAccountIds\", \"bankAccountIds\"]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n]);\n\nclass ForecastsHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new CashFlowConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    getForecastById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _forecastId = requestParameters[\"forecastId\"];\n        if (_forecastId === null || _forecastId === undefined) {\n            throw new Error('Required parameter forecastId was null or undefined when calling getForecastById.');\n        }\n        const _cadenceType = requestParameters[\"cadenceType\"];\n        if (_cadenceType === null || _cadenceType === undefined) {\n            throw new Error('Required parameter cadenceType was null or undefined when calling getForecastById.');\n        }\n        const _projectionAmount = requestParameters[\"projectionAmount\"];\n        const _historyAmount = requestParameters[\"historyAmount\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_cadenceType !== undefined && _cadenceType !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cadenceType, 'cadenceType');\n        }\n        if (_projectionAmount !== undefined && _projectionAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _projectionAmount, 'projectionAmount');\n        }\n        if (_historyAmount !== undefined && _historyAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _historyAmount, 'historyAmount');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/forecasts/${encodeURIComponent(String(_forecastId))}`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getForecastByIdUrl(requestParameters) {\n        const _forecastId = requestParameters[\"forecastId\"];\n        if (_forecastId === null || _forecastId === undefined) {\n            throw new Error('Required parameter forecastId was null or undefined when calling getForecastById.');\n        }\n        const _cadenceType = requestParameters[\"cadenceType\"];\n        if (_cadenceType === null || _cadenceType === undefined) {\n            throw new Error('Required parameter cadenceType was null or undefined when calling getForecastById.');\n        }\n        const _projectionAmount = requestParameters[\"projectionAmount\"];\n        const _historyAmount = requestParameters[\"historyAmount\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_cadenceType !== undefined && _cadenceType !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cadenceType, 'cadenceType');\n        }\n        if (_projectionAmount !== undefined && _projectionAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _projectionAmount, 'projectionAmount');\n        }\n        if (_historyAmount !== undefined && _historyAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _historyAmount, 'historyAmount');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/forecasts/${encodeURIComponent(String(_forecastId))}${queryString ? `?${queryString}` : ''}`;\n    }\n    getForecasts(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/forecasts`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getForecastsUrl() {\n        return `${this.configuration.basePath}/client-api/v1/forecasts`;\n    }\n}\nForecastsHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ForecastsHttpService, deps: [{ token: i1.HttpClient }, { token: CASH_FLOW_BASE_PATH, optional: true }, { token: CashFlowConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nForecastsHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ForecastsHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ForecastsHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CASH_FLOW_BASE_PATH]\n                }] }, { type: CashFlowConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst ForecastsHttpServiceGetForecastByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/forecasts/{forecastId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"configurationId\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n                    \"syncDatetime\": \"2020-11-05T11:56:15Z\",\n                    \"currentBalance\": \"10575882.77283\",\n                    \"currencyCode\": \"USD\",\n                    \"history\": [{\n                            \"startDate\": \"2020-11-03\",\n                            \"endDate\": \"2020-11-03\",\n                            \"openingBalance\": \"-20500.00000\",\n                            \"closingBalance\": \"-15500.00000\",\n                            \"netChange\": \"5000.00000\"\n                        }, {\n                            \"startDate\": \"2020-11-04\",\n                            \"endDate\": \"2020-11-04\",\n                            \"openingBalance\": \"-15500.00000\",\n                            \"closingBalance\": \"0\",\n                            \"netChange\": \"15500.00000\"\n                        }],\n                    \"projection\": [{\n                            \"startDate\": \"2020-11-05\",\n                            \"endDate\": \"2020-11-05\",\n                            \"openingBalance\": \"0\",\n                            \"closingBalance\": \"6682.33000\",\n                            \"netChange\": \"6682.33000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Expense\",\n                                    \"balanceChange\": \"-1412.67000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n                                            \"balanceChange\": \"-1085.00000\"\n                                        }, {\n                                            \"accountId\": \"225f6f2a-445e-48b3-88b5-e3f9daae059a\",\n                                            \"balanceChange\": \"-86.44000\"\n                                        }, {\n                                            \"accountId\": \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\",\n                                            \"balanceChange\": \"-241.23000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"8300.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n                                            \"balanceChange\": \"8300.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Uncategorised\",\n                                    \"balanceChange\": \"-205.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"da439b63-4dc2-45c4-9cf8-d4984413403e\",\n                                            \"balanceChange\": \"-205.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-06\",\n                            \"endDate\": \"2020-11-06\",\n                            \"openingBalance\": \"6682.33000\",\n                            \"closingBalance\": \"2337.33000\",\n                            \"netChange\": \"-4345.00000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Expense\",\n                                    \"balanceChange\": \"-14840.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\",\n                                            \"balanceChange\": \"-14840.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"10495.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n                                            \"balanceChange\": \"10495.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-07\",\n                            \"endDate\": \"2020-11-07\",\n                            \"openingBalance\": \"2337.33000\",\n                            \"closingBalance\": \"-447.67000\",\n                            \"netChange\": \"-2785.00000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Expense\",\n                                    \"balanceChange\": \"-17785.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"0d9d51d4-b347-480b-88f3-6107f0ba343f\",\n                                            \"balanceChange\": \"-755.00000\"\n                                        }, {\n                                            \"accountId\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n                                            \"balanceChange\": \"-17030.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"15000.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n                                            \"balanceChange\": \"15000.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-08\",\n                            \"endDate\": \"2020-11-08\",\n                            \"openingBalance\": \"-447.67000\",\n                            \"closingBalance\": \"38332.33000\",\n                            \"netChange\": \"38780.00000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Expense\",\n                                    \"balanceChange\": \"-200.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n                                            \"balanceChange\": \"-200.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"38980.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n                                            \"balanceChange\": \"38980.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-09\",\n                            \"endDate\": \"2020-11-09\",\n                            \"openingBalance\": \"38332.33000\",\n                            \"closingBalance\": \"62587.33000\",\n                            \"netChange\": \"24255.00000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Expense\",\n                                    \"balanceChange\": \"-945.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n                                            \"balanceChange\": \"-945.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"25200.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n                                            \"balanceChange\": \"25200.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-10\",\n                            \"endDate\": \"2020-11-10\",\n                            \"openingBalance\": \"62587.33000\",\n                            \"closingBalance\": \"76977.33000\",\n                            \"netChange\": \"14390.00000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Expense\",\n                                    \"balanceChange\": \"-12760.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\",\n                                            \"balanceChange\": \"-12760.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"27150.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n                                            \"balanceChange\": \"27150.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-11\",\n                            \"endDate\": \"2020-11-11\",\n                            \"openingBalance\": \"76977.33000\",\n                            \"closingBalance\": \"72327.33000\",\n                            \"netChange\": \"-4650.00000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Asset\",\n                                    \"balanceChange\": \"-18900.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"7e776b86-151e-4a4a-a60a-f36e682e2a50\",\n                                            \"balanceChange\": \"-18900.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"14250.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\",\n                                            \"balanceChange\": \"14250.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-12\",\n                            \"endDate\": \"2020-11-12\",\n                            \"openingBalance\": \"72327.33000\",\n                            \"closingBalance\": \"86627.33000\",\n                            \"netChange\": \"14300.00000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Expense\",\n                                    \"balanceChange\": \"-4600.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n                                            \"balanceChange\": \"-4600.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"18900.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n                                            \"balanceChange\": \"18900.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-13\",\n                            \"endDate\": \"2020-11-13\",\n                            \"openingBalance\": \"86627.33000\",\n                            \"closingBalance\": \"87837.33000\",\n                            \"netChange\": \"1210.00000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Expense\",\n                                    \"balanceChange\": \"-5800.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n                                            \"balanceChange\": \"-5800.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"7010.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\",\n                                            \"balanceChange\": \"7010.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-14\",\n                            \"endDate\": \"2020-11-14\",\n                            \"openingBalance\": \"87837.33000\",\n                            \"closingBalance\": \"109937.33000\",\n                            \"netChange\": \"22100.00000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Expense\",\n                                    \"balanceChange\": \"-900.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"4339c2ee-4040-4996-acf5-810b6c8eb337\",\n                                            \"balanceChange\": \"-300.00000\"\n                                        }, {\n                                            \"accountId\": \"3b353731-f571-4854-8240-0d49cc81fecc\",\n                                            \"balanceChange\": \"-600.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"23000.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n                                            \"balanceChange\": \"23000.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-15\",\n                            \"endDate\": \"2020-11-15\",\n                            \"openingBalance\": \"109937.33000\",\n                            \"closingBalance\": \"109937.33000\",\n                            \"netChange\": \"0.00000\",\n                            \"categoryBalanceChanges\": []\n                        }, {\n                            \"startDate\": \"2020-11-16\",\n                            \"endDate\": \"2020-11-16\",\n                            \"openingBalance\": \"109937.33000\",\n                            \"closingBalance\": \"109937.33000\",\n                            \"netChange\": \"0.00000\",\n                            \"categoryBalanceChanges\": []\n                        }, {\n                            \"startDate\": \"2020-11-17\",\n                            \"endDate\": \"2020-11-17\",\n                            \"openingBalance\": \"109937.33000\",\n                            \"closingBalance\": \"109937.33000\",\n                            \"netChange\": \"0.00000\",\n                            \"categoryBalanceChanges\": []\n                        }, {\n                            \"startDate\": \"2020-11-18\",\n                            \"endDate\": \"2020-11-18\",\n                            \"openingBalance\": \"109937.33000\",\n                            \"closingBalance\": \"109937.33000\",\n                            \"netChange\": \"0.00000\",\n                            \"categoryBalanceChanges\": []\n                        }],\n                    \"chartOfAccounts\": [{\n                            \"id\": \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\",\n                            \"name\": \"Accounts Receivable (A/R)\",\n                            \"nominalCode\": \"84\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"77b9ba20-924e-4be8-8077-87278297d915\",\n                            \"name\": \"Checking\",\n                            \"nominalCode\": \"35\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"7e776b86-151e-4a4a-a60a-f36e682e2a50\",\n                            \"name\": \"Depreciation\",\n                            \"nominalCode\": \"39\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\",\n                            \"name\": \"Inventory Asset\",\n                            \"nominalCode\": \"81\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"271c798c-031c-4cfc-828c-d40e37fbb003\",\n                            \"name\": \"Original Cost\",\n                            \"nominalCode\": \"38\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\",\n                            \"name\": \"Prepaid Expenses\",\n                            \"nominalCode\": \"3\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"497559c7-60bf-476c-8b16-09b8952a9722\",\n                            \"name\": \"Savings\",\n                            \"nominalCode\": \"36\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"9e68b349-72af-4cf3-8ea8-abd76f31064e\",\n                            \"name\": \"Truck\",\n                            \"nominalCode\": \"37\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\",\n                            \"name\": \"Uncategorized Asset\",\n                            \"nominalCode\": \"32\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\",\n                            \"name\": \"Undeposited Funds\",\n                            \"nominalCode\": \"4\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"6b718262-6099-4f32-9795-7aae2a25eac7\",\n                            \"name\": \"Opening Balance Equity\",\n                            \"nominalCode\": \"34\",\n                            \"category\": \"Equity\"\n                        }, {\n                            \"id\": \"22a92103-3ee1-41fa-9722-1fc209caa2c2\",\n                            \"name\": \"Retained Earnings\",\n                            \"nominalCode\": \"2\",\n                            \"category\": \"Equity\"\n                        }, {\n                            \"id\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n                            \"name\": \"Accounting\",\n                            \"nominalCode\": \"69\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"d4721d9a-d77b-4361-9807-09331ffcb6af\",\n                            \"name\": \"Advertising\",\n                            \"nominalCode\": \"7\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\",\n                            \"name\": \"Automobile\",\n                            \"nominalCode\": \"55\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"771aad7c-70d2-4f7e-9309-0ab33e11e589\",\n                            \"name\": \"Bank Charges\",\n                            \"nominalCode\": \"8\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"3d9747ce-afbf-4ff1-b23d-559206c5998c\",\n                            \"name\": \"Bookkeeper\",\n                            \"nominalCode\": \"70\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\",\n                            \"name\": \"Building Repairs\",\n                            \"nominalCode\": \"73\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\",\n                            \"name\": \"Commissions & fees\",\n                            \"nominalCode\": \"9\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"4339c2ee-4040-4996-acf5-810b6c8eb337\",\n                            \"name\": \"Computer Repairs\",\n                            \"nominalCode\": \"74\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\",\n                            \"name\": \"Cost of Goods Sold\",\n                            \"nominalCode\": \"80\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"f421c967-88eb-43c1-b19e-aa03f15f67ce\",\n                            \"name\": \"Cost of Labor\",\n                            \"nominalCode\": \"59\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"1137cd94-52b1-45b5-a573-1723c89a35f2\",\n                            \"name\": \"Decks and Patios\",\n                            \"nominalCode\": \"64\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\",\n                            \"name\": \"Depreciation\",\n                            \"nominalCode\": \"40\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ccfb434a-b289-441c-99a2-30e05a572057\",\n                            \"name\": \"Disposal Fees\",\n                            \"nominalCode\": \"28\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"9c400ca0-009e-475a-abc6-d5a76154aa0a\",\n                            \"name\": \"Dues & Subscriptions\",\n                            \"nominalCode\": \"10\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"74d34736-f4a0-4638-9465-4f5254ddb1b5\",\n                            \"name\": \"Equipment Rental\",\n                            \"nominalCode\": \"29\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\",\n                            \"name\": \"Equipment Rental\",\n                            \"nominalCode\": \"62\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"0d9d51d4-b347-480b-88f3-6107f0ba343f\",\n                            \"name\": \"Equipment Repairs\",\n                            \"nominalCode\": \"75\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\",\n                            \"name\": \"Fountain and Garden Lighting\",\n                            \"nominalCode\": \"65\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"7877e117-f0ac-4142-841f-84e062f77128\",\n                            \"name\": \"Fuel\",\n                            \"nominalCode\": \"56\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"225f6f2a-445e-48b3-88b5-e3f9daae059a\",\n                            \"name\": \"Gas and Electric\",\n                            \"nominalCode\": \"76\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\",\n                            \"name\": \"Installation\",\n                            \"nominalCode\": \"60\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\",\n                            \"name\": \"Insurance\",\n                            \"nominalCode\": \"11\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\",\n                            \"name\": \"Job Expenses\",\n                            \"nominalCode\": \"58\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ecc43720-0fb4-4b20-9561-73f78021a3fa\",\n                            \"name\": \"Job Materials\",\n                            \"nominalCode\": \"63\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"4a959dfe-428f-48c2-88f6-efc155f2a19c\",\n                            \"name\": \"Lawyer\",\n                            \"nominalCode\": \"71\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n                            \"name\": \"Legal & Professional Fees\",\n                            \"nominalCode\": \"12\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"6333a502-088a-4314-a8d1-05e5cf61e023\",\n                            \"name\": \"Maintenance and Repair\",\n                            \"nominalCode\": \"72\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\",\n                            \"name\": \"Maintenance and Repairs\",\n                            \"nominalCode\": \"61\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\",\n                            \"name\": \"Meals and Entertainment\",\n                            \"nominalCode\": \"13\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"b2e758c5-92f5-4f52-b915-cc8ea0357868\",\n                            \"name\": \"Miscellaneous\",\n                            \"nominalCode\": \"14\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"1e870df7-7255-41e2-8220-e24c301af038\",\n                            \"name\": \"Office Expenses\",\n                            \"nominalCode\": \"15\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\",\n                            \"name\": \"Penalties & Settlements\",\n                            \"nominalCode\": \"27\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ba81920a-23b7-4634-946f-47f0067d9e1a\",\n                            \"name\": \"Permits\",\n                            \"nominalCode\": \"68\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\",\n                            \"name\": \"Plants and Soil\",\n                            \"nominalCode\": \"66\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n                            \"name\": \"Promotional\",\n                            \"nominalCode\": \"16\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\",\n                            \"name\": \"Purchases\",\n                            \"nominalCode\": \"78\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"3b353731-f571-4854-8240-0d49cc81fecc\",\n                            \"name\": \"Rent or Lease\",\n                            \"nominalCode\": \"17\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"8e03d0a6-f172-40bd-adf1-3834e9734267\",\n                            \"name\": \"Repair & Maintenance (deleted)\",\n                            \"nominalCode\": \"18\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"bc366bf7-30db-4856-9f65-06ffc01596f5\",\n                            \"name\": \"Sprinklers and Drip Systems\",\n                            \"nominalCode\": \"67\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"c9205c03-ea6a-48a0-be07-733f894db4d8\",\n                            \"name\": \"Stationery & Printing\",\n                            \"nominalCode\": \"19\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"d61afb14-0da1-43ba-935e-4b4a08a012fe\",\n                            \"name\": \"Supplies\",\n                            \"nominalCode\": \"20\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\",\n                            \"name\": \"Taxes & Licenses\",\n                            \"nominalCode\": \"21\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"acf2e2dd-cc98-4c16-a705-d0010b593083\",\n                            \"name\": \"Telephone\",\n                            \"nominalCode\": \"77\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"0e0f7942-612f-481c-8166-ea33fe398a74\",\n                            \"name\": \"Travel\",\n                            \"nominalCode\": \"22\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\",\n                            \"name\": \"Travel Meals\",\n                            \"nominalCode\": \"23\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\",\n                            \"name\": \"Unapplied Cash Bill Payment Expense\",\n                            \"nominalCode\": \"88\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\",\n                            \"name\": \"Uncategorized Expense\",\n                            \"nominalCode\": \"31\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ca5ea429-6cc0-4870-8513-a4e696b312d4\",\n                            \"name\": \"Utilities\",\n                            \"nominalCode\": \"24\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"a3ad5046-6a41-4b55-9072-66e5872fba62\",\n                            \"name\": \"Workers Compensation\",\n                            \"nominalCode\": \"57\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"773e43aa-8505-48b9-94ef-d7bc5786609a\",\n                            \"name\": \"Billable Expense Income\",\n                            \"nominalCode\": \"85\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\",\n                            \"name\": \"Decks and Patios\",\n                            \"nominalCode\": \"47\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n                            \"name\": \"Design income\",\n                            \"nominalCode\": \"82\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"587bc9dd-553d-4b3d-88d8-5256eedfb499\",\n                            \"name\": \"Discounts given\",\n                            \"nominalCode\": \"86\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"ef961774-568d-4746-a790-fa8e22907db5\",\n                            \"name\": \"Fees Billed\",\n                            \"nominalCode\": \"5\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n                            \"name\": \"Fountains and Garden Lighting\",\n                            \"nominalCode\": \"48\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"442e062b-8585-4f14-9763-8990c9fd6087\",\n                            \"name\": \"Installation\",\n                            \"nominalCode\": \"52\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"81860ebb-997f-47b6-a1ff-30988af2520d\",\n                            \"name\": \"Interest Earned\",\n                            \"nominalCode\": \"25\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"1bb12d54-9d81-4b63-b1c1-af419e47a687\",\n                            \"name\": \"Job Materials\",\n                            \"nominalCode\": \"46\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\",\n                            \"name\": \"Labor\",\n                            \"nominalCode\": \"51\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\",\n                            \"name\": \"Landscaping Services\",\n                            \"nominalCode\": \"45\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\",\n                            \"name\": \"Maintenance and Repair\",\n                            \"nominalCode\": \"53\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\",\n                            \"name\": \"Other Income\",\n                            \"nominalCode\": \"83\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"45b174a0-45be-4134-95ee-27b751f29b6e\",\n                            \"name\": \"Other Portfolio Income\",\n                            \"nominalCode\": \"26\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"de6e8ce5-90fc-4379-9972-951b94897fcc\",\n                            \"name\": \"Pest Control Services\",\n                            \"nominalCode\": \"54\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\",\n                            \"name\": \"Plants and Soil\",\n                            \"nominalCode\": \"49\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"700def49-ca84-4fa5-83d3-3de9cf393200\",\n                            \"name\": \"Refunds-Allowances\",\n                            \"nominalCode\": \"6\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"b15090b5-bcea-4655-a7aa-861e6084ca8b\",\n                            \"name\": \"Sales of Product Income\",\n                            \"nominalCode\": \"79\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\",\n                            \"name\": \"Services\",\n                            \"nominalCode\": \"1\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\",\n                            \"name\": \"Sprinklers and Drip Systems\",\n                            \"nominalCode\": \"50\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"c9c3eff9-0968-4d1f-b321-c2499c079014\",\n                            \"name\": \"Unapplied Cash Payment Income\",\n                            \"nominalCode\": \"87\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\",\n                            \"name\": \"Uncategorized Income\",\n                            \"nominalCode\": \"30\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"a4163fda-a2c0-4d12-93cb-e016f049fee6\",\n                            \"name\": \"Accounts Payable (A/P)\",\n                            \"nominalCode\": \"33\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"e2521f1a-ab18-483f-89d9-ea0434f00989\",\n                            \"name\": \"Arizona Dept. of Revenue Payable\",\n                            \"nominalCode\": \"89\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\",\n                            \"name\": \"Board of Equalization Payable\",\n                            \"nominalCode\": \"90\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"26dfb943-b6fb-484b-82b5-85eca47fe07c\",\n                            \"name\": \"Loan Payable\",\n                            \"nominalCode\": \"43\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"109b5a2f-8b10-4953-a388-2934f4f60a6e\",\n                            \"name\": \"Mastercard\",\n                            \"nominalCode\": \"41\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"e11719b8-0ec3-4bd7-943a-72f575ef7890\",\n                            \"name\": \"Notes Payable\",\n                            \"nominalCode\": \"44\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"484ef212-372c-41bc-9a0b-9a3b64c78218\",\n                            \"name\": \"Visa\",\n                            \"nominalCode\": \"42\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"da439b63-4dc2-45c4-9cf8-d4984413403e\",\n                            \"name\": \"Unknown\",\n                            \"description\": \"Amounts that are not attributed to any specific account.\",\n                            \"category\": \"Uncategorised\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst ForecastsHttpServiceGetForecastsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/forecasts\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"references\": [{\n                            \"id\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst ForecastsHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v1/forecasts/{forecastId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"configurationId\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\",\n                    \"syncDatetime\": \"2020-11-05T11:56:15Z\",\n                    \"currentBalance\": \"10575882.77283\",\n                    \"currencyCode\": \"USD\",\n                    \"history\": [{\n                            \"startDate\": \"2020-11-03\",\n                            \"endDate\": \"2020-11-03\",\n                            \"openingBalance\": \"-20500.00000\",\n                            \"closingBalance\": \"-15500.00000\",\n                            \"netChange\": \"5000.00000\"\n                        }, {\n                            \"startDate\": \"2020-11-04\",\n                            \"endDate\": \"2020-11-04\",\n                            \"openingBalance\": \"-15500.00000\",\n                            \"closingBalance\": \"0\",\n                            \"netChange\": \"15500.00000\"\n                        }],\n                    \"projection\": [{\n                            \"startDate\": \"2020-11-05\",\n                            \"endDate\": \"2020-11-05\",\n                            \"openingBalance\": \"0\",\n                            \"closingBalance\": \"6682.33000\",\n                            \"netChange\": \"6682.33000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Expense\",\n                                    \"balanceChange\": \"-1412.67000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n                                            \"balanceChange\": \"-1085.00000\"\n                                        }, {\n                                            \"accountId\": \"225f6f2a-445e-48b3-88b5-e3f9daae059a\",\n                                            \"balanceChange\": \"-86.44000\"\n                                        }, {\n                                            \"accountId\": \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\",\n                                            \"balanceChange\": \"-241.23000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"8300.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n                                            \"balanceChange\": \"8300.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Uncategorised\",\n                                    \"balanceChange\": \"-205.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"da439b63-4dc2-45c4-9cf8-d4984413403e\",\n                                            \"balanceChange\": \"-205.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-06\",\n                            \"endDate\": \"2020-11-06\",\n                            \"openingBalance\": \"6682.33000\",\n                            \"closingBalance\": \"2337.33000\",\n                            \"netChange\": \"-4345.00000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Expense\",\n                                    \"balanceChange\": \"-14840.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\",\n                                            \"balanceChange\": \"-14840.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"10495.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n                                            \"balanceChange\": \"10495.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-07\",\n                            \"endDate\": \"2020-11-07\",\n                            \"openingBalance\": \"2337.33000\",\n                            \"closingBalance\": \"-447.67000\",\n                            \"netChange\": \"-2785.00000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Expense\",\n                                    \"balanceChange\": \"-17785.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"0d9d51d4-b347-480b-88f3-6107f0ba343f\",\n                                            \"balanceChange\": \"-755.00000\"\n                                        }, {\n                                            \"accountId\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n                                            \"balanceChange\": \"-17030.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"15000.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n                                            \"balanceChange\": \"15000.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-08\",\n                            \"endDate\": \"2020-11-08\",\n                            \"openingBalance\": \"-447.67000\",\n                            \"closingBalance\": \"38332.33000\",\n                            \"netChange\": \"38780.00000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Expense\",\n                                    \"balanceChange\": \"-200.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n                                            \"balanceChange\": \"-200.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"38980.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n                                            \"balanceChange\": \"38980.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-09\",\n                            \"endDate\": \"2020-11-09\",\n                            \"openingBalance\": \"38332.33000\",\n                            \"closingBalance\": \"62587.33000\",\n                            \"netChange\": \"24255.00000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Expense\",\n                                    \"balanceChange\": \"-945.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n                                            \"balanceChange\": \"-945.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"25200.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n                                            \"balanceChange\": \"25200.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-10\",\n                            \"endDate\": \"2020-11-10\",\n                            \"openingBalance\": \"62587.33000\",\n                            \"closingBalance\": \"76977.33000\",\n                            \"netChange\": \"14390.00000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Expense\",\n                                    \"balanceChange\": \"-12760.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\",\n                                            \"balanceChange\": \"-12760.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"27150.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n                                            \"balanceChange\": \"27150.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-11\",\n                            \"endDate\": \"2020-11-11\",\n                            \"openingBalance\": \"76977.33000\",\n                            \"closingBalance\": \"72327.33000\",\n                            \"netChange\": \"-4650.00000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Asset\",\n                                    \"balanceChange\": \"-18900.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"7e776b86-151e-4a4a-a60a-f36e682e2a50\",\n                                            \"balanceChange\": \"-18900.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"14250.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\",\n                                            \"balanceChange\": \"14250.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-12\",\n                            \"endDate\": \"2020-11-12\",\n                            \"openingBalance\": \"72327.33000\",\n                            \"closingBalance\": \"86627.33000\",\n                            \"netChange\": \"14300.00000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Expense\",\n                                    \"balanceChange\": \"-4600.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n                                            \"balanceChange\": \"-4600.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"18900.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n                                            \"balanceChange\": \"18900.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-13\",\n                            \"endDate\": \"2020-11-13\",\n                            \"openingBalance\": \"86627.33000\",\n                            \"closingBalance\": \"87837.33000\",\n                            \"netChange\": \"1210.00000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Expense\",\n                                    \"balanceChange\": \"-5800.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n                                            \"balanceChange\": \"-5800.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"7010.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\",\n                                            \"balanceChange\": \"7010.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-14\",\n                            \"endDate\": \"2020-11-14\",\n                            \"openingBalance\": \"87837.33000\",\n                            \"closingBalance\": \"109937.33000\",\n                            \"netChange\": \"22100.00000\",\n                            \"categoryBalanceChanges\": [{\n                                    \"categoryName\": \"Expense\",\n                                    \"balanceChange\": \"-900.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"4339c2ee-4040-4996-acf5-810b6c8eb337\",\n                                            \"balanceChange\": \"-300.00000\"\n                                        }, {\n                                            \"accountId\": \"3b353731-f571-4854-8240-0d49cc81fecc\",\n                                            \"balanceChange\": \"-600.00000\"\n                                        }]\n                                }, {\n                                    \"categoryName\": \"Income\",\n                                    \"balanceChange\": \"23000.00000\",\n                                    \"accountBalanceChanges\": [{\n                                            \"accountId\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n                                            \"balanceChange\": \"23000.00000\"\n                                        }]\n                                }]\n                        }, {\n                            \"startDate\": \"2020-11-15\",\n                            \"endDate\": \"2020-11-15\",\n                            \"openingBalance\": \"109937.33000\",\n                            \"closingBalance\": \"109937.33000\",\n                            \"netChange\": \"0.00000\",\n                            \"categoryBalanceChanges\": []\n                        }, {\n                            \"startDate\": \"2020-11-16\",\n                            \"endDate\": \"2020-11-16\",\n                            \"openingBalance\": \"109937.33000\",\n                            \"closingBalance\": \"109937.33000\",\n                            \"netChange\": \"0.00000\",\n                            \"categoryBalanceChanges\": []\n                        }, {\n                            \"startDate\": \"2020-11-17\",\n                            \"endDate\": \"2020-11-17\",\n                            \"openingBalance\": \"109937.33000\",\n                            \"closingBalance\": \"109937.33000\",\n                            \"netChange\": \"0.00000\",\n                            \"categoryBalanceChanges\": []\n                        }, {\n                            \"startDate\": \"2020-11-18\",\n                            \"endDate\": \"2020-11-18\",\n                            \"openingBalance\": \"109937.33000\",\n                            \"closingBalance\": \"109937.33000\",\n                            \"netChange\": \"0.00000\",\n                            \"categoryBalanceChanges\": []\n                        }],\n                    \"chartOfAccounts\": [{\n                            \"id\": \"d37dcefc-f5ef-482d-b59a-bad2af1cb9ad\",\n                            \"name\": \"Accounts Receivable (A/R)\",\n                            \"nominalCode\": \"84\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"77b9ba20-924e-4be8-8077-87278297d915\",\n                            \"name\": \"Checking\",\n                            \"nominalCode\": \"35\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"7e776b86-151e-4a4a-a60a-f36e682e2a50\",\n                            \"name\": \"Depreciation\",\n                            \"nominalCode\": \"39\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"1f4efcfd-4e03-49d4-b7a4-3f976f2045db\",\n                            \"name\": \"Inventory Asset\",\n                            \"nominalCode\": \"81\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"271c798c-031c-4cfc-828c-d40e37fbb003\",\n                            \"name\": \"Original Cost\",\n                            \"nominalCode\": \"38\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"e987c68b-6fd9-4a86-bc9b-bac1040fbbbf\",\n                            \"name\": \"Prepaid Expenses\",\n                            \"nominalCode\": \"3\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"497559c7-60bf-476c-8b16-09b8952a9722\",\n                            \"name\": \"Savings\",\n                            \"nominalCode\": \"36\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"9e68b349-72af-4cf3-8ea8-abd76f31064e\",\n                            \"name\": \"Truck\",\n                            \"nominalCode\": \"37\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"5f4450f5-7d1b-4cc3-be31-af9df6488a50\",\n                            \"name\": \"Uncategorized Asset\",\n                            \"nominalCode\": \"32\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"1b953b3a-0ea7-4b87-b5ca-33598b68546b\",\n                            \"name\": \"Undeposited Funds\",\n                            \"nominalCode\": \"4\",\n                            \"category\": \"Asset\"\n                        }, {\n                            \"id\": \"6b718262-6099-4f32-9795-7aae2a25eac7\",\n                            \"name\": \"Opening Balance Equity\",\n                            \"nominalCode\": \"34\",\n                            \"category\": \"Equity\"\n                        }, {\n                            \"id\": \"22a92103-3ee1-41fa-9722-1fc209caa2c2\",\n                            \"name\": \"Retained Earnings\",\n                            \"nominalCode\": \"2\",\n                            \"category\": \"Equity\"\n                        }, {\n                            \"id\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n                            \"name\": \"Accounting\",\n                            \"nominalCode\": \"69\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"d4721d9a-d77b-4361-9807-09331ffcb6af\",\n                            \"name\": \"Advertising\",\n                            \"nominalCode\": \"7\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"b427bbbe-d104-46c5-b6a6-c13e37e5533f\",\n                            \"name\": \"Automobile\",\n                            \"nominalCode\": \"55\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"771aad7c-70d2-4f7e-9309-0ab33e11e589\",\n                            \"name\": \"Bank Charges\",\n                            \"nominalCode\": \"8\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"3d9747ce-afbf-4ff1-b23d-559206c5998c\",\n                            \"name\": \"Bookkeeper\",\n                            \"nominalCode\": \"70\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"2c7ba8c3-8c1d-4e95-b641-e78cbba8c45c\",\n                            \"name\": \"Building Repairs\",\n                            \"nominalCode\": \"73\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"4d0fca62-d1e0-48fe-8481-9410f25ea4bf\",\n                            \"name\": \"Commissions & fees\",\n                            \"nominalCode\": \"9\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"4339c2ee-4040-4996-acf5-810b6c8eb337\",\n                            \"name\": \"Computer Repairs\",\n                            \"nominalCode\": \"74\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"5270f4e2-d0e0-407d-aa12-87954a3d3e74\",\n                            \"name\": \"Cost of Goods Sold\",\n                            \"nominalCode\": \"80\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"f421c967-88eb-43c1-b19e-aa03f15f67ce\",\n                            \"name\": \"Cost of Labor\",\n                            \"nominalCode\": \"59\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"1137cd94-52b1-45b5-a573-1723c89a35f2\",\n                            \"name\": \"Decks and Patios\",\n                            \"nominalCode\": \"64\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"264c45c4-408e-4d80-ab8e-be4a3babb6c8\",\n                            \"name\": \"Depreciation\",\n                            \"nominalCode\": \"40\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ccfb434a-b289-441c-99a2-30e05a572057\",\n                            \"name\": \"Disposal Fees\",\n                            \"nominalCode\": \"28\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"9c400ca0-009e-475a-abc6-d5a76154aa0a\",\n                            \"name\": \"Dues & Subscriptions\",\n                            \"nominalCode\": \"10\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"74d34736-f4a0-4638-9465-4f5254ddb1b5\",\n                            \"name\": \"Equipment Rental\",\n                            \"nominalCode\": \"29\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"6b90b48e-d8b6-4dc5-8ed4-eb509141e39d\",\n                            \"name\": \"Equipment Rental\",\n                            \"nominalCode\": \"62\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"0d9d51d4-b347-480b-88f3-6107f0ba343f\",\n                            \"name\": \"Equipment Repairs\",\n                            \"nominalCode\": \"75\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"f697f236-19a0-4c4f-be80-9e9f02ec7a6f\",\n                            \"name\": \"Fountain and Garden Lighting\",\n                            \"nominalCode\": \"65\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"7877e117-f0ac-4142-841f-84e062f77128\",\n                            \"name\": \"Fuel\",\n                            \"nominalCode\": \"56\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"225f6f2a-445e-48b3-88b5-e3f9daae059a\",\n                            \"name\": \"Gas and Electric\",\n                            \"nominalCode\": \"76\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"35f1c9d8-2ce4-4f9e-9b34-ac7a0d802645\",\n                            \"name\": \"Installation\",\n                            \"nominalCode\": \"60\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"5d8860e2-a624-4009-b9a9-6f7d9add93d5\",\n                            \"name\": \"Insurance\",\n                            \"nominalCode\": \"11\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ee810af9-3b00-4de7-9204-c0cbc9bca5f8\",\n                            \"name\": \"Job Expenses\",\n                            \"nominalCode\": \"58\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ecc43720-0fb4-4b20-9561-73f78021a3fa\",\n                            \"name\": \"Job Materials\",\n                            \"nominalCode\": \"63\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"4a959dfe-428f-48c2-88f6-efc155f2a19c\",\n                            \"name\": \"Lawyer\",\n                            \"nominalCode\": \"71\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ecff9789-dff3-44a7-8ffa-72fa0af8a7ec\",\n                            \"name\": \"Legal & Professional Fees\",\n                            \"nominalCode\": \"12\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"6333a502-088a-4314-a8d1-05e5cf61e023\",\n                            \"name\": \"Maintenance and Repair\",\n                            \"nominalCode\": \"72\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"4edf486e-f6a7-45a8-9c0b-693675d0b65a\",\n                            \"name\": \"Maintenance and Repairs\",\n                            \"nominalCode\": \"61\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"cfeb44c9-9e25-4fbc-9648-a49b7cf82dad\",\n                            \"name\": \"Meals and Entertainment\",\n                            \"nominalCode\": \"13\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"b2e758c5-92f5-4f52-b915-cc8ea0357868\",\n                            \"name\": \"Miscellaneous\",\n                            \"nominalCode\": \"14\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"1e870df7-7255-41e2-8220-e24c301af038\",\n                            \"name\": \"Office Expenses\",\n                            \"nominalCode\": \"15\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"180cc81e-5621-45f1-8b2f-a7b1aa20cee7\",\n                            \"name\": \"Penalties & Settlements\",\n                            \"nominalCode\": \"27\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ba81920a-23b7-4634-946f-47f0067d9e1a\",\n                            \"name\": \"Permits\",\n                            \"nominalCode\": \"68\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"c4b4f130-c536-4b83-bbc7-15a7eda2fa67\",\n                            \"name\": \"Plants and Soil\",\n                            \"nominalCode\": \"66\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"8fca197a-3242-4795-8b06-48d821315ad1\",\n                            \"name\": \"Promotional\",\n                            \"nominalCode\": \"16\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"22ed0181-f38c-4a2d-a84e-c5505eb5f14c\",\n                            \"name\": \"Purchases\",\n                            \"nominalCode\": \"78\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"3b353731-f571-4854-8240-0d49cc81fecc\",\n                            \"name\": \"Rent or Lease\",\n                            \"nominalCode\": \"17\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"8e03d0a6-f172-40bd-adf1-3834e9734267\",\n                            \"name\": \"Repair & Maintenance (deleted)\",\n                            \"nominalCode\": \"18\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"bc366bf7-30db-4856-9f65-06ffc01596f5\",\n                            \"name\": \"Sprinklers and Drip Systems\",\n                            \"nominalCode\": \"67\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"c9205c03-ea6a-48a0-be07-733f894db4d8\",\n                            \"name\": \"Stationery & Printing\",\n                            \"nominalCode\": \"19\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"d61afb14-0da1-43ba-935e-4b4a08a012fe\",\n                            \"name\": \"Supplies\",\n                            \"nominalCode\": \"20\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"bb4a5e05-87bd-4373-9b8a-b1dbbd6ec3c8\",\n                            \"name\": \"Taxes & Licenses\",\n                            \"nominalCode\": \"21\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"acf2e2dd-cc98-4c16-a705-d0010b593083\",\n                            \"name\": \"Telephone\",\n                            \"nominalCode\": \"77\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"0e0f7942-612f-481c-8166-ea33fe398a74\",\n                            \"name\": \"Travel\",\n                            \"nominalCode\": \"22\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"1d8e3740-6e22-4908-b37e-7de8bd9a012c\",\n                            \"name\": \"Travel Meals\",\n                            \"nominalCode\": \"23\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"fb3ced8a-8bd5-41e6-8f6d-7c74fcb5aaea\",\n                            \"name\": \"Unapplied Cash Bill Payment Expense\",\n                            \"nominalCode\": \"88\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"3d8fed9c-8726-44fe-bdb0-da49d9457a8d\",\n                            \"name\": \"Uncategorized Expense\",\n                            \"nominalCode\": \"31\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"ca5ea429-6cc0-4870-8513-a4e696b312d4\",\n                            \"name\": \"Utilities\",\n                            \"nominalCode\": \"24\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"a3ad5046-6a41-4b55-9072-66e5872fba62\",\n                            \"name\": \"Workers Compensation\",\n                            \"nominalCode\": \"57\",\n                            \"category\": \"Expense\"\n                        }, {\n                            \"id\": \"773e43aa-8505-48b9-94ef-d7bc5786609a\",\n                            \"name\": \"Billable Expense Income\",\n                            \"nominalCode\": \"85\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"026dccb9-d8f6-4116-a3ff-872d0cd628f3\",\n                            \"name\": \"Decks and Patios\",\n                            \"nominalCode\": \"47\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n                            \"name\": \"Design income\",\n                            \"nominalCode\": \"82\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"587bc9dd-553d-4b3d-88d8-5256eedfb499\",\n                            \"name\": \"Discounts given\",\n                            \"nominalCode\": \"86\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"ef961774-568d-4746-a790-fa8e22907db5\",\n                            \"name\": \"Fees Billed\",\n                            \"nominalCode\": \"5\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"1158aa19-894e-40ea-a54f-f2c6808c879a\",\n                            \"name\": \"Fountains and Garden Lighting\",\n                            \"nominalCode\": \"48\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"442e062b-8585-4f14-9763-8990c9fd6087\",\n                            \"name\": \"Installation\",\n                            \"nominalCode\": \"52\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"81860ebb-997f-47b6-a1ff-30988af2520d\",\n                            \"name\": \"Interest Earned\",\n                            \"nominalCode\": \"25\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"1bb12d54-9d81-4b63-b1c1-af419e47a687\",\n                            \"name\": \"Job Materials\",\n                            \"nominalCode\": \"46\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"c9927ae1-eaeb-4b02-baeb-d6bcd64a20ff\",\n                            \"name\": \"Labor\",\n                            \"nominalCode\": \"51\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"dc2af3cd-9c29-4c23-b081-0ceac31d4406\",\n                            \"name\": \"Landscaping Services\",\n                            \"nominalCode\": \"45\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"9e66abda-69bd-460f-81e2-d540cd2bcf4b\",\n                            \"name\": \"Maintenance and Repair\",\n                            \"nominalCode\": \"53\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"bbb2a004-1783-424f-8aac-d7b71d3a9ff5\",\n                            \"name\": \"Other Income\",\n                            \"nominalCode\": \"83\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"45b174a0-45be-4134-95ee-27b751f29b6e\",\n                            \"name\": \"Other Portfolio Income\",\n                            \"nominalCode\": \"26\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"de6e8ce5-90fc-4379-9972-951b94897fcc\",\n                            \"name\": \"Pest Control Services\",\n                            \"nominalCode\": \"54\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"b94b7aca-07a3-4e49-b06c-9a89fb84793d\",\n                            \"name\": \"Plants and Soil\",\n                            \"nominalCode\": \"49\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"700def49-ca84-4fa5-83d3-3de9cf393200\",\n                            \"name\": \"Refunds-Allowances\",\n                            \"nominalCode\": \"6\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"b15090b5-bcea-4655-a7aa-861e6084ca8b\",\n                            \"name\": \"Sales of Product Income\",\n                            \"nominalCode\": \"79\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"cfd72132-9cdc-4ca6-a106-f35d8f6bd727\",\n                            \"name\": \"Services\",\n                            \"nominalCode\": \"1\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"6d9c8716-fee0-4da2-a3dc-3abd5afbfdba\",\n                            \"name\": \"Sprinklers and Drip Systems\",\n                            \"nominalCode\": \"50\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"c9c3eff9-0968-4d1f-b321-c2499c079014\",\n                            \"name\": \"Unapplied Cash Payment Income\",\n                            \"nominalCode\": \"87\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"1152c41c-3dec-44e7-9fc6-b9463b9017f5\",\n                            \"name\": \"Uncategorized Income\",\n                            \"nominalCode\": \"30\",\n                            \"category\": \"Income\"\n                        }, {\n                            \"id\": \"a4163fda-a2c0-4d12-93cb-e016f049fee6\",\n                            \"name\": \"Accounts Payable (A/P)\",\n                            \"nominalCode\": \"33\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"e2521f1a-ab18-483f-89d9-ea0434f00989\",\n                            \"name\": \"Arizona Dept. of Revenue Payable\",\n                            \"nominalCode\": \"89\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"7ebcc80a-06b9-4007-a33d-2f0365694a4d\",\n                            \"name\": \"Board of Equalization Payable\",\n                            \"nominalCode\": \"90\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"26dfb943-b6fb-484b-82b5-85eca47fe07c\",\n                            \"name\": \"Loan Payable\",\n                            \"nominalCode\": \"43\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"109b5a2f-8b10-4953-a388-2934f4f60a6e\",\n                            \"name\": \"Mastercard\",\n                            \"nominalCode\": \"41\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"e11719b8-0ec3-4bd7-943a-72f575ef7890\",\n                            \"name\": \"Notes Payable\",\n                            \"nominalCode\": \"44\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"484ef212-372c-41bc-9a0b-9a3b64c78218\",\n                            \"name\": \"Visa\",\n                            \"nominalCode\": \"42\",\n                            \"category\": \"Liability\"\n                        }, {\n                            \"id\": \"da439b63-4dc2-45c4-9cf8-d4984413403e\",\n                            \"name\": \"Unknown\",\n                            \"description\": \"Amounts that are not attributed to any specific account.\",\n                            \"category\": \"Uncategorised\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/forecasts\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"references\": [{\n                            \"id\": \"58c844ae-2bf1-419e-aeb6-487f6a18c92b\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n]);\n\nclass PayablesHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new CashFlowConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    getPayableById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _payableId = requestParameters[\"payableId\"];\n        if (_payableId === null || _payableId === undefined) {\n            throw new Error('Required parameter payableId was null or undefined when calling getPayableById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/payables/${encodeURIComponent(String(_payableId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getPayableByIdUrl(requestParameters) {\n        const _payableId = requestParameters[\"payableId\"];\n        if (_payableId === null || _payableId === undefined) {\n            throw new Error('Required parameter payableId was null or undefined when calling getPayableById.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/payables/${encodeURIComponent(String(_payableId))}`;\n    }\n    getPayables(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _query = requestParameters[\"query\"];\n        const _statuses = requestParameters[\"statuses\"];\n        const _sort = requestParameters[\"sort\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_query !== undefined && _query !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n        }\n        if (_statuses) {\n            _statuses.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters, element, 'statuses');\n            });\n        }\n        if (_sort !== undefined && _sort !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _sort, 'sort');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/payables`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getPayablesUrl(requestParameters) {\n        const _query = requestParameters[\"query\"];\n        const _statuses = requestParameters[\"statuses\"];\n        const _sort = requestParameters[\"sort\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_query !== undefined && _query !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n        }\n        if (_statuses) {\n            _statuses.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters, element, 'statuses');\n            });\n        }\n        if (_sort !== undefined && _sort !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _sort, 'sort');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/payables${queryString ? `?${queryString}` : ''}`;\n    }\n    putExpectedDateByPayableId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _payableId = requestParameters[\"payableId\"];\n        if (_payableId === null || _payableId === undefined) {\n            throw new Error('Required parameter payableId was null or undefined when calling putExpectedDateByPayableId.');\n        }\n        const _putPaymentRequestExpectedDateRequest = requestParameters[\"putPaymentRequestExpectedDateRequest\"];\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v1/payables/${encodeURIComponent(String(_payableId))}/expected-date`, _putPaymentRequestExpectedDateRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putExpectedDateByPayableIdUrl(requestParameters) {\n        const _payableId = requestParameters[\"payableId\"];\n        if (_payableId === null || _payableId === undefined) {\n            throw new Error('Required parameter payableId was null or undefined when calling putExpectedDateByPayableId.');\n        }\n        const _putPaymentRequestExpectedDateRequest = requestParameters[\"putPaymentRequestExpectedDateRequest\"];\n        return `${this.configuration.basePath}/client-api/v1/payables/${encodeURIComponent(String(_payableId))}/expected-date`;\n    }\n}\nPayablesHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PayablesHttpService, deps: [{ token: i1.HttpClient }, { token: CASH_FLOW_BASE_PATH, optional: true }, { token: CashFlowConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nPayablesHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PayablesHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PayablesHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CASH_FLOW_BASE_PATH]\n                }] }, { type: CashFlowConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst PayablesHttpServiceGetPayableByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/payables/{payableId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"status\": \"Open\",\n                    \"id\": \"c041aa5f-8d64-4c03-b7a4-9f84bb030811\",\n                    \"referenceNumber\": \"SEP00-1\",\n                    \"issueDate\": \"2020-11-05T00:00:00Z\",\n                    \"dueDate\": \"2020-12-02T00:00:00Z\",\n                    \"expectedDate\": \"2020-12-02T00:00:00Z\",\n                    \"dueAmount\": \"770.00000\",\n                    \"paidAmount\": \"0.00000\",\n                    \"totalAmount\": \"770.00000\",\n                    \"currencyCode\": \"USD\",\n                    \"counterparty\": {\n                        \"id\": \"f8dbd544-ea7c-48b1-96a4-fffee569f236\",\n                        \"name\": \"Robertson & Associates\",\n                        \"type\": \"Supplier\"\n                    },\n                    \"chartOfAccounts\": [{\n                            \"id\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n                            \"name\": \"Accounting\",\n                            \"nominalCode\": \"69\",\n                            \"category\": \"Expense\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst PayablesHttpServiceGetPayablesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/payables\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"syncDatetime\": \"2020-01-31T12:12:12Z\",\n                    \"payables\": [{\n                            \"id\": \"1234-5678-9012-3457\",\n                            \"dueDate\": \"2020-01-31T12:12:12Z\",\n                            \"expectedDate\": \"2020-02-24T12:12:12Z\",\n                            \"dueAmount\": \"2.00\",\n                            \"paidAmount\": \"0.00\",\n                            \"totalAmount\": \"2.00\",\n                            \"currencyCode\": \"USD\",\n                            \"referenceNumber\": \"123-bill-number\",\n                            \"issueDate\": \"2020-01-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4444-3333\",\n                                \"name\": \"Richard Brautigan\",\n                                \"type\": \"Supplier\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"4a0a5e6d-bb31-463a-802f-65a7effsfr52\",\n                                    \"name\": \"Unknown\",\n                                    \"category\": \"Uncategorised\"\n                                }],\n                            \"status\": \"Open\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3458\",\n                            \"dueDate\": \"2020-01-31T12:12:12Z\",\n                            \"expectedDate\": \"2020-02-12T12:12:12Z\",\n                            \"dueAmount\": \"10.00\",\n                            \"paidAmount\": \"0.00\",\n                            \"totalAmount\": \"10.00\",\n                            \"currencyCode\": \"CAD\",\n                            \"referenceNumber\": \"125-bill-number\",\n                            \"issueDate\": \"2020-01-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3334\",\n                                \"name\": \"Walt Whitman\",\n                                \"type\": \"Supplier\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"4a0a5e6d-bb31-463a-802f-65a7eff72345\",\n                                    \"name\": \"Accounts Payable\",\n                                    \"category\": \"Asset\"\n                                }, {\n                                    \"id\": \"b068a7bb-917d-4484-8dd6-71cb2a9c9873\",\n                                    \"name\": \"It Consults\",\n                                    \"category\": \"Expenses\"\n                                }],\n                            \"status\": \"Draft\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3459\",\n                            \"dueDate\": \"2019-12-31T12:12:12Z\",\n                            \"expectedDate\": \"2020-03-13T12:12:12Z\",\n                            \"dueAmount\": \"0\",\n                            \"paidAmount\": \"155.00\",\n                            \"totalAmount\": \"155.00\",\n                            \"currencyCode\": \"EUR\",\n                            \"referenceNumber\": \"124-bill-number\",\n                            \"issueDate\": \"2019-10-10T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3335\",\n                                \"name\": \"Paul Celan\",\n                                \"type\": \"Supplier\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"4a0a5e6d-bb31-463a-802f-65a7eff98fh6\",\n                                    \"name\": \"Accounts Payable\",\n                                    \"category\": \"Liability\"\n                                }],\n                            \"status\": \"Paid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3460\",\n                            \"dueDate\": \"2020-01-31T12:12:12Z\",\n                            \"expectedDate\": \"2020-04-15T12:12:12Z\",\n                            \"dueAmount\": \"20020.00\",\n                            \"paidAmount\": \"20000.00\",\n                            \"totalAmount\": \"40020.00\",\n                            \"currencyCode\": \"USD\",\n                            \"referenceNumber\": \"123-bill-number\",\n                            \"issueDate\": \"2020-01-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4444-3336\",\n                                \"name\": \"Sylvia Plath\",\n                                \"type\": \"Supplier\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"b068a7bb-917d-4484-8dd6-71cb2ad8t528\",\n                                    \"name\": \"Accounts Payable\",\n                                    \"category\": \"Liability\"\n                                }, {\n                                    \"id\": \"4a0a5e6d-bb31-463a-802f-65a7ef0nfh67\",\n                                    \"name\": \"It Consults\",\n                                    \"category\": \"Expenses\"\n                                }, {\n                                    \"id\": \"6hfy2e6d-bb31-463a-802f-65a7eff98fh6\",\n                                    \"name\": \"Business Bank Account\",\n                                    \"category\": \"Asset\"\n                                }],\n                            \"status\": \"PartiallyPaid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3461\",\n                            \"dueDate\": \"2020-02-28T12:12:12Z\",\n                            \"expectedDate\": \"2020-05-15T12:12:12Z\",\n                            \"dueAmount\": \"10000.00\",\n                            \"paidAmount\": \"10000.00\",\n                            \"totalAmount\": \"20000.00\",\n                            \"currencyCode\": \"USD\",\n                            \"referenceNumber\": \"125-bill-number\",\n                            \"issueDate\": \"2019-12-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3337\",\n                                \"name\": \"Jeff Beck\",\n                                \"type\": \"Supplier\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"4a0a5e6d-bb31-463a-802f-65a7eff9ufy6\",\n                                    \"name\": \"Accounts Payable\",\n                                    \"category\": \"Liability\"\n                                }],\n                            \"status\": \"PartiallyPaid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3462\",\n                            \"dueDate\": \"2019-12-21T12:12:12Z\",\n                            \"expectedDate\": \"2020-06-17T12:12:12Z\",\n                            \"dueAmount\": \"10000.00\",\n                            \"paidAmount\": \"20000.00\",\n                            \"totalAmount\": \"30000.00\",\n                            \"currencyCode\": \"RUB\",\n                            \"referenceNumber\": \"124-bill-number\",\n                            \"issueDate\": \"2019-11-10T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3338\",\n                                \"name\": \"Boris Ryzhyi\",\n                                \"type\": \"Supplier\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"4a0a5e6d-bb31-463a-802f-78ahy3f98fh6\",\n                                    \"name\": \"Unknown\",\n                                    \"category\": \"Uncategorised\"\n                                }],\n                            \"status\": \"PartiallyPaid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3463\",\n                            \"dueDate\": \"2020-01-19T12:12:12Z\",\n                            \"expectedDate\": \"2019-11-30T12:12:12Z\",\n                            \"dueAmount\": \"0\",\n                            \"paidAmount\": \"400000.00\",\n                            \"totalAmount\": \"400000.00\",\n                            \"currencyCode\": \"CAD\",\n                            \"referenceNumber\": \"125-bill-number\",\n                            \"issueDate\": \"2019-11-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3339\",\n                                \"name\": \"Emily Dickinson\",\n                                \"type\": \"Supplier\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"7hn1f542-bb31-463a-802f-78ahy3f98fh6\",\n                                    \"name\": \"It Consults\",\n                                    \"category\": \"Expenses\"\n                                }],\n                            \"status\": \"Paid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3464\",\n                            \"dueDate\": \"2019-12-26T12:12:12Z\",\n                            \"expectedDate\": \"2020-07-17T12:12:12Z\",\n                            \"dueAmount\": \"2000.00\",\n                            \"paidAmount\": \"8000.00\",\n                            \"totalAmount\": \"10000.00\",\n                            \"currencyCode\": \"EUR\",\n                            \"referenceNumber\": \"124-bill-number\",\n                            \"issueDate\": \"2019-10-15T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3340\",\n                                \"name\": \"Mary Jane\",\n                                \"type\": \"Supplier\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"13bgf542-bb31-463a-802f-78ahy3f98fh6\",\n                                    \"name\": \"It Consults\",\n                                    \"category\": \"Expenses\"\n                                }],\n                            \"status\": \"PartiallyPaid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3465\",\n                            \"dueDate\": \"2019-11-30T12:12:12Z\",\n                            \"expectedDate\": \"2019-11-30T12:12:12Z\",\n                            \"dueAmount\": \"20020.00\",\n                            \"paidAmount\": \"0.00\",\n                            \"totalAmount\": \"20020.00\",\n                            \"currencyCode\": \"USD\",\n                            \"referenceNumber\": \"123-bill-number\",\n                            \"issueDate\": \"2019-10-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4444-3341\",\n                                \"name\": \"William Yeats\",\n                                \"type\": \"Supplier\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"7hn1f542-bb31-463a-802f-1gtr23f98fh6\",\n                                    \"name\": \"Business Bank Account\",\n                                    \"category\": \"Asset\"\n                                }],\n                            \"status\": \"Unknown\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst PayablesHttpServicePutExpectedDateByPayableIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/payables/{payableId}/expected-date\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"status\": \"Open\",\n                    \"id\": \"c041aa5f-8d64-4c03-b7a4-9f84bb030811\",\n                    \"referenceNumber\": \"SEP00-1\",\n                    \"issueDate\": \"2020-11-05T00:00:00Z\",\n                    \"dueDate\": \"2020-12-02T00:00:00Z\",\n                    \"expectedDate\": \"2020-12-02T00:00:00Z\",\n                    \"dueAmount\": \"770.00000\",\n                    \"paidAmount\": \"0.00000\",\n                    \"totalAmount\": \"770.00000\",\n                    \"currencyCode\": \"USD\",\n                    \"counterparty\": {\n                        \"id\": \"f8dbd544-ea7c-48b1-96a4-fffee569f236\",\n                        \"name\": \"Robertson & Associates\",\n                        \"type\": \"Supplier\"\n                    },\n                    \"chartOfAccounts\": [{\n                            \"id\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n                            \"name\": \"Accounting\",\n                            \"nominalCode\": \"69\",\n                            \"category\": \"Expense\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst PayablesHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v1/payables/{payableId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"status\": \"Open\",\n                    \"id\": \"c041aa5f-8d64-4c03-b7a4-9f84bb030811\",\n                    \"referenceNumber\": \"SEP00-1\",\n                    \"issueDate\": \"2020-11-05T00:00:00Z\",\n                    \"dueDate\": \"2020-12-02T00:00:00Z\",\n                    \"expectedDate\": \"2020-12-02T00:00:00Z\",\n                    \"dueAmount\": \"770.00000\",\n                    \"paidAmount\": \"0.00000\",\n                    \"totalAmount\": \"770.00000\",\n                    \"currencyCode\": \"USD\",\n                    \"counterparty\": {\n                        \"id\": \"f8dbd544-ea7c-48b1-96a4-fffee569f236\",\n                        \"name\": \"Robertson & Associates\",\n                        \"type\": \"Supplier\"\n                    },\n                    \"chartOfAccounts\": [{\n                            \"id\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n                            \"name\": \"Accounting\",\n                            \"nominalCode\": \"69\",\n                            \"category\": \"Expense\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/payables\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"syncDatetime\": \"2020-01-31T12:12:12Z\",\n                    \"payables\": [{\n                            \"id\": \"1234-5678-9012-3457\",\n                            \"dueDate\": \"2020-01-31T12:12:12Z\",\n                            \"expectedDate\": \"2020-02-24T12:12:12Z\",\n                            \"dueAmount\": \"2.00\",\n                            \"paidAmount\": \"0.00\",\n                            \"totalAmount\": \"2.00\",\n                            \"currencyCode\": \"USD\",\n                            \"referenceNumber\": \"123-bill-number\",\n                            \"issueDate\": \"2020-01-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4444-3333\",\n                                \"name\": \"Richard Brautigan\",\n                                \"type\": \"Supplier\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"4a0a5e6d-bb31-463a-802f-65a7effsfr52\",\n                                    \"name\": \"Unknown\",\n                                    \"category\": \"Uncategorised\"\n                                }],\n                            \"status\": \"Open\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3458\",\n                            \"dueDate\": \"2020-01-31T12:12:12Z\",\n                            \"expectedDate\": \"2020-02-12T12:12:12Z\",\n                            \"dueAmount\": \"10.00\",\n                            \"paidAmount\": \"0.00\",\n                            \"totalAmount\": \"10.00\",\n                            \"currencyCode\": \"CAD\",\n                            \"referenceNumber\": \"125-bill-number\",\n                            \"issueDate\": \"2020-01-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3334\",\n                                \"name\": \"Walt Whitman\",\n                                \"type\": \"Supplier\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"4a0a5e6d-bb31-463a-802f-65a7eff72345\",\n                                    \"name\": \"Accounts Payable\",\n                                    \"category\": \"Asset\"\n                                }, {\n                                    \"id\": \"b068a7bb-917d-4484-8dd6-71cb2a9c9873\",\n                                    \"name\": \"It Consults\",\n                                    \"category\": \"Expenses\"\n                                }],\n                            \"status\": \"Draft\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3459\",\n                            \"dueDate\": \"2019-12-31T12:12:12Z\",\n                            \"expectedDate\": \"2020-03-13T12:12:12Z\",\n                            \"dueAmount\": \"0\",\n                            \"paidAmount\": \"155.00\",\n                            \"totalAmount\": \"155.00\",\n                            \"currencyCode\": \"EUR\",\n                            \"referenceNumber\": \"124-bill-number\",\n                            \"issueDate\": \"2019-10-10T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3335\",\n                                \"name\": \"Paul Celan\",\n                                \"type\": \"Supplier\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"4a0a5e6d-bb31-463a-802f-65a7eff98fh6\",\n                                    \"name\": \"Accounts Payable\",\n                                    \"category\": \"Liability\"\n                                }],\n                            \"status\": \"Paid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3460\",\n                            \"dueDate\": \"2020-01-31T12:12:12Z\",\n                            \"expectedDate\": \"2020-04-15T12:12:12Z\",\n                            \"dueAmount\": \"20020.00\",\n                            \"paidAmount\": \"20000.00\",\n                            \"totalAmount\": \"40020.00\",\n                            \"currencyCode\": \"USD\",\n                            \"referenceNumber\": \"123-bill-number\",\n                            \"issueDate\": \"2020-01-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4444-3336\",\n                                \"name\": \"Sylvia Plath\",\n                                \"type\": \"Supplier\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"b068a7bb-917d-4484-8dd6-71cb2ad8t528\",\n                                    \"name\": \"Accounts Payable\",\n                                    \"category\": \"Liability\"\n                                }, {\n                                    \"id\": \"4a0a5e6d-bb31-463a-802f-65a7ef0nfh67\",\n                                    \"name\": \"It Consults\",\n                                    \"category\": \"Expenses\"\n                                }, {\n                                    \"id\": \"6hfy2e6d-bb31-463a-802f-65a7eff98fh6\",\n                                    \"name\": \"Business Bank Account\",\n                                    \"category\": \"Asset\"\n                                }],\n                            \"status\": \"PartiallyPaid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3461\",\n                            \"dueDate\": \"2020-02-28T12:12:12Z\",\n                            \"expectedDate\": \"2020-05-15T12:12:12Z\",\n                            \"dueAmount\": \"10000.00\",\n                            \"paidAmount\": \"10000.00\",\n                            \"totalAmount\": \"20000.00\",\n                            \"currencyCode\": \"USD\",\n                            \"referenceNumber\": \"125-bill-number\",\n                            \"issueDate\": \"2019-12-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3337\",\n                                \"name\": \"Jeff Beck\",\n                                \"type\": \"Supplier\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"4a0a5e6d-bb31-463a-802f-65a7eff9ufy6\",\n                                    \"name\": \"Accounts Payable\",\n                                    \"category\": \"Liability\"\n                                }],\n                            \"status\": \"PartiallyPaid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3462\",\n                            \"dueDate\": \"2019-12-21T12:12:12Z\",\n                            \"expectedDate\": \"2020-06-17T12:12:12Z\",\n                            \"dueAmount\": \"10000.00\",\n                            \"paidAmount\": \"20000.00\",\n                            \"totalAmount\": \"30000.00\",\n                            \"currencyCode\": \"RUB\",\n                            \"referenceNumber\": \"124-bill-number\",\n                            \"issueDate\": \"2019-11-10T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3338\",\n                                \"name\": \"Boris Ryzhyi\",\n                                \"type\": \"Supplier\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"4a0a5e6d-bb31-463a-802f-78ahy3f98fh6\",\n                                    \"name\": \"Unknown\",\n                                    \"category\": \"Uncategorised\"\n                                }],\n                            \"status\": \"PartiallyPaid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3463\",\n                            \"dueDate\": \"2020-01-19T12:12:12Z\",\n                            \"expectedDate\": \"2019-11-30T12:12:12Z\",\n                            \"dueAmount\": \"0\",\n                            \"paidAmount\": \"400000.00\",\n                            \"totalAmount\": \"400000.00\",\n                            \"currencyCode\": \"CAD\",\n                            \"referenceNumber\": \"125-bill-number\",\n                            \"issueDate\": \"2019-11-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3339\",\n                                \"name\": \"Emily Dickinson\",\n                                \"type\": \"Supplier\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"7hn1f542-bb31-463a-802f-78ahy3f98fh6\",\n                                    \"name\": \"It Consults\",\n                                    \"category\": \"Expenses\"\n                                }],\n                            \"status\": \"Paid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3464\",\n                            \"dueDate\": \"2019-12-26T12:12:12Z\",\n                            \"expectedDate\": \"2020-07-17T12:12:12Z\",\n                            \"dueAmount\": \"2000.00\",\n                            \"paidAmount\": \"8000.00\",\n                            \"totalAmount\": \"10000.00\",\n                            \"currencyCode\": \"EUR\",\n                            \"referenceNumber\": \"124-bill-number\",\n                            \"issueDate\": \"2019-10-15T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3340\",\n                                \"name\": \"Mary Jane\",\n                                \"type\": \"Supplier\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"13bgf542-bb31-463a-802f-78ahy3f98fh6\",\n                                    \"name\": \"It Consults\",\n                                    \"category\": \"Expenses\"\n                                }],\n                            \"status\": \"PartiallyPaid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3465\",\n                            \"dueDate\": \"2019-11-30T12:12:12Z\",\n                            \"expectedDate\": \"2019-11-30T12:12:12Z\",\n                            \"dueAmount\": \"20020.00\",\n                            \"paidAmount\": \"0.00\",\n                            \"totalAmount\": \"20020.00\",\n                            \"currencyCode\": \"USD\",\n                            \"referenceNumber\": \"123-bill-number\",\n                            \"issueDate\": \"2019-10-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4444-3341\",\n                                \"name\": \"William Yeats\",\n                                \"type\": \"Supplier\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"7hn1f542-bb31-463a-802f-1gtr23f98fh6\",\n                                    \"name\": \"Business Bank Account\",\n                                    \"category\": \"Asset\"\n                                }],\n                            \"status\": \"Unknown\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/payables/{payableId}/expected-date\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"status\": \"Open\",\n                    \"id\": \"c041aa5f-8d64-4c03-b7a4-9f84bb030811\",\n                    \"referenceNumber\": \"SEP00-1\",\n                    \"issueDate\": \"2020-11-05T00:00:00Z\",\n                    \"dueDate\": \"2020-12-02T00:00:00Z\",\n                    \"expectedDate\": \"2020-12-02T00:00:00Z\",\n                    \"dueAmount\": \"770.00000\",\n                    \"paidAmount\": \"0.00000\",\n                    \"totalAmount\": \"770.00000\",\n                    \"currencyCode\": \"USD\",\n                    \"counterparty\": {\n                        \"id\": \"f8dbd544-ea7c-48b1-96a4-fffee569f236\",\n                        \"name\": \"Robertson & Associates\",\n                        \"type\": \"Supplier\"\n                    },\n                    \"chartOfAccounts\": [{\n                            \"id\": \"8c48192a-723f-4f76-b3a7-c2be76c3bdc8\",\n                            \"name\": \"Accounting\",\n                            \"nominalCode\": \"69\",\n                            \"category\": \"Expense\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n]);\n\nclass ReceivablesHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new CashFlowConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    getReceivableById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _receivableId = requestParameters[\"receivableId\"];\n        if (_receivableId === null || _receivableId === undefined) {\n            throw new Error('Required parameter receivableId was null or undefined when calling getReceivableById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/receivables/${encodeURIComponent(String(_receivableId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getReceivableByIdUrl(requestParameters) {\n        const _receivableId = requestParameters[\"receivableId\"];\n        if (_receivableId === null || _receivableId === undefined) {\n            throw new Error('Required parameter receivableId was null or undefined when calling getReceivableById.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/receivables/${encodeURIComponent(String(_receivableId))}`;\n    }\n    getReceivables(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _query = requestParameters[\"query\"];\n        const _statuses = requestParameters[\"statuses\"];\n        const _sort = requestParameters[\"sort\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_query !== undefined && _query !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n        }\n        if (_statuses) {\n            _statuses.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters, element, 'statuses');\n            });\n        }\n        if (_sort !== undefined && _sort !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _sort, 'sort');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/receivables`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getReceivablesUrl(requestParameters) {\n        const _query = requestParameters[\"query\"];\n        const _statuses = requestParameters[\"statuses\"];\n        const _sort = requestParameters[\"sort\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_query !== undefined && _query !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n        }\n        if (_statuses) {\n            _statuses.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters, element, 'statuses');\n            });\n        }\n        if (_sort !== undefined && _sort !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _sort, 'sort');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/receivables${queryString ? `?${queryString}` : ''}`;\n    }\n    putExpectedDateByReceivableId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _receivableId = requestParameters[\"receivableId\"];\n        if (_receivableId === null || _receivableId === undefined) {\n            throw new Error('Required parameter receivableId was null or undefined when calling putExpectedDateByReceivableId.');\n        }\n        const _putPaymentRequestExpectedDateRequest = requestParameters[\"putPaymentRequestExpectedDateRequest\"];\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v1/receivables/${encodeURIComponent(String(_receivableId))}/expected-date`, _putPaymentRequestExpectedDateRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putExpectedDateByReceivableIdUrl(requestParameters) {\n        const _receivableId = requestParameters[\"receivableId\"];\n        if (_receivableId === null || _receivableId === undefined) {\n            throw new Error('Required parameter receivableId was null or undefined when calling putExpectedDateByReceivableId.');\n        }\n        const _putPaymentRequestExpectedDateRequest = requestParameters[\"putPaymentRequestExpectedDateRequest\"];\n        return `${this.configuration.basePath}/client-api/v1/receivables/${encodeURIComponent(String(_receivableId))}/expected-date`;\n    }\n}\nReceivablesHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ReceivablesHttpService, deps: [{ token: i1.HttpClient }, { token: CASH_FLOW_BASE_PATH, optional: true }, { token: CashFlowConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nReceivablesHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ReceivablesHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ReceivablesHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CASH_FLOW_BASE_PATH]\n                }] }, { type: CashFlowConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst ReceivablesHttpServiceGetReceivableByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/receivables/{receivableId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"status\": \"Submitted\",\n                    \"id\": \"08849602-262b-40b4-a7be-ecd9db00d048\",\n                    \"referenceNumber\": \"1050\",\n                    \"issueDate\": \"2020-08-13T00:00:00Z\",\n                    \"dueDate\": \"2020-12-02T00:00:00Z\",\n                    \"expectedDate\": \"2020-12-02T00:00:00Z\",\n                    \"dueAmount\": \"9055.30000\",\n                    \"paidAmount\": \"0.00000\",\n                    \"totalAmount\": \"9055.30000\",\n                    \"currencyCode\": \"USD\",\n                    \"counterparty\": {\n                        \"id\": \"85c069ea-4f65-45de-9e56-a3f3592e0db7\",\n                        \"name\": \"Cool Cars\",\n                        \"type\": \"Customer\"\n                    },\n                    \"chartOfAccounts\": [{\n                            \"id\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n                            \"name\": \"Design income\",\n                            \"nominalCode\": \"82\",\n                            \"category\": \"Income\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst ReceivablesHttpServiceGetReceivablesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/receivables\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"syncDatetime\": \"2020-01-31T12:12:12Z\",\n                    \"receivables\": [{\n                            \"id\": \"1234-5678-9012-3457\",\n                            \"dueDate\": \"2020-01-31T12:12:12Z\",\n                            \"expectedDate\": \"2020-02-13T12:12:12Z\",\n                            \"dueAmount\": \"2.00\",\n                            \"paidAmount\": \"0.00\",\n                            \"totalAmount\": \"2.00\",\n                            \"currencyCode\": \"USD\",\n                            \"referenceNumber\": \"123-invoice-number\",\n                            \"issueDate\": \"2020-01-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4444-3333\",\n                                \"name\": \"Richard Brautigan\",\n                                \"type\": \"Customer\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"4a0a5e6d-bb31-463a-802f-65a7eff70536\",\n                                    \"name\": \"Sales\",\n                                    \"category\": \"Income\"\n                                }, {\n                                    \"id\": \"b068a7bb-917d-4484-8dd6-71cb2a9c9723\",\n                                    \"name\": \"Accounts Receivable\",\n                                    \"category\": \"Asset\"\n                                }],\n                            \"status\": \"Draft\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3458\",\n                            \"dueDate\": \"2020-01-31T12:12:12Z\",\n                            \"expectedDate\": \"2020-03-14T12:12:12Z\",\n                            \"dueAmount\": \"10.00\",\n                            \"paidAmount\": \"0.00\",\n                            \"totalAmount\": \"10.00\",\n                            \"currencyCode\": \"CAD\",\n                            \"referenceNumber\": \"125-invoice-number\",\n                            \"issueDate\": \"2020-01-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3334\",\n                                \"name\": \"Walt Whitman\",\n                                \"type\": \"Customer\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"2th355ar-bb31-463a-802f-65a7eff70536\",\n                                    \"name\": \"Unknown\",\n                                    \"category\": \"Uncategorised\"\n                                }, {\n                                    \"id\": \"abr256dr-917d-4484-8dd6-71cb2a9c9723\",\n                                    \"name\": \"Accounts Receivable\",\n                                    \"category\": \"Asset\"\n                                }, {\n                                    \"id\": \"4a0a5e6d-bb31-463a-802f-1hnf56at0536\",\n                                    \"name\": \"Sales\",\n                                    \"category\": \"Income\"\n                                }],\n                            \"status\": \"Submitted\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3459\",\n                            \"dueDate\": \"2019-12-31T12:12:12Z\",\n                            \"expectedDate\": \"2020-04-14T12:12:12Z\",\n                            \"dueAmount\": \"155.00\",\n                            \"paidAmount\": \"145.00\",\n                            \"totalAmount\": \"300.00\",\n                            \"currencyCode\": \"EUR\",\n                            \"referenceNumber\": \"124-invoice-number\",\n                            \"issueDate\": \"2019-10-10T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3335\",\n                                \"name\": \"Paul Celan\",\n                                \"type\": \"Customer\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"3gt6jka1-bb31-463a-802f-65a7eff70536\",\n                                    \"name\": \"Sales\",\n                                    \"category\": \"Income\"\n                                }],\n                            \"status\": \"PartiallyPaid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3460\",\n                            \"dueDate\": \"2020-01-31T12:12:12Z\",\n                            \"expectedDate\": \"2020-05-15T12:12:12Z\",\n                            \"dueAmount\": \"20020.00\",\n                            \"paidAmount\": \"0.00\",\n                            \"totalAmount\": \"20020.00\",\n                            \"currencyCode\": \"USD\",\n                            \"referenceNumber\": \"123-invoice-number\",\n                            \"issueDate\": \"2020-01-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4444-3336\",\n                                \"name\": \"Sylvia Plath\",\n                                \"type\": \"Customer\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"bg2ya541-bb31-463a-802f-65a7eff70536\",\n                                    \"name\": \"Unknown\",\n                                    \"category\": \"Uncategorised\"\n                                }],\n                            \"status\": \"Submitted\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3461\",\n                            \"dueDate\": \"2020-02-28T12:12:12Z\",\n                            \"expectedDate\": \"2020-06-16T12:12:12Z\",\n                            \"dueAmount\": \"5000.00\",\n                            \"paidAmount\": \"5000.00\",\n                            \"totalAmount\": \"10000.00\",\n                            \"currencyCode\": \"USD\",\n                            \"referenceNumber\": \"125-invoice-number\",\n                            \"issueDate\": \"2019-12-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3337\",\n                                \"name\": \"Jeff Beck\",\n                                \"type\": \"Customer\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"aa54f12y-bb31-463a-802f-65a7eff70536\",\n                                    \"name\": \"Accounts Receivable\",\n                                    \"category\": \"Asset\"\n                                }],\n                            \"status\": \"PartiallyPaid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3462\",\n                            \"dueDate\": \"2019-12-21T12:12:12Z\",\n                            \"expectedDate\": \"2020-07-17T12:12:12Z\",\n                            \"dueAmount\": \"0\",\n                            \"paidAmount\": \"10000.00\",\n                            \"totalAmount\": \"10000.00\",\n                            \"currencyCode\": \"RUB\",\n                            \"referenceNumber\": \"124-invoice-number\",\n                            \"issueDate\": \"2019-11-10T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3338\",\n                                \"name\": \"Boris Ryzhyi\",\n                                \"type\": \"Customer\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"h1t45dre-bb31-463a-802f-65a7eff70536\",\n                                    \"name\": \"Accounts Receivable\",\n                                    \"category\": \"Asset\"\n                                }],\n                            \"status\": \"Paid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3463\",\n                            \"dueDate\": \"2020-01-19T12:12:12Z\",\n                            \"expectedDate\": \"2020-08-18T12:12:12Z\",\n                            \"dueAmount\": \"120000.00\",\n                            \"paidAmount\": \"0.00\",\n                            \"totalAmount\": \"120000.00\",\n                            \"currencyCode\": \"CAD\",\n                            \"referenceNumber\": \"125-invoice-number\",\n                            \"issueDate\": \"2019-11-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3339\",\n                                \"name\": \"Emily Dickinson\",\n                                \"type\": \"Customer\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"11bg3rp7-bb31-463a-802f-65a7ef1htr56\",\n                                    \"name\": \"Sales\",\n                                    \"category\": \"Income\"\n                                }],\n                            \"status\": \"Submitted\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3464\",\n                            \"dueDate\": \"2019-12-26T12:12:12Z\",\n                            \"expectedDate\": \"2020-09-19T12:12:12Z\",\n                            \"dueAmount\": \"10000.00\",\n                            \"paidAmount\": \"0.00\",\n                            \"totalAmount\": \"10000.00\",\n                            \"currencyCode\": \"EUR\",\n                            \"referenceNumber\": \"124-invoice-number\",\n                            \"issueDate\": \"2019-10-15T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3340\",\n                                \"name\": \"Mary Jane\",\n                                \"type\": \"Customer\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"aa5gpm67-bb31-463a-802f-65a7ef1ht1gt\",\n                                    \"name\": \"Sales\",\n                                    \"category\": \"Income\"\n                                }, {\n                                    \"id\": \"ba784pt1-bb31-463a-802f-65a7ef1htr56\",\n                                    \"name\": \"Unknown\",\n                                    \"category\": \"Uncategorised\"\n                                }],\n                            \"status\": \"PartiallyPaid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3465\",\n                            \"dueDate\": \"2019-11-30T12:12:12Z\",\n                            \"expectedDate\": \"2020-10-20T12:12:12Z\",\n                            \"dueAmount\": \"20020.00\",\n                            \"paidAmount\": \"0.00\",\n                            \"totalAmount\": \"20020.00\",\n                            \"currencyCode\": \"USD\",\n                            \"referenceNumber\": \"123-invoice-number\",\n                            \"issueDate\": \"2019-10-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4444-3341\",\n                                \"name\": \"William Yeats\",\n                                \"type\": \"Customer\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"ee79mn61-bb31-463a-802f-65a7ef1htr56\",\n                                    \"name\": \"Sales\",\n                                    \"category\": \"Income\"\n                                }],\n                            \"status\": \"Draft\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst ReceivablesHttpServicePutExpectedDateByReceivableIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/receivables/{receivableId}/expected-date\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst ReceivablesHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v1/receivables/{receivableId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"status\": \"Submitted\",\n                    \"id\": \"08849602-262b-40b4-a7be-ecd9db00d048\",\n                    \"referenceNumber\": \"1050\",\n                    \"issueDate\": \"2020-08-13T00:00:00Z\",\n                    \"dueDate\": \"2020-12-02T00:00:00Z\",\n                    \"expectedDate\": \"2020-12-02T00:00:00Z\",\n                    \"dueAmount\": \"9055.30000\",\n                    \"paidAmount\": \"0.00000\",\n                    \"totalAmount\": \"9055.30000\",\n                    \"currencyCode\": \"USD\",\n                    \"counterparty\": {\n                        \"id\": \"85c069ea-4f65-45de-9e56-a3f3592e0db7\",\n                        \"name\": \"Cool Cars\",\n                        \"type\": \"Customer\"\n                    },\n                    \"chartOfAccounts\": [{\n                            \"id\": \"f934846d-8461-44dd-89be-3d4cc7b59a53\",\n                            \"name\": \"Design income\",\n                            \"nominalCode\": \"82\",\n                            \"category\": \"Income\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/receivables\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"syncDatetime\": \"2020-01-31T12:12:12Z\",\n                    \"receivables\": [{\n                            \"id\": \"1234-5678-9012-3457\",\n                            \"dueDate\": \"2020-01-31T12:12:12Z\",\n                            \"expectedDate\": \"2020-02-13T12:12:12Z\",\n                            \"dueAmount\": \"2.00\",\n                            \"paidAmount\": \"0.00\",\n                            \"totalAmount\": \"2.00\",\n                            \"currencyCode\": \"USD\",\n                            \"referenceNumber\": \"123-invoice-number\",\n                            \"issueDate\": \"2020-01-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4444-3333\",\n                                \"name\": \"Richard Brautigan\",\n                                \"type\": \"Customer\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"4a0a5e6d-bb31-463a-802f-65a7eff70536\",\n                                    \"name\": \"Sales\",\n                                    \"category\": \"Income\"\n                                }, {\n                                    \"id\": \"b068a7bb-917d-4484-8dd6-71cb2a9c9723\",\n                                    \"name\": \"Accounts Receivable\",\n                                    \"category\": \"Asset\"\n                                }],\n                            \"status\": \"Draft\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3458\",\n                            \"dueDate\": \"2020-01-31T12:12:12Z\",\n                            \"expectedDate\": \"2020-03-14T12:12:12Z\",\n                            \"dueAmount\": \"10.00\",\n                            \"paidAmount\": \"0.00\",\n                            \"totalAmount\": \"10.00\",\n                            \"currencyCode\": \"CAD\",\n                            \"referenceNumber\": \"125-invoice-number\",\n                            \"issueDate\": \"2020-01-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3334\",\n                                \"name\": \"Walt Whitman\",\n                                \"type\": \"Customer\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"2th355ar-bb31-463a-802f-65a7eff70536\",\n                                    \"name\": \"Unknown\",\n                                    \"category\": \"Uncategorised\"\n                                }, {\n                                    \"id\": \"abr256dr-917d-4484-8dd6-71cb2a9c9723\",\n                                    \"name\": \"Accounts Receivable\",\n                                    \"category\": \"Asset\"\n                                }, {\n                                    \"id\": \"4a0a5e6d-bb31-463a-802f-1hnf56at0536\",\n                                    \"name\": \"Sales\",\n                                    \"category\": \"Income\"\n                                }],\n                            \"status\": \"Submitted\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3459\",\n                            \"dueDate\": \"2019-12-31T12:12:12Z\",\n                            \"expectedDate\": \"2020-04-14T12:12:12Z\",\n                            \"dueAmount\": \"155.00\",\n                            \"paidAmount\": \"145.00\",\n                            \"totalAmount\": \"300.00\",\n                            \"currencyCode\": \"EUR\",\n                            \"referenceNumber\": \"124-invoice-number\",\n                            \"issueDate\": \"2019-10-10T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3335\",\n                                \"name\": \"Paul Celan\",\n                                \"type\": \"Customer\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"3gt6jka1-bb31-463a-802f-65a7eff70536\",\n                                    \"name\": \"Sales\",\n                                    \"category\": \"Income\"\n                                }],\n                            \"status\": \"PartiallyPaid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3460\",\n                            \"dueDate\": \"2020-01-31T12:12:12Z\",\n                            \"expectedDate\": \"2020-05-15T12:12:12Z\",\n                            \"dueAmount\": \"20020.00\",\n                            \"paidAmount\": \"0.00\",\n                            \"totalAmount\": \"20020.00\",\n                            \"currencyCode\": \"USD\",\n                            \"referenceNumber\": \"123-invoice-number\",\n                            \"issueDate\": \"2020-01-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4444-3336\",\n                                \"name\": \"Sylvia Plath\",\n                                \"type\": \"Customer\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"bg2ya541-bb31-463a-802f-65a7eff70536\",\n                                    \"name\": \"Unknown\",\n                                    \"category\": \"Uncategorised\"\n                                }],\n                            \"status\": \"Submitted\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3461\",\n                            \"dueDate\": \"2020-02-28T12:12:12Z\",\n                            \"expectedDate\": \"2020-06-16T12:12:12Z\",\n                            \"dueAmount\": \"5000.00\",\n                            \"paidAmount\": \"5000.00\",\n                            \"totalAmount\": \"10000.00\",\n                            \"currencyCode\": \"USD\",\n                            \"referenceNumber\": \"125-invoice-number\",\n                            \"issueDate\": \"2019-12-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3337\",\n                                \"name\": \"Jeff Beck\",\n                                \"type\": \"Customer\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"aa54f12y-bb31-463a-802f-65a7eff70536\",\n                                    \"name\": \"Accounts Receivable\",\n                                    \"category\": \"Asset\"\n                                }],\n                            \"status\": \"PartiallyPaid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3462\",\n                            \"dueDate\": \"2019-12-21T12:12:12Z\",\n                            \"expectedDate\": \"2020-07-17T12:12:12Z\",\n                            \"dueAmount\": \"0\",\n                            \"paidAmount\": \"10000.00\",\n                            \"totalAmount\": \"10000.00\",\n                            \"currencyCode\": \"RUB\",\n                            \"referenceNumber\": \"124-invoice-number\",\n                            \"issueDate\": \"2019-11-10T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3338\",\n                                \"name\": \"Boris Ryzhyi\",\n                                \"type\": \"Customer\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"h1t45dre-bb31-463a-802f-65a7eff70536\",\n                                    \"name\": \"Accounts Receivable\",\n                                    \"category\": \"Asset\"\n                                }],\n                            \"status\": \"Paid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3463\",\n                            \"dueDate\": \"2020-01-19T12:12:12Z\",\n                            \"expectedDate\": \"2020-08-18T12:12:12Z\",\n                            \"dueAmount\": \"120000.00\",\n                            \"paidAmount\": \"0.00\",\n                            \"totalAmount\": \"120000.00\",\n                            \"currencyCode\": \"CAD\",\n                            \"referenceNumber\": \"125-invoice-number\",\n                            \"issueDate\": \"2019-11-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3339\",\n                                \"name\": \"Emily Dickinson\",\n                                \"type\": \"Customer\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"11bg3rp7-bb31-463a-802f-65a7ef1htr56\",\n                                    \"name\": \"Sales\",\n                                    \"category\": \"Income\"\n                                }],\n                            \"status\": \"Submitted\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3464\",\n                            \"dueDate\": \"2019-12-26T12:12:12Z\",\n                            \"expectedDate\": \"2020-09-19T12:12:12Z\",\n                            \"dueAmount\": \"10000.00\",\n                            \"paidAmount\": \"0.00\",\n                            \"totalAmount\": \"10000.00\",\n                            \"currencyCode\": \"EUR\",\n                            \"referenceNumber\": \"124-invoice-number\",\n                            \"issueDate\": \"2019-10-15T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4443-3340\",\n                                \"name\": \"Mary Jane\",\n                                \"type\": \"Customer\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"aa5gpm67-bb31-463a-802f-65a7ef1ht1gt\",\n                                    \"name\": \"Sales\",\n                                    \"category\": \"Income\"\n                                }, {\n                                    \"id\": \"ba784pt1-bb31-463a-802f-65a7ef1htr56\",\n                                    \"name\": \"Unknown\",\n                                    \"category\": \"Uncategorised\"\n                                }],\n                            \"status\": \"PartiallyPaid\"\n                        }, {\n                            \"id\": \"1234-5678-9012-3465\",\n                            \"dueDate\": \"2019-11-30T12:12:12Z\",\n                            \"expectedDate\": \"2020-10-20T12:12:12Z\",\n                            \"dueAmount\": \"20020.00\",\n                            \"paidAmount\": \"0.00\",\n                            \"totalAmount\": \"20020.00\",\n                            \"currencyCode\": \"USD\",\n                            \"referenceNumber\": \"123-invoice-number\",\n                            \"issueDate\": \"2019-10-20T12:12:12Z\",\n                            \"counterparty\": {\n                                \"id\": \"1234-4444-4444-3341\",\n                                \"name\": \"William Yeats\",\n                                \"type\": \"Customer\"\n                            },\n                            \"chartOfAccounts\": [{\n                                    \"id\": \"ee79mn61-bb31-463a-802f-65a7ef1htr56\",\n                                    \"name\": \"Sales\",\n                                    \"category\": \"Income\"\n                                }],\n                            \"status\": \"Draft\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/receivables/{receivableId}/expected-date\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n]);\n\nclass SmeHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new CashFlowConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    getAccountingAuthorization(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/sme/accounting-authorization`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getAccountingAuthorizationUrl() {\n        return `${this.configuration.basePath}/client-api/v1/sme/accounting-authorization`;\n    }\n    getSme(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/sme`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getSmeUrl() {\n        return `${this.configuration.basePath}/client-api/v1/sme`;\n    }\n    postSme(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _presentationCreateSmeRequest = requestParameters[\"presentationCreateSmeRequest\"];\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v1/sme`, _presentationCreateSmeRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postSmeUrl(requestParameters) {\n        const _presentationCreateSmeRequest = requestParameters[\"presentationCreateSmeRequest\"];\n        return `${this.configuration.basePath}/client-api/v1/sme`;\n    }\n}\nSmeHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: SmeHttpService, deps: [{ token: i1.HttpClient }, { token: CASH_FLOW_BASE_PATH, optional: true }, { token: CashFlowConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nSmeHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: SmeHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: SmeHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CASH_FLOW_BASE_PATH]\n                }] }, { type: CashFlowConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst SmeHttpServiceGetAccountingAuthorizationMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/sme/accounting-authorization\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"type\": \"OAuth\",\n                    \"authorizationUrl\": \"https://authorization.url\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst SmeHttpServiceGetSmeMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/sme\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"name\": \"Test SME\",\n                    \"accountingPlatformId\": \"quickbooks\",\n                    \"accountingAuthorizationStatus\": \"Authorized\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst SmeHttpServicePostSmeMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/sme\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"name\": \"Test SME\",\n                    \"accountingPlatformId\": \"quickbooks\",\n                    \"accountingAuthorizationStatus\": \"Authorized\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"accountingPlatformId\": \"accountingPlatformId\",\n                    \"name\": \"name\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst SmeHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v1/sme/accounting-authorization\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"type\": \"OAuth\",\n                    \"authorizationUrl\": \"https://authorization.url\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/sme\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"name\": \"Test SME\",\n                    \"accountingPlatformId\": \"quickbooks\",\n                    \"accountingAuthorizationStatus\": \"Authorized\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/sme\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"name\": \"Test SME\",\n                    \"accountingPlatformId\": \"quickbooks\",\n                    \"accountingAuthorizationStatus\": \"Authorized\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"accountingPlatformId\": \"accountingPlatformId\",\n                    \"name\": \"name\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n]);\n\nexport { AccountingPlatformsHttpService, AccountingPlatformsHttpServiceGetAccountingPlatformsMocksProvider, AccountingPlatformsHttpServiceMocksProvider, CASH_FLOW_BASE_PATH, COLLECTION_FORMATS, CONFIG_TOKEN, CashFlowApiModule, CashFlowConfiguration, ChartOfAccountsHttpService, ChartOfAccountsHttpServiceGetChartOfAccountsMocksProvider, ChartOfAccountsHttpServiceMocksProvider, DefaultCurrencyHttpService, DefaultCurrencyHttpServiceGetDefaultCurrencyMocksProvider, DefaultCurrencyHttpServiceMocksProvider, ForecastConfigurationsHttpService, ForecastConfigurationsHttpServiceGetForecastConfigurationByIdMocksProvider, ForecastConfigurationsHttpServiceGetForecastConfigurationsMocksProvider, ForecastConfigurationsHttpServiceMocksProvider, ForecastConfigurationsHttpServicePostForecastConfigurationsMocksProvider, ForecastConfigurationsHttpServicePutForecastConfigurationByIdMocksProvider, ForecastsHttpService, ForecastsHttpServiceGetForecastByIdMocksProvider, ForecastsHttpServiceGetForecastsMocksProvider, ForecastsHttpServiceMocksProvider, PayablesHttpService, PayablesHttpServiceGetPayableByIdMocksProvider, PayablesHttpServiceGetPayablesMocksProvider, PayablesHttpServiceMocksProvider, PayablesHttpServicePutExpectedDateByPayableIdMocksProvider, PresentationAccountCategory, PresentationAuthorizationStatus, PresentationCounterpartyType, PresentationPayableStatus, PresentationReceivableStatus, ReceivablesHttpService, ReceivablesHttpServiceGetReceivableByIdMocksProvider, ReceivablesHttpServiceGetReceivablesMocksProvider, ReceivablesHttpServiceMocksProvider, ReceivablesHttpServicePutExpectedDateByReceivableIdMocksProvider, SmeHttpService, SmeHttpServiceGetAccountingAuthorizationMocksProvider, SmeHttpServiceGetSmeMocksProvider, SmeHttpServiceMocksProvider, SmeHttpServicePostSmeMocksProvider };\n"]},"metadata":{},"sourceType":"module"}