{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\nconst DeviceStatus = {\n  ENABLED: 'ENABLED',\n  DISABLED: 'DISABLED',\n  REMOVED: 'REMOVED'\n};\nconst Platform = {\n  Ios: 'ios',\n  Android: 'android',\n  Huawei: 'huawei'\n};\nconst DEVICE_BASE_PATH = new InjectionToken('DEVICE_BASE_PATH');\nconst COLLECTION_FORMATS = {\n  'csv': ',',\n  'tsv': '   ',\n  'ssv': ' ',\n  'pipes': '|'\n};\n\nclass DeviceConfiguration {\n  constructor(configurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n    this.encoder = configurationParameters.encoder;\n\n    if (configurationParameters.credentials) {\n      this.credentials = configurationParameters.credentials;\n    } else {\n      this.credentials = {};\n    }\n  }\n\n  selectHeaderContentType(contentTypes) {\n    if (contentTypes.length === 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n\n    return type;\n  }\n\n  selectHeaderAccept(accepts) {\n    if (accepts.length === 0) {\n      return undefined;\n    }\n\n    const type = accepts.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return accepts[0];\n    }\n\n    return type;\n  }\n\n  isJsonMime(mime) {\n    const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n    return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n  }\n\n  lookupCredential(key) {\n    const value = this.credentials[key];\n    return typeof value === 'function' ? value() : value;\n  }\n\n}\n\nconst CONFIG_TOKEN = new InjectionToken('api-data-module DeviceConfiguration');\n\nclass DeviceApiModule {\n  constructor(parentModule, http, dataModulesManager, config) {\n    if (parentModule) {\n      throw new Error('DeviceApiModule is already loaded. Import in your base AppModule only.');\n    }\n\n    if (!http) {\n      throw new Error('You need to import the HttpClientModule in your AppModule! \\n' + 'See also https://github.com/angular/angular/issues/20575');\n    }\n\n    if (dataModulesManager) {\n      dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n        apiRoot: '',\n        servicePath: config.basePath || '',\n        headers: {}\n      });\n    }\n  }\n\n  static forRoot(configurationFactory) {\n    return {\n      ngModule: DeviceApiModule,\n      providers: [{\n        provide: DeviceConfiguration,\n        useFactory: configurationFactory\n      }]\n    };\n  }\n\n}\n\nDeviceApiModule.ɵfac = function DeviceApiModule_Factory(t) {\n  return new (t || DeviceApiModule)(i0.ɵɵinject(DeviceApiModule, 12), i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DataModulesManager, 8), i0.ɵɵinject(DeviceConfiguration));\n};\n\nDeviceApiModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DeviceApiModule\n});\nDeviceApiModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [],\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DeviceApiModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [],\n      exports: [],\n      providers: []\n    }]\n  }], function () {\n    return [{\n      type: DeviceApiModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: i1.HttpClient,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2.DataModulesManager,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: DeviceConfiguration\n    }];\n  }, null);\n})();\n\nclass CustomHttpParameterCodec {\n  encodeKey(k) {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v) {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k) {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v) {\n    return decodeURIComponent(v);\n  }\n\n}\n\nclass AndroidDeviceVerificationServiceService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new DeviceConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  challenge(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _challengeNonceRequest = requestParameters[\"challengeNonceRequest\"];\n\n    if (_challengeNonceRequest === null || _challengeNonceRequest === undefined) {\n      throw new Error('Required parameter challengeNonceRequest was null or undefined when calling challenge.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/verification/v1/android/challenges`, _challengeNonceRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  challengeUrl(requestParameters) {\n    const _challengeNonceRequest = requestParameters[\"challengeNonceRequest\"];\n\n    if (_challengeNonceRequest === null || _challengeNonceRequest === undefined) {\n      throw new Error('Required parameter challengeNonceRequest was null or undefined when calling challenge.');\n    }\n\n    return `${this.configuration.basePath}/client-api/verification/v1/android/challenges`;\n  }\n\n  verify(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _deviceAttestationRequest = requestParameters[\"deviceAttestationRequest\"];\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/verification/v1/android/attestations`, _deviceAttestationRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  verifyUrl(requestParameters) {\n    const _deviceAttestationRequest = requestParameters[\"deviceAttestationRequest\"];\n    return `${this.configuration.basePath}/client-api/verification/v1/android/attestations`;\n  }\n\n}\n\nAndroidDeviceVerificationServiceService.ɵfac = function AndroidDeviceVerificationServiceService_Factory(t) {\n  return new (t || AndroidDeviceVerificationServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(DEVICE_BASE_PATH, 8), i0.ɵɵinject(DeviceConfiguration, 8));\n};\n\nAndroidDeviceVerificationServiceService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AndroidDeviceVerificationServiceService,\n  factory: AndroidDeviceVerificationServiceService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AndroidDeviceVerificationServiceService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DEVICE_BASE_PATH]\n      }]\n    }, {\n      type: DeviceConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst AndroidDeviceVerificationServiceServiceChallengeMocksProvider = createMocks([{\n  urlPattern: \"/client-api/verification/v1/android/challenges\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"nonce\": \"base64 encoded long string\"\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst AndroidDeviceVerificationServiceServiceVerifyMocksProvider = createMocks([{\n  urlPattern: \"/client-api/verification/v1/android/attestations\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"success\": true,\n      \"attestation\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlENGpDQ0FzcWdBd0lCQWdJSUNxcGkwV2JVWHh3d0RRWUpLb1pJaHZjTkFRRUxCUUF3Z1lBeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVFlXNGdSbkpoYm1OcGMyTnZNUmd3RmdZRFZRUUtFdzlGZUdGdGNHeGxJRU52YlhCaGJua3hGREFTQmdOVkJBc1RDMFY0WVcxd2JHVWdUM0puTVJRd0VnWURWUVFERXd0bGVHRnRjR3hsTG1OdmJUQWVGdzB5TVRBNU1qRXhOVFUwTURWYUZ3MHlNVEV5TWpBeE5UVTBNRFZhTUlHQU1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQk1LUTJGc2FXWnZjbTVwWVRFV01CUUdBMVVFQnhNTlUyRnVJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QUlhoaGJYQnNaU0JEYjIxd1lXNTVNUlF3RWdZRFZRUUxFd3RGZUdGdGNHeGxJRTl5WnpFVU1CSUdBMVVFQXhNTFpYaGhiWEJzWlM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZU41ZTZpV1Z5WGNuVTdrT2c0YXJrME5WczdOVG84R3RoY1NUNW4rRmVGcnNFakw2V213eTIreTFZa3pNRmErUVdwdENWeGZZVXVTSUpCNXhiMHZaUTdEOVFGTTB2OTU0NVE2aGRPTm9sbWZ2MVczd0k2UTBjN25QNXMvbXBFcm1nRTI3bmRITzNXUHFDT3NnczRsVytnWEhjZzJPeGNwYm9KZHJuVnAzWjdmMFhjMWtPUkNFcVI2RDRlb1JUSjF0VkpSMzNpZytGWnF0UVJIbkp0VEptQS84YXZwSXhXM2hkb0dkaVo1KzhLWlk4blRKTnR3elIySUxITGpiQ0RyTkl4YWVZdUlyVWp5cm81Z0M0VjhDbEpkMU0wdEtlc2NrUStRbll2NVptZDE2TWEvL29vRFhnOGVseHZ4SFY3QnJ5dmRzK2FBbS9MZXRaZFNqeitrRzFBZ01CQUFHalhqQmNNQjBHQTFVZERnUVdCQlFhdFM4b2lWYjVUaHd5VmthWjUrOEJvei9XbmpBT0JnTlZIUThCQWY4RUJBTUNCYUF3RmdZRFZSMFJCQTh3RFlJTFptOXZMbUpoY2k1amIyMHdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJKeElhc3RkaDFROThmNXAxNVA5bUlKeWZFc2kvMUpab3FXZjAzVko2ZjZpcVMza3d1MkFJWHM5c0JGMWpZdWZic014VWNhQnRPQnpua1NYY0dUaGlFUCtZRGowOTN3bzlhdG9NbFBOZG1NNCtmMWNIa1JmR0habkVyWTBoNSt3Sy9iNXhhSnlmbjZxQnZKR21mc1BMUG9MV09UNkpTdk1aWGs5Nk1OcmV5R010SWNPUXlvQVluRXJ0Q1cvTWhwN2trNkdZQ3pkK3cwQnAwTEFuQlhUQU00enE3NU02eWw5R0VjanRPWjVYWC9uQ1VIMVp0NmFKdzU0OVp6S2NDY3lySVV0bTBZdXZsdUJVakE2dFVFU0c5ZTlzKy8wRWduRlBtOUR5N21MSE1lSmNKSWFvNVY3QW1rUDZ3TGNhZWliUEViNU43N0ZTaTVoZ0FDVzJBc0VHdz0iXX0.eyJhcGtDZXJ0aWZpY2F0ZURpZ2VzdFNoYTI1NiI6WyLvv73vv71C77-977-9XHUwMDFDXHUwMDE077-977-977-9yJlv77-9JCfvv71B77-9ZO-_ve-_vUzvv73vv73vv71cdTAwMUJ4Uu-_vVUiXSwiYXBrUGFja2FnZU5hbWUiOiJjb20ucGFja2FnZS5uYW1lLm9mLnJlcXVlc3RpbmcuYXBwIiwiYmFzaWNJbnRlZ3JpdHkiOnRydWUsImN0c1Byb2ZpbGVNYXRjaCI6dHJ1ZSwiZXZhbHVhdGlvblR5cGUiOiJCQVNJQyIsImlhdCI6MTYzMjQ5NjAyNDYxMCwibm9uY2UiOiIyZjY4ZmJmYS0xNzUwLTQ1MDMtOGJmNS03OTU3NTc2ZDVkMzEiLCJ0aW1lc3RhbXBNcyI6MTYzMjQ5NjAyNDYxMH0.mV5kqvnRNcxeqH5XrzdNwSgcz8XJwdPxOv_VKoAHQjEwKv3kKftOH87cGoQij0q2Xgln0ohHsc8lSYGUqiYg1he3UJGRi0-CIXds121eXMFWPUzzTy-Bl4csxjOE_n2O7DORprKmPaVhT-anTNnbynFnMDMVA21UUIYnGryzBvDV8Xj2Mb-mv1K7xcoEpKqH3uzpKuTAOuIQctBADvIl80BkIf_JjHKC7gTIRbn-BF84RMaF29g1qBvhjPgCn5MLgyO-yMg8w3aAlJqPqZQftXNqYD4Uo9zhzjwuS_HGWJkmcJbERmzu7aRGJcS7zvai5pKDsBorxQnFugEe2A8u1w\"\n    }\n  }, {\n    status: 403,\n    body: {\n      \"success\": false,\n      \"attestation\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlENGpDQ0FzcWdBd0lCQWdJSUNxcGkwV2JVWHh3d0RRWUpLb1pJaHZjTkFRRUxCUUF3Z1lBeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVFlXNGdSbkpoYm1OcGMyTnZNUmd3RmdZRFZRUUtFdzlGZUdGdGNHeGxJRU52YlhCaGJua3hGREFTQmdOVkJBc1RDMFY0WVcxd2JHVWdUM0puTVJRd0VnWURWUVFERXd0bGVHRnRjR3hsTG1OdmJUQWVGdzB5TVRBNU1qRXhOVFUwTURWYUZ3MHlNVEV5TWpBeE5UVTBNRFZhTUlHQU1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQk1LUTJGc2FXWnZjbTVwWVRFV01CUUdBMVVFQnhNTlUyRnVJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QUlhoaGJYQnNaU0JEYjIxd1lXNTVNUlF3RWdZRFZRUUxFd3RGZUdGdGNHeGxJRTl5WnpFVU1CSUdBMVVFQXhNTFpYaGhiWEJzWlM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZU41ZTZpV1Z5WGNuVTdrT2c0YXJrME5WczdOVG84R3RoY1NUNW4rRmVGcnNFakw2V213eTIreTFZa3pNRmErUVdwdENWeGZZVXVTSUpCNXhiMHZaUTdEOVFGTTB2OTU0NVE2aGRPTm9sbWZ2MVczd0k2UTBjN25QNXMvbXBFcm1nRTI3bmRITzNXUHFDT3NnczRsVytnWEhjZzJPeGNwYm9KZHJuVnAzWjdmMFhjMWtPUkNFcVI2RDRlb1JUSjF0VkpSMzNpZytGWnF0UVJIbkp0VEptQS84YXZwSXhXM2hkb0dkaVo1KzhLWlk4blRKTnR3elIySUxITGpiQ0RyTkl4YWVZdUlyVWp5cm81Z0M0VjhDbEpkMU0wdEtlc2NrUStRbll2NVptZDE2TWEvL29vRFhnOGVseHZ4SFY3QnJ5dmRzK2FBbS9MZXRaZFNqeitrRzFBZ01CQUFHalhqQmNNQjBHQTFVZERnUVdCQlFhdFM4b2lWYjVUaHd5VmthWjUrOEJvei9XbmpBT0JnTlZIUThCQWY4RUJBTUNCYUF3RmdZRFZSMFJCQTh3RFlJTFptOXZMbUpoY2k1amIyMHdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJKeElhc3RkaDFROThmNXAxNVA5bUlKeWZFc2kvMUpab3FXZjAzVko2ZjZpcVMza3d1MkFJWHM5c0JGMWpZdWZic014VWNhQnRPQnpua1NYY0dUaGlFUCtZRGowOTN3bzlhdG9NbFBOZG1NNCtmMWNIa1JmR0habkVyWTBoNSt3Sy9iNXhhSnlmbjZxQnZKR21mc1BMUG9MV09UNkpTdk1aWGs5Nk1OcmV5R010SWNPUXlvQVluRXJ0Q1cvTWhwN2trNkdZQ3pkK3cwQnAwTEFuQlhUQU00enE3NU02eWw5R0VjanRPWjVYWC9uQ1VIMVp0NmFKdzU0OVp6S2NDY3lySVV0bTBZdXZsdUJVakE2dFVFU0c5ZTlzKy8wRWduRlBtOUR5N21MSE1lSmNKSWFvNVY3QW1rUDZ3TGNhZWliUEViNU43N0ZTaTVoZ0FDVzJBc0VHdz0iXX0.eyJhcGtDZXJ0aWZpY2F0ZURpZ2VzdFNoYTI1NiI6WyLvv73vv71C77-977-9XHUwMDFDXHUwMDE077-977-977-9yJlv77-9JCfvv71B77-9ZO-_ve-_vUzvv73vv73vv71cdTAwMUJ4Uu-_vVUiXSwiYXBrUGFja2FnZU5hbWUiOiJjb20ucGFja2FnZS5uYW1lLm9mLnJlcXVlc3RpbmcuYXBwIiwiYmFzaWNJbnRlZ3JpdHkiOnRydWUsImN0c1Byb2ZpbGVNYXRjaCI6dHJ1ZSwiZXZhbHVhdGlvblR5cGUiOiJCQVNJQyIsImlhdCI6MTYzMjQ5NjAyNDYxMCwibm9uY2UiOiIyZjY4ZmJmYS0xNzUwLTQ1MDMtOGJmNS03OTU3NTc2ZDVkMzEiLCJ0aW1lc3RhbXBNcyI6MTYzMjQ5NjAyNDYxMH0.mV5kqvnRNcxeqH5XrzdNwSgcz8XJwdPxOv_VKoAHQjEwKv3kKftOH87cGoQij0q2Xgln0ohHsc8lSYGUqiYg1he3UJGRi0-CIXds121eXMFWPUzzTy-Bl4csxjOE_n2O7DORprKmPaVhT-anTNnbynFnMDMVA21UUIYnGryzBvDV8Xj2Mb-mv1K7xcoEpKqH3uzpKuTAOuIQctBADvIl80BkIf_JjHKC7gTIRbn-BF84RMaF29g1qBvhjPgCn5MLgyO-yMg8w3aAlJqPqZQftXNqYD4Uo9zhzjwuS_HGWJkmcJbERmzu7aRGJcS7zvai5pKDsBorxQnFugEe2A8u1w\"\n    }\n  }]\n}]);\nconst AndroidDeviceVerificationServiceServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/verification/v1/android/challenges\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"nonce\": \"base64 encoded long string\"\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/verification/v1/android/attestations\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"success\": true,\n      \"attestation\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlENGpDQ0FzcWdBd0lCQWdJSUNxcGkwV2JVWHh3d0RRWUpLb1pJaHZjTkFRRUxCUUF3Z1lBeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVFlXNGdSbkpoYm1OcGMyTnZNUmd3RmdZRFZRUUtFdzlGZUdGdGNHeGxJRU52YlhCaGJua3hGREFTQmdOVkJBc1RDMFY0WVcxd2JHVWdUM0puTVJRd0VnWURWUVFERXd0bGVHRnRjR3hsTG1OdmJUQWVGdzB5TVRBNU1qRXhOVFUwTURWYUZ3MHlNVEV5TWpBeE5UVTBNRFZhTUlHQU1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQk1LUTJGc2FXWnZjbTVwWVRFV01CUUdBMVVFQnhNTlUyRnVJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QUlhoaGJYQnNaU0JEYjIxd1lXNTVNUlF3RWdZRFZRUUxFd3RGZUdGdGNHeGxJRTl5WnpFVU1CSUdBMVVFQXhNTFpYaGhiWEJzWlM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZU41ZTZpV1Z5WGNuVTdrT2c0YXJrME5WczdOVG84R3RoY1NUNW4rRmVGcnNFakw2V213eTIreTFZa3pNRmErUVdwdENWeGZZVXVTSUpCNXhiMHZaUTdEOVFGTTB2OTU0NVE2aGRPTm9sbWZ2MVczd0k2UTBjN25QNXMvbXBFcm1nRTI3bmRITzNXUHFDT3NnczRsVytnWEhjZzJPeGNwYm9KZHJuVnAzWjdmMFhjMWtPUkNFcVI2RDRlb1JUSjF0VkpSMzNpZytGWnF0UVJIbkp0VEptQS84YXZwSXhXM2hkb0dkaVo1KzhLWlk4blRKTnR3elIySUxITGpiQ0RyTkl4YWVZdUlyVWp5cm81Z0M0VjhDbEpkMU0wdEtlc2NrUStRbll2NVptZDE2TWEvL29vRFhnOGVseHZ4SFY3QnJ5dmRzK2FBbS9MZXRaZFNqeitrRzFBZ01CQUFHalhqQmNNQjBHQTFVZERnUVdCQlFhdFM4b2lWYjVUaHd5VmthWjUrOEJvei9XbmpBT0JnTlZIUThCQWY4RUJBTUNCYUF3RmdZRFZSMFJCQTh3RFlJTFptOXZMbUpoY2k1amIyMHdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJKeElhc3RkaDFROThmNXAxNVA5bUlKeWZFc2kvMUpab3FXZjAzVko2ZjZpcVMza3d1MkFJWHM5c0JGMWpZdWZic014VWNhQnRPQnpua1NYY0dUaGlFUCtZRGowOTN3bzlhdG9NbFBOZG1NNCtmMWNIa1JmR0habkVyWTBoNSt3Sy9iNXhhSnlmbjZxQnZKR21mc1BMUG9MV09UNkpTdk1aWGs5Nk1OcmV5R010SWNPUXlvQVluRXJ0Q1cvTWhwN2trNkdZQ3pkK3cwQnAwTEFuQlhUQU00enE3NU02eWw5R0VjanRPWjVYWC9uQ1VIMVp0NmFKdzU0OVp6S2NDY3lySVV0bTBZdXZsdUJVakE2dFVFU0c5ZTlzKy8wRWduRlBtOUR5N21MSE1lSmNKSWFvNVY3QW1rUDZ3TGNhZWliUEViNU43N0ZTaTVoZ0FDVzJBc0VHdz0iXX0.eyJhcGtDZXJ0aWZpY2F0ZURpZ2VzdFNoYTI1NiI6WyLvv73vv71C77-977-9XHUwMDFDXHUwMDE077-977-977-9yJlv77-9JCfvv71B77-9ZO-_ve-_vUzvv73vv73vv71cdTAwMUJ4Uu-_vVUiXSwiYXBrUGFja2FnZU5hbWUiOiJjb20ucGFja2FnZS5uYW1lLm9mLnJlcXVlc3RpbmcuYXBwIiwiYmFzaWNJbnRlZ3JpdHkiOnRydWUsImN0c1Byb2ZpbGVNYXRjaCI6dHJ1ZSwiZXZhbHVhdGlvblR5cGUiOiJCQVNJQyIsImlhdCI6MTYzMjQ5NjAyNDYxMCwibm9uY2UiOiIyZjY4ZmJmYS0xNzUwLTQ1MDMtOGJmNS03OTU3NTc2ZDVkMzEiLCJ0aW1lc3RhbXBNcyI6MTYzMjQ5NjAyNDYxMH0.mV5kqvnRNcxeqH5XrzdNwSgcz8XJwdPxOv_VKoAHQjEwKv3kKftOH87cGoQij0q2Xgln0ohHsc8lSYGUqiYg1he3UJGRi0-CIXds121eXMFWPUzzTy-Bl4csxjOE_n2O7DORprKmPaVhT-anTNnbynFnMDMVA21UUIYnGryzBvDV8Xj2Mb-mv1K7xcoEpKqH3uzpKuTAOuIQctBADvIl80BkIf_JjHKC7gTIRbn-BF84RMaF29g1qBvhjPgCn5MLgyO-yMg8w3aAlJqPqZQftXNqYD4Uo9zhzjwuS_HGWJkmcJbERmzu7aRGJcS7zvai5pKDsBorxQnFugEe2A8u1w\"\n    }\n  }, {\n    status: 403,\n    body: {\n      \"success\": false,\n      \"attestation\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlENGpDQ0FzcWdBd0lCQWdJSUNxcGkwV2JVWHh3d0RRWUpLb1pJaHZjTkFRRUxCUUF3Z1lBeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVFlXNGdSbkpoYm1OcGMyTnZNUmd3RmdZRFZRUUtFdzlGZUdGdGNHeGxJRU52YlhCaGJua3hGREFTQmdOVkJBc1RDMFY0WVcxd2JHVWdUM0puTVJRd0VnWURWUVFERXd0bGVHRnRjR3hsTG1OdmJUQWVGdzB5TVRBNU1qRXhOVFUwTURWYUZ3MHlNVEV5TWpBeE5UVTBNRFZhTUlHQU1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQk1LUTJGc2FXWnZjbTVwWVRFV01CUUdBMVVFQnhNTlUyRnVJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QUlhoaGJYQnNaU0JEYjIxd1lXNTVNUlF3RWdZRFZRUUxFd3RGZUdGdGNHeGxJRTl5WnpFVU1CSUdBMVVFQXhNTFpYaGhiWEJzWlM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZU41ZTZpV1Z5WGNuVTdrT2c0YXJrME5WczdOVG84R3RoY1NUNW4rRmVGcnNFakw2V213eTIreTFZa3pNRmErUVdwdENWeGZZVXVTSUpCNXhiMHZaUTdEOVFGTTB2OTU0NVE2aGRPTm9sbWZ2MVczd0k2UTBjN25QNXMvbXBFcm1nRTI3bmRITzNXUHFDT3NnczRsVytnWEhjZzJPeGNwYm9KZHJuVnAzWjdmMFhjMWtPUkNFcVI2RDRlb1JUSjF0VkpSMzNpZytGWnF0UVJIbkp0VEptQS84YXZwSXhXM2hkb0dkaVo1KzhLWlk4blRKTnR3elIySUxITGpiQ0RyTkl4YWVZdUlyVWp5cm81Z0M0VjhDbEpkMU0wdEtlc2NrUStRbll2NVptZDE2TWEvL29vRFhnOGVseHZ4SFY3QnJ5dmRzK2FBbS9MZXRaZFNqeitrRzFBZ01CQUFHalhqQmNNQjBHQTFVZERnUVdCQlFhdFM4b2lWYjVUaHd5VmthWjUrOEJvei9XbmpBT0JnTlZIUThCQWY4RUJBTUNCYUF3RmdZRFZSMFJCQTh3RFlJTFptOXZMbUpoY2k1amIyMHdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJKeElhc3RkaDFROThmNXAxNVA5bUlKeWZFc2kvMUpab3FXZjAzVko2ZjZpcVMza3d1MkFJWHM5c0JGMWpZdWZic014VWNhQnRPQnpua1NYY0dUaGlFUCtZRGowOTN3bzlhdG9NbFBOZG1NNCtmMWNIa1JmR0habkVyWTBoNSt3Sy9iNXhhSnlmbjZxQnZKR21mc1BMUG9MV09UNkpTdk1aWGs5Nk1OcmV5R010SWNPUXlvQVluRXJ0Q1cvTWhwN2trNkdZQ3pkK3cwQnAwTEFuQlhUQU00enE3NU02eWw5R0VjanRPWjVYWC9uQ1VIMVp0NmFKdzU0OVp6S2NDY3lySVV0bTBZdXZsdUJVakE2dFVFU0c5ZTlzKy8wRWduRlBtOUR5N21MSE1lSmNKSWFvNVY3QW1rUDZ3TGNhZWliUEViNU43N0ZTaTVoZ0FDVzJBc0VHdz0iXX0.eyJhcGtDZXJ0aWZpY2F0ZURpZ2VzdFNoYTI1NiI6WyLvv73vv71C77-977-9XHUwMDFDXHUwMDE077-977-977-9yJlv77-9JCfvv71B77-9ZO-_ve-_vUzvv73vv73vv71cdTAwMUJ4Uu-_vVUiXSwiYXBrUGFja2FnZU5hbWUiOiJjb20ucGFja2FnZS5uYW1lLm9mLnJlcXVlc3RpbmcuYXBwIiwiYmFzaWNJbnRlZ3JpdHkiOnRydWUsImN0c1Byb2ZpbGVNYXRjaCI6dHJ1ZSwiZXZhbHVhdGlvblR5cGUiOiJCQVNJQyIsImlhdCI6MTYzMjQ5NjAyNDYxMCwibm9uY2UiOiIyZjY4ZmJmYS0xNzUwLTQ1MDMtOGJmNS03OTU3NTc2ZDVkMzEiLCJ0aW1lc3RhbXBNcyI6MTYzMjQ5NjAyNDYxMH0.mV5kqvnRNcxeqH5XrzdNwSgcz8XJwdPxOv_VKoAHQjEwKv3kKftOH87cGoQij0q2Xgln0ohHsc8lSYGUqiYg1he3UJGRi0-CIXds121eXMFWPUzzTy-Bl4csxjOE_n2O7DORprKmPaVhT-anTNnbynFnMDMVA21UUIYnGryzBvDV8Xj2Mb-mv1K7xcoEpKqH3uzpKuTAOuIQctBADvIl80BkIf_JjHKC7gTIRbn-BF84RMaF29g1qBvhjPgCn5MLgyO-yMg8w3aAlJqPqZQftXNqYD4Uo9zhzjwuS_HGWJkmcJbERmzu7aRGJcS7zvai5pKDsBorxQnFugEe2A8u1w\"\n    }\n  }]\n}]);\n\nclass ManageMyDevicesService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new DeviceConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  deleteMyDeviceByDeviceId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _deviceId = requestParameters[\"deviceId\"];\n\n    if (_deviceId === null || _deviceId === undefined) {\n      throw new Error('Required parameter deviceId was null or undefined when calling deleteMyDeviceByDeviceId.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v1/users/me/devices/${encodeURIComponent(String(_deviceId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deleteMyDeviceByDeviceIdUrl(requestParameters) {\n    const _deviceId = requestParameters[\"deviceId\"];\n\n    if (_deviceId === null || _deviceId === undefined) {\n      throw new Error('Required parameter deviceId was null or undefined when calling deleteMyDeviceByDeviceId.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v1/users/me/devices/${encodeURIComponent(String(_deviceId))}`;\n  }\n\n  getMyDevices(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/users/me/devices`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getMyDevicesUrl() {\n    return `${this.configuration.basePath}/client-api/v1/users/me/devices`;\n  }\n\n  patchMyDeviceByDeviceId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _deviceId = requestParameters[\"deviceId\"];\n\n    if (_deviceId === null || _deviceId === undefined) {\n      throw new Error('Required parameter deviceId was null or undefined when calling patchMyDeviceByDeviceId.');\n    }\n\n    const _patchDeviceRequest = requestParameters[\"patchDeviceRequest\"];\n\n    if (_patchDeviceRequest === null || _patchDeviceRequest === undefined) {\n      throw new Error('Required parameter patchDeviceRequest was null or undefined when calling patchMyDeviceByDeviceId.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.patch(`${this.configuration.basePath}/client-api/v1/users/me/devices/${encodeURIComponent(String(_deviceId))}`, _patchDeviceRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  patchMyDeviceByDeviceIdUrl(requestParameters) {\n    const _deviceId = requestParameters[\"deviceId\"];\n\n    if (_deviceId === null || _deviceId === undefined) {\n      throw new Error('Required parameter deviceId was null or undefined when calling patchMyDeviceByDeviceId.');\n    }\n\n    const _patchDeviceRequest = requestParameters[\"patchDeviceRequest\"];\n\n    if (_patchDeviceRequest === null || _patchDeviceRequest === undefined) {\n      throw new Error('Required parameter patchDeviceRequest was null or undefined when calling patchMyDeviceByDeviceId.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v1/users/me/devices/${encodeURIComponent(String(_deviceId))}`;\n  }\n\n  putPushToken(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _deviceId = requestParameters[\"deviceId\"];\n\n    if (_deviceId === null || _deviceId === undefined) {\n      throw new Error('Required parameter deviceId was null or undefined when calling putPushToken.');\n    }\n\n    const _putPushTokenRequest = requestParameters[\"putPushTokenRequest\"];\n\n    if (_putPushTokenRequest === null || _putPushTokenRequest === undefined) {\n      throw new Error('Required parameter putPushTokenRequest was null or undefined when calling putPushToken.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v1/users/me/devices/${encodeURIComponent(String(_deviceId))}/push-tokens`, _putPushTokenRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putPushTokenUrl(requestParameters) {\n    const _deviceId = requestParameters[\"deviceId\"];\n\n    if (_deviceId === null || _deviceId === undefined) {\n      throw new Error('Required parameter deviceId was null or undefined when calling putPushToken.');\n    }\n\n    const _putPushTokenRequest = requestParameters[\"putPushTokenRequest\"];\n\n    if (_putPushTokenRequest === null || _putPushTokenRequest === undefined) {\n      throw new Error('Required parameter putPushTokenRequest was null or undefined when calling putPushToken.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v1/users/me/devices/${encodeURIComponent(String(_deviceId))}/push-tokens`;\n  }\n\n}\n\nManageMyDevicesService.ɵfac = function ManageMyDevicesService_Factory(t) {\n  return new (t || ManageMyDevicesService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(DEVICE_BASE_PATH, 8), i0.ɵɵinject(DeviceConfiguration, 8));\n};\n\nManageMyDevicesService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ManageMyDevicesService,\n  factory: ManageMyDevicesService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ManageMyDevicesService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DEVICE_BASE_PATH]\n      }]\n    }, {\n      type: DeviceConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst ManageMyDevicesServiceDeleteMyDeviceByDeviceIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/users/me/devices/{deviceId}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst ManageMyDevicesServiceGetMyDevicesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/users/me/devices\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"devices\": [{\n        \"deviceId\": \"3aea3f5c-776a-4547-ae9d-4099d0af7d3b\",\n        \"idpUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n        \"externalUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n        \"dbsUserId\": \"8a48e1f56e880779016e8809ab970000\",\n        \"username\": \"Bob_Jones\",\n        \"friendlyName\": \"Bob's Galaxy S7\",\n        \"status\": \"ENABLED\",\n        \"vendor\": \"Samsung\",\n        \"model\": \"Galaxy S7\",\n        \"created\": \"2019-09-03T07:44:57Z\",\n        \"updated\": \"2019-10-13T15:30:22Z\"\n      }, {\n        \"deviceId\": \"5148b0f1-099f-4ef8-b34e-804013011dcf\",\n        \"idpUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n        \"externalUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n        \"dbsUserId\": \"8a48e1f56e880779016e8809ab970000\",\n        \"username\": \"Bob_Jones\",\n        \"friendlyName\": \"Bob's iPhone\",\n        \"status\": \"DISABLED\",\n        \"vendor\": \"Apple\",\n        \"model\": \"iPhone 10\",\n        \"created\": \"2019-09-03T08:34:11Z\",\n        \"updated\": \"2019-10-13T15:32:58Z\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}]);\nconst ManageMyDevicesServicePatchMyDeviceByDeviceIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/users/me/devices/{deviceId}\",\n  method: \"PATCH\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst ManageMyDevicesServicePutPushTokenMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/users/me/devices/{deviceId}/push-tokens\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst ManageMyDevicesServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/users/me/devices/{deviceId}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/users/me/devices\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"devices\": [{\n        \"deviceId\": \"3aea3f5c-776a-4547-ae9d-4099d0af7d3b\",\n        \"idpUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n        \"externalUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n        \"dbsUserId\": \"8a48e1f56e880779016e8809ab970000\",\n        \"username\": \"Bob_Jones\",\n        \"friendlyName\": \"Bob's Galaxy S7\",\n        \"status\": \"ENABLED\",\n        \"vendor\": \"Samsung\",\n        \"model\": \"Galaxy S7\",\n        \"created\": \"2019-09-03T07:44:57Z\",\n        \"updated\": \"2019-10-13T15:30:22Z\"\n      }, {\n        \"deviceId\": \"5148b0f1-099f-4ef8-b34e-804013011dcf\",\n        \"idpUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n        \"externalUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n        \"dbsUserId\": \"8a48e1f56e880779016e8809ab970000\",\n        \"username\": \"Bob_Jones\",\n        \"friendlyName\": \"Bob's iPhone\",\n        \"status\": \"DISABLED\",\n        \"vendor\": \"Apple\",\n        \"model\": \"iPhone 10\",\n        \"created\": \"2019-09-03T08:34:11Z\",\n        \"updated\": \"2019-10-13T15:32:58Z\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/users/me/devices/{deviceId}\",\n  method: \"PATCH\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/users/me/devices/{deviceId}/push-tokens\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\n\nclass ManageOtherUsersDevicesService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new DeviceConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  deleteUserDeviceByDeviceId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _deviceId = requestParameters[\"deviceId\"];\n\n    if (_deviceId === null || _deviceId === undefined) {\n      throw new Error('Required parameter deviceId was null or undefined when calling deleteUserDeviceByDeviceId.');\n    }\n\n    const _dbsUserId = requestParameters[\"dbsUserId\"];\n\n    if (_dbsUserId === null || _dbsUserId === undefined) {\n      throw new Error('Required parameter dbsUserId was null or undefined when calling deleteUserDeviceByDeviceId.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v1/users/${encodeURIComponent(String(_dbsUserId))}/devices/${encodeURIComponent(String(_deviceId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deleteUserDeviceByDeviceIdUrl(requestParameters) {\n    const _deviceId = requestParameters[\"deviceId\"];\n\n    if (_deviceId === null || _deviceId === undefined) {\n      throw new Error('Required parameter deviceId was null or undefined when calling deleteUserDeviceByDeviceId.');\n    }\n\n    const _dbsUserId = requestParameters[\"dbsUserId\"];\n\n    if (_dbsUserId === null || _dbsUserId === undefined) {\n      throw new Error('Required parameter dbsUserId was null or undefined when calling deleteUserDeviceByDeviceId.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v1/users/${encodeURIComponent(String(_dbsUserId))}/devices/${encodeURIComponent(String(_deviceId))}`;\n  }\n\n  getDevicesByDbsUserId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _dbsUserId = requestParameters[\"dbsUserId\"];\n\n    if (_dbsUserId === null || _dbsUserId === undefined) {\n      throw new Error('Required parameter dbsUserId was null or undefined when calling getDevicesByDbsUserId.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/users/${encodeURIComponent(String(_dbsUserId))}/devices`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getDevicesByDbsUserIdUrl(requestParameters) {\n    const _dbsUserId = requestParameters[\"dbsUserId\"];\n\n    if (_dbsUserId === null || _dbsUserId === undefined) {\n      throw new Error('Required parameter dbsUserId was null or undefined when calling getDevicesByDbsUserId.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v1/users/${encodeURIComponent(String(_dbsUserId))}/devices`;\n  }\n\n  patchUserDeviceByDbsUserIdAndDeviceId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _deviceId = requestParameters[\"deviceId\"];\n\n    if (_deviceId === null || _deviceId === undefined) {\n      throw new Error('Required parameter deviceId was null or undefined when calling patchUserDeviceByDbsUserIdAndDeviceId.');\n    }\n\n    const _dbsUserId = requestParameters[\"dbsUserId\"];\n\n    if (_dbsUserId === null || _dbsUserId === undefined) {\n      throw new Error('Required parameter dbsUserId was null or undefined when calling patchUserDeviceByDbsUserIdAndDeviceId.');\n    }\n\n    const _patchDeviceRequest = requestParameters[\"patchDeviceRequest\"];\n\n    if (_patchDeviceRequest === null || _patchDeviceRequest === undefined) {\n      throw new Error('Required parameter patchDeviceRequest was null or undefined when calling patchUserDeviceByDbsUserIdAndDeviceId.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.patch(`${this.configuration.basePath}/client-api/v1/users/${encodeURIComponent(String(_dbsUserId))}/devices/${encodeURIComponent(String(_deviceId))}`, _patchDeviceRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  patchUserDeviceByDbsUserIdAndDeviceIdUrl(requestParameters) {\n    const _deviceId = requestParameters[\"deviceId\"];\n\n    if (_deviceId === null || _deviceId === undefined) {\n      throw new Error('Required parameter deviceId was null or undefined when calling patchUserDeviceByDbsUserIdAndDeviceId.');\n    }\n\n    const _dbsUserId = requestParameters[\"dbsUserId\"];\n\n    if (_dbsUserId === null || _dbsUserId === undefined) {\n      throw new Error('Required parameter dbsUserId was null or undefined when calling patchUserDeviceByDbsUserIdAndDeviceId.');\n    }\n\n    const _patchDeviceRequest = requestParameters[\"patchDeviceRequest\"];\n\n    if (_patchDeviceRequest === null || _patchDeviceRequest === undefined) {\n      throw new Error('Required parameter patchDeviceRequest was null or undefined when calling patchUserDeviceByDbsUserIdAndDeviceId.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v1/users/${encodeURIComponent(String(_dbsUserId))}/devices/${encodeURIComponent(String(_deviceId))}`;\n  }\n\n}\n\nManageOtherUsersDevicesService.ɵfac = function ManageOtherUsersDevicesService_Factory(t) {\n  return new (t || ManageOtherUsersDevicesService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(DEVICE_BASE_PATH, 8), i0.ɵɵinject(DeviceConfiguration, 8));\n};\n\nManageOtherUsersDevicesService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ManageOtherUsersDevicesService,\n  factory: ManageOtherUsersDevicesService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ManageOtherUsersDevicesService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DEVICE_BASE_PATH]\n      }]\n    }, {\n      type: DeviceConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst ManageOtherUsersDevicesServiceDeleteUserDeviceByDeviceIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/users/{dbsUserId}/devices/{deviceId}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst ManageOtherUsersDevicesServiceGetDevicesByDbsUserIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/users/{dbsUserId}/devices\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"devices\": [{\n        \"deviceId\": \"3aea3f5c-776a-4547-ae9d-4099d0af7d3b\",\n        \"idpUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n        \"externalUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n        \"dbsUserId\": \"8a48e1f56e880779016e8809ab970000\",\n        \"username\": \"Bob_Jones\",\n        \"friendlyName\": \"Bob's Galaxy S7\",\n        \"status\": \"ENABLED\",\n        \"vendor\": \"Samsung\",\n        \"model\": \"Galaxy S7\",\n        \"created\": \"2019-09-03T07:44:57Z\",\n        \"updated\": \"2019-10-13T15:30:22Z\"\n      }, {\n        \"deviceId\": \"5148b0f1-099f-4ef8-b34e-804013011dcf\",\n        \"idpUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n        \"externalUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n        \"dbsUserId\": \"8a48e1f56e880779016e8809ab970000\",\n        \"username\": \"Bob_Jones\",\n        \"friendlyName\": \"Bob's iPhone\",\n        \"status\": \"DISABLED\",\n        \"vendor\": \"Apple\",\n        \"model\": \"iPhone 10\",\n        \"created\": \"2019-09-03T08:34:11Z\",\n        \"updated\": \"2019-10-13T15:32:58Z\"\n      }]\n    }\n  }, {\n    status: 200,\n    body: {\n      \"devices\": [{\n        \"created\": \"2000-01-23T04:56:07.000+00:00\",\n        \"idpUserId\": \"idpUserId\",\n        \"deviceId\": \"deviceId\",\n        \"pushToken\": \"pushToken\",\n        \"platform\": \"platform\",\n        \"dbsUserId\": \"dbsUserId\",\n        \"externalUserId\": \"externalUserId\",\n        \"vendor\": \"vendor\",\n        \"model\": \"model\",\n        \"updated\": \"2000-01-23T04:56:07.000+00:00\",\n        \"friendlyName\": \"friendlyName\",\n        \"username\": \"username\"\n      }, {\n        \"created\": \"2000-01-23T04:56:07.000+00:00\",\n        \"idpUserId\": \"idpUserId\",\n        \"deviceId\": \"deviceId\",\n        \"pushToken\": \"pushToken\",\n        \"platform\": \"platform\",\n        \"dbsUserId\": \"dbsUserId\",\n        \"externalUserId\": \"externalUserId\",\n        \"vendor\": \"vendor\",\n        \"model\": \"model\",\n        \"updated\": \"2000-01-23T04:56:07.000+00:00\",\n        \"friendlyName\": \"friendlyName\",\n        \"username\": \"username\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}]);\nconst ManageOtherUsersDevicesServicePatchUserDeviceByDbsUserIdAndDeviceIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/users/{dbsUserId}/devices/{deviceId}\",\n  method: \"PATCH\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst ManageOtherUsersDevicesServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/users/{dbsUserId}/devices/{deviceId}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/users/{dbsUserId}/devices\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"devices\": [{\n        \"deviceId\": \"3aea3f5c-776a-4547-ae9d-4099d0af7d3b\",\n        \"idpUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n        \"externalUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n        \"dbsUserId\": \"8a48e1f56e880779016e8809ab970000\",\n        \"username\": \"Bob_Jones\",\n        \"friendlyName\": \"Bob's Galaxy S7\",\n        \"status\": \"ENABLED\",\n        \"vendor\": \"Samsung\",\n        \"model\": \"Galaxy S7\",\n        \"created\": \"2019-09-03T07:44:57Z\",\n        \"updated\": \"2019-10-13T15:30:22Z\"\n      }, {\n        \"deviceId\": \"5148b0f1-099f-4ef8-b34e-804013011dcf\",\n        \"idpUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n        \"externalUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n        \"dbsUserId\": \"8a48e1f56e880779016e8809ab970000\",\n        \"username\": \"Bob_Jones\",\n        \"friendlyName\": \"Bob's iPhone\",\n        \"status\": \"DISABLED\",\n        \"vendor\": \"Apple\",\n        \"model\": \"iPhone 10\",\n        \"created\": \"2019-09-03T08:34:11Z\",\n        \"updated\": \"2019-10-13T15:32:58Z\"\n      }]\n    }\n  }, {\n    status: 200,\n    body: {\n      \"devices\": [{\n        \"created\": \"2000-01-23T04:56:07.000+00:00\",\n        \"idpUserId\": \"idpUserId\",\n        \"deviceId\": \"deviceId\",\n        \"pushToken\": \"pushToken\",\n        \"platform\": \"platform\",\n        \"dbsUserId\": \"dbsUserId\",\n        \"externalUserId\": \"externalUserId\",\n        \"vendor\": \"vendor\",\n        \"model\": \"model\",\n        \"updated\": \"2000-01-23T04:56:07.000+00:00\",\n        \"friendlyName\": \"friendlyName\",\n        \"username\": \"username\"\n      }, {\n        \"created\": \"2000-01-23T04:56:07.000+00:00\",\n        \"idpUserId\": \"idpUserId\",\n        \"deviceId\": \"deviceId\",\n        \"pushToken\": \"pushToken\",\n        \"platform\": \"platform\",\n        \"dbsUserId\": \"dbsUserId\",\n        \"externalUserId\": \"externalUserId\",\n        \"vendor\": \"vendor\",\n        \"model\": \"model\",\n        \"updated\": \"2000-01-23T04:56:07.000+00:00\",\n        \"friendlyName\": \"friendlyName\",\n        \"username\": \"username\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/users/{dbsUserId}/devices/{deviceId}\",\n  method: \"PATCH\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nexport { AndroidDeviceVerificationServiceService, AndroidDeviceVerificationServiceServiceChallengeMocksProvider, AndroidDeviceVerificationServiceServiceMocksProvider, AndroidDeviceVerificationServiceServiceVerifyMocksProvider, COLLECTION_FORMATS, CONFIG_TOKEN, DEVICE_BASE_PATH, DeviceApiModule, DeviceConfiguration, DeviceStatus, ManageMyDevicesService, ManageMyDevicesServiceDeleteMyDeviceByDeviceIdMocksProvider, ManageMyDevicesServiceGetMyDevicesMocksProvider, ManageMyDevicesServiceMocksProvider, ManageMyDevicesServicePatchMyDeviceByDeviceIdMocksProvider, ManageMyDevicesServicePutPushTokenMocksProvider, ManageOtherUsersDevicesService, ManageOtherUsersDevicesServiceDeleteUserDeviceByDeviceIdMocksProvider, ManageOtherUsersDevicesServiceGetDevicesByDbsUserIdMocksProvider, ManageOtherUsersDevicesServiceMocksProvider, ManageOtherUsersDevicesServicePatchUserDeviceByDbsUserIdAndDeviceIdMocksProvider, Platform };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/device-http-ang/fesm2015/backbase-device-http-ang.js"],"names":["i0","InjectionToken","NgModule","Optional","SkipSelf","Injectable","Inject","i1","HttpHeaders","i2","createMocks","DeviceStatus","ENABLED","DISABLED","REMOVED","Platform","Ios","Android","Huawei","DEVICE_BASE_PATH","COLLECTION_FORMATS","DeviceConfiguration","constructor","configurationParameters","apiKeys","username","password","accessToken","basePath","withCredentials","encoder","credentials","selectHeaderContentType","contentTypes","length","undefined","type","find","x","isJsonMime","selectHeaderAccept","accepts","mime","jsonMime","RegExp","test","toLowerCase","lookupCredential","key","value","CONFIG_TOKEN","DeviceApiModule","parentModule","http","dataModulesManager","config","Error","setModuleConfig","apiRoot","servicePath","headers","forRoot","configurationFactory","ngModule","providers","provide","useFactory","ɵfac","HttpClient","DataModulesManager","ɵmod","ɵinj","args","imports","declarations","exports","decorators","CustomHttpParameterCodec","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeURIComponent","decodeValue","AndroidDeviceVerificationServiceService","httpClient","configuration","defaultHeaders","addToHttpParams","httpParams","Date","addToHttpParamsRecursive","Array","isArray","forEach","elem","append","toISOString","substr","Object","keys","challenge","requestParameters","observe","reportProgress","options","_challengeNonceRequest","httpHeaderAcceptSelected","httpHeaderAccept","httpHeaderAccepts","set","consumes","httpContentTypeSelected","responseType","startsWith","post","challengeUrl","verify","_deviceAttestationRequest","verifyUrl","ɵprov","providedIn","AndroidDeviceVerificationServiceServiceChallengeMocksProvider","urlPattern","method","responses","status","body","AndroidDeviceVerificationServiceServiceVerifyMocksProvider","AndroidDeviceVerificationServiceServiceMocksProvider","ManageMyDevicesService","deleteMyDeviceByDeviceId","_deviceId","delete","String","deleteMyDeviceByDeviceIdUrl","getMyDevices","get","getMyDevicesUrl","patchMyDeviceByDeviceId","_patchDeviceRequest","patch","patchMyDeviceByDeviceIdUrl","putPushToken","_putPushTokenRequest","put","putPushTokenUrl","ManageMyDevicesServiceDeleteMyDeviceByDeviceIdMocksProvider","ManageMyDevicesServiceGetMyDevicesMocksProvider","ManageMyDevicesServicePatchMyDeviceByDeviceIdMocksProvider","ManageMyDevicesServicePutPushTokenMocksProvider","ManageMyDevicesServiceMocksProvider","ManageOtherUsersDevicesService","deleteUserDeviceByDeviceId","_dbsUserId","deleteUserDeviceByDeviceIdUrl","getDevicesByDbsUserId","getDevicesByDbsUserIdUrl","patchUserDeviceByDbsUserIdAndDeviceId","patchUserDeviceByDbsUserIdAndDeviceIdUrl","ManageOtherUsersDevicesServiceDeleteUserDeviceByDeviceIdMocksProvider","ManageOtherUsersDevicesServiceGetDevicesByDbsUserIdMocksProvider","ManageOtherUsersDevicesServicePatchUserDeviceByDbsUserIdAndDeviceIdMocksProvider","ManageOtherUsersDevicesServiceMocksProvider"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\n\nconst DeviceStatus = {\n    ENABLED: 'ENABLED',\n    DISABLED: 'DISABLED',\n    REMOVED: 'REMOVED'\n};\n\nconst Platform = {\n    Ios: 'ios',\n    Android: 'android',\n    Huawei: 'huawei'\n};\n\nconst DEVICE_BASE_PATH = new InjectionToken('DEVICE_BASE_PATH');\nconst COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n};\n\nclass DeviceConfiguration {\n    constructor(configurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n    selectHeaderContentType(contentTypes) {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n        const type = contentTypes.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n    selectHeaderAccept(accepts) {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n        const type = accepts.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n    lookupCredential(key) {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\nconst CONFIG_TOKEN = new InjectionToken('api-data-module DeviceConfiguration');\n\nclass DeviceApiModule {\n    constructor(parentModule, http, dataModulesManager, config) {\n        if (parentModule) {\n            throw new Error('DeviceApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n                'See also https://github.com/angular/angular/issues/20575');\n        }\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n    static forRoot(configurationFactory) {\n        return {\n            ngModule: DeviceApiModule,\n            providers: [{ provide: DeviceConfiguration, useFactory: configurationFactory }]\n        };\n    }\n}\nDeviceApiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DeviceApiModule, deps: [{ token: DeviceApiModule, optional: true, skipSelf: true }, { token: i1.HttpClient, optional: true }, { token: i2.DataModulesManager, optional: true }, { token: DeviceConfiguration }], target: i0.ɵɵFactoryTarget.NgModule });\nDeviceApiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DeviceApiModule });\nDeviceApiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DeviceApiModule, providers: [], imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: DeviceApiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [],\n                    exports: [],\n                    providers: []\n                }]\n        }], ctorParameters: function () { return [{ type: DeviceApiModule, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DataModulesManager, decorators: [{\n                    type: Optional\n                }] }, { type: DeviceConfiguration }]; } });\n\nclass CustomHttpParameterCodec {\n    encodeKey(k) {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v) {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k) {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v) {\n        return decodeURIComponent(v);\n    }\n}\n\nclass AndroidDeviceVerificationServiceService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new DeviceConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    challenge(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _challengeNonceRequest = requestParameters[\"challengeNonceRequest\"];\n        if (_challengeNonceRequest === null || _challengeNonceRequest === undefined) {\n            throw new Error('Required parameter challengeNonceRequest was null or undefined when calling challenge.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/verification/v1/android/challenges`, _challengeNonceRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    challengeUrl(requestParameters) {\n        const _challengeNonceRequest = requestParameters[\"challengeNonceRequest\"];\n        if (_challengeNonceRequest === null || _challengeNonceRequest === undefined) {\n            throw new Error('Required parameter challengeNonceRequest was null or undefined when calling challenge.');\n        }\n        return `${this.configuration.basePath}/client-api/verification/v1/android/challenges`;\n    }\n    verify(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _deviceAttestationRequest = requestParameters[\"deviceAttestationRequest\"];\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/verification/v1/android/attestations`, _deviceAttestationRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    verifyUrl(requestParameters) {\n        const _deviceAttestationRequest = requestParameters[\"deviceAttestationRequest\"];\n        return `${this.configuration.basePath}/client-api/verification/v1/android/attestations`;\n    }\n}\nAndroidDeviceVerificationServiceService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: AndroidDeviceVerificationServiceService, deps: [{ token: i1.HttpClient }, { token: DEVICE_BASE_PATH, optional: true }, { token: DeviceConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nAndroidDeviceVerificationServiceService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: AndroidDeviceVerificationServiceService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: AndroidDeviceVerificationServiceService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DEVICE_BASE_PATH]\n                }] }, { type: DeviceConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst AndroidDeviceVerificationServiceServiceChallengeMocksProvider = createMocks([{\n        urlPattern: \"/client-api/verification/v1/android/challenges\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"nonce\": \"base64 encoded long string\"\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst AndroidDeviceVerificationServiceServiceVerifyMocksProvider = createMocks([{\n        urlPattern: \"/client-api/verification/v1/android/attestations\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"success\": true,\n                    \"attestation\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlENGpDQ0FzcWdBd0lCQWdJSUNxcGkwV2JVWHh3d0RRWUpLb1pJaHZjTkFRRUxCUUF3Z1lBeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVFlXNGdSbkpoYm1OcGMyTnZNUmd3RmdZRFZRUUtFdzlGZUdGdGNHeGxJRU52YlhCaGJua3hGREFTQmdOVkJBc1RDMFY0WVcxd2JHVWdUM0puTVJRd0VnWURWUVFERXd0bGVHRnRjR3hsTG1OdmJUQWVGdzB5TVRBNU1qRXhOVFUwTURWYUZ3MHlNVEV5TWpBeE5UVTBNRFZhTUlHQU1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQk1LUTJGc2FXWnZjbTVwWVRFV01CUUdBMVVFQnhNTlUyRnVJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QUlhoaGJYQnNaU0JEYjIxd1lXNTVNUlF3RWdZRFZRUUxFd3RGZUdGdGNHeGxJRTl5WnpFVU1CSUdBMVVFQXhNTFpYaGhiWEJzWlM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZU41ZTZpV1Z5WGNuVTdrT2c0YXJrME5WczdOVG84R3RoY1NUNW4rRmVGcnNFakw2V213eTIreTFZa3pNRmErUVdwdENWeGZZVXVTSUpCNXhiMHZaUTdEOVFGTTB2OTU0NVE2aGRPTm9sbWZ2MVczd0k2UTBjN25QNXMvbXBFcm1nRTI3bmRITzNXUHFDT3NnczRsVytnWEhjZzJPeGNwYm9KZHJuVnAzWjdmMFhjMWtPUkNFcVI2RDRlb1JUSjF0VkpSMzNpZytGWnF0UVJIbkp0VEptQS84YXZwSXhXM2hkb0dkaVo1KzhLWlk4blRKTnR3elIySUxITGpiQ0RyTkl4YWVZdUlyVWp5cm81Z0M0VjhDbEpkMU0wdEtlc2NrUStRbll2NVptZDE2TWEvL29vRFhnOGVseHZ4SFY3QnJ5dmRzK2FBbS9MZXRaZFNqeitrRzFBZ01CQUFHalhqQmNNQjBHQTFVZERnUVdCQlFhdFM4b2lWYjVUaHd5VmthWjUrOEJvei9XbmpBT0JnTlZIUThCQWY4RUJBTUNCYUF3RmdZRFZSMFJCQTh3RFlJTFptOXZMbUpoY2k1amIyMHdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJKeElhc3RkaDFROThmNXAxNVA5bUlKeWZFc2kvMUpab3FXZjAzVko2ZjZpcVMza3d1MkFJWHM5c0JGMWpZdWZic014VWNhQnRPQnpua1NYY0dUaGlFUCtZRGowOTN3bzlhdG9NbFBOZG1NNCtmMWNIa1JmR0habkVyWTBoNSt3Sy9iNXhhSnlmbjZxQnZKR21mc1BMUG9MV09UNkpTdk1aWGs5Nk1OcmV5R010SWNPUXlvQVluRXJ0Q1cvTWhwN2trNkdZQ3pkK3cwQnAwTEFuQlhUQU00enE3NU02eWw5R0VjanRPWjVYWC9uQ1VIMVp0NmFKdzU0OVp6S2NDY3lySVV0bTBZdXZsdUJVakE2dFVFU0c5ZTlzKy8wRWduRlBtOUR5N21MSE1lSmNKSWFvNVY3QW1rUDZ3TGNhZWliUEViNU43N0ZTaTVoZ0FDVzJBc0VHdz0iXX0.eyJhcGtDZXJ0aWZpY2F0ZURpZ2VzdFNoYTI1NiI6WyLvv73vv71C77-977-9XHUwMDFDXHUwMDE077-977-977-9yJlv77-9JCfvv71B77-9ZO-_ve-_vUzvv73vv73vv71cdTAwMUJ4Uu-_vVUiXSwiYXBrUGFja2FnZU5hbWUiOiJjb20ucGFja2FnZS5uYW1lLm9mLnJlcXVlc3RpbmcuYXBwIiwiYmFzaWNJbnRlZ3JpdHkiOnRydWUsImN0c1Byb2ZpbGVNYXRjaCI6dHJ1ZSwiZXZhbHVhdGlvblR5cGUiOiJCQVNJQyIsImlhdCI6MTYzMjQ5NjAyNDYxMCwibm9uY2UiOiIyZjY4ZmJmYS0xNzUwLTQ1MDMtOGJmNS03OTU3NTc2ZDVkMzEiLCJ0aW1lc3RhbXBNcyI6MTYzMjQ5NjAyNDYxMH0.mV5kqvnRNcxeqH5XrzdNwSgcz8XJwdPxOv_VKoAHQjEwKv3kKftOH87cGoQij0q2Xgln0ohHsc8lSYGUqiYg1he3UJGRi0-CIXds121eXMFWPUzzTy-Bl4csxjOE_n2O7DORprKmPaVhT-anTNnbynFnMDMVA21UUIYnGryzBvDV8Xj2Mb-mv1K7xcoEpKqH3uzpKuTAOuIQctBADvIl80BkIf_JjHKC7gTIRbn-BF84RMaF29g1qBvhjPgCn5MLgyO-yMg8w3aAlJqPqZQftXNqYD4Uo9zhzjwuS_HGWJkmcJbERmzu7aRGJcS7zvai5pKDsBorxQnFugEe2A8u1w\"\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"success\": false,\n                    \"attestation\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlENGpDQ0FzcWdBd0lCQWdJSUNxcGkwV2JVWHh3d0RRWUpLb1pJaHZjTkFRRUxCUUF3Z1lBeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVFlXNGdSbkpoYm1OcGMyTnZNUmd3RmdZRFZRUUtFdzlGZUdGdGNHeGxJRU52YlhCaGJua3hGREFTQmdOVkJBc1RDMFY0WVcxd2JHVWdUM0puTVJRd0VnWURWUVFERXd0bGVHRnRjR3hsTG1OdmJUQWVGdzB5TVRBNU1qRXhOVFUwTURWYUZ3MHlNVEV5TWpBeE5UVTBNRFZhTUlHQU1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQk1LUTJGc2FXWnZjbTVwWVRFV01CUUdBMVVFQnhNTlUyRnVJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QUlhoaGJYQnNaU0JEYjIxd1lXNTVNUlF3RWdZRFZRUUxFd3RGZUdGdGNHeGxJRTl5WnpFVU1CSUdBMVVFQXhNTFpYaGhiWEJzWlM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZU41ZTZpV1Z5WGNuVTdrT2c0YXJrME5WczdOVG84R3RoY1NUNW4rRmVGcnNFakw2V213eTIreTFZa3pNRmErUVdwdENWeGZZVXVTSUpCNXhiMHZaUTdEOVFGTTB2OTU0NVE2aGRPTm9sbWZ2MVczd0k2UTBjN25QNXMvbXBFcm1nRTI3bmRITzNXUHFDT3NnczRsVytnWEhjZzJPeGNwYm9KZHJuVnAzWjdmMFhjMWtPUkNFcVI2RDRlb1JUSjF0VkpSMzNpZytGWnF0UVJIbkp0VEptQS84YXZwSXhXM2hkb0dkaVo1KzhLWlk4blRKTnR3elIySUxITGpiQ0RyTkl4YWVZdUlyVWp5cm81Z0M0VjhDbEpkMU0wdEtlc2NrUStRbll2NVptZDE2TWEvL29vRFhnOGVseHZ4SFY3QnJ5dmRzK2FBbS9MZXRaZFNqeitrRzFBZ01CQUFHalhqQmNNQjBHQTFVZERnUVdCQlFhdFM4b2lWYjVUaHd5VmthWjUrOEJvei9XbmpBT0JnTlZIUThCQWY4RUJBTUNCYUF3RmdZRFZSMFJCQTh3RFlJTFptOXZMbUpoY2k1amIyMHdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJKeElhc3RkaDFROThmNXAxNVA5bUlKeWZFc2kvMUpab3FXZjAzVko2ZjZpcVMza3d1MkFJWHM5c0JGMWpZdWZic014VWNhQnRPQnpua1NYY0dUaGlFUCtZRGowOTN3bzlhdG9NbFBOZG1NNCtmMWNIa1JmR0habkVyWTBoNSt3Sy9iNXhhSnlmbjZxQnZKR21mc1BMUG9MV09UNkpTdk1aWGs5Nk1OcmV5R010SWNPUXlvQVluRXJ0Q1cvTWhwN2trNkdZQ3pkK3cwQnAwTEFuQlhUQU00enE3NU02eWw5R0VjanRPWjVYWC9uQ1VIMVp0NmFKdzU0OVp6S2NDY3lySVV0bTBZdXZsdUJVakE2dFVFU0c5ZTlzKy8wRWduRlBtOUR5N21MSE1lSmNKSWFvNVY3QW1rUDZ3TGNhZWliUEViNU43N0ZTaTVoZ0FDVzJBc0VHdz0iXX0.eyJhcGtDZXJ0aWZpY2F0ZURpZ2VzdFNoYTI1NiI6WyLvv73vv71C77-977-9XHUwMDFDXHUwMDE077-977-977-9yJlv77-9JCfvv71B77-9ZO-_ve-_vUzvv73vv73vv71cdTAwMUJ4Uu-_vVUiXSwiYXBrUGFja2FnZU5hbWUiOiJjb20ucGFja2FnZS5uYW1lLm9mLnJlcXVlc3RpbmcuYXBwIiwiYmFzaWNJbnRlZ3JpdHkiOnRydWUsImN0c1Byb2ZpbGVNYXRjaCI6dHJ1ZSwiZXZhbHVhdGlvblR5cGUiOiJCQVNJQyIsImlhdCI6MTYzMjQ5NjAyNDYxMCwibm9uY2UiOiIyZjY4ZmJmYS0xNzUwLTQ1MDMtOGJmNS03OTU3NTc2ZDVkMzEiLCJ0aW1lc3RhbXBNcyI6MTYzMjQ5NjAyNDYxMH0.mV5kqvnRNcxeqH5XrzdNwSgcz8XJwdPxOv_VKoAHQjEwKv3kKftOH87cGoQij0q2Xgln0ohHsc8lSYGUqiYg1he3UJGRi0-CIXds121eXMFWPUzzTy-Bl4csxjOE_n2O7DORprKmPaVhT-anTNnbynFnMDMVA21UUIYnGryzBvDV8Xj2Mb-mv1K7xcoEpKqH3uzpKuTAOuIQctBADvIl80BkIf_JjHKC7gTIRbn-BF84RMaF29g1qBvhjPgCn5MLgyO-yMg8w3aAlJqPqZQftXNqYD4Uo9zhzjwuS_HGWJkmcJbERmzu7aRGJcS7zvai5pKDsBorxQnFugEe2A8u1w\"\n                }\n            },\n        ]\n    }]);\nconst AndroidDeviceVerificationServiceServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/verification/v1/android/challenges\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"nonce\": \"base64 encoded long string\"\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/verification/v1/android/attestations\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"success\": true,\n                    \"attestation\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlENGpDQ0FzcWdBd0lCQWdJSUNxcGkwV2JVWHh3d0RRWUpLb1pJaHZjTkFRRUxCUUF3Z1lBeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVFlXNGdSbkpoYm1OcGMyTnZNUmd3RmdZRFZRUUtFdzlGZUdGdGNHeGxJRU52YlhCaGJua3hGREFTQmdOVkJBc1RDMFY0WVcxd2JHVWdUM0puTVJRd0VnWURWUVFERXd0bGVHRnRjR3hsTG1OdmJUQWVGdzB5TVRBNU1qRXhOVFUwTURWYUZ3MHlNVEV5TWpBeE5UVTBNRFZhTUlHQU1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQk1LUTJGc2FXWnZjbTVwWVRFV01CUUdBMVVFQnhNTlUyRnVJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QUlhoaGJYQnNaU0JEYjIxd1lXNTVNUlF3RWdZRFZRUUxFd3RGZUdGdGNHeGxJRTl5WnpFVU1CSUdBMVVFQXhNTFpYaGhiWEJzWlM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZU41ZTZpV1Z5WGNuVTdrT2c0YXJrME5WczdOVG84R3RoY1NUNW4rRmVGcnNFakw2V213eTIreTFZa3pNRmErUVdwdENWeGZZVXVTSUpCNXhiMHZaUTdEOVFGTTB2OTU0NVE2aGRPTm9sbWZ2MVczd0k2UTBjN25QNXMvbXBFcm1nRTI3bmRITzNXUHFDT3NnczRsVytnWEhjZzJPeGNwYm9KZHJuVnAzWjdmMFhjMWtPUkNFcVI2RDRlb1JUSjF0VkpSMzNpZytGWnF0UVJIbkp0VEptQS84YXZwSXhXM2hkb0dkaVo1KzhLWlk4blRKTnR3elIySUxITGpiQ0RyTkl4YWVZdUlyVWp5cm81Z0M0VjhDbEpkMU0wdEtlc2NrUStRbll2NVptZDE2TWEvL29vRFhnOGVseHZ4SFY3QnJ5dmRzK2FBbS9MZXRaZFNqeitrRzFBZ01CQUFHalhqQmNNQjBHQTFVZERnUVdCQlFhdFM4b2lWYjVUaHd5VmthWjUrOEJvei9XbmpBT0JnTlZIUThCQWY4RUJBTUNCYUF3RmdZRFZSMFJCQTh3RFlJTFptOXZMbUpoY2k1amIyMHdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJKeElhc3RkaDFROThmNXAxNVA5bUlKeWZFc2kvMUpab3FXZjAzVko2ZjZpcVMza3d1MkFJWHM5c0JGMWpZdWZic014VWNhQnRPQnpua1NYY0dUaGlFUCtZRGowOTN3bzlhdG9NbFBOZG1NNCtmMWNIa1JmR0habkVyWTBoNSt3Sy9iNXhhSnlmbjZxQnZKR21mc1BMUG9MV09UNkpTdk1aWGs5Nk1OcmV5R010SWNPUXlvQVluRXJ0Q1cvTWhwN2trNkdZQ3pkK3cwQnAwTEFuQlhUQU00enE3NU02eWw5R0VjanRPWjVYWC9uQ1VIMVp0NmFKdzU0OVp6S2NDY3lySVV0bTBZdXZsdUJVakE2dFVFU0c5ZTlzKy8wRWduRlBtOUR5N21MSE1lSmNKSWFvNVY3QW1rUDZ3TGNhZWliUEViNU43N0ZTaTVoZ0FDVzJBc0VHdz0iXX0.eyJhcGtDZXJ0aWZpY2F0ZURpZ2VzdFNoYTI1NiI6WyLvv73vv71C77-977-9XHUwMDFDXHUwMDE077-977-977-9yJlv77-9JCfvv71B77-9ZO-_ve-_vUzvv73vv73vv71cdTAwMUJ4Uu-_vVUiXSwiYXBrUGFja2FnZU5hbWUiOiJjb20ucGFja2FnZS5uYW1lLm9mLnJlcXVlc3RpbmcuYXBwIiwiYmFzaWNJbnRlZ3JpdHkiOnRydWUsImN0c1Byb2ZpbGVNYXRjaCI6dHJ1ZSwiZXZhbHVhdGlvblR5cGUiOiJCQVNJQyIsImlhdCI6MTYzMjQ5NjAyNDYxMCwibm9uY2UiOiIyZjY4ZmJmYS0xNzUwLTQ1MDMtOGJmNS03OTU3NTc2ZDVkMzEiLCJ0aW1lc3RhbXBNcyI6MTYzMjQ5NjAyNDYxMH0.mV5kqvnRNcxeqH5XrzdNwSgcz8XJwdPxOv_VKoAHQjEwKv3kKftOH87cGoQij0q2Xgln0ohHsc8lSYGUqiYg1he3UJGRi0-CIXds121eXMFWPUzzTy-Bl4csxjOE_n2O7DORprKmPaVhT-anTNnbynFnMDMVA21UUIYnGryzBvDV8Xj2Mb-mv1K7xcoEpKqH3uzpKuTAOuIQctBADvIl80BkIf_JjHKC7gTIRbn-BF84RMaF29g1qBvhjPgCn5MLgyO-yMg8w3aAlJqPqZQftXNqYD4Uo9zhzjwuS_HGWJkmcJbERmzu7aRGJcS7zvai5pKDsBorxQnFugEe2A8u1w\"\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"success\": false,\n                    \"attestation\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlENGpDQ0FzcWdBd0lCQWdJSUNxcGkwV2JVWHh3d0RRWUpLb1pJaHZjTkFRRUxCUUF3Z1lBeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVFlXNGdSbkpoYm1OcGMyTnZNUmd3RmdZRFZRUUtFdzlGZUdGdGNHeGxJRU52YlhCaGJua3hGREFTQmdOVkJBc1RDMFY0WVcxd2JHVWdUM0puTVJRd0VnWURWUVFERXd0bGVHRnRjR3hsTG1OdmJUQWVGdzB5TVRBNU1qRXhOVFUwTURWYUZ3MHlNVEV5TWpBeE5UVTBNRFZhTUlHQU1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQk1LUTJGc2FXWnZjbTVwWVRFV01CUUdBMVVFQnhNTlUyRnVJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QUlhoaGJYQnNaU0JEYjIxd1lXNTVNUlF3RWdZRFZRUUxFd3RGZUdGdGNHeGxJRTl5WnpFVU1CSUdBMVVFQXhNTFpYaGhiWEJzWlM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZU41ZTZpV1Z5WGNuVTdrT2c0YXJrME5WczdOVG84R3RoY1NUNW4rRmVGcnNFakw2V213eTIreTFZa3pNRmErUVdwdENWeGZZVXVTSUpCNXhiMHZaUTdEOVFGTTB2OTU0NVE2aGRPTm9sbWZ2MVczd0k2UTBjN25QNXMvbXBFcm1nRTI3bmRITzNXUHFDT3NnczRsVytnWEhjZzJPeGNwYm9KZHJuVnAzWjdmMFhjMWtPUkNFcVI2RDRlb1JUSjF0VkpSMzNpZytGWnF0UVJIbkp0VEptQS84YXZwSXhXM2hkb0dkaVo1KzhLWlk4blRKTnR3elIySUxITGpiQ0RyTkl4YWVZdUlyVWp5cm81Z0M0VjhDbEpkMU0wdEtlc2NrUStRbll2NVptZDE2TWEvL29vRFhnOGVseHZ4SFY3QnJ5dmRzK2FBbS9MZXRaZFNqeitrRzFBZ01CQUFHalhqQmNNQjBHQTFVZERnUVdCQlFhdFM4b2lWYjVUaHd5VmthWjUrOEJvei9XbmpBT0JnTlZIUThCQWY4RUJBTUNCYUF3RmdZRFZSMFJCQTh3RFlJTFptOXZMbUpoY2k1amIyMHdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUJKeElhc3RkaDFROThmNXAxNVA5bUlKeWZFc2kvMUpab3FXZjAzVko2ZjZpcVMza3d1MkFJWHM5c0JGMWpZdWZic014VWNhQnRPQnpua1NYY0dUaGlFUCtZRGowOTN3bzlhdG9NbFBOZG1NNCtmMWNIa1JmR0habkVyWTBoNSt3Sy9iNXhhSnlmbjZxQnZKR21mc1BMUG9MV09UNkpTdk1aWGs5Nk1OcmV5R010SWNPUXlvQVluRXJ0Q1cvTWhwN2trNkdZQ3pkK3cwQnAwTEFuQlhUQU00enE3NU02eWw5R0VjanRPWjVYWC9uQ1VIMVp0NmFKdzU0OVp6S2NDY3lySVV0bTBZdXZsdUJVakE2dFVFU0c5ZTlzKy8wRWduRlBtOUR5N21MSE1lSmNKSWFvNVY3QW1rUDZ3TGNhZWliUEViNU43N0ZTaTVoZ0FDVzJBc0VHdz0iXX0.eyJhcGtDZXJ0aWZpY2F0ZURpZ2VzdFNoYTI1NiI6WyLvv73vv71C77-977-9XHUwMDFDXHUwMDE077-977-977-9yJlv77-9JCfvv71B77-9ZO-_ve-_vUzvv73vv73vv71cdTAwMUJ4Uu-_vVUiXSwiYXBrUGFja2FnZU5hbWUiOiJjb20ucGFja2FnZS5uYW1lLm9mLnJlcXVlc3RpbmcuYXBwIiwiYmFzaWNJbnRlZ3JpdHkiOnRydWUsImN0c1Byb2ZpbGVNYXRjaCI6dHJ1ZSwiZXZhbHVhdGlvblR5cGUiOiJCQVNJQyIsImlhdCI6MTYzMjQ5NjAyNDYxMCwibm9uY2UiOiIyZjY4ZmJmYS0xNzUwLTQ1MDMtOGJmNS03OTU3NTc2ZDVkMzEiLCJ0aW1lc3RhbXBNcyI6MTYzMjQ5NjAyNDYxMH0.mV5kqvnRNcxeqH5XrzdNwSgcz8XJwdPxOv_VKoAHQjEwKv3kKftOH87cGoQij0q2Xgln0ohHsc8lSYGUqiYg1he3UJGRi0-CIXds121eXMFWPUzzTy-Bl4csxjOE_n2O7DORprKmPaVhT-anTNnbynFnMDMVA21UUIYnGryzBvDV8Xj2Mb-mv1K7xcoEpKqH3uzpKuTAOuIQctBADvIl80BkIf_JjHKC7gTIRbn-BF84RMaF29g1qBvhjPgCn5MLgyO-yMg8w3aAlJqPqZQftXNqYD4Uo9zhzjwuS_HGWJkmcJbERmzu7aRGJcS7zvai5pKDsBorxQnFugEe2A8u1w\"\n                }\n            },\n        ]\n    },\n]);\n\nclass ManageMyDevicesService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new DeviceConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    deleteMyDeviceByDeviceId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling deleteMyDeviceByDeviceId.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v1/users/me/devices/${encodeURIComponent(String(_deviceId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deleteMyDeviceByDeviceIdUrl(requestParameters) {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling deleteMyDeviceByDeviceId.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/users/me/devices/${encodeURIComponent(String(_deviceId))}`;\n    }\n    getMyDevices(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/users/me/devices`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getMyDevicesUrl() {\n        return `${this.configuration.basePath}/client-api/v1/users/me/devices`;\n    }\n    patchMyDeviceByDeviceId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling patchMyDeviceByDeviceId.');\n        }\n        const _patchDeviceRequest = requestParameters[\"patchDeviceRequest\"];\n        if (_patchDeviceRequest === null || _patchDeviceRequest === undefined) {\n            throw new Error('Required parameter patchDeviceRequest was null or undefined when calling patchMyDeviceByDeviceId.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.patch(`${this.configuration.basePath}/client-api/v1/users/me/devices/${encodeURIComponent(String(_deviceId))}`, _patchDeviceRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    patchMyDeviceByDeviceIdUrl(requestParameters) {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling patchMyDeviceByDeviceId.');\n        }\n        const _patchDeviceRequest = requestParameters[\"patchDeviceRequest\"];\n        if (_patchDeviceRequest === null || _patchDeviceRequest === undefined) {\n            throw new Error('Required parameter patchDeviceRequest was null or undefined when calling patchMyDeviceByDeviceId.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/users/me/devices/${encodeURIComponent(String(_deviceId))}`;\n    }\n    putPushToken(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling putPushToken.');\n        }\n        const _putPushTokenRequest = requestParameters[\"putPushTokenRequest\"];\n        if (_putPushTokenRequest === null || _putPushTokenRequest === undefined) {\n            throw new Error('Required parameter putPushTokenRequest was null or undefined when calling putPushToken.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v1/users/me/devices/${encodeURIComponent(String(_deviceId))}/push-tokens`, _putPushTokenRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putPushTokenUrl(requestParameters) {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling putPushToken.');\n        }\n        const _putPushTokenRequest = requestParameters[\"putPushTokenRequest\"];\n        if (_putPushTokenRequest === null || _putPushTokenRequest === undefined) {\n            throw new Error('Required parameter putPushTokenRequest was null or undefined when calling putPushToken.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/users/me/devices/${encodeURIComponent(String(_deviceId))}/push-tokens`;\n    }\n}\nManageMyDevicesService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ManageMyDevicesService, deps: [{ token: i1.HttpClient }, { token: DEVICE_BASE_PATH, optional: true }, { token: DeviceConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nManageMyDevicesService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ManageMyDevicesService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ManageMyDevicesService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DEVICE_BASE_PATH]\n                }] }, { type: DeviceConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst ManageMyDevicesServiceDeleteMyDeviceByDeviceIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/users/me/devices/{deviceId}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst ManageMyDevicesServiceGetMyDevicesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/users/me/devices\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"devices\": [{\n                            \"deviceId\": \"3aea3f5c-776a-4547-ae9d-4099d0af7d3b\",\n                            \"idpUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n                            \"externalUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n                            \"dbsUserId\": \"8a48e1f56e880779016e8809ab970000\",\n                            \"username\": \"Bob_Jones\",\n                            \"friendlyName\": \"Bob's Galaxy S7\",\n                            \"status\": \"ENABLED\",\n                            \"vendor\": \"Samsung\",\n                            \"model\": \"Galaxy S7\",\n                            \"created\": \"2019-09-03T07:44:57Z\",\n                            \"updated\": \"2019-10-13T15:30:22Z\"\n                        }, {\n                            \"deviceId\": \"5148b0f1-099f-4ef8-b34e-804013011dcf\",\n                            \"idpUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n                            \"externalUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n                            \"dbsUserId\": \"8a48e1f56e880779016e8809ab970000\",\n                            \"username\": \"Bob_Jones\",\n                            \"friendlyName\": \"Bob's iPhone\",\n                            \"status\": \"DISABLED\",\n                            \"vendor\": \"Apple\",\n                            \"model\": \"iPhone 10\",\n                            \"created\": \"2019-09-03T08:34:11Z\",\n                            \"updated\": \"2019-10-13T15:32:58Z\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst ManageMyDevicesServicePatchMyDeviceByDeviceIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/users/me/devices/{deviceId}\",\n        method: \"PATCH\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst ManageMyDevicesServicePutPushTokenMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/users/me/devices/{deviceId}/push-tokens\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst ManageMyDevicesServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v1/users/me/devices/{deviceId}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/users/me/devices\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"devices\": [{\n                            \"deviceId\": \"3aea3f5c-776a-4547-ae9d-4099d0af7d3b\",\n                            \"idpUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n                            \"externalUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n                            \"dbsUserId\": \"8a48e1f56e880779016e8809ab970000\",\n                            \"username\": \"Bob_Jones\",\n                            \"friendlyName\": \"Bob's Galaxy S7\",\n                            \"status\": \"ENABLED\",\n                            \"vendor\": \"Samsung\",\n                            \"model\": \"Galaxy S7\",\n                            \"created\": \"2019-09-03T07:44:57Z\",\n                            \"updated\": \"2019-10-13T15:30:22Z\"\n                        }, {\n                            \"deviceId\": \"5148b0f1-099f-4ef8-b34e-804013011dcf\",\n                            \"idpUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n                            \"externalUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n                            \"dbsUserId\": \"8a48e1f56e880779016e8809ab970000\",\n                            \"username\": \"Bob_Jones\",\n                            \"friendlyName\": \"Bob's iPhone\",\n                            \"status\": \"DISABLED\",\n                            \"vendor\": \"Apple\",\n                            \"model\": \"iPhone 10\",\n                            \"created\": \"2019-09-03T08:34:11Z\",\n                            \"updated\": \"2019-10-13T15:32:58Z\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/users/me/devices/{deviceId}\",\n        method: \"PATCH\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/users/me/devices/{deviceId}/push-tokens\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nclass ManageOtherUsersDevicesService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new DeviceConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    deleteUserDeviceByDeviceId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling deleteUserDeviceByDeviceId.');\n        }\n        const _dbsUserId = requestParameters[\"dbsUserId\"];\n        if (_dbsUserId === null || _dbsUserId === undefined) {\n            throw new Error('Required parameter dbsUserId was null or undefined when calling deleteUserDeviceByDeviceId.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v1/users/${encodeURIComponent(String(_dbsUserId))}/devices/${encodeURIComponent(String(_deviceId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deleteUserDeviceByDeviceIdUrl(requestParameters) {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling deleteUserDeviceByDeviceId.');\n        }\n        const _dbsUserId = requestParameters[\"dbsUserId\"];\n        if (_dbsUserId === null || _dbsUserId === undefined) {\n            throw new Error('Required parameter dbsUserId was null or undefined when calling deleteUserDeviceByDeviceId.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/users/${encodeURIComponent(String(_dbsUserId))}/devices/${encodeURIComponent(String(_deviceId))}`;\n    }\n    getDevicesByDbsUserId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _dbsUserId = requestParameters[\"dbsUserId\"];\n        if (_dbsUserId === null || _dbsUserId === undefined) {\n            throw new Error('Required parameter dbsUserId was null or undefined when calling getDevicesByDbsUserId.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/users/${encodeURIComponent(String(_dbsUserId))}/devices`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getDevicesByDbsUserIdUrl(requestParameters) {\n        const _dbsUserId = requestParameters[\"dbsUserId\"];\n        if (_dbsUserId === null || _dbsUserId === undefined) {\n            throw new Error('Required parameter dbsUserId was null or undefined when calling getDevicesByDbsUserId.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/users/${encodeURIComponent(String(_dbsUserId))}/devices`;\n    }\n    patchUserDeviceByDbsUserIdAndDeviceId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling patchUserDeviceByDbsUserIdAndDeviceId.');\n        }\n        const _dbsUserId = requestParameters[\"dbsUserId\"];\n        if (_dbsUserId === null || _dbsUserId === undefined) {\n            throw new Error('Required parameter dbsUserId was null or undefined when calling patchUserDeviceByDbsUserIdAndDeviceId.');\n        }\n        const _patchDeviceRequest = requestParameters[\"patchDeviceRequest\"];\n        if (_patchDeviceRequest === null || _patchDeviceRequest === undefined) {\n            throw new Error('Required parameter patchDeviceRequest was null or undefined when calling patchUserDeviceByDbsUserIdAndDeviceId.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.patch(`${this.configuration.basePath}/client-api/v1/users/${encodeURIComponent(String(_dbsUserId))}/devices/${encodeURIComponent(String(_deviceId))}`, _patchDeviceRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    patchUserDeviceByDbsUserIdAndDeviceIdUrl(requestParameters) {\n        const _deviceId = requestParameters[\"deviceId\"];\n        if (_deviceId === null || _deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling patchUserDeviceByDbsUserIdAndDeviceId.');\n        }\n        const _dbsUserId = requestParameters[\"dbsUserId\"];\n        if (_dbsUserId === null || _dbsUserId === undefined) {\n            throw new Error('Required parameter dbsUserId was null or undefined when calling patchUserDeviceByDbsUserIdAndDeviceId.');\n        }\n        const _patchDeviceRequest = requestParameters[\"patchDeviceRequest\"];\n        if (_patchDeviceRequest === null || _patchDeviceRequest === undefined) {\n            throw new Error('Required parameter patchDeviceRequest was null or undefined when calling patchUserDeviceByDbsUserIdAndDeviceId.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/users/${encodeURIComponent(String(_dbsUserId))}/devices/${encodeURIComponent(String(_deviceId))}`;\n    }\n}\nManageOtherUsersDevicesService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ManageOtherUsersDevicesService, deps: [{ token: i1.HttpClient }, { token: DEVICE_BASE_PATH, optional: true }, { token: DeviceConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nManageOtherUsersDevicesService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ManageOtherUsersDevicesService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ManageOtherUsersDevicesService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DEVICE_BASE_PATH]\n                }] }, { type: DeviceConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst ManageOtherUsersDevicesServiceDeleteUserDeviceByDeviceIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/users/{dbsUserId}/devices/{deviceId}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst ManageOtherUsersDevicesServiceGetDevicesByDbsUserIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/users/{dbsUserId}/devices\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"devices\": [{\n                            \"deviceId\": \"3aea3f5c-776a-4547-ae9d-4099d0af7d3b\",\n                            \"idpUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n                            \"externalUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n                            \"dbsUserId\": \"8a48e1f56e880779016e8809ab970000\",\n                            \"username\": \"Bob_Jones\",\n                            \"friendlyName\": \"Bob's Galaxy S7\",\n                            \"status\": \"ENABLED\",\n                            \"vendor\": \"Samsung\",\n                            \"model\": \"Galaxy S7\",\n                            \"created\": \"2019-09-03T07:44:57Z\",\n                            \"updated\": \"2019-10-13T15:30:22Z\"\n                        }, {\n                            \"deviceId\": \"5148b0f1-099f-4ef8-b34e-804013011dcf\",\n                            \"idpUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n                            \"externalUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n                            \"dbsUserId\": \"8a48e1f56e880779016e8809ab970000\",\n                            \"username\": \"Bob_Jones\",\n                            \"friendlyName\": \"Bob's iPhone\",\n                            \"status\": \"DISABLED\",\n                            \"vendor\": \"Apple\",\n                            \"model\": \"iPhone 10\",\n                            \"created\": \"2019-09-03T08:34:11Z\",\n                            \"updated\": \"2019-10-13T15:32:58Z\"\n                        }]\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"devices\": [{\n                            \"created\": \"2000-01-23T04:56:07.000+00:00\",\n                            \"idpUserId\": \"idpUserId\",\n                            \"deviceId\": \"deviceId\",\n                            \"pushToken\": \"pushToken\",\n                            \"platform\": \"platform\",\n                            \"dbsUserId\": \"dbsUserId\",\n                            \"externalUserId\": \"externalUserId\",\n                            \"vendor\": \"vendor\",\n                            \"model\": \"model\",\n                            \"updated\": \"2000-01-23T04:56:07.000+00:00\",\n                            \"friendlyName\": \"friendlyName\",\n                            \"username\": \"username\"\n                        }, {\n                            \"created\": \"2000-01-23T04:56:07.000+00:00\",\n                            \"idpUserId\": \"idpUserId\",\n                            \"deviceId\": \"deviceId\",\n                            \"pushToken\": \"pushToken\",\n                            \"platform\": \"platform\",\n                            \"dbsUserId\": \"dbsUserId\",\n                            \"externalUserId\": \"externalUserId\",\n                            \"vendor\": \"vendor\",\n                            \"model\": \"model\",\n                            \"updated\": \"2000-01-23T04:56:07.000+00:00\",\n                            \"friendlyName\": \"friendlyName\",\n                            \"username\": \"username\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst ManageOtherUsersDevicesServicePatchUserDeviceByDbsUserIdAndDeviceIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/users/{dbsUserId}/devices/{deviceId}\",\n        method: \"PATCH\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst ManageOtherUsersDevicesServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v1/users/{dbsUserId}/devices/{deviceId}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/users/{dbsUserId}/devices\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"devices\": [{\n                            \"deviceId\": \"3aea3f5c-776a-4547-ae9d-4099d0af7d3b\",\n                            \"idpUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n                            \"externalUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n                            \"dbsUserId\": \"8a48e1f56e880779016e8809ab970000\",\n                            \"username\": \"Bob_Jones\",\n                            \"friendlyName\": \"Bob's Galaxy S7\",\n                            \"status\": \"ENABLED\",\n                            \"vendor\": \"Samsung\",\n                            \"model\": \"Galaxy S7\",\n                            \"created\": \"2019-09-03T07:44:57Z\",\n                            \"updated\": \"2019-10-13T15:30:22Z\"\n                        }, {\n                            \"deviceId\": \"5148b0f1-099f-4ef8-b34e-804013011dcf\",\n                            \"idpUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n                            \"externalUserId\": \"acd18bff-f34a-4329-9e74-de4df3a86c9a\",\n                            \"dbsUserId\": \"8a48e1f56e880779016e8809ab970000\",\n                            \"username\": \"Bob_Jones\",\n                            \"friendlyName\": \"Bob's iPhone\",\n                            \"status\": \"DISABLED\",\n                            \"vendor\": \"Apple\",\n                            \"model\": \"iPhone 10\",\n                            \"created\": \"2019-09-03T08:34:11Z\",\n                            \"updated\": \"2019-10-13T15:32:58Z\"\n                        }]\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"devices\": [{\n                            \"created\": \"2000-01-23T04:56:07.000+00:00\",\n                            \"idpUserId\": \"idpUserId\",\n                            \"deviceId\": \"deviceId\",\n                            \"pushToken\": \"pushToken\",\n                            \"platform\": \"platform\",\n                            \"dbsUserId\": \"dbsUserId\",\n                            \"externalUserId\": \"externalUserId\",\n                            \"vendor\": \"vendor\",\n                            \"model\": \"model\",\n                            \"updated\": \"2000-01-23T04:56:07.000+00:00\",\n                            \"friendlyName\": \"friendlyName\",\n                            \"username\": \"username\"\n                        }, {\n                            \"created\": \"2000-01-23T04:56:07.000+00:00\",\n                            \"idpUserId\": \"idpUserId\",\n                            \"deviceId\": \"deviceId\",\n                            \"pushToken\": \"pushToken\",\n                            \"platform\": \"platform\",\n                            \"dbsUserId\": \"dbsUserId\",\n                            \"externalUserId\": \"externalUserId\",\n                            \"vendor\": \"vendor\",\n                            \"model\": \"model\",\n                            \"updated\": \"2000-01-23T04:56:07.000+00:00\",\n                            \"friendlyName\": \"friendlyName\",\n                            \"username\": \"username\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/users/{dbsUserId}/devices/{deviceId}\",\n        method: \"PATCH\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nexport { AndroidDeviceVerificationServiceService, AndroidDeviceVerificationServiceServiceChallengeMocksProvider, AndroidDeviceVerificationServiceServiceMocksProvider, AndroidDeviceVerificationServiceServiceVerifyMocksProvider, COLLECTION_FORMATS, CONFIG_TOKEN, DEVICE_BASE_PATH, DeviceApiModule, DeviceConfiguration, DeviceStatus, ManageMyDevicesService, ManageMyDevicesServiceDeleteMyDeviceByDeviceIdMocksProvider, ManageMyDevicesServiceGetMyDevicesMocksProvider, ManageMyDevicesServiceMocksProvider, ManageMyDevicesServicePatchMyDeviceByDeviceIdMocksProvider, ManageMyDevicesServicePutPushTokenMocksProvider, ManageOtherUsersDevicesService, ManageOtherUsersDevicesServiceDeleteUserDeviceByDeviceIdMocksProvider, ManageOtherUsersDevicesServiceGetDevicesByDbsUserIdMocksProvider, ManageOtherUsersDevicesServiceMocksProvider, ManageOtherUsersDevicesServicePatchUserDeviceByDbsUserIdAndDeviceIdMocksProvider, Platform };\n"]},"metadata":{},"sourceType":"module"}