{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\nconst ApprovalStatus = {\n  PENDING: 'PENDING',\n  APPROVED: 'APPROVED',\n  REJECTED: 'REJECTED',\n  CANCELLED: 'CANCELLED'\n};\nvar BreachInfo;\n\n(function (BreachInfo) {\n  BreachInfo.BreachTypeEnum = {\n    THRESHOLD: 'THRESHOLD',\n    CONSUMPTION: 'CONSUMPTION'\n  };\n  BreachInfo.BreachedLimitTypeEnum = {\n    PERIODIC: 'PERIODIC',\n    TRANSACTIONAL: 'TRANSACTIONAL'\n  };\n})(BreachInfo || (BreachInfo = {}));\n\nvar BulkPaymentOrdersApprovalPutResponseStatus;\n\n(function (BulkPaymentOrdersApprovalPutResponseStatus) {\n  BulkPaymentOrdersApprovalPutResponseStatus.CodeEnum = {\n    OK: 'OK',\n    ERROR: 'ERROR'\n  };\n})(BulkPaymentOrdersApprovalPutResponseStatus || (BulkPaymentOrdersApprovalPutResponseStatus = {}));\n\nconst ChargeBearer = {\n  OUR: 'OUR',\n  BEN: 'BEN',\n  SHA: 'SHA'\n};\nvar ExchangeRateInformation;\n\n(function (ExchangeRateInformation) {\n  ExchangeRateInformation.RateTypeEnum = {\n    ACTUAL: 'ACTUAL',\n    INDICATIVE: 'INDICATIVE',\n    AGREED: 'AGREED'\n  };\n})(ExchangeRateInformation || (ExchangeRateInformation = {}));\n\nconst InstructionPriority = {\n  NORM: 'NORM',\n  HIGH: 'HIGH'\n};\nconst InvolvedPartyRole = {\n  CREDITOR: 'CREDITOR',\n  DEBTOR: 'DEBTOR'\n};\nconst LogicalOperator = {\n  OR: 'OR'\n};\nconst PaymentAction = {\n  APPROVE: 'APPROVE',\n  FINALAPPROVE: 'FINAL_APPROVE',\n  REJECT: 'REJECT',\n  CANCEL: 'CANCEL',\n  DELETE: 'DELETE',\n  EDIT: 'EDIT'\n};\nconst PaymentMode = {\n  SINGLE: 'SINGLE',\n  RECURRING: 'RECURRING'\n};\nvar PaymentOrderProgressStatusGet;\n\n(function (PaymentOrderProgressStatusGet) {\n  PaymentOrderProgressStatusGet.ProgressStatusEnum = {\n    CONFIRMATIONPENDING: 'CONFIRMATION_PENDING',\n    USERDECLINED: 'USER_DECLINED',\n    SYSTEMDECLINED: 'SYSTEM_DECLINED',\n    PENDINGAPPROVAL: 'PENDING_APPROVAL',\n    SENDING: 'SENDING',\n    ACCEPTED: 'ACCEPTED',\n    REJECTED: 'REJECTED',\n    PROCESSED: 'PROCESSED',\n    NOPROGRESS: 'NO_PROGRESS'\n  };\n})(PaymentOrderProgressStatusGet || (PaymentOrderProgressStatusGet = {}));\n\nconst RecordStatus = {\n  APPROVED: 'APPROVED',\n  REJECTED: 'REJECTED'\n};\nvar RemittanceInformation;\n\n(function (RemittanceInformation) {\n  RemittanceInformation.TypeEnum = {\n    STRUCTURED: 'STRUCTURED',\n    UNSTRUCTURED: 'UNSTRUCTURED'\n  };\n})(RemittanceInformation || (RemittanceInformation = {}));\n\nvar Schedule;\n\n(function (Schedule) {\n  Schedule.NonWorkingDayExecutionStrategyEnum = {\n    BEFORE: 'BEFORE',\n    AFTER: 'AFTER',\n    NONE: 'NONE'\n  };\n  Schedule.TransferFrequencyEnum = {\n    ONCE: 'ONCE',\n    DAILY: 'DAILY',\n    WEEKLY: 'WEEKLY',\n    BIWEEKLY: 'BIWEEKLY',\n    MONTHLY: 'MONTHLY',\n    QUARTERLY: 'QUARTERLY',\n    YEARLY: 'YEARLY'\n  };\n  Schedule.EveryEnum = {\n    _1: '1',\n    _2: '2'\n  };\n})(Schedule || (Schedule = {}));\n\nconst SchemeNames = {\n  IBAN: 'IBAN',\n  BBAN: 'BBAN',\n  ID: 'ID',\n  EXTERNALID: 'EXTERNAL_ID',\n  EMAIL: 'EMAIL',\n  MOBILE: 'MOBILE'\n};\nconst Status = {\n  DRAFT: 'DRAFT',\n  ENTERED: 'ENTERED',\n  READY: 'READY',\n  ACCEPTED: 'ACCEPTED',\n  PROCESSED: 'PROCESSED',\n  REJECTED: 'REJECTED',\n  CANCELLED: 'CANCELLED',\n  CANCELLATIONPENDING: 'CANCELLATION_PENDING',\n  CONFIRMATIONPENDING: 'CONFIRMATION_PENDING',\n  CONFIRMATIONDECLINED: 'CONFIRMATION_DECLINED',\n  REPLACED: 'REPLACED'\n};\nconst PAYMENT_ORDER_BASE_PATH = new InjectionToken('PAYMENT_ORDER_BASE_PATH');\nconst COLLECTION_FORMATS = {\n  'csv': ',',\n  'tsv': '   ',\n  'ssv': ' ',\n  'pipes': '|'\n};\n\nclass PaymentOrderConfiguration {\n  constructor(configurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n    this.encoder = configurationParameters.encoder;\n\n    if (configurationParameters.credentials) {\n      this.credentials = configurationParameters.credentials;\n    } else {\n      this.credentials = {};\n    }\n  }\n\n  selectHeaderContentType(contentTypes) {\n    if (contentTypes.length === 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n\n    return type;\n  }\n\n  selectHeaderAccept(accepts) {\n    if (accepts.length === 0) {\n      return undefined;\n    }\n\n    const type = accepts.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return accepts[0];\n    }\n\n    return type;\n  }\n\n  isJsonMime(mime) {\n    const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n    return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n  }\n\n  lookupCredential(key) {\n    const value = this.credentials[key];\n    return typeof value === 'function' ? value() : value;\n  }\n\n}\n\nconst CONFIG_TOKEN = new InjectionToken('api-data-module PaymentOrderConfiguration');\n\nclass PaymentOrderApiModule {\n  constructor(parentModule, http, dataModulesManager, config) {\n    if (parentModule) {\n      throw new Error('PaymentOrderApiModule is already loaded. Import in your base AppModule only.');\n    }\n\n    if (!http) {\n      throw new Error('You need to import the HttpClientModule in your AppModule! \\n' + 'See also https://github.com/angular/angular/issues/20575');\n    }\n\n    if (dataModulesManager) {\n      dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n        apiRoot: '',\n        servicePath: config.basePath || '',\n        headers: {}\n      });\n    }\n  }\n\n  static forRoot(configurationFactory) {\n    return {\n      ngModule: PaymentOrderApiModule,\n      providers: [{\n        provide: PaymentOrderConfiguration,\n        useFactory: configurationFactory\n      }]\n    };\n  }\n\n}\n\nPaymentOrderApiModule.ɵfac = function PaymentOrderApiModule_Factory(t) {\n  return new (t || PaymentOrderApiModule)(i0.ɵɵinject(PaymentOrderApiModule, 12), i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DataModulesManager, 8), i0.ɵɵinject(PaymentOrderConfiguration));\n};\n\nPaymentOrderApiModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PaymentOrderApiModule\n});\nPaymentOrderApiModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [],\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaymentOrderApiModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [],\n      exports: [],\n      providers: []\n    }]\n  }], function () {\n    return [{\n      type: PaymentOrderApiModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: i1.HttpClient,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2.DataModulesManager,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: PaymentOrderConfiguration\n    }];\n  }, null);\n})();\n\nclass CustomHttpParameterCodec {\n  encodeKey(k) {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v) {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k) {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v) {\n    return decodeURIComponent(v);\n  }\n\n}\n\nclass PaymentOrdersHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new PaymentOrderConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  deletePaymentOrderById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n\n    if (_paymentOrderId === null || _paymentOrderId === undefined) {\n      throw new Error('Required parameter paymentOrderId was null or undefined when calling deletePaymentOrderById.');\n    }\n\n    const _version = requestParameters[\"version\"];\n\n    if (_version === null || _version === undefined) {\n      throw new Error('Required parameter version was null or undefined when calling deletePaymentOrderById.');\n    }\n\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_version !== undefined && _version !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _version, 'version');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deletePaymentOrderByIdUrl(requestParameters) {\n    const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n\n    if (_paymentOrderId === null || _paymentOrderId === undefined) {\n      throw new Error('Required parameter paymentOrderId was null or undefined when calling deletePaymentOrderById.');\n    }\n\n    const _version = requestParameters[\"version\"];\n\n    if (_version === null || _version === undefined) {\n      throw new Error('Required parameter version was null or undefined when calling deletePaymentOrderById.');\n    }\n\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_version !== undefined && _version !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _version, 'version');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}${queryString ? `?${queryString}` : ''}`;\n  }\n\n  getApprovablePaymentOrders(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _cursor = requestParameters[\"cursor\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_cursor !== undefined && _cursor !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/payment-orders/approvals`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getApprovablePaymentOrdersUrl(requestParameters) {\n    const _cursor = requestParameters[\"cursor\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_cursor !== undefined && _cursor !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/payment-orders/approvals${queryString ? `?${queryString}` : ''}`;\n  }\n\n  getCurrencies(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/payment-orders/currencies`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getCurrenciesUrl() {\n    return `${this.configuration.basePath}/client-api/v2/payment-orders/currencies`;\n  }\n\n  getPaymentOrderById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n\n    if (_paymentOrderId === null || _paymentOrderId === undefined) {\n      throw new Error('Required parameter paymentOrderId was null or undefined when calling getPaymentOrderById.');\n    }\n\n    const _userId = requestParameters[\"userId\"];\n    const _saId = requestParameters[\"saId\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_userId !== undefined && _userId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _userId, 'userId');\n    }\n\n    if (_saId !== undefined && _saId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _saId, 'saId');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getPaymentOrderByIdUrl(requestParameters) {\n    const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n\n    if (_paymentOrderId === null || _paymentOrderId === undefined) {\n      throw new Error('Required parameter paymentOrderId was null or undefined when calling getPaymentOrderById.');\n    }\n\n    const _userId = requestParameters[\"userId\"];\n    const _saId = requestParameters[\"saId\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_userId !== undefined && _userId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _userId, 'userId');\n    }\n\n    if (_saId !== undefined && _saId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _saId, 'saId');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}${queryString ? `?${queryString}` : ''}`;\n  }\n\n  getPaymentOrderExport(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n\n    if (_paymentOrderId === null || _paymentOrderId === undefined) {\n      throw new Error('Required parameter paymentOrderId was null or undefined when calling getPaymentOrderExport.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/pdf', 'application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}/export`, {\n      responseType: \"blob\",\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getPaymentOrderExportUrl(requestParameters) {\n    const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n\n    if (_paymentOrderId === null || _paymentOrderId === undefined) {\n      throw new Error('Required parameter paymentOrderId was null or undefined when calling getPaymentOrderExport.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}/export`;\n  }\n\n  getPaymentOrders(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _status = requestParameters[\"status\"];\n    const _paymentTypeGroup = requestParameters[\"paymentTypeGroup\"];\n    const _createdByMe = requestParameters[\"createdByMe\"];\n    const _userId = requestParameters[\"userId\"];\n    const _saId = requestParameters[\"saId\"];\n    const _originatorArrangementId = requestParameters[\"originatorArrangementId\"];\n    const _query = requestParameters[\"query\"];\n    const _amountFrom = requestParameters[\"amountFrom\"];\n    const _amountTo = requestParameters[\"amountTo\"];\n    const _executionDate = requestParameters[\"executionDate\"];\n    const _executionDateFrom = requestParameters[\"executionDateFrom\"];\n    const _executionDateTo = requestParameters[\"executionDateTo\"];\n    const _nextExecutionDate = requestParameters[\"nextExecutionDate\"];\n    const _nextExecutionDateFrom = requestParameters[\"nextExecutionDateFrom\"];\n    const _nextExecutionDateTo = requestParameters[\"nextExecutionDateTo\"];\n    const _paymentMode = requestParameters[\"paymentMode\"];\n    const _paymentSetupId = requestParameters[\"paymentSetupId\"];\n    const _transferFrequency = requestParameters[\"transferFrequency\"];\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    const _orderBy = requestParameters[\"orderBy\"];\n    const _direction = requestParameters[\"direction\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_status) {\n      _status.forEach(element => {\n        queryParameters = this.addToHttpParams(queryParameters, element, 'status');\n      });\n    }\n\n    if (_paymentTypeGroup !== undefined && _paymentTypeGroup !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _paymentTypeGroup, 'paymentTypeGroup');\n    }\n\n    if (_createdByMe !== undefined && _createdByMe !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _createdByMe, 'createdByMe');\n    }\n\n    if (_userId !== undefined && _userId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _userId, 'userId');\n    }\n\n    if (_saId !== undefined && _saId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _saId, 'saId');\n    }\n\n    if (_originatorArrangementId !== undefined && _originatorArrangementId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _originatorArrangementId, 'originatorArrangementId');\n    }\n\n    if (_query !== undefined && _query !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n    }\n\n    if (_amountFrom !== undefined && _amountFrom !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _amountFrom, 'amountFrom');\n    }\n\n    if (_amountTo !== undefined && _amountTo !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _amountTo, 'amountTo');\n    }\n\n    if (_executionDate !== undefined && _executionDate !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _executionDate, 'executionDate');\n    }\n\n    if (_executionDateFrom !== undefined && _executionDateFrom !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _executionDateFrom, 'executionDateFrom');\n    }\n\n    if (_executionDateTo !== undefined && _executionDateTo !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _executionDateTo, 'executionDateTo');\n    }\n\n    if (_nextExecutionDate !== undefined && _nextExecutionDate !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _nextExecutionDate, 'nextExecutionDate');\n    }\n\n    if (_nextExecutionDateFrom !== undefined && _nextExecutionDateFrom !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _nextExecutionDateFrom, 'nextExecutionDateFrom');\n    }\n\n    if (_nextExecutionDateTo !== undefined && _nextExecutionDateTo !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _nextExecutionDateTo, 'nextExecutionDateTo');\n    }\n\n    if (_paymentMode !== undefined && _paymentMode !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _paymentMode, 'paymentMode');\n    }\n\n    if (_paymentSetupId !== undefined && _paymentSetupId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _paymentSetupId, 'paymentSetupId');\n    }\n\n    if (_transferFrequency !== undefined && _transferFrequency !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _transferFrequency, 'transferFrequency');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    if (_orderBy !== undefined && _orderBy !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _orderBy, 'orderBy');\n    }\n\n    if (_direction !== undefined && _direction !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _direction, 'direction');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/payment-orders`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getPaymentOrdersUrl(requestParameters) {\n    const _status = requestParameters[\"status\"];\n    const _paymentTypeGroup = requestParameters[\"paymentTypeGroup\"];\n    const _createdByMe = requestParameters[\"createdByMe\"];\n    const _userId = requestParameters[\"userId\"];\n    const _saId = requestParameters[\"saId\"];\n    const _originatorArrangementId = requestParameters[\"originatorArrangementId\"];\n    const _query = requestParameters[\"query\"];\n    const _amountFrom = requestParameters[\"amountFrom\"];\n    const _amountTo = requestParameters[\"amountTo\"];\n    const _executionDate = requestParameters[\"executionDate\"];\n    const _executionDateFrom = requestParameters[\"executionDateFrom\"];\n    const _executionDateTo = requestParameters[\"executionDateTo\"];\n    const _nextExecutionDate = requestParameters[\"nextExecutionDate\"];\n    const _nextExecutionDateFrom = requestParameters[\"nextExecutionDateFrom\"];\n    const _nextExecutionDateTo = requestParameters[\"nextExecutionDateTo\"];\n    const _paymentMode = requestParameters[\"paymentMode\"];\n    const _paymentSetupId = requestParameters[\"paymentSetupId\"];\n    const _transferFrequency = requestParameters[\"transferFrequency\"];\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    const _orderBy = requestParameters[\"orderBy\"];\n    const _direction = requestParameters[\"direction\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_status) {\n      _status.forEach(element => {\n        queryParameters = this.addToHttpParams(queryParameters, element, 'status');\n      });\n    }\n\n    if (_paymentTypeGroup !== undefined && _paymentTypeGroup !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _paymentTypeGroup, 'paymentTypeGroup');\n    }\n\n    if (_createdByMe !== undefined && _createdByMe !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _createdByMe, 'createdByMe');\n    }\n\n    if (_userId !== undefined && _userId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _userId, 'userId');\n    }\n\n    if (_saId !== undefined && _saId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _saId, 'saId');\n    }\n\n    if (_originatorArrangementId !== undefined && _originatorArrangementId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _originatorArrangementId, 'originatorArrangementId');\n    }\n\n    if (_query !== undefined && _query !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n    }\n\n    if (_amountFrom !== undefined && _amountFrom !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _amountFrom, 'amountFrom');\n    }\n\n    if (_amountTo !== undefined && _amountTo !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _amountTo, 'amountTo');\n    }\n\n    if (_executionDate !== undefined && _executionDate !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _executionDate, 'executionDate');\n    }\n\n    if (_executionDateFrom !== undefined && _executionDateFrom !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _executionDateFrom, 'executionDateFrom');\n    }\n\n    if (_executionDateTo !== undefined && _executionDateTo !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _executionDateTo, 'executionDateTo');\n    }\n\n    if (_nextExecutionDate !== undefined && _nextExecutionDate !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _nextExecutionDate, 'nextExecutionDate');\n    }\n\n    if (_nextExecutionDateFrom !== undefined && _nextExecutionDateFrom !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _nextExecutionDateFrom, 'nextExecutionDateFrom');\n    }\n\n    if (_nextExecutionDateTo !== undefined && _nextExecutionDateTo !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _nextExecutionDateTo, 'nextExecutionDateTo');\n    }\n\n    if (_paymentMode !== undefined && _paymentMode !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _paymentMode, 'paymentMode');\n    }\n\n    if (_paymentSetupId !== undefined && _paymentSetupId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _paymentSetupId, 'paymentSetupId');\n    }\n\n    if (_transferFrequency !== undefined && _transferFrequency !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _transferFrequency, 'transferFrequency');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    if (_orderBy !== undefined && _orderBy !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _orderBy, 'orderBy');\n    }\n\n    if (_direction !== undefined && _direction !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _direction, 'direction');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/payment-orders${queryString ? `?${queryString}` : ''}`;\n  }\n\n  getProgressStatusByPaymentOrderId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n\n    if (_paymentOrderId === null || _paymentOrderId === undefined) {\n      throw new Error('Required parameter paymentOrderId was null or undefined when calling getProgressStatusByPaymentOrderId.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}/progress-status`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getProgressStatusByPaymentOrderIdUrl(requestParameters) {\n    const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n\n    if (_paymentOrderId === null || _paymentOrderId === undefined) {\n      throw new Error('Required parameter paymentOrderId was null or undefined when calling getProgressStatusByPaymentOrderId.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}/progress-status`;\n  }\n\n  getRate(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _currencyFrom = requestParameters[\"currencyFrom\"];\n\n    if (_currencyFrom === null || _currencyFrom === undefined) {\n      throw new Error('Required parameter currencyFrom was null or undefined when calling getRate.');\n    }\n\n    const _currencyTo = requestParameters[\"currencyTo\"];\n\n    if (_currencyTo === null || _currencyTo === undefined) {\n      throw new Error('Required parameter currencyTo was null or undefined when calling getRate.');\n    }\n\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_currencyFrom !== undefined && _currencyFrom !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _currencyFrom, 'currencyFrom');\n    }\n\n    if (_currencyTo !== undefined && _currencyTo !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _currencyTo, 'currencyTo');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/payment-orders/rate`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getRateUrl(requestParameters) {\n    const _currencyFrom = requestParameters[\"currencyFrom\"];\n\n    if (_currencyFrom === null || _currencyFrom === undefined) {\n      throw new Error('Required parameter currencyFrom was null or undefined when calling getRate.');\n    }\n\n    const _currencyTo = requestParameters[\"currencyTo\"];\n\n    if (_currencyTo === null || _currencyTo === undefined) {\n      throw new Error('Required parameter currencyTo was null or undefined when calling getRate.');\n    }\n\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_currencyFrom !== undefined && _currencyFrom !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _currencyFrom, 'currencyFrom');\n    }\n\n    if (_currencyTo !== undefined && _currencyTo !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _currencyTo, 'currencyTo');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/payment-orders/rate${queryString ? `?${queryString}` : ''}`;\n  }\n\n  postCancelByPaymentOrderId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n\n    if (_paymentOrderId === null || _paymentOrderId === undefined) {\n      throw new Error('Required parameter paymentOrderId was null or undefined when calling postCancelByPaymentOrderId.');\n    }\n\n    const _paymentOrderCancelPostRequest = requestParameters[\"paymentOrderCancelPostRequest\"];\n\n    if (_paymentOrderCancelPostRequest === null || _paymentOrderCancelPostRequest === undefined) {\n      throw new Error('Required parameter paymentOrderCancelPostRequest was null or undefined when calling postCancelByPaymentOrderId.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}/cancel`, _paymentOrderCancelPostRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postCancelByPaymentOrderIdUrl(requestParameters) {\n    const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n\n    if (_paymentOrderId === null || _paymentOrderId === undefined) {\n      throw new Error('Required parameter paymentOrderId was null or undefined when calling postCancelByPaymentOrderId.');\n    }\n\n    const _paymentOrderCancelPostRequest = requestParameters[\"paymentOrderCancelPostRequest\"];\n\n    if (_paymentOrderCancelPostRequest === null || _paymentOrderCancelPostRequest === undefined) {\n      throw new Error('Required parameter paymentOrderCancelPostRequest was null or undefined when calling postCancelByPaymentOrderId.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}/cancel`;\n  }\n\n  postPaymentOrders(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _paymentOrdersPost = requestParameters[\"paymentOrdersPost\"];\n\n    if (_paymentOrdersPost === null || _paymentOrdersPost === undefined) {\n      throw new Error('Required parameter paymentOrdersPost was null or undefined when calling postPaymentOrders.');\n    }\n\n    const _xMFA = requestParameters[\"xMFA\"];\n    let headers = this.defaultHeaders;\n\n    if (_xMFA !== undefined && _xMFA !== null) {\n      headers = headers.set('X-MFA', String(_xMFA));\n    }\n\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/payment-orders`, _paymentOrdersPost, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postPaymentOrdersUrl(requestParameters) {\n    const _paymentOrdersPost = requestParameters[\"paymentOrdersPost\"];\n\n    if (_paymentOrdersPost === null || _paymentOrdersPost === undefined) {\n      throw new Error('Required parameter paymentOrdersPost was null or undefined when calling postPaymentOrders.');\n    }\n\n    const _xMFA = requestParameters[\"xMFA\"];\n    return `${this.configuration.basePath}/client-api/v2/payment-orders`;\n  }\n\n  postValidate(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _paymentOrdersValidatePost = requestParameters[\"paymentOrdersValidatePost\"];\n\n    if (_paymentOrdersValidatePost === null || _paymentOrdersValidatePost === undefined) {\n      throw new Error('Required parameter paymentOrdersValidatePost was null or undefined when calling postValidate.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/payment-orders/validate`, _paymentOrdersValidatePost, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postValidateUrl(requestParameters) {\n    const _paymentOrdersValidatePost = requestParameters[\"paymentOrdersValidatePost\"];\n\n    if (_paymentOrdersValidatePost === null || _paymentOrdersValidatePost === undefined) {\n      throw new Error('Required parameter paymentOrdersValidatePost was null or undefined when calling postValidate.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/payment-orders/validate`;\n  }\n\n  putApprovalsByPaymentOrderId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n\n    if (_paymentOrderId === null || _paymentOrderId === undefined) {\n      throw new Error('Required parameter paymentOrderId was null or undefined when calling putApprovalsByPaymentOrderId.');\n    }\n\n    const _paymentOrderApprovalPutRequest = requestParameters[\"paymentOrderApprovalPutRequest\"];\n\n    if (_paymentOrderApprovalPutRequest === null || _paymentOrderApprovalPutRequest === undefined) {\n      throw new Error('Required parameter paymentOrderApprovalPutRequest was null or undefined when calling putApprovalsByPaymentOrderId.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}/approvals`, _paymentOrderApprovalPutRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putApprovalsByPaymentOrderIdUrl(requestParameters) {\n    const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n\n    if (_paymentOrderId === null || _paymentOrderId === undefined) {\n      throw new Error('Required parameter paymentOrderId was null or undefined when calling putApprovalsByPaymentOrderId.');\n    }\n\n    const _paymentOrderApprovalPutRequest = requestParameters[\"paymentOrderApprovalPutRequest\"];\n\n    if (_paymentOrderApprovalPutRequest === null || _paymentOrderApprovalPutRequest === undefined) {\n      throw new Error('Required parameter paymentOrderApprovalPutRequest was null or undefined when calling putApprovalsByPaymentOrderId.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}/approvals`;\n  }\n\n  putBulkApprovals(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _bulkPaymentOrdersApprovalPutRequest = requestParameters[\"bulkPaymentOrdersApprovalPutRequest\"];\n\n    if (_bulkPaymentOrdersApprovalPutRequest === null || _bulkPaymentOrdersApprovalPutRequest === undefined) {\n      throw new Error('Required parameter bulkPaymentOrdersApprovalPutRequest was null or undefined when calling putBulkApprovals.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/payment-orders/bulk-approvals`, _bulkPaymentOrdersApprovalPutRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putBulkApprovalsUrl(requestParameters) {\n    const _bulkPaymentOrdersApprovalPutRequest = requestParameters[\"bulkPaymentOrdersApprovalPutRequest\"];\n\n    if (_bulkPaymentOrdersApprovalPutRequest === null || _bulkPaymentOrdersApprovalPutRequest === undefined) {\n      throw new Error('Required parameter bulkPaymentOrdersApprovalPutRequest was null or undefined when calling putBulkApprovals.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/payment-orders/bulk-approvals`;\n  }\n\n  putPaymentOrderById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n\n    if (_paymentOrderId === null || _paymentOrderId === undefined) {\n      throw new Error('Required parameter paymentOrderId was null or undefined when calling putPaymentOrderById.');\n    }\n\n    const _paymentOrderPut = requestParameters[\"paymentOrderPut\"];\n\n    if (_paymentOrderPut === null || _paymentOrderPut === undefined) {\n      throw new Error('Required parameter paymentOrderPut was null or undefined when calling putPaymentOrderById.');\n    }\n\n    const _xMFA = requestParameters[\"xMFA\"];\n    let headers = this.defaultHeaders;\n\n    if (_xMFA !== undefined && _xMFA !== null) {\n      headers = headers.set('X-MFA', String(_xMFA));\n    }\n\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}`, _paymentOrderPut, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putPaymentOrderByIdUrl(requestParameters) {\n    const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n\n    if (_paymentOrderId === null || _paymentOrderId === undefined) {\n      throw new Error('Required parameter paymentOrderId was null or undefined when calling putPaymentOrderById.');\n    }\n\n    const _paymentOrderPut = requestParameters[\"paymentOrderPut\"];\n\n    if (_paymentOrderPut === null || _paymentOrderPut === undefined) {\n      throw new Error('Required parameter paymentOrderPut was null or undefined when calling putPaymentOrderById.');\n    }\n\n    const _xMFA = requestParameters[\"xMFA\"];\n    return `${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}`;\n  }\n\n}\n\nPaymentOrdersHttpService.ɵfac = function PaymentOrdersHttpService_Factory(t) {\n  return new (t || PaymentOrdersHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(PAYMENT_ORDER_BASE_PATH, 8), i0.ɵɵinject(PaymentOrderConfiguration, 8));\n};\n\nPaymentOrdersHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PaymentOrdersHttpService,\n  factory: PaymentOrdersHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaymentOrdersHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [PAYMENT_ORDER_BASE_PATH]\n      }]\n    }, {\n      type: PaymentOrderConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst PaymentOrdersHttpServiceDeletePaymentOrderByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PaymentOrdersHttpServiceGetApprovablePaymentOrdersMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-orders/approvals\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"id\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n      \"status\": \"ENTERED\",\n      \"originatorAccount\": {\n        \"name\": \"Smith Bonus Savings\",\n        \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n        \"externalArrangementId\": \"a3f8defe-f447-4475-b5c1-d3971ec7a273\",\n        \"identification\": {\n          \"identification\": \"NL81TRIO0212471066\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Smith Bonus Savings\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        }\n      },\n      \"batchBooking\": false,\n      \"instructionPriority\": \"HIGH\",\n      \"requestedExecutionDate\": \"2018-08-16\",\n      \"paymentMode\": \"SINGLE\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"749.99\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"MR1300020001010000123456753\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n          \"externalArrangementId\": \"9669274787995385962\"\n        },\n        \"counterparty\": {\n          \"name\": \"John Smith\"\n        }\n      },\n      \"actions\": [\"APPROVE\", \"FINAL_APPROVE\", \"REJECT\"],\n      \"permissibleActions\": {\n        \"approve\": true,\n        \"finalApprove\": true,\n        \"reject\": true,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": false,\n        \"create\": true,\n        \"export\": false\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"version\": 1\n    }, {\n      \"id\": \"06db9298-189b-11e8-accf-0ed5f89f718b\",\n      \"approvalId\": \"11863018-189b-11e8-accf-0ed5f89f718b\",\n      \"status\": \"ENTERED\",\n      \"originatorAccount\": {\n        \"name\": \"John Doe\",\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"identification\": {\n          \"identification\": \"0260-0959-3\",\n          \"schemeName\": \"BBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"John Doe\",\n        \"postalAddress\": {\n          \"addressLine1\": \"228 Park Ave S\",\n          \"town\": \"New York\"\n        }\n      },\n      \"batchBooking\": false,\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2017-08-12\",\n      \"paymentMode\": \"RECURRING\",\n      \"paymentType\": \"US_FOREIGN_WIRE\",\n      \"schedule\": {\n        \"transferFrequency\": \"MONTHLY\",\n        \"on\": 1,\n        \"startDate\": \"2017-08-12\",\n        \"every\": \"1\",\n        \"nextExecutionDate\": \"2017-09-12\",\n        \"endDate\": \"2018-05-12\"\n      },\n      \"transferTransactionInformation\": {\n        \"endToEndIdentification\": \"TRNSCT REF 1234567890\",\n        \"instructedAmount\": {\n          \"amount\": \"104.66\",\n          \"currencyCode\": \"USD\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"NL91 ABNA 0417 1643 00\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"counterparty\": {\n          \"name\": \"Jack Brown\",\n          \"postalAddress\": {\n            \"addressLine1\": \"2589 Peaceful Lane\",\n            \"postCode\": \"44128\",\n            \"town\": \"Warrensville Heights\",\n            \"country\": \"US\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Unstructured content\"\n        },\n        \"counterpartyBank\": {\n          \"bankBranchCode\": \"082000549\",\n          \"name\": \"Morgan Chase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"4789 Vernon Street\",\n            \"postCode\": \"92028\",\n            \"town\": \"Fallbrook\",\n            \"country\": \"US\"\n          }\n        },\n        \"correspondentBank\": {\n          \"bankBranchCode\": \"122105155\",\n          \"name\": \"Bank of America\"\n        },\n        \"intermediaryBank\": {\n          \"bic\": \"DABAIE2D\",\n          \"bankBranchCode\": \"102000021\",\n          \"name\": \"SNSB\"\n        },\n        \"messageToBank\": \"My us international wire payment explanation.\",\n        \"targetCurrency\": \"EUR\"\n      },\n      \"actions\": [\"APPROVE\", \"REJECT\"],\n      \"permissibleActions\": {\n        \"approve\": true,\n        \"finalApprove\": false,\n        \"reject\": true,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": false,\n        \"create\": true,\n        \"export\": false\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"version\": 42\n    }, {\n      \"id\": \"fa088818-623a-4260-bc46-1ff678de8dae\",\n      \"approvalId\": \"8605dc85-726c-4795-9b55-ff698ad2d1e4\",\n      \"status\": \"ENTERED\",\n      \"originatorAccount\": {\n        \"name\": \"Mr John Usmith\",\n        \"arrangementId\": \"07642680-2b6f-11e8-b467-0ed5f89f718b\",\n        \"identification\": {\n          \"identification\": \"00400440116243\",\n          \"schemeName\": \"BBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Mr John Usmith\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, New York\"\n        }\n      },\n      \"instructionPriority\": \"HIGH\",\n      \"requestedExecutionDate\": \"2018-08-16\",\n      \"paymentMode\": \"SINGLE\",\n      \"paymentType\": \"INTERNAL\",\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"749.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"counterpartyAccount\": {\n          \"accountType\": \"SAVINGS\",\n          \"identification\": {\n            \"identification\": \"3242342348899\",\n            \"schemeName\": \"BBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n        },\n        \"counterparty\": {\n          \"name\": \"John Doe\"\n        }\n      },\n      \"actions\": [\"APPROVE\", \"REJECT\", \"EDIT\"],\n      \"permissibleActions\": {\n        \"approve\": true,\n        \"finalApprove\": false,\n        \"reject\": true,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": true,\n        \"create\": true,\n        \"export\": false\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"version\": 1\n    }]\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PaymentOrdersHttpServiceGetCurrenciesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-orders/currencies\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"code\": \"EUR\"\n    }, {\n      \"code\": \"USD\"\n    }, {\n      \"code\": \"GBP\"\n    }, {\n      \"code\": \"ISK\"\n    }, {\n      \"code\": \"KWD\"\n    }]\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PaymentOrdersHttpServiceGetPaymentOrderByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n      \"status\": \"ACCEPTED\",\n      \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n      \"reasonCode\": \"AC01\",\n      \"reasonText\": \"Accepted by bank\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\": \"729190421493794513132\",\n        \"identification\": {\n          \"identification\": \"NL53RABO0309349755\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2017-07-16\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"5000.55\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n          \"externalArrangementId\": \"9669274787995385962\"\n        },\n        \"counterparty\": {\n          \"name\": \"Backbase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n            \"country\": \"NL\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt\"\n        }\n      },\n      \"actions\": [\"EDIT\"],\n      \"permissibleActions\": {\n        \"approve\": false,\n        \"finalApprove\": false,\n        \"reject\": false,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": true,\n        \"create\": true,\n        \"export\": true\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"contextualInformation\": {\n        \"externalUserId\": \"b3e4692d-6772-4fb2-9446-132435465768\",\n        \"internalUserId\": \"b3e4692d-6772-4fb2-9446-374857684932\",\n        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n        \"legalEntityId\": \"27263171-94d5-4d82-975c-61d8c41644d0\",\n        \"origin\": \"actions\"\n      },\n      \"originatorAccountCurrency\": \"EUR\",\n      \"version\": 1\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n      \"status\": \"ACCEPTED\",\n      \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n      \"reasonCode\": \"AC01\",\n      \"reasonText\": \"Accepted by bank\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\": \"729190421493794513132\",\n        \"identification\": {\n          \"identification\": \"NL53RABO0309349755\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2021-07-01\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"5000.55\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n          \"externalArrangementId\": \"9669274787995385962\"\n        },\n        \"counterparty\": {\n          \"name\": \"Backbase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n            \"country\": \"NL\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt\"\n        }\n      },\n      \"actions\": [\"EDIT\"],\n      \"permissibleActions\": {\n        \"approve\": false,\n        \"finalApprove\": false,\n        \"reject\": false,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": true,\n        \"create\": true,\n        \"export\": true\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"contextualInformation\": {\n        \"externalUserId\": \"b3e4692d-6772-4fb2-9446-132435465768\",\n        \"internalUserId\": \"b3e4692d-6772-4fb2-9446-374857684932\",\n        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n        \"legalEntityId\": \"27263171-94d5-4d82-975c-61d8c41644d0\",\n        \"origin\": \"actions\"\n      },\n      \"originatorAccountCurrency\": \"EUR\",\n      \"edited\": true,\n      \"editedPaymentOrder\": {\n        \"id\": \"df341c28-6714-11e7-907b-a6006ad3asa0\",\n        \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93df4ce\",\n        \"status\": \"ENTERED\",\n        \"originatorAccount\": {\n          \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n          \"externalArrangementId\": \"729190421493794513132\",\n          \"identification\": {\n            \"identification\": \"NL53RABO0309349755\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"instructionPriority\": \"NORM\",\n        \"requestedExecutionDate\": \"2021-07-01\",\n        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n        \"transferTransactionInformation\": {\n          \"instructedAmount\": {\n            \"amount\": \"6000\",\n            \"currencyCode\": \"EUR\"\n          },\n          \"counterpartyAccount\": {\n            \"identification\": {\n              \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n              \"schemeName\": \"IBAN\"\n            },\n            \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n            \"externalArrangementId\": \"9669274787995385962\"\n          },\n          \"counterparty\": {\n            \"name\": \"Backbase\",\n            \"postalAddress\": {\n              \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n              \"country\": \"NL\"\n            }\n          },\n          \"remittanceInformation\": {\n            \"type\": \"UNSTRUCTURED\",\n            \"content\": \"Return a debt\"\n          }\n        },\n        \"actions\": [\"EDIT\"],\n        \"permissibleActions\": {\n          \"approve\": false,\n          \"finalApprove\": false,\n          \"reject\": false,\n          \"cancel\": false,\n          \"delete\": false,\n          \"edit\": true,\n          \"create\": true\n        },\n        \"createdBy\": \"U00243\",\n        \"createdAt\": \"2017-05-12T15:33:13.452Z\",\n        \"contextualInformation\": {\n          \"externalUserId\": \"b3e4692d-6772-4fb2-9446-132435465768\",\n          \"internalUserId\": \"b3e4692d-6772-4fb2-9446-374857684932\",\n          \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n          \"legalEntityId\": \"27263171-94d5-4d82-975c-61d8c41644d0\",\n          \"origin\": \"actions\"\n        },\n        \"originatorAccountCurrency\": \"EUR\",\n        \"edited\": false,\n        \"version\": 1\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n      \"status\": \"ENTERED\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\": \"729190421493794513132\",\n        \"identification\": {\n          \"identification\": \"NL53RABO0309349755\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2018-07-22\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"5000.55\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n          \"externalArrangementId\": \"9669274787995385962\"\n        },\n        \"counterparty\": {\n          \"name\": \"Backbase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n            \"country\": \"NL\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt\"\n        }\n      },\n      \"version\": 1,\n      \"actions\": [],\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2018-07-22T13:44:02Z\",\n      \"originatorAccountCurrency\": \"EUR\",\n      \"approvalDetails\": {\n        \"id\": \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n        \"userId\": \"b3e4692d-6772-4fb2-9446-bebebebebebe\",\n        \"externalUserId\": \"davyJones88\",\n        \"userFullName\": \"Davy Jones\",\n        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n        \"itemId\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"dataAccessItemId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"resource\": \"Payments\",\n        \"function\": \"SEPA_CREDIT_TRANSFER\",\n        \"status\": \"PENDING\",\n        \"createdAt\": \"2018-07-22T13:44:02Z\",\n        \"records\": [{\n          \"id\": \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n          \"userId\": \"b3e4692d-6772-4fb2-9446-babababababa\",\n          \"externalUserId\": \"flying-dutchman\",\n          \"userFullName\": \"Jack Sparrow\",\n          \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n          \"status\": \"APPROVED\",\n          \"createdAt\": \"2018-07-22T13:44:02Z\"\n        }],\n        \"approvalTypes\": [{\n          \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n          \"name\": \"A\",\n          \"description\": \"1st approval\",\n          \"rank\": 100\n        }, {\n          \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n          \"name\": \"B\",\n          \"description\": \"2nd approval\",\n          \"rank\": 101\n        }],\n        \"policy\": {\n          \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n          \"name\": \"Default policy\",\n          \"description\": \"A default policy that requires two approvals of different types: A + B\",\n          \"items\": [{\n            \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n            \"numberOfApprovals\": 1\n          }, {\n            \"approvalTypeId\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n            \"numberOfApprovals\": 1\n          }]\n        },\n        \"canApprove\": false,\n        \"canReject\": false,\n        \"finalApprover\": false\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n      \"status\": \"ENTERED\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\": \"729190421493794513132\",\n        \"identification\": {\n          \"identification\": \"NL53RABO0309349755\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2018-07-22\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"5000.55\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n          \"externalArrangementId\": \"9669274787995385962\"\n        },\n        \"counterparty\": {\n          \"name\": \"Backbase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n            \"country\": \"NL\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt\"\n        }\n      },\n      \"version\": 1,\n      \"actions\": [],\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2018-07-22T13:44:02Z\",\n      \"originatorAccountCurrency\": \"EUR\",\n      \"approvalDetails\": {\n        \"id\": \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n        \"userId\": \"b3e4692d-6772-4fb2-9446-bebebebebebe\",\n        \"externalUserId\": \"davyJones88\",\n        \"userFullName\": \"Davy Jones\",\n        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n        \"itemId\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"dataAccessItemId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"resource\": \"Payments\",\n        \"function\": \"SEPA_CREDIT_TRANSFER\",\n        \"status\": \"PENDING\",\n        \"createdAt\": \"2018-07-22T13:44:02Z\",\n        \"records\": [{\n          \"id\": \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n          \"userId\": \"b3e4692d-6772-4fb2-9446-babababababa\",\n          \"externalUserId\": \"flying-dutchman\",\n          \"userFullName\": \"Jack Sparrow\",\n          \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n          \"status\": \"APPROVED\",\n          \"createdAt\": \"2018-07-22T13:44:02Z\"\n        }],\n        \"approvalTypes\": [{\n          \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n          \"name\": \"A\",\n          \"description\": \"1st approval\",\n          \"rank\": 100\n        }, {\n          \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n          \"name\": \"B\",\n          \"description\": \"2nd approval\",\n          \"rank\": 101\n        }],\n        \"policy\": {\n          \"id\": \"8ac202da-273b-4d2b-8aa6-c12f9d9fa736\",\n          \"name\": \"Or policy\",\n          \"description\": \"A policy that requires A OR B approvals\",\n          \"logicalItems\": [{\n            \"rank\": 1,\n            \"operator\": \"OR\",\n            \"items\": [{\n              \"approvalType\": {\n                \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                \"name\": \"A\",\n                \"description\": \"Or A approval\",\n                \"rank\": 100\n              },\n              \"numberOfApprovals\": 1\n            }, {\n              \"approvalType\": {\n                \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n                \"name\": \"B\",\n                \"description\": \"Or B approval\",\n                \"rank\": 101\n              },\n              \"numberOfApprovals\": 1\n            }]\n          }]\n        },\n        \"canApprove\": false,\n        \"canReject\": false,\n        \"finalApprover\": false\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n      \"status\": \"ACCEPTED\",\n      \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n      \"reasonCode\": \"AC01\",\n      \"reasonText\": \"Accepted by bank\",\n      \"originatorAccount\": {\n        \"identification\": {\n          \"identification\": \"8a48e08c60daa5940160dac699050088\",\n          \"schemeName\": \"ID\"\n        }\n      },\n      \"requestedExecutionDate\": \"2021-02-15\",\n      \"paymentType\": \"INTERNATIONAL_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"100\",\n          \"currencyCode\": \"INR\"\n        },\n        \"counterparty\": {\n          \"name\": \"John Doe\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"4902331374\",\n            \"schemeName\": \"BBAN\"\n          }\n        },\n        \"counterpartyBank\": {\n          \"bankBranchCode\": \"IDIA000A001\",\n          \"bic\": \"IBKLINBBXXR\",\n          \"name\": \"IDBA BANK\",\n          \"postalAddress\": {\n            \"addressLine1\": \"FINANCIAL PLAZA INDIA\",\n            \"country\": \"IN\"\n          }\n        },\n        \"correspondentBank\": {\n          \"bankBranchCode\": \"011000015\",\n          \"name\": \"FEDERAL RESERVE BANK\"\n        },\n        \"intermediaryBank\": {\n          \"bankBranchCode\": \"122105155\",\n          \"name\": \"SNSB2886803298\"\n        },\n        \"messageToBank\": \"My international payment explanation.\",\n        \"chargeBearer\": \"SHA\",\n        \"exchangeRateInformation\": {\n          \"currencyCode\": \"INR\",\n          \"rate\": \"89.00\",\n          \"rateType\": \"AGREED\",\n          \"contractIdentification\": \"/tbill/2018/T102993\"\n        },\n        \"transferFee\": {\n          \"amount\": \"15\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"purposeOfPayment\": {\n          \"code\": \"P1004\",\n          \"description\": \"Legal services\"\n        }\n      }\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PaymentOrdersHttpServiceGetPaymentOrderExportMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}/export\",\n  method: \"GET\",\n  responses: [{\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PaymentOrdersHttpServiceGetPaymentOrdersMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-orders\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"id\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n      \"status\": \"ENTERED\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n        \"externalArrangementId\": \"a3f8defe-f447-4475-b5c1-d3971ec7a273\",\n        \"identification\": {\n          \"identification\": \"NL81TRIO0212471066\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Smith Bonus Savings\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        }\n      },\n      \"instructionPriority\": \"HIGH\",\n      \"requestedExecutionDate\": \"2018-08-16\",\n      \"paymentMode\": \"SINGLE\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"endToEndIdentification\": \"Some reference\",\n        \"instructedAmount\": {\n          \"amount\": \"749.99\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"MR1300020001010000123456753\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n          \"externalArrangementId\": \"9669274787995385962\"\n        },\n        \"counterparty\": {\n          \"name\": \"John Smith\"\n        }\n      },\n      \"actions\": [\"APPROVE\", \"FINAL_APPROVE\", \"REJECT\"],\n      \"permissibleActions\": {\n        \"approve\": true,\n        \"finalApprove\": true,\n        \"reject\": true,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": false,\n        \"create\": true\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"edited\": true,\n      \"version\": 1\n    }, {\n      \"id\": \"0d0b6350-0ff9-11e8-b642-0ed5f89f718b\",\n      \"approvalId\": \"518bbd4a-0ff9-11e8-b642-0ed5f89f718b\",\n      \"status\": \"PROCESSED\",\n      \"bankStatus\": \"FINISHED\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\": \"729190421493794513132\",\n        \"identification\": {\n          \"identification\": \"NL18INGB0664923638\",\n          \"schemeName\": \"IBAN\"\n        },\n        \"name\": \"Credit Account\"\n      },\n      \"originator\": {\n        \"name\": \"Random Account\",\n        \"postalAddress\": {\n          \"country\": \"NL\"\n        }\n      },\n      \"batchBooking\": true,\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2018-08-11\",\n      \"paymentMode\": \"RECURRING\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"schedule\": {\n        \"transferFrequency\": \"MONTHLY\",\n        \"on\": 1,\n        \"startDate\": \"2017-08-12\",\n        \"every\": \"1\",\n        \"nextExecutionDate\": \"2018-08-15\",\n        \"endDate\": \"2018-05-12\"\n      },\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"100.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"NO9386011117947\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"counterparty\": {\n          \"name\": \"Jack Yellow\"\n        },\n        \"remittanceInformation\": {\n          \"type\": \"STRUCTURED\",\n          \"content\": \"<some-xml-tags>structured content with XML</some-xml-tags>\"\n        }\n      },\n      \"actions\": [\"EDIT\"],\n      \"permissibleActions\": {\n        \"approve\": false,\n        \"finalApprove\": false,\n        \"reject\": false,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": true,\n        \"create\": true,\n        \"export\": true\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"edited\": false,\n      \"version\": 1\n    }, {\n      \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"c383c69f-38bf-4e3e-ad3f-5f58cf971bb1\",\n      \"status\": \"REJECTED\",\n      \"bankStatus\": \"ACCOUNT_BLOCKED\",\n      \"reasonCode\": \"AB01\",\n      \"reasonText\": \"Account blocked\",\n      \"errorDescription\": \"Blocked by bank.\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n        \"externalArrangementId\": \"bcf10f4d-4b2f-4413-9bab-31ff693608b5\",\n        \"identification\": {\n          \"identification\": \"FR188388353832IH3CAWFYXAA36\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Mr and Mrs J. Smith\"\n      },\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2018-07-16\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"5000.55\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"LT121000011101001000\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"name\": \"ABN Amro\"\n        },\n        \"counterparty\": {\n          \"name\": \"Backbase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n            \"country\": \"NL\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt\"\n        }\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"edited\": false,\n      \"version\": 1\n    }, {\n      \"id\": \"7d34215a-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"ae01c614-d473-48d6-af7d-f516292b39cb\",\n      \"status\": \"ACCEPTED\",\n      \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n      \"reasonCode\": \"AC01\",\n      \"reasonText\": \"Accepted by bank\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n        \"externalArrangementId\": \"a3f8defe-f447-4475-b5c1-d3971ec7a273\",\n        \"identification\": {\n          \"identification\": \"NL81TRIO0212471066\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Smith Bonus Savings\"\n      },\n      \"batchBooking\": false,\n      \"requestedExecutionDate\": \"2018-07-23\",\n      \"paymentMode\": \"SINGLE\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"endToEndIdentification\": \"Some reference\",\n        \"instructedAmount\": {\n          \"amount\": \"749.99\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"LI21088100002324013AA\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"counterparty\": {\n          \"name\": \"Delivery Service\"\n        }\n      },\n      \"actions\": [\"APPROVE\", \"REJECT\"],\n      \"permissibleActions\": {\n        \"approve\": true,\n        \"finalApprove\": false,\n        \"reject\": true,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": false,\n        \"create\": true\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"version\": 1\n    }, {\n      \"id\": \"7d342c15-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"ae01a624-d473-48d6-af7d-f516292b39cb\",\n      \"status\": \"ACCEPTED\",\n      \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n      \"reasonCode\": \"AC01\",\n      \"reasonText\": \"Accepted by bank\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n        \"externalArrangementId\": \"bcf10f4d-4b2f-4413-9bab-31ff693608b5\",\n        \"identification\": {\n          \"identification\": \"FR188388353832IH3CAWFYXAA36\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Mr and Mrs J. Smith\"\n      },\n      \"batchBooking\": false,\n      \"requestedExecutionDate\": \"2018-06-12\",\n      \"paymentMode\": \"SINGLE\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"endToEndIdentification\": \"Some reference\",\n        \"instructedAmount\": {\n          \"amount\": \"99.99\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"MR1300020001010000123456753\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n          \"externalArrangementId\": \"9669274787995385962\"\n        },\n        \"counterparty\": {\n          \"name\": \"John Smith\"\n        }\n      },\n      \"actions\": [\"APPROVE\", \"REJECT\"],\n      \"permissibleActions\": {\n        \"approve\": true,\n        \"finalApprove\": false,\n        \"reject\": true,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": false,\n        \"create\": true\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"edited\": false,\n      \"version\": 1\n    }, {\n      \"id\": \"7d341a2a-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"264b69e4-3df0-49c1-8cda-e2bb437461e8\",\n      \"status\": \"ACCEPTED\",\n      \"bankStatus\": \"FINISHED\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n        \"externalArrangementId\": \"bcf10f4d-4b2f-4413-9bab-31ff693608b5\",\n        \"identification\": {\n          \"identification\": \"FR188388353832IH3CAWFYXAA36\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Mr and Mrs J. Smith\"\n      },\n      \"batchBooking\": true,\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2018-08-11\",\n      \"paymentMode\": \"RECURRING\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"schedule\": {\n        \"transferFrequency\": \"MONTHLY\",\n        \"on\": 1,\n        \"startDate\": \"2017-08-12\",\n        \"every\": \"1\",\n        \"nextExecutionDate\": \"2018-08-15\",\n        \"endDate\": \"2018-05-12\"\n      },\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"133.33\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"NO9386011117947\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"counterparty\": {\n          \"name\": \"Jack Yellow\"\n        },\n        \"remittanceInformation\": {\n          \"type\": \"STRUCTURED\",\n          \"content\": \"<some-xml-tags>structured content with XML</some-xml-tags>\"\n        }\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"edited\": false,\n      \"version\": 9312\n    }, {\n      \"id\": \"5cea81b2-0ff9-11e8-b642-0ed5f89f718b\",\n      \"approvalId\": \"61624e82-0ff9-11e8-b642-0ed5f89f718b\",\n      \"status\": \"ACCEPTED\",\n      \"bankStatus\": \"FINISHED\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n        \"externalArrangementId\": \"a3f8defe-f447-4475-b5c1-d3971ec7a273\",\n        \"identification\": {\n          \"identification\": \"NL81TRIO0212471066\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Smith Bonus Savings\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        }\n      },\n      \"batchBooking\": true,\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2018-08-11\",\n      \"paymentMode\": \"RECURRING\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"schedule\": {\n        \"transferFrequency\": \"MONTHLY\",\n        \"on\": 1,\n        \"startDate\": \"2017-08-12\",\n        \"every\": \"1\",\n        \"nextExecutionDate\": \"2018-08-15\",\n        \"endDate\": \"2018-05-12\"\n      },\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"166.66\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"HU42117730161111101800000000\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"counterparty\": {\n          \"name\": \"Jack Brown\"\n        },\n        \"remittanceInformation\": {\n          \"type\": \"STRUCTURED\",\n          \"content\": \"<some-xml-tags>structured content with XML</some-xml-tags>\"\n        }\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"version\": 42,\n      \"edited\": false,\n      \"originatingAccountCurrency\": \"EUR\"\n    }, {\n      \"id\": \"06db9298-189b-11e8-accf-0ed5f89f718b\",\n      \"approvalId\": \"11863018-189b-11e8-accf-0ed5f89f718b\",\n      \"status\": \"ENTERED\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"identification\": {\n          \"identification\": \"0260-0959-3\",\n          \"schemeName\": \"BBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"John Doe\",\n        \"postalAddress\": {\n          \"addressLine1\": \"228 Park Ave S\",\n          \"town\": \"New York\"\n        }\n      },\n      \"batchBooking\": false,\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2017-08-12\",\n      \"paymentMode\": \"RECURRING\",\n      \"paymentType\": \"US_FOREIGN_WIRE\",\n      \"schedule\": {\n        \"transferFrequency\": \"MONTHLY\",\n        \"on\": 1,\n        \"startDate\": \"2017-08-12\",\n        \"every\": \"1\",\n        \"nextExecutionDate\": \"2017-09-12\",\n        \"endDate\": \"2018-05-12\"\n      },\n      \"transferTransactionInformation\": {\n        \"endToEndIdentification\": \"TRNSCT REF 1234567890\",\n        \"instructedAmount\": {\n          \"amount\": \"104.66\",\n          \"currencyCode\": \"USD\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"NL91 ABNA 0417 1643 00\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"counterparty\": {\n          \"name\": \"Jack Brown\",\n          \"postalAddress\": {\n            \"addressLine1\": \"2589 Peaceful Lane\",\n            \"postCode\": \"44128\",\n            \"town\": \"Warrensville Heights\",\n            \"country\": \"US\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Unstructured content\"\n        },\n        \"counterpartyBank\": {\n          \"bankBranchCode\": \"082000549\",\n          \"name\": \"Morgan Chase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"4789 Vernon Street\",\n            \"postCode\": \"92028\",\n            \"town\": \"Fallbrook\",\n            \"country\": \"US\"\n          }\n        },\n        \"correspondentBank\": {\n          \"bankBranchCode\": \"122105155\",\n          \"name\": \"Bank of America\"\n        },\n        \"intermediaryBank\": {\n          \"bic\": \"DABAIE2D\",\n          \"bankBranchCode\": \"102000021\",\n          \"name\": \"SNSB\"\n        },\n        \"messageToBank\": \"My us international wire payment explanation.\",\n        \"targetCurrency\": \"EUR\"\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"edited\": false,\n      \"version\": 42\n    }, {\n      \"id\": \"fa088818-623a-4260-bc46-1ff678de8dae\",\n      \"approvalId\": \"8605dc85-726c-4795-9b55-ff698ad2d1e4\",\n      \"status\": \"ENTERED\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"07642680-2b6f-11e8-b467-0ed5f89f718b\",\n        \"identification\": {\n          \"identification\": \"00400440116243\",\n          \"schemeName\": \"BBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Mr John Usmith\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, New York\"\n        }\n      },\n      \"instructionPriority\": \"HIGH\",\n      \"requestedExecutionDate\": \"2018-08-16\",\n      \"paymentMode\": \"SINGLE\",\n      \"paymentType\": \"INTERNAL\",\n      \"transferTransactionInformation\": {\n        \"endToEndIdentification\": \"Some reference\",\n        \"instructedAmount\": {\n          \"amount\": \"749.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"counterpartyAccount\": {\n          \"accountType\": \"SAVINGS\",\n          \"identification\": {\n            \"identification\": \"3242342348899\",\n            \"schemeName\": \"BBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n        },\n        \"counterparty\": {\n          \"name\": \"John Doe\"\n        }\n      },\n      \"actions\": [\"APPROVE\", \"REJECT\"],\n      \"permissibleActions\": {\n        \"approve\": true,\n        \"finalApprove\": false,\n        \"reject\": true,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": false,\n        \"create\": true\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"edited\": false,\n      \"version\": 1\n    }, {\n      \"id\": \"f58a410e-469c-41f1-8c51-21b6d24bd3c1\",\n      \"approvalId\": \"7527c230-01a7-41b8-a021-dc29aca98fe3\",\n      \"status\": \"ENTERED\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"07642680-2b6f-11e8-b467-0ed5f89f718b\",\n        \"identification\": {\n          \"identification\": \"00400440116243\",\n          \"schemeName\": \"BBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Mr John Usmith\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Los Angeles\"\n        }\n      },\n      \"instructionPriority\": \"HIGH\",\n      \"requestedExecutionDate\": \"2018-08-16\",\n      \"paymentMode\": \"SINGLE\",\n      \"paymentType\": \"INTERNAL\",\n      \"transferTransactionInformation\": {\n        \"endToEndIdentification\": \"Some reference\",\n        \"instructedAmount\": {\n          \"amount\": \"134\",\n          \"currencyCode\": \"USD\"\n        },\n        \"counterpartyAccount\": {\n          \"accountType\": \"CHECKING\",\n          \"identification\": {\n            \"identification\": \"3242342123899\",\n            \"schemeName\": \"BBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n        },\n        \"counterparty\": {\n          \"name\": \"Dan Brown\"\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt`\"\n        }\n      },\n      \"actions\": [\"APPROVE\", \"REJECT\", \"EDIT\"],\n      \"permissibleActions\": {\n        \"approve\": true,\n        \"finalApprove\": false,\n        \"reject\": true,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": true,\n        \"create\": true\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"edited\": false,\n      \"version\": 1\n    }]\n  }, {\n    status: 200,\n    body: [{\n      \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n      \"status\": \"ACCEPTED\",\n      \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n      \"reasonCode\": \"AC01\",\n      \"reasonText\": \"Accepted by bank\",\n      \"originatorAccount\": {\n        \"identification\": {\n          \"identification\": \"8a48e08c60daa5940160dac699050088\",\n          \"schemeName\": \"ID\"\n        }\n      },\n      \"requestedExecutionDate\": \"2021-02-15\",\n      \"paymentType\": \"INTERNATIONAL_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"29.99\",\n          \"currencyCode\": \"INR\"\n        },\n        \"counterparty\": {\n          \"name\": \"John Doe\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"4902331374\",\n            \"schemeName\": \"BBAN\"\n          }\n        },\n        \"counterpartyBank\": {\n          \"bankBranchCode\": \"IDIA000A001\",\n          \"bic\": \"IBKLINBBXXR\",\n          \"name\": \"IDBA BANK IN\",\n          \"postalAddress\": {\n            \"addressLine1\": \"FINANCIAL PLAZA INDIA\",\n            \"country\": \"IN\"\n          }\n        },\n        \"correspondentBank\": {\n          \"bankBranchCode\": \"011000015\",\n          \"name\": \"FEDERAL RESERVE BANK\"\n        },\n        \"intermediaryBank\": {\n          \"bankBranchCode\": \"122105155\",\n          \"name\": \"SNSB2886803298\"\n        },\n        \"messageToBank\": \"My international payment explanation.\",\n        \"chargeBearer\": \"SHA\",\n        \"exchangeRateInformation\": {\n          \"currencyCode\": \"INR\",\n          \"rate\": \"89.00\",\n          \"rateType\": \"AGREED\",\n          \"contractIdentification\": \"/tbill/2018/T102993\"\n        },\n        \"transferFee\": {\n          \"amount\": \"0.29\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"purposeOfPayment\": {\n          \"code\": \"P1004\"\n        }\n      }\n    }]\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Payment type group invalid. Must be one of [credit, debit]\"\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PaymentOrdersHttpServiceGetProgressStatusByPaymentOrderIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}/progress-status\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"progressStatus\": \"CONFIRMATION_PENDING\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PaymentOrdersHttpServiceGetRateMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-orders/rate\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"rate\": 1.07\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PaymentOrdersHttpServicePostCancelByPaymentOrderIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}/cancel\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"accepted\": true\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PaymentOrdersHttpServicePostPaymentOrdersMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-orders\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\"\n    }\n  }, {\n    status: 201,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\",\n      \"approvalStatus\": \"APPROVED\"\n    }\n  }, {\n    status: 202,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\"\n    }\n  }, {\n    status: 202,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\",\n      \"approvalStatus\": \"APPROVED\"\n    }\n  }, {\n    status: 202,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\",\n      \"exportAllowed\": true\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Limits has been breached, check the report for more details\",\n      \"payment\": {\n        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"status\": \"ENTERED\",\n        \"originatorAccount\": {\n          \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n          \"identification\": {\n            \"identification\": \"NL53RABO0309349755\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"instructionPriority\": \"NORM\",\n        \"requestedExecutionDate\": \"2017-07-16\",\n        \"transferTransactionInformation\": {\n          \"name\": \"Jack Jackson\",\n          \"instructedAmount\": {\n            \"amount\": \"5000.55\",\n            \"currencyCode\": \"EUR\"\n          },\n          \"counterpartyAccount\": {\n            \"identification\": {\n              \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n              \"schemeName\": \"IBAN\"\n            },\n            \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n          },\n          \"counterparty\": {\n            \"name\": \"Backbase\",\n            \"postalAddress\": {\n              \"addressLine1\": \"Jacob Bontiusplaats 9\",\n              \"zipcode\": \"1018LL\",\n              \"city\": \"Amsterdam\",\n              \"country\": \"NL\"\n            }\n          },\n          \"remittanceInformation\": {\n            \"type\": \"UNSTRUCTURED\",\n            \"content\": \"Return a debt\"\n          }\n        },\n        \"version\": 0\n      },\n      \"checkTime\": \"2017-01-31T12:12:12Z\",\n      \"breachReport\": [{\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Service Agreement\",\n          \"description\": \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"user-BBID\": \"oleksii\",\n        \"breachInfo\": [{\n          \"breachType\": \"THRESHOLD\",\n          \"breachedLimitType\": \"PERIODIC\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2017-01-31T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"250.0\",\n          \"currentThreshold\": \"499.9\"\n        }, {\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"monthly\",\n            \"startTime\": \"2017-01-01T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"9950.0\",\n          \"currentThreshold\": \"10000.0\"\n        }]\n      }, {\n        \"user-BBID\": \"oleksii\",\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2017-01-31T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"500.0\",\n          \"currentThreshold\": \"1000.0\"\n        }]\n      }, {\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Function Access Group\",\n          \"description\": \"Payments approvers\"\n        }, {\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Function\",\n          \"description\": \"Domestic payments\"\n        }, {\n          \"ref\": \"Approve\",\n          \"type\": \"Privilege\",\n          \"description\": \"Approve\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"THRESHOLD\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2017-01-31T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"250.0\",\n          \"currentThreshold\": \"499.9\"\n        }]\n      }, {\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Legal Entity\",\n          \"description\": \"Kuhic, Gislason and Kemmer\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"quarterly\",\n            \"startTime\": \"2017-01-01T00:00:00Z\",\n            \"endTime\": \"2017-03-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"99950.0\",\n          \"currentThreshold\": \"100000.0\"\n        }]\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PaymentOrdersHttpServicePostValidateMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-orders/validate\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\": \"729190421493794513132\",\n        \"identification\": {\n          \"identification\": \"NL53RABO0309349755\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Credit Account\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        }\n      },\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2017-07-16\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"isIntraLegalEntityPaymentOrder\": false,\n      \"canApprove\": false,\n      \"finalApprover\": false,\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"5000.55\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"name\": \"ABN Amro\"\n        },\n        \"counterparty\": {\n          \"name\": \"Backbase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n            \"country\": \"NL\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt\"\n        }\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\": \"729190421493794513132\",\n        \"identification\": {\n          \"identification\": \"NL53RABO0309349755\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Credit Account\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        }\n      },\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2017-07-16\",\n      \"paymentType\": \"SEPA_CT_ILE\",\n      \"isIntraLegalEntityPaymentOrder\": true,\n      \"canApprove\": false,\n      \"finalApprover\": false,\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"5000.55\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"name\": \"ABN Amro\"\n        },\n        \"counterparty\": {\n          \"name\": \"Backbase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n            \"country\": \"NL\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt\"\n        }\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\": \"729190421493794513132\",\n        \"identification\": {\n          \"identification\": \"NL53RABO0309349755\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Credit Account\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        }\n      },\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2017-07-16\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"isIntraLegalEntityPaymentOrder\": false,\n      \"canApprove\": true,\n      \"finalApprover\": false,\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"5000.55\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"name\": \"ABN Amro\"\n        },\n        \"counterparty\": {\n          \"name\": \"Backbase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n            \"country\": \"NL\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt\"\n        }\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\": \"729190421493794513132\",\n        \"identification\": {\n          \"identification\": \"NL53RABO0309349755\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Credit Account\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        }\n      },\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2017-07-16\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"isIntraLegalEntityPaymentOrder\": false,\n      \"canApprove\": true,\n      \"finalApprover\": true,\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"5000.55\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"name\": \"ABN Amro\"\n        },\n        \"counterparty\": {\n          \"name\": \"Backbase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n            \"country\": \"NL\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt\"\n        }\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PaymentOrdersHttpServicePutApprovalsByPaymentOrderIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}/approvals\",\n  method: \"PUT\",\n  responses: [{\n    status: 202,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\"\n    }\n  }, {\n    status: 202,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\",\n      \"approvalStatus\": \"APPROVED\"\n    }\n  }, {\n    status: 202,\n    body: {\n      \"approvalStatus\": \"approvalStatus\",\n      \"reasonText\": \"reasonText\",\n      \"nextExecutionDate\": \"2000-01-23\",\n      \"errorDescription\": \"errorDescription\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"exportAllowed\": true,\n      \"bankStatus\": \"bankStatus\",\n      \"paymentSetupId\": \"paymentSetupId\",\n      \"transferFee\": {\n        \"amount\": \"amount\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"exchangeRateInformation\": {\n        \"rateType\": \"ACTUAL\",\n        \"contractIdentification\": \"contractIdentification\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"rate\": \"rate\",\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"id\": \"id\",\n      \"reasonCode\": \"reasonCode\",\n      \"paymentSubmissionId\": \"paymentSubmissionId\"\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Limits has been breached, check the report for more details\",\n      \"payment\": {\n        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"status\": \"ENTERED\",\n        \"originatorAccount\": {\n          \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n          \"identification\": {\n            \"identification\": \"NL53RABO0309349755\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"instructionPriority\": \"NORM\",\n        \"requestedExecutionDate\": \"2017-07-16\",\n        \"transferTransactionInformation\": {\n          \"name\": \"Jack Jackson\",\n          \"instructedAmount\": {\n            \"amount\": \"5000.55\",\n            \"currencyCode\": \"EUR\"\n          },\n          \"counterpartyAccount\": {\n            \"identification\": {\n              \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n              \"schemeName\": \"IBAN\"\n            },\n            \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n          },\n          \"counterparty\": {\n            \"name\": \"Backbase\",\n            \"postalAddress\": {\n              \"addressLine1\": \"Jacob Bontiusplaats 9\",\n              \"zipcode\": \"1018LL\",\n              \"city\": \"Amsterdam\",\n              \"country\": \"NL\"\n            }\n          },\n          \"remittanceInformation\": {\n            \"type\": \"UNSTRUCTURED\",\n            \"content\": \"Return a debt\"\n          }\n        },\n        \"version\": 0\n      },\n      \"checkTime\": \"2017-01-31T12:12:12Z\",\n      \"breachReport\": [{\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Service Agreement\",\n          \"description\": \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"user-BBID\": \"oleksii\",\n        \"breachInfo\": [{\n          \"breachType\": \"THRESHOLD\",\n          \"breachedLimitType\": \"PERIODIC\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2017-01-31T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"250.0\",\n          \"currentThreshold\": \"499.9\"\n        }, {\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"monthly\",\n            \"startTime\": \"2017-01-01T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"9950.0\",\n          \"currentThreshold\": \"10000.0\"\n        }]\n      }, {\n        \"user-BBID\": \"oleksii\",\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2017-01-31T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"500.0\",\n          \"currentThreshold\": \"1000.0\"\n        }]\n      }, {\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Function Access Group\",\n          \"description\": \"Payments approvers\"\n        }, {\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Function\",\n          \"description\": \"Domestic payments\"\n        }, {\n          \"ref\": \"Approve\",\n          \"type\": \"Privilege\",\n          \"description\": \"Approve\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"THRESHOLD\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2017-01-31T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"250.0\",\n          \"currentThreshold\": \"499.9\"\n        }]\n      }, {\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Legal Entity\",\n          \"description\": \"Kuhic, Gislason and Kemmer\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"quarterly\",\n            \"startTime\": \"2017-01-01T00:00:00Z\",\n            \"endTime\": \"2017-03-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"99950.0\",\n          \"currentThreshold\": \"100000.0\"\n        }]\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"challenges\": [{\n        \"challengeType\": \"reauth\",\n        \"acrValues\": \"txn-signature-silver txn-signature-gold\",\n        \"scope\": \"confirmation:3ea92d30-f460-4dde-b40a-e83a2f266a3a\"\n      }],\n      \"data\": {\n        \"approvalId\": \"9E2F9AC5-DD09-40C0-805E-147B0C565901\",\n        \"approvalRecordId\": \"DEDFDF28-690E-4B83-8BAF-C8ABF31EF70B\",\n        \"confirmationType\": \"approve-payment\",\n        \"paymentOrderId\": \"a3a2e499-bd58-4077-9991-19b2559f4796\",\n        \"amount\": \"12.95\",\n        \"currency\": \"EUR\",\n        \"counterpartyAccount\": \"NL06ABNA9691012820\",\n        \"counterpartyName\": \"Jouk\"\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PaymentOrdersHttpServicePutBulkApprovalsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-orders/bulk-approvals\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"approvalStatus\": \"APPROVED\",\n      \"paymentOrders\": [{\n        \"paymentOrderId\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n        \"paymentOrder\": {\n          \"id\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n          \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n          \"status\": \"ENTERED\",\n          \"originatorAccount\": {\n            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n            \"externalArrangementId\": \"729190421493794513132\",\n            \"identification\": {\n              \"identification\": \"0260-0959-3\",\n              \"schemeName\": \"BBAN\"\n            }\n          },\n          \"originator\": {\n            \"name\": \"Smith Bonus Savings\",\n            \"postalAddress\": {\n              \"addressLine1\": \"228 Park Ave S\",\n              \"town\": \"New York\"\n            }\n          },\n          \"instructionPriority\": \"HIGH\",\n          \"requestedExecutionDate\": \"2017-08-16\",\n          \"paymentMode\": \"SINGLE\",\n          \"paymentType\": \"US_FOREIGN_WIRE\",\n          \"transferTransactionInformation\": {\n            \"endToEndIdentification\": \"Some reference\",\n            \"instructedAmount\": {\n              \"amount\": \"749.99\",\n              \"currencyCode\": \"EUR\"\n            },\n            \"counterpartyAccount\": {\n              \"identification\": {\n                \"identification\": \"MR1300020001010000123456753\",\n                \"schemeName\": \"IBAN\"\n              },\n              \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n              \"externalArrangementId\": \"9669274787995385962\"\n            },\n            \"counterparty\": {\n              \"name\": \"John Smith\",\n              \"postalAddress\": {\n                \"addressLine1\": \"2589 Peaceful Lane\",\n                \"postCode\": \"44128\",\n                \"town\": \"Warrensville Heights\",\n                \"country\": \"US\"\n              }\n            },\n            \"remittanceInformation\": {\n              \"type\": \"UNSTRUCTURED\",\n              \"content\": \"Unstructured content\"\n            },\n            \"counterpartyBank\": {\n              \"bankBranchCode\": \"082000549\",\n              \"name\": \"Morgan Chase\",\n              \"postalAddress\": {\n                \"addressLine1\": \"4789 Vernon Street\",\n                \"postCode\": \"92028\",\n                \"town\": \"Fallbrook\",\n                \"country\": \"US\"\n              }\n            },\n            \"correspondentBank\": {\n              \"bankBranchCode\": \"122105155\",\n              \"name\": \"Bank of America\"\n            },\n            \"intermediaryBank\": {\n              \"bic\": \"DABAIE2D\",\n              \"bankBranchCode\": \"102000021\",\n              \"name\": \"SNSB\"\n            },\n            \"messageToBank\": \"My us international wire payment explanation.\",\n            \"targetCurrency\": \"EUR\"\n          },\n          \"actions\": [\"APPROVE\"],\n          \"permissibleActions\": {\n            \"approve\": true,\n            \"finalApprove\": false,\n            \"reject\": false,\n            \"cancel\": false,\n            \"delete\": false,\n            \"edit\": false,\n            \"create\": true,\n            \"export\": false\n          },\n          \"createdBy\": \"U00243\",\n          \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n          \"version\": 2\n        },\n        \"approvalStatus\": \"PENDING\",\n        \"status\": {\n          \"code\": \"OK\"\n        }\n      }, {\n        \"paymentOrderId\": \"d2ff7c65-24ae-430f-92b9-c7ca5b143081\",\n        \"paymentOrder\": {\n          \"id\": \"d2ff7c65-24ae-430f-92b9-c7ca5b143081\",\n          \"approvalId\": \"2d9367dc-8af1-411d-81f6-9e28c46dd189\",\n          \"status\": \"REJECTED\",\n          \"originatorAccount\": {\n            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n            \"externalArrangementId\": \"729190421493794513132\",\n            \"identification\": {\n              \"identification\": \"NL81TRIO0212471066\",\n              \"schemeName\": \"IBAN\"\n            }\n          },\n          \"originator\": {\n            \"name\": \"Smith Bonus Savings\",\n            \"postalAddress\": {\n              \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n            }\n          },\n          \"instructionPriority\": \"HIGH\",\n          \"requestedExecutionDate\": \"2017-08-16\",\n          \"paymentMode\": \"SINGLE\",\n          \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n          \"transferTransactionInformation\": {\n            \"endToEndIdentification\": \"Some reference\",\n            \"instructedAmount\": {\n              \"amount\": \"749.99\",\n              \"currencyCode\": \"EUR\"\n            },\n            \"counterpartyAccount\": {\n              \"identification\": {\n                \"identification\": \"MR1300020001010000123456753\",\n                \"schemeName\": \"IBAN\"\n              },\n              \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n              \"externalArrangementId\": \"9669274787995385962\"\n            },\n            \"counterparty\": {\n              \"name\": \"John Smith\"\n            }\n          },\n          \"actions\": [],\n          \"createdBy\": \"U00243\",\n          \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n          \"version\": 2\n        },\n        \"approvalStatus\": \"REJECTED\",\n        \"status\": {\n          \"code\": \"ERROR\",\n          \"message\": \"Not allowed to update this approval, status is final\",\n          \"errors\": [{\n            \"message\": \"Not allowed to update this approval, status is final\",\n            \"key\": \"paymentorder.api.Approval.NotAllowed\",\n            \"context\": {\n              \"status\": \"REJECTED\"\n            }\n          }]\n        }\n      }, {\n        \"paymentOrderId\": \"9a20be2b-b8f3-45dc-a625-55635235de4c\",\n        \"status\": {\n          \"code\": \"ERROR\",\n          \"message\": \"Payment not found\",\n          \"errors\": [{\n            \"message\": \"Payment not found\",\n            \"key\": \"paymentorder.api.PaymentOrder.NotFound\"\n          }]\n        }\n      }, {\n        \"paymentOrderId\": \"c7653c55-ee9b-4f65-96db-cbda76efd3ae\",\n        \"paymentOrder\": {\n          \"id\": \"c7653c55-ee9b-4f65-96db-cbda76efd3ae\",\n          \"approvalId\": \"fe383f48-df2e-4b17-a0d2-3443b2e3738c\",\n          \"status\": \"ENTERED\",\n          \"originatorAccount\": {\n            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n            \"externalArrangementId\": \"729190421493794513132\",\n            \"identification\": {\n              \"identification\": \"NL81TRIO0212471066\",\n              \"schemeName\": \"IBAN\"\n            }\n          },\n          \"originator\": {\n            \"name\": \"Smith Bonus Savings\",\n            \"postalAddress\": {\n              \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n            }\n          },\n          \"instructionPriority\": \"HIGH\",\n          \"requestedExecutionDate\": \"2017-08-16\",\n          \"paymentMode\": \"SINGLE\",\n          \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n          \"transferTransactionInformation\": {\n            \"endToEndIdentification\": \"Some reference\",\n            \"instructedAmount\": {\n              \"amount\": \"749.99\",\n              \"currencyCode\": \"EUR\"\n            },\n            \"counterpartyAccount\": {\n              \"identification\": {\n                \"identification\": \"MR1300020001010000123456753\",\n                \"schemeName\": \"IBAN\"\n              },\n              \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n              \"externalArrangementId\": \"9669274787995385962\"\n            },\n            \"counterparty\": {\n              \"name\": \"John Smith\"\n            }\n          },\n          \"actions\": [],\n          \"createdBy\": \"U00243\",\n          \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n          \"version\": 2\n        },\n        \"status\": {\n          \"code\": \"ERROR\",\n          \"message\": \"Approval not found\",\n          \"errors\": [{\n            \"message\": \"Approval not found\",\n            \"key\": \"paymentorder.api.Approval.NotFound\"\n          }]\n        }\n      }],\n      \"successCount\": 1,\n      \"failCount\": 3\n    }\n  }, {\n    status: 200,\n    body: {\n      \"approvalStatus\": \"APPROVED\",\n      \"paymentOrders\": [{\n        \"paymentOrderId\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n        \"paymentOrder\": {\n          \"id\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n          \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n          \"status\": \"ENTERED\",\n          \"originatorAccount\": {\n            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n            \"externalArrangementId\": \"729190421493794513132\",\n            \"identification\": {\n              \"identification\": \"0260-0959-3\",\n              \"schemeName\": \"BBAN\"\n            }\n          },\n          \"originator\": {\n            \"name\": \"Smith Bonus Savings\",\n            \"postalAddress\": {\n              \"addressLine1\": \"228 Park Ave S\",\n              \"town\": \"New York\"\n            }\n          },\n          \"instructionPriority\": \"HIGH\",\n          \"requestedExecutionDate\": \"2017-08-16\",\n          \"paymentMode\": \"SINGLE\",\n          \"paymentType\": \"US_FOREIGN_WIRE\",\n          \"transferTransactionInformation\": {\n            \"endToEndIdentification\": \"Some reference\",\n            \"instructedAmount\": {\n              \"amount\": \"749.99\",\n              \"currencyCode\": \"EUR\"\n            },\n            \"counterpartyAccount\": {\n              \"identification\": {\n                \"identification\": \"MR1300020001010000123456753\",\n                \"schemeName\": \"IBAN\"\n              },\n              \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n              \"externalArrangementId\": \"9669274787995385962\"\n            },\n            \"counterparty\": {\n              \"name\": \"John Smith\",\n              \"postalAddress\": {\n                \"addressLine1\": \"2589 Peaceful Lane\",\n                \"postCode\": \"44128\",\n                \"town\": \"Warrensville Heights\",\n                \"country\": \"US\"\n              }\n            },\n            \"remittanceInformation\": {\n              \"type\": \"UNSTRUCTURED\",\n              \"content\": \"Unstructured content\"\n            },\n            \"counterpartyBank\": {\n              \"bankBranchCode\": \"082000549\",\n              \"name\": \"Morgan Chase\",\n              \"postalAddress\": {\n                \"addressLine1\": \"4789 Vernon Street\",\n                \"postCode\": \"92028\",\n                \"town\": \"Fallbrook\",\n                \"country\": \"US\"\n              }\n            },\n            \"correspondentBank\": {\n              \"bankBranchCode\": \"122105155\",\n              \"name\": \"Bank of America\"\n            },\n            \"intermediaryBank\": {\n              \"bic\": \"DABAIE2D\",\n              \"bankBranchCode\": \"102000021\",\n              \"name\": \"SNSB\"\n            },\n            \"messageToBank\": \"My us international wire payment explanation.\",\n            \"targetCurrency\": \"EUR\"\n          },\n          \"actions\": [\"APPROVE\"],\n          \"permissibleActions\": {\n            \"approve\": true,\n            \"finalApprove\": false,\n            \"reject\": false,\n            \"cancel\": false,\n            \"delete\": false,\n            \"edit\": false,\n            \"create\": true,\n            \"export\": false\n          },\n          \"createdBy\": \"U00243\",\n          \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n          \"version\": 2\n        },\n        \"approvalStatus\": \"PENDING\",\n        \"status\": {\n          \"code\": \"OK\"\n        }\n      }, {\n        \"paymentOrderId\": \"d2ff7c65-24ae-430f-92b9-c7ca5b143081\",\n        \"paymentOrder\": {\n          \"id\": \"d2ff7c65-24ae-430f-92b9-c7ca5b143081\",\n          \"approvalId\": \"2d9367dc-8af1-411d-81f6-9e28c46dd189\",\n          \"status\": \"REJECTED\",\n          \"originatorAccount\": {\n            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n            \"externalArrangementId\": \"729190421493794513132\",\n            \"identification\": {\n              \"identification\": \"NL81TRIO0212471066\",\n              \"schemeName\": \"IBAN\"\n            }\n          },\n          \"originator\": {\n            \"name\": \"Smith Bonus Savings\",\n            \"postalAddress\": {\n              \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n            }\n          },\n          \"instructionPriority\": \"HIGH\",\n          \"requestedExecutionDate\": \"2017-08-16\",\n          \"paymentMode\": \"SINGLE\",\n          \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n          \"transferTransactionInformation\": {\n            \"endToEndIdentification\": \"Some reference\",\n            \"instructedAmount\": {\n              \"amount\": \"749.99\",\n              \"currencyCode\": \"EUR\"\n            },\n            \"counterpartyAccount\": {\n              \"identification\": {\n                \"identification\": \"MR1300020001010000123456753\",\n                \"schemeName\": \"IBAN\"\n              },\n              \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n              \"externalArrangementId\": \"9669274787995385962\"\n            },\n            \"counterparty\": {\n              \"name\": \"John Smith\"\n            }\n          },\n          \"actions\": [],\n          \"createdBy\": \"U00243\",\n          \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n          \"version\": 2\n        },\n        \"approvalStatus\": \"REJECTED\",\n        \"status\": {\n          \"code\": \"ERROR\",\n          \"message\": \"Not allowed to update this approval, status is final\",\n          \"errors\": [{\n            \"message\": \"Not allowed to update this approval, status is final\",\n            \"key\": \"paymentorder.api.Approval.NotAllowed\",\n            \"context\": {\n              \"status\": \"REJECTED\"\n            }\n          }]\n        }\n      }, {\n        \"paymentOrderId\": \"9a20be2b-b8f3-45dc-a625-55635235de4c\",\n        \"status\": {\n          \"code\": \"ERROR\",\n          \"message\": \"Payment not found\",\n          \"errors\": [{\n            \"message\": \"Payment not found\",\n            \"key\": \"paymentorder.api.PaymentOrder.NotFound\"\n          }]\n        }\n      }, {\n        \"paymentOrderId\": \"c7653c55-ee9b-4f65-96db-cbda76efd3ae\",\n        \"paymentOrder\": {\n          \"id\": \"c7653c55-ee9b-4f65-96db-cbda76efd3ae\",\n          \"approvalId\": \"fe383f48-df2e-4b17-a0d2-3443b2e3738c\",\n          \"status\": \"ENTERED\",\n          \"originatorAccount\": {\n            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n            \"externalArrangementId\": \"729190421493794513132\",\n            \"identification\": {\n              \"identification\": \"NL81TRIO0212471066\",\n              \"schemeName\": \"IBAN\"\n            }\n          },\n          \"originator\": {\n            \"name\": \"Smith Bonus Savings\",\n            \"postalAddress\": {\n              \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n            }\n          },\n          \"instructionPriority\": \"HIGH\",\n          \"requestedExecutionDate\": \"2017-08-16\",\n          \"paymentMode\": \"SINGLE\",\n          \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n          \"transferTransactionInformation\": {\n            \"endToEndIdentification\": \"Some reference\",\n            \"instructedAmount\": {\n              \"amount\": \"749.99\",\n              \"currencyCode\": \"EUR\"\n            },\n            \"counterpartyAccount\": {\n              \"identification\": {\n                \"identification\": \"MR1300020001010000123456753\",\n                \"schemeName\": \"IBAN\"\n              },\n              \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n              \"externalArrangementId\": \"9669274787995385962\"\n            },\n            \"counterparty\": {\n              \"name\": \"John Smith\"\n            }\n          },\n          \"actions\": [],\n          \"createdBy\": \"U00243\",\n          \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n          \"version\": 2\n        },\n        \"status\": {\n          \"code\": \"ERROR\",\n          \"message\": \"Limits has been breached, check report for details\"\n        },\n        \"breachReport\": [{\n          \"breachInfo\": [{\n            \"breachType\": \"THRESHOLD\",\n            \"breachedLimitType\": \"PERIODIC\",\n            \"currentConsumption\": \"999.00\",\n            \"currentThreshold\": \"1000.00\",\n            \"timeframe\": {\n              \"period\": \"DAILY\",\n              \"startTime\": \"2017-05-12T00:00:00.000Z\",\n              \"endTime\": \"2017-05-12T23:59:59.999Z\"\n            }\n          }]\n        }]\n      }],\n      \"successCount\": 1,\n      \"failCount\": 3\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PaymentOrdersHttpServicePutPaymentOrderByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\",\n      \"approvalStatus\": \"APPROVED\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"approvalStatus\": \"approvalStatus\",\n      \"reasonText\": \"reasonText\",\n      \"nextExecutionDate\": \"2000-01-23\",\n      \"errorDescription\": \"errorDescription\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"exportAllowed\": true,\n      \"bankStatus\": \"bankStatus\",\n      \"paymentSetupId\": \"paymentSetupId\",\n      \"transferFee\": {\n        \"amount\": \"amount\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"exchangeRateInformation\": {\n        \"rateType\": \"ACTUAL\",\n        \"contractIdentification\": \"contractIdentification\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"rate\": \"rate\",\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"id\": \"id\",\n      \"reasonCode\": \"reasonCode\",\n      \"paymentSubmissionId\": \"paymentSubmissionId\"\n    }\n  }, {\n    status: 201,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\"\n    }\n  }, {\n    status: 201,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\",\n      \"approvalStatus\": \"APPROVED\"\n    }\n  }, {\n    status: 201,\n    body: {\n      \"approvalStatus\": \"approvalStatus\",\n      \"reasonText\": \"reasonText\",\n      \"nextExecutionDate\": \"2000-01-23\",\n      \"errorDescription\": \"errorDescription\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"exportAllowed\": true,\n      \"bankStatus\": \"bankStatus\",\n      \"paymentSetupId\": \"paymentSetupId\",\n      \"transferFee\": {\n        \"amount\": \"amount\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"exchangeRateInformation\": {\n        \"rateType\": \"ACTUAL\",\n        \"contractIdentification\": \"contractIdentification\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"rate\": \"rate\",\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"id\": \"id\",\n      \"reasonCode\": \"reasonCode\",\n      \"paymentSubmissionId\": \"paymentSubmissionId\"\n    }\n  }, {\n    status: 202,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\"\n    }\n  }, {\n    status: 202,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\",\n      \"approvalStatus\": \"APPROVED\"\n    }\n  }, {\n    status: 202,\n    body: {\n      \"approvalStatus\": \"approvalStatus\",\n      \"reasonText\": \"reasonText\",\n      \"nextExecutionDate\": \"2000-01-23\",\n      \"errorDescription\": \"errorDescription\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"exportAllowed\": true,\n      \"bankStatus\": \"bankStatus\",\n      \"paymentSetupId\": \"paymentSetupId\",\n      \"transferFee\": {\n        \"amount\": \"amount\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"exchangeRateInformation\": {\n        \"rateType\": \"ACTUAL\",\n        \"contractIdentification\": \"contractIdentification\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"rate\": \"rate\",\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"id\": \"id\",\n      \"reasonCode\": \"reasonCode\",\n      \"paymentSubmissionId\": \"paymentSubmissionId\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Limits has been breached, check the report for more details\",\n      \"payment\": {\n        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"status\": \"ENTERED\",\n        \"originatorAccount\": {\n          \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n          \"identification\": {\n            \"identification\": \"NL53RABO0309349755\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"instructionPriority\": \"NORM\",\n        \"requestedExecutionDate\": \"2017-07-16\",\n        \"transferTransactionInformation\": {\n          \"name\": \"Jack Jackson\",\n          \"instructedAmount\": {\n            \"amount\": \"5000.55\",\n            \"currencyCode\": \"EUR\"\n          },\n          \"counterpartyAccount\": {\n            \"identification\": {\n              \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n              \"schemeName\": \"IBAN\"\n            },\n            \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n          },\n          \"counterparty\": {\n            \"name\": \"Backbase\",\n            \"postalAddress\": {\n              \"addressLine1\": \"Jacob Bontiusplaats 9\",\n              \"zipcode\": \"1018LL\",\n              \"city\": \"Amsterdam\",\n              \"country\": \"NL\"\n            }\n          },\n          \"remittanceInformation\": {\n            \"type\": \"UNSTRUCTURED\",\n            \"content\": \"Return a debt\"\n          }\n        },\n        \"version\": 0\n      },\n      \"checkTime\": \"2017-01-31T12:12:12Z\",\n      \"breachReport\": [{\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Service Agreement\",\n          \"description\": \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"user-BBID\": \"oleksii\",\n        \"breachInfo\": [{\n          \"breachType\": \"THRESHOLD\",\n          \"breachedLimitType\": \"PERIODIC\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2017-01-31T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"250.0\",\n          \"currentThreshold\": \"499.9\"\n        }, {\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"monthly\",\n            \"startTime\": \"2017-01-01T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"9950.0\",\n          \"currentThreshold\": \"10000.0\"\n        }]\n      }, {\n        \"user-BBID\": \"oleksii\",\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2017-01-31T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"500.0\",\n          \"currentThreshold\": \"1000.0\"\n        }]\n      }, {\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Function Access Group\",\n          \"description\": \"Payments approvers\"\n        }, {\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Function\",\n          \"description\": \"Domestic payments\"\n        }, {\n          \"ref\": \"Approve\",\n          \"type\": \"Privilege\",\n          \"description\": \"Approve\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"THRESHOLD\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2017-01-31T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"250.0\",\n          \"currentThreshold\": \"499.9\"\n        }]\n      }, {\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Legal Entity\",\n          \"description\": \"Kuhic, Gislason and Kemmer\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"quarterly\",\n            \"startTime\": \"2017-01-01T00:00:00Z\",\n            \"endTime\": \"2017-03-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"99950.0\",\n          \"currentThreshold\": \"100000.0\"\n        }]\n      }]\n    }\n  }]\n}]);\nconst PaymentOrdersHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/payment-orders/approvals\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"id\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n      \"status\": \"ENTERED\",\n      \"originatorAccount\": {\n        \"name\": \"Smith Bonus Savings\",\n        \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n        \"externalArrangementId\": \"a3f8defe-f447-4475-b5c1-d3971ec7a273\",\n        \"identification\": {\n          \"identification\": \"NL81TRIO0212471066\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Smith Bonus Savings\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        }\n      },\n      \"batchBooking\": false,\n      \"instructionPriority\": \"HIGH\",\n      \"requestedExecutionDate\": \"2018-08-16\",\n      \"paymentMode\": \"SINGLE\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"749.99\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"MR1300020001010000123456753\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n          \"externalArrangementId\": \"9669274787995385962\"\n        },\n        \"counterparty\": {\n          \"name\": \"John Smith\"\n        }\n      },\n      \"actions\": [\"APPROVE\", \"FINAL_APPROVE\", \"REJECT\"],\n      \"permissibleActions\": {\n        \"approve\": true,\n        \"finalApprove\": true,\n        \"reject\": true,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": false,\n        \"create\": true,\n        \"export\": false\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"version\": 1\n    }, {\n      \"id\": \"06db9298-189b-11e8-accf-0ed5f89f718b\",\n      \"approvalId\": \"11863018-189b-11e8-accf-0ed5f89f718b\",\n      \"status\": \"ENTERED\",\n      \"originatorAccount\": {\n        \"name\": \"John Doe\",\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"identification\": {\n          \"identification\": \"0260-0959-3\",\n          \"schemeName\": \"BBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"John Doe\",\n        \"postalAddress\": {\n          \"addressLine1\": \"228 Park Ave S\",\n          \"town\": \"New York\"\n        }\n      },\n      \"batchBooking\": false,\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2017-08-12\",\n      \"paymentMode\": \"RECURRING\",\n      \"paymentType\": \"US_FOREIGN_WIRE\",\n      \"schedule\": {\n        \"transferFrequency\": \"MONTHLY\",\n        \"on\": 1,\n        \"startDate\": \"2017-08-12\",\n        \"every\": \"1\",\n        \"nextExecutionDate\": \"2017-09-12\",\n        \"endDate\": \"2018-05-12\"\n      },\n      \"transferTransactionInformation\": {\n        \"endToEndIdentification\": \"TRNSCT REF 1234567890\",\n        \"instructedAmount\": {\n          \"amount\": \"104.66\",\n          \"currencyCode\": \"USD\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"NL91 ABNA 0417 1643 00\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"counterparty\": {\n          \"name\": \"Jack Brown\",\n          \"postalAddress\": {\n            \"addressLine1\": \"2589 Peaceful Lane\",\n            \"postCode\": \"44128\",\n            \"town\": \"Warrensville Heights\",\n            \"country\": \"US\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Unstructured content\"\n        },\n        \"counterpartyBank\": {\n          \"bankBranchCode\": \"082000549\",\n          \"name\": \"Morgan Chase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"4789 Vernon Street\",\n            \"postCode\": \"92028\",\n            \"town\": \"Fallbrook\",\n            \"country\": \"US\"\n          }\n        },\n        \"correspondentBank\": {\n          \"bankBranchCode\": \"122105155\",\n          \"name\": \"Bank of America\"\n        },\n        \"intermediaryBank\": {\n          \"bic\": \"DABAIE2D\",\n          \"bankBranchCode\": \"102000021\",\n          \"name\": \"SNSB\"\n        },\n        \"messageToBank\": \"My us international wire payment explanation.\",\n        \"targetCurrency\": \"EUR\"\n      },\n      \"actions\": [\"APPROVE\", \"REJECT\"],\n      \"permissibleActions\": {\n        \"approve\": true,\n        \"finalApprove\": false,\n        \"reject\": true,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": false,\n        \"create\": true,\n        \"export\": false\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"version\": 42\n    }, {\n      \"id\": \"fa088818-623a-4260-bc46-1ff678de8dae\",\n      \"approvalId\": \"8605dc85-726c-4795-9b55-ff698ad2d1e4\",\n      \"status\": \"ENTERED\",\n      \"originatorAccount\": {\n        \"name\": \"Mr John Usmith\",\n        \"arrangementId\": \"07642680-2b6f-11e8-b467-0ed5f89f718b\",\n        \"identification\": {\n          \"identification\": \"00400440116243\",\n          \"schemeName\": \"BBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Mr John Usmith\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, New York\"\n        }\n      },\n      \"instructionPriority\": \"HIGH\",\n      \"requestedExecutionDate\": \"2018-08-16\",\n      \"paymentMode\": \"SINGLE\",\n      \"paymentType\": \"INTERNAL\",\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"749.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"counterpartyAccount\": {\n          \"accountType\": \"SAVINGS\",\n          \"identification\": {\n            \"identification\": \"3242342348899\",\n            \"schemeName\": \"BBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n        },\n        \"counterparty\": {\n          \"name\": \"John Doe\"\n        }\n      },\n      \"actions\": [\"APPROVE\", \"REJECT\", \"EDIT\"],\n      \"permissibleActions\": {\n        \"approve\": true,\n        \"finalApprove\": false,\n        \"reject\": true,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": true,\n        \"create\": true,\n        \"export\": false\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"version\": 1\n    }]\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/payment-orders/currencies\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"code\": \"EUR\"\n    }, {\n      \"code\": \"USD\"\n    }, {\n      \"code\": \"GBP\"\n    }, {\n      \"code\": \"ISK\"\n    }, {\n      \"code\": \"KWD\"\n    }]\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n      \"status\": \"ACCEPTED\",\n      \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n      \"reasonCode\": \"AC01\",\n      \"reasonText\": \"Accepted by bank\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\": \"729190421493794513132\",\n        \"identification\": {\n          \"identification\": \"NL53RABO0309349755\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2017-07-16\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"5000.55\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n          \"externalArrangementId\": \"9669274787995385962\"\n        },\n        \"counterparty\": {\n          \"name\": \"Backbase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n            \"country\": \"NL\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt\"\n        }\n      },\n      \"actions\": [\"EDIT\"],\n      \"permissibleActions\": {\n        \"approve\": false,\n        \"finalApprove\": false,\n        \"reject\": false,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": true,\n        \"create\": true,\n        \"export\": true\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"contextualInformation\": {\n        \"externalUserId\": \"b3e4692d-6772-4fb2-9446-132435465768\",\n        \"internalUserId\": \"b3e4692d-6772-4fb2-9446-374857684932\",\n        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n        \"legalEntityId\": \"27263171-94d5-4d82-975c-61d8c41644d0\",\n        \"origin\": \"actions\"\n      },\n      \"originatorAccountCurrency\": \"EUR\",\n      \"version\": 1\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n      \"status\": \"ACCEPTED\",\n      \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n      \"reasonCode\": \"AC01\",\n      \"reasonText\": \"Accepted by bank\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\": \"729190421493794513132\",\n        \"identification\": {\n          \"identification\": \"NL53RABO0309349755\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2021-07-01\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"5000.55\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n          \"externalArrangementId\": \"9669274787995385962\"\n        },\n        \"counterparty\": {\n          \"name\": \"Backbase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n            \"country\": \"NL\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt\"\n        }\n      },\n      \"actions\": [\"EDIT\"],\n      \"permissibleActions\": {\n        \"approve\": false,\n        \"finalApprove\": false,\n        \"reject\": false,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": true,\n        \"create\": true,\n        \"export\": true\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"contextualInformation\": {\n        \"externalUserId\": \"b3e4692d-6772-4fb2-9446-132435465768\",\n        \"internalUserId\": \"b3e4692d-6772-4fb2-9446-374857684932\",\n        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n        \"legalEntityId\": \"27263171-94d5-4d82-975c-61d8c41644d0\",\n        \"origin\": \"actions\"\n      },\n      \"originatorAccountCurrency\": \"EUR\",\n      \"edited\": true,\n      \"editedPaymentOrder\": {\n        \"id\": \"df341c28-6714-11e7-907b-a6006ad3asa0\",\n        \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93df4ce\",\n        \"status\": \"ENTERED\",\n        \"originatorAccount\": {\n          \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n          \"externalArrangementId\": \"729190421493794513132\",\n          \"identification\": {\n            \"identification\": \"NL53RABO0309349755\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"instructionPriority\": \"NORM\",\n        \"requestedExecutionDate\": \"2021-07-01\",\n        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n        \"transferTransactionInformation\": {\n          \"instructedAmount\": {\n            \"amount\": \"6000\",\n            \"currencyCode\": \"EUR\"\n          },\n          \"counterpartyAccount\": {\n            \"identification\": {\n              \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n              \"schemeName\": \"IBAN\"\n            },\n            \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n            \"externalArrangementId\": \"9669274787995385962\"\n          },\n          \"counterparty\": {\n            \"name\": \"Backbase\",\n            \"postalAddress\": {\n              \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n              \"country\": \"NL\"\n            }\n          },\n          \"remittanceInformation\": {\n            \"type\": \"UNSTRUCTURED\",\n            \"content\": \"Return a debt\"\n          }\n        },\n        \"actions\": [\"EDIT\"],\n        \"permissibleActions\": {\n          \"approve\": false,\n          \"finalApprove\": false,\n          \"reject\": false,\n          \"cancel\": false,\n          \"delete\": false,\n          \"edit\": true,\n          \"create\": true\n        },\n        \"createdBy\": \"U00243\",\n        \"createdAt\": \"2017-05-12T15:33:13.452Z\",\n        \"contextualInformation\": {\n          \"externalUserId\": \"b3e4692d-6772-4fb2-9446-132435465768\",\n          \"internalUserId\": \"b3e4692d-6772-4fb2-9446-374857684932\",\n          \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n          \"legalEntityId\": \"27263171-94d5-4d82-975c-61d8c41644d0\",\n          \"origin\": \"actions\"\n        },\n        \"originatorAccountCurrency\": \"EUR\",\n        \"edited\": false,\n        \"version\": 1\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n      \"status\": \"ENTERED\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\": \"729190421493794513132\",\n        \"identification\": {\n          \"identification\": \"NL53RABO0309349755\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2018-07-22\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"5000.55\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n          \"externalArrangementId\": \"9669274787995385962\"\n        },\n        \"counterparty\": {\n          \"name\": \"Backbase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n            \"country\": \"NL\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt\"\n        }\n      },\n      \"version\": 1,\n      \"actions\": [],\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2018-07-22T13:44:02Z\",\n      \"originatorAccountCurrency\": \"EUR\",\n      \"approvalDetails\": {\n        \"id\": \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n        \"userId\": \"b3e4692d-6772-4fb2-9446-bebebebebebe\",\n        \"externalUserId\": \"davyJones88\",\n        \"userFullName\": \"Davy Jones\",\n        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n        \"itemId\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"dataAccessItemId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"resource\": \"Payments\",\n        \"function\": \"SEPA_CREDIT_TRANSFER\",\n        \"status\": \"PENDING\",\n        \"createdAt\": \"2018-07-22T13:44:02Z\",\n        \"records\": [{\n          \"id\": \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n          \"userId\": \"b3e4692d-6772-4fb2-9446-babababababa\",\n          \"externalUserId\": \"flying-dutchman\",\n          \"userFullName\": \"Jack Sparrow\",\n          \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n          \"status\": \"APPROVED\",\n          \"createdAt\": \"2018-07-22T13:44:02Z\"\n        }],\n        \"approvalTypes\": [{\n          \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n          \"name\": \"A\",\n          \"description\": \"1st approval\",\n          \"rank\": 100\n        }, {\n          \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n          \"name\": \"B\",\n          \"description\": \"2nd approval\",\n          \"rank\": 101\n        }],\n        \"policy\": {\n          \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n          \"name\": \"Default policy\",\n          \"description\": \"A default policy that requires two approvals of different types: A + B\",\n          \"items\": [{\n            \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n            \"numberOfApprovals\": 1\n          }, {\n            \"approvalTypeId\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n            \"numberOfApprovals\": 1\n          }]\n        },\n        \"canApprove\": false,\n        \"canReject\": false,\n        \"finalApprover\": false\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n      \"status\": \"ENTERED\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\": \"729190421493794513132\",\n        \"identification\": {\n          \"identification\": \"NL53RABO0309349755\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2018-07-22\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"5000.55\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n          \"externalArrangementId\": \"9669274787995385962\"\n        },\n        \"counterparty\": {\n          \"name\": \"Backbase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n            \"country\": \"NL\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt\"\n        }\n      },\n      \"version\": 1,\n      \"actions\": [],\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2018-07-22T13:44:02Z\",\n      \"originatorAccountCurrency\": \"EUR\",\n      \"approvalDetails\": {\n        \"id\": \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n        \"userId\": \"b3e4692d-6772-4fb2-9446-bebebebebebe\",\n        \"externalUserId\": \"davyJones88\",\n        \"userFullName\": \"Davy Jones\",\n        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n        \"itemId\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"dataAccessItemId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"resource\": \"Payments\",\n        \"function\": \"SEPA_CREDIT_TRANSFER\",\n        \"status\": \"PENDING\",\n        \"createdAt\": \"2018-07-22T13:44:02Z\",\n        \"records\": [{\n          \"id\": \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n          \"userId\": \"b3e4692d-6772-4fb2-9446-babababababa\",\n          \"externalUserId\": \"flying-dutchman\",\n          \"userFullName\": \"Jack Sparrow\",\n          \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n          \"status\": \"APPROVED\",\n          \"createdAt\": \"2018-07-22T13:44:02Z\"\n        }],\n        \"approvalTypes\": [{\n          \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n          \"name\": \"A\",\n          \"description\": \"1st approval\",\n          \"rank\": 100\n        }, {\n          \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n          \"name\": \"B\",\n          \"description\": \"2nd approval\",\n          \"rank\": 101\n        }],\n        \"policy\": {\n          \"id\": \"8ac202da-273b-4d2b-8aa6-c12f9d9fa736\",\n          \"name\": \"Or policy\",\n          \"description\": \"A policy that requires A OR B approvals\",\n          \"logicalItems\": [{\n            \"rank\": 1,\n            \"operator\": \"OR\",\n            \"items\": [{\n              \"approvalType\": {\n                \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                \"name\": \"A\",\n                \"description\": \"Or A approval\",\n                \"rank\": 100\n              },\n              \"numberOfApprovals\": 1\n            }, {\n              \"approvalType\": {\n                \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n                \"name\": \"B\",\n                \"description\": \"Or B approval\",\n                \"rank\": 101\n              },\n              \"numberOfApprovals\": 1\n            }]\n          }]\n        },\n        \"canApprove\": false,\n        \"canReject\": false,\n        \"finalApprover\": false\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n      \"status\": \"ACCEPTED\",\n      \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n      \"reasonCode\": \"AC01\",\n      \"reasonText\": \"Accepted by bank\",\n      \"originatorAccount\": {\n        \"identification\": {\n          \"identification\": \"8a48e08c60daa5940160dac699050088\",\n          \"schemeName\": \"ID\"\n        }\n      },\n      \"requestedExecutionDate\": \"2021-02-15\",\n      \"paymentType\": \"INTERNATIONAL_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"100\",\n          \"currencyCode\": \"INR\"\n        },\n        \"counterparty\": {\n          \"name\": \"John Doe\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"4902331374\",\n            \"schemeName\": \"BBAN\"\n          }\n        },\n        \"counterpartyBank\": {\n          \"bankBranchCode\": \"IDIA000A001\",\n          \"bic\": \"IBKLINBBXXR\",\n          \"name\": \"IDBA BANK\",\n          \"postalAddress\": {\n            \"addressLine1\": \"FINANCIAL PLAZA INDIA\",\n            \"country\": \"IN\"\n          }\n        },\n        \"correspondentBank\": {\n          \"bankBranchCode\": \"011000015\",\n          \"name\": \"FEDERAL RESERVE BANK\"\n        },\n        \"intermediaryBank\": {\n          \"bankBranchCode\": \"122105155\",\n          \"name\": \"SNSB2886803298\"\n        },\n        \"messageToBank\": \"My international payment explanation.\",\n        \"chargeBearer\": \"SHA\",\n        \"exchangeRateInformation\": {\n          \"currencyCode\": \"INR\",\n          \"rate\": \"89.00\",\n          \"rateType\": \"AGREED\",\n          \"contractIdentification\": \"/tbill/2018/T102993\"\n        },\n        \"transferFee\": {\n          \"amount\": \"15\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"purposeOfPayment\": {\n          \"code\": \"P1004\",\n          \"description\": \"Legal services\"\n        }\n      }\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}/export\",\n  method: \"GET\",\n  responses: [{\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/payment-orders\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"id\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n      \"status\": \"ENTERED\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n        \"externalArrangementId\": \"a3f8defe-f447-4475-b5c1-d3971ec7a273\",\n        \"identification\": {\n          \"identification\": \"NL81TRIO0212471066\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Smith Bonus Savings\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        }\n      },\n      \"instructionPriority\": \"HIGH\",\n      \"requestedExecutionDate\": \"2018-08-16\",\n      \"paymentMode\": \"SINGLE\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"endToEndIdentification\": \"Some reference\",\n        \"instructedAmount\": {\n          \"amount\": \"749.99\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"MR1300020001010000123456753\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n          \"externalArrangementId\": \"9669274787995385962\"\n        },\n        \"counterparty\": {\n          \"name\": \"John Smith\"\n        }\n      },\n      \"actions\": [\"APPROVE\", \"FINAL_APPROVE\", \"REJECT\"],\n      \"permissibleActions\": {\n        \"approve\": true,\n        \"finalApprove\": true,\n        \"reject\": true,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": false,\n        \"create\": true\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"edited\": true,\n      \"version\": 1\n    }, {\n      \"id\": \"0d0b6350-0ff9-11e8-b642-0ed5f89f718b\",\n      \"approvalId\": \"518bbd4a-0ff9-11e8-b642-0ed5f89f718b\",\n      \"status\": \"PROCESSED\",\n      \"bankStatus\": \"FINISHED\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\": \"729190421493794513132\",\n        \"identification\": {\n          \"identification\": \"NL18INGB0664923638\",\n          \"schemeName\": \"IBAN\"\n        },\n        \"name\": \"Credit Account\"\n      },\n      \"originator\": {\n        \"name\": \"Random Account\",\n        \"postalAddress\": {\n          \"country\": \"NL\"\n        }\n      },\n      \"batchBooking\": true,\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2018-08-11\",\n      \"paymentMode\": \"RECURRING\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"schedule\": {\n        \"transferFrequency\": \"MONTHLY\",\n        \"on\": 1,\n        \"startDate\": \"2017-08-12\",\n        \"every\": \"1\",\n        \"nextExecutionDate\": \"2018-08-15\",\n        \"endDate\": \"2018-05-12\"\n      },\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"100.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"NO9386011117947\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"counterparty\": {\n          \"name\": \"Jack Yellow\"\n        },\n        \"remittanceInformation\": {\n          \"type\": \"STRUCTURED\",\n          \"content\": \"<some-xml-tags>structured content with XML</some-xml-tags>\"\n        }\n      },\n      \"actions\": [\"EDIT\"],\n      \"permissibleActions\": {\n        \"approve\": false,\n        \"finalApprove\": false,\n        \"reject\": false,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": true,\n        \"create\": true,\n        \"export\": true\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"edited\": false,\n      \"version\": 1\n    }, {\n      \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"c383c69f-38bf-4e3e-ad3f-5f58cf971bb1\",\n      \"status\": \"REJECTED\",\n      \"bankStatus\": \"ACCOUNT_BLOCKED\",\n      \"reasonCode\": \"AB01\",\n      \"reasonText\": \"Account blocked\",\n      \"errorDescription\": \"Blocked by bank.\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n        \"externalArrangementId\": \"bcf10f4d-4b2f-4413-9bab-31ff693608b5\",\n        \"identification\": {\n          \"identification\": \"FR188388353832IH3CAWFYXAA36\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Mr and Mrs J. Smith\"\n      },\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2018-07-16\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"5000.55\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"LT121000011101001000\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"name\": \"ABN Amro\"\n        },\n        \"counterparty\": {\n          \"name\": \"Backbase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n            \"country\": \"NL\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt\"\n        }\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"edited\": false,\n      \"version\": 1\n    }, {\n      \"id\": \"7d34215a-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"ae01c614-d473-48d6-af7d-f516292b39cb\",\n      \"status\": \"ACCEPTED\",\n      \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n      \"reasonCode\": \"AC01\",\n      \"reasonText\": \"Accepted by bank\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n        \"externalArrangementId\": \"a3f8defe-f447-4475-b5c1-d3971ec7a273\",\n        \"identification\": {\n          \"identification\": \"NL81TRIO0212471066\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Smith Bonus Savings\"\n      },\n      \"batchBooking\": false,\n      \"requestedExecutionDate\": \"2018-07-23\",\n      \"paymentMode\": \"SINGLE\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"endToEndIdentification\": \"Some reference\",\n        \"instructedAmount\": {\n          \"amount\": \"749.99\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"LI21088100002324013AA\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"counterparty\": {\n          \"name\": \"Delivery Service\"\n        }\n      },\n      \"actions\": [\"APPROVE\", \"REJECT\"],\n      \"permissibleActions\": {\n        \"approve\": true,\n        \"finalApprove\": false,\n        \"reject\": true,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": false,\n        \"create\": true\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"version\": 1\n    }, {\n      \"id\": \"7d342c15-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"ae01a624-d473-48d6-af7d-f516292b39cb\",\n      \"status\": \"ACCEPTED\",\n      \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n      \"reasonCode\": \"AC01\",\n      \"reasonText\": \"Accepted by bank\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n        \"externalArrangementId\": \"bcf10f4d-4b2f-4413-9bab-31ff693608b5\",\n        \"identification\": {\n          \"identification\": \"FR188388353832IH3CAWFYXAA36\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Mr and Mrs J. Smith\"\n      },\n      \"batchBooking\": false,\n      \"requestedExecutionDate\": \"2018-06-12\",\n      \"paymentMode\": \"SINGLE\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"endToEndIdentification\": \"Some reference\",\n        \"instructedAmount\": {\n          \"amount\": \"99.99\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"MR1300020001010000123456753\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n          \"externalArrangementId\": \"9669274787995385962\"\n        },\n        \"counterparty\": {\n          \"name\": \"John Smith\"\n        }\n      },\n      \"actions\": [\"APPROVE\", \"REJECT\"],\n      \"permissibleActions\": {\n        \"approve\": true,\n        \"finalApprove\": false,\n        \"reject\": true,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": false,\n        \"create\": true\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"edited\": false,\n      \"version\": 1\n    }, {\n      \"id\": \"7d341a2a-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"264b69e4-3df0-49c1-8cda-e2bb437461e8\",\n      \"status\": \"ACCEPTED\",\n      \"bankStatus\": \"FINISHED\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n        \"externalArrangementId\": \"bcf10f4d-4b2f-4413-9bab-31ff693608b5\",\n        \"identification\": {\n          \"identification\": \"FR188388353832IH3CAWFYXAA36\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Mr and Mrs J. Smith\"\n      },\n      \"batchBooking\": true,\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2018-08-11\",\n      \"paymentMode\": \"RECURRING\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"schedule\": {\n        \"transferFrequency\": \"MONTHLY\",\n        \"on\": 1,\n        \"startDate\": \"2017-08-12\",\n        \"every\": \"1\",\n        \"nextExecutionDate\": \"2018-08-15\",\n        \"endDate\": \"2018-05-12\"\n      },\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"133.33\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"NO9386011117947\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"counterparty\": {\n          \"name\": \"Jack Yellow\"\n        },\n        \"remittanceInformation\": {\n          \"type\": \"STRUCTURED\",\n          \"content\": \"<some-xml-tags>structured content with XML</some-xml-tags>\"\n        }\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"edited\": false,\n      \"version\": 9312\n    }, {\n      \"id\": \"5cea81b2-0ff9-11e8-b642-0ed5f89f718b\",\n      \"approvalId\": \"61624e82-0ff9-11e8-b642-0ed5f89f718b\",\n      \"status\": \"ACCEPTED\",\n      \"bankStatus\": \"FINISHED\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n        \"externalArrangementId\": \"a3f8defe-f447-4475-b5c1-d3971ec7a273\",\n        \"identification\": {\n          \"identification\": \"NL81TRIO0212471066\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Smith Bonus Savings\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        }\n      },\n      \"batchBooking\": true,\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2018-08-11\",\n      \"paymentMode\": \"RECURRING\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"schedule\": {\n        \"transferFrequency\": \"MONTHLY\",\n        \"on\": 1,\n        \"startDate\": \"2017-08-12\",\n        \"every\": \"1\",\n        \"nextExecutionDate\": \"2018-08-15\",\n        \"endDate\": \"2018-05-12\"\n      },\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"166.66\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"HU42117730161111101800000000\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"counterparty\": {\n          \"name\": \"Jack Brown\"\n        },\n        \"remittanceInformation\": {\n          \"type\": \"STRUCTURED\",\n          \"content\": \"<some-xml-tags>structured content with XML</some-xml-tags>\"\n        }\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"version\": 42,\n      \"edited\": false,\n      \"originatingAccountCurrency\": \"EUR\"\n    }, {\n      \"id\": \"06db9298-189b-11e8-accf-0ed5f89f718b\",\n      \"approvalId\": \"11863018-189b-11e8-accf-0ed5f89f718b\",\n      \"status\": \"ENTERED\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"identification\": {\n          \"identification\": \"0260-0959-3\",\n          \"schemeName\": \"BBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"John Doe\",\n        \"postalAddress\": {\n          \"addressLine1\": \"228 Park Ave S\",\n          \"town\": \"New York\"\n        }\n      },\n      \"batchBooking\": false,\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2017-08-12\",\n      \"paymentMode\": \"RECURRING\",\n      \"paymentType\": \"US_FOREIGN_WIRE\",\n      \"schedule\": {\n        \"transferFrequency\": \"MONTHLY\",\n        \"on\": 1,\n        \"startDate\": \"2017-08-12\",\n        \"every\": \"1\",\n        \"nextExecutionDate\": \"2017-09-12\",\n        \"endDate\": \"2018-05-12\"\n      },\n      \"transferTransactionInformation\": {\n        \"endToEndIdentification\": \"TRNSCT REF 1234567890\",\n        \"instructedAmount\": {\n          \"amount\": \"104.66\",\n          \"currencyCode\": \"USD\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"NL91 ABNA 0417 1643 00\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"counterparty\": {\n          \"name\": \"Jack Brown\",\n          \"postalAddress\": {\n            \"addressLine1\": \"2589 Peaceful Lane\",\n            \"postCode\": \"44128\",\n            \"town\": \"Warrensville Heights\",\n            \"country\": \"US\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Unstructured content\"\n        },\n        \"counterpartyBank\": {\n          \"bankBranchCode\": \"082000549\",\n          \"name\": \"Morgan Chase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"4789 Vernon Street\",\n            \"postCode\": \"92028\",\n            \"town\": \"Fallbrook\",\n            \"country\": \"US\"\n          }\n        },\n        \"correspondentBank\": {\n          \"bankBranchCode\": \"122105155\",\n          \"name\": \"Bank of America\"\n        },\n        \"intermediaryBank\": {\n          \"bic\": \"DABAIE2D\",\n          \"bankBranchCode\": \"102000021\",\n          \"name\": \"SNSB\"\n        },\n        \"messageToBank\": \"My us international wire payment explanation.\",\n        \"targetCurrency\": \"EUR\"\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"edited\": false,\n      \"version\": 42\n    }, {\n      \"id\": \"fa088818-623a-4260-bc46-1ff678de8dae\",\n      \"approvalId\": \"8605dc85-726c-4795-9b55-ff698ad2d1e4\",\n      \"status\": \"ENTERED\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"07642680-2b6f-11e8-b467-0ed5f89f718b\",\n        \"identification\": {\n          \"identification\": \"00400440116243\",\n          \"schemeName\": \"BBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Mr John Usmith\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, New York\"\n        }\n      },\n      \"instructionPriority\": \"HIGH\",\n      \"requestedExecutionDate\": \"2018-08-16\",\n      \"paymentMode\": \"SINGLE\",\n      \"paymentType\": \"INTERNAL\",\n      \"transferTransactionInformation\": {\n        \"endToEndIdentification\": \"Some reference\",\n        \"instructedAmount\": {\n          \"amount\": \"749.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"counterpartyAccount\": {\n          \"accountType\": \"SAVINGS\",\n          \"identification\": {\n            \"identification\": \"3242342348899\",\n            \"schemeName\": \"BBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n        },\n        \"counterparty\": {\n          \"name\": \"John Doe\"\n        }\n      },\n      \"actions\": [\"APPROVE\", \"REJECT\"],\n      \"permissibleActions\": {\n        \"approve\": true,\n        \"finalApprove\": false,\n        \"reject\": true,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": false,\n        \"create\": true\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"edited\": false,\n      \"version\": 1\n    }, {\n      \"id\": \"f58a410e-469c-41f1-8c51-21b6d24bd3c1\",\n      \"approvalId\": \"7527c230-01a7-41b8-a021-dc29aca98fe3\",\n      \"status\": \"ENTERED\",\n      \"originatorAccount\": {\n        \"arrangementId\": \"07642680-2b6f-11e8-b467-0ed5f89f718b\",\n        \"identification\": {\n          \"identification\": \"00400440116243\",\n          \"schemeName\": \"BBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Mr John Usmith\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Los Angeles\"\n        }\n      },\n      \"instructionPriority\": \"HIGH\",\n      \"requestedExecutionDate\": \"2018-08-16\",\n      \"paymentMode\": \"SINGLE\",\n      \"paymentType\": \"INTERNAL\",\n      \"transferTransactionInformation\": {\n        \"endToEndIdentification\": \"Some reference\",\n        \"instructedAmount\": {\n          \"amount\": \"134\",\n          \"currencyCode\": \"USD\"\n        },\n        \"counterpartyAccount\": {\n          \"accountType\": \"CHECKING\",\n          \"identification\": {\n            \"identification\": \"3242342123899\",\n            \"schemeName\": \"BBAN\"\n          },\n          \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n        },\n        \"counterparty\": {\n          \"name\": \"Dan Brown\"\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt`\"\n        }\n      },\n      \"actions\": [\"APPROVE\", \"REJECT\", \"EDIT\"],\n      \"permissibleActions\": {\n        \"approve\": true,\n        \"finalApprove\": false,\n        \"reject\": true,\n        \"cancel\": false,\n        \"delete\": false,\n        \"edit\": true,\n        \"create\": true\n      },\n      \"createdBy\": \"U00243\",\n      \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n      \"edited\": false,\n      \"version\": 1\n    }]\n  }, {\n    status: 200,\n    body: [{\n      \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n      \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n      \"status\": \"ACCEPTED\",\n      \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n      \"reasonCode\": \"AC01\",\n      \"reasonText\": \"Accepted by bank\",\n      \"originatorAccount\": {\n        \"identification\": {\n          \"identification\": \"8a48e08c60daa5940160dac699050088\",\n          \"schemeName\": \"ID\"\n        }\n      },\n      \"requestedExecutionDate\": \"2021-02-15\",\n      \"paymentType\": \"INTERNATIONAL_TRANSFER\",\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"29.99\",\n          \"currencyCode\": \"INR\"\n        },\n        \"counterparty\": {\n          \"name\": \"John Doe\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"4902331374\",\n            \"schemeName\": \"BBAN\"\n          }\n        },\n        \"counterpartyBank\": {\n          \"bankBranchCode\": \"IDIA000A001\",\n          \"bic\": \"IBKLINBBXXR\",\n          \"name\": \"IDBA BANK IN\",\n          \"postalAddress\": {\n            \"addressLine1\": \"FINANCIAL PLAZA INDIA\",\n            \"country\": \"IN\"\n          }\n        },\n        \"correspondentBank\": {\n          \"bankBranchCode\": \"011000015\",\n          \"name\": \"FEDERAL RESERVE BANK\"\n        },\n        \"intermediaryBank\": {\n          \"bankBranchCode\": \"122105155\",\n          \"name\": \"SNSB2886803298\"\n        },\n        \"messageToBank\": \"My international payment explanation.\",\n        \"chargeBearer\": \"SHA\",\n        \"exchangeRateInformation\": {\n          \"currencyCode\": \"INR\",\n          \"rate\": \"89.00\",\n          \"rateType\": \"AGREED\",\n          \"contractIdentification\": \"/tbill/2018/T102993\"\n        },\n        \"transferFee\": {\n          \"amount\": \"0.29\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"purposeOfPayment\": {\n          \"code\": \"P1004\"\n        }\n      }\n    }]\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Payment type group invalid. Must be one of [credit, debit]\"\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}/progress-status\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"progressStatus\": \"CONFIRMATION_PENDING\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/payment-orders/rate\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"rate\": 1.07\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}/cancel\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"accepted\": true\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/payment-orders\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\"\n    }\n  }, {\n    status: 201,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\",\n      \"approvalStatus\": \"APPROVED\"\n    }\n  }, {\n    status: 202,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\"\n    }\n  }, {\n    status: 202,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\",\n      \"approvalStatus\": \"APPROVED\"\n    }\n  }, {\n    status: 202,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\",\n      \"exportAllowed\": true\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Limits has been breached, check the report for more details\",\n      \"payment\": {\n        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"status\": \"ENTERED\",\n        \"originatorAccount\": {\n          \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n          \"identification\": {\n            \"identification\": \"NL53RABO0309349755\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"instructionPriority\": \"NORM\",\n        \"requestedExecutionDate\": \"2017-07-16\",\n        \"transferTransactionInformation\": {\n          \"name\": \"Jack Jackson\",\n          \"instructedAmount\": {\n            \"amount\": \"5000.55\",\n            \"currencyCode\": \"EUR\"\n          },\n          \"counterpartyAccount\": {\n            \"identification\": {\n              \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n              \"schemeName\": \"IBAN\"\n            },\n            \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n          },\n          \"counterparty\": {\n            \"name\": \"Backbase\",\n            \"postalAddress\": {\n              \"addressLine1\": \"Jacob Bontiusplaats 9\",\n              \"zipcode\": \"1018LL\",\n              \"city\": \"Amsterdam\",\n              \"country\": \"NL\"\n            }\n          },\n          \"remittanceInformation\": {\n            \"type\": \"UNSTRUCTURED\",\n            \"content\": \"Return a debt\"\n          }\n        },\n        \"version\": 0\n      },\n      \"checkTime\": \"2017-01-31T12:12:12Z\",\n      \"breachReport\": [{\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Service Agreement\",\n          \"description\": \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"user-BBID\": \"oleksii\",\n        \"breachInfo\": [{\n          \"breachType\": \"THRESHOLD\",\n          \"breachedLimitType\": \"PERIODIC\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2017-01-31T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"250.0\",\n          \"currentThreshold\": \"499.9\"\n        }, {\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"monthly\",\n            \"startTime\": \"2017-01-01T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"9950.0\",\n          \"currentThreshold\": \"10000.0\"\n        }]\n      }, {\n        \"user-BBID\": \"oleksii\",\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2017-01-31T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"500.0\",\n          \"currentThreshold\": \"1000.0\"\n        }]\n      }, {\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Function Access Group\",\n          \"description\": \"Payments approvers\"\n        }, {\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Function\",\n          \"description\": \"Domestic payments\"\n        }, {\n          \"ref\": \"Approve\",\n          \"type\": \"Privilege\",\n          \"description\": \"Approve\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"THRESHOLD\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2017-01-31T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"250.0\",\n          \"currentThreshold\": \"499.9\"\n        }]\n      }, {\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Legal Entity\",\n          \"description\": \"Kuhic, Gislason and Kemmer\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"quarterly\",\n            \"startTime\": \"2017-01-01T00:00:00Z\",\n            \"endTime\": \"2017-03-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"99950.0\",\n          \"currentThreshold\": \"100000.0\"\n        }]\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/payment-orders/validate\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\": \"729190421493794513132\",\n        \"identification\": {\n          \"identification\": \"NL53RABO0309349755\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Credit Account\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        }\n      },\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2017-07-16\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"isIntraLegalEntityPaymentOrder\": false,\n      \"canApprove\": false,\n      \"finalApprover\": false,\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"5000.55\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"name\": \"ABN Amro\"\n        },\n        \"counterparty\": {\n          \"name\": \"Backbase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n            \"country\": \"NL\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt\"\n        }\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\": \"729190421493794513132\",\n        \"identification\": {\n          \"identification\": \"NL53RABO0309349755\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Credit Account\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        }\n      },\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2017-07-16\",\n      \"paymentType\": \"SEPA_CT_ILE\",\n      \"isIntraLegalEntityPaymentOrder\": true,\n      \"canApprove\": false,\n      \"finalApprover\": false,\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"5000.55\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"name\": \"ABN Amro\"\n        },\n        \"counterparty\": {\n          \"name\": \"Backbase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n            \"country\": \"NL\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt\"\n        }\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\": \"729190421493794513132\",\n        \"identification\": {\n          \"identification\": \"NL53RABO0309349755\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Credit Account\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        }\n      },\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2017-07-16\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"isIntraLegalEntityPaymentOrder\": false,\n      \"canApprove\": true,\n      \"finalApprover\": false,\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"5000.55\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"name\": \"ABN Amro\"\n        },\n        \"counterparty\": {\n          \"name\": \"Backbase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n            \"country\": \"NL\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt\"\n        }\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"originatorAccount\": {\n        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n        \"externalArrangementId\": \"729190421493794513132\",\n        \"identification\": {\n          \"identification\": \"NL53RABO0309349755\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"originator\": {\n        \"name\": \"Credit Account\",\n        \"postalAddress\": {\n          \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        }\n      },\n      \"instructionPriority\": \"NORM\",\n      \"requestedExecutionDate\": \"2017-07-16\",\n      \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n      \"isIntraLegalEntityPaymentOrder\": false,\n      \"canApprove\": true,\n      \"finalApprover\": true,\n      \"transferTransactionInformation\": {\n        \"instructedAmount\": {\n          \"amount\": \"5000.55\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"counterpartyAccount\": {\n          \"identification\": {\n            \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"name\": \"ABN Amro\"\n        },\n        \"counterparty\": {\n          \"name\": \"Backbase\",\n          \"postalAddress\": {\n            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n            \"country\": \"NL\"\n          }\n        },\n        \"remittanceInformation\": {\n          \"type\": \"UNSTRUCTURED\",\n          \"content\": \"Return a debt\"\n        }\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}/approvals\",\n  method: \"PUT\",\n  responses: [{\n    status: 202,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\"\n    }\n  }, {\n    status: 202,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\",\n      \"approvalStatus\": \"APPROVED\"\n    }\n  }, {\n    status: 202,\n    body: {\n      \"approvalStatus\": \"approvalStatus\",\n      \"reasonText\": \"reasonText\",\n      \"nextExecutionDate\": \"2000-01-23\",\n      \"errorDescription\": \"errorDescription\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"exportAllowed\": true,\n      \"bankStatus\": \"bankStatus\",\n      \"paymentSetupId\": \"paymentSetupId\",\n      \"transferFee\": {\n        \"amount\": \"amount\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"exchangeRateInformation\": {\n        \"rateType\": \"ACTUAL\",\n        \"contractIdentification\": \"contractIdentification\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"rate\": \"rate\",\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"id\": \"id\",\n      \"reasonCode\": \"reasonCode\",\n      \"paymentSubmissionId\": \"paymentSubmissionId\"\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Limits has been breached, check the report for more details\",\n      \"payment\": {\n        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"status\": \"ENTERED\",\n        \"originatorAccount\": {\n          \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n          \"identification\": {\n            \"identification\": \"NL53RABO0309349755\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"instructionPriority\": \"NORM\",\n        \"requestedExecutionDate\": \"2017-07-16\",\n        \"transferTransactionInformation\": {\n          \"name\": \"Jack Jackson\",\n          \"instructedAmount\": {\n            \"amount\": \"5000.55\",\n            \"currencyCode\": \"EUR\"\n          },\n          \"counterpartyAccount\": {\n            \"identification\": {\n              \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n              \"schemeName\": \"IBAN\"\n            },\n            \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n          },\n          \"counterparty\": {\n            \"name\": \"Backbase\",\n            \"postalAddress\": {\n              \"addressLine1\": \"Jacob Bontiusplaats 9\",\n              \"zipcode\": \"1018LL\",\n              \"city\": \"Amsterdam\",\n              \"country\": \"NL\"\n            }\n          },\n          \"remittanceInformation\": {\n            \"type\": \"UNSTRUCTURED\",\n            \"content\": \"Return a debt\"\n          }\n        },\n        \"version\": 0\n      },\n      \"checkTime\": \"2017-01-31T12:12:12Z\",\n      \"breachReport\": [{\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Service Agreement\",\n          \"description\": \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"user-BBID\": \"oleksii\",\n        \"breachInfo\": [{\n          \"breachType\": \"THRESHOLD\",\n          \"breachedLimitType\": \"PERIODIC\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2017-01-31T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"250.0\",\n          \"currentThreshold\": \"499.9\"\n        }, {\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"monthly\",\n            \"startTime\": \"2017-01-01T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"9950.0\",\n          \"currentThreshold\": \"10000.0\"\n        }]\n      }, {\n        \"user-BBID\": \"oleksii\",\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2017-01-31T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"500.0\",\n          \"currentThreshold\": \"1000.0\"\n        }]\n      }, {\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Function Access Group\",\n          \"description\": \"Payments approvers\"\n        }, {\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Function\",\n          \"description\": \"Domestic payments\"\n        }, {\n          \"ref\": \"Approve\",\n          \"type\": \"Privilege\",\n          \"description\": \"Approve\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"THRESHOLD\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2017-01-31T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"250.0\",\n          \"currentThreshold\": \"499.9\"\n        }]\n      }, {\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Legal Entity\",\n          \"description\": \"Kuhic, Gislason and Kemmer\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"quarterly\",\n            \"startTime\": \"2017-01-01T00:00:00Z\",\n            \"endTime\": \"2017-03-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"99950.0\",\n          \"currentThreshold\": \"100000.0\"\n        }]\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"challenges\": [{\n        \"challengeType\": \"reauth\",\n        \"acrValues\": \"txn-signature-silver txn-signature-gold\",\n        \"scope\": \"confirmation:3ea92d30-f460-4dde-b40a-e83a2f266a3a\"\n      }],\n      \"data\": {\n        \"approvalId\": \"9E2F9AC5-DD09-40C0-805E-147B0C565901\",\n        \"approvalRecordId\": \"DEDFDF28-690E-4B83-8BAF-C8ABF31EF70B\",\n        \"confirmationType\": \"approve-payment\",\n        \"paymentOrderId\": \"a3a2e499-bd58-4077-9991-19b2559f4796\",\n        \"amount\": \"12.95\",\n        \"currency\": \"EUR\",\n        \"counterpartyAccount\": \"NL06ABNA9691012820\",\n        \"counterpartyName\": \"Jouk\"\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/payment-orders/bulk-approvals\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"approvalStatus\": \"APPROVED\",\n      \"paymentOrders\": [{\n        \"paymentOrderId\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n        \"paymentOrder\": {\n          \"id\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n          \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n          \"status\": \"ENTERED\",\n          \"originatorAccount\": {\n            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n            \"externalArrangementId\": \"729190421493794513132\",\n            \"identification\": {\n              \"identification\": \"0260-0959-3\",\n              \"schemeName\": \"BBAN\"\n            }\n          },\n          \"originator\": {\n            \"name\": \"Smith Bonus Savings\",\n            \"postalAddress\": {\n              \"addressLine1\": \"228 Park Ave S\",\n              \"town\": \"New York\"\n            }\n          },\n          \"instructionPriority\": \"HIGH\",\n          \"requestedExecutionDate\": \"2017-08-16\",\n          \"paymentMode\": \"SINGLE\",\n          \"paymentType\": \"US_FOREIGN_WIRE\",\n          \"transferTransactionInformation\": {\n            \"endToEndIdentification\": \"Some reference\",\n            \"instructedAmount\": {\n              \"amount\": \"749.99\",\n              \"currencyCode\": \"EUR\"\n            },\n            \"counterpartyAccount\": {\n              \"identification\": {\n                \"identification\": \"MR1300020001010000123456753\",\n                \"schemeName\": \"IBAN\"\n              },\n              \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n              \"externalArrangementId\": \"9669274787995385962\"\n            },\n            \"counterparty\": {\n              \"name\": \"John Smith\",\n              \"postalAddress\": {\n                \"addressLine1\": \"2589 Peaceful Lane\",\n                \"postCode\": \"44128\",\n                \"town\": \"Warrensville Heights\",\n                \"country\": \"US\"\n              }\n            },\n            \"remittanceInformation\": {\n              \"type\": \"UNSTRUCTURED\",\n              \"content\": \"Unstructured content\"\n            },\n            \"counterpartyBank\": {\n              \"bankBranchCode\": \"082000549\",\n              \"name\": \"Morgan Chase\",\n              \"postalAddress\": {\n                \"addressLine1\": \"4789 Vernon Street\",\n                \"postCode\": \"92028\",\n                \"town\": \"Fallbrook\",\n                \"country\": \"US\"\n              }\n            },\n            \"correspondentBank\": {\n              \"bankBranchCode\": \"122105155\",\n              \"name\": \"Bank of America\"\n            },\n            \"intermediaryBank\": {\n              \"bic\": \"DABAIE2D\",\n              \"bankBranchCode\": \"102000021\",\n              \"name\": \"SNSB\"\n            },\n            \"messageToBank\": \"My us international wire payment explanation.\",\n            \"targetCurrency\": \"EUR\"\n          },\n          \"actions\": [\"APPROVE\"],\n          \"permissibleActions\": {\n            \"approve\": true,\n            \"finalApprove\": false,\n            \"reject\": false,\n            \"cancel\": false,\n            \"delete\": false,\n            \"edit\": false,\n            \"create\": true,\n            \"export\": false\n          },\n          \"createdBy\": \"U00243\",\n          \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n          \"version\": 2\n        },\n        \"approvalStatus\": \"PENDING\",\n        \"status\": {\n          \"code\": \"OK\"\n        }\n      }, {\n        \"paymentOrderId\": \"d2ff7c65-24ae-430f-92b9-c7ca5b143081\",\n        \"paymentOrder\": {\n          \"id\": \"d2ff7c65-24ae-430f-92b9-c7ca5b143081\",\n          \"approvalId\": \"2d9367dc-8af1-411d-81f6-9e28c46dd189\",\n          \"status\": \"REJECTED\",\n          \"originatorAccount\": {\n            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n            \"externalArrangementId\": \"729190421493794513132\",\n            \"identification\": {\n              \"identification\": \"NL81TRIO0212471066\",\n              \"schemeName\": \"IBAN\"\n            }\n          },\n          \"originator\": {\n            \"name\": \"Smith Bonus Savings\",\n            \"postalAddress\": {\n              \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n            }\n          },\n          \"instructionPriority\": \"HIGH\",\n          \"requestedExecutionDate\": \"2017-08-16\",\n          \"paymentMode\": \"SINGLE\",\n          \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n          \"transferTransactionInformation\": {\n            \"endToEndIdentification\": \"Some reference\",\n            \"instructedAmount\": {\n              \"amount\": \"749.99\",\n              \"currencyCode\": \"EUR\"\n            },\n            \"counterpartyAccount\": {\n              \"identification\": {\n                \"identification\": \"MR1300020001010000123456753\",\n                \"schemeName\": \"IBAN\"\n              },\n              \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n              \"externalArrangementId\": \"9669274787995385962\"\n            },\n            \"counterparty\": {\n              \"name\": \"John Smith\"\n            }\n          },\n          \"actions\": [],\n          \"createdBy\": \"U00243\",\n          \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n          \"version\": 2\n        },\n        \"approvalStatus\": \"REJECTED\",\n        \"status\": {\n          \"code\": \"ERROR\",\n          \"message\": \"Not allowed to update this approval, status is final\",\n          \"errors\": [{\n            \"message\": \"Not allowed to update this approval, status is final\",\n            \"key\": \"paymentorder.api.Approval.NotAllowed\",\n            \"context\": {\n              \"status\": \"REJECTED\"\n            }\n          }]\n        }\n      }, {\n        \"paymentOrderId\": \"9a20be2b-b8f3-45dc-a625-55635235de4c\",\n        \"status\": {\n          \"code\": \"ERROR\",\n          \"message\": \"Payment not found\",\n          \"errors\": [{\n            \"message\": \"Payment not found\",\n            \"key\": \"paymentorder.api.PaymentOrder.NotFound\"\n          }]\n        }\n      }, {\n        \"paymentOrderId\": \"c7653c55-ee9b-4f65-96db-cbda76efd3ae\",\n        \"paymentOrder\": {\n          \"id\": \"c7653c55-ee9b-4f65-96db-cbda76efd3ae\",\n          \"approvalId\": \"fe383f48-df2e-4b17-a0d2-3443b2e3738c\",\n          \"status\": \"ENTERED\",\n          \"originatorAccount\": {\n            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n            \"externalArrangementId\": \"729190421493794513132\",\n            \"identification\": {\n              \"identification\": \"NL81TRIO0212471066\",\n              \"schemeName\": \"IBAN\"\n            }\n          },\n          \"originator\": {\n            \"name\": \"Smith Bonus Savings\",\n            \"postalAddress\": {\n              \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n            }\n          },\n          \"instructionPriority\": \"HIGH\",\n          \"requestedExecutionDate\": \"2017-08-16\",\n          \"paymentMode\": \"SINGLE\",\n          \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n          \"transferTransactionInformation\": {\n            \"endToEndIdentification\": \"Some reference\",\n            \"instructedAmount\": {\n              \"amount\": \"749.99\",\n              \"currencyCode\": \"EUR\"\n            },\n            \"counterpartyAccount\": {\n              \"identification\": {\n                \"identification\": \"MR1300020001010000123456753\",\n                \"schemeName\": \"IBAN\"\n              },\n              \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n              \"externalArrangementId\": \"9669274787995385962\"\n            },\n            \"counterparty\": {\n              \"name\": \"John Smith\"\n            }\n          },\n          \"actions\": [],\n          \"createdBy\": \"U00243\",\n          \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n          \"version\": 2\n        },\n        \"status\": {\n          \"code\": \"ERROR\",\n          \"message\": \"Approval not found\",\n          \"errors\": [{\n            \"message\": \"Approval not found\",\n            \"key\": \"paymentorder.api.Approval.NotFound\"\n          }]\n        }\n      }],\n      \"successCount\": 1,\n      \"failCount\": 3\n    }\n  }, {\n    status: 200,\n    body: {\n      \"approvalStatus\": \"APPROVED\",\n      \"paymentOrders\": [{\n        \"paymentOrderId\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n        \"paymentOrder\": {\n          \"id\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n          \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n          \"status\": \"ENTERED\",\n          \"originatorAccount\": {\n            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n            \"externalArrangementId\": \"729190421493794513132\",\n            \"identification\": {\n              \"identification\": \"0260-0959-3\",\n              \"schemeName\": \"BBAN\"\n            }\n          },\n          \"originator\": {\n            \"name\": \"Smith Bonus Savings\",\n            \"postalAddress\": {\n              \"addressLine1\": \"228 Park Ave S\",\n              \"town\": \"New York\"\n            }\n          },\n          \"instructionPriority\": \"HIGH\",\n          \"requestedExecutionDate\": \"2017-08-16\",\n          \"paymentMode\": \"SINGLE\",\n          \"paymentType\": \"US_FOREIGN_WIRE\",\n          \"transferTransactionInformation\": {\n            \"endToEndIdentification\": \"Some reference\",\n            \"instructedAmount\": {\n              \"amount\": \"749.99\",\n              \"currencyCode\": \"EUR\"\n            },\n            \"counterpartyAccount\": {\n              \"identification\": {\n                \"identification\": \"MR1300020001010000123456753\",\n                \"schemeName\": \"IBAN\"\n              },\n              \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n              \"externalArrangementId\": \"9669274787995385962\"\n            },\n            \"counterparty\": {\n              \"name\": \"John Smith\",\n              \"postalAddress\": {\n                \"addressLine1\": \"2589 Peaceful Lane\",\n                \"postCode\": \"44128\",\n                \"town\": \"Warrensville Heights\",\n                \"country\": \"US\"\n              }\n            },\n            \"remittanceInformation\": {\n              \"type\": \"UNSTRUCTURED\",\n              \"content\": \"Unstructured content\"\n            },\n            \"counterpartyBank\": {\n              \"bankBranchCode\": \"082000549\",\n              \"name\": \"Morgan Chase\",\n              \"postalAddress\": {\n                \"addressLine1\": \"4789 Vernon Street\",\n                \"postCode\": \"92028\",\n                \"town\": \"Fallbrook\",\n                \"country\": \"US\"\n              }\n            },\n            \"correspondentBank\": {\n              \"bankBranchCode\": \"122105155\",\n              \"name\": \"Bank of America\"\n            },\n            \"intermediaryBank\": {\n              \"bic\": \"DABAIE2D\",\n              \"bankBranchCode\": \"102000021\",\n              \"name\": \"SNSB\"\n            },\n            \"messageToBank\": \"My us international wire payment explanation.\",\n            \"targetCurrency\": \"EUR\"\n          },\n          \"actions\": [\"APPROVE\"],\n          \"permissibleActions\": {\n            \"approve\": true,\n            \"finalApprove\": false,\n            \"reject\": false,\n            \"cancel\": false,\n            \"delete\": false,\n            \"edit\": false,\n            \"create\": true,\n            \"export\": false\n          },\n          \"createdBy\": \"U00243\",\n          \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n          \"version\": 2\n        },\n        \"approvalStatus\": \"PENDING\",\n        \"status\": {\n          \"code\": \"OK\"\n        }\n      }, {\n        \"paymentOrderId\": \"d2ff7c65-24ae-430f-92b9-c7ca5b143081\",\n        \"paymentOrder\": {\n          \"id\": \"d2ff7c65-24ae-430f-92b9-c7ca5b143081\",\n          \"approvalId\": \"2d9367dc-8af1-411d-81f6-9e28c46dd189\",\n          \"status\": \"REJECTED\",\n          \"originatorAccount\": {\n            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n            \"externalArrangementId\": \"729190421493794513132\",\n            \"identification\": {\n              \"identification\": \"NL81TRIO0212471066\",\n              \"schemeName\": \"IBAN\"\n            }\n          },\n          \"originator\": {\n            \"name\": \"Smith Bonus Savings\",\n            \"postalAddress\": {\n              \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n            }\n          },\n          \"instructionPriority\": \"HIGH\",\n          \"requestedExecutionDate\": \"2017-08-16\",\n          \"paymentMode\": \"SINGLE\",\n          \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n          \"transferTransactionInformation\": {\n            \"endToEndIdentification\": \"Some reference\",\n            \"instructedAmount\": {\n              \"amount\": \"749.99\",\n              \"currencyCode\": \"EUR\"\n            },\n            \"counterpartyAccount\": {\n              \"identification\": {\n                \"identification\": \"MR1300020001010000123456753\",\n                \"schemeName\": \"IBAN\"\n              },\n              \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n              \"externalArrangementId\": \"9669274787995385962\"\n            },\n            \"counterparty\": {\n              \"name\": \"John Smith\"\n            }\n          },\n          \"actions\": [],\n          \"createdBy\": \"U00243\",\n          \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n          \"version\": 2\n        },\n        \"approvalStatus\": \"REJECTED\",\n        \"status\": {\n          \"code\": \"ERROR\",\n          \"message\": \"Not allowed to update this approval, status is final\",\n          \"errors\": [{\n            \"message\": \"Not allowed to update this approval, status is final\",\n            \"key\": \"paymentorder.api.Approval.NotAllowed\",\n            \"context\": {\n              \"status\": \"REJECTED\"\n            }\n          }]\n        }\n      }, {\n        \"paymentOrderId\": \"9a20be2b-b8f3-45dc-a625-55635235de4c\",\n        \"status\": {\n          \"code\": \"ERROR\",\n          \"message\": \"Payment not found\",\n          \"errors\": [{\n            \"message\": \"Payment not found\",\n            \"key\": \"paymentorder.api.PaymentOrder.NotFound\"\n          }]\n        }\n      }, {\n        \"paymentOrderId\": \"c7653c55-ee9b-4f65-96db-cbda76efd3ae\",\n        \"paymentOrder\": {\n          \"id\": \"c7653c55-ee9b-4f65-96db-cbda76efd3ae\",\n          \"approvalId\": \"fe383f48-df2e-4b17-a0d2-3443b2e3738c\",\n          \"status\": \"ENTERED\",\n          \"originatorAccount\": {\n            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n            \"externalArrangementId\": \"729190421493794513132\",\n            \"identification\": {\n              \"identification\": \"NL81TRIO0212471066\",\n              \"schemeName\": \"IBAN\"\n            }\n          },\n          \"originator\": {\n            \"name\": \"Smith Bonus Savings\",\n            \"postalAddress\": {\n              \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n            }\n          },\n          \"instructionPriority\": \"HIGH\",\n          \"requestedExecutionDate\": \"2017-08-16\",\n          \"paymentMode\": \"SINGLE\",\n          \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n          \"transferTransactionInformation\": {\n            \"endToEndIdentification\": \"Some reference\",\n            \"instructedAmount\": {\n              \"amount\": \"749.99\",\n              \"currencyCode\": \"EUR\"\n            },\n            \"counterpartyAccount\": {\n              \"identification\": {\n                \"identification\": \"MR1300020001010000123456753\",\n                \"schemeName\": \"IBAN\"\n              },\n              \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n              \"externalArrangementId\": \"9669274787995385962\"\n            },\n            \"counterparty\": {\n              \"name\": \"John Smith\"\n            }\n          },\n          \"actions\": [],\n          \"createdBy\": \"U00243\",\n          \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n          \"version\": 2\n        },\n        \"status\": {\n          \"code\": \"ERROR\",\n          \"message\": \"Limits has been breached, check report for details\"\n        },\n        \"breachReport\": [{\n          \"breachInfo\": [{\n            \"breachType\": \"THRESHOLD\",\n            \"breachedLimitType\": \"PERIODIC\",\n            \"currentConsumption\": \"999.00\",\n            \"currentThreshold\": \"1000.00\",\n            \"timeframe\": {\n              \"period\": \"DAILY\",\n              \"startTime\": \"2017-05-12T00:00:00.000Z\",\n              \"endTime\": \"2017-05-12T23:59:59.999Z\"\n            }\n          }]\n        }]\n      }],\n      \"successCount\": 1,\n      \"failCount\": 3\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\",\n      \"approvalStatus\": \"APPROVED\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"approvalStatus\": \"approvalStatus\",\n      \"reasonText\": \"reasonText\",\n      \"nextExecutionDate\": \"2000-01-23\",\n      \"errorDescription\": \"errorDescription\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"exportAllowed\": true,\n      \"bankStatus\": \"bankStatus\",\n      \"paymentSetupId\": \"paymentSetupId\",\n      \"transferFee\": {\n        \"amount\": \"amount\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"exchangeRateInformation\": {\n        \"rateType\": \"ACTUAL\",\n        \"contractIdentification\": \"contractIdentification\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"rate\": \"rate\",\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"id\": \"id\",\n      \"reasonCode\": \"reasonCode\",\n      \"paymentSubmissionId\": \"paymentSubmissionId\"\n    }\n  }, {\n    status: 201,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\"\n    }\n  }, {\n    status: 201,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\",\n      \"approvalStatus\": \"APPROVED\"\n    }\n  }, {\n    status: 201,\n    body: {\n      \"approvalStatus\": \"approvalStatus\",\n      \"reasonText\": \"reasonText\",\n      \"nextExecutionDate\": \"2000-01-23\",\n      \"errorDescription\": \"errorDescription\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"exportAllowed\": true,\n      \"bankStatus\": \"bankStatus\",\n      \"paymentSetupId\": \"paymentSetupId\",\n      \"transferFee\": {\n        \"amount\": \"amount\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"exchangeRateInformation\": {\n        \"rateType\": \"ACTUAL\",\n        \"contractIdentification\": \"contractIdentification\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"rate\": \"rate\",\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"id\": \"id\",\n      \"reasonCode\": \"reasonCode\",\n      \"paymentSubmissionId\": \"paymentSubmissionId\"\n    }\n  }, {\n    status: 202,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\"\n    }\n  }, {\n    status: 202,\n    body: {\n      \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n      \"status\": \"ENTERED\",\n      \"approvalStatus\": \"APPROVED\"\n    }\n  }, {\n    status: 202,\n    body: {\n      \"approvalStatus\": \"approvalStatus\",\n      \"reasonText\": \"reasonText\",\n      \"nextExecutionDate\": \"2000-01-23\",\n      \"errorDescription\": \"errorDescription\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"exportAllowed\": true,\n      \"bankStatus\": \"bankStatus\",\n      \"paymentSetupId\": \"paymentSetupId\",\n      \"transferFee\": {\n        \"amount\": \"amount\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"exchangeRateInformation\": {\n        \"rateType\": \"ACTUAL\",\n        \"contractIdentification\": \"contractIdentification\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"rate\": \"rate\",\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"id\": \"id\",\n      \"reasonCode\": \"reasonCode\",\n      \"paymentSubmissionId\": \"paymentSubmissionId\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"key\": \"GENERAL_ERROR\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Limits has been breached, check the report for more details\",\n      \"payment\": {\n        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"status\": \"ENTERED\",\n        \"originatorAccount\": {\n          \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n          \"identification\": {\n            \"identification\": \"NL53RABO0309349755\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"instructionPriority\": \"NORM\",\n        \"requestedExecutionDate\": \"2017-07-16\",\n        \"transferTransactionInformation\": {\n          \"name\": \"Jack Jackson\",\n          \"instructedAmount\": {\n            \"amount\": \"5000.55\",\n            \"currencyCode\": \"EUR\"\n          },\n          \"counterpartyAccount\": {\n            \"identification\": {\n              \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n              \"schemeName\": \"IBAN\"\n            },\n            \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n          },\n          \"counterparty\": {\n            \"name\": \"Backbase\",\n            \"postalAddress\": {\n              \"addressLine1\": \"Jacob Bontiusplaats 9\",\n              \"zipcode\": \"1018LL\",\n              \"city\": \"Amsterdam\",\n              \"country\": \"NL\"\n            }\n          },\n          \"remittanceInformation\": {\n            \"type\": \"UNSTRUCTURED\",\n            \"content\": \"Return a debt\"\n          }\n        },\n        \"version\": 0\n      },\n      \"checkTime\": \"2017-01-31T12:12:12Z\",\n      \"breachReport\": [{\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Service Agreement\",\n          \"description\": \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"user-BBID\": \"oleksii\",\n        \"breachInfo\": [{\n          \"breachType\": \"THRESHOLD\",\n          \"breachedLimitType\": \"PERIODIC\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2017-01-31T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"250.0\",\n          \"currentThreshold\": \"499.9\"\n        }, {\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"monthly\",\n            \"startTime\": \"2017-01-01T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"9950.0\",\n          \"currentThreshold\": \"10000.0\"\n        }]\n      }, {\n        \"user-BBID\": \"oleksii\",\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2017-01-31T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"500.0\",\n          \"currentThreshold\": \"1000.0\"\n        }]\n      }, {\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Function Access Group\",\n          \"description\": \"Payments approvers\"\n        }, {\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Function\",\n          \"description\": \"Domestic payments\"\n        }, {\n          \"ref\": \"Approve\",\n          \"type\": \"Privilege\",\n          \"description\": \"Approve\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"THRESHOLD\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2017-01-31T00:00:00Z\",\n            \"endTime\": \"2017-01-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"250.0\",\n          \"currentThreshold\": \"499.9\"\n        }]\n      }, {\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Legal Entity\",\n          \"description\": \"Kuhic, Gislason and Kemmer\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"quarterly\",\n            \"startTime\": \"2017-01-01T00:00:00Z\",\n            \"endTime\": \"2017-03-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"99950.0\",\n          \"currentThreshold\": \"100000.0\"\n        }]\n      }]\n    }\n  }]\n}]);\nexport { ApprovalStatus, BreachInfo, BulkPaymentOrdersApprovalPutResponseStatus, COLLECTION_FORMATS, CONFIG_TOKEN, ChargeBearer, ExchangeRateInformation, InstructionPriority, InvolvedPartyRole, LogicalOperator, PAYMENT_ORDER_BASE_PATH, PaymentAction, PaymentMode, PaymentOrderApiModule, PaymentOrderConfiguration, PaymentOrderProgressStatusGet, PaymentOrdersHttpService, PaymentOrdersHttpServiceDeletePaymentOrderByIdMocksProvider, PaymentOrdersHttpServiceGetApprovablePaymentOrdersMocksProvider, PaymentOrdersHttpServiceGetCurrenciesMocksProvider, PaymentOrdersHttpServiceGetPaymentOrderByIdMocksProvider, PaymentOrdersHttpServiceGetPaymentOrderExportMocksProvider, PaymentOrdersHttpServiceGetPaymentOrdersMocksProvider, PaymentOrdersHttpServiceGetProgressStatusByPaymentOrderIdMocksProvider, PaymentOrdersHttpServiceGetRateMocksProvider, PaymentOrdersHttpServiceMocksProvider, PaymentOrdersHttpServicePostCancelByPaymentOrderIdMocksProvider, PaymentOrdersHttpServicePostPaymentOrdersMocksProvider, PaymentOrdersHttpServicePostValidateMocksProvider, PaymentOrdersHttpServicePutApprovalsByPaymentOrderIdMocksProvider, PaymentOrdersHttpServicePutBulkApprovalsMocksProvider, PaymentOrdersHttpServicePutPaymentOrderByIdMocksProvider, RecordStatus, RemittanceInformation, Schedule, SchemeNames, Status };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/payment-order-http-ang/fesm2015/backbase-payment-order-http-ang.js"],"names":["i0","InjectionToken","NgModule","Optional","SkipSelf","Injectable","Inject","i1","HttpHeaders","HttpParams","i2","createMocks","ApprovalStatus","PENDING","APPROVED","REJECTED","CANCELLED","BreachInfo","BreachTypeEnum","THRESHOLD","CONSUMPTION","BreachedLimitTypeEnum","PERIODIC","TRANSACTIONAL","BulkPaymentOrdersApprovalPutResponseStatus","CodeEnum","OK","ERROR","ChargeBearer","OUR","BEN","SHA","ExchangeRateInformation","RateTypeEnum","ACTUAL","INDICATIVE","AGREED","InstructionPriority","NORM","HIGH","InvolvedPartyRole","CREDITOR","DEBTOR","LogicalOperator","OR","PaymentAction","APPROVE","FINALAPPROVE","REJECT","CANCEL","DELETE","EDIT","PaymentMode","SINGLE","RECURRING","PaymentOrderProgressStatusGet","ProgressStatusEnum","CONFIRMATIONPENDING","USERDECLINED","SYSTEMDECLINED","PENDINGAPPROVAL","SENDING","ACCEPTED","PROCESSED","NOPROGRESS","RecordStatus","RemittanceInformation","TypeEnum","STRUCTURED","UNSTRUCTURED","Schedule","NonWorkingDayExecutionStrategyEnum","BEFORE","AFTER","NONE","TransferFrequencyEnum","ONCE","DAILY","WEEKLY","BIWEEKLY","MONTHLY","QUARTERLY","YEARLY","EveryEnum","_1","_2","SchemeNames","IBAN","BBAN","ID","EXTERNALID","EMAIL","MOBILE","Status","DRAFT","ENTERED","READY","CANCELLATIONPENDING","CONFIRMATIONDECLINED","REPLACED","PAYMENT_ORDER_BASE_PATH","COLLECTION_FORMATS","PaymentOrderConfiguration","constructor","configurationParameters","apiKeys","username","password","accessToken","basePath","withCredentials","encoder","credentials","selectHeaderContentType","contentTypes","length","undefined","type","find","x","isJsonMime","selectHeaderAccept","accepts","mime","jsonMime","RegExp","test","toLowerCase","lookupCredential","key","value","CONFIG_TOKEN","PaymentOrderApiModule","parentModule","http","dataModulesManager","config","Error","setModuleConfig","apiRoot","servicePath","headers","forRoot","configurationFactory","ngModule","providers","provide","useFactory","ɵfac","HttpClient","DataModulesManager","ɵmod","ɵinj","args","imports","declarations","exports","decorators","CustomHttpParameterCodec","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeURIComponent","decodeValue","PaymentOrdersHttpService","httpClient","configuration","defaultHeaders","addToHttpParams","httpParams","Date","addToHttpParamsRecursive","Array","isArray","forEach","elem","append","toISOString","substr","Object","keys","deletePaymentOrderById","requestParameters","observe","reportProgress","options","_paymentOrderId","_version","queryParameters","httpHeaderAcceptSelected","httpHeaderAccept","httpHeaderAccepts","set","responseType","startsWith","delete","String","params","deletePaymentOrderByIdUrl","queryString","toString","getApprovablePaymentOrders","_cursor","_size","get","getApprovablePaymentOrdersUrl","getCurrencies","getCurrenciesUrl","getPaymentOrderById","_userId","_saId","getPaymentOrderByIdUrl","getPaymentOrderExport","getPaymentOrderExportUrl","getPaymentOrders","_status","_paymentTypeGroup","_createdByMe","_originatorArrangementId","_query","_amountFrom","_amountTo","_executionDate","_executionDateFrom","_executionDateTo","_nextExecutionDate","_nextExecutionDateFrom","_nextExecutionDateTo","_paymentMode","_paymentSetupId","_transferFrequency","_from","_orderBy","_direction","element","getPaymentOrdersUrl","getProgressStatusByPaymentOrderId","getProgressStatusByPaymentOrderIdUrl","getRate","_currencyFrom","_currencyTo","getRateUrl","postCancelByPaymentOrderId","_paymentOrderCancelPostRequest","consumes","httpContentTypeSelected","post","postCancelByPaymentOrderIdUrl","postPaymentOrders","_paymentOrdersPost","_xMFA","postPaymentOrdersUrl","postValidate","_paymentOrdersValidatePost","postValidateUrl","putApprovalsByPaymentOrderId","_paymentOrderApprovalPutRequest","put","putApprovalsByPaymentOrderIdUrl","putBulkApprovals","_bulkPaymentOrdersApprovalPutRequest","putBulkApprovalsUrl","putPaymentOrderById","_paymentOrderPut","putPaymentOrderByIdUrl","ɵprov","providedIn","PaymentOrdersHttpServiceDeletePaymentOrderByIdMocksProvider","urlPattern","method","responses","status","body","PaymentOrdersHttpServiceGetApprovablePaymentOrdersMocksProvider","PaymentOrdersHttpServiceGetCurrenciesMocksProvider","PaymentOrdersHttpServiceGetPaymentOrderByIdMocksProvider","PaymentOrdersHttpServiceGetPaymentOrderExportMocksProvider","PaymentOrdersHttpServiceGetPaymentOrdersMocksProvider","PaymentOrdersHttpServiceGetProgressStatusByPaymentOrderIdMocksProvider","PaymentOrdersHttpServiceGetRateMocksProvider","PaymentOrdersHttpServicePostCancelByPaymentOrderIdMocksProvider","PaymentOrdersHttpServicePostPaymentOrdersMocksProvider","PaymentOrdersHttpServicePostValidateMocksProvider","PaymentOrdersHttpServicePutApprovalsByPaymentOrderIdMocksProvider","PaymentOrdersHttpServicePutBulkApprovalsMocksProvider","PaymentOrdersHttpServicePutPaymentOrderByIdMocksProvider","PaymentOrdersHttpServiceMocksProvider"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\n\nconst ApprovalStatus = {\n    PENDING: 'PENDING',\n    APPROVED: 'APPROVED',\n    REJECTED: 'REJECTED',\n    CANCELLED: 'CANCELLED'\n};\n\nvar BreachInfo;\n(function (BreachInfo) {\n    BreachInfo.BreachTypeEnum = {\n        THRESHOLD: 'THRESHOLD',\n        CONSUMPTION: 'CONSUMPTION'\n    };\n    BreachInfo.BreachedLimitTypeEnum = {\n        PERIODIC: 'PERIODIC',\n        TRANSACTIONAL: 'TRANSACTIONAL'\n    };\n})(BreachInfo || (BreachInfo = {}));\n\nvar BulkPaymentOrdersApprovalPutResponseStatus;\n(function (BulkPaymentOrdersApprovalPutResponseStatus) {\n    BulkPaymentOrdersApprovalPutResponseStatus.CodeEnum = {\n        OK: 'OK',\n        ERROR: 'ERROR'\n    };\n})(BulkPaymentOrdersApprovalPutResponseStatus || (BulkPaymentOrdersApprovalPutResponseStatus = {}));\n\nconst ChargeBearer = {\n    OUR: 'OUR',\n    BEN: 'BEN',\n    SHA: 'SHA'\n};\n\nvar ExchangeRateInformation;\n(function (ExchangeRateInformation) {\n    ExchangeRateInformation.RateTypeEnum = {\n        ACTUAL: 'ACTUAL',\n        INDICATIVE: 'INDICATIVE',\n        AGREED: 'AGREED'\n    };\n})(ExchangeRateInformation || (ExchangeRateInformation = {}));\n\nconst InstructionPriority = {\n    NORM: 'NORM',\n    HIGH: 'HIGH'\n};\n\nconst InvolvedPartyRole = {\n    CREDITOR: 'CREDITOR',\n    DEBTOR: 'DEBTOR'\n};\n\nconst LogicalOperator = {\n    OR: 'OR'\n};\n\nconst PaymentAction = {\n    APPROVE: 'APPROVE',\n    FINALAPPROVE: 'FINAL_APPROVE',\n    REJECT: 'REJECT',\n    CANCEL: 'CANCEL',\n    DELETE: 'DELETE',\n    EDIT: 'EDIT'\n};\n\nconst PaymentMode = {\n    SINGLE: 'SINGLE',\n    RECURRING: 'RECURRING'\n};\n\nvar PaymentOrderProgressStatusGet;\n(function (PaymentOrderProgressStatusGet) {\n    PaymentOrderProgressStatusGet.ProgressStatusEnum = {\n        CONFIRMATIONPENDING: 'CONFIRMATION_PENDING',\n        USERDECLINED: 'USER_DECLINED',\n        SYSTEMDECLINED: 'SYSTEM_DECLINED',\n        PENDINGAPPROVAL: 'PENDING_APPROVAL',\n        SENDING: 'SENDING',\n        ACCEPTED: 'ACCEPTED',\n        REJECTED: 'REJECTED',\n        PROCESSED: 'PROCESSED',\n        NOPROGRESS: 'NO_PROGRESS'\n    };\n})(PaymentOrderProgressStatusGet || (PaymentOrderProgressStatusGet = {}));\n\nconst RecordStatus = {\n    APPROVED: 'APPROVED',\n    REJECTED: 'REJECTED'\n};\n\nvar RemittanceInformation;\n(function (RemittanceInformation) {\n    RemittanceInformation.TypeEnum = {\n        STRUCTURED: 'STRUCTURED',\n        UNSTRUCTURED: 'UNSTRUCTURED'\n    };\n})(RemittanceInformation || (RemittanceInformation = {}));\n\nvar Schedule;\n(function (Schedule) {\n    Schedule.NonWorkingDayExecutionStrategyEnum = {\n        BEFORE: 'BEFORE',\n        AFTER: 'AFTER',\n        NONE: 'NONE'\n    };\n    Schedule.TransferFrequencyEnum = {\n        ONCE: 'ONCE',\n        DAILY: 'DAILY',\n        WEEKLY: 'WEEKLY',\n        BIWEEKLY: 'BIWEEKLY',\n        MONTHLY: 'MONTHLY',\n        QUARTERLY: 'QUARTERLY',\n        YEARLY: 'YEARLY'\n    };\n    Schedule.EveryEnum = {\n        _1: '1',\n        _2: '2'\n    };\n})(Schedule || (Schedule = {}));\n\nconst SchemeNames = {\n    IBAN: 'IBAN',\n    BBAN: 'BBAN',\n    ID: 'ID',\n    EXTERNALID: 'EXTERNAL_ID',\n    EMAIL: 'EMAIL',\n    MOBILE: 'MOBILE'\n};\n\nconst Status = {\n    DRAFT: 'DRAFT',\n    ENTERED: 'ENTERED',\n    READY: 'READY',\n    ACCEPTED: 'ACCEPTED',\n    PROCESSED: 'PROCESSED',\n    REJECTED: 'REJECTED',\n    CANCELLED: 'CANCELLED',\n    CANCELLATIONPENDING: 'CANCELLATION_PENDING',\n    CONFIRMATIONPENDING: 'CONFIRMATION_PENDING',\n    CONFIRMATIONDECLINED: 'CONFIRMATION_DECLINED',\n    REPLACED: 'REPLACED'\n};\n\nconst PAYMENT_ORDER_BASE_PATH = new InjectionToken('PAYMENT_ORDER_BASE_PATH');\nconst COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n};\n\nclass PaymentOrderConfiguration {\n    constructor(configurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n    selectHeaderContentType(contentTypes) {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n        const type = contentTypes.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n    selectHeaderAccept(accepts) {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n        const type = accepts.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n    lookupCredential(key) {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\nconst CONFIG_TOKEN = new InjectionToken('api-data-module PaymentOrderConfiguration');\n\nclass PaymentOrderApiModule {\n    constructor(parentModule, http, dataModulesManager, config) {\n        if (parentModule) {\n            throw new Error('PaymentOrderApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n                'See also https://github.com/angular/angular/issues/20575');\n        }\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n    static forRoot(configurationFactory) {\n        return {\n            ngModule: PaymentOrderApiModule,\n            providers: [{ provide: PaymentOrderConfiguration, useFactory: configurationFactory }]\n        };\n    }\n}\nPaymentOrderApiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentOrderApiModule, deps: [{ token: PaymentOrderApiModule, optional: true, skipSelf: true }, { token: i1.HttpClient, optional: true }, { token: i2.DataModulesManager, optional: true }, { token: PaymentOrderConfiguration }], target: i0.ɵɵFactoryTarget.NgModule });\nPaymentOrderApiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentOrderApiModule });\nPaymentOrderApiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentOrderApiModule, providers: [], imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentOrderApiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [],\n                    exports: [],\n                    providers: []\n                }]\n        }], ctorParameters: function () { return [{ type: PaymentOrderApiModule, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DataModulesManager, decorators: [{\n                    type: Optional\n                }] }, { type: PaymentOrderConfiguration }]; } });\n\nclass CustomHttpParameterCodec {\n    encodeKey(k) {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v) {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k) {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v) {\n        return decodeURIComponent(v);\n    }\n}\n\nclass PaymentOrdersHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new PaymentOrderConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    deletePaymentOrderById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n        if (_paymentOrderId === null || _paymentOrderId === undefined) {\n            throw new Error('Required parameter paymentOrderId was null or undefined when calling deletePaymentOrderById.');\n        }\n        const _version = requestParameters[\"version\"];\n        if (_version === null || _version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling deletePaymentOrderById.');\n        }\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_version !== undefined && _version !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _version, 'version');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deletePaymentOrderByIdUrl(requestParameters) {\n        const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n        if (_paymentOrderId === null || _paymentOrderId === undefined) {\n            throw new Error('Required parameter paymentOrderId was null or undefined when calling deletePaymentOrderById.');\n        }\n        const _version = requestParameters[\"version\"];\n        if (_version === null || _version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling deletePaymentOrderById.');\n        }\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_version !== undefined && _version !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _version, 'version');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}${queryString ? `?${queryString}` : ''}`;\n    }\n    getApprovablePaymentOrders(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_cursor !== undefined && _cursor !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/payment-orders/approvals`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getApprovablePaymentOrdersUrl(requestParameters) {\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_cursor !== undefined && _cursor !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/payment-orders/approvals${queryString ? `?${queryString}` : ''}`;\n    }\n    getCurrencies(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/payment-orders/currencies`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getCurrenciesUrl() {\n        return `${this.configuration.basePath}/client-api/v2/payment-orders/currencies`;\n    }\n    getPaymentOrderById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n        if (_paymentOrderId === null || _paymentOrderId === undefined) {\n            throw new Error('Required parameter paymentOrderId was null or undefined when calling getPaymentOrderById.');\n        }\n        const _userId = requestParameters[\"userId\"];\n        const _saId = requestParameters[\"saId\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_userId !== undefined && _userId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _userId, 'userId');\n        }\n        if (_saId !== undefined && _saId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _saId, 'saId');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getPaymentOrderByIdUrl(requestParameters) {\n        const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n        if (_paymentOrderId === null || _paymentOrderId === undefined) {\n            throw new Error('Required parameter paymentOrderId was null or undefined when calling getPaymentOrderById.');\n        }\n        const _userId = requestParameters[\"userId\"];\n        const _saId = requestParameters[\"saId\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_userId !== undefined && _userId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _userId, 'userId');\n        }\n        if (_saId !== undefined && _saId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _saId, 'saId');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}${queryString ? `?${queryString}` : ''}`;\n    }\n    getPaymentOrderExport(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n        if (_paymentOrderId === null || _paymentOrderId === undefined) {\n            throw new Error('Required parameter paymentOrderId was null or undefined when calling getPaymentOrderExport.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/pdf',\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}/export`, {\n            responseType: \"blob\",\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getPaymentOrderExportUrl(requestParameters) {\n        const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n        if (_paymentOrderId === null || _paymentOrderId === undefined) {\n            throw new Error('Required parameter paymentOrderId was null or undefined when calling getPaymentOrderExport.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}/export`;\n    }\n    getPaymentOrders(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _status = requestParameters[\"status\"];\n        const _paymentTypeGroup = requestParameters[\"paymentTypeGroup\"];\n        const _createdByMe = requestParameters[\"createdByMe\"];\n        const _userId = requestParameters[\"userId\"];\n        const _saId = requestParameters[\"saId\"];\n        const _originatorArrangementId = requestParameters[\"originatorArrangementId\"];\n        const _query = requestParameters[\"query\"];\n        const _amountFrom = requestParameters[\"amountFrom\"];\n        const _amountTo = requestParameters[\"amountTo\"];\n        const _executionDate = requestParameters[\"executionDate\"];\n        const _executionDateFrom = requestParameters[\"executionDateFrom\"];\n        const _executionDateTo = requestParameters[\"executionDateTo\"];\n        const _nextExecutionDate = requestParameters[\"nextExecutionDate\"];\n        const _nextExecutionDateFrom = requestParameters[\"nextExecutionDateFrom\"];\n        const _nextExecutionDateTo = requestParameters[\"nextExecutionDateTo\"];\n        const _paymentMode = requestParameters[\"paymentMode\"];\n        const _paymentSetupId = requestParameters[\"paymentSetupId\"];\n        const _transferFrequency = requestParameters[\"transferFrequency\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_status) {\n            _status.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters, element, 'status');\n            });\n        }\n        if (_paymentTypeGroup !== undefined && _paymentTypeGroup !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _paymentTypeGroup, 'paymentTypeGroup');\n        }\n        if (_createdByMe !== undefined && _createdByMe !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _createdByMe, 'createdByMe');\n        }\n        if (_userId !== undefined && _userId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _userId, 'userId');\n        }\n        if (_saId !== undefined && _saId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _saId, 'saId');\n        }\n        if (_originatorArrangementId !== undefined && _originatorArrangementId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _originatorArrangementId, 'originatorArrangementId');\n        }\n        if (_query !== undefined && _query !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n        }\n        if (_amountFrom !== undefined && _amountFrom !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _amountFrom, 'amountFrom');\n        }\n        if (_amountTo !== undefined && _amountTo !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _amountTo, 'amountTo');\n        }\n        if (_executionDate !== undefined && _executionDate !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _executionDate, 'executionDate');\n        }\n        if (_executionDateFrom !== undefined && _executionDateFrom !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _executionDateFrom, 'executionDateFrom');\n        }\n        if (_executionDateTo !== undefined && _executionDateTo !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _executionDateTo, 'executionDateTo');\n        }\n        if (_nextExecutionDate !== undefined && _nextExecutionDate !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _nextExecutionDate, 'nextExecutionDate');\n        }\n        if (_nextExecutionDateFrom !== undefined && _nextExecutionDateFrom !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _nextExecutionDateFrom, 'nextExecutionDateFrom');\n        }\n        if (_nextExecutionDateTo !== undefined && _nextExecutionDateTo !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _nextExecutionDateTo, 'nextExecutionDateTo');\n        }\n        if (_paymentMode !== undefined && _paymentMode !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _paymentMode, 'paymentMode');\n        }\n        if (_paymentSetupId !== undefined && _paymentSetupId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _paymentSetupId, 'paymentSetupId');\n        }\n        if (_transferFrequency !== undefined && _transferFrequency !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _transferFrequency, 'transferFrequency');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _direction, 'direction');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/payment-orders`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getPaymentOrdersUrl(requestParameters) {\n        const _status = requestParameters[\"status\"];\n        const _paymentTypeGroup = requestParameters[\"paymentTypeGroup\"];\n        const _createdByMe = requestParameters[\"createdByMe\"];\n        const _userId = requestParameters[\"userId\"];\n        const _saId = requestParameters[\"saId\"];\n        const _originatorArrangementId = requestParameters[\"originatorArrangementId\"];\n        const _query = requestParameters[\"query\"];\n        const _amountFrom = requestParameters[\"amountFrom\"];\n        const _amountTo = requestParameters[\"amountTo\"];\n        const _executionDate = requestParameters[\"executionDate\"];\n        const _executionDateFrom = requestParameters[\"executionDateFrom\"];\n        const _executionDateTo = requestParameters[\"executionDateTo\"];\n        const _nextExecutionDate = requestParameters[\"nextExecutionDate\"];\n        const _nextExecutionDateFrom = requestParameters[\"nextExecutionDateFrom\"];\n        const _nextExecutionDateTo = requestParameters[\"nextExecutionDateTo\"];\n        const _paymentMode = requestParameters[\"paymentMode\"];\n        const _paymentSetupId = requestParameters[\"paymentSetupId\"];\n        const _transferFrequency = requestParameters[\"transferFrequency\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_status) {\n            _status.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters, element, 'status');\n            });\n        }\n        if (_paymentTypeGroup !== undefined && _paymentTypeGroup !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _paymentTypeGroup, 'paymentTypeGroup');\n        }\n        if (_createdByMe !== undefined && _createdByMe !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _createdByMe, 'createdByMe');\n        }\n        if (_userId !== undefined && _userId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _userId, 'userId');\n        }\n        if (_saId !== undefined && _saId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _saId, 'saId');\n        }\n        if (_originatorArrangementId !== undefined && _originatorArrangementId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _originatorArrangementId, 'originatorArrangementId');\n        }\n        if (_query !== undefined && _query !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n        }\n        if (_amountFrom !== undefined && _amountFrom !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _amountFrom, 'amountFrom');\n        }\n        if (_amountTo !== undefined && _amountTo !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _amountTo, 'amountTo');\n        }\n        if (_executionDate !== undefined && _executionDate !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _executionDate, 'executionDate');\n        }\n        if (_executionDateFrom !== undefined && _executionDateFrom !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _executionDateFrom, 'executionDateFrom');\n        }\n        if (_executionDateTo !== undefined && _executionDateTo !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _executionDateTo, 'executionDateTo');\n        }\n        if (_nextExecutionDate !== undefined && _nextExecutionDate !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _nextExecutionDate, 'nextExecutionDate');\n        }\n        if (_nextExecutionDateFrom !== undefined && _nextExecutionDateFrom !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _nextExecutionDateFrom, 'nextExecutionDateFrom');\n        }\n        if (_nextExecutionDateTo !== undefined && _nextExecutionDateTo !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _nextExecutionDateTo, 'nextExecutionDateTo');\n        }\n        if (_paymentMode !== undefined && _paymentMode !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _paymentMode, 'paymentMode');\n        }\n        if (_paymentSetupId !== undefined && _paymentSetupId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _paymentSetupId, 'paymentSetupId');\n        }\n        if (_transferFrequency !== undefined && _transferFrequency !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _transferFrequency, 'transferFrequency');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _direction, 'direction');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/payment-orders${queryString ? `?${queryString}` : ''}`;\n    }\n    getProgressStatusByPaymentOrderId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n        if (_paymentOrderId === null || _paymentOrderId === undefined) {\n            throw new Error('Required parameter paymentOrderId was null or undefined when calling getProgressStatusByPaymentOrderId.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}/progress-status`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getProgressStatusByPaymentOrderIdUrl(requestParameters) {\n        const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n        if (_paymentOrderId === null || _paymentOrderId === undefined) {\n            throw new Error('Required parameter paymentOrderId was null or undefined when calling getProgressStatusByPaymentOrderId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}/progress-status`;\n    }\n    getRate(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _currencyFrom = requestParameters[\"currencyFrom\"];\n        if (_currencyFrom === null || _currencyFrom === undefined) {\n            throw new Error('Required parameter currencyFrom was null or undefined when calling getRate.');\n        }\n        const _currencyTo = requestParameters[\"currencyTo\"];\n        if (_currencyTo === null || _currencyTo === undefined) {\n            throw new Error('Required parameter currencyTo was null or undefined when calling getRate.');\n        }\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_currencyFrom !== undefined && _currencyFrom !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _currencyFrom, 'currencyFrom');\n        }\n        if (_currencyTo !== undefined && _currencyTo !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _currencyTo, 'currencyTo');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/payment-orders/rate`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getRateUrl(requestParameters) {\n        const _currencyFrom = requestParameters[\"currencyFrom\"];\n        if (_currencyFrom === null || _currencyFrom === undefined) {\n            throw new Error('Required parameter currencyFrom was null or undefined when calling getRate.');\n        }\n        const _currencyTo = requestParameters[\"currencyTo\"];\n        if (_currencyTo === null || _currencyTo === undefined) {\n            throw new Error('Required parameter currencyTo was null or undefined when calling getRate.');\n        }\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_currencyFrom !== undefined && _currencyFrom !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _currencyFrom, 'currencyFrom');\n        }\n        if (_currencyTo !== undefined && _currencyTo !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _currencyTo, 'currencyTo');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/payment-orders/rate${queryString ? `?${queryString}` : ''}`;\n    }\n    postCancelByPaymentOrderId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n        if (_paymentOrderId === null || _paymentOrderId === undefined) {\n            throw new Error('Required parameter paymentOrderId was null or undefined when calling postCancelByPaymentOrderId.');\n        }\n        const _paymentOrderCancelPostRequest = requestParameters[\"paymentOrderCancelPostRequest\"];\n        if (_paymentOrderCancelPostRequest === null || _paymentOrderCancelPostRequest === undefined) {\n            throw new Error('Required parameter paymentOrderCancelPostRequest was null or undefined when calling postCancelByPaymentOrderId.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}/cancel`, _paymentOrderCancelPostRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postCancelByPaymentOrderIdUrl(requestParameters) {\n        const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n        if (_paymentOrderId === null || _paymentOrderId === undefined) {\n            throw new Error('Required parameter paymentOrderId was null or undefined when calling postCancelByPaymentOrderId.');\n        }\n        const _paymentOrderCancelPostRequest = requestParameters[\"paymentOrderCancelPostRequest\"];\n        if (_paymentOrderCancelPostRequest === null || _paymentOrderCancelPostRequest === undefined) {\n            throw new Error('Required parameter paymentOrderCancelPostRequest was null or undefined when calling postCancelByPaymentOrderId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}/cancel`;\n    }\n    postPaymentOrders(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _paymentOrdersPost = requestParameters[\"paymentOrdersPost\"];\n        if (_paymentOrdersPost === null || _paymentOrdersPost === undefined) {\n            throw new Error('Required parameter paymentOrdersPost was null or undefined when calling postPaymentOrders.');\n        }\n        const _xMFA = requestParameters[\"xMFA\"];\n        let headers = this.defaultHeaders;\n        if (_xMFA !== undefined && _xMFA !== null) {\n            headers = headers.set('X-MFA', String(_xMFA));\n        }\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/payment-orders`, _paymentOrdersPost, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postPaymentOrdersUrl(requestParameters) {\n        const _paymentOrdersPost = requestParameters[\"paymentOrdersPost\"];\n        if (_paymentOrdersPost === null || _paymentOrdersPost === undefined) {\n            throw new Error('Required parameter paymentOrdersPost was null or undefined when calling postPaymentOrders.');\n        }\n        const _xMFA = requestParameters[\"xMFA\"];\n        return `${this.configuration.basePath}/client-api/v2/payment-orders`;\n    }\n    postValidate(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _paymentOrdersValidatePost = requestParameters[\"paymentOrdersValidatePost\"];\n        if (_paymentOrdersValidatePost === null || _paymentOrdersValidatePost === undefined) {\n            throw new Error('Required parameter paymentOrdersValidatePost was null or undefined when calling postValidate.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/payment-orders/validate`, _paymentOrdersValidatePost, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postValidateUrl(requestParameters) {\n        const _paymentOrdersValidatePost = requestParameters[\"paymentOrdersValidatePost\"];\n        if (_paymentOrdersValidatePost === null || _paymentOrdersValidatePost === undefined) {\n            throw new Error('Required parameter paymentOrdersValidatePost was null or undefined when calling postValidate.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/payment-orders/validate`;\n    }\n    putApprovalsByPaymentOrderId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n        if (_paymentOrderId === null || _paymentOrderId === undefined) {\n            throw new Error('Required parameter paymentOrderId was null or undefined when calling putApprovalsByPaymentOrderId.');\n        }\n        const _paymentOrderApprovalPutRequest = requestParameters[\"paymentOrderApprovalPutRequest\"];\n        if (_paymentOrderApprovalPutRequest === null || _paymentOrderApprovalPutRequest === undefined) {\n            throw new Error('Required parameter paymentOrderApprovalPutRequest was null or undefined when calling putApprovalsByPaymentOrderId.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}/approvals`, _paymentOrderApprovalPutRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putApprovalsByPaymentOrderIdUrl(requestParameters) {\n        const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n        if (_paymentOrderId === null || _paymentOrderId === undefined) {\n            throw new Error('Required parameter paymentOrderId was null or undefined when calling putApprovalsByPaymentOrderId.');\n        }\n        const _paymentOrderApprovalPutRequest = requestParameters[\"paymentOrderApprovalPutRequest\"];\n        if (_paymentOrderApprovalPutRequest === null || _paymentOrderApprovalPutRequest === undefined) {\n            throw new Error('Required parameter paymentOrderApprovalPutRequest was null or undefined when calling putApprovalsByPaymentOrderId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}/approvals`;\n    }\n    putBulkApprovals(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _bulkPaymentOrdersApprovalPutRequest = requestParameters[\"bulkPaymentOrdersApprovalPutRequest\"];\n        if (_bulkPaymentOrdersApprovalPutRequest === null || _bulkPaymentOrdersApprovalPutRequest === undefined) {\n            throw new Error('Required parameter bulkPaymentOrdersApprovalPutRequest was null or undefined when calling putBulkApprovals.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/payment-orders/bulk-approvals`, _bulkPaymentOrdersApprovalPutRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putBulkApprovalsUrl(requestParameters) {\n        const _bulkPaymentOrdersApprovalPutRequest = requestParameters[\"bulkPaymentOrdersApprovalPutRequest\"];\n        if (_bulkPaymentOrdersApprovalPutRequest === null || _bulkPaymentOrdersApprovalPutRequest === undefined) {\n            throw new Error('Required parameter bulkPaymentOrdersApprovalPutRequest was null or undefined when calling putBulkApprovals.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/payment-orders/bulk-approvals`;\n    }\n    putPaymentOrderById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n        if (_paymentOrderId === null || _paymentOrderId === undefined) {\n            throw new Error('Required parameter paymentOrderId was null or undefined when calling putPaymentOrderById.');\n        }\n        const _paymentOrderPut = requestParameters[\"paymentOrderPut\"];\n        if (_paymentOrderPut === null || _paymentOrderPut === undefined) {\n            throw new Error('Required parameter paymentOrderPut was null or undefined when calling putPaymentOrderById.');\n        }\n        const _xMFA = requestParameters[\"xMFA\"];\n        let headers = this.defaultHeaders;\n        if (_xMFA !== undefined && _xMFA !== null) {\n            headers = headers.set('X-MFA', String(_xMFA));\n        }\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}`, _paymentOrderPut, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putPaymentOrderByIdUrl(requestParameters) {\n        const _paymentOrderId = requestParameters[\"paymentOrderId\"];\n        if (_paymentOrderId === null || _paymentOrderId === undefined) {\n            throw new Error('Required parameter paymentOrderId was null or undefined when calling putPaymentOrderById.');\n        }\n        const _paymentOrderPut = requestParameters[\"paymentOrderPut\"];\n        if (_paymentOrderPut === null || _paymentOrderPut === undefined) {\n            throw new Error('Required parameter paymentOrderPut was null or undefined when calling putPaymentOrderById.');\n        }\n        const _xMFA = requestParameters[\"xMFA\"];\n        return `${this.configuration.basePath}/client-api/v2/payment-orders/${encodeURIComponent(String(_paymentOrderId))}`;\n    }\n}\nPaymentOrdersHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentOrdersHttpService, deps: [{ token: i1.HttpClient }, { token: PAYMENT_ORDER_BASE_PATH, optional: true }, { token: PaymentOrderConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nPaymentOrdersHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentOrdersHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentOrdersHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [PAYMENT_ORDER_BASE_PATH]\n                }] }, { type: PaymentOrderConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst PaymentOrdersHttpServiceDeletePaymentOrderByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PaymentOrdersHttpServiceGetApprovablePaymentOrdersMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-orders/approvals\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"id\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n                        \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"name\": \"Smith Bonus Savings\",\n                            \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n                            \"externalArrangementId\": \"a3f8defe-f447-4475-b5c1-d3971ec7a273\",\n                            \"identification\": {\n                                \"identification\": \"NL81TRIO0212471066\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Smith Bonus Savings\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                            }\n                        },\n                        \"batchBooking\": false,\n                        \"instructionPriority\": \"HIGH\",\n                        \"requestedExecutionDate\": \"2018-08-16\",\n                        \"paymentMode\": \"SINGLE\",\n                        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                        \"transferTransactionInformation\": {\n                            \"instructedAmount\": {\n                                \"amount\": \"749.99\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"MR1300020001010000123456753\",\n                                    \"schemeName\": \"IBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                \"externalArrangementId\": \"9669274787995385962\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"John Smith\"\n                            }\n                        },\n                        \"actions\": [\"APPROVE\", \"FINAL_APPROVE\", \"REJECT\"],\n                        \"permissibleActions\": {\n                            \"approve\": true,\n                            \"finalApprove\": true,\n                            \"reject\": true,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": false,\n                            \"create\": true,\n                            \"export\": false\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"version\": 1\n                    }, {\n                        \"id\": \"06db9298-189b-11e8-accf-0ed5f89f718b\",\n                        \"approvalId\": \"11863018-189b-11e8-accf-0ed5f89f718b\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"name\": \"John Doe\",\n                            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                            \"identification\": {\n                                \"identification\": \"0260-0959-3\",\n                                \"schemeName\": \"BBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"John Doe\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"228 Park Ave S\",\n                                \"town\": \"New York\"\n                            }\n                        },\n                        \"batchBooking\": false,\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2017-08-12\",\n                        \"paymentMode\": \"RECURRING\",\n                        \"paymentType\": \"US_FOREIGN_WIRE\",\n                        \"schedule\": {\n                            \"transferFrequency\": \"MONTHLY\",\n                            \"on\": 1,\n                            \"startDate\": \"2017-08-12\",\n                            \"every\": \"1\",\n                            \"nextExecutionDate\": \"2017-09-12\",\n                            \"endDate\": \"2018-05-12\"\n                        },\n                        \"transferTransactionInformation\": {\n                            \"endToEndIdentification\": \"TRNSCT REF 1234567890\",\n                            \"instructedAmount\": {\n                                \"amount\": \"104.66\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"NL91 ABNA 0417 1643 00\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Jack Brown\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"2589 Peaceful Lane\",\n                                    \"postCode\": \"44128\",\n                                    \"town\": \"Warrensville Heights\",\n                                    \"country\": \"US\"\n                                }\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"UNSTRUCTURED\",\n                                \"content\": \"Unstructured content\"\n                            },\n                            \"counterpartyBank\": {\n                                \"bankBranchCode\": \"082000549\",\n                                \"name\": \"Morgan Chase\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"4789 Vernon Street\",\n                                    \"postCode\": \"92028\",\n                                    \"town\": \"Fallbrook\",\n                                    \"country\": \"US\"\n                                }\n                            },\n                            \"correspondentBank\": {\n                                \"bankBranchCode\": \"122105155\",\n                                \"name\": \"Bank of America\"\n                            },\n                            \"intermediaryBank\": {\n                                \"bic\": \"DABAIE2D\",\n                                \"bankBranchCode\": \"102000021\",\n                                \"name\": \"SNSB\"\n                            },\n                            \"messageToBank\": \"My us international wire payment explanation.\",\n                            \"targetCurrency\": \"EUR\"\n                        },\n                        \"actions\": [\"APPROVE\", \"REJECT\"],\n                        \"permissibleActions\": {\n                            \"approve\": true,\n                            \"finalApprove\": false,\n                            \"reject\": true,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": false,\n                            \"create\": true,\n                            \"export\": false\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"version\": 42\n                    }, {\n                        \"id\": \"fa088818-623a-4260-bc46-1ff678de8dae\",\n                        \"approvalId\": \"8605dc85-726c-4795-9b55-ff698ad2d1e4\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"name\": \"Mr John Usmith\",\n                            \"arrangementId\": \"07642680-2b6f-11e8-b467-0ed5f89f718b\",\n                            \"identification\": {\n                                \"identification\": \"00400440116243\",\n                                \"schemeName\": \"BBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Mr John Usmith\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, New York\"\n                            }\n                        },\n                        \"instructionPriority\": \"HIGH\",\n                        \"requestedExecutionDate\": \"2018-08-16\",\n                        \"paymentMode\": \"SINGLE\",\n                        \"paymentType\": \"INTERNAL\",\n                        \"transferTransactionInformation\": {\n                            \"instructedAmount\": {\n                                \"amount\": \"749.99\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"accountType\": \"SAVINGS\",\n                                \"identification\": {\n                                    \"identification\": \"3242342348899\",\n                                    \"schemeName\": \"BBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"John Doe\"\n                            }\n                        },\n                        \"actions\": [\"APPROVE\", \"REJECT\", \"EDIT\"],\n                        \"permissibleActions\": {\n                            \"approve\": true,\n                            \"finalApprove\": false,\n                            \"reject\": true,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": true,\n                            \"create\": true,\n                            \"export\": false\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"version\": 1\n                    }]\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PaymentOrdersHttpServiceGetCurrenciesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-orders/currencies\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"code\": \"EUR\"\n                    }, {\n                        \"code\": \"USD\"\n                    }, {\n                        \"code\": \"GBP\"\n                    }, {\n                        \"code\": \"ISK\"\n                    }, {\n                        \"code\": \"KWD\"\n                    }]\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PaymentOrdersHttpServiceGetPaymentOrderByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                    \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                    \"status\": \"ACCEPTED\",\n                    \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n                    \"reasonCode\": \"AC01\",\n                    \"reasonText\": \"Accepted by bank\",\n                    \"originatorAccount\": {\n                        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"externalArrangementId\": \"729190421493794513132\",\n                        \"identification\": {\n                            \"identification\": \"NL53RABO0309349755\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"instructionPriority\": \"NORM\",\n                    \"requestedExecutionDate\": \"2017-07-16\",\n                    \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                    \"transferTransactionInformation\": {\n                        \"instructedAmount\": {\n                            \"amount\": \"5000.55\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"counterpartyAccount\": {\n                            \"identification\": {\n                                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                \"schemeName\": \"IBAN\"\n                            },\n                            \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                            \"externalArrangementId\": \"9669274787995385962\"\n                        },\n                        \"counterparty\": {\n                            \"name\": \"Backbase\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                \"country\": \"NL\"\n                            }\n                        },\n                        \"remittanceInformation\": {\n                            \"type\": \"UNSTRUCTURED\",\n                            \"content\": \"Return a debt\"\n                        }\n                    },\n                    \"actions\": [\"EDIT\"],\n                    \"permissibleActions\": {\n                        \"approve\": false,\n                        \"finalApprove\": false,\n                        \"reject\": false,\n                        \"cancel\": false,\n                        \"delete\": false,\n                        \"edit\": true,\n                        \"create\": true,\n                        \"export\": true\n                    },\n                    \"createdBy\": \"U00243\",\n                    \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                    \"contextualInformation\": {\n                        \"externalUserId\": \"b3e4692d-6772-4fb2-9446-132435465768\",\n                        \"internalUserId\": \"b3e4692d-6772-4fb2-9446-374857684932\",\n                        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                        \"legalEntityId\": \"27263171-94d5-4d82-975c-61d8c41644d0\",\n                        \"origin\": \"actions\"\n                    },\n                    \"originatorAccountCurrency\": \"EUR\",\n                    \"version\": 1\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                    \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                    \"status\": \"ACCEPTED\",\n                    \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n                    \"reasonCode\": \"AC01\",\n                    \"reasonText\": \"Accepted by bank\",\n                    \"originatorAccount\": {\n                        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"externalArrangementId\": \"729190421493794513132\",\n                        \"identification\": {\n                            \"identification\": \"NL53RABO0309349755\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"instructionPriority\": \"NORM\",\n                    \"requestedExecutionDate\": \"2021-07-01\",\n                    \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                    \"transferTransactionInformation\": {\n                        \"instructedAmount\": {\n                            \"amount\": \"5000.55\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"counterpartyAccount\": {\n                            \"identification\": {\n                                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                \"schemeName\": \"IBAN\"\n                            },\n                            \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                            \"externalArrangementId\": \"9669274787995385962\"\n                        },\n                        \"counterparty\": {\n                            \"name\": \"Backbase\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                \"country\": \"NL\"\n                            }\n                        },\n                        \"remittanceInformation\": {\n                            \"type\": \"UNSTRUCTURED\",\n                            \"content\": \"Return a debt\"\n                        }\n                    },\n                    \"actions\": [\"EDIT\"],\n                    \"permissibleActions\": {\n                        \"approve\": false,\n                        \"finalApprove\": false,\n                        \"reject\": false,\n                        \"cancel\": false,\n                        \"delete\": false,\n                        \"edit\": true,\n                        \"create\": true,\n                        \"export\": true\n                    },\n                    \"createdBy\": \"U00243\",\n                    \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                    \"contextualInformation\": {\n                        \"externalUserId\": \"b3e4692d-6772-4fb2-9446-132435465768\",\n                        \"internalUserId\": \"b3e4692d-6772-4fb2-9446-374857684932\",\n                        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                        \"legalEntityId\": \"27263171-94d5-4d82-975c-61d8c41644d0\",\n                        \"origin\": \"actions\"\n                    },\n                    \"originatorAccountCurrency\": \"EUR\",\n                    \"edited\": true,\n                    \"editedPaymentOrder\": {\n                        \"id\": \"df341c28-6714-11e7-907b-a6006ad3asa0\",\n                        \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93df4ce\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                            \"externalArrangementId\": \"729190421493794513132\",\n                            \"identification\": {\n                                \"identification\": \"NL53RABO0309349755\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2021-07-01\",\n                        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                        \"transferTransactionInformation\": {\n                            \"instructedAmount\": {\n                                \"amount\": \"6000\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                    \"schemeName\": \"IBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                \"externalArrangementId\": \"9669274787995385962\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Backbase\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                    \"country\": \"NL\"\n                                }\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"UNSTRUCTURED\",\n                                \"content\": \"Return a debt\"\n                            }\n                        },\n                        \"actions\": [\"EDIT\"],\n                        \"permissibleActions\": {\n                            \"approve\": false,\n                            \"finalApprove\": false,\n                            \"reject\": false,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": true,\n                            \"create\": true\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T15:33:13.452Z\",\n                        \"contextualInformation\": {\n                            \"externalUserId\": \"b3e4692d-6772-4fb2-9446-132435465768\",\n                            \"internalUserId\": \"b3e4692d-6772-4fb2-9446-374857684932\",\n                            \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                            \"legalEntityId\": \"27263171-94d5-4d82-975c-61d8c41644d0\",\n                            \"origin\": \"actions\"\n                        },\n                        \"originatorAccountCurrency\": \"EUR\",\n                        \"edited\": false,\n                        \"version\": 1\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                    \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                    \"status\": \"ENTERED\",\n                    \"originatorAccount\": {\n                        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"externalArrangementId\": \"729190421493794513132\",\n                        \"identification\": {\n                            \"identification\": \"NL53RABO0309349755\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"instructionPriority\": \"NORM\",\n                    \"requestedExecutionDate\": \"2018-07-22\",\n                    \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                    \"transferTransactionInformation\": {\n                        \"instructedAmount\": {\n                            \"amount\": \"5000.55\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"counterpartyAccount\": {\n                            \"identification\": {\n                                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                \"schemeName\": \"IBAN\"\n                            },\n                            \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                            \"externalArrangementId\": \"9669274787995385962\"\n                        },\n                        \"counterparty\": {\n                            \"name\": \"Backbase\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                \"country\": \"NL\"\n                            }\n                        },\n                        \"remittanceInformation\": {\n                            \"type\": \"UNSTRUCTURED\",\n                            \"content\": \"Return a debt\"\n                        }\n                    },\n                    \"version\": 1,\n                    \"actions\": [],\n                    \"createdBy\": \"U00243\",\n                    \"createdAt\": \"2018-07-22T13:44:02Z\",\n                    \"originatorAccountCurrency\": \"EUR\",\n                    \"approvalDetails\": {\n                        \"id\": \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n                        \"userId\": \"b3e4692d-6772-4fb2-9446-bebebebebebe\",\n                        \"externalUserId\": \"davyJones88\",\n                        \"userFullName\": \"Davy Jones\",\n                        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                        \"itemId\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"dataAccessItemId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"resource\": \"Payments\",\n                        \"function\": \"SEPA_CREDIT_TRANSFER\",\n                        \"status\": \"PENDING\",\n                        \"createdAt\": \"2018-07-22T13:44:02Z\",\n                        \"records\": [{\n                                \"id\": \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n                                \"userId\": \"b3e4692d-6772-4fb2-9446-babababababa\",\n                                \"externalUserId\": \"flying-dutchman\",\n                                \"userFullName\": \"Jack Sparrow\",\n                                \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                \"status\": \"APPROVED\",\n                                \"createdAt\": \"2018-07-22T13:44:02Z\"\n                            }],\n                        \"approvalTypes\": [{\n                                \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                \"name\": \"A\",\n                                \"description\": \"1st approval\",\n                                \"rank\": 100\n                            }, {\n                                \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n                                \"name\": \"B\",\n                                \"description\": \"2nd approval\",\n                                \"rank\": 101\n                            }],\n                        \"policy\": {\n                            \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n                            \"name\": \"Default policy\",\n                            \"description\": \"A default policy that requires two approvals of different types: A + B\",\n                            \"items\": [{\n                                    \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                    \"numberOfApprovals\": 1\n                                }, {\n                                    \"approvalTypeId\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n                                    \"numberOfApprovals\": 1\n                                }]\n                        },\n                        \"canApprove\": false,\n                        \"canReject\": false,\n                        \"finalApprover\": false\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                    \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                    \"status\": \"ENTERED\",\n                    \"originatorAccount\": {\n                        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"externalArrangementId\": \"729190421493794513132\",\n                        \"identification\": {\n                            \"identification\": \"NL53RABO0309349755\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"instructionPriority\": \"NORM\",\n                    \"requestedExecutionDate\": \"2018-07-22\",\n                    \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                    \"transferTransactionInformation\": {\n                        \"instructedAmount\": {\n                            \"amount\": \"5000.55\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"counterpartyAccount\": {\n                            \"identification\": {\n                                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                \"schemeName\": \"IBAN\"\n                            },\n                            \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                            \"externalArrangementId\": \"9669274787995385962\"\n                        },\n                        \"counterparty\": {\n                            \"name\": \"Backbase\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                \"country\": \"NL\"\n                            }\n                        },\n                        \"remittanceInformation\": {\n                            \"type\": \"UNSTRUCTURED\",\n                            \"content\": \"Return a debt\"\n                        }\n                    },\n                    \"version\": 1,\n                    \"actions\": [],\n                    \"createdBy\": \"U00243\",\n                    \"createdAt\": \"2018-07-22T13:44:02Z\",\n                    \"originatorAccountCurrency\": \"EUR\",\n                    \"approvalDetails\": {\n                        \"id\": \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n                        \"userId\": \"b3e4692d-6772-4fb2-9446-bebebebebebe\",\n                        \"externalUserId\": \"davyJones88\",\n                        \"userFullName\": \"Davy Jones\",\n                        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                        \"itemId\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"dataAccessItemId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"resource\": \"Payments\",\n                        \"function\": \"SEPA_CREDIT_TRANSFER\",\n                        \"status\": \"PENDING\",\n                        \"createdAt\": \"2018-07-22T13:44:02Z\",\n                        \"records\": [{\n                                \"id\": \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n                                \"userId\": \"b3e4692d-6772-4fb2-9446-babababababa\",\n                                \"externalUserId\": \"flying-dutchman\",\n                                \"userFullName\": \"Jack Sparrow\",\n                                \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                \"status\": \"APPROVED\",\n                                \"createdAt\": \"2018-07-22T13:44:02Z\"\n                            }],\n                        \"approvalTypes\": [{\n                                \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                \"name\": \"A\",\n                                \"description\": \"1st approval\",\n                                \"rank\": 100\n                            }, {\n                                \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n                                \"name\": \"B\",\n                                \"description\": \"2nd approval\",\n                                \"rank\": 101\n                            }],\n                        \"policy\": {\n                            \"id\": \"8ac202da-273b-4d2b-8aa6-c12f9d9fa736\",\n                            \"name\": \"Or policy\",\n                            \"description\": \"A policy that requires A OR B approvals\",\n                            \"logicalItems\": [{\n                                    \"rank\": 1,\n                                    \"operator\": \"OR\",\n                                    \"items\": [{\n                                            \"approvalType\": {\n                                                \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                                \"name\": \"A\",\n                                                \"description\": \"Or A approval\",\n                                                \"rank\": 100\n                                            },\n                                            \"numberOfApprovals\": 1\n                                        }, {\n                                            \"approvalType\": {\n                                                \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n                                                \"name\": \"B\",\n                                                \"description\": \"Or B approval\",\n                                                \"rank\": 101\n                                            },\n                                            \"numberOfApprovals\": 1\n                                        }]\n                                }]\n                        },\n                        \"canApprove\": false,\n                        \"canReject\": false,\n                        \"finalApprover\": false\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                    \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                    \"status\": \"ACCEPTED\",\n                    \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n                    \"reasonCode\": \"AC01\",\n                    \"reasonText\": \"Accepted by bank\",\n                    \"originatorAccount\": {\n                        \"identification\": {\n                            \"identification\": \"8a48e08c60daa5940160dac699050088\",\n                            \"schemeName\": \"ID\"\n                        }\n                    },\n                    \"requestedExecutionDate\": \"2021-02-15\",\n                    \"paymentType\": \"INTERNATIONAL_TRANSFER\",\n                    \"transferTransactionInformation\": {\n                        \"instructedAmount\": {\n                            \"amount\": \"100\",\n                            \"currencyCode\": \"INR\"\n                        },\n                        \"counterparty\": {\n                            \"name\": \"John Doe\"\n                        },\n                        \"counterpartyAccount\": {\n                            \"identification\": {\n                                \"identification\": \"4902331374\",\n                                \"schemeName\": \"BBAN\"\n                            }\n                        },\n                        \"counterpartyBank\": {\n                            \"bankBranchCode\": \"IDIA000A001\",\n                            \"bic\": \"IBKLINBBXXR\",\n                            \"name\": \"IDBA BANK\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"FINANCIAL PLAZA INDIA\",\n                                \"country\": \"IN\"\n                            }\n                        },\n                        \"correspondentBank\": {\n                            \"bankBranchCode\": \"011000015\",\n                            \"name\": \"FEDERAL RESERVE BANK\"\n                        },\n                        \"intermediaryBank\": {\n                            \"bankBranchCode\": \"122105155\",\n                            \"name\": \"SNSB2886803298\"\n                        },\n                        \"messageToBank\": \"My international payment explanation.\",\n                        \"chargeBearer\": \"SHA\",\n                        \"exchangeRateInformation\": {\n                            \"currencyCode\": \"INR\",\n                            \"rate\": \"89.00\",\n                            \"rateType\": \"AGREED\",\n                            \"contractIdentification\": \"/tbill/2018/T102993\"\n                        },\n                        \"transferFee\": {\n                            \"amount\": \"15\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"purposeOfPayment\": {\n                            \"code\": \"P1004\",\n                            \"description\": \"Legal services\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PaymentOrdersHttpServiceGetPaymentOrderExportMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}/export\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PaymentOrdersHttpServiceGetPaymentOrdersMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-orders\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"id\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n                        \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n                            \"externalArrangementId\": \"a3f8defe-f447-4475-b5c1-d3971ec7a273\",\n                            \"identification\": {\n                                \"identification\": \"NL81TRIO0212471066\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Smith Bonus Savings\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                            }\n                        },\n                        \"instructionPriority\": \"HIGH\",\n                        \"requestedExecutionDate\": \"2018-08-16\",\n                        \"paymentMode\": \"SINGLE\",\n                        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                        \"transferTransactionInformation\": {\n                            \"endToEndIdentification\": \"Some reference\",\n                            \"instructedAmount\": {\n                                \"amount\": \"749.99\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"MR1300020001010000123456753\",\n                                    \"schemeName\": \"IBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                \"externalArrangementId\": \"9669274787995385962\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"John Smith\"\n                            }\n                        },\n                        \"actions\": [\"APPROVE\", \"FINAL_APPROVE\", \"REJECT\"],\n                        \"permissibleActions\": {\n                            \"approve\": true,\n                            \"finalApprove\": true,\n                            \"reject\": true,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": false,\n                            \"create\": true\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"edited\": true,\n                        \"version\": 1\n                    }, {\n                        \"id\": \"0d0b6350-0ff9-11e8-b642-0ed5f89f718b\",\n                        \"approvalId\": \"518bbd4a-0ff9-11e8-b642-0ed5f89f718b\",\n                        \"status\": \"PROCESSED\",\n                        \"bankStatus\": \"FINISHED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                            \"externalArrangementId\": \"729190421493794513132\",\n                            \"identification\": {\n                                \"identification\": \"NL18INGB0664923638\",\n                                \"schemeName\": \"IBAN\"\n                            },\n                            \"name\": \"Credit Account\"\n                        },\n                        \"originator\": {\n                            \"name\": \"Random Account\",\n                            \"postalAddress\": {\n                                \"country\": \"NL\"\n                            }\n                        },\n                        \"batchBooking\": true,\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2018-08-11\",\n                        \"paymentMode\": \"RECURRING\",\n                        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                        \"schedule\": {\n                            \"transferFrequency\": \"MONTHLY\",\n                            \"on\": 1,\n                            \"startDate\": \"2017-08-12\",\n                            \"every\": \"1\",\n                            \"nextExecutionDate\": \"2018-08-15\",\n                            \"endDate\": \"2018-05-12\"\n                        },\n                        \"transferTransactionInformation\": {\n                            \"instructedAmount\": {\n                                \"amount\": \"100.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"NO9386011117947\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Jack Yellow\"\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"STRUCTURED\",\n                                \"content\": \"<some-xml-tags>structured content with XML</some-xml-tags>\"\n                            }\n                        },\n                        \"actions\": [\"EDIT\"],\n                        \"permissibleActions\": {\n                            \"approve\": false,\n                            \"finalApprove\": false,\n                            \"reject\": false,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": true,\n                            \"create\": true,\n                            \"export\": true\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"edited\": false,\n                        \"version\": 1\n                    }, {\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"approvalId\": \"c383c69f-38bf-4e3e-ad3f-5f58cf971bb1\",\n                        \"status\": \"REJECTED\",\n                        \"bankStatus\": \"ACCOUNT_BLOCKED\",\n                        \"reasonCode\": \"AB01\",\n                        \"reasonText\": \"Account blocked\",\n                        \"errorDescription\": \"Blocked by bank.\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n                            \"externalArrangementId\": \"bcf10f4d-4b2f-4413-9bab-31ff693608b5\",\n                            \"identification\": {\n                                \"identification\": \"FR188388353832IH3CAWFYXAA36\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Mr and Mrs J. Smith\"\n                        },\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2018-07-16\",\n                        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                        \"transferTransactionInformation\": {\n                            \"instructedAmount\": {\n                                \"amount\": \"5000.55\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"LT121000011101001000\",\n                                    \"schemeName\": \"IBAN\"\n                                },\n                                \"name\": \"ABN Amro\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Backbase\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                    \"country\": \"NL\"\n                                }\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"UNSTRUCTURED\",\n                                \"content\": \"Return a debt\"\n                            }\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"edited\": false,\n                        \"version\": 1\n                    }, {\n                        \"id\": \"7d34215a-6714-11e7-907b-a6006ad3dba0\",\n                        \"approvalId\": \"ae01c614-d473-48d6-af7d-f516292b39cb\",\n                        \"status\": \"ACCEPTED\",\n                        \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n                        \"reasonCode\": \"AC01\",\n                        \"reasonText\": \"Accepted by bank\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n                            \"externalArrangementId\": \"a3f8defe-f447-4475-b5c1-d3971ec7a273\",\n                            \"identification\": {\n                                \"identification\": \"NL81TRIO0212471066\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Smith Bonus Savings\"\n                        },\n                        \"batchBooking\": false,\n                        \"requestedExecutionDate\": \"2018-07-23\",\n                        \"paymentMode\": \"SINGLE\",\n                        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                        \"transferTransactionInformation\": {\n                            \"endToEndIdentification\": \"Some reference\",\n                            \"instructedAmount\": {\n                                \"amount\": \"749.99\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"LI21088100002324013AA\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Delivery Service\"\n                            }\n                        },\n                        \"actions\": [\"APPROVE\", \"REJECT\"],\n                        \"permissibleActions\": {\n                            \"approve\": true,\n                            \"finalApprove\": false,\n                            \"reject\": true,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": false,\n                            \"create\": true\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"version\": 1\n                    }, {\n                        \"id\": \"7d342c15-6714-11e7-907b-a6006ad3dba0\",\n                        \"approvalId\": \"ae01a624-d473-48d6-af7d-f516292b39cb\",\n                        \"status\": \"ACCEPTED\",\n                        \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n                        \"reasonCode\": \"AC01\",\n                        \"reasonText\": \"Accepted by bank\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n                            \"externalArrangementId\": \"bcf10f4d-4b2f-4413-9bab-31ff693608b5\",\n                            \"identification\": {\n                                \"identification\": \"FR188388353832IH3CAWFYXAA36\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Mr and Mrs J. Smith\"\n                        },\n                        \"batchBooking\": false,\n                        \"requestedExecutionDate\": \"2018-06-12\",\n                        \"paymentMode\": \"SINGLE\",\n                        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                        \"transferTransactionInformation\": {\n                            \"endToEndIdentification\": \"Some reference\",\n                            \"instructedAmount\": {\n                                \"amount\": \"99.99\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"MR1300020001010000123456753\",\n                                    \"schemeName\": \"IBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                \"externalArrangementId\": \"9669274787995385962\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"John Smith\"\n                            }\n                        },\n                        \"actions\": [\"APPROVE\", \"REJECT\"],\n                        \"permissibleActions\": {\n                            \"approve\": true,\n                            \"finalApprove\": false,\n                            \"reject\": true,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": false,\n                            \"create\": true\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"edited\": false,\n                        \"version\": 1\n                    }, {\n                        \"id\": \"7d341a2a-6714-11e7-907b-a6006ad3dba0\",\n                        \"approvalId\": \"264b69e4-3df0-49c1-8cda-e2bb437461e8\",\n                        \"status\": \"ACCEPTED\",\n                        \"bankStatus\": \"FINISHED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n                            \"externalArrangementId\": \"bcf10f4d-4b2f-4413-9bab-31ff693608b5\",\n                            \"identification\": {\n                                \"identification\": \"FR188388353832IH3CAWFYXAA36\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Mr and Mrs J. Smith\"\n                        },\n                        \"batchBooking\": true,\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2018-08-11\",\n                        \"paymentMode\": \"RECURRING\",\n                        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                        \"schedule\": {\n                            \"transferFrequency\": \"MONTHLY\",\n                            \"on\": 1,\n                            \"startDate\": \"2017-08-12\",\n                            \"every\": \"1\",\n                            \"nextExecutionDate\": \"2018-08-15\",\n                            \"endDate\": \"2018-05-12\"\n                        },\n                        \"transferTransactionInformation\": {\n                            \"instructedAmount\": {\n                                \"amount\": \"133.33\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"NO9386011117947\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Jack Yellow\"\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"STRUCTURED\",\n                                \"content\": \"<some-xml-tags>structured content with XML</some-xml-tags>\"\n                            }\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"edited\": false,\n                        \"version\": 9312\n                    }, {\n                        \"id\": \"5cea81b2-0ff9-11e8-b642-0ed5f89f718b\",\n                        \"approvalId\": \"61624e82-0ff9-11e8-b642-0ed5f89f718b\",\n                        \"status\": \"ACCEPTED\",\n                        \"bankStatus\": \"FINISHED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n                            \"externalArrangementId\": \"a3f8defe-f447-4475-b5c1-d3971ec7a273\",\n                            \"identification\": {\n                                \"identification\": \"NL81TRIO0212471066\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Smith Bonus Savings\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                            }\n                        },\n                        \"batchBooking\": true,\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2018-08-11\",\n                        \"paymentMode\": \"RECURRING\",\n                        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                        \"schedule\": {\n                            \"transferFrequency\": \"MONTHLY\",\n                            \"on\": 1,\n                            \"startDate\": \"2017-08-12\",\n                            \"every\": \"1\",\n                            \"nextExecutionDate\": \"2018-08-15\",\n                            \"endDate\": \"2018-05-12\"\n                        },\n                        \"transferTransactionInformation\": {\n                            \"instructedAmount\": {\n                                \"amount\": \"166.66\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"HU42117730161111101800000000\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Jack Brown\"\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"STRUCTURED\",\n                                \"content\": \"<some-xml-tags>structured content with XML</some-xml-tags>\"\n                            }\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"version\": 42,\n                        \"edited\": false,\n                        \"originatingAccountCurrency\": \"EUR\"\n                    }, {\n                        \"id\": \"06db9298-189b-11e8-accf-0ed5f89f718b\",\n                        \"approvalId\": \"11863018-189b-11e8-accf-0ed5f89f718b\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                            \"identification\": {\n                                \"identification\": \"0260-0959-3\",\n                                \"schemeName\": \"BBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"John Doe\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"228 Park Ave S\",\n                                \"town\": \"New York\"\n                            }\n                        },\n                        \"batchBooking\": false,\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2017-08-12\",\n                        \"paymentMode\": \"RECURRING\",\n                        \"paymentType\": \"US_FOREIGN_WIRE\",\n                        \"schedule\": {\n                            \"transferFrequency\": \"MONTHLY\",\n                            \"on\": 1,\n                            \"startDate\": \"2017-08-12\",\n                            \"every\": \"1\",\n                            \"nextExecutionDate\": \"2017-09-12\",\n                            \"endDate\": \"2018-05-12\"\n                        },\n                        \"transferTransactionInformation\": {\n                            \"endToEndIdentification\": \"TRNSCT REF 1234567890\",\n                            \"instructedAmount\": {\n                                \"amount\": \"104.66\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"NL91 ABNA 0417 1643 00\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Jack Brown\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"2589 Peaceful Lane\",\n                                    \"postCode\": \"44128\",\n                                    \"town\": \"Warrensville Heights\",\n                                    \"country\": \"US\"\n                                }\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"UNSTRUCTURED\",\n                                \"content\": \"Unstructured content\"\n                            },\n                            \"counterpartyBank\": {\n                                \"bankBranchCode\": \"082000549\",\n                                \"name\": \"Morgan Chase\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"4789 Vernon Street\",\n                                    \"postCode\": \"92028\",\n                                    \"town\": \"Fallbrook\",\n                                    \"country\": \"US\"\n                                }\n                            },\n                            \"correspondentBank\": {\n                                \"bankBranchCode\": \"122105155\",\n                                \"name\": \"Bank of America\"\n                            },\n                            \"intermediaryBank\": {\n                                \"bic\": \"DABAIE2D\",\n                                \"bankBranchCode\": \"102000021\",\n                                \"name\": \"SNSB\"\n                            },\n                            \"messageToBank\": \"My us international wire payment explanation.\",\n                            \"targetCurrency\": \"EUR\"\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"edited\": false,\n                        \"version\": 42\n                    }, {\n                        \"id\": \"fa088818-623a-4260-bc46-1ff678de8dae\",\n                        \"approvalId\": \"8605dc85-726c-4795-9b55-ff698ad2d1e4\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"07642680-2b6f-11e8-b467-0ed5f89f718b\",\n                            \"identification\": {\n                                \"identification\": \"00400440116243\",\n                                \"schemeName\": \"BBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Mr John Usmith\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, New York\"\n                            }\n                        },\n                        \"instructionPriority\": \"HIGH\",\n                        \"requestedExecutionDate\": \"2018-08-16\",\n                        \"paymentMode\": \"SINGLE\",\n                        \"paymentType\": \"INTERNAL\",\n                        \"transferTransactionInformation\": {\n                            \"endToEndIdentification\": \"Some reference\",\n                            \"instructedAmount\": {\n                                \"amount\": \"749.99\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"accountType\": \"SAVINGS\",\n                                \"identification\": {\n                                    \"identification\": \"3242342348899\",\n                                    \"schemeName\": \"BBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"John Doe\"\n                            }\n                        },\n                        \"actions\": [\"APPROVE\", \"REJECT\"],\n                        \"permissibleActions\": {\n                            \"approve\": true,\n                            \"finalApprove\": false,\n                            \"reject\": true,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": false,\n                            \"create\": true\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"edited\": false,\n                        \"version\": 1\n                    }, {\n                        \"id\": \"f58a410e-469c-41f1-8c51-21b6d24bd3c1\",\n                        \"approvalId\": \"7527c230-01a7-41b8-a021-dc29aca98fe3\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"07642680-2b6f-11e8-b467-0ed5f89f718b\",\n                            \"identification\": {\n                                \"identification\": \"00400440116243\",\n                                \"schemeName\": \"BBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Mr John Usmith\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Los Angeles\"\n                            }\n                        },\n                        \"instructionPriority\": \"HIGH\",\n                        \"requestedExecutionDate\": \"2018-08-16\",\n                        \"paymentMode\": \"SINGLE\",\n                        \"paymentType\": \"INTERNAL\",\n                        \"transferTransactionInformation\": {\n                            \"endToEndIdentification\": \"Some reference\",\n                            \"instructedAmount\": {\n                                \"amount\": \"134\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"accountType\": \"CHECKING\",\n                                \"identification\": {\n                                    \"identification\": \"3242342123899\",\n                                    \"schemeName\": \"BBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Dan Brown\"\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"UNSTRUCTURED\",\n                                \"content\": \"Return a debt`\"\n                            }\n                        },\n                        \"actions\": [\"APPROVE\", \"REJECT\", \"EDIT\"],\n                        \"permissibleActions\": {\n                            \"approve\": true,\n                            \"finalApprove\": false,\n                            \"reject\": true,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": true,\n                            \"create\": true\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"edited\": false,\n                        \"version\": 1\n                    }]\n            },\n            {\n                status: 200,\n                body: [{\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                        \"status\": \"ACCEPTED\",\n                        \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n                        \"reasonCode\": \"AC01\",\n                        \"reasonText\": \"Accepted by bank\",\n                        \"originatorAccount\": {\n                            \"identification\": {\n                                \"identification\": \"8a48e08c60daa5940160dac699050088\",\n                                \"schemeName\": \"ID\"\n                            }\n                        },\n                        \"requestedExecutionDate\": \"2021-02-15\",\n                        \"paymentType\": \"INTERNATIONAL_TRANSFER\",\n                        \"transferTransactionInformation\": {\n                            \"instructedAmount\": {\n                                \"amount\": \"29.99\",\n                                \"currencyCode\": \"INR\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"John Doe\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"4902331374\",\n                                    \"schemeName\": \"BBAN\"\n                                }\n                            },\n                            \"counterpartyBank\": {\n                                \"bankBranchCode\": \"IDIA000A001\",\n                                \"bic\": \"IBKLINBBXXR\",\n                                \"name\": \"IDBA BANK IN\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"FINANCIAL PLAZA INDIA\",\n                                    \"country\": \"IN\"\n                                }\n                            },\n                            \"correspondentBank\": {\n                                \"bankBranchCode\": \"011000015\",\n                                \"name\": \"FEDERAL RESERVE BANK\"\n                            },\n                            \"intermediaryBank\": {\n                                \"bankBranchCode\": \"122105155\",\n                                \"name\": \"SNSB2886803298\"\n                            },\n                            \"messageToBank\": \"My international payment explanation.\",\n                            \"chargeBearer\": \"SHA\",\n                            \"exchangeRateInformation\": {\n                                \"currencyCode\": \"INR\",\n                                \"rate\": \"89.00\",\n                                \"rateType\": \"AGREED\",\n                                \"contractIdentification\": \"/tbill/2018/T102993\"\n                            },\n                            \"transferFee\": {\n                                \"amount\": \"0.29\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"purposeOfPayment\": {\n                                \"code\": \"P1004\"\n                            }\n                        }\n                    }]\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Payment type group invalid. Must be one of [credit, debit]\"\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PaymentOrdersHttpServiceGetProgressStatusByPaymentOrderIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}/progress-status\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"progressStatus\": \"CONFIRMATION_PENDING\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PaymentOrdersHttpServiceGetRateMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-orders/rate\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"rate\": 1.07\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PaymentOrdersHttpServicePostCancelByPaymentOrderIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}/cancel\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"accepted\": true\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PaymentOrdersHttpServicePostPaymentOrdersMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-orders\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\"\n                }\n            },\n            {\n                status: 201,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\",\n                    \"approvalStatus\": \"APPROVED\"\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\"\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\",\n                    \"approvalStatus\": \"APPROVED\"\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\",\n                    \"exportAllowed\": true\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Limits has been breached, check the report for more details\",\n                    \"payment\": {\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                            \"identification\": {\n                                \"identification\": \"NL53RABO0309349755\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2017-07-16\",\n                        \"transferTransactionInformation\": {\n                            \"name\": \"Jack Jackson\",\n                            \"instructedAmount\": {\n                                \"amount\": \"5000.55\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                    \"schemeName\": \"IBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Backbase\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"Jacob Bontiusplaats 9\",\n                                    \"zipcode\": \"1018LL\",\n                                    \"city\": \"Amsterdam\",\n                                    \"country\": \"NL\"\n                                }\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"UNSTRUCTURED\",\n                                \"content\": \"Return a debt\"\n                            }\n                        },\n                        \"version\": 0\n                    },\n                    \"checkTime\": \"2017-01-31T12:12:12Z\",\n                    \"breachReport\": [{\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Service Agreement\",\n                                    \"description\": \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"user-BBID\": \"oleksii\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"THRESHOLD\",\n                                    \"breachedLimitType\": \"PERIODIC\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2017-01-31T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"250.0\",\n                                    \"currentThreshold\": \"499.9\"\n                                }, {\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"monthly\",\n                                        \"startTime\": \"2017-01-01T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"9950.0\",\n                                    \"currentThreshold\": \"10000.0\"\n                                }]\n                        }, {\n                            \"user-BBID\": \"oleksii\",\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2017-01-31T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"500.0\",\n                                    \"currentThreshold\": \"1000.0\"\n                                }]\n                        }, {\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Function Access Group\",\n                                    \"description\": \"Payments approvers\"\n                                }, {\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Function\",\n                                    \"description\": \"Domestic payments\"\n                                }, {\n                                    \"ref\": \"Approve\",\n                                    \"type\": \"Privilege\",\n                                    \"description\": \"Approve\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"THRESHOLD\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2017-01-31T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"250.0\",\n                                    \"currentThreshold\": \"499.9\"\n                                }]\n                        }, {\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Legal Entity\",\n                                    \"description\": \"Kuhic, Gislason and Kemmer\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"quarterly\",\n                                        \"startTime\": \"2017-01-01T00:00:00Z\",\n                                        \"endTime\": \"2017-03-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"99950.0\",\n                                    \"currentThreshold\": \"100000.0\"\n                                }]\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PaymentOrdersHttpServicePostValidateMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-orders/validate\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"originatorAccount\": {\n                        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"externalArrangementId\": \"729190421493794513132\",\n                        \"identification\": {\n                            \"identification\": \"NL53RABO0309349755\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"originator\": {\n                        \"name\": \"Credit Account\",\n                        \"postalAddress\": {\n                            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                        }\n                    },\n                    \"instructionPriority\": \"NORM\",\n                    \"requestedExecutionDate\": \"2017-07-16\",\n                    \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                    \"isIntraLegalEntityPaymentOrder\": false,\n                    \"canApprove\": false,\n                    \"finalApprover\": false,\n                    \"transferTransactionInformation\": {\n                        \"instructedAmount\": {\n                            \"amount\": \"5000.55\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"counterpartyAccount\": {\n                            \"identification\": {\n                                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                \"schemeName\": \"IBAN\"\n                            },\n                            \"name\": \"ABN Amro\"\n                        },\n                        \"counterparty\": {\n                            \"name\": \"Backbase\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                \"country\": \"NL\"\n                            }\n                        },\n                        \"remittanceInformation\": {\n                            \"type\": \"UNSTRUCTURED\",\n                            \"content\": \"Return a debt\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"originatorAccount\": {\n                        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"externalArrangementId\": \"729190421493794513132\",\n                        \"identification\": {\n                            \"identification\": \"NL53RABO0309349755\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"originator\": {\n                        \"name\": \"Credit Account\",\n                        \"postalAddress\": {\n                            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                        }\n                    },\n                    \"instructionPriority\": \"NORM\",\n                    \"requestedExecutionDate\": \"2017-07-16\",\n                    \"paymentType\": \"SEPA_CT_ILE\",\n                    \"isIntraLegalEntityPaymentOrder\": true,\n                    \"canApprove\": false,\n                    \"finalApprover\": false,\n                    \"transferTransactionInformation\": {\n                        \"instructedAmount\": {\n                            \"amount\": \"5000.55\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"counterpartyAccount\": {\n                            \"identification\": {\n                                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                \"schemeName\": \"IBAN\"\n                            },\n                            \"name\": \"ABN Amro\"\n                        },\n                        \"counterparty\": {\n                            \"name\": \"Backbase\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                \"country\": \"NL\"\n                            }\n                        },\n                        \"remittanceInformation\": {\n                            \"type\": \"UNSTRUCTURED\",\n                            \"content\": \"Return a debt\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"originatorAccount\": {\n                        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"externalArrangementId\": \"729190421493794513132\",\n                        \"identification\": {\n                            \"identification\": \"NL53RABO0309349755\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"originator\": {\n                        \"name\": \"Credit Account\",\n                        \"postalAddress\": {\n                            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                        }\n                    },\n                    \"instructionPriority\": \"NORM\",\n                    \"requestedExecutionDate\": \"2017-07-16\",\n                    \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                    \"isIntraLegalEntityPaymentOrder\": false,\n                    \"canApprove\": true,\n                    \"finalApprover\": false,\n                    \"transferTransactionInformation\": {\n                        \"instructedAmount\": {\n                            \"amount\": \"5000.55\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"counterpartyAccount\": {\n                            \"identification\": {\n                                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                \"schemeName\": \"IBAN\"\n                            },\n                            \"name\": \"ABN Amro\"\n                        },\n                        \"counterparty\": {\n                            \"name\": \"Backbase\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                \"country\": \"NL\"\n                            }\n                        },\n                        \"remittanceInformation\": {\n                            \"type\": \"UNSTRUCTURED\",\n                            \"content\": \"Return a debt\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"originatorAccount\": {\n                        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"externalArrangementId\": \"729190421493794513132\",\n                        \"identification\": {\n                            \"identification\": \"NL53RABO0309349755\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"originator\": {\n                        \"name\": \"Credit Account\",\n                        \"postalAddress\": {\n                            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                        }\n                    },\n                    \"instructionPriority\": \"NORM\",\n                    \"requestedExecutionDate\": \"2017-07-16\",\n                    \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                    \"isIntraLegalEntityPaymentOrder\": false,\n                    \"canApprove\": true,\n                    \"finalApprover\": true,\n                    \"transferTransactionInformation\": {\n                        \"instructedAmount\": {\n                            \"amount\": \"5000.55\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"counterpartyAccount\": {\n                            \"identification\": {\n                                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                \"schemeName\": \"IBAN\"\n                            },\n                            \"name\": \"ABN Amro\"\n                        },\n                        \"counterparty\": {\n                            \"name\": \"Backbase\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                \"country\": \"NL\"\n                            }\n                        },\n                        \"remittanceInformation\": {\n                            \"type\": \"UNSTRUCTURED\",\n                            \"content\": \"Return a debt\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PaymentOrdersHttpServicePutApprovalsByPaymentOrderIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}/approvals\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 202,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\"\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\",\n                    \"approvalStatus\": \"APPROVED\"\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"approvalStatus\": \"approvalStatus\",\n                    \"reasonText\": \"reasonText\",\n                    \"nextExecutionDate\": \"2000-01-23\",\n                    \"errorDescription\": \"errorDescription\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"exportAllowed\": true,\n                    \"bankStatus\": \"bankStatus\",\n                    \"paymentSetupId\": \"paymentSetupId\",\n                    \"transferFee\": {\n                        \"amount\": \"amount\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"exchangeRateInformation\": {\n                        \"rateType\": \"ACTUAL\",\n                        \"contractIdentification\": \"contractIdentification\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"rate\": \"rate\",\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"id\": \"id\",\n                    \"reasonCode\": \"reasonCode\",\n                    \"paymentSubmissionId\": \"paymentSubmissionId\"\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Limits has been breached, check the report for more details\",\n                    \"payment\": {\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                            \"identification\": {\n                                \"identification\": \"NL53RABO0309349755\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2017-07-16\",\n                        \"transferTransactionInformation\": {\n                            \"name\": \"Jack Jackson\",\n                            \"instructedAmount\": {\n                                \"amount\": \"5000.55\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                    \"schemeName\": \"IBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Backbase\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"Jacob Bontiusplaats 9\",\n                                    \"zipcode\": \"1018LL\",\n                                    \"city\": \"Amsterdam\",\n                                    \"country\": \"NL\"\n                                }\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"UNSTRUCTURED\",\n                                \"content\": \"Return a debt\"\n                            }\n                        },\n                        \"version\": 0\n                    },\n                    \"checkTime\": \"2017-01-31T12:12:12Z\",\n                    \"breachReport\": [{\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Service Agreement\",\n                                    \"description\": \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"user-BBID\": \"oleksii\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"THRESHOLD\",\n                                    \"breachedLimitType\": \"PERIODIC\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2017-01-31T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"250.0\",\n                                    \"currentThreshold\": \"499.9\"\n                                }, {\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"monthly\",\n                                        \"startTime\": \"2017-01-01T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"9950.0\",\n                                    \"currentThreshold\": \"10000.0\"\n                                }]\n                        }, {\n                            \"user-BBID\": \"oleksii\",\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2017-01-31T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"500.0\",\n                                    \"currentThreshold\": \"1000.0\"\n                                }]\n                        }, {\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Function Access Group\",\n                                    \"description\": \"Payments approvers\"\n                                }, {\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Function\",\n                                    \"description\": \"Domestic payments\"\n                                }, {\n                                    \"ref\": \"Approve\",\n                                    \"type\": \"Privilege\",\n                                    \"description\": \"Approve\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"THRESHOLD\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2017-01-31T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"250.0\",\n                                    \"currentThreshold\": \"499.9\"\n                                }]\n                        }, {\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Legal Entity\",\n                                    \"description\": \"Kuhic, Gislason and Kemmer\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"quarterly\",\n                                        \"startTime\": \"2017-01-01T00:00:00Z\",\n                                        \"endTime\": \"2017-03-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"99950.0\",\n                                    \"currentThreshold\": \"100000.0\"\n                                }]\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"challenges\": [{\n                            \"challengeType\": \"reauth\",\n                            \"acrValues\": \"txn-signature-silver txn-signature-gold\",\n                            \"scope\": \"confirmation:3ea92d30-f460-4dde-b40a-e83a2f266a3a\"\n                        }],\n                    \"data\": {\n                        \"approvalId\": \"9E2F9AC5-DD09-40C0-805E-147B0C565901\",\n                        \"approvalRecordId\": \"DEDFDF28-690E-4B83-8BAF-C8ABF31EF70B\",\n                        \"confirmationType\": \"approve-payment\",\n                        \"paymentOrderId\": \"a3a2e499-bd58-4077-9991-19b2559f4796\",\n                        \"amount\": \"12.95\",\n                        \"currency\": \"EUR\",\n                        \"counterpartyAccount\": \"NL06ABNA9691012820\",\n                        \"counterpartyName\": \"Jouk\"\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PaymentOrdersHttpServicePutBulkApprovalsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-orders/bulk-approvals\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"approvalStatus\": \"APPROVED\",\n                    \"paymentOrders\": [{\n                            \"paymentOrderId\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n                            \"paymentOrder\": {\n                                \"id\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n                                \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                                \"status\": \"ENTERED\",\n                                \"originatorAccount\": {\n                                    \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                                    \"externalArrangementId\": \"729190421493794513132\",\n                                    \"identification\": {\n                                        \"identification\": \"0260-0959-3\",\n                                        \"schemeName\": \"BBAN\"\n                                    }\n                                },\n                                \"originator\": {\n                                    \"name\": \"Smith Bonus Savings\",\n                                    \"postalAddress\": {\n                                        \"addressLine1\": \"228 Park Ave S\",\n                                        \"town\": \"New York\"\n                                    }\n                                },\n                                \"instructionPriority\": \"HIGH\",\n                                \"requestedExecutionDate\": \"2017-08-16\",\n                                \"paymentMode\": \"SINGLE\",\n                                \"paymentType\": \"US_FOREIGN_WIRE\",\n                                \"transferTransactionInformation\": {\n                                    \"endToEndIdentification\": \"Some reference\",\n                                    \"instructedAmount\": {\n                                        \"amount\": \"749.99\",\n                                        \"currencyCode\": \"EUR\"\n                                    },\n                                    \"counterpartyAccount\": {\n                                        \"identification\": {\n                                            \"identification\": \"MR1300020001010000123456753\",\n                                            \"schemeName\": \"IBAN\"\n                                        },\n                                        \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                        \"externalArrangementId\": \"9669274787995385962\"\n                                    },\n                                    \"counterparty\": {\n                                        \"name\": \"John Smith\",\n                                        \"postalAddress\": {\n                                            \"addressLine1\": \"2589 Peaceful Lane\",\n                                            \"postCode\": \"44128\",\n                                            \"town\": \"Warrensville Heights\",\n                                            \"country\": \"US\"\n                                        }\n                                    },\n                                    \"remittanceInformation\": {\n                                        \"type\": \"UNSTRUCTURED\",\n                                        \"content\": \"Unstructured content\"\n                                    },\n                                    \"counterpartyBank\": {\n                                        \"bankBranchCode\": \"082000549\",\n                                        \"name\": \"Morgan Chase\",\n                                        \"postalAddress\": {\n                                            \"addressLine1\": \"4789 Vernon Street\",\n                                            \"postCode\": \"92028\",\n                                            \"town\": \"Fallbrook\",\n                                            \"country\": \"US\"\n                                        }\n                                    },\n                                    \"correspondentBank\": {\n                                        \"bankBranchCode\": \"122105155\",\n                                        \"name\": \"Bank of America\"\n                                    },\n                                    \"intermediaryBank\": {\n                                        \"bic\": \"DABAIE2D\",\n                                        \"bankBranchCode\": \"102000021\",\n                                        \"name\": \"SNSB\"\n                                    },\n                                    \"messageToBank\": \"My us international wire payment explanation.\",\n                                    \"targetCurrency\": \"EUR\"\n                                },\n                                \"actions\": [\"APPROVE\"],\n                                \"permissibleActions\": {\n                                    \"approve\": true,\n                                    \"finalApprove\": false,\n                                    \"reject\": false,\n                                    \"cancel\": false,\n                                    \"delete\": false,\n                                    \"edit\": false,\n                                    \"create\": true,\n                                    \"export\": false\n                                },\n                                \"createdBy\": \"U00243\",\n                                \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                                \"version\": 2\n                            },\n                            \"approvalStatus\": \"PENDING\",\n                            \"status\": {\n                                \"code\": \"OK\"\n                            }\n                        }, {\n                            \"paymentOrderId\": \"d2ff7c65-24ae-430f-92b9-c7ca5b143081\",\n                            \"paymentOrder\": {\n                                \"id\": \"d2ff7c65-24ae-430f-92b9-c7ca5b143081\",\n                                \"approvalId\": \"2d9367dc-8af1-411d-81f6-9e28c46dd189\",\n                                \"status\": \"REJECTED\",\n                                \"originatorAccount\": {\n                                    \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                                    \"externalArrangementId\": \"729190421493794513132\",\n                                    \"identification\": {\n                                        \"identification\": \"NL81TRIO0212471066\",\n                                        \"schemeName\": \"IBAN\"\n                                    }\n                                },\n                                \"originator\": {\n                                    \"name\": \"Smith Bonus Savings\",\n                                    \"postalAddress\": {\n                                        \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                                    }\n                                },\n                                \"instructionPriority\": \"HIGH\",\n                                \"requestedExecutionDate\": \"2017-08-16\",\n                                \"paymentMode\": \"SINGLE\",\n                                \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                                \"transferTransactionInformation\": {\n                                    \"endToEndIdentification\": \"Some reference\",\n                                    \"instructedAmount\": {\n                                        \"amount\": \"749.99\",\n                                        \"currencyCode\": \"EUR\"\n                                    },\n                                    \"counterpartyAccount\": {\n                                        \"identification\": {\n                                            \"identification\": \"MR1300020001010000123456753\",\n                                            \"schemeName\": \"IBAN\"\n                                        },\n                                        \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                        \"externalArrangementId\": \"9669274787995385962\"\n                                    },\n                                    \"counterparty\": {\n                                        \"name\": \"John Smith\"\n                                    }\n                                },\n                                \"actions\": [],\n                                \"createdBy\": \"U00243\",\n                                \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                                \"version\": 2\n                            },\n                            \"approvalStatus\": \"REJECTED\",\n                            \"status\": {\n                                \"code\": \"ERROR\",\n                                \"message\": \"Not allowed to update this approval, status is final\",\n                                \"errors\": [{\n                                        \"message\": \"Not allowed to update this approval, status is final\",\n                                        \"key\": \"paymentorder.api.Approval.NotAllowed\",\n                                        \"context\": {\n                                            \"status\": \"REJECTED\"\n                                        }\n                                    }]\n                            }\n                        }, {\n                            \"paymentOrderId\": \"9a20be2b-b8f3-45dc-a625-55635235de4c\",\n                            \"status\": {\n                                \"code\": \"ERROR\",\n                                \"message\": \"Payment not found\",\n                                \"errors\": [{\n                                        \"message\": \"Payment not found\",\n                                        \"key\": \"paymentorder.api.PaymentOrder.NotFound\"\n                                    }]\n                            }\n                        }, {\n                            \"paymentOrderId\": \"c7653c55-ee9b-4f65-96db-cbda76efd3ae\",\n                            \"paymentOrder\": {\n                                \"id\": \"c7653c55-ee9b-4f65-96db-cbda76efd3ae\",\n                                \"approvalId\": \"fe383f48-df2e-4b17-a0d2-3443b2e3738c\",\n                                \"status\": \"ENTERED\",\n                                \"originatorAccount\": {\n                                    \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                                    \"externalArrangementId\": \"729190421493794513132\",\n                                    \"identification\": {\n                                        \"identification\": \"NL81TRIO0212471066\",\n                                        \"schemeName\": \"IBAN\"\n                                    }\n                                },\n                                \"originator\": {\n                                    \"name\": \"Smith Bonus Savings\",\n                                    \"postalAddress\": {\n                                        \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                                    }\n                                },\n                                \"instructionPriority\": \"HIGH\",\n                                \"requestedExecutionDate\": \"2017-08-16\",\n                                \"paymentMode\": \"SINGLE\",\n                                \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                                \"transferTransactionInformation\": {\n                                    \"endToEndIdentification\": \"Some reference\",\n                                    \"instructedAmount\": {\n                                        \"amount\": \"749.99\",\n                                        \"currencyCode\": \"EUR\"\n                                    },\n                                    \"counterpartyAccount\": {\n                                        \"identification\": {\n                                            \"identification\": \"MR1300020001010000123456753\",\n                                            \"schemeName\": \"IBAN\"\n                                        },\n                                        \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                        \"externalArrangementId\": \"9669274787995385962\"\n                                    },\n                                    \"counterparty\": {\n                                        \"name\": \"John Smith\"\n                                    }\n                                },\n                                \"actions\": [],\n                                \"createdBy\": \"U00243\",\n                                \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                                \"version\": 2\n                            },\n                            \"status\": {\n                                \"code\": \"ERROR\",\n                                \"message\": \"Approval not found\",\n                                \"errors\": [{\n                                        \"message\": \"Approval not found\",\n                                        \"key\": \"paymentorder.api.Approval.NotFound\"\n                                    }]\n                            }\n                        }],\n                    \"successCount\": 1,\n                    \"failCount\": 3\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"approvalStatus\": \"APPROVED\",\n                    \"paymentOrders\": [{\n                            \"paymentOrderId\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n                            \"paymentOrder\": {\n                                \"id\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n                                \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                                \"status\": \"ENTERED\",\n                                \"originatorAccount\": {\n                                    \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                                    \"externalArrangementId\": \"729190421493794513132\",\n                                    \"identification\": {\n                                        \"identification\": \"0260-0959-3\",\n                                        \"schemeName\": \"BBAN\"\n                                    }\n                                },\n                                \"originator\": {\n                                    \"name\": \"Smith Bonus Savings\",\n                                    \"postalAddress\": {\n                                        \"addressLine1\": \"228 Park Ave S\",\n                                        \"town\": \"New York\"\n                                    }\n                                },\n                                \"instructionPriority\": \"HIGH\",\n                                \"requestedExecutionDate\": \"2017-08-16\",\n                                \"paymentMode\": \"SINGLE\",\n                                \"paymentType\": \"US_FOREIGN_WIRE\",\n                                \"transferTransactionInformation\": {\n                                    \"endToEndIdentification\": \"Some reference\",\n                                    \"instructedAmount\": {\n                                        \"amount\": \"749.99\",\n                                        \"currencyCode\": \"EUR\"\n                                    },\n                                    \"counterpartyAccount\": {\n                                        \"identification\": {\n                                            \"identification\": \"MR1300020001010000123456753\",\n                                            \"schemeName\": \"IBAN\"\n                                        },\n                                        \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                        \"externalArrangementId\": \"9669274787995385962\"\n                                    },\n                                    \"counterparty\": {\n                                        \"name\": \"John Smith\",\n                                        \"postalAddress\": {\n                                            \"addressLine1\": \"2589 Peaceful Lane\",\n                                            \"postCode\": \"44128\",\n                                            \"town\": \"Warrensville Heights\",\n                                            \"country\": \"US\"\n                                        }\n                                    },\n                                    \"remittanceInformation\": {\n                                        \"type\": \"UNSTRUCTURED\",\n                                        \"content\": \"Unstructured content\"\n                                    },\n                                    \"counterpartyBank\": {\n                                        \"bankBranchCode\": \"082000549\",\n                                        \"name\": \"Morgan Chase\",\n                                        \"postalAddress\": {\n                                            \"addressLine1\": \"4789 Vernon Street\",\n                                            \"postCode\": \"92028\",\n                                            \"town\": \"Fallbrook\",\n                                            \"country\": \"US\"\n                                        }\n                                    },\n                                    \"correspondentBank\": {\n                                        \"bankBranchCode\": \"122105155\",\n                                        \"name\": \"Bank of America\"\n                                    },\n                                    \"intermediaryBank\": {\n                                        \"bic\": \"DABAIE2D\",\n                                        \"bankBranchCode\": \"102000021\",\n                                        \"name\": \"SNSB\"\n                                    },\n                                    \"messageToBank\": \"My us international wire payment explanation.\",\n                                    \"targetCurrency\": \"EUR\"\n                                },\n                                \"actions\": [\"APPROVE\"],\n                                \"permissibleActions\": {\n                                    \"approve\": true,\n                                    \"finalApprove\": false,\n                                    \"reject\": false,\n                                    \"cancel\": false,\n                                    \"delete\": false,\n                                    \"edit\": false,\n                                    \"create\": true,\n                                    \"export\": false\n                                },\n                                \"createdBy\": \"U00243\",\n                                \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                                \"version\": 2\n                            },\n                            \"approvalStatus\": \"PENDING\",\n                            \"status\": {\n                                \"code\": \"OK\"\n                            }\n                        }, {\n                            \"paymentOrderId\": \"d2ff7c65-24ae-430f-92b9-c7ca5b143081\",\n                            \"paymentOrder\": {\n                                \"id\": \"d2ff7c65-24ae-430f-92b9-c7ca5b143081\",\n                                \"approvalId\": \"2d9367dc-8af1-411d-81f6-9e28c46dd189\",\n                                \"status\": \"REJECTED\",\n                                \"originatorAccount\": {\n                                    \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                                    \"externalArrangementId\": \"729190421493794513132\",\n                                    \"identification\": {\n                                        \"identification\": \"NL81TRIO0212471066\",\n                                        \"schemeName\": \"IBAN\"\n                                    }\n                                },\n                                \"originator\": {\n                                    \"name\": \"Smith Bonus Savings\",\n                                    \"postalAddress\": {\n                                        \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                                    }\n                                },\n                                \"instructionPriority\": \"HIGH\",\n                                \"requestedExecutionDate\": \"2017-08-16\",\n                                \"paymentMode\": \"SINGLE\",\n                                \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                                \"transferTransactionInformation\": {\n                                    \"endToEndIdentification\": \"Some reference\",\n                                    \"instructedAmount\": {\n                                        \"amount\": \"749.99\",\n                                        \"currencyCode\": \"EUR\"\n                                    },\n                                    \"counterpartyAccount\": {\n                                        \"identification\": {\n                                            \"identification\": \"MR1300020001010000123456753\",\n                                            \"schemeName\": \"IBAN\"\n                                        },\n                                        \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                        \"externalArrangementId\": \"9669274787995385962\"\n                                    },\n                                    \"counterparty\": {\n                                        \"name\": \"John Smith\"\n                                    }\n                                },\n                                \"actions\": [],\n                                \"createdBy\": \"U00243\",\n                                \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                                \"version\": 2\n                            },\n                            \"approvalStatus\": \"REJECTED\",\n                            \"status\": {\n                                \"code\": \"ERROR\",\n                                \"message\": \"Not allowed to update this approval, status is final\",\n                                \"errors\": [{\n                                        \"message\": \"Not allowed to update this approval, status is final\",\n                                        \"key\": \"paymentorder.api.Approval.NotAllowed\",\n                                        \"context\": {\n                                            \"status\": \"REJECTED\"\n                                        }\n                                    }]\n                            }\n                        }, {\n                            \"paymentOrderId\": \"9a20be2b-b8f3-45dc-a625-55635235de4c\",\n                            \"status\": {\n                                \"code\": \"ERROR\",\n                                \"message\": \"Payment not found\",\n                                \"errors\": [{\n                                        \"message\": \"Payment not found\",\n                                        \"key\": \"paymentorder.api.PaymentOrder.NotFound\"\n                                    }]\n                            }\n                        }, {\n                            \"paymentOrderId\": \"c7653c55-ee9b-4f65-96db-cbda76efd3ae\",\n                            \"paymentOrder\": {\n                                \"id\": \"c7653c55-ee9b-4f65-96db-cbda76efd3ae\",\n                                \"approvalId\": \"fe383f48-df2e-4b17-a0d2-3443b2e3738c\",\n                                \"status\": \"ENTERED\",\n                                \"originatorAccount\": {\n                                    \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                                    \"externalArrangementId\": \"729190421493794513132\",\n                                    \"identification\": {\n                                        \"identification\": \"NL81TRIO0212471066\",\n                                        \"schemeName\": \"IBAN\"\n                                    }\n                                },\n                                \"originator\": {\n                                    \"name\": \"Smith Bonus Savings\",\n                                    \"postalAddress\": {\n                                        \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                                    }\n                                },\n                                \"instructionPriority\": \"HIGH\",\n                                \"requestedExecutionDate\": \"2017-08-16\",\n                                \"paymentMode\": \"SINGLE\",\n                                \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                                \"transferTransactionInformation\": {\n                                    \"endToEndIdentification\": \"Some reference\",\n                                    \"instructedAmount\": {\n                                        \"amount\": \"749.99\",\n                                        \"currencyCode\": \"EUR\"\n                                    },\n                                    \"counterpartyAccount\": {\n                                        \"identification\": {\n                                            \"identification\": \"MR1300020001010000123456753\",\n                                            \"schemeName\": \"IBAN\"\n                                        },\n                                        \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                        \"externalArrangementId\": \"9669274787995385962\"\n                                    },\n                                    \"counterparty\": {\n                                        \"name\": \"John Smith\"\n                                    }\n                                },\n                                \"actions\": [],\n                                \"createdBy\": \"U00243\",\n                                \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                                \"version\": 2\n                            },\n                            \"status\": {\n                                \"code\": \"ERROR\",\n                                \"message\": \"Limits has been breached, check report for details\"\n                            },\n                            \"breachReport\": [{\n                                    \"breachInfo\": [{\n                                            \"breachType\": \"THRESHOLD\",\n                                            \"breachedLimitType\": \"PERIODIC\",\n                                            \"currentConsumption\": \"999.00\",\n                                            \"currentThreshold\": \"1000.00\",\n                                            \"timeframe\": {\n                                                \"period\": \"DAILY\",\n                                                \"startTime\": \"2017-05-12T00:00:00.000Z\",\n                                                \"endTime\": \"2017-05-12T23:59:59.999Z\"\n                                            }\n                                        }]\n                                }]\n                        }],\n                    \"successCount\": 1,\n                    \"failCount\": 3\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PaymentOrdersHttpServicePutPaymentOrderByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\",\n                    \"approvalStatus\": \"APPROVED\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"approvalStatus\": \"approvalStatus\",\n                    \"reasonText\": \"reasonText\",\n                    \"nextExecutionDate\": \"2000-01-23\",\n                    \"errorDescription\": \"errorDescription\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"exportAllowed\": true,\n                    \"bankStatus\": \"bankStatus\",\n                    \"paymentSetupId\": \"paymentSetupId\",\n                    \"transferFee\": {\n                        \"amount\": \"amount\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"exchangeRateInformation\": {\n                        \"rateType\": \"ACTUAL\",\n                        \"contractIdentification\": \"contractIdentification\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"rate\": \"rate\",\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"id\": \"id\",\n                    \"reasonCode\": \"reasonCode\",\n                    \"paymentSubmissionId\": \"paymentSubmissionId\"\n                }\n            },\n            {\n                status: 201,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\"\n                }\n            },\n            {\n                status: 201,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\",\n                    \"approvalStatus\": \"APPROVED\"\n                }\n            },\n            {\n                status: 201,\n                body: {\n                    \"approvalStatus\": \"approvalStatus\",\n                    \"reasonText\": \"reasonText\",\n                    \"nextExecutionDate\": \"2000-01-23\",\n                    \"errorDescription\": \"errorDescription\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"exportAllowed\": true,\n                    \"bankStatus\": \"bankStatus\",\n                    \"paymentSetupId\": \"paymentSetupId\",\n                    \"transferFee\": {\n                        \"amount\": \"amount\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"exchangeRateInformation\": {\n                        \"rateType\": \"ACTUAL\",\n                        \"contractIdentification\": \"contractIdentification\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"rate\": \"rate\",\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"id\": \"id\",\n                    \"reasonCode\": \"reasonCode\",\n                    \"paymentSubmissionId\": \"paymentSubmissionId\"\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\"\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\",\n                    \"approvalStatus\": \"APPROVED\"\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"approvalStatus\": \"approvalStatus\",\n                    \"reasonText\": \"reasonText\",\n                    \"nextExecutionDate\": \"2000-01-23\",\n                    \"errorDescription\": \"errorDescription\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"exportAllowed\": true,\n                    \"bankStatus\": \"bankStatus\",\n                    \"paymentSetupId\": \"paymentSetupId\",\n                    \"transferFee\": {\n                        \"amount\": \"amount\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"exchangeRateInformation\": {\n                        \"rateType\": \"ACTUAL\",\n                        \"contractIdentification\": \"contractIdentification\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"rate\": \"rate\",\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"id\": \"id\",\n                    \"reasonCode\": \"reasonCode\",\n                    \"paymentSubmissionId\": \"paymentSubmissionId\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Limits has been breached, check the report for more details\",\n                    \"payment\": {\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                            \"identification\": {\n                                \"identification\": \"NL53RABO0309349755\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2017-07-16\",\n                        \"transferTransactionInformation\": {\n                            \"name\": \"Jack Jackson\",\n                            \"instructedAmount\": {\n                                \"amount\": \"5000.55\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                    \"schemeName\": \"IBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Backbase\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"Jacob Bontiusplaats 9\",\n                                    \"zipcode\": \"1018LL\",\n                                    \"city\": \"Amsterdam\",\n                                    \"country\": \"NL\"\n                                }\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"UNSTRUCTURED\",\n                                \"content\": \"Return a debt\"\n                            }\n                        },\n                        \"version\": 0\n                    },\n                    \"checkTime\": \"2017-01-31T12:12:12Z\",\n                    \"breachReport\": [{\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Service Agreement\",\n                                    \"description\": \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"user-BBID\": \"oleksii\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"THRESHOLD\",\n                                    \"breachedLimitType\": \"PERIODIC\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2017-01-31T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"250.0\",\n                                    \"currentThreshold\": \"499.9\"\n                                }, {\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"monthly\",\n                                        \"startTime\": \"2017-01-01T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"9950.0\",\n                                    \"currentThreshold\": \"10000.0\"\n                                }]\n                        }, {\n                            \"user-BBID\": \"oleksii\",\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2017-01-31T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"500.0\",\n                                    \"currentThreshold\": \"1000.0\"\n                                }]\n                        }, {\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Function Access Group\",\n                                    \"description\": \"Payments approvers\"\n                                }, {\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Function\",\n                                    \"description\": \"Domestic payments\"\n                                }, {\n                                    \"ref\": \"Approve\",\n                                    \"type\": \"Privilege\",\n                                    \"description\": \"Approve\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"THRESHOLD\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2017-01-31T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"250.0\",\n                                    \"currentThreshold\": \"499.9\"\n                                }]\n                        }, {\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Legal Entity\",\n                                    \"description\": \"Kuhic, Gislason and Kemmer\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"quarterly\",\n                                        \"startTime\": \"2017-01-01T00:00:00Z\",\n                                        \"endTime\": \"2017-03-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"99950.0\",\n                                    \"currentThreshold\": \"100000.0\"\n                                }]\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PaymentOrdersHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/payment-orders/approvals\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"id\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n                        \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"name\": \"Smith Bonus Savings\",\n                            \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n                            \"externalArrangementId\": \"a3f8defe-f447-4475-b5c1-d3971ec7a273\",\n                            \"identification\": {\n                                \"identification\": \"NL81TRIO0212471066\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Smith Bonus Savings\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                            }\n                        },\n                        \"batchBooking\": false,\n                        \"instructionPriority\": \"HIGH\",\n                        \"requestedExecutionDate\": \"2018-08-16\",\n                        \"paymentMode\": \"SINGLE\",\n                        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                        \"transferTransactionInformation\": {\n                            \"instructedAmount\": {\n                                \"amount\": \"749.99\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"MR1300020001010000123456753\",\n                                    \"schemeName\": \"IBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                \"externalArrangementId\": \"9669274787995385962\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"John Smith\"\n                            }\n                        },\n                        \"actions\": [\"APPROVE\", \"FINAL_APPROVE\", \"REJECT\"],\n                        \"permissibleActions\": {\n                            \"approve\": true,\n                            \"finalApprove\": true,\n                            \"reject\": true,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": false,\n                            \"create\": true,\n                            \"export\": false\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"version\": 1\n                    }, {\n                        \"id\": \"06db9298-189b-11e8-accf-0ed5f89f718b\",\n                        \"approvalId\": \"11863018-189b-11e8-accf-0ed5f89f718b\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"name\": \"John Doe\",\n                            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                            \"identification\": {\n                                \"identification\": \"0260-0959-3\",\n                                \"schemeName\": \"BBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"John Doe\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"228 Park Ave S\",\n                                \"town\": \"New York\"\n                            }\n                        },\n                        \"batchBooking\": false,\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2017-08-12\",\n                        \"paymentMode\": \"RECURRING\",\n                        \"paymentType\": \"US_FOREIGN_WIRE\",\n                        \"schedule\": {\n                            \"transferFrequency\": \"MONTHLY\",\n                            \"on\": 1,\n                            \"startDate\": \"2017-08-12\",\n                            \"every\": \"1\",\n                            \"nextExecutionDate\": \"2017-09-12\",\n                            \"endDate\": \"2018-05-12\"\n                        },\n                        \"transferTransactionInformation\": {\n                            \"endToEndIdentification\": \"TRNSCT REF 1234567890\",\n                            \"instructedAmount\": {\n                                \"amount\": \"104.66\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"NL91 ABNA 0417 1643 00\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Jack Brown\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"2589 Peaceful Lane\",\n                                    \"postCode\": \"44128\",\n                                    \"town\": \"Warrensville Heights\",\n                                    \"country\": \"US\"\n                                }\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"UNSTRUCTURED\",\n                                \"content\": \"Unstructured content\"\n                            },\n                            \"counterpartyBank\": {\n                                \"bankBranchCode\": \"082000549\",\n                                \"name\": \"Morgan Chase\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"4789 Vernon Street\",\n                                    \"postCode\": \"92028\",\n                                    \"town\": \"Fallbrook\",\n                                    \"country\": \"US\"\n                                }\n                            },\n                            \"correspondentBank\": {\n                                \"bankBranchCode\": \"122105155\",\n                                \"name\": \"Bank of America\"\n                            },\n                            \"intermediaryBank\": {\n                                \"bic\": \"DABAIE2D\",\n                                \"bankBranchCode\": \"102000021\",\n                                \"name\": \"SNSB\"\n                            },\n                            \"messageToBank\": \"My us international wire payment explanation.\",\n                            \"targetCurrency\": \"EUR\"\n                        },\n                        \"actions\": [\"APPROVE\", \"REJECT\"],\n                        \"permissibleActions\": {\n                            \"approve\": true,\n                            \"finalApprove\": false,\n                            \"reject\": true,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": false,\n                            \"create\": true,\n                            \"export\": false\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"version\": 42\n                    }, {\n                        \"id\": \"fa088818-623a-4260-bc46-1ff678de8dae\",\n                        \"approvalId\": \"8605dc85-726c-4795-9b55-ff698ad2d1e4\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"name\": \"Mr John Usmith\",\n                            \"arrangementId\": \"07642680-2b6f-11e8-b467-0ed5f89f718b\",\n                            \"identification\": {\n                                \"identification\": \"00400440116243\",\n                                \"schemeName\": \"BBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Mr John Usmith\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, New York\"\n                            }\n                        },\n                        \"instructionPriority\": \"HIGH\",\n                        \"requestedExecutionDate\": \"2018-08-16\",\n                        \"paymentMode\": \"SINGLE\",\n                        \"paymentType\": \"INTERNAL\",\n                        \"transferTransactionInformation\": {\n                            \"instructedAmount\": {\n                                \"amount\": \"749.99\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"accountType\": \"SAVINGS\",\n                                \"identification\": {\n                                    \"identification\": \"3242342348899\",\n                                    \"schemeName\": \"BBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"John Doe\"\n                            }\n                        },\n                        \"actions\": [\"APPROVE\", \"REJECT\", \"EDIT\"],\n                        \"permissibleActions\": {\n                            \"approve\": true,\n                            \"finalApprove\": false,\n                            \"reject\": true,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": true,\n                            \"create\": true,\n                            \"export\": false\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"version\": 1\n                    }]\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/payment-orders/currencies\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"code\": \"EUR\"\n                    }, {\n                        \"code\": \"USD\"\n                    }, {\n                        \"code\": \"GBP\"\n                    }, {\n                        \"code\": \"ISK\"\n                    }, {\n                        \"code\": \"KWD\"\n                    }]\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                    \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                    \"status\": \"ACCEPTED\",\n                    \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n                    \"reasonCode\": \"AC01\",\n                    \"reasonText\": \"Accepted by bank\",\n                    \"originatorAccount\": {\n                        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"externalArrangementId\": \"729190421493794513132\",\n                        \"identification\": {\n                            \"identification\": \"NL53RABO0309349755\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"instructionPriority\": \"NORM\",\n                    \"requestedExecutionDate\": \"2017-07-16\",\n                    \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                    \"transferTransactionInformation\": {\n                        \"instructedAmount\": {\n                            \"amount\": \"5000.55\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"counterpartyAccount\": {\n                            \"identification\": {\n                                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                \"schemeName\": \"IBAN\"\n                            },\n                            \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                            \"externalArrangementId\": \"9669274787995385962\"\n                        },\n                        \"counterparty\": {\n                            \"name\": \"Backbase\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                \"country\": \"NL\"\n                            }\n                        },\n                        \"remittanceInformation\": {\n                            \"type\": \"UNSTRUCTURED\",\n                            \"content\": \"Return a debt\"\n                        }\n                    },\n                    \"actions\": [\"EDIT\"],\n                    \"permissibleActions\": {\n                        \"approve\": false,\n                        \"finalApprove\": false,\n                        \"reject\": false,\n                        \"cancel\": false,\n                        \"delete\": false,\n                        \"edit\": true,\n                        \"create\": true,\n                        \"export\": true\n                    },\n                    \"createdBy\": \"U00243\",\n                    \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                    \"contextualInformation\": {\n                        \"externalUserId\": \"b3e4692d-6772-4fb2-9446-132435465768\",\n                        \"internalUserId\": \"b3e4692d-6772-4fb2-9446-374857684932\",\n                        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                        \"legalEntityId\": \"27263171-94d5-4d82-975c-61d8c41644d0\",\n                        \"origin\": \"actions\"\n                    },\n                    \"originatorAccountCurrency\": \"EUR\",\n                    \"version\": 1\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                    \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                    \"status\": \"ACCEPTED\",\n                    \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n                    \"reasonCode\": \"AC01\",\n                    \"reasonText\": \"Accepted by bank\",\n                    \"originatorAccount\": {\n                        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"externalArrangementId\": \"729190421493794513132\",\n                        \"identification\": {\n                            \"identification\": \"NL53RABO0309349755\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"instructionPriority\": \"NORM\",\n                    \"requestedExecutionDate\": \"2021-07-01\",\n                    \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                    \"transferTransactionInformation\": {\n                        \"instructedAmount\": {\n                            \"amount\": \"5000.55\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"counterpartyAccount\": {\n                            \"identification\": {\n                                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                \"schemeName\": \"IBAN\"\n                            },\n                            \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                            \"externalArrangementId\": \"9669274787995385962\"\n                        },\n                        \"counterparty\": {\n                            \"name\": \"Backbase\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                \"country\": \"NL\"\n                            }\n                        },\n                        \"remittanceInformation\": {\n                            \"type\": \"UNSTRUCTURED\",\n                            \"content\": \"Return a debt\"\n                        }\n                    },\n                    \"actions\": [\"EDIT\"],\n                    \"permissibleActions\": {\n                        \"approve\": false,\n                        \"finalApprove\": false,\n                        \"reject\": false,\n                        \"cancel\": false,\n                        \"delete\": false,\n                        \"edit\": true,\n                        \"create\": true,\n                        \"export\": true\n                    },\n                    \"createdBy\": \"U00243\",\n                    \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                    \"contextualInformation\": {\n                        \"externalUserId\": \"b3e4692d-6772-4fb2-9446-132435465768\",\n                        \"internalUserId\": \"b3e4692d-6772-4fb2-9446-374857684932\",\n                        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                        \"legalEntityId\": \"27263171-94d5-4d82-975c-61d8c41644d0\",\n                        \"origin\": \"actions\"\n                    },\n                    \"originatorAccountCurrency\": \"EUR\",\n                    \"edited\": true,\n                    \"editedPaymentOrder\": {\n                        \"id\": \"df341c28-6714-11e7-907b-a6006ad3asa0\",\n                        \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93df4ce\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                            \"externalArrangementId\": \"729190421493794513132\",\n                            \"identification\": {\n                                \"identification\": \"NL53RABO0309349755\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2021-07-01\",\n                        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                        \"transferTransactionInformation\": {\n                            \"instructedAmount\": {\n                                \"amount\": \"6000\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                    \"schemeName\": \"IBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                \"externalArrangementId\": \"9669274787995385962\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Backbase\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                    \"country\": \"NL\"\n                                }\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"UNSTRUCTURED\",\n                                \"content\": \"Return a debt\"\n                            }\n                        },\n                        \"actions\": [\"EDIT\"],\n                        \"permissibleActions\": {\n                            \"approve\": false,\n                            \"finalApprove\": false,\n                            \"reject\": false,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": true,\n                            \"create\": true\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T15:33:13.452Z\",\n                        \"contextualInformation\": {\n                            \"externalUserId\": \"b3e4692d-6772-4fb2-9446-132435465768\",\n                            \"internalUserId\": \"b3e4692d-6772-4fb2-9446-374857684932\",\n                            \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                            \"legalEntityId\": \"27263171-94d5-4d82-975c-61d8c41644d0\",\n                            \"origin\": \"actions\"\n                        },\n                        \"originatorAccountCurrency\": \"EUR\",\n                        \"edited\": false,\n                        \"version\": 1\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                    \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                    \"status\": \"ENTERED\",\n                    \"originatorAccount\": {\n                        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"externalArrangementId\": \"729190421493794513132\",\n                        \"identification\": {\n                            \"identification\": \"NL53RABO0309349755\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"instructionPriority\": \"NORM\",\n                    \"requestedExecutionDate\": \"2018-07-22\",\n                    \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                    \"transferTransactionInformation\": {\n                        \"instructedAmount\": {\n                            \"amount\": \"5000.55\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"counterpartyAccount\": {\n                            \"identification\": {\n                                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                \"schemeName\": \"IBAN\"\n                            },\n                            \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                            \"externalArrangementId\": \"9669274787995385962\"\n                        },\n                        \"counterparty\": {\n                            \"name\": \"Backbase\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                \"country\": \"NL\"\n                            }\n                        },\n                        \"remittanceInformation\": {\n                            \"type\": \"UNSTRUCTURED\",\n                            \"content\": \"Return a debt\"\n                        }\n                    },\n                    \"version\": 1,\n                    \"actions\": [],\n                    \"createdBy\": \"U00243\",\n                    \"createdAt\": \"2018-07-22T13:44:02Z\",\n                    \"originatorAccountCurrency\": \"EUR\",\n                    \"approvalDetails\": {\n                        \"id\": \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n                        \"userId\": \"b3e4692d-6772-4fb2-9446-bebebebebebe\",\n                        \"externalUserId\": \"davyJones88\",\n                        \"userFullName\": \"Davy Jones\",\n                        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                        \"itemId\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"dataAccessItemId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"resource\": \"Payments\",\n                        \"function\": \"SEPA_CREDIT_TRANSFER\",\n                        \"status\": \"PENDING\",\n                        \"createdAt\": \"2018-07-22T13:44:02Z\",\n                        \"records\": [{\n                                \"id\": \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n                                \"userId\": \"b3e4692d-6772-4fb2-9446-babababababa\",\n                                \"externalUserId\": \"flying-dutchman\",\n                                \"userFullName\": \"Jack Sparrow\",\n                                \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                \"status\": \"APPROVED\",\n                                \"createdAt\": \"2018-07-22T13:44:02Z\"\n                            }],\n                        \"approvalTypes\": [{\n                                \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                \"name\": \"A\",\n                                \"description\": \"1st approval\",\n                                \"rank\": 100\n                            }, {\n                                \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n                                \"name\": \"B\",\n                                \"description\": \"2nd approval\",\n                                \"rank\": 101\n                            }],\n                        \"policy\": {\n                            \"id\": \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n                            \"name\": \"Default policy\",\n                            \"description\": \"A default policy that requires two approvals of different types: A + B\",\n                            \"items\": [{\n                                    \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                    \"numberOfApprovals\": 1\n                                }, {\n                                    \"approvalTypeId\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n                                    \"numberOfApprovals\": 1\n                                }]\n                        },\n                        \"canApprove\": false,\n                        \"canReject\": false,\n                        \"finalApprover\": false\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                    \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                    \"status\": \"ENTERED\",\n                    \"originatorAccount\": {\n                        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"externalArrangementId\": \"729190421493794513132\",\n                        \"identification\": {\n                            \"identification\": \"NL53RABO0309349755\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"instructionPriority\": \"NORM\",\n                    \"requestedExecutionDate\": \"2018-07-22\",\n                    \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                    \"transferTransactionInformation\": {\n                        \"instructedAmount\": {\n                            \"amount\": \"5000.55\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"counterpartyAccount\": {\n                            \"identification\": {\n                                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                \"schemeName\": \"IBAN\"\n                            },\n                            \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                            \"externalArrangementId\": \"9669274787995385962\"\n                        },\n                        \"counterparty\": {\n                            \"name\": \"Backbase\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                \"country\": \"NL\"\n                            }\n                        },\n                        \"remittanceInformation\": {\n                            \"type\": \"UNSTRUCTURED\",\n                            \"content\": \"Return a debt\"\n                        }\n                    },\n                    \"version\": 1,\n                    \"actions\": [],\n                    \"createdBy\": \"U00243\",\n                    \"createdAt\": \"2018-07-22T13:44:02Z\",\n                    \"originatorAccountCurrency\": \"EUR\",\n                    \"approvalDetails\": {\n                        \"id\": \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n                        \"userId\": \"b3e4692d-6772-4fb2-9446-bebebebebebe\",\n                        \"externalUserId\": \"davyJones88\",\n                        \"userFullName\": \"Davy Jones\",\n                        \"serviceAgreementId\": \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n                        \"itemId\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"dataAccessItemId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"resource\": \"Payments\",\n                        \"function\": \"SEPA_CREDIT_TRANSFER\",\n                        \"status\": \"PENDING\",\n                        \"createdAt\": \"2018-07-22T13:44:02Z\",\n                        \"records\": [{\n                                \"id\": \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n                                \"userId\": \"b3e4692d-6772-4fb2-9446-babababababa\",\n                                \"externalUserId\": \"flying-dutchman\",\n                                \"userFullName\": \"Jack Sparrow\",\n                                \"approvalTypeId\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                \"status\": \"APPROVED\",\n                                \"createdAt\": \"2018-07-22T13:44:02Z\"\n                            }],\n                        \"approvalTypes\": [{\n                                \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                \"name\": \"A\",\n                                \"description\": \"1st approval\",\n                                \"rank\": 100\n                            }, {\n                                \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n                                \"name\": \"B\",\n                                \"description\": \"2nd approval\",\n                                \"rank\": 101\n                            }],\n                        \"policy\": {\n                            \"id\": \"8ac202da-273b-4d2b-8aa6-c12f9d9fa736\",\n                            \"name\": \"Or policy\",\n                            \"description\": \"A policy that requires A OR B approvals\",\n                            \"logicalItems\": [{\n                                    \"rank\": 1,\n                                    \"operator\": \"OR\",\n                                    \"items\": [{\n                                            \"approvalType\": {\n                                                \"id\": \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n                                                \"name\": \"A\",\n                                                \"description\": \"Or A approval\",\n                                                \"rank\": 100\n                                            },\n                                            \"numberOfApprovals\": 1\n                                        }, {\n                                            \"approvalType\": {\n                                                \"id\": \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n                                                \"name\": \"B\",\n                                                \"description\": \"Or B approval\",\n                                                \"rank\": 101\n                                            },\n                                            \"numberOfApprovals\": 1\n                                        }]\n                                }]\n                        },\n                        \"canApprove\": false,\n                        \"canReject\": false,\n                        \"finalApprover\": false\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                    \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                    \"status\": \"ACCEPTED\",\n                    \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n                    \"reasonCode\": \"AC01\",\n                    \"reasonText\": \"Accepted by bank\",\n                    \"originatorAccount\": {\n                        \"identification\": {\n                            \"identification\": \"8a48e08c60daa5940160dac699050088\",\n                            \"schemeName\": \"ID\"\n                        }\n                    },\n                    \"requestedExecutionDate\": \"2021-02-15\",\n                    \"paymentType\": \"INTERNATIONAL_TRANSFER\",\n                    \"transferTransactionInformation\": {\n                        \"instructedAmount\": {\n                            \"amount\": \"100\",\n                            \"currencyCode\": \"INR\"\n                        },\n                        \"counterparty\": {\n                            \"name\": \"John Doe\"\n                        },\n                        \"counterpartyAccount\": {\n                            \"identification\": {\n                                \"identification\": \"4902331374\",\n                                \"schemeName\": \"BBAN\"\n                            }\n                        },\n                        \"counterpartyBank\": {\n                            \"bankBranchCode\": \"IDIA000A001\",\n                            \"bic\": \"IBKLINBBXXR\",\n                            \"name\": \"IDBA BANK\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"FINANCIAL PLAZA INDIA\",\n                                \"country\": \"IN\"\n                            }\n                        },\n                        \"correspondentBank\": {\n                            \"bankBranchCode\": \"011000015\",\n                            \"name\": \"FEDERAL RESERVE BANK\"\n                        },\n                        \"intermediaryBank\": {\n                            \"bankBranchCode\": \"122105155\",\n                            \"name\": \"SNSB2886803298\"\n                        },\n                        \"messageToBank\": \"My international payment explanation.\",\n                        \"chargeBearer\": \"SHA\",\n                        \"exchangeRateInformation\": {\n                            \"currencyCode\": \"INR\",\n                            \"rate\": \"89.00\",\n                            \"rateType\": \"AGREED\",\n                            \"contractIdentification\": \"/tbill/2018/T102993\"\n                        },\n                        \"transferFee\": {\n                            \"amount\": \"15\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"purposeOfPayment\": {\n                            \"code\": \"P1004\",\n                            \"description\": \"Legal services\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}/export\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/payment-orders\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"id\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n                        \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n                            \"externalArrangementId\": \"a3f8defe-f447-4475-b5c1-d3971ec7a273\",\n                            \"identification\": {\n                                \"identification\": \"NL81TRIO0212471066\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Smith Bonus Savings\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                            }\n                        },\n                        \"instructionPriority\": \"HIGH\",\n                        \"requestedExecutionDate\": \"2018-08-16\",\n                        \"paymentMode\": \"SINGLE\",\n                        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                        \"transferTransactionInformation\": {\n                            \"endToEndIdentification\": \"Some reference\",\n                            \"instructedAmount\": {\n                                \"amount\": \"749.99\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"MR1300020001010000123456753\",\n                                    \"schemeName\": \"IBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                \"externalArrangementId\": \"9669274787995385962\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"John Smith\"\n                            }\n                        },\n                        \"actions\": [\"APPROVE\", \"FINAL_APPROVE\", \"REJECT\"],\n                        \"permissibleActions\": {\n                            \"approve\": true,\n                            \"finalApprove\": true,\n                            \"reject\": true,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": false,\n                            \"create\": true\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"edited\": true,\n                        \"version\": 1\n                    }, {\n                        \"id\": \"0d0b6350-0ff9-11e8-b642-0ed5f89f718b\",\n                        \"approvalId\": \"518bbd4a-0ff9-11e8-b642-0ed5f89f718b\",\n                        \"status\": \"PROCESSED\",\n                        \"bankStatus\": \"FINISHED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                            \"externalArrangementId\": \"729190421493794513132\",\n                            \"identification\": {\n                                \"identification\": \"NL18INGB0664923638\",\n                                \"schemeName\": \"IBAN\"\n                            },\n                            \"name\": \"Credit Account\"\n                        },\n                        \"originator\": {\n                            \"name\": \"Random Account\",\n                            \"postalAddress\": {\n                                \"country\": \"NL\"\n                            }\n                        },\n                        \"batchBooking\": true,\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2018-08-11\",\n                        \"paymentMode\": \"RECURRING\",\n                        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                        \"schedule\": {\n                            \"transferFrequency\": \"MONTHLY\",\n                            \"on\": 1,\n                            \"startDate\": \"2017-08-12\",\n                            \"every\": \"1\",\n                            \"nextExecutionDate\": \"2018-08-15\",\n                            \"endDate\": \"2018-05-12\"\n                        },\n                        \"transferTransactionInformation\": {\n                            \"instructedAmount\": {\n                                \"amount\": \"100.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"NO9386011117947\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Jack Yellow\"\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"STRUCTURED\",\n                                \"content\": \"<some-xml-tags>structured content with XML</some-xml-tags>\"\n                            }\n                        },\n                        \"actions\": [\"EDIT\"],\n                        \"permissibleActions\": {\n                            \"approve\": false,\n                            \"finalApprove\": false,\n                            \"reject\": false,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": true,\n                            \"create\": true,\n                            \"export\": true\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"edited\": false,\n                        \"version\": 1\n                    }, {\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"approvalId\": \"c383c69f-38bf-4e3e-ad3f-5f58cf971bb1\",\n                        \"status\": \"REJECTED\",\n                        \"bankStatus\": \"ACCOUNT_BLOCKED\",\n                        \"reasonCode\": \"AB01\",\n                        \"reasonText\": \"Account blocked\",\n                        \"errorDescription\": \"Blocked by bank.\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n                            \"externalArrangementId\": \"bcf10f4d-4b2f-4413-9bab-31ff693608b5\",\n                            \"identification\": {\n                                \"identification\": \"FR188388353832IH3CAWFYXAA36\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Mr and Mrs J. Smith\"\n                        },\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2018-07-16\",\n                        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                        \"transferTransactionInformation\": {\n                            \"instructedAmount\": {\n                                \"amount\": \"5000.55\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"LT121000011101001000\",\n                                    \"schemeName\": \"IBAN\"\n                                },\n                                \"name\": \"ABN Amro\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Backbase\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                    \"country\": \"NL\"\n                                }\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"UNSTRUCTURED\",\n                                \"content\": \"Return a debt\"\n                            }\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"edited\": false,\n                        \"version\": 1\n                    }, {\n                        \"id\": \"7d34215a-6714-11e7-907b-a6006ad3dba0\",\n                        \"approvalId\": \"ae01c614-d473-48d6-af7d-f516292b39cb\",\n                        \"status\": \"ACCEPTED\",\n                        \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n                        \"reasonCode\": \"AC01\",\n                        \"reasonText\": \"Accepted by bank\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n                            \"externalArrangementId\": \"a3f8defe-f447-4475-b5c1-d3971ec7a273\",\n                            \"identification\": {\n                                \"identification\": \"NL81TRIO0212471066\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Smith Bonus Savings\"\n                        },\n                        \"batchBooking\": false,\n                        \"requestedExecutionDate\": \"2018-07-23\",\n                        \"paymentMode\": \"SINGLE\",\n                        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                        \"transferTransactionInformation\": {\n                            \"endToEndIdentification\": \"Some reference\",\n                            \"instructedAmount\": {\n                                \"amount\": \"749.99\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"LI21088100002324013AA\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Delivery Service\"\n                            }\n                        },\n                        \"actions\": [\"APPROVE\", \"REJECT\"],\n                        \"permissibleActions\": {\n                            \"approve\": true,\n                            \"finalApprove\": false,\n                            \"reject\": true,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": false,\n                            \"create\": true\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"version\": 1\n                    }, {\n                        \"id\": \"7d342c15-6714-11e7-907b-a6006ad3dba0\",\n                        \"approvalId\": \"ae01a624-d473-48d6-af7d-f516292b39cb\",\n                        \"status\": \"ACCEPTED\",\n                        \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n                        \"reasonCode\": \"AC01\",\n                        \"reasonText\": \"Accepted by bank\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n                            \"externalArrangementId\": \"bcf10f4d-4b2f-4413-9bab-31ff693608b5\",\n                            \"identification\": {\n                                \"identification\": \"FR188388353832IH3CAWFYXAA36\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Mr and Mrs J. Smith\"\n                        },\n                        \"batchBooking\": false,\n                        \"requestedExecutionDate\": \"2018-06-12\",\n                        \"paymentMode\": \"SINGLE\",\n                        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                        \"transferTransactionInformation\": {\n                            \"endToEndIdentification\": \"Some reference\",\n                            \"instructedAmount\": {\n                                \"amount\": \"99.99\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"MR1300020001010000123456753\",\n                                    \"schemeName\": \"IBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                \"externalArrangementId\": \"9669274787995385962\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"John Smith\"\n                            }\n                        },\n                        \"actions\": [\"APPROVE\", \"REJECT\"],\n                        \"permissibleActions\": {\n                            \"approve\": true,\n                            \"finalApprove\": false,\n                            \"reject\": true,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": false,\n                            \"create\": true\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"edited\": false,\n                        \"version\": 1\n                    }, {\n                        \"id\": \"7d341a2a-6714-11e7-907b-a6006ad3dba0\",\n                        \"approvalId\": \"264b69e4-3df0-49c1-8cda-e2bb437461e8\",\n                        \"status\": \"ACCEPTED\",\n                        \"bankStatus\": \"FINISHED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n                            \"externalArrangementId\": \"bcf10f4d-4b2f-4413-9bab-31ff693608b5\",\n                            \"identification\": {\n                                \"identification\": \"FR188388353832IH3CAWFYXAA36\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Mr and Mrs J. Smith\"\n                        },\n                        \"batchBooking\": true,\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2018-08-11\",\n                        \"paymentMode\": \"RECURRING\",\n                        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                        \"schedule\": {\n                            \"transferFrequency\": \"MONTHLY\",\n                            \"on\": 1,\n                            \"startDate\": \"2017-08-12\",\n                            \"every\": \"1\",\n                            \"nextExecutionDate\": \"2018-08-15\",\n                            \"endDate\": \"2018-05-12\"\n                        },\n                        \"transferTransactionInformation\": {\n                            \"instructedAmount\": {\n                                \"amount\": \"133.33\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"NO9386011117947\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Jack Yellow\"\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"STRUCTURED\",\n                                \"content\": \"<some-xml-tags>structured content with XML</some-xml-tags>\"\n                            }\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"edited\": false,\n                        \"version\": 9312\n                    }, {\n                        \"id\": \"5cea81b2-0ff9-11e8-b642-0ed5f89f718b\",\n                        \"approvalId\": \"61624e82-0ff9-11e8-b642-0ed5f89f718b\",\n                        \"status\": \"ACCEPTED\",\n                        \"bankStatus\": \"FINISHED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n                            \"externalArrangementId\": \"a3f8defe-f447-4475-b5c1-d3971ec7a273\",\n                            \"identification\": {\n                                \"identification\": \"NL81TRIO0212471066\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Smith Bonus Savings\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                            }\n                        },\n                        \"batchBooking\": true,\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2018-08-11\",\n                        \"paymentMode\": \"RECURRING\",\n                        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                        \"schedule\": {\n                            \"transferFrequency\": \"MONTHLY\",\n                            \"on\": 1,\n                            \"startDate\": \"2017-08-12\",\n                            \"every\": \"1\",\n                            \"nextExecutionDate\": \"2018-08-15\",\n                            \"endDate\": \"2018-05-12\"\n                        },\n                        \"transferTransactionInformation\": {\n                            \"instructedAmount\": {\n                                \"amount\": \"166.66\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"HU42117730161111101800000000\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Jack Brown\"\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"STRUCTURED\",\n                                \"content\": \"<some-xml-tags>structured content with XML</some-xml-tags>\"\n                            }\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"version\": 42,\n                        \"edited\": false,\n                        \"originatingAccountCurrency\": \"EUR\"\n                    }, {\n                        \"id\": \"06db9298-189b-11e8-accf-0ed5f89f718b\",\n                        \"approvalId\": \"11863018-189b-11e8-accf-0ed5f89f718b\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                            \"identification\": {\n                                \"identification\": \"0260-0959-3\",\n                                \"schemeName\": \"BBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"John Doe\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"228 Park Ave S\",\n                                \"town\": \"New York\"\n                            }\n                        },\n                        \"batchBooking\": false,\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2017-08-12\",\n                        \"paymentMode\": \"RECURRING\",\n                        \"paymentType\": \"US_FOREIGN_WIRE\",\n                        \"schedule\": {\n                            \"transferFrequency\": \"MONTHLY\",\n                            \"on\": 1,\n                            \"startDate\": \"2017-08-12\",\n                            \"every\": \"1\",\n                            \"nextExecutionDate\": \"2017-09-12\",\n                            \"endDate\": \"2018-05-12\"\n                        },\n                        \"transferTransactionInformation\": {\n                            \"endToEndIdentification\": \"TRNSCT REF 1234567890\",\n                            \"instructedAmount\": {\n                                \"amount\": \"104.66\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"NL91 ABNA 0417 1643 00\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Jack Brown\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"2589 Peaceful Lane\",\n                                    \"postCode\": \"44128\",\n                                    \"town\": \"Warrensville Heights\",\n                                    \"country\": \"US\"\n                                }\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"UNSTRUCTURED\",\n                                \"content\": \"Unstructured content\"\n                            },\n                            \"counterpartyBank\": {\n                                \"bankBranchCode\": \"082000549\",\n                                \"name\": \"Morgan Chase\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"4789 Vernon Street\",\n                                    \"postCode\": \"92028\",\n                                    \"town\": \"Fallbrook\",\n                                    \"country\": \"US\"\n                                }\n                            },\n                            \"correspondentBank\": {\n                                \"bankBranchCode\": \"122105155\",\n                                \"name\": \"Bank of America\"\n                            },\n                            \"intermediaryBank\": {\n                                \"bic\": \"DABAIE2D\",\n                                \"bankBranchCode\": \"102000021\",\n                                \"name\": \"SNSB\"\n                            },\n                            \"messageToBank\": \"My us international wire payment explanation.\",\n                            \"targetCurrency\": \"EUR\"\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"edited\": false,\n                        \"version\": 42\n                    }, {\n                        \"id\": \"fa088818-623a-4260-bc46-1ff678de8dae\",\n                        \"approvalId\": \"8605dc85-726c-4795-9b55-ff698ad2d1e4\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"07642680-2b6f-11e8-b467-0ed5f89f718b\",\n                            \"identification\": {\n                                \"identification\": \"00400440116243\",\n                                \"schemeName\": \"BBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Mr John Usmith\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, New York\"\n                            }\n                        },\n                        \"instructionPriority\": \"HIGH\",\n                        \"requestedExecutionDate\": \"2018-08-16\",\n                        \"paymentMode\": \"SINGLE\",\n                        \"paymentType\": \"INTERNAL\",\n                        \"transferTransactionInformation\": {\n                            \"endToEndIdentification\": \"Some reference\",\n                            \"instructedAmount\": {\n                                \"amount\": \"749.99\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"accountType\": \"SAVINGS\",\n                                \"identification\": {\n                                    \"identification\": \"3242342348899\",\n                                    \"schemeName\": \"BBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"John Doe\"\n                            }\n                        },\n                        \"actions\": [\"APPROVE\", \"REJECT\"],\n                        \"permissibleActions\": {\n                            \"approve\": true,\n                            \"finalApprove\": false,\n                            \"reject\": true,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": false,\n                            \"create\": true\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"edited\": false,\n                        \"version\": 1\n                    }, {\n                        \"id\": \"f58a410e-469c-41f1-8c51-21b6d24bd3c1\",\n                        \"approvalId\": \"7527c230-01a7-41b8-a021-dc29aca98fe3\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"07642680-2b6f-11e8-b467-0ed5f89f718b\",\n                            \"identification\": {\n                                \"identification\": \"00400440116243\",\n                                \"schemeName\": \"BBAN\"\n                            }\n                        },\n                        \"originator\": {\n                            \"name\": \"Mr John Usmith\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Los Angeles\"\n                            }\n                        },\n                        \"instructionPriority\": \"HIGH\",\n                        \"requestedExecutionDate\": \"2018-08-16\",\n                        \"paymentMode\": \"SINGLE\",\n                        \"paymentType\": \"INTERNAL\",\n                        \"transferTransactionInformation\": {\n                            \"endToEndIdentification\": \"Some reference\",\n                            \"instructedAmount\": {\n                                \"amount\": \"134\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"accountType\": \"CHECKING\",\n                                \"identification\": {\n                                    \"identification\": \"3242342123899\",\n                                    \"schemeName\": \"BBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Dan Brown\"\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"UNSTRUCTURED\",\n                                \"content\": \"Return a debt`\"\n                            }\n                        },\n                        \"actions\": [\"APPROVE\", \"REJECT\", \"EDIT\"],\n                        \"permissibleActions\": {\n                            \"approve\": true,\n                            \"finalApprove\": false,\n                            \"reject\": true,\n                            \"cancel\": false,\n                            \"delete\": false,\n                            \"edit\": true,\n                            \"create\": true\n                        },\n                        \"createdBy\": \"U00243\",\n                        \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                        \"edited\": false,\n                        \"version\": 1\n                    }]\n            },\n            {\n                status: 200,\n                body: [{\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                        \"status\": \"ACCEPTED\",\n                        \"bankStatus\": \"ACCEPTEDTECHNICALVALIDATION\",\n                        \"reasonCode\": \"AC01\",\n                        \"reasonText\": \"Accepted by bank\",\n                        \"originatorAccount\": {\n                            \"identification\": {\n                                \"identification\": \"8a48e08c60daa5940160dac699050088\",\n                                \"schemeName\": \"ID\"\n                            }\n                        },\n                        \"requestedExecutionDate\": \"2021-02-15\",\n                        \"paymentType\": \"INTERNATIONAL_TRANSFER\",\n                        \"transferTransactionInformation\": {\n                            \"instructedAmount\": {\n                                \"amount\": \"29.99\",\n                                \"currencyCode\": \"INR\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"John Doe\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"4902331374\",\n                                    \"schemeName\": \"BBAN\"\n                                }\n                            },\n                            \"counterpartyBank\": {\n                                \"bankBranchCode\": \"IDIA000A001\",\n                                \"bic\": \"IBKLINBBXXR\",\n                                \"name\": \"IDBA BANK IN\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"FINANCIAL PLAZA INDIA\",\n                                    \"country\": \"IN\"\n                                }\n                            },\n                            \"correspondentBank\": {\n                                \"bankBranchCode\": \"011000015\",\n                                \"name\": \"FEDERAL RESERVE BANK\"\n                            },\n                            \"intermediaryBank\": {\n                                \"bankBranchCode\": \"122105155\",\n                                \"name\": \"SNSB2886803298\"\n                            },\n                            \"messageToBank\": \"My international payment explanation.\",\n                            \"chargeBearer\": \"SHA\",\n                            \"exchangeRateInformation\": {\n                                \"currencyCode\": \"INR\",\n                                \"rate\": \"89.00\",\n                                \"rateType\": \"AGREED\",\n                                \"contractIdentification\": \"/tbill/2018/T102993\"\n                            },\n                            \"transferFee\": {\n                                \"amount\": \"0.29\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"purposeOfPayment\": {\n                                \"code\": \"P1004\"\n                            }\n                        }\n                    }]\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Payment type group invalid. Must be one of [credit, debit]\"\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}/progress-status\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"progressStatus\": \"CONFIRMATION_PENDING\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/payment-orders/rate\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"rate\": 1.07\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}/cancel\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"accepted\": true\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/payment-orders\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\"\n                }\n            },\n            {\n                status: 201,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\",\n                    \"approvalStatus\": \"APPROVED\"\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\"\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\",\n                    \"approvalStatus\": \"APPROVED\"\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\",\n                    \"exportAllowed\": true\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Limits has been breached, check the report for more details\",\n                    \"payment\": {\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                            \"identification\": {\n                                \"identification\": \"NL53RABO0309349755\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2017-07-16\",\n                        \"transferTransactionInformation\": {\n                            \"name\": \"Jack Jackson\",\n                            \"instructedAmount\": {\n                                \"amount\": \"5000.55\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                    \"schemeName\": \"IBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Backbase\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"Jacob Bontiusplaats 9\",\n                                    \"zipcode\": \"1018LL\",\n                                    \"city\": \"Amsterdam\",\n                                    \"country\": \"NL\"\n                                }\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"UNSTRUCTURED\",\n                                \"content\": \"Return a debt\"\n                            }\n                        },\n                        \"version\": 0\n                    },\n                    \"checkTime\": \"2017-01-31T12:12:12Z\",\n                    \"breachReport\": [{\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Service Agreement\",\n                                    \"description\": \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"user-BBID\": \"oleksii\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"THRESHOLD\",\n                                    \"breachedLimitType\": \"PERIODIC\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2017-01-31T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"250.0\",\n                                    \"currentThreshold\": \"499.9\"\n                                }, {\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"monthly\",\n                                        \"startTime\": \"2017-01-01T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"9950.0\",\n                                    \"currentThreshold\": \"10000.0\"\n                                }]\n                        }, {\n                            \"user-BBID\": \"oleksii\",\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2017-01-31T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"500.0\",\n                                    \"currentThreshold\": \"1000.0\"\n                                }]\n                        }, {\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Function Access Group\",\n                                    \"description\": \"Payments approvers\"\n                                }, {\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Function\",\n                                    \"description\": \"Domestic payments\"\n                                }, {\n                                    \"ref\": \"Approve\",\n                                    \"type\": \"Privilege\",\n                                    \"description\": \"Approve\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"THRESHOLD\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2017-01-31T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"250.0\",\n                                    \"currentThreshold\": \"499.9\"\n                                }]\n                        }, {\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Legal Entity\",\n                                    \"description\": \"Kuhic, Gislason and Kemmer\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"quarterly\",\n                                        \"startTime\": \"2017-01-01T00:00:00Z\",\n                                        \"endTime\": \"2017-03-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"99950.0\",\n                                    \"currentThreshold\": \"100000.0\"\n                                }]\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/payment-orders/validate\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"originatorAccount\": {\n                        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"externalArrangementId\": \"729190421493794513132\",\n                        \"identification\": {\n                            \"identification\": \"NL53RABO0309349755\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"originator\": {\n                        \"name\": \"Credit Account\",\n                        \"postalAddress\": {\n                            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                        }\n                    },\n                    \"instructionPriority\": \"NORM\",\n                    \"requestedExecutionDate\": \"2017-07-16\",\n                    \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                    \"isIntraLegalEntityPaymentOrder\": false,\n                    \"canApprove\": false,\n                    \"finalApprover\": false,\n                    \"transferTransactionInformation\": {\n                        \"instructedAmount\": {\n                            \"amount\": \"5000.55\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"counterpartyAccount\": {\n                            \"identification\": {\n                                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                \"schemeName\": \"IBAN\"\n                            },\n                            \"name\": \"ABN Amro\"\n                        },\n                        \"counterparty\": {\n                            \"name\": \"Backbase\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                \"country\": \"NL\"\n                            }\n                        },\n                        \"remittanceInformation\": {\n                            \"type\": \"UNSTRUCTURED\",\n                            \"content\": \"Return a debt\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"originatorAccount\": {\n                        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"externalArrangementId\": \"729190421493794513132\",\n                        \"identification\": {\n                            \"identification\": \"NL53RABO0309349755\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"originator\": {\n                        \"name\": \"Credit Account\",\n                        \"postalAddress\": {\n                            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                        }\n                    },\n                    \"instructionPriority\": \"NORM\",\n                    \"requestedExecutionDate\": \"2017-07-16\",\n                    \"paymentType\": \"SEPA_CT_ILE\",\n                    \"isIntraLegalEntityPaymentOrder\": true,\n                    \"canApprove\": false,\n                    \"finalApprover\": false,\n                    \"transferTransactionInformation\": {\n                        \"instructedAmount\": {\n                            \"amount\": \"5000.55\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"counterpartyAccount\": {\n                            \"identification\": {\n                                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                \"schemeName\": \"IBAN\"\n                            },\n                            \"name\": \"ABN Amro\"\n                        },\n                        \"counterparty\": {\n                            \"name\": \"Backbase\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                \"country\": \"NL\"\n                            }\n                        },\n                        \"remittanceInformation\": {\n                            \"type\": \"UNSTRUCTURED\",\n                            \"content\": \"Return a debt\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"originatorAccount\": {\n                        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"externalArrangementId\": \"729190421493794513132\",\n                        \"identification\": {\n                            \"identification\": \"NL53RABO0309349755\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"originator\": {\n                        \"name\": \"Credit Account\",\n                        \"postalAddress\": {\n                            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                        }\n                    },\n                    \"instructionPriority\": \"NORM\",\n                    \"requestedExecutionDate\": \"2017-07-16\",\n                    \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                    \"isIntraLegalEntityPaymentOrder\": false,\n                    \"canApprove\": true,\n                    \"finalApprover\": false,\n                    \"transferTransactionInformation\": {\n                        \"instructedAmount\": {\n                            \"amount\": \"5000.55\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"counterpartyAccount\": {\n                            \"identification\": {\n                                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                \"schemeName\": \"IBAN\"\n                            },\n                            \"name\": \"ABN Amro\"\n                        },\n                        \"counterparty\": {\n                            \"name\": \"Backbase\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                \"country\": \"NL\"\n                            }\n                        },\n                        \"remittanceInformation\": {\n                            \"type\": \"UNSTRUCTURED\",\n                            \"content\": \"Return a debt\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"originatorAccount\": {\n                        \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                        \"externalArrangementId\": \"729190421493794513132\",\n                        \"identification\": {\n                            \"identification\": \"NL53RABO0309349755\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"originator\": {\n                        \"name\": \"Credit Account\",\n                        \"postalAddress\": {\n                            \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                        }\n                    },\n                    \"instructionPriority\": \"NORM\",\n                    \"requestedExecutionDate\": \"2017-07-16\",\n                    \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                    \"isIntraLegalEntityPaymentOrder\": false,\n                    \"canApprove\": true,\n                    \"finalApprover\": true,\n                    \"transferTransactionInformation\": {\n                        \"instructedAmount\": {\n                            \"amount\": \"5000.55\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"counterpartyAccount\": {\n                            \"identification\": {\n                                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                \"schemeName\": \"IBAN\"\n                            },\n                            \"name\": \"ABN Amro\"\n                        },\n                        \"counterparty\": {\n                            \"name\": \"Backbase\",\n                            \"postalAddress\": {\n                                \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                \"country\": \"NL\"\n                            }\n                        },\n                        \"remittanceInformation\": {\n                            \"type\": \"UNSTRUCTURED\",\n                            \"content\": \"Return a debt\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}/approvals\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 202,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\"\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\",\n                    \"approvalStatus\": \"APPROVED\"\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"approvalStatus\": \"approvalStatus\",\n                    \"reasonText\": \"reasonText\",\n                    \"nextExecutionDate\": \"2000-01-23\",\n                    \"errorDescription\": \"errorDescription\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"exportAllowed\": true,\n                    \"bankStatus\": \"bankStatus\",\n                    \"paymentSetupId\": \"paymentSetupId\",\n                    \"transferFee\": {\n                        \"amount\": \"amount\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"exchangeRateInformation\": {\n                        \"rateType\": \"ACTUAL\",\n                        \"contractIdentification\": \"contractIdentification\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"rate\": \"rate\",\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"id\": \"id\",\n                    \"reasonCode\": \"reasonCode\",\n                    \"paymentSubmissionId\": \"paymentSubmissionId\"\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Limits has been breached, check the report for more details\",\n                    \"payment\": {\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                            \"identification\": {\n                                \"identification\": \"NL53RABO0309349755\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2017-07-16\",\n                        \"transferTransactionInformation\": {\n                            \"name\": \"Jack Jackson\",\n                            \"instructedAmount\": {\n                                \"amount\": \"5000.55\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                    \"schemeName\": \"IBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Backbase\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"Jacob Bontiusplaats 9\",\n                                    \"zipcode\": \"1018LL\",\n                                    \"city\": \"Amsterdam\",\n                                    \"country\": \"NL\"\n                                }\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"UNSTRUCTURED\",\n                                \"content\": \"Return a debt\"\n                            }\n                        },\n                        \"version\": 0\n                    },\n                    \"checkTime\": \"2017-01-31T12:12:12Z\",\n                    \"breachReport\": [{\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Service Agreement\",\n                                    \"description\": \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"user-BBID\": \"oleksii\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"THRESHOLD\",\n                                    \"breachedLimitType\": \"PERIODIC\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2017-01-31T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"250.0\",\n                                    \"currentThreshold\": \"499.9\"\n                                }, {\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"monthly\",\n                                        \"startTime\": \"2017-01-01T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"9950.0\",\n                                    \"currentThreshold\": \"10000.0\"\n                                }]\n                        }, {\n                            \"user-BBID\": \"oleksii\",\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2017-01-31T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"500.0\",\n                                    \"currentThreshold\": \"1000.0\"\n                                }]\n                        }, {\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Function Access Group\",\n                                    \"description\": \"Payments approvers\"\n                                }, {\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Function\",\n                                    \"description\": \"Domestic payments\"\n                                }, {\n                                    \"ref\": \"Approve\",\n                                    \"type\": \"Privilege\",\n                                    \"description\": \"Approve\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"THRESHOLD\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2017-01-31T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"250.0\",\n                                    \"currentThreshold\": \"499.9\"\n                                }]\n                        }, {\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Legal Entity\",\n                                    \"description\": \"Kuhic, Gislason and Kemmer\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"quarterly\",\n                                        \"startTime\": \"2017-01-01T00:00:00Z\",\n                                        \"endTime\": \"2017-03-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"99950.0\",\n                                    \"currentThreshold\": \"100000.0\"\n                                }]\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"challenges\": [{\n                            \"challengeType\": \"reauth\",\n                            \"acrValues\": \"txn-signature-silver txn-signature-gold\",\n                            \"scope\": \"confirmation:3ea92d30-f460-4dde-b40a-e83a2f266a3a\"\n                        }],\n                    \"data\": {\n                        \"approvalId\": \"9E2F9AC5-DD09-40C0-805E-147B0C565901\",\n                        \"approvalRecordId\": \"DEDFDF28-690E-4B83-8BAF-C8ABF31EF70B\",\n                        \"confirmationType\": \"approve-payment\",\n                        \"paymentOrderId\": \"a3a2e499-bd58-4077-9991-19b2559f4796\",\n                        \"amount\": \"12.95\",\n                        \"currency\": \"EUR\",\n                        \"counterpartyAccount\": \"NL06ABNA9691012820\",\n                        \"counterpartyName\": \"Jouk\"\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/payment-orders/bulk-approvals\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"approvalStatus\": \"APPROVED\",\n                    \"paymentOrders\": [{\n                            \"paymentOrderId\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n                            \"paymentOrder\": {\n                                \"id\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n                                \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                                \"status\": \"ENTERED\",\n                                \"originatorAccount\": {\n                                    \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                                    \"externalArrangementId\": \"729190421493794513132\",\n                                    \"identification\": {\n                                        \"identification\": \"0260-0959-3\",\n                                        \"schemeName\": \"BBAN\"\n                                    }\n                                },\n                                \"originator\": {\n                                    \"name\": \"Smith Bonus Savings\",\n                                    \"postalAddress\": {\n                                        \"addressLine1\": \"228 Park Ave S\",\n                                        \"town\": \"New York\"\n                                    }\n                                },\n                                \"instructionPriority\": \"HIGH\",\n                                \"requestedExecutionDate\": \"2017-08-16\",\n                                \"paymentMode\": \"SINGLE\",\n                                \"paymentType\": \"US_FOREIGN_WIRE\",\n                                \"transferTransactionInformation\": {\n                                    \"endToEndIdentification\": \"Some reference\",\n                                    \"instructedAmount\": {\n                                        \"amount\": \"749.99\",\n                                        \"currencyCode\": \"EUR\"\n                                    },\n                                    \"counterpartyAccount\": {\n                                        \"identification\": {\n                                            \"identification\": \"MR1300020001010000123456753\",\n                                            \"schemeName\": \"IBAN\"\n                                        },\n                                        \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                        \"externalArrangementId\": \"9669274787995385962\"\n                                    },\n                                    \"counterparty\": {\n                                        \"name\": \"John Smith\",\n                                        \"postalAddress\": {\n                                            \"addressLine1\": \"2589 Peaceful Lane\",\n                                            \"postCode\": \"44128\",\n                                            \"town\": \"Warrensville Heights\",\n                                            \"country\": \"US\"\n                                        }\n                                    },\n                                    \"remittanceInformation\": {\n                                        \"type\": \"UNSTRUCTURED\",\n                                        \"content\": \"Unstructured content\"\n                                    },\n                                    \"counterpartyBank\": {\n                                        \"bankBranchCode\": \"082000549\",\n                                        \"name\": \"Morgan Chase\",\n                                        \"postalAddress\": {\n                                            \"addressLine1\": \"4789 Vernon Street\",\n                                            \"postCode\": \"92028\",\n                                            \"town\": \"Fallbrook\",\n                                            \"country\": \"US\"\n                                        }\n                                    },\n                                    \"correspondentBank\": {\n                                        \"bankBranchCode\": \"122105155\",\n                                        \"name\": \"Bank of America\"\n                                    },\n                                    \"intermediaryBank\": {\n                                        \"bic\": \"DABAIE2D\",\n                                        \"bankBranchCode\": \"102000021\",\n                                        \"name\": \"SNSB\"\n                                    },\n                                    \"messageToBank\": \"My us international wire payment explanation.\",\n                                    \"targetCurrency\": \"EUR\"\n                                },\n                                \"actions\": [\"APPROVE\"],\n                                \"permissibleActions\": {\n                                    \"approve\": true,\n                                    \"finalApprove\": false,\n                                    \"reject\": false,\n                                    \"cancel\": false,\n                                    \"delete\": false,\n                                    \"edit\": false,\n                                    \"create\": true,\n                                    \"export\": false\n                                },\n                                \"createdBy\": \"U00243\",\n                                \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                                \"version\": 2\n                            },\n                            \"approvalStatus\": \"PENDING\",\n                            \"status\": {\n                                \"code\": \"OK\"\n                            }\n                        }, {\n                            \"paymentOrderId\": \"d2ff7c65-24ae-430f-92b9-c7ca5b143081\",\n                            \"paymentOrder\": {\n                                \"id\": \"d2ff7c65-24ae-430f-92b9-c7ca5b143081\",\n                                \"approvalId\": \"2d9367dc-8af1-411d-81f6-9e28c46dd189\",\n                                \"status\": \"REJECTED\",\n                                \"originatorAccount\": {\n                                    \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                                    \"externalArrangementId\": \"729190421493794513132\",\n                                    \"identification\": {\n                                        \"identification\": \"NL81TRIO0212471066\",\n                                        \"schemeName\": \"IBAN\"\n                                    }\n                                },\n                                \"originator\": {\n                                    \"name\": \"Smith Bonus Savings\",\n                                    \"postalAddress\": {\n                                        \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                                    }\n                                },\n                                \"instructionPriority\": \"HIGH\",\n                                \"requestedExecutionDate\": \"2017-08-16\",\n                                \"paymentMode\": \"SINGLE\",\n                                \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                                \"transferTransactionInformation\": {\n                                    \"endToEndIdentification\": \"Some reference\",\n                                    \"instructedAmount\": {\n                                        \"amount\": \"749.99\",\n                                        \"currencyCode\": \"EUR\"\n                                    },\n                                    \"counterpartyAccount\": {\n                                        \"identification\": {\n                                            \"identification\": \"MR1300020001010000123456753\",\n                                            \"schemeName\": \"IBAN\"\n                                        },\n                                        \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                        \"externalArrangementId\": \"9669274787995385962\"\n                                    },\n                                    \"counterparty\": {\n                                        \"name\": \"John Smith\"\n                                    }\n                                },\n                                \"actions\": [],\n                                \"createdBy\": \"U00243\",\n                                \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                                \"version\": 2\n                            },\n                            \"approvalStatus\": \"REJECTED\",\n                            \"status\": {\n                                \"code\": \"ERROR\",\n                                \"message\": \"Not allowed to update this approval, status is final\",\n                                \"errors\": [{\n                                        \"message\": \"Not allowed to update this approval, status is final\",\n                                        \"key\": \"paymentorder.api.Approval.NotAllowed\",\n                                        \"context\": {\n                                            \"status\": \"REJECTED\"\n                                        }\n                                    }]\n                            }\n                        }, {\n                            \"paymentOrderId\": \"9a20be2b-b8f3-45dc-a625-55635235de4c\",\n                            \"status\": {\n                                \"code\": \"ERROR\",\n                                \"message\": \"Payment not found\",\n                                \"errors\": [{\n                                        \"message\": \"Payment not found\",\n                                        \"key\": \"paymentorder.api.PaymentOrder.NotFound\"\n                                    }]\n                            }\n                        }, {\n                            \"paymentOrderId\": \"c7653c55-ee9b-4f65-96db-cbda76efd3ae\",\n                            \"paymentOrder\": {\n                                \"id\": \"c7653c55-ee9b-4f65-96db-cbda76efd3ae\",\n                                \"approvalId\": \"fe383f48-df2e-4b17-a0d2-3443b2e3738c\",\n                                \"status\": \"ENTERED\",\n                                \"originatorAccount\": {\n                                    \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                                    \"externalArrangementId\": \"729190421493794513132\",\n                                    \"identification\": {\n                                        \"identification\": \"NL81TRIO0212471066\",\n                                        \"schemeName\": \"IBAN\"\n                                    }\n                                },\n                                \"originator\": {\n                                    \"name\": \"Smith Bonus Savings\",\n                                    \"postalAddress\": {\n                                        \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                                    }\n                                },\n                                \"instructionPriority\": \"HIGH\",\n                                \"requestedExecutionDate\": \"2017-08-16\",\n                                \"paymentMode\": \"SINGLE\",\n                                \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                                \"transferTransactionInformation\": {\n                                    \"endToEndIdentification\": \"Some reference\",\n                                    \"instructedAmount\": {\n                                        \"amount\": \"749.99\",\n                                        \"currencyCode\": \"EUR\"\n                                    },\n                                    \"counterpartyAccount\": {\n                                        \"identification\": {\n                                            \"identification\": \"MR1300020001010000123456753\",\n                                            \"schemeName\": \"IBAN\"\n                                        },\n                                        \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                        \"externalArrangementId\": \"9669274787995385962\"\n                                    },\n                                    \"counterparty\": {\n                                        \"name\": \"John Smith\"\n                                    }\n                                },\n                                \"actions\": [],\n                                \"createdBy\": \"U00243\",\n                                \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                                \"version\": 2\n                            },\n                            \"status\": {\n                                \"code\": \"ERROR\",\n                                \"message\": \"Approval not found\",\n                                \"errors\": [{\n                                        \"message\": \"Approval not found\",\n                                        \"key\": \"paymentorder.api.Approval.NotFound\"\n                                    }]\n                            }\n                        }],\n                    \"successCount\": 1,\n                    \"failCount\": 3\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"approvalStatus\": \"APPROVED\",\n                    \"paymentOrders\": [{\n                            \"paymentOrderId\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n                            \"paymentOrder\": {\n                                \"id\": \"7d34169c-6714-11e7-907b-a6006ad3dba0\",\n                                \"approvalId\": \"49dad7ab-604b-407a-ba47-a61ad93f31ce\",\n                                \"status\": \"ENTERED\",\n                                \"originatorAccount\": {\n                                    \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                                    \"externalArrangementId\": \"729190421493794513132\",\n                                    \"identification\": {\n                                        \"identification\": \"0260-0959-3\",\n                                        \"schemeName\": \"BBAN\"\n                                    }\n                                },\n                                \"originator\": {\n                                    \"name\": \"Smith Bonus Savings\",\n                                    \"postalAddress\": {\n                                        \"addressLine1\": \"228 Park Ave S\",\n                                        \"town\": \"New York\"\n                                    }\n                                },\n                                \"instructionPriority\": \"HIGH\",\n                                \"requestedExecutionDate\": \"2017-08-16\",\n                                \"paymentMode\": \"SINGLE\",\n                                \"paymentType\": \"US_FOREIGN_WIRE\",\n                                \"transferTransactionInformation\": {\n                                    \"endToEndIdentification\": \"Some reference\",\n                                    \"instructedAmount\": {\n                                        \"amount\": \"749.99\",\n                                        \"currencyCode\": \"EUR\"\n                                    },\n                                    \"counterpartyAccount\": {\n                                        \"identification\": {\n                                            \"identification\": \"MR1300020001010000123456753\",\n                                            \"schemeName\": \"IBAN\"\n                                        },\n                                        \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                        \"externalArrangementId\": \"9669274787995385962\"\n                                    },\n                                    \"counterparty\": {\n                                        \"name\": \"John Smith\",\n                                        \"postalAddress\": {\n                                            \"addressLine1\": \"2589 Peaceful Lane\",\n                                            \"postCode\": \"44128\",\n                                            \"town\": \"Warrensville Heights\",\n                                            \"country\": \"US\"\n                                        }\n                                    },\n                                    \"remittanceInformation\": {\n                                        \"type\": \"UNSTRUCTURED\",\n                                        \"content\": \"Unstructured content\"\n                                    },\n                                    \"counterpartyBank\": {\n                                        \"bankBranchCode\": \"082000549\",\n                                        \"name\": \"Morgan Chase\",\n                                        \"postalAddress\": {\n                                            \"addressLine1\": \"4789 Vernon Street\",\n                                            \"postCode\": \"92028\",\n                                            \"town\": \"Fallbrook\",\n                                            \"country\": \"US\"\n                                        }\n                                    },\n                                    \"correspondentBank\": {\n                                        \"bankBranchCode\": \"122105155\",\n                                        \"name\": \"Bank of America\"\n                                    },\n                                    \"intermediaryBank\": {\n                                        \"bic\": \"DABAIE2D\",\n                                        \"bankBranchCode\": \"102000021\",\n                                        \"name\": \"SNSB\"\n                                    },\n                                    \"messageToBank\": \"My us international wire payment explanation.\",\n                                    \"targetCurrency\": \"EUR\"\n                                },\n                                \"actions\": [\"APPROVE\"],\n                                \"permissibleActions\": {\n                                    \"approve\": true,\n                                    \"finalApprove\": false,\n                                    \"reject\": false,\n                                    \"cancel\": false,\n                                    \"delete\": false,\n                                    \"edit\": false,\n                                    \"create\": true,\n                                    \"export\": false\n                                },\n                                \"createdBy\": \"U00243\",\n                                \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                                \"version\": 2\n                            },\n                            \"approvalStatus\": \"PENDING\",\n                            \"status\": {\n                                \"code\": \"OK\"\n                            }\n                        }, {\n                            \"paymentOrderId\": \"d2ff7c65-24ae-430f-92b9-c7ca5b143081\",\n                            \"paymentOrder\": {\n                                \"id\": \"d2ff7c65-24ae-430f-92b9-c7ca5b143081\",\n                                \"approvalId\": \"2d9367dc-8af1-411d-81f6-9e28c46dd189\",\n                                \"status\": \"REJECTED\",\n                                \"originatorAccount\": {\n                                    \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                                    \"externalArrangementId\": \"729190421493794513132\",\n                                    \"identification\": {\n                                        \"identification\": \"NL81TRIO0212471066\",\n                                        \"schemeName\": \"IBAN\"\n                                    }\n                                },\n                                \"originator\": {\n                                    \"name\": \"Smith Bonus Savings\",\n                                    \"postalAddress\": {\n                                        \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                                    }\n                                },\n                                \"instructionPriority\": \"HIGH\",\n                                \"requestedExecutionDate\": \"2017-08-16\",\n                                \"paymentMode\": \"SINGLE\",\n                                \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                                \"transferTransactionInformation\": {\n                                    \"endToEndIdentification\": \"Some reference\",\n                                    \"instructedAmount\": {\n                                        \"amount\": \"749.99\",\n                                        \"currencyCode\": \"EUR\"\n                                    },\n                                    \"counterpartyAccount\": {\n                                        \"identification\": {\n                                            \"identification\": \"MR1300020001010000123456753\",\n                                            \"schemeName\": \"IBAN\"\n                                        },\n                                        \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                        \"externalArrangementId\": \"9669274787995385962\"\n                                    },\n                                    \"counterparty\": {\n                                        \"name\": \"John Smith\"\n                                    }\n                                },\n                                \"actions\": [],\n                                \"createdBy\": \"U00243\",\n                                \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                                \"version\": 2\n                            },\n                            \"approvalStatus\": \"REJECTED\",\n                            \"status\": {\n                                \"code\": \"ERROR\",\n                                \"message\": \"Not allowed to update this approval, status is final\",\n                                \"errors\": [{\n                                        \"message\": \"Not allowed to update this approval, status is final\",\n                                        \"key\": \"paymentorder.api.Approval.NotAllowed\",\n                                        \"context\": {\n                                            \"status\": \"REJECTED\"\n                                        }\n                                    }]\n                            }\n                        }, {\n                            \"paymentOrderId\": \"9a20be2b-b8f3-45dc-a625-55635235de4c\",\n                            \"status\": {\n                                \"code\": \"ERROR\",\n                                \"message\": \"Payment not found\",\n                                \"errors\": [{\n                                        \"message\": \"Payment not found\",\n                                        \"key\": \"paymentorder.api.PaymentOrder.NotFound\"\n                                    }]\n                            }\n                        }, {\n                            \"paymentOrderId\": \"c7653c55-ee9b-4f65-96db-cbda76efd3ae\",\n                            \"paymentOrder\": {\n                                \"id\": \"c7653c55-ee9b-4f65-96db-cbda76efd3ae\",\n                                \"approvalId\": \"fe383f48-df2e-4b17-a0d2-3443b2e3738c\",\n                                \"status\": \"ENTERED\",\n                                \"originatorAccount\": {\n                                    \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                                    \"externalArrangementId\": \"729190421493794513132\",\n                                    \"identification\": {\n                                        \"identification\": \"NL81TRIO0212471066\",\n                                        \"schemeName\": \"IBAN\"\n                                    }\n                                },\n                                \"originator\": {\n                                    \"name\": \"Smith Bonus Savings\",\n                                    \"postalAddress\": {\n                                        \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n                                    }\n                                },\n                                \"instructionPriority\": \"HIGH\",\n                                \"requestedExecutionDate\": \"2017-08-16\",\n                                \"paymentMode\": \"SINGLE\",\n                                \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                                \"transferTransactionInformation\": {\n                                    \"endToEndIdentification\": \"Some reference\",\n                                    \"instructedAmount\": {\n                                        \"amount\": \"749.99\",\n                                        \"currencyCode\": \"EUR\"\n                                    },\n                                    \"counterpartyAccount\": {\n                                        \"identification\": {\n                                            \"identification\": \"MR1300020001010000123456753\",\n                                            \"schemeName\": \"IBAN\"\n                                        },\n                                        \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                        \"externalArrangementId\": \"9669274787995385962\"\n                                    },\n                                    \"counterparty\": {\n                                        \"name\": \"John Smith\"\n                                    }\n                                },\n                                \"actions\": [],\n                                \"createdBy\": \"U00243\",\n                                \"createdAt\": \"2017-05-12T14:33:13.452Z\",\n                                \"version\": 2\n                            },\n                            \"status\": {\n                                \"code\": \"ERROR\",\n                                \"message\": \"Limits has been breached, check report for details\"\n                            },\n                            \"breachReport\": [{\n                                    \"breachInfo\": [{\n                                            \"breachType\": \"THRESHOLD\",\n                                            \"breachedLimitType\": \"PERIODIC\",\n                                            \"currentConsumption\": \"999.00\",\n                                            \"currentThreshold\": \"1000.00\",\n                                            \"timeframe\": {\n                                                \"period\": \"DAILY\",\n                                                \"startTime\": \"2017-05-12T00:00:00.000Z\",\n                                                \"endTime\": \"2017-05-12T23:59:59.999Z\"\n                                            }\n                                        }]\n                                }]\n                        }],\n                    \"successCount\": 1,\n                    \"failCount\": 3\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/payment-orders/{paymentOrderId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\",\n                    \"approvalStatus\": \"APPROVED\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"approvalStatus\": \"approvalStatus\",\n                    \"reasonText\": \"reasonText\",\n                    \"nextExecutionDate\": \"2000-01-23\",\n                    \"errorDescription\": \"errorDescription\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"exportAllowed\": true,\n                    \"bankStatus\": \"bankStatus\",\n                    \"paymentSetupId\": \"paymentSetupId\",\n                    \"transferFee\": {\n                        \"amount\": \"amount\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"exchangeRateInformation\": {\n                        \"rateType\": \"ACTUAL\",\n                        \"contractIdentification\": \"contractIdentification\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"rate\": \"rate\",\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"id\": \"id\",\n                    \"reasonCode\": \"reasonCode\",\n                    \"paymentSubmissionId\": \"paymentSubmissionId\"\n                }\n            },\n            {\n                status: 201,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\"\n                }\n            },\n            {\n                status: 201,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\",\n                    \"approvalStatus\": \"APPROVED\"\n                }\n            },\n            {\n                status: 201,\n                body: {\n                    \"approvalStatus\": \"approvalStatus\",\n                    \"reasonText\": \"reasonText\",\n                    \"nextExecutionDate\": \"2000-01-23\",\n                    \"errorDescription\": \"errorDescription\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"exportAllowed\": true,\n                    \"bankStatus\": \"bankStatus\",\n                    \"paymentSetupId\": \"paymentSetupId\",\n                    \"transferFee\": {\n                        \"amount\": \"amount\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"exchangeRateInformation\": {\n                        \"rateType\": \"ACTUAL\",\n                        \"contractIdentification\": \"contractIdentification\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"rate\": \"rate\",\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"id\": \"id\",\n                    \"reasonCode\": \"reasonCode\",\n                    \"paymentSubmissionId\": \"paymentSubmissionId\"\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\"\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"id\": \"af2599ef-759a-4b78-8e67-4949055a532b\",\n                    \"status\": \"ENTERED\",\n                    \"approvalStatus\": \"APPROVED\"\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"approvalStatus\": \"approvalStatus\",\n                    \"reasonText\": \"reasonText\",\n                    \"nextExecutionDate\": \"2000-01-23\",\n                    \"errorDescription\": \"errorDescription\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"exportAllowed\": true,\n                    \"bankStatus\": \"bankStatus\",\n                    \"paymentSetupId\": \"paymentSetupId\",\n                    \"transferFee\": {\n                        \"amount\": \"amount\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"exchangeRateInformation\": {\n                        \"rateType\": \"ACTUAL\",\n                        \"contractIdentification\": \"contractIdentification\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"rate\": \"rate\",\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"id\": \"id\",\n                    \"reasonCode\": \"reasonCode\",\n                    \"paymentSubmissionId\": \"paymentSubmissionId\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"key\": \"GENERAL_ERROR\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Limits has been breached, check the report for more details\",\n                    \"payment\": {\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"status\": \"ENTERED\",\n                        \"originatorAccount\": {\n                            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                            \"identification\": {\n                                \"identification\": \"NL53RABO0309349755\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"instructionPriority\": \"NORM\",\n                        \"requestedExecutionDate\": \"2017-07-16\",\n                        \"transferTransactionInformation\": {\n                            \"name\": \"Jack Jackson\",\n                            \"instructedAmount\": {\n                                \"amount\": \"5000.55\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"counterpartyAccount\": {\n                                \"identification\": {\n                                    \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                    \"schemeName\": \"IBAN\"\n                                },\n                                \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\"\n                            },\n                            \"counterparty\": {\n                                \"name\": \"Backbase\",\n                                \"postalAddress\": {\n                                    \"addressLine1\": \"Jacob Bontiusplaats 9\",\n                                    \"zipcode\": \"1018LL\",\n                                    \"city\": \"Amsterdam\",\n                                    \"country\": \"NL\"\n                                }\n                            },\n                            \"remittanceInformation\": {\n                                \"type\": \"UNSTRUCTURED\",\n                                \"content\": \"Return a debt\"\n                            }\n                        },\n                        \"version\": 0\n                    },\n                    \"checkTime\": \"2017-01-31T12:12:12Z\",\n                    \"breachReport\": [{\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Service Agreement\",\n                                    \"description\": \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"user-BBID\": \"oleksii\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"THRESHOLD\",\n                                    \"breachedLimitType\": \"PERIODIC\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2017-01-31T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"250.0\",\n                                    \"currentThreshold\": \"499.9\"\n                                }, {\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"monthly\",\n                                        \"startTime\": \"2017-01-01T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"9950.0\",\n                                    \"currentThreshold\": \"10000.0\"\n                                }]\n                        }, {\n                            \"user-BBID\": \"oleksii\",\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2017-01-31T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"500.0\",\n                                    \"currentThreshold\": \"1000.0\"\n                                }]\n                        }, {\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Function Access Group\",\n                                    \"description\": \"Payments approvers\"\n                                }, {\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Function\",\n                                    \"description\": \"Domestic payments\"\n                                }, {\n                                    \"ref\": \"Approve\",\n                                    \"type\": \"Privilege\",\n                                    \"description\": \"Approve\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"THRESHOLD\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2017-01-31T00:00:00Z\",\n                                        \"endTime\": \"2017-01-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"250.0\",\n                                    \"currentThreshold\": \"499.9\"\n                                }]\n                        }, {\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Legal Entity\",\n                                    \"description\": \"Kuhic, Gislason and Kemmer\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"quarterly\",\n                                        \"startTime\": \"2017-01-01T00:00:00Z\",\n                                        \"endTime\": \"2017-03-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"99950.0\",\n                                    \"currentThreshold\": \"100000.0\"\n                                }]\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nexport { ApprovalStatus, BreachInfo, BulkPaymentOrdersApprovalPutResponseStatus, COLLECTION_FORMATS, CONFIG_TOKEN, ChargeBearer, ExchangeRateInformation, InstructionPriority, InvolvedPartyRole, LogicalOperator, PAYMENT_ORDER_BASE_PATH, PaymentAction, PaymentMode, PaymentOrderApiModule, PaymentOrderConfiguration, PaymentOrderProgressStatusGet, PaymentOrdersHttpService, PaymentOrdersHttpServiceDeletePaymentOrderByIdMocksProvider, PaymentOrdersHttpServiceGetApprovablePaymentOrdersMocksProvider, PaymentOrdersHttpServiceGetCurrenciesMocksProvider, PaymentOrdersHttpServiceGetPaymentOrderByIdMocksProvider, PaymentOrdersHttpServiceGetPaymentOrderExportMocksProvider, PaymentOrdersHttpServiceGetPaymentOrdersMocksProvider, PaymentOrdersHttpServiceGetProgressStatusByPaymentOrderIdMocksProvider, PaymentOrdersHttpServiceGetRateMocksProvider, PaymentOrdersHttpServiceMocksProvider, PaymentOrdersHttpServicePostCancelByPaymentOrderIdMocksProvider, PaymentOrdersHttpServicePostPaymentOrdersMocksProvider, PaymentOrdersHttpServicePostValidateMocksProvider, PaymentOrdersHttpServicePutApprovalsByPaymentOrderIdMocksProvider, PaymentOrdersHttpServicePutBulkApprovalsMocksProvider, PaymentOrdersHttpServicePutPaymentOrderByIdMocksProvider, RecordStatus, RemittanceInformation, Schedule, SchemeNames, Status };\n"]},"metadata":{},"sourceType":"module"}