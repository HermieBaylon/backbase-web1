{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, Component, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { InputBaseComponent } from '@backbase/ui-ang/base-classes';\nimport * as i1 from '@backbase/foundation-ang/future';\nimport * as i2 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i3 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\n/**\n * @name InputFileComponent\n *\n * @description\n * Component that displays a file input button.\n *\n * @a11y Current component provide option to pass needed accessibility\n * attributes. You need to take care of properties that are required in your case :\n *  - role\n *  - aria-activedescendant\n *  - aria-describedby\n *  - aria-expanded\n *  - aria-label\n *  - aria-labelledby\n *  - aria-owns\n *\n */\n\nfunction InputFileComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.buttonText);\n  }\n}\n\nfunction InputFileComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵi18n(0, 6);\n  }\n}\n\nclass InputFileComponent extends InputBaseComponent {\n  constructor(cd, deprecationsService) {\n    super(cd, deprecationsService);\n    this.cd = cd;\n    this.deprecationsService = deprecationsService;\n    /**\n     * Accepted file formats. Defaults to any ('*');\n     */\n\n    this.accept = '*';\n    /**\n     * Multiple/single file upload flag. Defaults to false;\n     */\n\n    this.multiple = false;\n    /**\n     * Button color. Defaults to 'link';\n     */\n\n    this.color = 'link';\n    /**\n     * This Boolean attribute lets you specify that the button should have input focus when the page\n     * loads, unless the user overrides it, for example by typing in a different control. Only one\n     * form-associated element in a document can have this attribute specified. Defaults to false.\n     */\n\n    this.autofocus = false;\n    /**\n     * Size of the button. Defaults to 'md'.\n     */\n\n    this.buttonSize = 'md';\n    /**\n     * Button icon name. Defaults to 'attachment';\n     */\n\n    this.iconName = 'attachment';\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (this.maxSizeInMb && Math.sign(Number(this.maxSizeInMb)) !== 1) {\n      this.maxSizeInMb = undefined;\n      console.warn('[bb-input-file-ui]: invalid maximum file size, falling back to infinite');\n    }\n  }\n\n  onValueChange(input) {\n    var _a;\n\n    const files = ((_a = input.files) === null || _a === void 0 ? void 0 : _a.length) && [...input.files];\n\n    if (Array.isArray(files)) {\n      this.value = {\n        files\n      };\n      this.onChange(this.value);\n    }\n  }\n\n  validate() {\n    let isMaxSizeExceeded = false;\n    const value = this.value && this.value.files;\n\n    if (Array.isArray(value) && this.maxSizeInMb) {\n      const maxSizeInBytes = Number(this.maxSizeInMb) * 1024 * 1024;\n      isMaxSizeExceeded = value.some(file => file.size > maxSizeInBytes);\n    }\n\n    return isMaxSizeExceeded ? {\n      maxFileSizeExceeded: true\n    } : null;\n  }\n\n}\n\nInputFileComponent.ɵfac = function InputFileComponent_Factory(t) {\n  return new (t || InputFileComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.DeprecationsService));\n};\n\nInputFileComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: InputFileComponent,\n  selectors: [[\"bb-input-file-ui\"]],\n  inputs: {\n    accept: \"accept\",\n    maxSizeInMb: \"maxSizeInMb\",\n    multiple: \"multiple\",\n    color: \"color\",\n    autofocus: \"autofocus\",\n    buttonText: \"buttonText\",\n    buttonSize: \"buttonSize\",\n    iconName: \"iconName\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => InputFileComponent),\n    multi: true\n  }, {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => InputFileComponent),\n    multi: true\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 17,\n  consts: function () {\n    let i18n_0;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Attach file\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_INPUT_FILE_JS__1 = goog.getMsg(\"Attach file\");\n      i18n_0 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_INPUT_FILE_JS__1;\n    } else {\n      i18n_0 = $localize`:Attach file@@fileInputButton.text:Attach file`;\n    }\n\n    return [[\"bbButton\", \"\", \"data-role\", \"file-input-button\", 1, \"bb-block\", \"bb-block--xs\", 3, \"autofocus\", \"color\", \"buttonSize\", \"disabled\", \"focus\", \"click\"], [\"cropped\", \"true\", 3, \"name\"], [4, \"ngIf\", \"ngIfElse\"], [\"attachFile\", \"\"], [\"hidden\", \"\", \"data-role\", \"file-input\", \"type\", \"file\", 3, \"accept\", \"multiple\", \"disabled\", \"required\", \"change\"], [\"fileInput\", \"\"], i18n_0];\n  },\n  template: function InputFileComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"focus\", function InputFileComponent_Template_button_focus_0_listener($event) {\n        return ctx.onFocus($event);\n      })(\"click\", function InputFileComponent_Template_button_click_0_listener() {\n        i0.ɵɵrestoreView(_r4);\n\n        const _r3 = i0.ɵɵreference(6);\n\n        return _r3.click();\n      });\n      i0.ɵɵelement(1, \"bb-icon-ui\", 1);\n      i0.ɵɵtemplate(2, InputFileComponent_span_2_Template, 2, 1, \"span\", 2);\n      i0.ɵɵtemplate(3, InputFileComponent_ng_template_3_Template, 1, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(5, \"input\", 4, 5);\n      i0.ɵɵlistener(\"change\", function InputFileComponent_Template_input_change_5_listener() {\n        i0.ɵɵrestoreView(_r4);\n\n        const _r3 = i0.ɵɵreference(6);\n\n        return ctx.onValueChange(_r3);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(4);\n\n      i0.ɵɵproperty(\"autofocus\", ctx.autofocus)(\"color\", ctx.color)(\"buttonSize\", ctx.buttonSize)(\"disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"aria-describedby\", ctx.ariaDescribedby)(\"aria-labelledby\", ctx.ariaLabelledby)(\"role\", ctx.role)(\"aria-owns\", ctx.ariaOwns)(\"aria-activedescendant\", ctx.ariaActivedescendant)(\"aria-label\", !ctx.label && ctx.ariaLabel || null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"name\", ctx.iconName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.buttonText)(\"ngIfElse\", _r1);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"accept\", ctx.accept)(\"multiple\", ctx.multiple)(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n    }\n  },\n  directives: [i3.ButtonDirective, i2.IconComponent, i4.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputFileComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-input-file-ui',\n      templateUrl: './input-file.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => InputFileComponent),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => InputFileComponent),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.DeprecationsService\n    }];\n  }, {\n    accept: [{\n      type: Input\n    }],\n    maxSizeInMb: [{\n      type: Input\n    }],\n    multiple: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    autofocus: [{\n      type: Input\n    }],\n    buttonText: [{\n      type: Input\n    }],\n    buttonSize: [{\n      type: Input\n    }],\n    iconName: [{\n      type: Input\n    }]\n  });\n})();\n\nconst uiModules = [ButtonModule, IconModule];\n\nclass InputFileModule {}\n\nInputFileModule.ɵfac = function InputFileModule_Factory(t) {\n  return new (t || InputFileModule)();\n};\n\nInputFileModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: InputFileModule\n});\nInputFileModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ...uiModules]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputFileModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ...uiModules],\n      declarations: [InputFileComponent],\n      exports: [InputFileComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { InputFileComponent, InputFileModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-input-file.js"],"names":["i0","forwardRef","Component","ChangeDetectionStrategy","Input","NgModule","i4","CommonModule","NG_VALUE_ACCESSOR","NG_VALIDATORS","InputBaseComponent","i1","i2","IconModule","i3","ButtonModule","InputFileComponent","constructor","cd","deprecationsService","accept","multiple","color","autofocus","buttonSize","iconName","ngOnInit","maxSizeInMb","Math","sign","Number","undefined","console","warn","onValueChange","input","_a","files","length","Array","isArray","value","onChange","validate","isMaxSizeExceeded","maxSizeInBytes","some","file","size","maxFileSizeExceeded","ɵfac","ChangeDetectorRef","DeprecationsService","ɵcmp","provide","useExisting","multi","ButtonDirective","IconComponent","NgIf","type","args","selector","templateUrl","changeDetection","OnPush","providers","buttonText","uiModules","InputFileModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, Component, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { InputBaseComponent } from '@backbase/ui-ang/base-classes';\nimport * as i1 from '@backbase/foundation-ang/future';\nimport * as i2 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i3 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\n\n/**\n * @name InputFileComponent\n *\n * @description\n * Component that displays a file input button.\n *\n * @a11y Current component provide option to pass needed accessibility\n * attributes. You need to take care of properties that are required in your case :\n *  - role\n *  - aria-activedescendant\n *  - aria-describedby\n *  - aria-expanded\n *  - aria-label\n *  - aria-labelledby\n *  - aria-owns\n *\n */\nclass InputFileComponent extends InputBaseComponent {\n    constructor(cd, deprecationsService) {\n        super(cd, deprecationsService);\n        this.cd = cd;\n        this.deprecationsService = deprecationsService;\n        /**\n         * Accepted file formats. Defaults to any ('*');\n         */\n        this.accept = '*';\n        /**\n         * Multiple/single file upload flag. Defaults to false;\n         */\n        this.multiple = false;\n        /**\n         * Button color. Defaults to 'link';\n         */\n        this.color = 'link';\n        /**\n         * This Boolean attribute lets you specify that the button should have input focus when the page\n         * loads, unless the user overrides it, for example by typing in a different control. Only one\n         * form-associated element in a document can have this attribute specified. Defaults to false.\n         */\n        this.autofocus = false;\n        /**\n         * Size of the button. Defaults to 'md'.\n         */\n        this.buttonSize = 'md';\n        /**\n         * Button icon name. Defaults to 'attachment';\n         */\n        this.iconName = 'attachment';\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        if (this.maxSizeInMb && Math.sign(Number(this.maxSizeInMb)) !== 1) {\n            this.maxSizeInMb = undefined;\n            console.warn('[bb-input-file-ui]: invalid maximum file size, falling back to infinite');\n        }\n    }\n    onValueChange(input) {\n        var _a;\n        const files = ((_a = input.files) === null || _a === void 0 ? void 0 : _a.length) && [...input.files];\n        if (Array.isArray(files)) {\n            this.value = { files };\n            this.onChange(this.value);\n        }\n    }\n    validate() {\n        let isMaxSizeExceeded = false;\n        const value = this.value && this.value.files;\n        if (Array.isArray(value) && this.maxSizeInMb) {\n            const maxSizeInBytes = Number(this.maxSizeInMb) * 1024 * 1024;\n            isMaxSizeExceeded = value.some((file) => file.size > maxSizeInBytes);\n        }\n        return isMaxSizeExceeded ? { maxFileSizeExceeded: true } : null;\n    }\n}\nInputFileComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputFileComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DeprecationsService }], target: i0.ɵɵFactoryTarget.Component });\nInputFileComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: InputFileComponent, selector: \"bb-input-file-ui\", inputs: { accept: \"accept\", maxSizeInMb: \"maxSizeInMb\", multiple: \"multiple\", color: \"color\", autofocus: \"autofocus\", buttonText: \"buttonText\", buttonSize: \"buttonSize\", iconName: \"iconName\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => InputFileComponent),\n            multi: true,\n        },\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => InputFileComponent),\n            multi: true,\n        },\n    ], usesInheritance: true, ngImport: i0, template: \"<button\\n  bbButton\\n  data-role=\\\"file-input-button\\\"\\n  class=\\\"bb-block bb-block--xs\\\"\\n  [autofocus]=\\\"autofocus\\\"\\n  [color]=\\\"color\\\"\\n  [buttonSize]=\\\"buttonSize\\\"\\n  (focus)=\\\"onFocus($event)\\\"\\n  (click)=\\\"fileInput.click()\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n  [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n  [attr.role]=\\\"role\\\"\\n  [attr.aria-owns]=\\\"ariaOwns\\\"\\n  [attr.aria-activedescendant]=\\\"ariaActivedescendant\\\"\\n  [attr.aria-label]=\\\"(!label && ariaLabel) || null\\\"\\n>\\n  <bb-icon-ui cropped=\\\"true\\\" [name]=\\\"iconName\\\"></bb-icon-ui>\\n  <span *ngIf=\\\"buttonText; else attachFile\\\">{{ buttonText }}</span>\\n  <ng-template #attachFile i18n=\\\"Attach file@@fileInputButton.text\\\">Attach file</ng-template>\\n  <input\\n    [accept]=\\\"accept\\\"\\n    [multiple]=\\\"multiple\\\"\\n    hidden\\n    data-role=\\\"file-input\\\"\\n    type=\\\"file\\\"\\n    #fileInput\\n    (change)=\\\"onValueChange(fileInput)\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [required]=\\\"required\\\"\\n  />\\n</button>\\n\", components: [{ type: i2.IconComponent, selector: \"bb-icon-ui\", inputs: [\"name\", \"inverse\", \"size\", \"color\", \"animate\", \"aria-label\", \"cropped\", \"backgroundType\"] }], directives: [{ type: i3.ButtonDirective, selector: \"button[bbButton]\", inputs: [\"type\", \"color\", \"buttonSize\", \"block\", \"circle\"] }, { type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputFileComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-input-file-ui',\n                    templateUrl: './input-file.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => InputFileComponent),\n                            multi: true,\n                        },\n                        {\n                            provide: NG_VALIDATORS,\n                            useExisting: forwardRef(() => InputFileComponent),\n                            multi: true,\n                        },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DeprecationsService }]; }, propDecorators: { accept: [{\n                type: Input\n            }], maxSizeInMb: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], autofocus: [{\n                type: Input\n            }], buttonText: [{\n                type: Input\n            }], buttonSize: [{\n                type: Input\n            }], iconName: [{\n                type: Input\n            }] } });\n\nconst uiModules = [ButtonModule, IconModule];\nclass InputFileModule {\n}\nInputFileModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputFileModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nInputFileModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputFileModule, declarations: [InputFileComponent], imports: [CommonModule, ButtonModule, IconModule], exports: [InputFileComponent] });\nInputFileModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputFileModule, imports: [[CommonModule, ...uiModules]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputFileModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, ...uiModules],\n                    declarations: [InputFileComponent],\n                    exports: [InputFileComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InputFileComponent, InputFileModule };\n"]},"metadata":{},"sourceType":"module"}