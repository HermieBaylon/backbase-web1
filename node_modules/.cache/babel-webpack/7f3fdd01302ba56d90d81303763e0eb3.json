{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject } from '@angular/core';\n\nfunction navigatorFactory() {\n  return navigator;\n}\n\nconst NAVIGATOR_TOKEN = new InjectionToken('Navigator object');\n\nclass BrowserService {\n  // 'any' due to issue https://github.com/angular/angular/issues/15640\n  constructor(navigator) {\n    this.navigator = navigator;\n  }\n\n  browserIsMSIE() {\n    return this.navigator.userAgent.indexOf('MSIE') > -1 || this.navigator.userAgent.indexOf('Trident/') > -1;\n  }\n\n}\n\nBrowserService.ɵfac = function BrowserService_Factory(t) {\n  return new (t || BrowserService)(i0.ɵɵinject(NAVIGATOR_TOKEN));\n};\n\nBrowserService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BrowserService,\n  factory: BrowserService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NAVIGATOR_TOKEN]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Utility service for DOM manipulations\n */\n\n\nclass DomAttributesService {\n  constructor() {\n    this.idPrefix = 'bb_element_';\n    this.nextId = 0;\n  }\n\n  generateId() {\n    return `${this.idPrefix}${this.nextId++}`;\n  }\n\n  moveAriaAttributes(hostEl, childEl, renderer2) {\n    const nodeMap = hostEl.attributes; // CUT every aria attribute from the host element and PASTE it into the specified element\n\n    Object.keys(nodeMap).map(key => nodeMap.item(Number(key))).filter(item => item && (item.name.startsWith('aria-') || item.name.toLowerCase() === 'arialabel')).forEach(item => {\n      const {\n        name: attrName,\n        value: attrVal\n      } = item;\n\n      if (attrName.toLowerCase() === 'arialabel') {\n        renderer2.setAttribute(childEl, 'aria-label', attrVal);\n      } else {\n        renderer2.setAttribute(childEl, attrName, attrVal);\n      }\n\n      renderer2.removeAttribute(hostEl, attrName);\n    });\n  }\n\n  copyAriaAttributes(hostEl, childEl, renderer2) {\n    const nodeMap = hostEl.attributes;\n    Object.keys(nodeMap).map(key => nodeMap.item(Number(key))).filter(item => item && item.name.startsWith('aria-')).forEach(item => item && renderer2.setAttribute(childEl, item.name, item.value));\n  }\n\n}\n\nDomAttributesService.ɵfac = function DomAttributesService_Factory(t) {\n  return new (t || DomAttributesService)();\n};\n\nDomAttributesService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomAttributesService,\n  factory: DomAttributesService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomAttributesService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BrowserService, DomAttributesService, NAVIGATOR_TOKEN, navigatorFactory };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-services.js"],"names":["i0","InjectionToken","Injectable","Inject","navigatorFactory","navigator","NAVIGATOR_TOKEN","BrowserService","constructor","browserIsMSIE","userAgent","indexOf","ɵfac","ɵprov","type","args","providedIn","undefined","decorators","DomAttributesService","idPrefix","nextId","generateId","moveAriaAttributes","hostEl","childEl","renderer2","nodeMap","attributes","Object","keys","map","key","item","Number","filter","name","startsWith","toLowerCase","forEach","attrName","value","attrVal","setAttribute","removeAttribute","copyAriaAttributes"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject } from '@angular/core';\n\nfunction navigatorFactory() {\n    return navigator;\n}\nconst NAVIGATOR_TOKEN = new InjectionToken('Navigator object');\nclass BrowserService {\n    // 'any' due to issue https://github.com/angular/angular/issues/15640\n    constructor(navigator) {\n        this.navigator = navigator;\n    }\n    browserIsMSIE() {\n        return this.navigator.userAgent.indexOf('MSIE') > -1 || this.navigator.userAgent.indexOf('Trident/') > -1;\n    }\n}\nBrowserService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BrowserService, deps: [{ token: NAVIGATOR_TOKEN }], target: i0.ɵɵFactoryTarget.Injectable });\nBrowserService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BrowserService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BrowserService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NAVIGATOR_TOKEN]\n                }] }]; } });\n\n/**\n * Utility service for DOM manipulations\n */\nclass DomAttributesService {\n    constructor() {\n        this.idPrefix = 'bb_element_';\n        this.nextId = 0;\n    }\n    generateId() {\n        return `${this.idPrefix}${this.nextId++}`;\n    }\n    moveAriaAttributes(hostEl, childEl, renderer2) {\n        const nodeMap = hostEl.attributes;\n        // CUT every aria attribute from the host element and PASTE it into the specified element\n        Object.keys(nodeMap)\n            .map((key) => nodeMap.item(Number(key)))\n            .filter((item) => item && (item.name.startsWith('aria-') || item.name.toLowerCase() === 'arialabel'))\n            .forEach((item) => {\n            const { name: attrName, value: attrVal } = item;\n            if (attrName.toLowerCase() === 'arialabel') {\n                renderer2.setAttribute(childEl, 'aria-label', attrVal);\n            }\n            else {\n                renderer2.setAttribute(childEl, attrName, attrVal);\n            }\n            renderer2.removeAttribute(hostEl, attrName);\n        });\n    }\n    copyAriaAttributes(hostEl, childEl, renderer2) {\n        const nodeMap = hostEl.attributes;\n        Object.keys(nodeMap)\n            .map((key) => nodeMap.item(Number(key)))\n            .filter((item) => item && item.name.startsWith('aria-'))\n            .forEach((item) => item && renderer2.setAttribute(childEl, item.name, item.value));\n    }\n}\nDomAttributesService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DomAttributesService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDomAttributesService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DomAttributesService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DomAttributesService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserService, DomAttributesService, NAVIGATOR_TOKEN, navigatorFactory };\n"]},"metadata":{},"sourceType":"module"}