{"ast":null,"code":"import * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport * as i0 from '@angular/core';\nimport { forwardRef, Component, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { InputBaseComponent } from '@backbase/ui-ang/base-classes';\nimport * as i1 from '@backbase/foundation-ang/future';\nimport * as i2 from '@backbase/ui-ang/input-checkbox';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\n/* eslint-disable */\n\nfunction SwitchComponent_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"for\", ctx_r0.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.label, \" \");\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"bb-switch--align-end\": a0\n  };\n};\n\nconst _c1 = function (a0, a1, a2) {\n  return {\n    \"bb-switch__element--checked\": a0,\n    \"bb-switch__element--disabled\": a1,\n    \"bb-switch__element--focused\": a2\n  };\n};\n\nvar position;\n\n(function (position) {\n  position[\"left\"] = \"left\";\n  position[\"right\"] = \"right\";\n})(position || (position = {}));\n/**\n * @name SwitchComponent\n *\n * @description\n * Component that provides you a switch input.\n */\n\n\nclass SwitchComponent extends InputBaseComponent {\n  constructor(cd, el, deprecationsService) {\n    super(cd, deprecationsService);\n    this.cd = cd;\n    this.el = el;\n    this.deprecationsService = deprecationsService;\n    /**\n     * The label position whether it is left or right.\n     */\n\n    this.labelPosition = position.left;\n    this.keyboardFocus = false;\n    this.focused = false;\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.role = this.role || 'switch';\n  }\n\n  toggleSwitch($event) {\n    var _a;\n\n    if (((_a = $event.target) === null || _a === void 0 ? void 0 : _a.tagName) === 'LABEL') {\n      return;\n    }\n\n    const isIE11 = !!window.MSInputMethodContext && !!document.documentMode;\n\n    if (!isIE11) {\n      this.onValueChange(!this.value);\n      this.el.nativeElement.dispatchEvent(new Event('change', {\n        bubbles: true\n      }));\n    } else {\n      if ($event.target.type === 'checkbox') {\n        this.onValueChange();\n      } else {\n        this.onValueChange(!this.value);\n      }\n\n      const event = document.createEvent('Event');\n      event.initEvent('change', true, false);\n      this.el.nativeElement.dispatchEvent(event);\n    }\n  }\n\n  onBlur($event) {\n    this.focused = false;\n    super.onBlur($event);\n  }\n\n  isLabelLeft() {\n    return this.labelPosition === position.left;\n  }\n\n  isLabelRight() {\n    return this.labelPosition === position.right;\n  }\n\n}\n\nSwitchComponent.ɵfac = function SwitchComponent_Factory(t) {\n  return new (t || SwitchComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.DeprecationsService));\n};\n\nSwitchComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SwitchComponent,\n  selectors: [[\"bb-switch-ui\"]],\n  inputs: {\n    labelPosition: \"labelPosition\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    multi: true,\n    useExisting: forwardRef(() => SwitchComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 21,\n  consts: [[1, \"bb-switch\", 3, \"ngClass\", \"click\"], [\"class\", \"bb-switch__label\", 4, \"ngIf\"], [1, \"bb-switch__checkbox\", \"sr-only\", \"sr-only-focusable\", 3, \"id\", \"ngModel\", \"disabled\", \"aria-label\", \"required\", \"aria-describedby\", \"aria-labelledby\", \"aria-expanded\", \"role\", \"aria-invalid\", \"aria-owns\", \"aria-activedescendant\", \"ngModelChange\", \"change\", \"focus\", \"blur\"], [1, \"bb-switch__element\", 3, \"ngClass\", \"focus\", \"blur\"], [1, \"bb-switch__slider\", \"slider\"], [1, \"bb-switch__label\"]],\n  template: function SwitchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function SwitchComponent_Template_div_click_0_listener($event) {\n        return !ctx.disabled && ctx.toggleSwitch($event);\n      });\n      i0.ɵɵtemplate(1, SwitchComponent_label_1_Template, 2, 2, \"label\", 1);\n      i0.ɵɵelementStart(2, \"bb-input-checkbox-ui\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function SwitchComponent_Template_bb_input_checkbox_ui_ngModelChange_2_listener($event) {\n        return ctx.value = $event;\n      })(\"change\", function SwitchComponent_Template_bb_input_checkbox_ui_change_2_listener($event) {\n        return $event.stopPropagation() && !ctx.disabled && ctx.toggleSwitch($event);\n      })(\"focus\", function SwitchComponent_Template_bb_input_checkbox_ui_focus_2_listener() {\n        return ctx.focused = true;\n      })(\"blur\", function SwitchComponent_Template_bb_input_checkbox_ui_blur_2_listener($event) {\n        return ctx.onBlur($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"span\", 3);\n      i0.ɵɵlistener(\"focus\", function SwitchComponent_Template_span_focus_3_listener() {\n        return ctx.keyboardFocus = true;\n      })(\"blur\", function SwitchComponent_Template_span_blur_3_listener() {\n        return ctx.keyboardFocus = false;\n      });\n      i0.ɵɵelement(4, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx.isLabelRight()));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"id\", ctx.id)(\"ngModel\", ctx.value)(\"disabled\", ctx.disabled)(\"aria-label\", ctx.ariaLabel)(\"required\", ctx.required)(\"aria-describedby\", ctx.ariaDescribedby)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-expanded\", ctx.ariaExpanded)(\"role\", ctx.role)(\"aria-invalid\", ctx.ariaInvalid)(\"aria-owns\", ctx.ariaOwns)(\"aria-activedescendant\", ctx.ariaActivedescendant);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(17, _c1, ctx.value, ctx.disabled, ctx.focused));\n    }\n  },\n  directives: [i3.NgClass, i3.NgIf, i2.InputCheckboxComponent, i4.NgControlStatus, i4.NgModel, i4.RequiredValidator],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SwitchComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-switch-ui',\n      templateUrl: './switch.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        multi: true,\n        useExisting: forwardRef(() => SwitchComponent)\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i1.DeprecationsService\n    }];\n  }, {\n    labelPosition: [{\n      type: Input\n    }]\n  });\n})();\n\nclass SwitchModule {}\n\nSwitchModule.ɵfac = function SwitchModule_Factory(t) {\n  return new (t || SwitchModule)();\n};\n\nSwitchModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SwitchModule\n});\nSwitchModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule, InputCheckboxModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SwitchModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, InputCheckboxModule],\n      declarations: [SwitchComponent],\n      exports: [SwitchComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { SwitchComponent, SwitchModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-switch.js"],"names":["i3","CommonModule","i4","NG_VALUE_ACCESSOR","FormsModule","i0","forwardRef","Component","ChangeDetectionStrategy","Input","NgModule","InputBaseComponent","i1","i2","InputCheckboxModule","position","SwitchComponent","constructor","cd","el","deprecationsService","labelPosition","left","keyboardFocus","focused","ngOnInit","role","toggleSwitch","$event","_a","target","tagName","isIE11","window","MSInputMethodContext","document","documentMode","onValueChange","value","nativeElement","dispatchEvent","Event","bubbles","type","event","createEvent","initEvent","onBlur","isLabelLeft","isLabelRight","right","ɵfac","ChangeDetectorRef","ElementRef","DeprecationsService","ɵcmp","provide","multi","useExisting","NgClass","NgIf","InputCheckboxComponent","NgControlStatus","NgModel","RequiredValidator","args","selector","templateUrl","changeDetection","OnPush","providers","SwitchModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport * as i0 from '@angular/core';\nimport { forwardRef, Component, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { InputBaseComponent } from '@backbase/ui-ang/base-classes';\nimport * as i1 from '@backbase/foundation-ang/future';\nimport * as i2 from '@backbase/ui-ang/input-checkbox';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\n\n/* eslint-disable */\nvar position;\n(function (position) {\n    position[\"left\"] = \"left\";\n    position[\"right\"] = \"right\";\n})(position || (position = {}));\n/**\n * @name SwitchComponent\n *\n * @description\n * Component that provides you a switch input.\n */\nclass SwitchComponent extends InputBaseComponent {\n    constructor(cd, el, deprecationsService) {\n        super(cd, deprecationsService);\n        this.cd = cd;\n        this.el = el;\n        this.deprecationsService = deprecationsService;\n        /**\n         * The label position whether it is left or right.\n         */\n        this.labelPosition = position.left;\n        this.keyboardFocus = false;\n        this.focused = false;\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this.role = this.role || 'switch';\n    }\n    toggleSwitch($event) {\n        var _a;\n        if (((_a = $event.target) === null || _a === void 0 ? void 0 : _a.tagName) === 'LABEL') {\n            return;\n        }\n        const isIE11 = !!window.MSInputMethodContext && !!document.documentMode;\n        if (!isIE11) {\n            this.onValueChange(!this.value);\n            this.el.nativeElement.dispatchEvent(new Event('change', { bubbles: true }));\n        }\n        else {\n            if ($event.target.type === 'checkbox') {\n                this.onValueChange();\n            }\n            else {\n                this.onValueChange(!this.value);\n            }\n            const event = document.createEvent('Event');\n            event.initEvent('change', true, false);\n            this.el.nativeElement.dispatchEvent(event);\n        }\n    }\n    onBlur($event) {\n        this.focused = false;\n        super.onBlur($event);\n    }\n    isLabelLeft() {\n        return this.labelPosition === position.left;\n    }\n    isLabelRight() {\n        return this.labelPosition === position.right;\n    }\n}\nSwitchComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SwitchComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i1.DeprecationsService }], target: i0.ɵɵFactoryTarget.Component });\nSwitchComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SwitchComponent, selector: \"bb-switch-ui\", inputs: { labelPosition: \"labelPosition\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            multi: true,\n            useExisting: forwardRef(() => SwitchComponent),\n        },\n    ], usesInheritance: true, ngImport: i0, template: \"<div\\n  class=\\\"bb-switch\\\"\\n  (click)=\\\"!disabled && toggleSwitch($event)\\\"\\n  [ngClass]=\\\"{\\n    'bb-switch--align-end': isLabelRight()\\n  }\\\"\\n>\\n  <label [attr.for]=\\\"id\\\" *ngIf=\\\"label\\\" class=\\\"bb-switch__label\\\">\\n    {{ label }}\\n  </label>\\n\\n  <bb-input-checkbox-ui\\n    [id]=\\\"id\\\"\\n    class=\\\"bb-switch__checkbox sr-only sr-only-focusable\\\"\\n    [(ngModel)]=\\\"value\\\"\\n    [disabled]=\\\"disabled\\\"\\n    (change)=\\\"$event.stopPropagation() && !disabled && toggleSwitch($event)\\\"\\n    [aria-label]=\\\"ariaLabel\\\"\\n    [required]=\\\"required\\\"\\n    [aria-describedby]=\\\"ariaDescribedby\\\"\\n    [aria-labelledby]=\\\"ariaLabelledby\\\"\\n    [aria-expanded]=\\\"ariaExpanded\\\"\\n    [role]=\\\"role\\\"\\n    [aria-invalid]=\\\"ariaInvalid\\\"\\n    [aria-owns]=\\\"ariaOwns\\\"\\n    [aria-activedescendant]=\\\"ariaActivedescendant\\\"\\n    (focus)=\\\"focused = true\\\"\\n    (blur)=\\\"onBlur($event)\\\"\\n  >\\n  </bb-input-checkbox-ui>\\n\\n  <span\\n    class=\\\"bb-switch__element\\\"\\n    [ngClass]=\\\"{\\n      'bb-switch__element--checked': value,\\n      'bb-switch__element--disabled': disabled,\\n      'bb-switch__element--focused': focused\\n    }\\\"\\n    (focus)=\\\"keyboardFocus = true\\\"\\n    (blur)=\\\"keyboardFocus = false\\\"\\n  >\\n    <span class=\\\"bb-switch__slider slider\\\"></span>\\n  </span>\\n</div>\\n\", components: [{ type: i2.InputCheckboxComponent, selector: \"bb-input-checkbox-ui\", inputs: [\"indeterminate\"], outputs: [\"indeterminateChange\"] }], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i4.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SwitchComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-switch-ui',\n                    templateUrl: './switch.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            multi: true,\n                            useExisting: forwardRef(() => SwitchComponent),\n                        },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i1.DeprecationsService }]; }, propDecorators: { labelPosition: [{\n                type: Input\n            }] } });\n\nclass SwitchModule {\n}\nSwitchModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SwitchModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSwitchModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SwitchModule, declarations: [SwitchComponent], imports: [CommonModule, FormsModule, InputCheckboxModule], exports: [SwitchComponent] });\nSwitchModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SwitchModule, imports: [[CommonModule, FormsModule, InputCheckboxModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SwitchModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, FormsModule, InputCheckboxModule],\n                    declarations: [SwitchComponent],\n                    exports: [SwitchComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SwitchComponent, SwitchModule };\n"]},"metadata":{},"sourceType":"module"}