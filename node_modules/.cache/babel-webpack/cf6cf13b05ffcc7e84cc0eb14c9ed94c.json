{"ast":null,"code":"import * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, Inject, Input, forwardRef, ChangeDetectorRef, ContentChildren, ViewChildren, ViewChild, NgModule } from '@angular/core';\nimport * as i4 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i7 from '@angular/forms';\nimport { FormGroup, FormControl, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { map, takeUntil, withLatestFrom } from 'rxjs/operators';\nimport { InputBaseComponent } from '@backbase/ui-ang/base-classes';\nimport { KEY_CODES, idListAttr } from '@backbase/ui-ang/util';\nimport * as i1 from '@backbase/ui-ang/services';\nimport * as i2 from '@backbase/foundation-ang/future';\nimport * as i3 from '@backbase/ui-ang/dropdown-panel';\nimport { DropdownPanelModule } from '@backbase/ui-ang/dropdown-panel';\nimport * as i6 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nconst _c0 = [\"clearOptions\"];\nconst _c1 = [\"dropDownMenu\"];\nconst _c2 = [\"toggleButton\"];\nconst _c3 = [\"listbox\"];\nconst _c4 = [\"option\"];\n\nfunction DropdownMultiSelectComponent_label_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate1(\"for\", \"\", ctx_r0.id, \"_dropdown-option_input\");\n    i0.ɵɵproperty(\"id\", \"bb-dropdown-multi-select-label\" + ctx_r0.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.label, \"\\n\");\n  }\n}\n\nfunction DropdownMultiSelectComponent_ng_template_4_span_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r10 = ctx.$implicit;\n    const last_r11 = ctx.last;\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.labelsMap[item_r10] + (last_r11 ? \"\" : \", \"), \" \");\n  }\n}\n\nfunction DropdownMultiSelectComponent_ng_template_4_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtemplate(1, DropdownMultiSelectComponent_ng_template_4_span_3_ng_container_1_Template, 2, 1, \"ng-container\", 13);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 1, ctx_r6.selectedValues$));\n  }\n}\n\nfunction DropdownMultiSelectComponent_ng_template_4_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r8.placeholder);\n  }\n}\n\nfunction DropdownMultiSelectComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 6, 7);\n    i0.ɵɵlistener(\"focus\", function DropdownMultiSelectComponent_ng_template_4_Template_button_focus_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onFocus();\n    })(\"focusout\", function DropdownMultiSelectComponent_ng_template_4_Template_button_focusout_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.onFocusOut($event);\n    });\n    i0.ɵɵelementStart(2, \"span\", 8);\n    i0.ɵɵtemplate(3, DropdownMultiSelectComponent_ng_template_4_span_3_Template, 3, 3, \"span\", 9);\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵtemplate(5, DropdownMultiSelectComponent_ng_template_4_ng_template_5_Template, 2, 1, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 11);\n    i0.ɵɵelement(8, \"bb-icon-ui\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const isOpen_r4 = ctx.isOpen;\n\n    const _r7 = i0.ɵɵreference(6);\n\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_13_0;\n    i0.ɵɵpropertyInterpolate(\"id\", ctx_r2.id);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.disabled);\n    i0.ɵɵattribute(\"data-role\", \"expand-button\")(\"required\", ctx_r2.required ? true : undefined)(\"aria-expanded\", isOpen_r4)(\"aria-labelledby\", ctx_r2.getLabeledByIds(\"bb-dropdown-multi-select-label\" + ctx_r2.id, ctx_r2.ariaLabelledby, ctx_r2.buttonLabelId))(\"aria-describedby\", ctx_r2.ariaDescribedby)(\"aria-activedescendant\", ctx_r2.ariaActivedescendant)(\"aria-invalid\", ctx_r2.ariaInvalid)(\"aria-owns\", ctx_r2.ariaOwns)(\"aria-label\", ctx_r2.ariaLabel);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", ctx_r2.buttonLabelId);\n    i0.ɵɵattribute(\"data-role\", \"dropdown-result\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_13_0 = i0.ɵɵpipeBind1(4, 17, ctx_r2.selectedValues$)) == null ? null : tmp_13_0.length)(\"ngIfElse\", _r7);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"cropped\", true)(\"name\", isOpen_r4 ? \"toggle-up\" : \"toggle-down\");\n  }\n}\n\nfunction DropdownMultiSelectComponent_ng_template_5_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"id\", \"bb-dropdown-multi-select-header_\" + ctx_r16.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r16.dropdownHeaderText, \" \");\n  }\n}\n\nconst _c7 = function (a0, a1) {\n  return {\n    \"active dropdown-option--active\": a0,\n    \"dropdown-option--selected\": a1\n  };\n};\n\nfunction DropdownMultiSelectComponent_ng_template_5_div_6_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"label\", 25, 26);\n    i0.ɵɵlistener(\"click\", function DropdownMultiSelectComponent_ng_template_5_div_6_label_2_Template_label_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const i_r21 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext(3);\n      return ctx_r23.activeOptionIndex = i_r21;\n    });\n    i0.ɵɵelement(2, \"input\", 27);\n    i0.ɵɵelement(3, \"span\", 28);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const contentOption_r20 = ctx.$implicit;\n    const i_r21 = ctx.index;\n    const ctx_r19 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(8, _c7, ctx_r19.activeOptionIndex === i_r21, !!ctx_r19.formGroup.controls[contentOption_r20.value].value))(\"id\", \"bb-dropdown-multi-select-option-\" + ctx_r19.id + i_r21);\n    i0.ɵɵattribute(\"data-role\", \"option-\" + i_r21)(\"aria-selected\", ctx_r19.formGroup.controls[contentOption_r20.value].value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"\", ctx_r19.id, \"_dropdown-option_input\");\n    i0.ɵɵproperty(\"formControl\", ctx_r19.formGroup.controls[contentOption_r20.value]);\n    i0.ɵɵattribute(\"data-role\", \"option-\" + (ctx_r19.id + i_r21 + 1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r19.getLabel(contentOption_r20.label), i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction DropdownMultiSelectComponent_ng_template_5_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 22, 23);\n    i0.ɵɵlistener(\"keydown\", function DropdownMultiSelectComponent_ng_template_5_div_6_Template_div_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return ctx_r25.onListboxKeyDown($event);\n    })(\"focus\", function DropdownMultiSelectComponent_ng_template_5_div_6_Template_div_focus_0_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return ctx_r27.onListboxFocus();\n    })(\"blur\", function DropdownMultiSelectComponent_ng_template_5_div_6_Template_div_blur_0_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      return ctx_r28.onListboxBlur();\n    })(\"focusout\", function DropdownMultiSelectComponent_ng_template_5_div_6_Template_div_focusout_0_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return ctx_r29.onFocusOut($event);\n    });\n    i0.ɵɵtemplate(2, DropdownMultiSelectComponent_ng_template_5_div_6_label_2_Template, 4, 11, \"label\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"aria-labelledby\", ctx_r17.dropdownHeaderText ? ctx_r17.getLabeledByIds(\"bb-dropdown-multi-select-header_\" + ctx_r17.id) : null)(\"aria-activedescendant\", ctx_r17.activeOptionIndex >= 0 ? \"bb-dropdown-multi-select-option-\" + (ctx_r17.id + ctx_r17.activeOptionIndex) : undefined);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r17.contentOptions)(\"ngForTrackBy\", ctx_r17.trackByValueFn);\n  }\n}\n\nfunction DropdownMultiSelectComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"button\", 15, 16);\n    i0.ɵɵlistener(\"click\", function DropdownMultiSelectComponent_ng_template_5_Template_button_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.clearAll($event);\n    })(\"focusout\", function DropdownMultiSelectComponent_ng_template_5_Template_button_focusout_1_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return ctx_r32.onFocusOut($event);\n    });\n    i0.ɵɵi18n(3, 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"div\", 18);\n    i0.ɵɵtemplate(5, DropdownMultiSelectComponent_ng_template_5_div_5_Template, 2, 2, \"div\", 19);\n    i0.ɵɵtemplate(6, DropdownMultiSelectComponent_ng_template_5_div_6_Template, 3, 4, \"div\", 20);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"data-role\", \"clear-btn\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.dropdownHeaderText);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r3.contentOptions == null ? null : ctx_r3.contentOptions.length) && ctx_r3.formGroup.controls[ctx_r3.contentOptions == null ? null : ctx_r3.contentOptions.first.value]);\n  }\n}\n\nconst _c8 = function (a0) {\n  return {\n    \"bb-dropdown-multi-select--disabled\": a0\n  };\n};\n\nconst BB_MULTI_SELECT_CHANGE_DETECTION_REF_TOKEN = new InjectionToken('BB_MULTI_SELECT_SINGLE_SELECT');\n/**\n * @name MultiSelectSingleSelectOption\n *\n * @description\n * Component that represents a single option that is part of the multi select component.\n */\n\nclass DropdownMultiSelectOptionComponent {\n  constructor(dropdownCDRef, domAttributesService) {\n    this.dropdownCDRef = dropdownCDRef;\n    this.domAttributesService = domAttributesService;\n    /**\n     * The value of the native option element\n     */\n\n    this.value = '';\n    /**\n     * The label of the option item\n     */\n\n    this.label = '';\n    this.state = false;\n    this._id = this.domAttributesService.generateId();\n  }\n  /**\n   * The id for the input. Defaults to unique string.\n   */\n\n\n  set id(value) {\n    this._id = value;\n  }\n\n  get id() {\n    return this._id;\n  } // NOTES: trigger of detectChanges is needed\n  // because DropdownSingleSelectComponent has changeDetection\n  // strategy onPush, hence it reacts only to changes\n  // of its own @Inputs, but not @Inputs() of options component\n\n\n  ngOnChanges({\n    value = {},\n    label = {}\n  }) {\n    const {\n      firstChange: firstChangeValue\n    } = value;\n    const {\n      firstChange: firstChangeLabel\n    } = label;\n\n    if (firstChangeLabel && firstChangeValue) {\n      return;\n    }\n\n    this.dropdownCDRef.detectChanges();\n  }\n\n}\n\nDropdownMultiSelectOptionComponent.ɵfac = function DropdownMultiSelectOptionComponent_Factory(t) {\n  return new (t || DropdownMultiSelectOptionComponent)(i0.ɵɵdirectiveInject(BB_MULTI_SELECT_CHANGE_DETECTION_REF_TOKEN), i0.ɵɵdirectiveInject(i1.DomAttributesService));\n};\n\nDropdownMultiSelectOptionComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DropdownMultiSelectOptionComponent,\n  selectors: [[\"bb-dropdown-multi-select-option-ui\"]],\n  inputs: {\n    id: \"id\",\n    value: \"value\",\n    label: \"label\",\n    state: \"state\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function DropdownMultiSelectOptionComponent_Template(rf, ctx) {},\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownMultiSelectOptionComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-dropdown-multi-select-option-ui',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: ''\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [BB_MULTI_SELECT_CHANGE_DETECTION_REF_TOKEN]\n      }]\n    }, {\n      type: i1.DomAttributesService\n    }];\n  }, {\n    id: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    state: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @name DropdownMultiSelectComponent\n *\n * @description\n * Component that use for DropDown Multi Select.\n */\n\n\nclass DropdownMultiSelectComponent extends InputBaseComponent {\n  constructor(cd, domAttributesService, deprecationsService) {\n    super(cd, deprecationsService);\n    this.cd = cd;\n    this.domAttributesService = domAttributesService;\n    this.deprecationsService = deprecationsService;\n    this.unsubscribe$ = new Subject();\n    /**\n     * The placeholder for the multi select.\n     */\n\n    this.placeholder = 'No items selected';\n    /**\n     * The label for the Dropdown multi select. Defaults to an empty string.\n     */\n\n    this.label = '';\n    /**\n     * Enable filtering; Defaults to false.\n     */\n\n    this.filtering = false;\n    /**\n     * Whether the Dropdown multi select is read only. Defaults to false.\n     */\n\n    this.readonly = false;\n    /**\n     * The child option components of type DropDownMultiSelectSingleOption\n     */\n\n    this.isIE = navigator.userAgent.indexOf('MSIE ') > -1 || navigator.userAgent.indexOf('Trident/') > -1;\n    this.activeOptionIndex = -1;\n    this.isOptionsFocused = false;\n    this.formGroup = new FormGroup({});\n    this.formValue$ = this.formGroup.valueChanges.pipe(map(formValue => this.getSelectedValues(formValue)), takeUntil(this.unsubscribe$));\n    this.labelsMap = {};\n    this.buttonLabelId = this.domAttributesService.generateId();\n    this.clearOptions$ = new Subject();\n    this.selectedValuesSubject$ = new BehaviorSubject([]);\n    this.selectedValues$ = this.selectedValuesSubject$.asObservable();\n    this.searchKey = '';\n    this.cachedValue = {};\n    this.isOpen = false;\n    this.buttonLabelId = this.domAttributesService.generateId();\n    this.formValue$.subscribe(this.selectedValuesSubject$);\n    this.formValue$.subscribe(value => {\n      if (value && value.length === 0) {\n        this.onChange(undefined);\n      } else {\n        this.onValueChange(value);\n      }\n    });\n    this.clearOptions$.pipe(withLatestFrom(this.selectedValues$), takeUntil(this.unsubscribe$)).subscribe(([, items]) => {\n      items.forEach(item => {\n        this.formGroup.patchValue({\n          [item]: false\n        }, {\n          emitEvent: false\n        });\n      });\n      this.formGroup.updateValueAndValidity();\n    });\n  }\n\n  ngAfterContentInit() {\n    if (this.contentOptions) {\n      this.contentOptions.forEach(({\n        value,\n        label\n      }) => {\n        this.formGroup.registerControl(value, new FormControl(this.cachedValue[value] || false));\n        Object.assign(this.labelsMap, {\n          [value]: label\n        });\n      });\n\n      if (Object.keys(this.cachedValue).length) {\n        this.formGroup.updateValueAndValidity();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n  /**\n   * Unselect all selected options from the listbox\n   *\n   * @param $event\n   */\n\n\n  clearAll($event) {\n    $event.preventDefault();\n    this.clearOptions$.next();\n  }\n  /**\n   *\n   * @param index\n   * @param item\n   */\n\n\n  trackByValueFn(index, item) {\n    return item.value;\n  }\n  /**\n   *\n   * @param value\n   */\n\n\n  writeValue(value) {\n    const valuesMap = (value || []).reduce((acc, item) => Object.assign(acc, {\n      [item]: true\n    }), {});\n    this.cachedValue = valuesMap;\n    Object.keys(this.formGroup.controls).forEach(key => {\n      this.formGroup.controls[key].setValue(valuesMap[key] || false, {\n        emitEvent: false\n      });\n    });\n    this.formGroup.updateValueAndValidity({\n      emitEvent: false\n    });\n    const selectedValues = this.getSelectedValues(this.formGroup.value);\n    this.selectedValuesSubject$.next(selectedValues);\n  }\n  /**\n   * Updating labels while searching\n   *\n   * @param label\n   */\n\n\n  getLabel(label) {\n    return this.searchKey.toLocaleLowerCase() === label[0].toLocaleLowerCase() && this.filtering ? `<b>${label[0]}</b>${label.substring(1)}` : label;\n  }\n\n  onListboxFocus() {\n    this.activeOptionIndex = 0;\n    this.isOptionsFocused = true;\n  }\n  /* eslint-disable complexity */\n\n\n  onListboxKeyDown(event) {\n    if (!this.disabled && this.isOpen && this.isOptionsFocused) {\n      const keyCode = this.isIE ? event.keyCode : event.key;\n\n      switch (keyCode) {\n        case 40:\n        case KEY_CODES.DOWN:\n          this.activeOptionIndex = Math.min(this.activeOptionIndex + 1, this.options.length - 1);\n          break;\n\n        case 38:\n        case KEY_CODES.UP:\n          this.activeOptionIndex = Math.max(this.activeOptionIndex - 1, 0);\n          break;\n\n        case 13:\n        case 32:\n        case KEY_CODES.ENTER:\n        case KEY_CODES.SPACE:\n          this.selectActiveOption();\n          break;\n\n        default:\n          if (this.filtering) {\n            this.searchKey = event.key;\n            this.setActiveOptionBaseOnSearchKey(event.key);\n          }\n\n      } // let Tab key to jump out and close the dropdown menu\n\n\n      if (keyCode !== 9 && keyCode !== KEY_CODES.TAB) {\n        event.preventDefault();\n      }\n    }\n  }\n  /* eslint-enable complexity */\n\n  /**\n   *\n   */\n\n\n  onListboxBlur() {\n    this.activeOptionIndex = -1;\n    this.isOptionsFocused = false;\n  }\n  /**\n   *\n   * @param isOpen\n   */\n\n\n  onDropdownToggle(isOpen) {\n    this.activeOptionIndex = -1;\n    this.isOptionsFocused = false;\n    this.isOpen = isOpen;\n  }\n\n  getLabeledByIds(...tokens) {\n    return idListAttr(...tokens);\n  } // only taking consideration the focusable elements of the control\n\n\n  onFocusOut(event) {\n    const nextFocusedElement = event.relatedTarget;\n    const focusOutElement = event.target;\n\n    if (focusOutElement === this.toggleButton.nativeElement && nextFocusedElement !== this.clearAllButton.nativeElement && nextFocusedElement !== this.listbox.nativeElement || focusOutElement === this.clearAllButton.nativeElement && nextFocusedElement !== this.toggleButton.nativeElement && nextFocusedElement !== this.listbox.nativeElement || focusOutElement === this.listbox.nativeElement && nextFocusedElement !== this.toggleButton.nativeElement && nextFocusedElement !== this.clearAllButton.nativeElement) {\n      super.onBlur();\n    }\n  }\n\n  getSelectedValues(formValue) {\n    return Object.keys(formValue).reduce((acc, key) => {\n      if (formValue[key]) {\n        acc.push(key);\n      }\n\n      return acc;\n    }, []);\n  }\n\n  selectActiveOption() {\n    const el = this.options.toArray()[this.activeOptionIndex];\n    el === null || el === void 0 ? void 0 : el.nativeElement.click();\n  }\n\n  setActiveOptionBaseOnSearchKey(key) {\n    this.activeOptionIndex = this.options.toArray().findIndex(item => key.toLocaleLowerCase() === item.nativeElement.innerText[0].toLocaleLowerCase());\n  }\n\n}\n\nDropdownMultiSelectComponent.ɵfac = function DropdownMultiSelectComponent_Factory(t) {\n  return new (t || DropdownMultiSelectComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.DomAttributesService), i0.ɵɵdirectiveInject(i2.DeprecationsService));\n};\n\nDropdownMultiSelectComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DropdownMultiSelectComponent,\n  selectors: [[\"bb-dropdown-multi-select-ui\"]],\n  contentQueries: function DropdownMultiSelectComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, DropdownMultiSelectOptionComponent, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentOptions = _t);\n    }\n  },\n  viewQuery: function DropdownMultiSelectComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(_c3, 5);\n      i0.ɵɵviewQuery(_c4, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.clearAllButton = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropDownMenu = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toggleButton = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listbox = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.options = _t);\n    }\n  },\n  inputs: {\n    dropdownHeaderText: \"dropdownHeaderText\",\n    placeholder: \"placeholder\",\n    label: \"label\",\n    filtering: \"filtering\",\n    readonly: \"readonly\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DropdownMultiSelectComponent),\n    multi: true\n  }, {\n    provide: BB_MULTI_SELECT_CHANGE_DETECTION_REF_TOKEN,\n    useExisting: ChangeDetectorRef\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 4,\n  consts: function () {\n    let i18n_5;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Clear selection button text\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_DROPDOWN_MULTI_SELECT_JS__6 = goog.getMsg(\" Clear selection \");\n      i18n_5 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_DROPDOWN_MULTI_SELECT_JS__6;\n    } else {\n      i18n_5 = $localize`:Clear selection button text@@dropdown-multiple-select.clear-selection.button: Clear selection `;\n    }\n\n    return [[3, \"for\", \"id\", 4, \"ngIf\"], [\"dropDownMenu\", \"\"], [1, \"bb-dropdown-multi-select\", 3, \"ngClass\", \"open\"], [\"bbDropdownToggle\", \"\"], [\"bbDropdownMenu\", \"\"], [3, \"for\", \"id\"], [\"aria-haspopup\", \"listbox\", \"type\", \"button\", 1, \"bb-stack--wrap\", \"bb-dropdown-multi-select__toggle\", \"bb-stack\", \"bb-text-align-left\", \"bb-stack--align-top\", \"form-control\", 3, \"disabled\", \"id\", \"focus\", \"focusout\"], [\"toggleButton\", \"\"], [1, \"bb-dropdown-multi-select__result\", 3, \"id\"], [4, \"ngIf\", \"ngIfElse\"], [\"placeholderTemplate\", \"\"], [1, \"bb-stack__item--push-right\"], [3, \"cropped\", \"name\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bb-text-support\"], [\"bbButton\", \"\", \"color\", \"unstyled\", 1, \"bb-dropdown-multi-select__clear-button\", 3, \"click\", \"focusout\"], [\"clearOptions\", \"\"], i18n_5, [1, \"dropdown-divider\"], [\"class\", \"dropdown-header\", 3, \"id\", 4, \"ngIf\"], [\"role\", \"listbox\", \"aria-multiselectable\", \"true\", \"tabindex\", \"0\", \"class\", \"bb-dropdown-multi-select__options-list\", 3, \"keydown\", \"focus\", \"blur\", \"focusout\", 4, \"ngIf\"], [1, \"dropdown-header\", 3, \"id\"], [\"role\", \"listbox\", \"aria-multiselectable\", \"true\", \"tabindex\", \"0\", 1, \"bb-dropdown-multi-select__options-list\", 3, \"keydown\", \"focus\", \"blur\", \"focusout\"], [\"listbox\", \"\"], [\"role\", \"option\", \"class\", \"dropdown-item dropdown-option\", 3, \"ngClass\", \"id\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"role\", \"option\", 1, \"dropdown-item\", \"dropdown-option\", 3, \"ngClass\", \"id\", \"click\"], [\"option\", \"\"], [\"type\", \"checkbox\", 1, \"dropdown-option__input\", 3, \"id\", \"formControl\"], [3, \"innerHTML\"]];\n  },\n  template: function DropdownMultiSelectComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DropdownMultiSelectComponent_label_0_Template, 2, 3, \"label\", 0);\n      i0.ɵɵelementStart(1, \"div\", null, 1);\n      i0.ɵɵelementStart(3, \"bb-dropdown-panel-ui\", 2);\n      i0.ɵɵlistener(\"open\", function DropdownMultiSelectComponent_Template_bb_dropdown_panel_ui_open_3_listener($event) {\n        return ctx.onDropdownToggle($event);\n      });\n      i0.ɵɵtemplate(4, DropdownMultiSelectComponent_ng_template_4_Template, 9, 19, \"ng-template\", 3);\n      i0.ɵɵtemplate(5, DropdownMultiSelectComponent_ng_template_5_Template, 7, 3, \"ng-template\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.label);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c8, ctx.disabled || ctx.readonly));\n    }\n  },\n  directives: [i5.NgIf, i3.DropdownPanelComponent, i5.NgClass, i3.DropdownToggleDirective, i3.DropdownMenuDirective, i4.IconComponent, i5.NgForOf, i6.ButtonDirective, i7.CheckboxControlValueAccessor, i7.NgControlStatus, i7.FormControlDirective],\n  pipes: [i5.AsyncPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownMultiSelectComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-dropdown-multi-select-ui',\n      templateUrl: './dropdown-multi-select.component.html',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => DropdownMultiSelectComponent),\n        multi: true\n      }, {\n        provide: BB_MULTI_SELECT_CHANGE_DETECTION_REF_TOKEN,\n        useExisting: ChangeDetectorRef\n      }],\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.DomAttributesService\n    }, {\n      type: i2.DeprecationsService\n    }];\n  }, {\n    dropdownHeaderText: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    filtering: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    contentOptions: [{\n      type: ContentChildren,\n      args: [DropdownMultiSelectOptionComponent]\n    }],\n    options: [{\n      type: ViewChildren,\n      args: ['option']\n    }],\n    clearAllButton: [{\n      type: ViewChild,\n      args: ['clearOptions']\n    }],\n    dropDownMenu: [{\n      type: ViewChild,\n      args: ['dropDownMenu']\n    }],\n    toggleButton: [{\n      type: ViewChild,\n      args: ['toggleButton']\n    }],\n    listbox: [{\n      type: ViewChild,\n      args: ['listbox']\n    }]\n  });\n})();\n\nclass DropdownMultiSelectModule {}\n\nDropdownMultiSelectModule.ɵfac = function DropdownMultiSelectModule_Factory(t) {\n  return new (t || DropdownMultiSelectModule)();\n};\n\nDropdownMultiSelectModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DropdownMultiSelectModule\n});\nDropdownMultiSelectModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, IconModule, InputCheckboxModule, DropdownPanelModule, ReactiveFormsModule, ButtonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownMultiSelectModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, IconModule, InputCheckboxModule, DropdownPanelModule, ReactiveFormsModule, ButtonModule],\n      declarations: [DropdownMultiSelectComponent, DropdownMultiSelectOptionComponent],\n      exports: [DropdownMultiSelectComponent, DropdownMultiSelectOptionComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DropdownMultiSelectComponent, DropdownMultiSelectModule, DropdownMultiSelectOptionComponent };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-dropdown-multi-select.js"],"names":["i5","CommonModule","i0","InjectionToken","Component","ChangeDetectionStrategy","Inject","Input","forwardRef","ChangeDetectorRef","ContentChildren","ViewChildren","ViewChild","NgModule","i4","IconModule","i7","FormGroup","FormControl","NG_VALUE_ACCESSOR","ReactiveFormsModule","Subject","BehaviorSubject","map","takeUntil","withLatestFrom","InputBaseComponent","KEY_CODES","idListAttr","i1","i2","i3","DropdownPanelModule","i6","ButtonModule","InputCheckboxModule","BB_MULTI_SELECT_CHANGE_DETECTION_REF_TOKEN","DropdownMultiSelectOptionComponent","constructor","dropdownCDRef","domAttributesService","value","label","state","_id","generateId","id","ngOnChanges","firstChange","firstChangeValue","firstChangeLabel","detectChanges","ɵfac","DomAttributesService","ɵcmp","type","args","selector","changeDetection","OnPush","template","decorators","DropdownMultiSelectComponent","cd","deprecationsService","unsubscribe$","placeholder","filtering","readonly","isIE","navigator","userAgent","indexOf","activeOptionIndex","isOptionsFocused","formGroup","formValue$","valueChanges","pipe","formValue","getSelectedValues","labelsMap","buttonLabelId","clearOptions$","selectedValuesSubject$","selectedValues$","asObservable","searchKey","cachedValue","isOpen","subscribe","length","onChange","undefined","onValueChange","items","forEach","item","patchValue","emitEvent","updateValueAndValidity","ngAfterContentInit","contentOptions","registerControl","Object","assign","keys","ngOnDestroy","next","complete","clearAll","$event","preventDefault","trackByValueFn","index","writeValue","valuesMap","reduce","acc","controls","key","setValue","selectedValues","getLabel","toLocaleLowerCase","substring","onListboxFocus","onListboxKeyDown","event","disabled","keyCode","DOWN","Math","min","options","UP","max","ENTER","SPACE","selectActiveOption","setActiveOptionBaseOnSearchKey","TAB","onListboxBlur","onDropdownToggle","getLabeledByIds","tokens","onFocusOut","nextFocusedElement","relatedTarget","focusOutElement","target","toggleButton","nativeElement","clearAllButton","listbox","onBlur","push","el","toArray","click","findIndex","innerText","DeprecationsService","provide","useExisting","multi","NgIf","DropdownPanelComponent","NgClass","DropdownToggleDirective","DropdownMenuDirective","IconComponent","NgForOf","ButtonDirective","CheckboxControlValueAccessor","NgControlStatus","FormControlDirective","AsyncPipe","templateUrl","providers","dropdownHeaderText","dropDownMenu","DropdownMultiSelectModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, Inject, Input, forwardRef, ChangeDetectorRef, ContentChildren, ViewChildren, ViewChild, NgModule } from '@angular/core';\nimport * as i4 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i7 from '@angular/forms';\nimport { FormGroup, FormControl, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { map, takeUntil, withLatestFrom } from 'rxjs/operators';\nimport { InputBaseComponent } from '@backbase/ui-ang/base-classes';\nimport { KEY_CODES, idListAttr } from '@backbase/ui-ang/util';\nimport * as i1 from '@backbase/ui-ang/services';\nimport * as i2 from '@backbase/foundation-ang/future';\nimport * as i3 from '@backbase/ui-ang/dropdown-panel';\nimport { DropdownPanelModule } from '@backbase/ui-ang/dropdown-panel';\nimport * as i6 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\n\nconst BB_MULTI_SELECT_CHANGE_DETECTION_REF_TOKEN = new InjectionToken('BB_MULTI_SELECT_SINGLE_SELECT');\n/**\n * @name MultiSelectSingleSelectOption\n *\n * @description\n * Component that represents a single option that is part of the multi select component.\n */\nclass DropdownMultiSelectOptionComponent {\n    constructor(dropdownCDRef, domAttributesService) {\n        this.dropdownCDRef = dropdownCDRef;\n        this.domAttributesService = domAttributesService;\n        /**\n         * The value of the native option element\n         */\n        this.value = '';\n        /**\n         * The label of the option item\n         */\n        this.label = '';\n        this.state = false;\n        this._id = this.domAttributesService.generateId();\n    }\n    /**\n     * The id for the input. Defaults to unique string.\n     */\n    set id(value) {\n        this._id = value;\n    }\n    get id() {\n        return this._id;\n    }\n    // NOTES: trigger of detectChanges is needed\n    // because DropdownSingleSelectComponent has changeDetection\n    // strategy onPush, hence it reacts only to changes\n    // of its own @Inputs, but not @Inputs() of options component\n    ngOnChanges({ value = {}, label = {} }) {\n        const { firstChange: firstChangeValue } = value;\n        const { firstChange: firstChangeLabel } = label;\n        if (firstChangeLabel && firstChangeValue) {\n            return;\n        }\n        this.dropdownCDRef.detectChanges();\n    }\n}\nDropdownMultiSelectOptionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMultiSelectOptionComponent, deps: [{ token: BB_MULTI_SELECT_CHANGE_DETECTION_REF_TOKEN }, { token: i1.DomAttributesService }], target: i0.ɵɵFactoryTarget.Component });\nDropdownMultiSelectOptionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DropdownMultiSelectOptionComponent, selector: \"bb-dropdown-multi-select-option-ui\", inputs: { id: \"id\", value: \"value\", label: \"label\", state: \"state\" }, usesOnChanges: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMultiSelectOptionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-dropdown-multi-select-option-ui',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef, decorators: [{\n                    type: Inject,\n                    args: [BB_MULTI_SELECT_CHANGE_DETECTION_REF_TOKEN]\n                }] }, { type: i1.DomAttributesService }]; }, propDecorators: { id: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], state: [{\n                type: Input\n            }] } });\n\n/**\n * @name DropdownMultiSelectComponent\n *\n * @description\n * Component that use for DropDown Multi Select.\n */\nclass DropdownMultiSelectComponent extends InputBaseComponent {\n    constructor(cd, domAttributesService, deprecationsService) {\n        super(cd, deprecationsService);\n        this.cd = cd;\n        this.domAttributesService = domAttributesService;\n        this.deprecationsService = deprecationsService;\n        this.unsubscribe$ = new Subject();\n        /**\n         * The placeholder for the multi select.\n         */\n        this.placeholder = 'No items selected';\n        /**\n         * The label for the Dropdown multi select. Defaults to an empty string.\n         */\n        this.label = '';\n        /**\n         * Enable filtering; Defaults to false.\n         */\n        this.filtering = false;\n        /**\n         * Whether the Dropdown multi select is read only. Defaults to false.\n         */\n        this.readonly = false;\n        /**\n         * The child option components of type DropDownMultiSelectSingleOption\n         */\n        this.isIE = navigator.userAgent.indexOf('MSIE ') > -1 || navigator.userAgent.indexOf('Trident/') > -1;\n        this.activeOptionIndex = -1;\n        this.isOptionsFocused = false;\n        this.formGroup = new FormGroup({});\n        this.formValue$ = this.formGroup.valueChanges.pipe(map((formValue) => this.getSelectedValues(formValue)), takeUntil(this.unsubscribe$));\n        this.labelsMap = {};\n        this.buttonLabelId = this.domAttributesService.generateId();\n        this.clearOptions$ = new Subject();\n        this.selectedValuesSubject$ = new BehaviorSubject([]);\n        this.selectedValues$ = this.selectedValuesSubject$.asObservable();\n        this.searchKey = '';\n        this.cachedValue = {};\n        this.isOpen = false;\n        this.buttonLabelId = this.domAttributesService.generateId();\n        this.formValue$.subscribe(this.selectedValuesSubject$);\n        this.formValue$.subscribe((value) => {\n            if (value && value.length === 0) {\n                this.onChange(undefined);\n            }\n            else {\n                this.onValueChange(value);\n            }\n        });\n        this.clearOptions$\n            .pipe(withLatestFrom(this.selectedValues$), takeUntil(this.unsubscribe$))\n            .subscribe(([, items]) => {\n            items.forEach((item) => {\n                this.formGroup.patchValue({ [item]: false }, { emitEvent: false });\n            });\n            this.formGroup.updateValueAndValidity();\n        });\n    }\n    ngAfterContentInit() {\n        if (this.contentOptions) {\n            this.contentOptions.forEach(({ value, label }) => {\n                this.formGroup.registerControl(value, new FormControl(this.cachedValue[value] || false));\n                Object.assign(this.labelsMap, { [value]: label });\n            });\n            if (Object.keys(this.cachedValue).length) {\n                this.formGroup.updateValueAndValidity();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.unsubscribe$.next();\n        this.unsubscribe$.complete();\n    }\n    /**\n     * Unselect all selected options from the listbox\n     *\n     * @param $event\n     */\n    clearAll($event) {\n        $event.preventDefault();\n        this.clearOptions$.next();\n    }\n    /**\n     *\n     * @param index\n     * @param item\n     */\n    trackByValueFn(index, item) {\n        return item.value;\n    }\n    /**\n     *\n     * @param value\n     */\n    writeValue(value) {\n        const valuesMap = (value || []).reduce((acc, item) => Object.assign(acc, { [item]: true }), {});\n        this.cachedValue = valuesMap;\n        Object.keys(this.formGroup.controls).forEach((key) => {\n            this.formGroup.controls[key].setValue(valuesMap[key] || false, { emitEvent: false });\n        });\n        this.formGroup.updateValueAndValidity({ emitEvent: false });\n        const selectedValues = this.getSelectedValues(this.formGroup.value);\n        this.selectedValuesSubject$.next(selectedValues);\n    }\n    /**\n     * Updating labels while searching\n     *\n     * @param label\n     */\n    getLabel(label) {\n        return this.searchKey.toLocaleLowerCase() === label[0].toLocaleLowerCase() && this.filtering\n            ? `<b>${label[0]}</b>${label.substring(1)}`\n            : label;\n    }\n    onListboxFocus() {\n        this.activeOptionIndex = 0;\n        this.isOptionsFocused = true;\n    }\n    /* eslint-disable complexity */\n    onListboxKeyDown(event) {\n        if (!this.disabled && this.isOpen && this.isOptionsFocused) {\n            const keyCode = this.isIE ? event.keyCode : event.key;\n            switch (keyCode) {\n                case 40:\n                case KEY_CODES.DOWN:\n                    this.activeOptionIndex = Math.min(this.activeOptionIndex + 1, this.options.length - 1);\n                    break;\n                case 38:\n                case KEY_CODES.UP:\n                    this.activeOptionIndex = Math.max(this.activeOptionIndex - 1, 0);\n                    break;\n                case 13:\n                case 32:\n                case KEY_CODES.ENTER:\n                case KEY_CODES.SPACE:\n                    this.selectActiveOption();\n                    break;\n                default:\n                    if (this.filtering) {\n                        this.searchKey = event.key;\n                        this.setActiveOptionBaseOnSearchKey(event.key);\n                    }\n            }\n            // let Tab key to jump out and close the dropdown menu\n            if (keyCode !== 9 && keyCode !== KEY_CODES.TAB) {\n                event.preventDefault();\n            }\n        }\n    }\n    /* eslint-enable complexity */\n    /**\n     *\n     */\n    onListboxBlur() {\n        this.activeOptionIndex = -1;\n        this.isOptionsFocused = false;\n    }\n    /**\n     *\n     * @param isOpen\n     */\n    onDropdownToggle(isOpen) {\n        this.activeOptionIndex = -1;\n        this.isOptionsFocused = false;\n        this.isOpen = isOpen;\n    }\n    getLabeledByIds(...tokens) {\n        return idListAttr(...tokens);\n    }\n    // only taking consideration the focusable elements of the control\n    onFocusOut(event) {\n        const nextFocusedElement = event.relatedTarget;\n        const focusOutElement = event.target;\n        if ((focusOutElement === this.toggleButton.nativeElement &&\n            nextFocusedElement !== this.clearAllButton.nativeElement &&\n            nextFocusedElement !== this.listbox.nativeElement) ||\n            (focusOutElement === this.clearAllButton.nativeElement &&\n                nextFocusedElement !== this.toggleButton.nativeElement &&\n                nextFocusedElement !== this.listbox.nativeElement) ||\n            (focusOutElement === this.listbox.nativeElement &&\n                nextFocusedElement !== this.toggleButton.nativeElement &&\n                nextFocusedElement !== this.clearAllButton.nativeElement)) {\n            super.onBlur();\n        }\n    }\n    getSelectedValues(formValue) {\n        return Object.keys(formValue).reduce((acc, key) => {\n            if (formValue[key]) {\n                acc.push(key);\n            }\n            return acc;\n        }, []);\n    }\n    selectActiveOption() {\n        const el = this.options.toArray()[this.activeOptionIndex];\n        el === null || el === void 0 ? void 0 : el.nativeElement.click();\n    }\n    setActiveOptionBaseOnSearchKey(key) {\n        this.activeOptionIndex = this.options\n            .toArray()\n            .findIndex((item) => key.toLocaleLowerCase() === item.nativeElement.innerText[0].toLocaleLowerCase());\n    }\n}\nDropdownMultiSelectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMultiSelectComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DomAttributesService }, { token: i2.DeprecationsService }], target: i0.ɵɵFactoryTarget.Component });\nDropdownMultiSelectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DropdownMultiSelectComponent, selector: \"bb-dropdown-multi-select-ui\", inputs: { dropdownHeaderText: \"dropdownHeaderText\", placeholder: \"placeholder\", label: \"label\", filtering: \"filtering\", readonly: \"readonly\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DropdownMultiSelectComponent),\n            multi: true,\n        },\n        {\n            provide: BB_MULTI_SELECT_CHANGE_DETECTION_REF_TOKEN,\n            useExisting: ChangeDetectorRef,\n        },\n    ], queries: [{ propertyName: \"contentOptions\", predicate: DropdownMultiSelectOptionComponent }], viewQueries: [{ propertyName: \"clearAllButton\", first: true, predicate: [\"clearOptions\"], descendants: true }, { propertyName: \"dropDownMenu\", first: true, predicate: [\"dropDownMenu\"], descendants: true }, { propertyName: \"toggleButton\", first: true, predicate: [\"toggleButton\"], descendants: true }, { propertyName: \"listbox\", first: true, predicate: [\"listbox\"], descendants: true }, { propertyName: \"options\", predicate: [\"option\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<label *ngIf=\\\"label\\\" for=\\\"{{ id }}_dropdown-option_input\\\" [id]=\\\"'bb-dropdown-multi-select-label' + id\\\">\\n  {{ label }}\\n</label>\\n<div #dropDownMenu>\\n  <bb-dropdown-panel-ui\\n    (open)=\\\"onDropdownToggle($event)\\\"\\n    [ngClass]=\\\"{ 'bb-dropdown-multi-select--disabled': disabled || readonly }\\\"\\n    class=\\\"bb-dropdown-multi-select\\\"\\n  >\\n    <ng-template bbDropdownToggle let-isOpen=\\\"isOpen\\\">\\n      <button\\n        [attr.data-role]=\\\"'expand-button'\\\"\\n        #toggleButton\\n        [attr.required]=\\\"required ? true : undefined\\\"\\n        [attr.aria-expanded]=\\\"isOpen\\\"\\n        [attr.aria-labelledby]=\\\"getLabeledByIds('bb-dropdown-multi-select-label' + id, ariaLabelledby, buttonLabelId)\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        [attr.aria-activedescendant]=\\\"ariaActivedescendant\\\"\\n        [attr.aria-invalid]=\\\"ariaInvalid\\\"\\n        [attr.aria-owns]=\\\"ariaOwns\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [disabled]=\\\"disabled\\\"\\n        aria-haspopup=\\\"listbox\\\"\\n        (focus)=\\\"onFocus()\\\"\\n        (focusout)=\\\"onFocusOut($event)\\\"\\n        class=\\\"\\n          bb-stack--wrap\\n          bb-dropdown-multi-select__toggle\\n          bb-stack bb-text-align-left\\n          bb-stack--align-top\\n          form-control\\n        \\\"\\n        type=\\\"button\\\"\\n        id=\\\"{{ id }}\\\"\\n      >\\n        <span class=\\\"bb-dropdown-multi-select__result\\\" [id]=\\\"buttonLabelId\\\" [attr.data-role]=\\\"'dropdown-result'\\\">\\n          <span *ngIf=\\\"(selectedValues$ | async)?.length; else placeholderTemplate\\\">\\n            <ng-container *ngFor=\\\"let item of selectedValues$ | async; last as last\\\">\\n              {{ labelsMap[item] + (last ? '' : ', ') }}\\n            </ng-container>\\n          </span>\\n          <ng-template #placeholderTemplate>\\n            <span class=\\\"bb-text-support\\\">{{ placeholder }}</span>\\n          </ng-template>\\n        </span>\\n        <span class=\\\"bb-stack__item--push-right\\\">\\n          <bb-icon-ui [cropped]=\\\"true\\\" [name]=\\\"isOpen ? 'toggle-up' : 'toggle-down'\\\"></bb-icon-ui>\\n        </span>\\n      </button>\\n    </ng-template>\\n    <ng-template bbDropdownMenu>\\n      <div>\\n        <button\\n          [attr.data-role]=\\\"'clear-btn'\\\"\\n          #clearOptions\\n          bbButton\\n          color=\\\"unstyled\\\"\\n          class=\\\"bb-dropdown-multi-select__clear-button\\\"\\n          (click)=\\\"clearAll($event)\\\"\\n          i18n=\\\"Clear selection button text@@dropdown-multiple-select.clear-selection.button\\\"\\n          (focusout)=\\\"onFocusOut($event)\\\"\\n        >\\n          Clear selection\\n        </button>\\n      </div>\\n      <div class=\\\"dropdown-divider\\\"></div>\\n      <div *ngIf=\\\"dropdownHeaderText\\\" [id]=\\\"'bb-dropdown-multi-select-header_' + id\\\" class=\\\"dropdown-header\\\">\\n        {{ dropdownHeaderText }}\\n      </div>\\n      <div\\n        #listbox\\n        role=\\\"listbox\\\"\\n        aria-multiselectable=\\\"true\\\"\\n        tabindex=\\\"0\\\"\\n        [attr.aria-labelledby]=\\\"dropdownHeaderText ? getLabeledByIds('bb-dropdown-multi-select-header_' + id) : null\\\"\\n        class=\\\"bb-dropdown-multi-select__options-list\\\"\\n        [attr.aria-activedescendant]=\\\"\\n          activeOptionIndex >= 0 ? 'bb-dropdown-multi-select-option-' + (id + activeOptionIndex) : undefined\\n        \\\"\\n        *ngIf=\\\"contentOptions?.length && formGroup.controls[contentOptions?.first.value]\\\"\\n        (keydown)=\\\"onListboxKeyDown($event)\\\"\\n        (focus)=\\\"onListboxFocus()\\\"\\n        (blur)=\\\"onListboxBlur()\\\"\\n        (focusout)=\\\"onFocusOut($event)\\\"\\n      >\\n        <label\\n          *ngFor=\\\"let contentOption of contentOptions; index as i; trackBy: trackByValueFn\\\"\\n          #option\\n          (click)=\\\"activeOptionIndex = i\\\"\\n          role=\\\"option\\\"\\n          class=\\\"dropdown-item dropdown-option\\\"\\n          [ngClass]=\\\"{\\n            'active dropdown-option--active': activeOptionIndex === i,\\n            'dropdown-option--selected': !!formGroup.controls[contentOption.value].value\\n          }\\\"\\n          [attr.data-role]=\\\"'option-' + i\\\"\\n          [attr.aria-selected]=\\\"formGroup.controls[contentOption.value].value\\\"\\n          [id]=\\\"'bb-dropdown-multi-select-option-' + id + i\\\"\\n        >\\n          <input\\n            class=\\\"dropdown-option__input\\\"\\n            type=\\\"checkbox\\\"\\n            id=\\\"{{ id }}_dropdown-option_input\\\"\\n            [attr.data-role]=\\\"'option-' + (id + i + 1)\\\"\\n            [formControl]=\\\"formGroup.controls[contentOption.value]\\\"\\n          />\\n          <span [innerHTML]=\\\"getLabel(contentOption.label)\\\"></span>\\n        </label>\\n      </div>\\n    </ng-template>\\n  </bb-dropdown-panel-ui>\\n</div>\\n\", components: [{ type: i3.DropdownPanelComponent, selector: \"bb-dropdown-panel-ui\", outputs: [\"open\"] }, { type: i4.IconComponent, selector: \"bb-icon-ui\", inputs: [\"name\", \"inverse\", \"size\", \"color\", \"animate\", \"aria-label\", \"cropped\", \"backgroundType\"] }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i5.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3.DropdownToggleDirective, selector: \"ng-template[bbDropdownToggle]\" }, { type: i5.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.DropdownMenuDirective, selector: \"ng-template[bbDropdownMenu]\" }, { type: i6.ButtonDirective, selector: \"button[bbButton]\", inputs: [\"type\", \"color\", \"buttonSize\", \"block\", \"circle\"] }, { type: i7.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { type: i7.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i7.FormControlDirective, selector: \"[formControl]\", inputs: [\"disabled\", \"formControl\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }], pipes: { \"async\": i5.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMultiSelectComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-dropdown-multi-select-ui',\n                    templateUrl: './dropdown-multi-select.component.html',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => DropdownMultiSelectComponent),\n                            multi: true,\n                        },\n                        {\n                            provide: BB_MULTI_SELECT_CHANGE_DETECTION_REF_TOKEN,\n                            useExisting: ChangeDetectorRef,\n                        },\n                    ],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DomAttributesService }, { type: i2.DeprecationsService }]; }, propDecorators: { dropdownHeaderText: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], filtering: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], contentOptions: [{\n                type: ContentChildren,\n                args: [DropdownMultiSelectOptionComponent]\n            }], options: [{\n                type: ViewChildren,\n                args: ['option']\n            }], clearAllButton: [{\n                type: ViewChild,\n                args: ['clearOptions']\n            }], dropDownMenu: [{\n                type: ViewChild,\n                args: ['dropDownMenu']\n            }], toggleButton: [{\n                type: ViewChild,\n                args: ['toggleButton']\n            }], listbox: [{\n                type: ViewChild,\n                args: ['listbox']\n            }] } });\n\nclass DropdownMultiSelectModule {\n}\nDropdownMultiSelectModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMultiSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDropdownMultiSelectModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMultiSelectModule, declarations: [DropdownMultiSelectComponent, DropdownMultiSelectOptionComponent], imports: [CommonModule, IconModule, InputCheckboxModule, DropdownPanelModule, ReactiveFormsModule, ButtonModule], exports: [DropdownMultiSelectComponent, DropdownMultiSelectOptionComponent] });\nDropdownMultiSelectModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMultiSelectModule, imports: [[CommonModule, IconModule, InputCheckboxModule, DropdownPanelModule, ReactiveFormsModule, ButtonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownMultiSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, IconModule, InputCheckboxModule, DropdownPanelModule, ReactiveFormsModule, ButtonModule],\n                    declarations: [DropdownMultiSelectComponent, DropdownMultiSelectOptionComponent],\n                    exports: [DropdownMultiSelectComponent, DropdownMultiSelectOptionComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DropdownMultiSelectComponent, DropdownMultiSelectModule, DropdownMultiSelectOptionComponent };\n"]},"metadata":{},"sourceType":"module"}