{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, Input, ViewChild, ContentChildren, HostListener, NgModule } from '@angular/core';\nimport * as i3 from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport * as i2 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i1 from '@backbase/foundation-ang/core';\nimport * as i4 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\n/**\n * @name ProductSelectorComponent\n *\n * @description\n * A dropdown component that displays items in a pre-defined format.\n *\n * @a11y\n * Every items from list in custom templates need have\n * role=\"option\" attribute, for detection by Screen Reader like option.\n *\n * Every items from list in custom templates need have  #listItem,\n * for keyBoard accessibility(navigate with keyUp/keyDown)\n */\n\nconst _c0 = [\"listItem\"];\nconst _c1 = [\"bbDropdown\"];\nconst _c2 = [\"dropdownToggle\"];\nconst _c3 = [[[\"\", \"bbDropdownToggle\", \"\"]], [[\"\", \"bbDropdownMenu\", \"\"]]];\nconst _c4 = [\"[bbDropdownToggle]\", \"[bbDropdownMenu]\"];\n\nclass ProductSelectorComponent {\n  constructor(deprecationsService) {\n    this.deprecationsService = deprecationsService;\n    /**\n     * Focused item index from product selector list\n     */\n\n    this.focusedItemIndex = -1;\n    /**\n     * State of focus on product selector element\n     */\n\n    this.focusState = '';\n    /**\n     * Open/close state of dropDown menu\n     */\n\n    this.isOpen = false;\n    /**\n     * Whether the dropdown should be closed when clicking one of dropdown items or pressing ESC\n     */\n\n    this.autoClose = true;\n    /**\n     * The relative position where the dropdown menu will be open\n     */\n\n    this.position = 'bottom';\n    /**\n     * Specifies which element the dropdown should be appended to.\n     */\n\n    this.container = '';\n    this.isIE = navigator.userAgent.indexOf('MSIE ') > -1 || navigator.userAgent.indexOf('Trident/') > -1;\n  }\n\n  onKeyEvent(event) {\n    if (this.isOpen) {\n      switch (this.isIE ? event.keyCode : event.key) {\n        case 40:\n        case 'ArrowDown':\n          this.focusedItemIndex = Math.min(this.focusedItemIndex + 1, this.listItems.length - 1);\n          this.focusItem();\n          break;\n\n        case 38:\n        case 'ArrowUp':\n          this.focusedItemIndex = Math.max(this.focusedItemIndex - 1, 0);\n          this.focusItem();\n          break;\n\n        default:\n          return;\n      }\n\n      event.preventDefault();\n    }\n  }\n\n  close() {\n    if (this.bbDropdown && this.autoClose && this.bbDropdown.isOpen()) {\n      this.bbDropdown.close();\n    }\n  }\n\n  open() {\n    if (this.bbDropdown && !this.bbDropdown.isOpen()) {\n      this.bbDropdown.open();\n    }\n  }\n\n  onClose() {\n    if (this.autoClose) {\n      this.close();\n      this.dropdownToggle.nativeElement.focus();\n    }\n  }\n\n  focusItem() {\n    this.listItems.forEach((el, index) => {\n      if (index === this.focusedItemIndex) {\n        el.nativeElement.tabIndex = 0;\n        el.nativeElement.focus();\n      }\n    });\n  }\n  /**\n   * Event handler for change open/close state in dropdown menu\n   */\n\n\n  onOpenChange($event) {\n    this.isOpen = $event;\n\n    if (!this.isOpen) {\n      this.focusedItemIndex = -1;\n    }\n  }\n  /**\n   * Event handler for blur dropdown menu\n   */\n\n\n  onBlur() {\n    if (this.bbDropdown && this.bbDropdown.isOpen()) {\n      this.bbDropdown.close();\n    }\n  }\n\n}\n\nProductSelectorComponent.ɵfac = function ProductSelectorComponent_Factory(t) {\n  return new (t || ProductSelectorComponent)(i0.ɵɵdirectiveInject(i1.DeprecationsService));\n};\n\nProductSelectorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ProductSelectorComponent,\n  selectors: [[\"bb-product-selector-ui\"]],\n  contentQueries: function ProductSelectorComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c0, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listItems = _t);\n    }\n  },\n  viewQuery: function ProductSelectorComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c1, 7);\n      i0.ɵɵviewQuery(_c2, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.bbDropdown = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdownToggle = _t.first);\n    }\n  },\n  hostBindings: function ProductSelectorComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function ProductSelectorComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKeyEvent($event);\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  inputs: {\n    autoClose: \"autoClose\",\n    position: \"position\",\n    container: \"container\"\n  },\n  ngContentSelectors: _c4,\n  decls: 11,\n  vars: 7,\n  consts: [[1, \"bb-product-selector\"], [\"ngbDropdown\", \"\", 1, \"bb-product-selector__dropdown\", 3, \"autoClose\", \"container\", \"placement\", \"blur\", \"openChange\"], [\"bbDropdown\", \"ngbDropdown\"], [\"ngbDropdownToggle\", \"\", \"bbButton\", \"\", \"color\", \"unstyled\", \"type\", \"button\", 1, \"bb-product-selector__item\"], [\"dropdownToggle\", \"\"], [1, \"bb-product-selector__item-content\"], [\"cropped\", \"\", 1, \"bb-product-selector__icon\", 3, \"name\"], [\"ngbDropdownMenu\", \"\", \"role\", \"menu\", 1, \"bb-product-selector__dropdown-menu-panel\", 3, \"click\"], [1, \"bb-product-selector__dropdown-menu\"]],\n  template: function ProductSelectorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c3);\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1, 2);\n      i0.ɵɵlistener(\"blur\", function ProductSelectorComponent_Template_div_blur_1_listener() {\n        return ctx.onBlur();\n      })(\"openChange\", function ProductSelectorComponent_Template_div_openChange_1_listener($event) {\n        return ctx.onOpenChange($event);\n      });\n      i0.ɵɵelementStart(3, \"button\", 3, 4);\n      i0.ɵɵelementStart(5, \"div\", 5);\n      i0.ɵɵprojection(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"bb-icon-ui\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 7);\n      i0.ɵɵlistener(\"click\", function ProductSelectorComponent_Template_div_click_8_listener() {\n        return ctx.onClose();\n      });\n      i0.ɵɵelementStart(9, \"div\", 8);\n      i0.ɵɵprojection(10, 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"autoClose\", ctx.autoClose)(\"container\", ctx.container)(\"placement\", ctx.position);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"data-role\", \"product-selector-expand-button\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"data-role\", \"product-selector-selected-content\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"name\", ctx.isOpen ? \"toggle-up\" : \"toggle-down\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"data-role\", \"product-selector-dropdown-menu\");\n    }\n  },\n  directives: [i3.NgbDropdown, i4.ButtonDirective, i3.NgbDropdownToggle, i2.IconComponent, i3.NgbDropdownMenu],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductSelectorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-product-selector-ui',\n      templateUrl: './product-selector.component.html'\n    }]\n  }], function () {\n    return [{\n      type: i1.DeprecationsService\n    }];\n  }, {\n    autoClose: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    bbDropdown: [{\n      type: ViewChild,\n      args: ['bbDropdown', {\n        static: true\n      }]\n    }],\n    dropdownToggle: [{\n      type: ViewChild,\n      args: ['dropdownToggle']\n    }],\n    listItems: [{\n      type: ContentChildren,\n      args: ['listItem']\n    }],\n    onKeyEvent: [{\n      type: HostListener,\n      args: ['window:keydown', ['$event']]\n    }]\n  });\n})();\n\nclass ProductSelectorModule {}\n\nProductSelectorModule.ɵfac = function ProductSelectorModule_Factory(t) {\n  return new (t || ProductSelectorModule)();\n};\n\nProductSelectorModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ProductSelectorModule\n});\nProductSelectorModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, NgbDropdownModule, IconModule, ButtonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductSelectorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, NgbDropdownModule, IconModule, ButtonModule],\n      declarations: [ProductSelectorComponent],\n      exports: [ProductSelectorComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ProductSelectorComponent, ProductSelectorModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-product-selector.js"],"names":["CommonModule","i0","Component","Input","ViewChild","ContentChildren","HostListener","NgModule","i3","NgbDropdownModule","i2","IconModule","i1","i4","ButtonModule","ProductSelectorComponent","constructor","deprecationsService","focusedItemIndex","focusState","isOpen","autoClose","position","container","isIE","navigator","userAgent","indexOf","onKeyEvent","event","keyCode","key","Math","min","listItems","length","focusItem","max","preventDefault","close","bbDropdown","open","onClose","dropdownToggle","nativeElement","focus","forEach","el","index","tabIndex","onOpenChange","$event","onBlur","ɵfac","DeprecationsService","ɵcmp","NgbDropdown","ButtonDirective","NgbDropdownToggle","IconComponent","NgbDropdownMenu","type","args","selector","templateUrl","static","ProductSelectorModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, Input, ViewChild, ContentChildren, HostListener, NgModule } from '@angular/core';\nimport * as i3 from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport * as i2 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i1 from '@backbase/foundation-ang/core';\nimport * as i4 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\n\n/**\n * @name ProductSelectorComponent\n *\n * @description\n * A dropdown component that displays items in a pre-defined format.\n *\n * @a11y\n * Every items from list in custom templates need have\n * role=\"option\" attribute, for detection by Screen Reader like option.\n *\n * Every items from list in custom templates need have  #listItem,\n * for keyBoard accessibility(navigate with keyUp/keyDown)\n */\nclass ProductSelectorComponent {\n    constructor(deprecationsService) {\n        this.deprecationsService = deprecationsService;\n        /**\n         * Focused item index from product selector list\n         */\n        this.focusedItemIndex = -1;\n        /**\n         * State of focus on product selector element\n         */\n        this.focusState = '';\n        /**\n         * Open/close state of dropDown menu\n         */\n        this.isOpen = false;\n        /**\n         * Whether the dropdown should be closed when clicking one of dropdown items or pressing ESC\n         */\n        this.autoClose = true;\n        /**\n         * The relative position where the dropdown menu will be open\n         */\n        this.position = 'bottom';\n        /**\n         * Specifies which element the dropdown should be appended to.\n         */\n        this.container = '';\n        this.isIE = navigator.userAgent.indexOf('MSIE ') > -1 || navigator.userAgent.indexOf('Trident/') > -1;\n    }\n    onKeyEvent(event) {\n        if (this.isOpen) {\n            switch (this.isIE ? event.keyCode : event.key) {\n                case 40:\n                case 'ArrowDown':\n                    this.focusedItemIndex = Math.min(this.focusedItemIndex + 1, this.listItems.length - 1);\n                    this.focusItem();\n                    break;\n                case 38:\n                case 'ArrowUp':\n                    this.focusedItemIndex = Math.max(this.focusedItemIndex - 1, 0);\n                    this.focusItem();\n                    break;\n                default:\n                    return;\n            }\n            event.preventDefault();\n        }\n    }\n    close() {\n        if (this.bbDropdown && this.autoClose && this.bbDropdown.isOpen()) {\n            this.bbDropdown.close();\n        }\n    }\n    open() {\n        if (this.bbDropdown && !this.bbDropdown.isOpen()) {\n            this.bbDropdown.open();\n        }\n    }\n    onClose() {\n        if (this.autoClose) {\n            this.close();\n            this.dropdownToggle.nativeElement.focus();\n        }\n    }\n    focusItem() {\n        this.listItems.forEach((el, index) => {\n            if (index === this.focusedItemIndex) {\n                el.nativeElement.tabIndex = 0;\n                el.nativeElement.focus();\n            }\n        });\n    }\n    /**\n     * Event handler for change open/close state in dropdown menu\n     */\n    onOpenChange($event) {\n        this.isOpen = $event;\n        if (!this.isOpen) {\n            this.focusedItemIndex = -1;\n        }\n    }\n    /**\n     * Event handler for blur dropdown menu\n     */\n    onBlur() {\n        if (this.bbDropdown && this.bbDropdown.isOpen()) {\n            this.bbDropdown.close();\n        }\n    }\n}\nProductSelectorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSelectorComponent, deps: [{ token: i1.DeprecationsService }], target: i0.ɵɵFactoryTarget.Component });\nProductSelectorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ProductSelectorComponent, selector: \"bb-product-selector-ui\", inputs: { autoClose: \"autoClose\", position: \"position\", container: \"container\" }, host: { listeners: { \"window:keydown\": \"onKeyEvent($event)\" } }, queries: [{ propertyName: \"listItems\", predicate: [\"listItem\"] }], viewQueries: [{ propertyName: \"bbDropdown\", first: true, predicate: [\"bbDropdown\"], descendants: true, static: true }, { propertyName: \"dropdownToggle\", first: true, predicate: [\"dropdownToggle\"], descendants: true }], ngImport: i0, template: \"<div class=\\\"bb-product-selector\\\">\\n  <div\\n    ngbDropdown\\n    #bbDropdown=\\\"ngbDropdown\\\"\\n    [autoClose]=\\\"autoClose\\\"\\n    [container]=\\\"container\\\"\\n    (blur)=\\\"onBlur()\\\"\\n    (openChange)=\\\"onOpenChange($event)\\\"\\n    [placement]=\\\"position\\\"\\n    class=\\\"bb-product-selector__dropdown\\\"\\n  >\\n    <button\\n      ngbDropdownToggle\\n      #dropdownToggle\\n      bbButton\\n      color=\\\"unstyled\\\"\\n      class=\\\"bb-product-selector__item\\\"\\n      [attr.data-role]=\\\"'product-selector-expand-button'\\\"\\n      type=\\\"button\\\"\\n    >\\n      <div class=\\\"bb-product-selector__item-content\\\" [attr.data-role]=\\\"'product-selector-selected-content'\\\">\\n        <ng-content select=\\\"[bbDropdownToggle]\\\"></ng-content>\\n      </div>\\n      <bb-icon-ui cropped class=\\\"bb-product-selector__icon\\\" [name]=\\\"isOpen ? 'toggle-up' : 'toggle-down'\\\"></bb-icon-ui>\\n    </button>\\n    <div\\n      ngbDropdownMenu\\n      class=\\\"bb-product-selector__dropdown-menu-panel\\\"\\n      role=\\\"menu\\\"\\n      (click)=\\\"onClose()\\\"\\n      [attr.data-role]=\\\"'product-selector-dropdown-menu'\\\"\\n    >\\n      <div class=\\\"bb-product-selector__dropdown-menu\\\">\\n        <ng-content select=\\\"[bbDropdownMenu]\\\"></ng-content>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\", components: [{ type: i2.IconComponent, selector: \"bb-icon-ui\", inputs: [\"name\", \"inverse\", \"size\", \"color\", \"animate\", \"aria-label\", \"cropped\", \"backgroundType\"] }], directives: [{ type: i3.NgbDropdown, selector: \"[ngbDropdown]\", inputs: [\"open\", \"placement\", \"container\", \"autoClose\", \"display\", \"dropdownClass\"], outputs: [\"openChange\"], exportAs: [\"ngbDropdown\"] }, { type: i4.ButtonDirective, selector: \"button[bbButton]\", inputs: [\"type\", \"color\", \"buttonSize\", \"block\", \"circle\"] }, { type: i3.NgbDropdownToggle, selector: \"[ngbDropdownToggle]\" }, { type: i3.NgbDropdownMenu, selector: \"[ngbDropdownMenu]\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSelectorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-product-selector-ui',\n                    templateUrl: './product-selector.component.html',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.DeprecationsService }]; }, propDecorators: { autoClose: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], bbDropdown: [{\n                type: ViewChild,\n                args: ['bbDropdown', { static: true }]\n            }], dropdownToggle: [{\n                type: ViewChild,\n                args: ['dropdownToggle']\n            }], listItems: [{\n                type: ContentChildren,\n                args: ['listItem']\n            }], onKeyEvent: [{\n                type: HostListener,\n                args: ['window:keydown', ['$event']]\n            }] } });\n\nclass ProductSelectorModule {\n}\nProductSelectorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSelectorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nProductSelectorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSelectorModule, declarations: [ProductSelectorComponent], imports: [CommonModule, NgbDropdownModule, IconModule, ButtonModule], exports: [ProductSelectorComponent] });\nProductSelectorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSelectorModule, imports: [[CommonModule, NgbDropdownModule, IconModule, ButtonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSelectorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, NgbDropdownModule, IconModule, ButtonModule],\n                    declarations: [ProductSelectorComponent],\n                    exports: [ProductSelectorComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ProductSelectorComponent, ProductSelectorModule };\n"]},"metadata":{},"sourceType":"module"}