{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\nconst BILLPAY_BASE_PATH = new InjectionToken('BILLPAY_BASE_PATH');\nconst COLLECTION_FORMATS = {\n  'csv': ',',\n  'tsv': '   ',\n  'ssv': ' ',\n  'pipes': '|'\n};\n\nclass BillpayConfiguration {\n  constructor(configurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n    this.encoder = configurationParameters.encoder;\n\n    if (configurationParameters.credentials) {\n      this.credentials = configurationParameters.credentials;\n    } else {\n      this.credentials = {};\n    }\n  }\n\n  selectHeaderContentType(contentTypes) {\n    if (contentTypes.length === 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n\n    return type;\n  }\n\n  selectHeaderAccept(accepts) {\n    if (accepts.length === 0) {\n      return undefined;\n    }\n\n    const type = accepts.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return accepts[0];\n    }\n\n    return type;\n  }\n\n  isJsonMime(mime) {\n    const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n    return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n  }\n\n  lookupCredential(key) {\n    const value = this.credentials[key];\n    return typeof value === 'function' ? value() : value;\n  }\n\n}\n\nconst CONFIG_TOKEN = new InjectionToken('api-data-module BillpayConfiguration');\n\nclass BillpayApiModule {\n  constructor(parentModule, http, dataModulesManager, config) {\n    if (parentModule) {\n      throw new Error('BillpayApiModule is already loaded. Import in your base AppModule only.');\n    }\n\n    if (!http) {\n      throw new Error('You need to import the HttpClientModule in your AppModule! \\n' + 'See also https://github.com/angular/angular/issues/20575');\n    }\n\n    if (dataModulesManager) {\n      dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n        apiRoot: '',\n        servicePath: config.basePath || '',\n        headers: {}\n      });\n    }\n  }\n\n  static forRoot(configurationFactory) {\n    return {\n      ngModule: BillpayApiModule,\n      providers: [{\n        provide: BillpayConfiguration,\n        useFactory: configurationFactory\n      }]\n    };\n  }\n\n}\n\nBillpayApiModule.ɵfac = function BillpayApiModule_Factory(t) {\n  return new (t || BillpayApiModule)(i0.ɵɵinject(BillpayApiModule, 12), i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DataModulesManager, 8), i0.ɵɵinject(BillpayConfiguration));\n};\n\nBillpayApiModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BillpayApiModule\n});\nBillpayApiModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [],\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BillpayApiModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [],\n      exports: [],\n      providers: []\n    }]\n  }], function () {\n    return [{\n      type: BillpayApiModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: i1.HttpClient,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2.DataModulesManager,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: BillpayConfiguration\n    }];\n  }, null);\n})();\n\nclass CustomHttpParameterCodec {\n  encodeKey(k) {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v) {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k) {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v) {\n    return decodeURIComponent(v);\n  }\n\n}\n\nclass BillPayAccountsService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new BillpayConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  getBillPayAccounts(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/accounts`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getBillPayAccountsUrl() {\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/accounts`;\n  }\n\n}\n\nBillPayAccountsService.ɵfac = function BillPayAccountsService_Factory(t) {\n  return new (t || BillPayAccountsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(BILLPAY_BASE_PATH, 8), i0.ɵɵinject(BillpayConfiguration, 8));\n};\n\nBillPayAccountsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BillPayAccountsService,\n  factory: BillPayAccountsService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BillPayAccountsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [BILLPAY_BASE_PATH]\n      }]\n    }, {\n      type: BillpayConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst BillPayAccountsServiceGetBillPayAccountsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/accounts\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"accounts\": [{\n        \"id\": \"1\",\n        \"accountNumber\": \"000000001\",\n        \"accountNickName\": \"Joint Account\",\n        \"accountType\": \"CHECKING_ACCOUNT\",\n        \"routingNumber\": \"000000011\",\n        \"accountBalance\": {\n          \"amount\": \"1000.01\",\n          \"currencyCode\": \"USD\"\n        }\n      }, {\n        \"id\": \"2\",\n        \"accountNumber\": \"000000002\",\n        \"accountType\": \"SAVINGS_ACCOUNT\",\n        \"routingNumber\": \"000000022\"\n      }, {\n        \"accountNumber\": \"000000003\",\n        \"accountType\": \"CHECKING_ACCOUNT\",\n        \"routingNumber\": \"000000033\",\n        \"accountBalance\": {\n          \"amount\": \"1000.03\",\n          \"currencyCode\": \"USD\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayAccountsServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/accounts\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"accounts\": [{\n        \"id\": \"1\",\n        \"accountNumber\": \"000000001\",\n        \"accountNickName\": \"Joint Account\",\n        \"accountType\": \"CHECKING_ACCOUNT\",\n        \"routingNumber\": \"000000011\",\n        \"accountBalance\": {\n          \"amount\": \"1000.01\",\n          \"currencyCode\": \"USD\"\n        }\n      }, {\n        \"id\": \"2\",\n        \"accountNumber\": \"000000002\",\n        \"accountType\": \"SAVINGS_ACCOUNT\",\n        \"routingNumber\": \"000000022\"\n      }, {\n        \"accountNumber\": \"000000003\",\n        \"accountType\": \"CHECKING_ACCOUNT\",\n        \"routingNumber\": \"000000033\",\n        \"accountBalance\": {\n          \"amount\": \"1000.03\",\n          \"currencyCode\": \"USD\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\n\nclass BillPayAutopayService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new BillpayConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  deleteBillPayAutopay(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling deleteBillPayAutopay.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/autopay`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deleteBillPayAutopayUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling deleteBillPayAutopay.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/autopay`;\n  }\n\n  putBillPayAutopay(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling putBillPayAutopay.');\n    }\n\n    const _billPayAutopayPutRequestBody = requestParameters[\"billPayAutopayPutRequestBody\"];\n\n    if (_billPayAutopayPutRequestBody === null || _billPayAutopayPutRequestBody === undefined) {\n      throw new Error('Required parameter billPayAutopayPutRequestBody was null or undefined when calling putBillPayAutopay.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/autopay`, _billPayAutopayPutRequestBody, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putBillPayAutopayUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling putBillPayAutopay.');\n    }\n\n    const _billPayAutopayPutRequestBody = requestParameters[\"billPayAutopayPutRequestBody\"];\n\n    if (_billPayAutopayPutRequestBody === null || _billPayAutopayPutRequestBody === undefined) {\n      throw new Error('Required parameter billPayAutopayPutRequestBody was null or undefined when calling putBillPayAutopay.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/autopay`;\n  }\n\n}\n\nBillPayAutopayService.ɵfac = function BillPayAutopayService_Factory(t) {\n  return new (t || BillPayAutopayService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(BILLPAY_BASE_PATH, 8), i0.ɵɵinject(BillpayConfiguration, 8));\n};\n\nBillPayAutopayService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BillPayAutopayService,\n  factory: BillPayAutopayService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BillPayAutopayService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [BILLPAY_BASE_PATH]\n      }]\n    }, {\n      type: BillpayConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst BillPayAutopayServiceDeleteBillPayAutopayMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/autopay\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayAutopayServicePutBillPayAutopayMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/autopay\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayAutopayServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/autopay\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/autopay\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\n\nclass BillPayEbillsService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new BillpayConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  deleteBillPayEbills(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling deleteBillPayEbills.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deleteBillPayEbillsUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling deleteBillPayEbills.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills`;\n  }\n\n  getBillPayEbillStatements(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _ebillId = requestParameters[\"ebillId\"];\n\n    if (_ebillId === null || _ebillId === undefined) {\n      throw new Error('Required parameter ebillId was null or undefined when calling getBillPayEbillStatements.');\n    }\n\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getBillPayEbillStatements.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/pdf', 'application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills/${encodeURIComponent(String(_ebillId))}/statements`, {\n      responseType: \"blob\",\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getBillPayEbillStatementsUrl(requestParameters) {\n    const _ebillId = requestParameters[\"ebillId\"];\n\n    if (_ebillId === null || _ebillId === undefined) {\n      throw new Error('Required parameter ebillId was null or undefined when calling getBillPayEbillStatements.');\n    }\n\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getBillPayEbillStatements.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills/${encodeURIComponent(String(_ebillId))}/statements`;\n  }\n\n  getBillPayEbills(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getBillPayEbills.');\n    }\n\n    const _status = requestParameters[\"status\"];\n\n    if (_status === null || _status === undefined) {\n      throw new Error('Required parameter status was null or undefined when calling getBillPayEbills.');\n    }\n\n    const _startDate = requestParameters[\"startDate\"];\n    const _endDate = requestParameters[\"endDate\"];\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    const _orderBy = requestParameters[\"orderBy\"];\n    const _direction = requestParameters[\"direction\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_status !== undefined && _status !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _status, 'status');\n    }\n\n    if (_startDate !== undefined && _startDate !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _startDate, 'startDate');\n    }\n\n    if (_endDate !== undefined && _endDate !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _endDate, 'endDate');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    if (_orderBy !== undefined && _orderBy !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _orderBy, 'orderBy');\n    }\n\n    if (_direction !== undefined && _direction !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _direction, 'direction');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getBillPayEbillsUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getBillPayEbills.');\n    }\n\n    const _status = requestParameters[\"status\"];\n\n    if (_status === null || _status === undefined) {\n      throw new Error('Required parameter status was null or undefined when calling getBillPayEbills.');\n    }\n\n    const _startDate = requestParameters[\"startDate\"];\n    const _endDate = requestParameters[\"endDate\"];\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    const _orderBy = requestParameters[\"orderBy\"];\n    const _direction = requestParameters[\"direction\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_status !== undefined && _status !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _status, 'status');\n    }\n\n    if (_startDate !== undefined && _startDate !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _startDate, 'startDate');\n    }\n\n    if (_endDate !== undefined && _endDate !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _endDate, 'endDate');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    if (_orderBy !== undefined && _orderBy !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _orderBy, 'orderBy');\n    }\n\n    if (_direction !== undefined && _direction !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _direction, 'direction');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills${queryString ? `?${queryString}` : ''}`;\n  }\n\n  putEbillById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _ebillId = requestParameters[\"ebillId\"];\n\n    if (_ebillId === null || _ebillId === undefined) {\n      throw new Error('Required parameter ebillId was null or undefined when calling putEbillById.');\n    }\n\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling putEbillById.');\n    }\n\n    const _ebillByIdPutRequestBody = requestParameters[\"ebillByIdPutRequestBody\"];\n\n    if (_ebillByIdPutRequestBody === null || _ebillByIdPutRequestBody === undefined) {\n      throw new Error('Required parameter ebillByIdPutRequestBody was null or undefined when calling putEbillById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills/${encodeURIComponent(String(_ebillId))}`, _ebillByIdPutRequestBody, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putEbillByIdUrl(requestParameters) {\n    const _ebillId = requestParameters[\"ebillId\"];\n\n    if (_ebillId === null || _ebillId === undefined) {\n      throw new Error('Required parameter ebillId was null or undefined when calling putEbillById.');\n    }\n\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling putEbillById.');\n    }\n\n    const _ebillByIdPutRequestBody = requestParameters[\"ebillByIdPutRequestBody\"];\n\n    if (_ebillByIdPutRequestBody === null || _ebillByIdPutRequestBody === undefined) {\n      throw new Error('Required parameter ebillByIdPutRequestBody was null or undefined when calling putEbillById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills/${encodeURIComponent(String(_ebillId))}`;\n  }\n\n}\n\nBillPayEbillsService.ɵfac = function BillPayEbillsService_Factory(t) {\n  return new (t || BillPayEbillsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(BILLPAY_BASE_PATH, 8), i0.ɵɵinject(BillpayConfiguration, 8));\n};\n\nBillPayEbillsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BillPayEbillsService,\n  factory: BillPayEbillsService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BillPayEbillsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [BILLPAY_BASE_PATH]\n      }]\n    }, {\n      type: BillpayConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst BillPayEbillsServiceDeleteBillPayEbillsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayEbillsServiceGetBillPayEbillStatementsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills/{ebillId}/statements\",\n  method: \"GET\",\n  responses: [{\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayEbillsServiceGetBillPayEbillsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"ebills\": [{\n        \"id\": \"20141219140239655592\",\n        \"payeeID\": \"0001\",\n        \"paymentDate\": \"2019-04-01\",\n        \"amount\": {\n          \"amount\": \"100.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"minAmountDue\": {\n          \"amount\": \"20.50\",\n          \"currencyCode\": \"USD\"\n        },\n        \"outstandingBalance\": {\n          \"amount\": \"101.98\",\n          \"currencyCode\": \"USD\"\n        },\n        \"status\": \"UNPAID\",\n        \"statementAvailable\": true\n      }, {\n        \"id\": \"20141219140239655591\",\n        \"payeeID\": \"0001\",\n        \"paymentDate\": \"2019-03-01\",\n        \"amount\": {\n          \"amount\": \"100.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"minAmountDue\": {\n          \"amount\": \"20.50\",\n          \"currencyCode\": \"USD\"\n        },\n        \"outstandingBalance\": {\n          \"amount\": \"201.98\",\n          \"currencyCode\": \"USD\"\n        },\n        \"status\": \"PAID\",\n        \"statementAvailable\": true,\n        \"paymentId\": \"abc0192802\"\n      }, {\n        \"id\": \"20141219140239655590\",\n        \"payeeID\": \"0001\",\n        \"paymentDate\": \"2019-02-01\",\n        \"amount\": {\n          \"amount\": \"100.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"minAmountDue\": {\n          \"amount\": \"20.50\",\n          \"currencyCode\": \"USD\"\n        },\n        \"outstandingBalance\": {\n          \"amount\": \"301.98\",\n          \"currencyCode\": \"USD\"\n        },\n        \"status\": \"PAID\",\n        \"url\": \"http://my.ebill.pdf\",\n        \"statementAvailable\": false\n      }],\n      \"totalCount\": 3\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayEbillsServicePutEbillByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills/{ebillId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayEbillsServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills/{ebillId}/statements\",\n  method: \"GET\",\n  responses: [{\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"ebills\": [{\n        \"id\": \"20141219140239655592\",\n        \"payeeID\": \"0001\",\n        \"paymentDate\": \"2019-04-01\",\n        \"amount\": {\n          \"amount\": \"100.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"minAmountDue\": {\n          \"amount\": \"20.50\",\n          \"currencyCode\": \"USD\"\n        },\n        \"outstandingBalance\": {\n          \"amount\": \"101.98\",\n          \"currencyCode\": \"USD\"\n        },\n        \"status\": \"UNPAID\",\n        \"statementAvailable\": true\n      }, {\n        \"id\": \"20141219140239655591\",\n        \"payeeID\": \"0001\",\n        \"paymentDate\": \"2019-03-01\",\n        \"amount\": {\n          \"amount\": \"100.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"minAmountDue\": {\n          \"amount\": \"20.50\",\n          \"currencyCode\": \"USD\"\n        },\n        \"outstandingBalance\": {\n          \"amount\": \"201.98\",\n          \"currencyCode\": \"USD\"\n        },\n        \"status\": \"PAID\",\n        \"statementAvailable\": true,\n        \"paymentId\": \"abc0192802\"\n      }, {\n        \"id\": \"20141219140239655590\",\n        \"payeeID\": \"0001\",\n        \"paymentDate\": \"2019-02-01\",\n        \"amount\": {\n          \"amount\": \"100.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"minAmountDue\": {\n          \"amount\": \"20.50\",\n          \"currencyCode\": \"USD\"\n        },\n        \"outstandingBalance\": {\n          \"amount\": \"301.98\",\n          \"currencyCode\": \"USD\"\n        },\n        \"status\": \"PAID\",\n        \"url\": \"http://my.ebill.pdf\",\n        \"statementAvailable\": false\n      }],\n      \"totalCount\": 3\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills/{ebillId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\n\nclass BillPayEnrolmentService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new BillpayConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  getBillPayEnrolment(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/enrolment`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getBillPayEnrolmentUrl() {\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/enrolment`;\n  }\n\n  postBillPayEnrolment(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/bill-pay/enrolment`, null, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postBillPayEnrolmentUrl() {\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/enrolment`;\n  }\n\n}\n\nBillPayEnrolmentService.ɵfac = function BillPayEnrolmentService_Factory(t) {\n  return new (t || BillPayEnrolmentService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(BILLPAY_BASE_PATH, 8), i0.ɵɵinject(BillpayConfiguration, 8));\n};\n\nBillPayEnrolmentService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BillPayEnrolmentService,\n  factory: BillPayEnrolmentService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BillPayEnrolmentService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [BILLPAY_BASE_PATH]\n      }]\n    }, {\n      type: BillpayConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst BillPayEnrolmentServiceGetBillPayEnrolmentMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/enrolment\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"enrolment\": {\n        \"enrolled\": true\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayEnrolmentServicePostBillPayEnrolmentMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/enrolment\",\n  method: \"POST\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayEnrolmentServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/enrolment\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"enrolment\": {\n        \"enrolled\": true\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/enrolment\",\n  method: \"POST\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\n\nclass BillPayPayeesService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new BillpayConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  deleteElectronicPayeeById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling deleteElectronicPayeeById.');\n    }\n\n    const _cancelPendingPayments = requestParameters[\"cancelPendingPayments\"];\n\n    if (_cancelPendingPayments === null || _cancelPendingPayments === undefined) {\n      throw new Error('Required parameter cancelPendingPayments was null or undefined when calling deleteElectronicPayeeById.');\n    }\n\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_cancelPendingPayments !== undefined && _cancelPendingPayments !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cancelPendingPayments, 'cancelPendingPayments');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deleteElectronicPayeeByIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling deleteElectronicPayeeById.');\n    }\n\n    const _cancelPendingPayments = requestParameters[\"cancelPendingPayments\"];\n\n    if (_cancelPendingPayments === null || _cancelPendingPayments === undefined) {\n      throw new Error('Required parameter cancelPendingPayments was null or undefined when calling deleteElectronicPayeeById.');\n    }\n\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_cancelPendingPayments !== undefined && _cancelPendingPayments !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cancelPendingPayments, 'cancelPendingPayments');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}${queryString ? `?${queryString}` : ''}`;\n  }\n\n  deletePayeeById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling deletePayeeById.');\n    }\n\n    const _cancelPendingPayments = requestParameters[\"cancelPendingPayments\"];\n\n    if (_cancelPendingPayments === null || _cancelPendingPayments === undefined) {\n      throw new Error('Required parameter cancelPendingPayments was null or undefined when calling deletePayeeById.');\n    }\n\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_cancelPendingPayments !== undefined && _cancelPendingPayments !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cancelPendingPayments, 'cancelPendingPayments');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/${encodeURIComponent(String(_id))}`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deletePayeeByIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling deletePayeeById.');\n    }\n\n    const _cancelPendingPayments = requestParameters[\"cancelPendingPayments\"];\n\n    if (_cancelPendingPayments === null || _cancelPendingPayments === undefined) {\n      throw new Error('Required parameter cancelPendingPayments was null or undefined when calling deletePayeeById.');\n    }\n\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_cancelPendingPayments !== undefined && _cancelPendingPayments !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cancelPendingPayments, 'cancelPendingPayments');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/${encodeURIComponent(String(_id))}${queryString ? `?${queryString}` : ''}`;\n  }\n\n  getElectronicPayeeById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getElectronicPayeeById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getElectronicPayeeByIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getElectronicPayeeById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}`;\n  }\n\n  getPayeeById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getPayeeById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/${encodeURIComponent(String(_id))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getPayeeByIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getPayeeById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/${encodeURIComponent(String(_id))}`;\n  }\n\n  postBillPayElectronicPayees(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _billPayElectronicPayeesPostRequestBody = requestParameters[\"billPayElectronicPayeesPostRequestBody\"];\n\n    if (_billPayElectronicPayeesPostRequestBody === null || _billPayElectronicPayeesPostRequestBody === undefined) {\n      throw new Error('Required parameter billPayElectronicPayeesPostRequestBody was null or undefined when calling postBillPayElectronicPayees.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic`, _billPayElectronicPayeesPostRequestBody, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postBillPayElectronicPayeesUrl(requestParameters) {\n    const _billPayElectronicPayeesPostRequestBody = requestParameters[\"billPayElectronicPayeesPostRequestBody\"];\n\n    if (_billPayElectronicPayeesPostRequestBody === null || _billPayElectronicPayeesPostRequestBody === undefined) {\n      throw new Error('Required parameter billPayElectronicPayeesPostRequestBody was null or undefined when calling postBillPayElectronicPayees.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic`;\n  }\n\n  postBillPayPayees(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _billPayPayeesPostRequestBody = requestParameters[\"billPayPayeesPostRequestBody\"];\n\n    if (_billPayPayeesPostRequestBody === null || _billPayPayeesPostRequestBody === undefined) {\n      throw new Error('Required parameter billPayPayeesPostRequestBody was null or undefined when calling postBillPayPayees.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/bill-pay/payees`, _billPayPayeesPostRequestBody, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postBillPayPayeesUrl(requestParameters) {\n    const _billPayPayeesPostRequestBody = requestParameters[\"billPayPayeesPostRequestBody\"];\n\n    if (_billPayPayeesPostRequestBody === null || _billPayPayeesPostRequestBody === undefined) {\n      throw new Error('Required parameter billPayPayeesPostRequestBody was null or undefined when calling postBillPayPayees.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payees`;\n  }\n\n  putElectronicPayeeById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling putElectronicPayeeById.');\n    }\n\n    const _electronicPayeeByIdPutRequestBody = requestParameters[\"electronicPayeeByIdPutRequestBody\"];\n\n    if (_electronicPayeeByIdPutRequestBody === null || _electronicPayeeByIdPutRequestBody === undefined) {\n      throw new Error('Required parameter electronicPayeeByIdPutRequestBody was null or undefined when calling putElectronicPayeeById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}`, _electronicPayeeByIdPutRequestBody, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putElectronicPayeeByIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling putElectronicPayeeById.');\n    }\n\n    const _electronicPayeeByIdPutRequestBody = requestParameters[\"electronicPayeeByIdPutRequestBody\"];\n\n    if (_electronicPayeeByIdPutRequestBody === null || _electronicPayeeByIdPutRequestBody === undefined) {\n      throw new Error('Required parameter electronicPayeeByIdPutRequestBody was null or undefined when calling putElectronicPayeeById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}`;\n  }\n\n  putPayeeById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling putPayeeById.');\n    }\n\n    const _payeeByIdPutRequestBody = requestParameters[\"payeeByIdPutRequestBody\"];\n\n    if (_payeeByIdPutRequestBody === null || _payeeByIdPutRequestBody === undefined) {\n      throw new Error('Required parameter payeeByIdPutRequestBody was null or undefined when calling putPayeeById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/${encodeURIComponent(String(_id))}`, _payeeByIdPutRequestBody, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putPayeeByIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling putPayeeById.');\n    }\n\n    const _payeeByIdPutRequestBody = requestParameters[\"payeeByIdPutRequestBody\"];\n\n    if (_payeeByIdPutRequestBody === null || _payeeByIdPutRequestBody === undefined) {\n      throw new Error('Required parameter payeeByIdPutRequestBody was null or undefined when calling putPayeeById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/${encodeURIComponent(String(_id))}`;\n  }\n\n}\n\nBillPayPayeesService.ɵfac = function BillPayPayeesService_Factory(t) {\n  return new (t || BillPayPayeesService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(BILLPAY_BASE_PATH, 8), i0.ɵɵinject(BillpayConfiguration, 8));\n};\n\nBillPayPayeesService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BillPayPayeesService,\n  factory: BillPayPayeesService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BillPayPayeesService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [BILLPAY_BASE_PATH]\n      }]\n    }, {\n      type: BillpayConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst BillPayPayeesServiceDeleteElectronicPayeeByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPayeesServiceDeletePayeeByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees/{id}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPayeesServiceGetElectronicPayeeByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"payee\": {\n        \"id\": \"123456789\",\n        \"name\": \"Backbase\",\n        \"nickName\": \"My Backbase\",\n        \"accountNumber\": \"987654321\",\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-02-25T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-02-26\",\n          \"nextPaymentDate\": \"2019-02-27\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\"\n        }, {\n          \"cutoffTime\": \"2019-02-18T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-02-19\",\n          \"nextPaymentDate\": \"2019-02-20\",\n          \"paymentServiceType\": \"OVERNIGHT_CHECK\",\n          \"deliveryDays\": 3,\n          \"fee\": {\n            \"amount\": \"9.99\",\n            \"currencyCode\": \"USD\"\n          }\n        }],\n        \"ebill\": {\n          \"capable\": true,\n          \"enabled\": true,\n          \"status\": \"ACTIVE\",\n          \"latestBill\": {\n            \"id\": \"20141219140239655590\",\n            \"amount\": {\n              \"amount\": \"100.99\",\n              \"currencyCode\": \"USD\"\n            },\n            \"minAmountDue\": {\n              \"amount\": \"20.50\",\n              \"currencyCode\": \"USD\"\n            },\n            \"outstandingBalance\": {\n              \"amount\": \"201.98\",\n              \"currencyCode\": \"USD\"\n            },\n            \"paymentDate\": \"2019-03-01\",\n            \"status\": \"PAID\",\n            \"url\": \"http://my.ebill.pdf\",\n            \"statementAvailable\": false,\n            \"paymentId\": \"abc0192802\"\n          },\n          \"autopay\": {\n            \"paymentAccount\": {\n              \"accountNumber\": \"11111111\",\n              \"routingNumber\": \"000000022\",\n              \"accountType\": \"SAVINGS_ACCOUNT\",\n              \"accountNickName\": \"Current Account\"\n            },\n            \"daysBeforePayOn\": 3,\n            \"maxPaymentAmount\": {\n              \"amount\": \"123\",\n              \"currencyCode\": \"USD\"\n            },\n            \"payOn\": \"BILL_ARRIVAL\",\n            \"payAmount\": \"FULL_AMOUNT\",\n            \"paymentScheduledAlert\": false,\n            \"paymentSentAlert\": true,\n            \"paymentCompleteAlert\": true\n          }\n        }\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPayeesServiceGetPayeeByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees/{id}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"payee\": {\n        \"id\": \"1\",\n        \"name\": \"Backbase\",\n        \"phoneNumber\": \"2345678901\",\n        \"address\": {\n          \"state\": \"SD\",\n          \"city\": \"SIOUX FALLS\",\n          \"address1\": \"PO BOX 6001\",\n          \"postalCode\": \"12345\"\n        },\n        \"overnightDeliveryAddress\": {\n          \"state\": \"FL\",\n          \"city\": \"Saint Petersburg\",\n          \"address1\": \"560 Carillon Parkway\",\n          \"postalCode\": \"33717\"\n        },\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-02-25T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-02-26\",\n          \"nextPaymentDate\": \"2019-02-27\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\"\n        }, {\n          \"cutoffTime\": \"2019-02-21T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-02-22\",\n          \"nextPaymentDate\": \"2019-02-25\",\n          \"paymentServiceType\": \"OVERNIGHT_CHECK\",\n          \"deliveryDays\": 3,\n          \"fee\": {\n            \"amount\": \"9.99\",\n            \"currencyCode\": \"USD\"\n          }\n        }]\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPayeesServicePostBillPayElectronicPayeesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPayeesServicePostBillPayPayeesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPayeesServicePutElectronicPayeeByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPayeesServicePutPayeeByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees/{id}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPayeesServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payees/{id}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"payee\": {\n        \"id\": \"123456789\",\n        \"name\": \"Backbase\",\n        \"nickName\": \"My Backbase\",\n        \"accountNumber\": \"987654321\",\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-02-25T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-02-26\",\n          \"nextPaymentDate\": \"2019-02-27\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\"\n        }, {\n          \"cutoffTime\": \"2019-02-18T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-02-19\",\n          \"nextPaymentDate\": \"2019-02-20\",\n          \"paymentServiceType\": \"OVERNIGHT_CHECK\",\n          \"deliveryDays\": 3,\n          \"fee\": {\n            \"amount\": \"9.99\",\n            \"currencyCode\": \"USD\"\n          }\n        }],\n        \"ebill\": {\n          \"capable\": true,\n          \"enabled\": true,\n          \"status\": \"ACTIVE\",\n          \"latestBill\": {\n            \"id\": \"20141219140239655590\",\n            \"amount\": {\n              \"amount\": \"100.99\",\n              \"currencyCode\": \"USD\"\n            },\n            \"minAmountDue\": {\n              \"amount\": \"20.50\",\n              \"currencyCode\": \"USD\"\n            },\n            \"outstandingBalance\": {\n              \"amount\": \"201.98\",\n              \"currencyCode\": \"USD\"\n            },\n            \"paymentDate\": \"2019-03-01\",\n            \"status\": \"PAID\",\n            \"url\": \"http://my.ebill.pdf\",\n            \"statementAvailable\": false,\n            \"paymentId\": \"abc0192802\"\n          },\n          \"autopay\": {\n            \"paymentAccount\": {\n              \"accountNumber\": \"11111111\",\n              \"routingNumber\": \"000000022\",\n              \"accountType\": \"SAVINGS_ACCOUNT\",\n              \"accountNickName\": \"Current Account\"\n            },\n            \"daysBeforePayOn\": 3,\n            \"maxPaymentAmount\": {\n              \"amount\": \"123\",\n              \"currencyCode\": \"USD\"\n            },\n            \"payOn\": \"BILL_ARRIVAL\",\n            \"payAmount\": \"FULL_AMOUNT\",\n            \"paymentScheduledAlert\": false,\n            \"paymentSentAlert\": true,\n            \"paymentCompleteAlert\": true\n          }\n        }\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payees/{id}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"payee\": {\n        \"id\": \"1\",\n        \"name\": \"Backbase\",\n        \"phoneNumber\": \"2345678901\",\n        \"address\": {\n          \"state\": \"SD\",\n          \"city\": \"SIOUX FALLS\",\n          \"address1\": \"PO BOX 6001\",\n          \"postalCode\": \"12345\"\n        },\n        \"overnightDeliveryAddress\": {\n          \"state\": \"FL\",\n          \"city\": \"Saint Petersburg\",\n          \"address1\": \"560 Carillon Parkway\",\n          \"postalCode\": \"33717\"\n        },\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-02-25T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-02-26\",\n          \"nextPaymentDate\": \"2019-02-27\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\"\n        }, {\n          \"cutoffTime\": \"2019-02-21T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-02-22\",\n          \"nextPaymentDate\": \"2019-02-25\",\n          \"paymentServiceType\": \"OVERNIGHT_CHECK\",\n          \"deliveryDays\": 3,\n          \"fee\": {\n            \"amount\": \"9.99\",\n            \"currencyCode\": \"USD\"\n          }\n        }]\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payees\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payees/{id}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\n\nclass BillPayPayeesSummaryService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new BillpayConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  getBillPayPayeesSummary(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/payees-summary`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getBillPayPayeesSummaryUrl() {\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payees-summary`;\n  }\n\n}\n\nBillPayPayeesSummaryService.ɵfac = function BillPayPayeesSummaryService_Factory(t) {\n  return new (t || BillPayPayeesSummaryService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(BILLPAY_BASE_PATH, 8), i0.ɵɵinject(BillpayConfiguration, 8));\n};\n\nBillPayPayeesSummaryService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BillPayPayeesSummaryService,\n  factory: BillPayPayeesSummaryService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BillPayPayeesSummaryService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [BILLPAY_BASE_PATH]\n      }]\n    }, {\n      type: BillpayConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst BillPayPayeesSummaryServiceGetBillPayPayeesSummaryMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees-summary\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"payeeSummaries\": [{\n        \"id\": \"0001\",\n        \"name\": \"Citibank\",\n        \"nickName\": \"My Bank\",\n        \"accountNumber\": \"246895317\",\n        \"electronic\": true,\n        \"hasRecurringPayments\": false,\n        \"nextPayment\": {\n          \"amount\": {\n            \"amount\": \"100.99\",\n            \"currencyCode\": \"USD\"\n          },\n          \"paymentDate\": \"2019-02-22\",\n          \"recurring\": false,\n          \"automaticPayment\": true,\n          \"fee\": {\n            \"amount\": \"9.99\",\n            \"currencyCode\": \"USD\"\n          }\n        },\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-02-21T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-02-22\",\n          \"nextPaymentDate\": \"2019-02-25\",\n          \"paymentServiceType\": \"EXPEDITED_PAYMENT\",\n          \"deliveryDays\": 3,\n          \"fee\": {\n            \"amount\": \"9.99\",\n            \"currencyCode\": \"USD\"\n          }\n        }, {\n          \"cutoffTime\": \"2019-02-25T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-02-26\",\n          \"nextPaymentDate\": \"2019-02-27\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\"\n        }],\n        \"ebill\": {\n          \"capable\": true,\n          \"enabled\": true,\n          \"status\": \"ACTIVE\",\n          \"latestBill\": {\n            \"id\": \"20141219140239655590\",\n            \"amount\": {\n              \"amount\": \"100.99\",\n              \"currencyCode\": \"USD\"\n            },\n            \"minAmountDue\": {\n              \"amount\": \"20.50\",\n              \"currencyCode\": \"USD\"\n            },\n            \"outstandingBalance\": {\n              \"amount\": \"201.98\",\n              \"currencyCode\": \"USD\"\n            },\n            \"paymentDate\": \"2019-03-01\",\n            \"status\": \"PAID\",\n            \"url\": \"http://my.ebill.pdf\",\n            \"statementAvailable\": false,\n            \"paymentId\": \"abc0192802\"\n          },\n          \"autopay\": {\n            \"paymentAccount\": {\n              \"accountNumber\": \"11111111\",\n              \"routingNumber\": \"000000022\",\n              \"accountType\": \"SAVINGS_ACCOUNT\",\n              \"accountNickName\": \"Current Account\"\n            },\n            \"daysBeforePayOn\": 3,\n            \"maxPaymentAmount\": {\n              \"amount\": \"123\",\n              \"currencyCode\": \"USD\"\n            },\n            \"payOn\": \"BILL_ARRIVAL\",\n            \"payAmount\": \"FULL_AMOUNT\",\n            \"paymentScheduledAlert\": false,\n            \"paymentSentAlert\": true,\n            \"paymentCompleteAlert\": true\n          }\n        },\n        \"overnightDeliveryAddress\": {\n          \"state\": \"FL\",\n          \"city\": \"Saint Petersburg\",\n          \"address1\": \"560 Carillon Parkway\",\n          \"postalCode\": \"33717\"\n        }\n      }, {\n        \"id\": \"0002\",\n        \"name\": \"Electric Company\",\n        \"accountNumber\": \"78641258\",\n        \"electronic\": true,\n        \"hasRecurringPayments\": true,\n        \"nextPayment\": {\n          \"amount\": {\n            \"amount\": \"101.99\",\n            \"currencyCode\": \"USD\"\n          },\n          \"paymentDate\": \"2019-02-28\",\n          \"recurring\": true,\n          \"automaticPayment\": false\n        },\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-02-25T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-02-26\",\n          \"nextPaymentDate\": \"2019-02-27\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\"\n        }],\n        \"ebill\": {\n          \"capable\": true,\n          \"enabled\": true,\n          \"status\": \"UPDATE_CREDENTIALS\"\n        }\n      }, {\n        \"id\": \"0003\",\n        \"name\": \"John Doe\",\n        \"electronic\": false,\n        \"hasRecurringPayments\": false,\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-03-04T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-03-05\",\n          \"nextPaymentDate\": \"2019-03-06\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\"\n        }]\n      }, {\n        \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n        \"name\": \"Gas Company\",\n        \"electronic\": true,\n        \"hasRecurringPayments\": false,\n        \"nextPayment\": {\n          \"amount\": {\n            \"amount\": \"20.99\",\n            \"currencyCode\": \"USD\"\n          },\n          \"paymentDate\": \"2019-03-20\",\n          \"recurring\": false,\n          \"automaticPayment\": false\n        },\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-03-21T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-03-22\",\n          \"nextPaymentDate\": \"2019-03-25\",\n          \"paymentServiceType\": \"EXPEDITED_PAYMENT\",\n          \"deliveryDays\": 3,\n          \"fee\": {\n            \"amount\": \"0\",\n            \"currencyCode\": \"USD\"\n          }\n        }, {\n          \"cutoffTime\": \"2019-03-27T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-03-28\",\n          \"nextPaymentDate\": \"2019-03-29\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\"\n        }],\n        \"ebill\": {\n          \"capable\": true,\n          \"enabled\": true,\n          \"status\": \"ACTIVE\"\n        }\n      }, {\n        \"id\": \"31315694\",\n        \"name\": \"Somewhat Wireless\",\n        \"nickName\": \"Internet\",\n        \"accountNumber\": \"152236988\",\n        \"electronic\": true,\n        \"hasRecurringPayments\": true,\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-10-08T06:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-10-08\",\n          \"nextPaymentDate\": \"2019-10-09\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\",\n          \"deliveryDays\": 1\n        }],\n        \"ebill\": {\n          \"capable\": true,\n          \"enabled\": true,\n          \"status\": \"USER_ACTION\"\n        }\n      }, {\n        \"id\": \"31315661\",\n        \"name\": \"Outer Rim Supply Co.\",\n        \"accountNumber\": \"152236978\",\n        \"electronic\": true,\n        \"hasRecurringPayments\": false,\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-10-08T06:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-10-08\",\n          \"nextPaymentDate\": \"2019-10-09\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\",\n          \"deliveryDays\": 1\n        }],\n        \"ebill\": {\n          \"capable\": true,\n          \"enabled\": true,\n          \"status\": \"ERROR\"\n        }\n      }, {\n        \"id\": \"0004\",\n        \"name\": \"Water Company\",\n        \"electronic\": true,\n        \"hasRecurringPayments\": false,\n        \"nextPayment\": {\n          \"amount\": {\n            \"amount\": \"2001.89\",\n            \"currencyCode\": \"USD\"\n          },\n          \"paymentDate\": \"2019-03-14\",\n          \"recurring\": false,\n          \"automaticPayment\": false\n        },\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-03-11T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-03-12\",\n          \"nextPaymentDate\": \"2019-03-13\",\n          \"paymentServiceType\": \"OVERNIGHT_CHECK\",\n          \"deliveryDays\": 3,\n          \"fee\": {\n            \"amount\": \"9.99\",\n            \"currencyCode\": \"USD\"\n          }\n        }, {\n          \"cutoffTime\": \"2019-03-18T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-03-19\",\n          \"nextPaymentDate\": \"2019-03-20\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\"\n        }],\n        \"overnightDeliveryAddress\": {\n          \"state\": \"FL\",\n          \"city\": \"Saint Petersburg\",\n          \"address1\": \"560 Carillon Parkway\",\n          \"postalCode\": \"33717\"\n        },\n        \"ebill\": {\n          \"capable\": true,\n          \"enabled\": true,\n          \"status\": \"NOT_SUPPORTED\"\n        }\n      }, {\n        \"id\": \"0005\",\n        \"name\": \"Phone Company\",\n        \"electronic\": true,\n        \"hasRecurringPayments\": true,\n        \"nextPayment\": {\n          \"amount\": {\n            \"amount\": \"45.23\",\n            \"currencyCode\": \"USD\"\n          },\n          \"paymentDate\": \"2019-04-10\",\n          \"recurring\": false,\n          \"automaticPayment\": false\n        },\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-04-01T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-04-02\",\n          \"nextPaymentDate\": \"2019-04-03\",\n          \"paymentServiceType\": \"OVERNIGHT_CHECK\",\n          \"deliveryDays\": 3,\n          \"fee\": {\n            \"amount\": \"9.99\",\n            \"currencyCode\": \"USD\"\n          }\n        }, {\n          \"cutoffTime\": \"2019-04-08T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-04-08\",\n          \"nextPaymentDate\": \"2019-04-08\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\"\n        }],\n        \"ebill\": {\n          \"capable\": true,\n          \"enabled\": false\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPayeesSummaryServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees-summary\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"payeeSummaries\": [{\n        \"id\": \"0001\",\n        \"name\": \"Citibank\",\n        \"nickName\": \"My Bank\",\n        \"accountNumber\": \"246895317\",\n        \"electronic\": true,\n        \"hasRecurringPayments\": false,\n        \"nextPayment\": {\n          \"amount\": {\n            \"amount\": \"100.99\",\n            \"currencyCode\": \"USD\"\n          },\n          \"paymentDate\": \"2019-02-22\",\n          \"recurring\": false,\n          \"automaticPayment\": true,\n          \"fee\": {\n            \"amount\": \"9.99\",\n            \"currencyCode\": \"USD\"\n          }\n        },\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-02-21T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-02-22\",\n          \"nextPaymentDate\": \"2019-02-25\",\n          \"paymentServiceType\": \"EXPEDITED_PAYMENT\",\n          \"deliveryDays\": 3,\n          \"fee\": {\n            \"amount\": \"9.99\",\n            \"currencyCode\": \"USD\"\n          }\n        }, {\n          \"cutoffTime\": \"2019-02-25T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-02-26\",\n          \"nextPaymentDate\": \"2019-02-27\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\"\n        }],\n        \"ebill\": {\n          \"capable\": true,\n          \"enabled\": true,\n          \"status\": \"ACTIVE\",\n          \"latestBill\": {\n            \"id\": \"20141219140239655590\",\n            \"amount\": {\n              \"amount\": \"100.99\",\n              \"currencyCode\": \"USD\"\n            },\n            \"minAmountDue\": {\n              \"amount\": \"20.50\",\n              \"currencyCode\": \"USD\"\n            },\n            \"outstandingBalance\": {\n              \"amount\": \"201.98\",\n              \"currencyCode\": \"USD\"\n            },\n            \"paymentDate\": \"2019-03-01\",\n            \"status\": \"PAID\",\n            \"url\": \"http://my.ebill.pdf\",\n            \"statementAvailable\": false,\n            \"paymentId\": \"abc0192802\"\n          },\n          \"autopay\": {\n            \"paymentAccount\": {\n              \"accountNumber\": \"11111111\",\n              \"routingNumber\": \"000000022\",\n              \"accountType\": \"SAVINGS_ACCOUNT\",\n              \"accountNickName\": \"Current Account\"\n            },\n            \"daysBeforePayOn\": 3,\n            \"maxPaymentAmount\": {\n              \"amount\": \"123\",\n              \"currencyCode\": \"USD\"\n            },\n            \"payOn\": \"BILL_ARRIVAL\",\n            \"payAmount\": \"FULL_AMOUNT\",\n            \"paymentScheduledAlert\": false,\n            \"paymentSentAlert\": true,\n            \"paymentCompleteAlert\": true\n          }\n        },\n        \"overnightDeliveryAddress\": {\n          \"state\": \"FL\",\n          \"city\": \"Saint Petersburg\",\n          \"address1\": \"560 Carillon Parkway\",\n          \"postalCode\": \"33717\"\n        }\n      }, {\n        \"id\": \"0002\",\n        \"name\": \"Electric Company\",\n        \"accountNumber\": \"78641258\",\n        \"electronic\": true,\n        \"hasRecurringPayments\": true,\n        \"nextPayment\": {\n          \"amount\": {\n            \"amount\": \"101.99\",\n            \"currencyCode\": \"USD\"\n          },\n          \"paymentDate\": \"2019-02-28\",\n          \"recurring\": true,\n          \"automaticPayment\": false\n        },\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-02-25T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-02-26\",\n          \"nextPaymentDate\": \"2019-02-27\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\"\n        }],\n        \"ebill\": {\n          \"capable\": true,\n          \"enabled\": true,\n          \"status\": \"UPDATE_CREDENTIALS\"\n        }\n      }, {\n        \"id\": \"0003\",\n        \"name\": \"John Doe\",\n        \"electronic\": false,\n        \"hasRecurringPayments\": false,\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-03-04T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-03-05\",\n          \"nextPaymentDate\": \"2019-03-06\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\"\n        }]\n      }, {\n        \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n        \"name\": \"Gas Company\",\n        \"electronic\": true,\n        \"hasRecurringPayments\": false,\n        \"nextPayment\": {\n          \"amount\": {\n            \"amount\": \"20.99\",\n            \"currencyCode\": \"USD\"\n          },\n          \"paymentDate\": \"2019-03-20\",\n          \"recurring\": false,\n          \"automaticPayment\": false\n        },\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-03-21T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-03-22\",\n          \"nextPaymentDate\": \"2019-03-25\",\n          \"paymentServiceType\": \"EXPEDITED_PAYMENT\",\n          \"deliveryDays\": 3,\n          \"fee\": {\n            \"amount\": \"0\",\n            \"currencyCode\": \"USD\"\n          }\n        }, {\n          \"cutoffTime\": \"2019-03-27T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-03-28\",\n          \"nextPaymentDate\": \"2019-03-29\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\"\n        }],\n        \"ebill\": {\n          \"capable\": true,\n          \"enabled\": true,\n          \"status\": \"ACTIVE\"\n        }\n      }, {\n        \"id\": \"31315694\",\n        \"name\": \"Somewhat Wireless\",\n        \"nickName\": \"Internet\",\n        \"accountNumber\": \"152236988\",\n        \"electronic\": true,\n        \"hasRecurringPayments\": true,\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-10-08T06:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-10-08\",\n          \"nextPaymentDate\": \"2019-10-09\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\",\n          \"deliveryDays\": 1\n        }],\n        \"ebill\": {\n          \"capable\": true,\n          \"enabled\": true,\n          \"status\": \"USER_ACTION\"\n        }\n      }, {\n        \"id\": \"31315661\",\n        \"name\": \"Outer Rim Supply Co.\",\n        \"accountNumber\": \"152236978\",\n        \"electronic\": true,\n        \"hasRecurringPayments\": false,\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-10-08T06:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-10-08\",\n          \"nextPaymentDate\": \"2019-10-09\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\",\n          \"deliveryDays\": 1\n        }],\n        \"ebill\": {\n          \"capable\": true,\n          \"enabled\": true,\n          \"status\": \"ERROR\"\n        }\n      }, {\n        \"id\": \"0004\",\n        \"name\": \"Water Company\",\n        \"electronic\": true,\n        \"hasRecurringPayments\": false,\n        \"nextPayment\": {\n          \"amount\": {\n            \"amount\": \"2001.89\",\n            \"currencyCode\": \"USD\"\n          },\n          \"paymentDate\": \"2019-03-14\",\n          \"recurring\": false,\n          \"automaticPayment\": false\n        },\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-03-11T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-03-12\",\n          \"nextPaymentDate\": \"2019-03-13\",\n          \"paymentServiceType\": \"OVERNIGHT_CHECK\",\n          \"deliveryDays\": 3,\n          \"fee\": {\n            \"amount\": \"9.99\",\n            \"currencyCode\": \"USD\"\n          }\n        }, {\n          \"cutoffTime\": \"2019-03-18T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-03-19\",\n          \"nextPaymentDate\": \"2019-03-20\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\"\n        }],\n        \"overnightDeliveryAddress\": {\n          \"state\": \"FL\",\n          \"city\": \"Saint Petersburg\",\n          \"address1\": \"560 Carillon Parkway\",\n          \"postalCode\": \"33717\"\n        },\n        \"ebill\": {\n          \"capable\": true,\n          \"enabled\": true,\n          \"status\": \"NOT_SUPPORTED\"\n        }\n      }, {\n        \"id\": \"0005\",\n        \"name\": \"Phone Company\",\n        \"electronic\": true,\n        \"hasRecurringPayments\": true,\n        \"nextPayment\": {\n          \"amount\": {\n            \"amount\": \"45.23\",\n            \"currencyCode\": \"USD\"\n          },\n          \"paymentDate\": \"2019-04-10\",\n          \"recurring\": false,\n          \"automaticPayment\": false\n        },\n        \"paymentServices\": [{\n          \"cutoffTime\": \"2019-04-01T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-04-02\",\n          \"nextPaymentDate\": \"2019-04-03\",\n          \"paymentServiceType\": \"OVERNIGHT_CHECK\",\n          \"deliveryDays\": 3,\n          \"fee\": {\n            \"amount\": \"9.99\",\n            \"currencyCode\": \"USD\"\n          }\n        }, {\n          \"cutoffTime\": \"2019-04-08T15:00:00.000-04:00\",\n          \"earliestPaymentDate\": \"2019-04-08\",\n          \"nextPaymentDate\": \"2019-04-08\",\n          \"paymentServiceType\": \"REGULAR_PAYMENT\"\n        }],\n        \"ebill\": {\n          \"capable\": true,\n          \"enabled\": false\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\n\nclass BillPayPaymentsService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new BillpayConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  deletePaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling deletePaymentById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/${encodeURIComponent(String(_id))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deletePaymentByIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling deletePaymentById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/${encodeURIComponent(String(_id))}`;\n  }\n\n  deleteRecurringPaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling deleteRecurringPaymentById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring/${encodeURIComponent(String(_id))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deleteRecurringPaymentByIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling deleteRecurringPaymentById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring/${encodeURIComponent(String(_id))}`;\n  }\n\n  getBillPayPayments(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _status = requestParameters[\"status\"];\n\n    if (_status === null || _status === undefined) {\n      throw new Error('Required parameter status was null or undefined when calling getBillPayPayments.');\n    }\n\n    const _startDate = requestParameters[\"startDate\"];\n    const _endDate = requestParameters[\"endDate\"];\n    const _payeeID = requestParameters[\"payeeID\"];\n    const _paymentType = requestParameters[\"paymentType\"];\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    const _orderBy = requestParameters[\"orderBy\"];\n    const _direction = requestParameters[\"direction\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_status !== undefined && _status !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _status, 'status');\n    }\n\n    if (_startDate !== undefined && _startDate !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _startDate, 'startDate');\n    }\n\n    if (_endDate !== undefined && _endDate !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _endDate, 'endDate');\n    }\n\n    if (_payeeID !== undefined && _payeeID !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _payeeID, 'payeeID');\n    }\n\n    if (_paymentType !== undefined && _paymentType !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _paymentType, 'paymentType');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    if (_orderBy !== undefined && _orderBy !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _orderBy, 'orderBy');\n    }\n\n    if (_direction !== undefined && _direction !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _direction, 'direction');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/payments`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getBillPayPaymentsUrl(requestParameters) {\n    const _status = requestParameters[\"status\"];\n\n    if (_status === null || _status === undefined) {\n      throw new Error('Required parameter status was null or undefined when calling getBillPayPayments.');\n    }\n\n    const _startDate = requestParameters[\"startDate\"];\n    const _endDate = requestParameters[\"endDate\"];\n    const _payeeID = requestParameters[\"payeeID\"];\n    const _paymentType = requestParameters[\"paymentType\"];\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    const _orderBy = requestParameters[\"orderBy\"];\n    const _direction = requestParameters[\"direction\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_status !== undefined && _status !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _status, 'status');\n    }\n\n    if (_startDate !== undefined && _startDate !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _startDate, 'startDate');\n    }\n\n    if (_endDate !== undefined && _endDate !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _endDate, 'endDate');\n    }\n\n    if (_payeeID !== undefined && _payeeID !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _payeeID, 'payeeID');\n    }\n\n    if (_paymentType !== undefined && _paymentType !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _paymentType, 'paymentType');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    if (_orderBy !== undefined && _orderBy !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _orderBy, 'orderBy');\n    }\n\n    if (_direction !== undefined && _direction !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _direction, 'direction');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payments${queryString ? `?${queryString}` : ''}`;\n  }\n\n  getPaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getPaymentById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/${encodeURIComponent(String(_id))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getPaymentByIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getPaymentById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/${encodeURIComponent(String(_id))}`;\n  }\n\n  getRecurringPaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getRecurringPaymentById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring/${encodeURIComponent(String(_id))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getRecurringPaymentByIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getRecurringPaymentById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring/${encodeURIComponent(String(_id))}`;\n  }\n\n  postBillPayPayments(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _billPayPaymentsPostRequestBody = requestParameters[\"billPayPaymentsPostRequestBody\"];\n\n    if (_billPayPaymentsPostRequestBody === null || _billPayPaymentsPostRequestBody === undefined) {\n      throw new Error('Required parameter billPayPaymentsPostRequestBody was null or undefined when calling postBillPayPayments.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/bill-pay/payments`, _billPayPaymentsPostRequestBody, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postBillPayPaymentsUrl(requestParameters) {\n    const _billPayPaymentsPostRequestBody = requestParameters[\"billPayPaymentsPostRequestBody\"];\n\n    if (_billPayPaymentsPostRequestBody === null || _billPayPaymentsPostRequestBody === undefined) {\n      throw new Error('Required parameter billPayPaymentsPostRequestBody was null or undefined when calling postBillPayPayments.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payments`;\n  }\n\n  postBillPayRecurringPayments(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _billPayRecurringPaymentsPostRequestBody = requestParameters[\"billPayRecurringPaymentsPostRequestBody\"];\n\n    if (_billPayRecurringPaymentsPostRequestBody === null || _billPayRecurringPaymentsPostRequestBody === undefined) {\n      throw new Error('Required parameter billPayRecurringPaymentsPostRequestBody was null or undefined when calling postBillPayRecurringPayments.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring`, _billPayRecurringPaymentsPostRequestBody, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postBillPayRecurringPaymentsUrl(requestParameters) {\n    const _billPayRecurringPaymentsPostRequestBody = requestParameters[\"billPayRecurringPaymentsPostRequestBody\"];\n\n    if (_billPayRecurringPaymentsPostRequestBody === null || _billPayRecurringPaymentsPostRequestBody === undefined) {\n      throw new Error('Required parameter billPayRecurringPaymentsPostRequestBody was null or undefined when calling postBillPayRecurringPayments.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring`;\n  }\n\n  putPaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling putPaymentById.');\n    }\n\n    const _paymentByIdPutRequestBody = requestParameters[\"paymentByIdPutRequestBody\"];\n\n    if (_paymentByIdPutRequestBody === null || _paymentByIdPutRequestBody === undefined) {\n      throw new Error('Required parameter paymentByIdPutRequestBody was null or undefined when calling putPaymentById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/${encodeURIComponent(String(_id))}`, _paymentByIdPutRequestBody, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putPaymentByIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling putPaymentById.');\n    }\n\n    const _paymentByIdPutRequestBody = requestParameters[\"paymentByIdPutRequestBody\"];\n\n    if (_paymentByIdPutRequestBody === null || _paymentByIdPutRequestBody === undefined) {\n      throw new Error('Required parameter paymentByIdPutRequestBody was null or undefined when calling putPaymentById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/${encodeURIComponent(String(_id))}`;\n  }\n\n  putRecurringPaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling putRecurringPaymentById.');\n    }\n\n    const _recurringPaymentByIdPutRequestBody = requestParameters[\"recurringPaymentByIdPutRequestBody\"];\n\n    if (_recurringPaymentByIdPutRequestBody === null || _recurringPaymentByIdPutRequestBody === undefined) {\n      throw new Error('Required parameter recurringPaymentByIdPutRequestBody was null or undefined when calling putRecurringPaymentById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring/${encodeURIComponent(String(_id))}`, _recurringPaymentByIdPutRequestBody, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putRecurringPaymentByIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling putRecurringPaymentById.');\n    }\n\n    const _recurringPaymentByIdPutRequestBody = requestParameters[\"recurringPaymentByIdPutRequestBody\"];\n\n    if (_recurringPaymentByIdPutRequestBody === null || _recurringPaymentByIdPutRequestBody === undefined) {\n      throw new Error('Required parameter recurringPaymentByIdPutRequestBody was null or undefined when calling putRecurringPaymentById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring/${encodeURIComponent(String(_id))}`;\n  }\n\n}\n\nBillPayPaymentsService.ɵfac = function BillPayPaymentsService_Factory(t) {\n  return new (t || BillPayPaymentsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(BILLPAY_BASE_PATH, 8), i0.ɵɵinject(BillpayConfiguration, 8));\n};\n\nBillPayPaymentsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BillPayPaymentsService,\n  factory: BillPayPaymentsService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BillPayPaymentsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [BILLPAY_BASE_PATH]\n      }]\n    }, {\n      type: BillpayConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst BillPayPaymentsServiceDeletePaymentByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payments/{id}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPaymentsServiceDeleteRecurringPaymentByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payments/recurring/{id}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPaymentsServiceGetBillPayPaymentsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payments\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"payments\": [{\n        \"id\": \"8a9483495f058d2f015f058d366b0045\",\n        \"payeeID\": \"3\",\n        \"payeeName\": \"Soccer Shots\",\n        \"payeeNickName\": \"Kids Soccer\",\n        \"payeeElectronic\": false,\n        \"amount\": {\n          \"amount\": \"10.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"paymentDate\": \"2019-04-21\",\n        \"paymentAccount\": {\n          \"accountNumber\": \"11111111\",\n          \"routingNumber\": \"000000022\",\n          \"accountType\": \"SAVINGS_ACCOUNT\",\n          \"accountNickName\": \"Current Account\"\n        },\n        \"recurring\": false,\n        \"automaticPayment\": false,\n        \"status\": \"PENDING\",\n        \"fee\": {\n          \"amount\": \"9.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"ebillID\": \"20141219140239655590\"\n      }, {\n        \"id\": \"8a9483495f058d2f015f058d366a003c\",\n        \"payeeID\": \"4\",\n        \"payeeName\": \"Gas Bill\",\n        \"payeeAccountNumber\": \"100000001\",\n        \"payeeElectronic\": true,\n        \"amount\": {\n          \"amount\": \"100.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"paymentDate\": \"2019-02-22\",\n        \"paymentAccount\": {\n          \"id\": \"1\",\n          \"accountNumber\": \"22222222\",\n          \"routingNumber\": \"000000033\",\n          \"accountType\": \"CHECKING_ACCOUNT\"\n        },\n        \"recurring\": true,\n        \"automaticPayment\": false,\n        \"frequency\": \"MONTHLY\",\n        \"numberOfInstances\": 2,\n        \"paymentScheduledAlert\": true,\n        \"paymentSentAlert\": true,\n        \"modelExpirationAlert\": true,\n        \"status\": \"FAILED\"\n      }, {\n        \"id\": \"8a9483a96dd476f1016dd476f7e8001c\",\n        \"payeeID\": \"2\",\n        \"payeeName\": \"The Republic\",\n        \"payeeAccountNumber\": \"12345O\",\n        \"payeeElectronic\": true,\n        \"amount\": {\n          \"amount\": \"200.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"paymentDate\": \"2018-11-23\",\n        \"paymentMemo\": \"Order #66\",\n        \"paymentAccount\": {\n          \"accountNumber\": \"100001001\",\n          \"accountNickName\": \"Joint Account\",\n          \"accountType\": \"CHECKING_ACCOUNT\",\n          \"routingNumber\": \"110001001\"\n        },\n        \"recurring\": false,\n        \"automaticPayment\": true,\n        \"paymentScheduledAlert\": true,\n        \"paymentSentAlert\": true,\n        \"modelExpirationAlert\": true,\n        \"status\": \"PROCESSED\"\n      }],\n      \"totalCount\": 3\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPaymentsServiceGetPaymentByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payments/{id}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"payment\": {\n        \"id\": \"8a9483495f058d2f015f058d366a003c\",\n        \"payeeID\": \"0002\",\n        \"payeeName\": \"Citibank\",\n        \"payeeAccountNumber\": \"100000001\",\n        \"payeeElectronic\": false,\n        \"amount\": {\n          \"amount\": \"100.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"paymentDate\": \"2019-02-22\",\n        \"paymentAccount\": {\n          \"id\": \"1\",\n          \"accountNumber\": \"000000001\",\n          \"routingNumber\": \"000000011\",\n          \"accountType\": \"CHECKING_ACCOUNT\"\n        },\n        \"recurring\": false,\n        \"automaticPayment\": false,\n        \"status\": \"PENDING\",\n        \"fee\": {\n          \"amount\": \"9.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"ebillID\": \"20141219140239655590\"\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPaymentsServiceGetRecurringPaymentByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payments/recurring/{id}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"payment\": {\n        \"id\": \"8a9483495f058d2f015f058d366a003c\",\n        \"payeeID\": \"0005\",\n        \"payeeName\": \"Citibank\",\n        \"payeeAccountNumber\": \"100000001\",\n        \"payeeElectronic\": true,\n        \"amount\": {\n          \"amount\": \"100.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"paymentDate\": \"2019-02-22\",\n        \"paymentAccount\": {\n          \"id\": \"1\",\n          \"accountNumber\": \"000000001\",\n          \"routingNumber\": \"000000011\",\n          \"accountType\": \"CHECKING_ACCOUNT\"\n        },\n        \"paymentMemo\": \"Here is some money\",\n        \"recurring\": true,\n        \"frequency\": \"MONTHLY\",\n        \"numberOfInstances\": 2,\n        \"paymentScheduledAlert\": true,\n        \"paymentSentAlert\": true,\n        \"modelExpirationAlert\": true,\n        \"status\": \"PENDING\"\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPaymentsServicePostBillPayPaymentsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payments\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"payments\": [{\n        \"payeeID\": \"payee1\",\n        \"paymentID\": \"payment1\",\n        \"errors\": []\n      }, {\n        \"payeeID\": \"payee2\",\n        \"paymentID\": \"payment2\",\n        \"errors\": []\n      }, {\n        \"payeeID\": \"payee3\",\n        \"errors\": [{\n          \"message\": \"Invalid next payment date\",\n          \"key\": \"billpay.api.invalidNextPaymentDate\"\n        }, {\n          \"message\": \"Payment already exists\",\n          \"key\": \"billpay.api.paymentAlreadyExists\"\n        }]\n      }, {\n        \"payeeID\": \"payee4\",\n        \"paymentID\": \"payment4\",\n        \"errors\": []\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [],\n      \"payments\": [{\n        \"payeeID\": \"1\",\n        \"errors\": [{\n          \"message\": \"The payee is invalid\",\n          \"key\": \"billpay.api.invalidPayee\"\n        }]\n      }, {\n        \"payeeID\": \"2\",\n        \"errors\": [{\n          \"message\": \"The payee is invalid\",\n          \"key\": \"billpay.api.invalidPayee\"\n        }]\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPaymentsServicePostBillPayRecurringPaymentsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payments/recurring\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPaymentsServicePutPaymentByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payments/{id}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPaymentsServicePutRecurringPaymentByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payments/recurring/{id}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPaymentsServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payments/{id}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payments/recurring/{id}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payments\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"payments\": [{\n        \"id\": \"8a9483495f058d2f015f058d366b0045\",\n        \"payeeID\": \"3\",\n        \"payeeName\": \"Soccer Shots\",\n        \"payeeNickName\": \"Kids Soccer\",\n        \"payeeElectronic\": false,\n        \"amount\": {\n          \"amount\": \"10.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"paymentDate\": \"2019-04-21\",\n        \"paymentAccount\": {\n          \"accountNumber\": \"11111111\",\n          \"routingNumber\": \"000000022\",\n          \"accountType\": \"SAVINGS_ACCOUNT\",\n          \"accountNickName\": \"Current Account\"\n        },\n        \"recurring\": false,\n        \"automaticPayment\": false,\n        \"status\": \"PENDING\",\n        \"fee\": {\n          \"amount\": \"9.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"ebillID\": \"20141219140239655590\"\n      }, {\n        \"id\": \"8a9483495f058d2f015f058d366a003c\",\n        \"payeeID\": \"4\",\n        \"payeeName\": \"Gas Bill\",\n        \"payeeAccountNumber\": \"100000001\",\n        \"payeeElectronic\": true,\n        \"amount\": {\n          \"amount\": \"100.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"paymentDate\": \"2019-02-22\",\n        \"paymentAccount\": {\n          \"id\": \"1\",\n          \"accountNumber\": \"22222222\",\n          \"routingNumber\": \"000000033\",\n          \"accountType\": \"CHECKING_ACCOUNT\"\n        },\n        \"recurring\": true,\n        \"automaticPayment\": false,\n        \"frequency\": \"MONTHLY\",\n        \"numberOfInstances\": 2,\n        \"paymentScheduledAlert\": true,\n        \"paymentSentAlert\": true,\n        \"modelExpirationAlert\": true,\n        \"status\": \"FAILED\"\n      }, {\n        \"id\": \"8a9483a96dd476f1016dd476f7e8001c\",\n        \"payeeID\": \"2\",\n        \"payeeName\": \"The Republic\",\n        \"payeeAccountNumber\": \"12345O\",\n        \"payeeElectronic\": true,\n        \"amount\": {\n          \"amount\": \"200.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"paymentDate\": \"2018-11-23\",\n        \"paymentMemo\": \"Order #66\",\n        \"paymentAccount\": {\n          \"accountNumber\": \"100001001\",\n          \"accountNickName\": \"Joint Account\",\n          \"accountType\": \"CHECKING_ACCOUNT\",\n          \"routingNumber\": \"110001001\"\n        },\n        \"recurring\": false,\n        \"automaticPayment\": true,\n        \"paymentScheduledAlert\": true,\n        \"paymentSentAlert\": true,\n        \"modelExpirationAlert\": true,\n        \"status\": \"PROCESSED\"\n      }],\n      \"totalCount\": 3\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payments/{id}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"payment\": {\n        \"id\": \"8a9483495f058d2f015f058d366a003c\",\n        \"payeeID\": \"0002\",\n        \"payeeName\": \"Citibank\",\n        \"payeeAccountNumber\": \"100000001\",\n        \"payeeElectronic\": false,\n        \"amount\": {\n          \"amount\": \"100.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"paymentDate\": \"2019-02-22\",\n        \"paymentAccount\": {\n          \"id\": \"1\",\n          \"accountNumber\": \"000000001\",\n          \"routingNumber\": \"000000011\",\n          \"accountType\": \"CHECKING_ACCOUNT\"\n        },\n        \"recurring\": false,\n        \"automaticPayment\": false,\n        \"status\": \"PENDING\",\n        \"fee\": {\n          \"amount\": \"9.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"ebillID\": \"20141219140239655590\"\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payments/recurring/{id}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"payment\": {\n        \"id\": \"8a9483495f058d2f015f058d366a003c\",\n        \"payeeID\": \"0005\",\n        \"payeeName\": \"Citibank\",\n        \"payeeAccountNumber\": \"100000001\",\n        \"payeeElectronic\": true,\n        \"amount\": {\n          \"amount\": \"100.99\",\n          \"currencyCode\": \"USD\"\n        },\n        \"paymentDate\": \"2019-02-22\",\n        \"paymentAccount\": {\n          \"id\": \"1\",\n          \"accountNumber\": \"000000001\",\n          \"routingNumber\": \"000000011\",\n          \"accountType\": \"CHECKING_ACCOUNT\"\n        },\n        \"paymentMemo\": \"Here is some money\",\n        \"recurring\": true,\n        \"frequency\": \"MONTHLY\",\n        \"numberOfInstances\": 2,\n        \"paymentScheduledAlert\": true,\n        \"paymentSentAlert\": true,\n        \"modelExpirationAlert\": true,\n        \"status\": \"PENDING\"\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payments\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"payments\": [{\n        \"payeeID\": \"payee1\",\n        \"paymentID\": \"payment1\",\n        \"errors\": []\n      }, {\n        \"payeeID\": \"payee2\",\n        \"paymentID\": \"payment2\",\n        \"errors\": []\n      }, {\n        \"payeeID\": \"payee3\",\n        \"errors\": [{\n          \"message\": \"Invalid next payment date\",\n          \"key\": \"billpay.api.invalidNextPaymentDate\"\n        }, {\n          \"message\": \"Payment already exists\",\n          \"key\": \"billpay.api.paymentAlreadyExists\"\n        }]\n      }, {\n        \"payeeID\": \"payee4\",\n        \"paymentID\": \"payment4\",\n        \"errors\": []\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [],\n      \"payments\": [{\n        \"payeeID\": \"1\",\n        \"errors\": [{\n          \"message\": \"The payee is invalid\",\n          \"key\": \"billpay.api.invalidPayee\"\n        }]\n      }, {\n        \"payeeID\": \"2\",\n        \"errors\": [{\n          \"message\": \"The payee is invalid\",\n          \"key\": \"billpay.api.invalidPayee\"\n        }]\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payments/recurring\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payments/{id}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payments/recurring/{id}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\n\nclass BillPayPayverisService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new BillpayConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  deleteBillPayPayverisEbillsEnrolment(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _payeeID = requestParameters[\"payeeID\"];\n\n    if (_payeeID === null || _payeeID === undefined) {\n      throw new Error('Required parameter payeeID was null or undefined when calling deleteBillPayPayverisEbillsEnrolment.');\n    }\n\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_payeeID !== undefined && _payeeID !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _payeeID, 'payeeID');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/bill-pay/payveris/ebills/enrolment`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deleteBillPayPayverisEbillsEnrolmentUrl(requestParameters) {\n    const _payeeID = requestParameters[\"payeeID\"];\n\n    if (_payeeID === null || _payeeID === undefined) {\n      throw new Error('Required parameter payeeID was null or undefined when calling deleteBillPayPayverisEbillsEnrolment.');\n    }\n\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_payeeID !== undefined && _payeeID !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _payeeID, 'payeeID');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payveris/ebills/enrolment${queryString ? `?${queryString}` : ''}`;\n  }\n\n  postBillPayPayverisEbillsEnrolment(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _billPayPayverisEbillsEnrolmentPostRequestBody = requestParameters[\"billPayPayverisEbillsEnrolmentPostRequestBody\"];\n\n    if (_billPayPayverisEbillsEnrolmentPostRequestBody === null || _billPayPayverisEbillsEnrolmentPostRequestBody === undefined) {\n      throw new Error('Required parameter billPayPayverisEbillsEnrolmentPostRequestBody was null or undefined when calling postBillPayPayverisEbillsEnrolment.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/bill-pay/payveris/ebills/enrolment`, _billPayPayverisEbillsEnrolmentPostRequestBody, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postBillPayPayverisEbillsEnrolmentUrl(requestParameters) {\n    const _billPayPayverisEbillsEnrolmentPostRequestBody = requestParameters[\"billPayPayverisEbillsEnrolmentPostRequestBody\"];\n\n    if (_billPayPayverisEbillsEnrolmentPostRequestBody === null || _billPayPayverisEbillsEnrolmentPostRequestBody === undefined) {\n      throw new Error('Required parameter billPayPayverisEbillsEnrolmentPostRequestBody was null or undefined when calling postBillPayPayverisEbillsEnrolment.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payveris/ebills/enrolment`;\n  }\n\n  postBillPayPayverisResolveEbillErrors(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _billPayPayverisResolveEbillErrorsPostRequestBody = requestParameters[\"billPayPayverisResolveEbillErrorsPostRequestBody\"];\n\n    if (_billPayPayverisResolveEbillErrorsPostRequestBody === null || _billPayPayverisResolveEbillErrorsPostRequestBody === undefined) {\n      throw new Error('Required parameter billPayPayverisResolveEbillErrorsPostRequestBody was null or undefined when calling postBillPayPayverisResolveEbillErrors.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/bill-pay/payveris/ebills/resolve-errors`, _billPayPayverisResolveEbillErrorsPostRequestBody, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postBillPayPayverisResolveEbillErrorsUrl(requestParameters) {\n    const _billPayPayverisResolveEbillErrorsPostRequestBody = requestParameters[\"billPayPayverisResolveEbillErrorsPostRequestBody\"];\n\n    if (_billPayPayverisResolveEbillErrorsPostRequestBody === null || _billPayPayverisResolveEbillErrorsPostRequestBody === undefined) {\n      throw new Error('Required parameter billPayPayverisResolveEbillErrorsPostRequestBody was null or undefined when calling postBillPayPayverisResolveEbillErrors.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payveris/ebills/resolve-errors`;\n  }\n\n}\n\nBillPayPayverisService.ɵfac = function BillPayPayverisService_Factory(t) {\n  return new (t || BillPayPayverisService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(BILLPAY_BASE_PATH, 8), i0.ɵɵinject(BillpayConfiguration, 8));\n};\n\nBillPayPayverisService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BillPayPayverisService,\n  factory: BillPayPayverisService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BillPayPayverisService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [BILLPAY_BASE_PATH]\n      }]\n    }, {\n      type: BillpayConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst BillPayPayverisServiceDeleteBillPayPayverisEbillsEnrolmentMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payveris/ebills/enrolment\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPayverisServicePostBillPayPayverisEbillsEnrolmentMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payveris/ebills/enrolment\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"payeeID\": \"9993\",\n      \"billers\": [],\n      \"accounts\": [],\n      \"callBackRequired\": false\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPayverisServicePostBillPayPayverisResolveEbillErrorsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payveris/ebills/resolve-errors\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"payeeID\": \"9993\",\n      \"billers\": [],\n      \"accounts\": [],\n      \"callBackRequired\": false\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPayPayverisServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payveris/ebills/enrolment\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payveris/ebills/enrolment\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"payeeID\": \"9993\",\n      \"billers\": [],\n      \"accounts\": [],\n      \"callBackRequired\": false\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/bill-pay/payveris/ebills/resolve-errors\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"payeeID\": \"9993\",\n      \"billers\": [],\n      \"accounts\": [],\n      \"callBackRequired\": false\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\n\nclass BillPaySearchService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new BillpayConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  getBillPaySearch(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _name = requestParameters[\"name\"];\n\n    if (_name === null || _name === undefined) {\n      throw new Error('Required parameter name was null or undefined when calling getBillPaySearch.');\n    }\n\n    const _zipCode = requestParameters[\"zipCode\"];\n    const _accountNumber = requestParameters[\"accountNumber\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_name !== undefined && _name !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _name, 'name');\n    }\n\n    if (_zipCode !== undefined && _zipCode !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _zipCode, 'zipCode');\n    }\n\n    if (_accountNumber !== undefined && _accountNumber !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _accountNumber, 'accountNumber');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/payees-search`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getBillPaySearchUrl(requestParameters) {\n    const _name = requestParameters[\"name\"];\n\n    if (_name === null || _name === undefined) {\n      throw new Error('Required parameter name was null or undefined when calling getBillPaySearch.');\n    }\n\n    const _zipCode = requestParameters[\"zipCode\"];\n    const _accountNumber = requestParameters[\"accountNumber\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_name !== undefined && _name !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _name, 'name');\n    }\n\n    if (_zipCode !== undefined && _zipCode !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _zipCode, 'zipCode');\n    }\n\n    if (_accountNumber !== undefined && _accountNumber !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _accountNumber, 'accountNumber');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/bill-pay/payees-search${queryString ? `?${queryString}` : ''}`;\n  }\n\n}\n\nBillPaySearchService.ɵfac = function BillPaySearchService_Factory(t) {\n  return new (t || BillPaySearchService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(BILLPAY_BASE_PATH, 8), i0.ɵɵinject(BillpayConfiguration, 8));\n};\n\nBillPaySearchService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BillPaySearchService,\n  factory: BillPaySearchService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BillPaySearchService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [BILLPAY_BASE_PATH]\n      }]\n    }, {\n      type: BillpayConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst BillPaySearchServiceGetBillPaySearchMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees-search\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"payees\": [{\n        \"merchantID\": \"10000001\",\n        \"name\": \"Backbase UK\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000002\",\n        \"name\": \"Backbase AMS\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000003\",\n        \"name\": \"Backbase US\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000004\",\n        \"name\": \"adventescent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000005\",\n        \"name\": \"animadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000006\",\n        \"name\": \"circumadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000007\",\n        \"name\": \"syadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000008\",\n        \"name\": \"maladvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000009\",\n        \"name\": \"sucadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000010\",\n        \"name\": \"sysadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000011\",\n        \"name\": \"adventacious\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000012\",\n        \"name\": \"adventack\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000013\",\n        \"name\": \"belladvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000014\",\n        \"name\": \"coradvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000015\",\n        \"name\": \"polyadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000016\",\n        \"name\": \"adventous\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000017\",\n        \"name\": \"adventant\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000018\",\n        \"name\": \"vivadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000019\",\n        \"name\": \"foradvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000020\",\n        \"name\": \"inadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000021\",\n        \"name\": \"bovadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000022\",\n        \"name\": \"adventize\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000023\",\n        \"name\": \"postadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000024\",\n        \"name\": \"lunadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000025\",\n        \"name\": \"amadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000026\",\n        \"name\": \"symadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000027\",\n        \"name\": \"advental\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000028\",\n        \"name\": \"adventic\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000029\",\n        \"name\": \"lupadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000030\",\n        \"name\": \"sufadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000031\",\n        \"name\": \"adventari\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000032\",\n        \"name\": \"adventism\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000033\",\n        \"name\": \"comadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000034\",\n        \"name\": \"laudadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000035\",\n        \"name\": \"adventose\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000036\",\n        \"name\": \"enadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000037\",\n        \"name\": \"misadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000038\",\n        \"name\": \"portadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000039\",\n        \"name\": \"adventor\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000040\",\n        \"name\": \"venadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000041\",\n        \"name\": \"tenadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000042\",\n        \"name\": \"adventation\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000043\",\n        \"name\": \"adventicious\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000044\",\n        \"name\": \"adventill\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000045\",\n        \"name\": \"fortadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000046\",\n        \"name\": \"adventil\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000047\",\n        \"name\": \"rhyadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000048\",\n        \"name\": \"aceradvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000049\",\n        \"name\": \"difadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000050\",\n        \"name\": \"adventand\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000051\",\n        \"name\": \"adventible\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000052\",\n        \"name\": \"peradvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000053\",\n        \"name\": \"interadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000054\",\n        \"name\": \"podadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000055\",\n        \"name\": \"adventend\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000056\",\n        \"name\": \"maradvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000057\",\n        \"name\": \"uberadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000058\",\n        \"name\": \"movadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000059\",\n        \"name\": \"adventile\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000060\",\n        \"name\": \"exadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000061\",\n        \"name\": \"frontadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000062\",\n        \"name\": \"pedadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000063\",\n        \"name\": \"outadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000064\",\n        \"name\": \"myadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000065\",\n        \"name\": \"finadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000066\",\n        \"name\": \"adventac\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000067\",\n        \"name\": \"adventaid\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000068\",\n        \"name\": \"dominadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000069\",\n        \"name\": \"transadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000070\",\n        \"name\": \"suradvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000071\",\n        \"name\": \"sumadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000072\",\n        \"name\": \"adventive\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000073\",\n        \"name\": \"feladvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000074\",\n        \"name\": \"adventa\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000075\",\n        \"name\": \"domadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000076\",\n        \"name\": \"anadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000077\",\n        \"name\": \"adventoid\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000078\",\n        \"name\": \"hyperadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000079\",\n        \"name\": \"adventore\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000080\",\n        \"name\": \"adventate\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000081\",\n        \"name\": \"adventosis\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000082\",\n        \"name\": \"albadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000083\",\n        \"name\": \"synadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000084\",\n        \"name\": \"canadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000085\",\n        \"name\": \"supadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000086\",\n        \"name\": \"midadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000087\",\n        \"name\": \"esadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000088\",\n        \"name\": \"skyadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000089\",\n        \"name\": \"susadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000090\",\n        \"name\": \"archadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000091\",\n        \"name\": \"locadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000092\",\n        \"name\": \"insuladvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000093\",\n        \"name\": \"sugadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000094\",\n        \"name\": \"capadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000095\",\n        \"name\": \"falcadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000096\",\n        \"name\": \"monadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000097\",\n        \"name\": \"syladvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000098\",\n        \"name\": \"conadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000099\",\n        \"name\": \"cisadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000100\",\n        \"name\": \"kayadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000001\",\n        \"name\": \"cedadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000002\",\n        \"name\": \"veradvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000003\",\n        \"name\": \"cervadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000004\",\n        \"name\": \"audadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000005\",\n        \"name\": \"coladvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000006\",\n        \"name\": \"vertadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000007\",\n        \"name\": \"adventashun\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000008\",\n        \"name\": \"suradvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000009\",\n        \"name\": \"subadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000010\",\n        \"name\": \"superadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000011\",\n        \"name\": \"doladvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000012\",\n        \"name\": \"nonadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000013\",\n        \"name\": \"garadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000014\",\n        \"name\": \"adventalt\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000015\",\n        \"name\": \"premadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000016\",\n        \"name\": \"adventity\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000017\",\n        \"name\": \"bonadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000018\",\n        \"name\": \"adventise\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000019\",\n        \"name\": \"genadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000019\",\n        \"name\": \"adventist\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000020\",\n        \"name\": \"adventable\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000021\",\n        \"name\": \"auradvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000022\",\n        \"name\": \"adventent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000023\",\n        \"name\": \"disadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000024\",\n        \"name\": \"panadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000025\",\n        \"name\": \"adventer\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000026\",\n        \"name\": \"calcadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000027\",\n        \"name\": \"unadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000028\",\n        \"name\": \"adventall\",\n        \"zipRequired\": false\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nconst BillPaySearchServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/bill-pay/payees-search\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"payees\": [{\n        \"merchantID\": \"10000001\",\n        \"name\": \"Backbase UK\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000002\",\n        \"name\": \"Backbase AMS\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000003\",\n        \"name\": \"Backbase US\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000004\",\n        \"name\": \"adventescent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000005\",\n        \"name\": \"animadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000006\",\n        \"name\": \"circumadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000007\",\n        \"name\": \"syadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000008\",\n        \"name\": \"maladvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000009\",\n        \"name\": \"sucadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000010\",\n        \"name\": \"sysadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000011\",\n        \"name\": \"adventacious\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000012\",\n        \"name\": \"adventack\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000013\",\n        \"name\": \"belladvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000014\",\n        \"name\": \"coradvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000015\",\n        \"name\": \"polyadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000016\",\n        \"name\": \"adventous\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000017\",\n        \"name\": \"adventant\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000018\",\n        \"name\": \"vivadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000019\",\n        \"name\": \"foradvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000020\",\n        \"name\": \"inadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000021\",\n        \"name\": \"bovadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000022\",\n        \"name\": \"adventize\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000023\",\n        \"name\": \"postadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000024\",\n        \"name\": \"lunadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000025\",\n        \"name\": \"amadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000026\",\n        \"name\": \"symadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000027\",\n        \"name\": \"advental\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000028\",\n        \"name\": \"adventic\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000029\",\n        \"name\": \"lupadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000030\",\n        \"name\": \"sufadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000031\",\n        \"name\": \"adventari\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000032\",\n        \"name\": \"adventism\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000033\",\n        \"name\": \"comadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000034\",\n        \"name\": \"laudadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000035\",\n        \"name\": \"adventose\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000036\",\n        \"name\": \"enadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000037\",\n        \"name\": \"misadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000038\",\n        \"name\": \"portadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000039\",\n        \"name\": \"adventor\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000040\",\n        \"name\": \"venadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000041\",\n        \"name\": \"tenadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000042\",\n        \"name\": \"adventation\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000043\",\n        \"name\": \"adventicious\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000044\",\n        \"name\": \"adventill\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000045\",\n        \"name\": \"fortadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000046\",\n        \"name\": \"adventil\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000047\",\n        \"name\": \"rhyadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000048\",\n        \"name\": \"aceradvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000049\",\n        \"name\": \"difadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000050\",\n        \"name\": \"adventand\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000051\",\n        \"name\": \"adventible\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000052\",\n        \"name\": \"peradvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000053\",\n        \"name\": \"interadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000054\",\n        \"name\": \"podadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000055\",\n        \"name\": \"adventend\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000056\",\n        \"name\": \"maradvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000057\",\n        \"name\": \"uberadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000058\",\n        \"name\": \"movadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000059\",\n        \"name\": \"adventile\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000060\",\n        \"name\": \"exadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000061\",\n        \"name\": \"frontadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000062\",\n        \"name\": \"pedadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000063\",\n        \"name\": \"outadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000064\",\n        \"name\": \"myadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000065\",\n        \"name\": \"finadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000066\",\n        \"name\": \"adventac\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000067\",\n        \"name\": \"adventaid\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000068\",\n        \"name\": \"dominadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000069\",\n        \"name\": \"transadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000070\",\n        \"name\": \"suradvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000071\",\n        \"name\": \"sumadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000072\",\n        \"name\": \"adventive\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000073\",\n        \"name\": \"feladvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000074\",\n        \"name\": \"adventa\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000075\",\n        \"name\": \"domadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000076\",\n        \"name\": \"anadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000077\",\n        \"name\": \"adventoid\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000078\",\n        \"name\": \"hyperadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000079\",\n        \"name\": \"adventore\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000080\",\n        \"name\": \"adventate\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000081\",\n        \"name\": \"adventosis\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000082\",\n        \"name\": \"albadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000083\",\n        \"name\": \"synadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000084\",\n        \"name\": \"canadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000085\",\n        \"name\": \"supadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000086\",\n        \"name\": \"midadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000087\",\n        \"name\": \"esadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000088\",\n        \"name\": \"skyadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000089\",\n        \"name\": \"susadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000090\",\n        \"name\": \"archadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000091\",\n        \"name\": \"locadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000092\",\n        \"name\": \"insuladvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000093\",\n        \"name\": \"sugadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000094\",\n        \"name\": \"capadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000095\",\n        \"name\": \"falcadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000096\",\n        \"name\": \"monadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000097\",\n        \"name\": \"syladvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"10000098\",\n        \"name\": \"conadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000099\",\n        \"name\": \"cisadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"10000100\",\n        \"name\": \"kayadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000001\",\n        \"name\": \"cedadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000002\",\n        \"name\": \"veradvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000003\",\n        \"name\": \"cervadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000004\",\n        \"name\": \"audadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000005\",\n        \"name\": \"coladvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000006\",\n        \"name\": \"vertadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000007\",\n        \"name\": \"adventashun\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000008\",\n        \"name\": \"suradvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000009\",\n        \"name\": \"subadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000010\",\n        \"name\": \"superadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000011\",\n        \"name\": \"doladvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000012\",\n        \"name\": \"nonadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000013\",\n        \"name\": \"garadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000014\",\n        \"name\": \"adventalt\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000015\",\n        \"name\": \"premadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000016\",\n        \"name\": \"adventity\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000017\",\n        \"name\": \"bonadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000018\",\n        \"name\": \"adventise\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000019\",\n        \"name\": \"genadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000019\",\n        \"name\": \"adventist\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000020\",\n        \"name\": \"adventable\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000021\",\n        \"name\": \"auradvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000022\",\n        \"name\": \"adventent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000023\",\n        \"name\": \"disadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000024\",\n        \"name\": \"panadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000025\",\n        \"name\": \"adventer\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000026\",\n        \"name\": \"calcadvent\",\n        \"zipRequired\": true\n      }, {\n        \"merchantID\": \"20000027\",\n        \"name\": \"unadvent\",\n        \"zipRequired\": false\n      }, {\n        \"merchantID\": \"20000028\",\n        \"name\": \"adventall\",\n        \"zipRequired\": false\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }, {\n    status: 501,\n    body: {\n      \"message\": \"Operation not supported\"\n    }\n  }, {\n    status: 502,\n    body: {\n      \"message\": \"Bad Gateway\",\n      \"errors\": [{\n        \"message\": \"Internal error calling API provider\",\n        \"key\": \"common.api.providerInternalError\"\n      }]\n    }\n  }, {\n    status: 504,\n    body: {\n      \"message\": \"Gateway Timeout\",\n      \"errors\": [{\n        \"message\": \"API provider unavailable.\",\n        \"key\": \"common.api.providerUnavailable\"\n      }]\n    }\n  }]\n}]);\nexport { BILLPAY_BASE_PATH, BillPayAccountsService, BillPayAccountsServiceGetBillPayAccountsMocksProvider, BillPayAccountsServiceMocksProvider, BillPayAutopayService, BillPayAutopayServiceDeleteBillPayAutopayMocksProvider, BillPayAutopayServiceMocksProvider, BillPayAutopayServicePutBillPayAutopayMocksProvider, BillPayEbillsService, BillPayEbillsServiceDeleteBillPayEbillsMocksProvider, BillPayEbillsServiceGetBillPayEbillStatementsMocksProvider, BillPayEbillsServiceGetBillPayEbillsMocksProvider, BillPayEbillsServiceMocksProvider, BillPayEbillsServicePutEbillByIdMocksProvider, BillPayEnrolmentService, BillPayEnrolmentServiceGetBillPayEnrolmentMocksProvider, BillPayEnrolmentServiceMocksProvider, BillPayEnrolmentServicePostBillPayEnrolmentMocksProvider, BillPayPayeesService, BillPayPayeesServiceDeleteElectronicPayeeByIdMocksProvider, BillPayPayeesServiceDeletePayeeByIdMocksProvider, BillPayPayeesServiceGetElectronicPayeeByIdMocksProvider, BillPayPayeesServiceGetPayeeByIdMocksProvider, BillPayPayeesServiceMocksProvider, BillPayPayeesServicePostBillPayElectronicPayeesMocksProvider, BillPayPayeesServicePostBillPayPayeesMocksProvider, BillPayPayeesServicePutElectronicPayeeByIdMocksProvider, BillPayPayeesServicePutPayeeByIdMocksProvider, BillPayPayeesSummaryService, BillPayPayeesSummaryServiceGetBillPayPayeesSummaryMocksProvider, BillPayPayeesSummaryServiceMocksProvider, BillPayPaymentsService, BillPayPaymentsServiceDeletePaymentByIdMocksProvider, BillPayPaymentsServiceDeleteRecurringPaymentByIdMocksProvider, BillPayPaymentsServiceGetBillPayPaymentsMocksProvider, BillPayPaymentsServiceGetPaymentByIdMocksProvider, BillPayPaymentsServiceGetRecurringPaymentByIdMocksProvider, BillPayPaymentsServiceMocksProvider, BillPayPaymentsServicePostBillPayPaymentsMocksProvider, BillPayPaymentsServicePostBillPayRecurringPaymentsMocksProvider, BillPayPaymentsServicePutPaymentByIdMocksProvider, BillPayPaymentsServicePutRecurringPaymentByIdMocksProvider, BillPayPayverisService, BillPayPayverisServiceDeleteBillPayPayverisEbillsEnrolmentMocksProvider, BillPayPayverisServiceMocksProvider, BillPayPayverisServicePostBillPayPayverisEbillsEnrolmentMocksProvider, BillPayPayverisServicePostBillPayPayverisResolveEbillErrorsMocksProvider, BillPaySearchService, BillPaySearchServiceGetBillPaySearchMocksProvider, BillPaySearchServiceMocksProvider, BillpayApiModule, BillpayConfiguration, COLLECTION_FORMATS, CONFIG_TOKEN };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/billpay-http-ang/fesm2015/backbase-billpay-http-ang.js"],"names":["i0","InjectionToken","NgModule","Optional","SkipSelf","Injectable","Inject","i1","HttpHeaders","HttpParams","i2","createMocks","BILLPAY_BASE_PATH","COLLECTION_FORMATS","BillpayConfiguration","constructor","configurationParameters","apiKeys","username","password","accessToken","basePath","withCredentials","encoder","credentials","selectHeaderContentType","contentTypes","length","undefined","type","find","x","isJsonMime","selectHeaderAccept","accepts","mime","jsonMime","RegExp","test","toLowerCase","lookupCredential","key","value","CONFIG_TOKEN","BillpayApiModule","parentModule","http","dataModulesManager","config","Error","setModuleConfig","apiRoot","servicePath","headers","forRoot","configurationFactory","ngModule","providers","provide","useFactory","ɵfac","HttpClient","DataModulesManager","ɵmod","ɵinj","args","imports","declarations","exports","decorators","CustomHttpParameterCodec","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeURIComponent","decodeValue","BillPayAccountsService","httpClient","configuration","defaultHeaders","addToHttpParams","httpParams","Date","addToHttpParamsRecursive","Array","isArray","forEach","elem","append","toISOString","substr","Object","keys","getBillPayAccounts","observe","reportProgress","options","httpHeaderAcceptSelected","httpHeaderAccept","httpHeaderAccepts","set","responseType","startsWith","get","getBillPayAccountsUrl","ɵprov","providedIn","BillPayAccountsServiceGetBillPayAccountsMocksProvider","urlPattern","method","responses","status","body","BillPayAccountsServiceMocksProvider","BillPayAutopayService","deleteBillPayAutopay","requestParameters","_id","delete","String","deleteBillPayAutopayUrl","putBillPayAutopay","_billPayAutopayPutRequestBody","consumes","httpContentTypeSelected","put","putBillPayAutopayUrl","BillPayAutopayServiceDeleteBillPayAutopayMocksProvider","BillPayAutopayServicePutBillPayAutopayMocksProvider","BillPayAutopayServiceMocksProvider","BillPayEbillsService","deleteBillPayEbills","deleteBillPayEbillsUrl","getBillPayEbillStatements","_ebillId","getBillPayEbillStatementsUrl","getBillPayEbills","_status","_startDate","_endDate","_from","_size","_orderBy","_direction","queryParameters","params","getBillPayEbillsUrl","queryString","toString","putEbillById","_ebillByIdPutRequestBody","putEbillByIdUrl","BillPayEbillsServiceDeleteBillPayEbillsMocksProvider","BillPayEbillsServiceGetBillPayEbillStatementsMocksProvider","BillPayEbillsServiceGetBillPayEbillsMocksProvider","BillPayEbillsServicePutEbillByIdMocksProvider","BillPayEbillsServiceMocksProvider","BillPayEnrolmentService","getBillPayEnrolment","getBillPayEnrolmentUrl","postBillPayEnrolment","post","postBillPayEnrolmentUrl","BillPayEnrolmentServiceGetBillPayEnrolmentMocksProvider","BillPayEnrolmentServicePostBillPayEnrolmentMocksProvider","BillPayEnrolmentServiceMocksProvider","BillPayPayeesService","deleteElectronicPayeeById","_cancelPendingPayments","deleteElectronicPayeeByIdUrl","deletePayeeById","deletePayeeByIdUrl","getElectronicPayeeById","getElectronicPayeeByIdUrl","getPayeeById","getPayeeByIdUrl","postBillPayElectronicPayees","_billPayElectronicPayeesPostRequestBody","postBillPayElectronicPayeesUrl","postBillPayPayees","_billPayPayeesPostRequestBody","postBillPayPayeesUrl","putElectronicPayeeById","_electronicPayeeByIdPutRequestBody","putElectronicPayeeByIdUrl","putPayeeById","_payeeByIdPutRequestBody","putPayeeByIdUrl","BillPayPayeesServiceDeleteElectronicPayeeByIdMocksProvider","BillPayPayeesServiceDeletePayeeByIdMocksProvider","BillPayPayeesServiceGetElectronicPayeeByIdMocksProvider","BillPayPayeesServiceGetPayeeByIdMocksProvider","BillPayPayeesServicePostBillPayElectronicPayeesMocksProvider","BillPayPayeesServicePostBillPayPayeesMocksProvider","BillPayPayeesServicePutElectronicPayeeByIdMocksProvider","BillPayPayeesServicePutPayeeByIdMocksProvider","BillPayPayeesServiceMocksProvider","BillPayPayeesSummaryService","getBillPayPayeesSummary","getBillPayPayeesSummaryUrl","BillPayPayeesSummaryServiceGetBillPayPayeesSummaryMocksProvider","BillPayPayeesSummaryServiceMocksProvider","BillPayPaymentsService","deletePaymentById","deletePaymentByIdUrl","deleteRecurringPaymentById","deleteRecurringPaymentByIdUrl","getBillPayPayments","_payeeID","_paymentType","getBillPayPaymentsUrl","getPaymentById","getPaymentByIdUrl","getRecurringPaymentById","getRecurringPaymentByIdUrl","postBillPayPayments","_billPayPaymentsPostRequestBody","postBillPayPaymentsUrl","postBillPayRecurringPayments","_billPayRecurringPaymentsPostRequestBody","postBillPayRecurringPaymentsUrl","putPaymentById","_paymentByIdPutRequestBody","putPaymentByIdUrl","putRecurringPaymentById","_recurringPaymentByIdPutRequestBody","putRecurringPaymentByIdUrl","BillPayPaymentsServiceDeletePaymentByIdMocksProvider","BillPayPaymentsServiceDeleteRecurringPaymentByIdMocksProvider","BillPayPaymentsServiceGetBillPayPaymentsMocksProvider","BillPayPaymentsServiceGetPaymentByIdMocksProvider","BillPayPaymentsServiceGetRecurringPaymentByIdMocksProvider","BillPayPaymentsServicePostBillPayPaymentsMocksProvider","BillPayPaymentsServicePostBillPayRecurringPaymentsMocksProvider","BillPayPaymentsServicePutPaymentByIdMocksProvider","BillPayPaymentsServicePutRecurringPaymentByIdMocksProvider","BillPayPaymentsServiceMocksProvider","BillPayPayverisService","deleteBillPayPayverisEbillsEnrolment","deleteBillPayPayverisEbillsEnrolmentUrl","postBillPayPayverisEbillsEnrolment","_billPayPayverisEbillsEnrolmentPostRequestBody","postBillPayPayverisEbillsEnrolmentUrl","postBillPayPayverisResolveEbillErrors","_billPayPayverisResolveEbillErrorsPostRequestBody","postBillPayPayverisResolveEbillErrorsUrl","BillPayPayverisServiceDeleteBillPayPayverisEbillsEnrolmentMocksProvider","BillPayPayverisServicePostBillPayPayverisEbillsEnrolmentMocksProvider","BillPayPayverisServicePostBillPayPayverisResolveEbillErrorsMocksProvider","BillPayPayverisServiceMocksProvider","BillPaySearchService","getBillPaySearch","_name","_zipCode","_accountNumber","getBillPaySearchUrl","BillPaySearchServiceGetBillPaySearchMocksProvider","BillPaySearchServiceMocksProvider"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\n\nconst BILLPAY_BASE_PATH = new InjectionToken('BILLPAY_BASE_PATH');\nconst COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n};\n\nclass BillpayConfiguration {\n    constructor(configurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n    selectHeaderContentType(contentTypes) {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n        const type = contentTypes.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n    selectHeaderAccept(accepts) {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n        const type = accepts.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n    lookupCredential(key) {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\nconst CONFIG_TOKEN = new InjectionToken('api-data-module BillpayConfiguration');\n\nclass BillpayApiModule {\n    constructor(parentModule, http, dataModulesManager, config) {\n        if (parentModule) {\n            throw new Error('BillpayApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n                'See also https://github.com/angular/angular/issues/20575');\n        }\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n    static forRoot(configurationFactory) {\n        return {\n            ngModule: BillpayApiModule,\n            providers: [{ provide: BillpayConfiguration, useFactory: configurationFactory }]\n        };\n    }\n}\nBillpayApiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillpayApiModule, deps: [{ token: BillpayApiModule, optional: true, skipSelf: true }, { token: i1.HttpClient, optional: true }, { token: i2.DataModulesManager, optional: true }, { token: BillpayConfiguration }], target: i0.ɵɵFactoryTarget.NgModule });\nBillpayApiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillpayApiModule });\nBillpayApiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillpayApiModule, providers: [], imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillpayApiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [],\n                    exports: [],\n                    providers: []\n                }]\n        }], ctorParameters: function () { return [{ type: BillpayApiModule, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DataModulesManager, decorators: [{\n                    type: Optional\n                }] }, { type: BillpayConfiguration }]; } });\n\nclass CustomHttpParameterCodec {\n    encodeKey(k) {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v) {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k) {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v) {\n        return decodeURIComponent(v);\n    }\n}\n\nclass BillPayAccountsService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new BillpayConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    getBillPayAccounts(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/accounts`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getBillPayAccountsUrl() {\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/accounts`;\n    }\n}\nBillPayAccountsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayAccountsService, deps: [{ token: i1.HttpClient }, { token: BILLPAY_BASE_PATH, optional: true }, { token: BillpayConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nBillPayAccountsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayAccountsService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayAccountsService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [BILLPAY_BASE_PATH]\n                }] }, { type: BillpayConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst BillPayAccountsServiceGetBillPayAccountsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/accounts\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"accounts\": [{\n                            \"id\": \"1\",\n                            \"accountNumber\": \"000000001\",\n                            \"accountNickName\": \"Joint Account\",\n                            \"accountType\": \"CHECKING_ACCOUNT\",\n                            \"routingNumber\": \"000000011\",\n                            \"accountBalance\": {\n                                \"amount\": \"1000.01\",\n                                \"currencyCode\": \"USD\"\n                            }\n                        }, {\n                            \"id\": \"2\",\n                            \"accountNumber\": \"000000002\",\n                            \"accountType\": \"SAVINGS_ACCOUNT\",\n                            \"routingNumber\": \"000000022\"\n                        }, {\n                            \"accountNumber\": \"000000003\",\n                            \"accountType\": \"CHECKING_ACCOUNT\",\n                            \"routingNumber\": \"000000033\",\n                            \"accountBalance\": {\n                                \"amount\": \"1000.03\",\n                                \"currencyCode\": \"USD\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayAccountsServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/bill-pay/accounts\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"accounts\": [{\n                            \"id\": \"1\",\n                            \"accountNumber\": \"000000001\",\n                            \"accountNickName\": \"Joint Account\",\n                            \"accountType\": \"CHECKING_ACCOUNT\",\n                            \"routingNumber\": \"000000011\",\n                            \"accountBalance\": {\n                                \"amount\": \"1000.01\",\n                                \"currencyCode\": \"USD\"\n                            }\n                        }, {\n                            \"id\": \"2\",\n                            \"accountNumber\": \"000000002\",\n                            \"accountType\": \"SAVINGS_ACCOUNT\",\n                            \"routingNumber\": \"000000022\"\n                        }, {\n                            \"accountNumber\": \"000000003\",\n                            \"accountType\": \"CHECKING_ACCOUNT\",\n                            \"routingNumber\": \"000000033\",\n                            \"accountBalance\": {\n                                \"amount\": \"1000.03\",\n                                \"currencyCode\": \"USD\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nclass BillPayAutopayService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new BillpayConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    deleteBillPayAutopay(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteBillPayAutopay.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/autopay`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deleteBillPayAutopayUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteBillPayAutopay.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/autopay`;\n    }\n    putBillPayAutopay(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putBillPayAutopay.');\n        }\n        const _billPayAutopayPutRequestBody = requestParameters[\"billPayAutopayPutRequestBody\"];\n        if (_billPayAutopayPutRequestBody === null || _billPayAutopayPutRequestBody === undefined) {\n            throw new Error('Required parameter billPayAutopayPutRequestBody was null or undefined when calling putBillPayAutopay.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/autopay`, _billPayAutopayPutRequestBody, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putBillPayAutopayUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putBillPayAutopay.');\n        }\n        const _billPayAutopayPutRequestBody = requestParameters[\"billPayAutopayPutRequestBody\"];\n        if (_billPayAutopayPutRequestBody === null || _billPayAutopayPutRequestBody === undefined) {\n            throw new Error('Required parameter billPayAutopayPutRequestBody was null or undefined when calling putBillPayAutopay.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/autopay`;\n    }\n}\nBillPayAutopayService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayAutopayService, deps: [{ token: i1.HttpClient }, { token: BILLPAY_BASE_PATH, optional: true }, { token: BillpayConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nBillPayAutopayService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayAutopayService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayAutopayService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [BILLPAY_BASE_PATH]\n                }] }, { type: BillpayConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst BillPayAutopayServiceDeleteBillPayAutopayMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/autopay\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayAutopayServicePutBillPayAutopayMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/autopay\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayAutopayServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/autopay\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/autopay\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nclass BillPayEbillsService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new BillpayConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    deleteBillPayEbills(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteBillPayEbills.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deleteBillPayEbillsUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteBillPayEbills.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills`;\n    }\n    getBillPayEbillStatements(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _ebillId = requestParameters[\"ebillId\"];\n        if (_ebillId === null || _ebillId === undefined) {\n            throw new Error('Required parameter ebillId was null or undefined when calling getBillPayEbillStatements.');\n        }\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getBillPayEbillStatements.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/pdf',\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills/${encodeURIComponent(String(_ebillId))}/statements`, {\n            responseType: \"blob\",\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getBillPayEbillStatementsUrl(requestParameters) {\n        const _ebillId = requestParameters[\"ebillId\"];\n        if (_ebillId === null || _ebillId === undefined) {\n            throw new Error('Required parameter ebillId was null or undefined when calling getBillPayEbillStatements.');\n        }\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getBillPayEbillStatements.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills/${encodeURIComponent(String(_ebillId))}/statements`;\n    }\n    getBillPayEbills(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getBillPayEbills.');\n        }\n        const _status = requestParameters[\"status\"];\n        if (_status === null || _status === undefined) {\n            throw new Error('Required parameter status was null or undefined when calling getBillPayEbills.');\n        }\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_status !== undefined && _status !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _status, 'status');\n        }\n        if (_startDate !== undefined && _startDate !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _endDate, 'endDate');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _direction, 'direction');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getBillPayEbillsUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getBillPayEbills.');\n        }\n        const _status = requestParameters[\"status\"];\n        if (_status === null || _status === undefined) {\n            throw new Error('Required parameter status was null or undefined when calling getBillPayEbills.');\n        }\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_status !== undefined && _status !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _status, 'status');\n        }\n        if (_startDate !== undefined && _startDate !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _endDate, 'endDate');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _direction, 'direction');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills${queryString ? `?${queryString}` : ''}`;\n    }\n    putEbillById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _ebillId = requestParameters[\"ebillId\"];\n        if (_ebillId === null || _ebillId === undefined) {\n            throw new Error('Required parameter ebillId was null or undefined when calling putEbillById.');\n        }\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putEbillById.');\n        }\n        const _ebillByIdPutRequestBody = requestParameters[\"ebillByIdPutRequestBody\"];\n        if (_ebillByIdPutRequestBody === null || _ebillByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter ebillByIdPutRequestBody was null or undefined when calling putEbillById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills/${encodeURIComponent(String(_ebillId))}`, _ebillByIdPutRequestBody, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putEbillByIdUrl(requestParameters) {\n        const _ebillId = requestParameters[\"ebillId\"];\n        if (_ebillId === null || _ebillId === undefined) {\n            throw new Error('Required parameter ebillId was null or undefined when calling putEbillById.');\n        }\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putEbillById.');\n        }\n        const _ebillByIdPutRequestBody = requestParameters[\"ebillByIdPutRequestBody\"];\n        if (_ebillByIdPutRequestBody === null || _ebillByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter ebillByIdPutRequestBody was null or undefined when calling putEbillById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}/ebills/${encodeURIComponent(String(_ebillId))}`;\n    }\n}\nBillPayEbillsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayEbillsService, deps: [{ token: i1.HttpClient }, { token: BILLPAY_BASE_PATH, optional: true }, { token: BillpayConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nBillPayEbillsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayEbillsService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayEbillsService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [BILLPAY_BASE_PATH]\n                }] }, { type: BillpayConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst BillPayEbillsServiceDeleteBillPayEbillsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayEbillsServiceGetBillPayEbillStatementsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills/{ebillId}/statements\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayEbillsServiceGetBillPayEbillsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"ebills\": [{\n                            \"id\": \"20141219140239655592\",\n                            \"payeeID\": \"0001\",\n                            \"paymentDate\": \"2019-04-01\",\n                            \"amount\": {\n                                \"amount\": \"100.99\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"minAmountDue\": {\n                                \"amount\": \"20.50\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"outstandingBalance\": {\n                                \"amount\": \"101.98\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"status\": \"UNPAID\",\n                            \"statementAvailable\": true\n                        }, {\n                            \"id\": \"20141219140239655591\",\n                            \"payeeID\": \"0001\",\n                            \"paymentDate\": \"2019-03-01\",\n                            \"amount\": {\n                                \"amount\": \"100.99\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"minAmountDue\": {\n                                \"amount\": \"20.50\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"outstandingBalance\": {\n                                \"amount\": \"201.98\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"status\": \"PAID\",\n                            \"statementAvailable\": true,\n                            \"paymentId\": \"abc0192802\"\n                        }, {\n                            \"id\": \"20141219140239655590\",\n                            \"payeeID\": \"0001\",\n                            \"paymentDate\": \"2019-02-01\",\n                            \"amount\": {\n                                \"amount\": \"100.99\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"minAmountDue\": {\n                                \"amount\": \"20.50\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"outstandingBalance\": {\n                                \"amount\": \"301.98\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"status\": \"PAID\",\n                            \"url\": \"http://my.ebill.pdf\",\n                            \"statementAvailable\": false\n                        }],\n                    \"totalCount\": 3\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayEbillsServicePutEbillByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills/{ebillId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayEbillsServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills/{ebillId}/statements\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"ebills\": [{\n                            \"id\": \"20141219140239655592\",\n                            \"payeeID\": \"0001\",\n                            \"paymentDate\": \"2019-04-01\",\n                            \"amount\": {\n                                \"amount\": \"100.99\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"minAmountDue\": {\n                                \"amount\": \"20.50\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"outstandingBalance\": {\n                                \"amount\": \"101.98\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"status\": \"UNPAID\",\n                            \"statementAvailable\": true\n                        }, {\n                            \"id\": \"20141219140239655591\",\n                            \"payeeID\": \"0001\",\n                            \"paymentDate\": \"2019-03-01\",\n                            \"amount\": {\n                                \"amount\": \"100.99\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"minAmountDue\": {\n                                \"amount\": \"20.50\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"outstandingBalance\": {\n                                \"amount\": \"201.98\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"status\": \"PAID\",\n                            \"statementAvailable\": true,\n                            \"paymentId\": \"abc0192802\"\n                        }, {\n                            \"id\": \"20141219140239655590\",\n                            \"payeeID\": \"0001\",\n                            \"paymentDate\": \"2019-02-01\",\n                            \"amount\": {\n                                \"amount\": \"100.99\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"minAmountDue\": {\n                                \"amount\": \"20.50\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"outstandingBalance\": {\n                                \"amount\": \"301.98\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"status\": \"PAID\",\n                            \"url\": \"http://my.ebill.pdf\",\n                            \"statementAvailable\": false\n                        }],\n                    \"totalCount\": 3\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}/ebills/{ebillId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nclass BillPayEnrolmentService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new BillpayConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    getBillPayEnrolment(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/enrolment`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getBillPayEnrolmentUrl() {\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/enrolment`;\n    }\n    postBillPayEnrolment(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/bill-pay/enrolment`, null, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postBillPayEnrolmentUrl() {\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/enrolment`;\n    }\n}\nBillPayEnrolmentService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayEnrolmentService, deps: [{ token: i1.HttpClient }, { token: BILLPAY_BASE_PATH, optional: true }, { token: BillpayConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nBillPayEnrolmentService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayEnrolmentService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayEnrolmentService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [BILLPAY_BASE_PATH]\n                }] }, { type: BillpayConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst BillPayEnrolmentServiceGetBillPayEnrolmentMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/enrolment\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"enrolment\": {\n                        \"enrolled\": true\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayEnrolmentServicePostBillPayEnrolmentMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/enrolment\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayEnrolmentServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/bill-pay/enrolment\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"enrolment\": {\n                        \"enrolled\": true\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/enrolment\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nclass BillPayPayeesService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new BillpayConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    deleteElectronicPayeeById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteElectronicPayeeById.');\n        }\n        const _cancelPendingPayments = requestParameters[\"cancelPendingPayments\"];\n        if (_cancelPendingPayments === null || _cancelPendingPayments === undefined) {\n            throw new Error('Required parameter cancelPendingPayments was null or undefined when calling deleteElectronicPayeeById.');\n        }\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_cancelPendingPayments !== undefined && _cancelPendingPayments !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cancelPendingPayments, 'cancelPendingPayments');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deleteElectronicPayeeByIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteElectronicPayeeById.');\n        }\n        const _cancelPendingPayments = requestParameters[\"cancelPendingPayments\"];\n        if (_cancelPendingPayments === null || _cancelPendingPayments === undefined) {\n            throw new Error('Required parameter cancelPendingPayments was null or undefined when calling deleteElectronicPayeeById.');\n        }\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_cancelPendingPayments !== undefined && _cancelPendingPayments !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cancelPendingPayments, 'cancelPendingPayments');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}${queryString ? `?${queryString}` : ''}`;\n    }\n    deletePayeeById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deletePayeeById.');\n        }\n        const _cancelPendingPayments = requestParameters[\"cancelPendingPayments\"];\n        if (_cancelPendingPayments === null || _cancelPendingPayments === undefined) {\n            throw new Error('Required parameter cancelPendingPayments was null or undefined when calling deletePayeeById.');\n        }\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_cancelPendingPayments !== undefined && _cancelPendingPayments !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cancelPendingPayments, 'cancelPendingPayments');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/${encodeURIComponent(String(_id))}`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deletePayeeByIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deletePayeeById.');\n        }\n        const _cancelPendingPayments = requestParameters[\"cancelPendingPayments\"];\n        if (_cancelPendingPayments === null || _cancelPendingPayments === undefined) {\n            throw new Error('Required parameter cancelPendingPayments was null or undefined when calling deletePayeeById.');\n        }\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_cancelPendingPayments !== undefined && _cancelPendingPayments !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cancelPendingPayments, 'cancelPendingPayments');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/${encodeURIComponent(String(_id))}${queryString ? `?${queryString}` : ''}`;\n    }\n    getElectronicPayeeById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getElectronicPayeeById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getElectronicPayeeByIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getElectronicPayeeById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}`;\n    }\n    getPayeeById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getPayeeById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/${encodeURIComponent(String(_id))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getPayeeByIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getPayeeById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/${encodeURIComponent(String(_id))}`;\n    }\n    postBillPayElectronicPayees(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _billPayElectronicPayeesPostRequestBody = requestParameters[\"billPayElectronicPayeesPostRequestBody\"];\n        if (_billPayElectronicPayeesPostRequestBody === null || _billPayElectronicPayeesPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayElectronicPayeesPostRequestBody was null or undefined when calling postBillPayElectronicPayees.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic`, _billPayElectronicPayeesPostRequestBody, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postBillPayElectronicPayeesUrl(requestParameters) {\n        const _billPayElectronicPayeesPostRequestBody = requestParameters[\"billPayElectronicPayeesPostRequestBody\"];\n        if (_billPayElectronicPayeesPostRequestBody === null || _billPayElectronicPayeesPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayElectronicPayeesPostRequestBody was null or undefined when calling postBillPayElectronicPayees.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic`;\n    }\n    postBillPayPayees(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _billPayPayeesPostRequestBody = requestParameters[\"billPayPayeesPostRequestBody\"];\n        if (_billPayPayeesPostRequestBody === null || _billPayPayeesPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayPayeesPostRequestBody was null or undefined when calling postBillPayPayees.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/bill-pay/payees`, _billPayPayeesPostRequestBody, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postBillPayPayeesUrl(requestParameters) {\n        const _billPayPayeesPostRequestBody = requestParameters[\"billPayPayeesPostRequestBody\"];\n        if (_billPayPayeesPostRequestBody === null || _billPayPayeesPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayPayeesPostRequestBody was null or undefined when calling postBillPayPayees.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees`;\n    }\n    putElectronicPayeeById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putElectronicPayeeById.');\n        }\n        const _electronicPayeeByIdPutRequestBody = requestParameters[\"electronicPayeeByIdPutRequestBody\"];\n        if (_electronicPayeeByIdPutRequestBody === null || _electronicPayeeByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter electronicPayeeByIdPutRequestBody was null or undefined when calling putElectronicPayeeById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}`, _electronicPayeeByIdPutRequestBody, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putElectronicPayeeByIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putElectronicPayeeById.');\n        }\n        const _electronicPayeeByIdPutRequestBody = requestParameters[\"electronicPayeeByIdPutRequestBody\"];\n        if (_electronicPayeeByIdPutRequestBody === null || _electronicPayeeByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter electronicPayeeByIdPutRequestBody was null or undefined when calling putElectronicPayeeById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/electronic/${encodeURIComponent(String(_id))}`;\n    }\n    putPayeeById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putPayeeById.');\n        }\n        const _payeeByIdPutRequestBody = requestParameters[\"payeeByIdPutRequestBody\"];\n        if (_payeeByIdPutRequestBody === null || _payeeByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter payeeByIdPutRequestBody was null or undefined when calling putPayeeById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/bill-pay/payees/${encodeURIComponent(String(_id))}`, _payeeByIdPutRequestBody, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putPayeeByIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putPayeeById.');\n        }\n        const _payeeByIdPutRequestBody = requestParameters[\"payeeByIdPutRequestBody\"];\n        if (_payeeByIdPutRequestBody === null || _payeeByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter payeeByIdPutRequestBody was null or undefined when calling putPayeeById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees/${encodeURIComponent(String(_id))}`;\n    }\n}\nBillPayPayeesService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayPayeesService, deps: [{ token: i1.HttpClient }, { token: BILLPAY_BASE_PATH, optional: true }, { token: BillpayConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nBillPayPayeesService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayPayeesService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayPayeesService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [BILLPAY_BASE_PATH]\n                }] }, { type: BillpayConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst BillPayPayeesServiceDeleteElectronicPayeeByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPayeesServiceDeletePayeeByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/{id}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPayeesServiceGetElectronicPayeeByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"payee\": {\n                        \"id\": \"123456789\",\n                        \"name\": \"Backbase\",\n                        \"nickName\": \"My Backbase\",\n                        \"accountNumber\": \"987654321\",\n                        \"paymentServices\": [{\n                                \"cutoffTime\": \"2019-02-25T15:00:00.000-04:00\",\n                                \"earliestPaymentDate\": \"2019-02-26\",\n                                \"nextPaymentDate\": \"2019-02-27\",\n                                \"paymentServiceType\": \"REGULAR_PAYMENT\"\n                            }, {\n                                \"cutoffTime\": \"2019-02-18T15:00:00.000-04:00\",\n                                \"earliestPaymentDate\": \"2019-02-19\",\n                                \"nextPaymentDate\": \"2019-02-20\",\n                                \"paymentServiceType\": \"OVERNIGHT_CHECK\",\n                                \"deliveryDays\": 3,\n                                \"fee\": {\n                                    \"amount\": \"9.99\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            }],\n                        \"ebill\": {\n                            \"capable\": true,\n                            \"enabled\": true,\n                            \"status\": \"ACTIVE\",\n                            \"latestBill\": {\n                                \"id\": \"20141219140239655590\",\n                                \"amount\": {\n                                    \"amount\": \"100.99\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"minAmountDue\": {\n                                    \"amount\": \"20.50\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"outstandingBalance\": {\n                                    \"amount\": \"201.98\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"paymentDate\": \"2019-03-01\",\n                                \"status\": \"PAID\",\n                                \"url\": \"http://my.ebill.pdf\",\n                                \"statementAvailable\": false,\n                                \"paymentId\": \"abc0192802\"\n                            },\n                            \"autopay\": {\n                                \"paymentAccount\": {\n                                    \"accountNumber\": \"11111111\",\n                                    \"routingNumber\": \"000000022\",\n                                    \"accountType\": \"SAVINGS_ACCOUNT\",\n                                    \"accountNickName\": \"Current Account\"\n                                },\n                                \"daysBeforePayOn\": 3,\n                                \"maxPaymentAmount\": {\n                                    \"amount\": \"123\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"payOn\": \"BILL_ARRIVAL\",\n                                \"payAmount\": \"FULL_AMOUNT\",\n                                \"paymentScheduledAlert\": false,\n                                \"paymentSentAlert\": true,\n                                \"paymentCompleteAlert\": true\n                            }\n                        }\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPayeesServiceGetPayeeByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/{id}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"payee\": {\n                        \"id\": \"1\",\n                        \"name\": \"Backbase\",\n                        \"phoneNumber\": \"2345678901\",\n                        \"address\": {\n                            \"state\": \"SD\",\n                            \"city\": \"SIOUX FALLS\",\n                            \"address1\": \"PO BOX 6001\",\n                            \"postalCode\": \"12345\"\n                        },\n                        \"overnightDeliveryAddress\": {\n                            \"state\": \"FL\",\n                            \"city\": \"Saint Petersburg\",\n                            \"address1\": \"560 Carillon Parkway\",\n                            \"postalCode\": \"33717\"\n                        },\n                        \"paymentServices\": [{\n                                \"cutoffTime\": \"2019-02-25T15:00:00.000-04:00\",\n                                \"earliestPaymentDate\": \"2019-02-26\",\n                                \"nextPaymentDate\": \"2019-02-27\",\n                                \"paymentServiceType\": \"REGULAR_PAYMENT\"\n                            }, {\n                                \"cutoffTime\": \"2019-02-21T15:00:00.000-04:00\",\n                                \"earliestPaymentDate\": \"2019-02-22\",\n                                \"nextPaymentDate\": \"2019-02-25\",\n                                \"paymentServiceType\": \"OVERNIGHT_CHECK\",\n                                \"deliveryDays\": 3,\n                                \"fee\": {\n                                    \"amount\": \"9.99\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            }]\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPayeesServicePostBillPayElectronicPayeesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPayeesServicePostBillPayPayeesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPayeesServicePutElectronicPayeeByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPayeesServicePutPayeeByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees/{id}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPayeesServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/{id}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"payee\": {\n                        \"id\": \"123456789\",\n                        \"name\": \"Backbase\",\n                        \"nickName\": \"My Backbase\",\n                        \"accountNumber\": \"987654321\",\n                        \"paymentServices\": [{\n                                \"cutoffTime\": \"2019-02-25T15:00:00.000-04:00\",\n                                \"earliestPaymentDate\": \"2019-02-26\",\n                                \"nextPaymentDate\": \"2019-02-27\",\n                                \"paymentServiceType\": \"REGULAR_PAYMENT\"\n                            }, {\n                                \"cutoffTime\": \"2019-02-18T15:00:00.000-04:00\",\n                                \"earliestPaymentDate\": \"2019-02-19\",\n                                \"nextPaymentDate\": \"2019-02-20\",\n                                \"paymentServiceType\": \"OVERNIGHT_CHECK\",\n                                \"deliveryDays\": 3,\n                                \"fee\": {\n                                    \"amount\": \"9.99\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            }],\n                        \"ebill\": {\n                            \"capable\": true,\n                            \"enabled\": true,\n                            \"status\": \"ACTIVE\",\n                            \"latestBill\": {\n                                \"id\": \"20141219140239655590\",\n                                \"amount\": {\n                                    \"amount\": \"100.99\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"minAmountDue\": {\n                                    \"amount\": \"20.50\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"outstandingBalance\": {\n                                    \"amount\": \"201.98\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"paymentDate\": \"2019-03-01\",\n                                \"status\": \"PAID\",\n                                \"url\": \"http://my.ebill.pdf\",\n                                \"statementAvailable\": false,\n                                \"paymentId\": \"abc0192802\"\n                            },\n                            \"autopay\": {\n                                \"paymentAccount\": {\n                                    \"accountNumber\": \"11111111\",\n                                    \"routingNumber\": \"000000022\",\n                                    \"accountType\": \"SAVINGS_ACCOUNT\",\n                                    \"accountNickName\": \"Current Account\"\n                                },\n                                \"daysBeforePayOn\": 3,\n                                \"maxPaymentAmount\": {\n                                    \"amount\": \"123\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"payOn\": \"BILL_ARRIVAL\",\n                                \"payAmount\": \"FULL_AMOUNT\",\n                                \"paymentScheduledAlert\": false,\n                                \"paymentSentAlert\": true,\n                                \"paymentCompleteAlert\": true\n                            }\n                        }\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/{id}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"payee\": {\n                        \"id\": \"1\",\n                        \"name\": \"Backbase\",\n                        \"phoneNumber\": \"2345678901\",\n                        \"address\": {\n                            \"state\": \"SD\",\n                            \"city\": \"SIOUX FALLS\",\n                            \"address1\": \"PO BOX 6001\",\n                            \"postalCode\": \"12345\"\n                        },\n                        \"overnightDeliveryAddress\": {\n                            \"state\": \"FL\",\n                            \"city\": \"Saint Petersburg\",\n                            \"address1\": \"560 Carillon Parkway\",\n                            \"postalCode\": \"33717\"\n                        },\n                        \"paymentServices\": [{\n                                \"cutoffTime\": \"2019-02-25T15:00:00.000-04:00\",\n                                \"earliestPaymentDate\": \"2019-02-26\",\n                                \"nextPaymentDate\": \"2019-02-27\",\n                                \"paymentServiceType\": \"REGULAR_PAYMENT\"\n                            }, {\n                                \"cutoffTime\": \"2019-02-21T15:00:00.000-04:00\",\n                                \"earliestPaymentDate\": \"2019-02-22\",\n                                \"nextPaymentDate\": \"2019-02-25\",\n                                \"paymentServiceType\": \"OVERNIGHT_CHECK\",\n                                \"deliveryDays\": 3,\n                                \"fee\": {\n                                    \"amount\": \"9.99\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            }]\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/electronic/{id}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees/{id}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nclass BillPayPayeesSummaryService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new BillpayConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    getBillPayPayeesSummary(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/payees-summary`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getBillPayPayeesSummaryUrl() {\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees-summary`;\n    }\n}\nBillPayPayeesSummaryService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayPayeesSummaryService, deps: [{ token: i1.HttpClient }, { token: BILLPAY_BASE_PATH, optional: true }, { token: BillpayConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nBillPayPayeesSummaryService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayPayeesSummaryService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayPayeesSummaryService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [BILLPAY_BASE_PATH]\n                }] }, { type: BillpayConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst BillPayPayeesSummaryServiceGetBillPayPayeesSummaryMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees-summary\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"payeeSummaries\": [{\n                            \"id\": \"0001\",\n                            \"name\": \"Citibank\",\n                            \"nickName\": \"My Bank\",\n                            \"accountNumber\": \"246895317\",\n                            \"electronic\": true,\n                            \"hasRecurringPayments\": false,\n                            \"nextPayment\": {\n                                \"amount\": {\n                                    \"amount\": \"100.99\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"paymentDate\": \"2019-02-22\",\n                                \"recurring\": false,\n                                \"automaticPayment\": true,\n                                \"fee\": {\n                                    \"amount\": \"9.99\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            },\n                            \"paymentServices\": [{\n                                    \"cutoffTime\": \"2019-02-21T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-02-22\",\n                                    \"nextPaymentDate\": \"2019-02-25\",\n                                    \"paymentServiceType\": \"EXPEDITED_PAYMENT\",\n                                    \"deliveryDays\": 3,\n                                    \"fee\": {\n                                        \"amount\": \"9.99\",\n                                        \"currencyCode\": \"USD\"\n                                    }\n                                }, {\n                                    \"cutoffTime\": \"2019-02-25T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-02-26\",\n                                    \"nextPaymentDate\": \"2019-02-27\",\n                                    \"paymentServiceType\": \"REGULAR_PAYMENT\"\n                                }],\n                            \"ebill\": {\n                                \"capable\": true,\n                                \"enabled\": true,\n                                \"status\": \"ACTIVE\",\n                                \"latestBill\": {\n                                    \"id\": \"20141219140239655590\",\n                                    \"amount\": {\n                                        \"amount\": \"100.99\",\n                                        \"currencyCode\": \"USD\"\n                                    },\n                                    \"minAmountDue\": {\n                                        \"amount\": \"20.50\",\n                                        \"currencyCode\": \"USD\"\n                                    },\n                                    \"outstandingBalance\": {\n                                        \"amount\": \"201.98\",\n                                        \"currencyCode\": \"USD\"\n                                    },\n                                    \"paymentDate\": \"2019-03-01\",\n                                    \"status\": \"PAID\",\n                                    \"url\": \"http://my.ebill.pdf\",\n                                    \"statementAvailable\": false,\n                                    \"paymentId\": \"abc0192802\"\n                                },\n                                \"autopay\": {\n                                    \"paymentAccount\": {\n                                        \"accountNumber\": \"11111111\",\n                                        \"routingNumber\": \"000000022\",\n                                        \"accountType\": \"SAVINGS_ACCOUNT\",\n                                        \"accountNickName\": \"Current Account\"\n                                    },\n                                    \"daysBeforePayOn\": 3,\n                                    \"maxPaymentAmount\": {\n                                        \"amount\": \"123\",\n                                        \"currencyCode\": \"USD\"\n                                    },\n                                    \"payOn\": \"BILL_ARRIVAL\",\n                                    \"payAmount\": \"FULL_AMOUNT\",\n                                    \"paymentScheduledAlert\": false,\n                                    \"paymentSentAlert\": true,\n                                    \"paymentCompleteAlert\": true\n                                }\n                            },\n                            \"overnightDeliveryAddress\": {\n                                \"state\": \"FL\",\n                                \"city\": \"Saint Petersburg\",\n                                \"address1\": \"560 Carillon Parkway\",\n                                \"postalCode\": \"33717\"\n                            }\n                        }, {\n                            \"id\": \"0002\",\n                            \"name\": \"Electric Company\",\n                            \"accountNumber\": \"78641258\",\n                            \"electronic\": true,\n                            \"hasRecurringPayments\": true,\n                            \"nextPayment\": {\n                                \"amount\": {\n                                    \"amount\": \"101.99\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"paymentDate\": \"2019-02-28\",\n                                \"recurring\": true,\n                                \"automaticPayment\": false\n                            },\n                            \"paymentServices\": [{\n                                    \"cutoffTime\": \"2019-02-25T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-02-26\",\n                                    \"nextPaymentDate\": \"2019-02-27\",\n                                    \"paymentServiceType\": \"REGULAR_PAYMENT\"\n                                }],\n                            \"ebill\": {\n                                \"capable\": true,\n                                \"enabled\": true,\n                                \"status\": \"UPDATE_CREDENTIALS\"\n                            }\n                        }, {\n                            \"id\": \"0003\",\n                            \"name\": \"John Doe\",\n                            \"electronic\": false,\n                            \"hasRecurringPayments\": false,\n                            \"paymentServices\": [{\n                                    \"cutoffTime\": \"2019-03-04T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-03-05\",\n                                    \"nextPaymentDate\": \"2019-03-06\",\n                                    \"paymentServiceType\": \"REGULAR_PAYMENT\"\n                                }]\n                        }, {\n                            \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n                            \"name\": \"Gas Company\",\n                            \"electronic\": true,\n                            \"hasRecurringPayments\": false,\n                            \"nextPayment\": {\n                                \"amount\": {\n                                    \"amount\": \"20.99\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"paymentDate\": \"2019-03-20\",\n                                \"recurring\": false,\n                                \"automaticPayment\": false\n                            },\n                            \"paymentServices\": [{\n                                    \"cutoffTime\": \"2019-03-21T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-03-22\",\n                                    \"nextPaymentDate\": \"2019-03-25\",\n                                    \"paymentServiceType\": \"EXPEDITED_PAYMENT\",\n                                    \"deliveryDays\": 3,\n                                    \"fee\": {\n                                        \"amount\": \"0\",\n                                        \"currencyCode\": \"USD\"\n                                    }\n                                }, {\n                                    \"cutoffTime\": \"2019-03-27T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-03-28\",\n                                    \"nextPaymentDate\": \"2019-03-29\",\n                                    \"paymentServiceType\": \"REGULAR_PAYMENT\"\n                                }],\n                            \"ebill\": {\n                                \"capable\": true,\n                                \"enabled\": true,\n                                \"status\": \"ACTIVE\"\n                            }\n                        }, {\n                            \"id\": \"31315694\",\n                            \"name\": \"Somewhat Wireless\",\n                            \"nickName\": \"Internet\",\n                            \"accountNumber\": \"152236988\",\n                            \"electronic\": true,\n                            \"hasRecurringPayments\": true,\n                            \"paymentServices\": [{\n                                    \"cutoffTime\": \"2019-10-08T06:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-10-08\",\n                                    \"nextPaymentDate\": \"2019-10-09\",\n                                    \"paymentServiceType\": \"REGULAR_PAYMENT\",\n                                    \"deliveryDays\": 1\n                                }],\n                            \"ebill\": {\n                                \"capable\": true,\n                                \"enabled\": true,\n                                \"status\": \"USER_ACTION\"\n                            }\n                        }, {\n                            \"id\": \"31315661\",\n                            \"name\": \"Outer Rim Supply Co.\",\n                            \"accountNumber\": \"152236978\",\n                            \"electronic\": true,\n                            \"hasRecurringPayments\": false,\n                            \"paymentServices\": [{\n                                    \"cutoffTime\": \"2019-10-08T06:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-10-08\",\n                                    \"nextPaymentDate\": \"2019-10-09\",\n                                    \"paymentServiceType\": \"REGULAR_PAYMENT\",\n                                    \"deliveryDays\": 1\n                                }],\n                            \"ebill\": {\n                                \"capable\": true,\n                                \"enabled\": true,\n                                \"status\": \"ERROR\"\n                            }\n                        }, {\n                            \"id\": \"0004\",\n                            \"name\": \"Water Company\",\n                            \"electronic\": true,\n                            \"hasRecurringPayments\": false,\n                            \"nextPayment\": {\n                                \"amount\": {\n                                    \"amount\": \"2001.89\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"paymentDate\": \"2019-03-14\",\n                                \"recurring\": false,\n                                \"automaticPayment\": false\n                            },\n                            \"paymentServices\": [{\n                                    \"cutoffTime\": \"2019-03-11T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-03-12\",\n                                    \"nextPaymentDate\": \"2019-03-13\",\n                                    \"paymentServiceType\": \"OVERNIGHT_CHECK\",\n                                    \"deliveryDays\": 3,\n                                    \"fee\": {\n                                        \"amount\": \"9.99\",\n                                        \"currencyCode\": \"USD\"\n                                    }\n                                }, {\n                                    \"cutoffTime\": \"2019-03-18T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-03-19\",\n                                    \"nextPaymentDate\": \"2019-03-20\",\n                                    \"paymentServiceType\": \"REGULAR_PAYMENT\"\n                                }],\n                            \"overnightDeliveryAddress\": {\n                                \"state\": \"FL\",\n                                \"city\": \"Saint Petersburg\",\n                                \"address1\": \"560 Carillon Parkway\",\n                                \"postalCode\": \"33717\"\n                            },\n                            \"ebill\": {\n                                \"capable\": true,\n                                \"enabled\": true,\n                                \"status\": \"NOT_SUPPORTED\"\n                            }\n                        }, {\n                            \"id\": \"0005\",\n                            \"name\": \"Phone Company\",\n                            \"electronic\": true,\n                            \"hasRecurringPayments\": true,\n                            \"nextPayment\": {\n                                \"amount\": {\n                                    \"amount\": \"45.23\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"paymentDate\": \"2019-04-10\",\n                                \"recurring\": false,\n                                \"automaticPayment\": false\n                            },\n                            \"paymentServices\": [{\n                                    \"cutoffTime\": \"2019-04-01T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-04-02\",\n                                    \"nextPaymentDate\": \"2019-04-03\",\n                                    \"paymentServiceType\": \"OVERNIGHT_CHECK\",\n                                    \"deliveryDays\": 3,\n                                    \"fee\": {\n                                        \"amount\": \"9.99\",\n                                        \"currencyCode\": \"USD\"\n                                    }\n                                }, {\n                                    \"cutoffTime\": \"2019-04-08T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-04-08\",\n                                    \"nextPaymentDate\": \"2019-04-08\",\n                                    \"paymentServiceType\": \"REGULAR_PAYMENT\"\n                                }],\n                            \"ebill\": {\n                                \"capable\": true,\n                                \"enabled\": false\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPayeesSummaryServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees-summary\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"payeeSummaries\": [{\n                            \"id\": \"0001\",\n                            \"name\": \"Citibank\",\n                            \"nickName\": \"My Bank\",\n                            \"accountNumber\": \"246895317\",\n                            \"electronic\": true,\n                            \"hasRecurringPayments\": false,\n                            \"nextPayment\": {\n                                \"amount\": {\n                                    \"amount\": \"100.99\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"paymentDate\": \"2019-02-22\",\n                                \"recurring\": false,\n                                \"automaticPayment\": true,\n                                \"fee\": {\n                                    \"amount\": \"9.99\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            },\n                            \"paymentServices\": [{\n                                    \"cutoffTime\": \"2019-02-21T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-02-22\",\n                                    \"nextPaymentDate\": \"2019-02-25\",\n                                    \"paymentServiceType\": \"EXPEDITED_PAYMENT\",\n                                    \"deliveryDays\": 3,\n                                    \"fee\": {\n                                        \"amount\": \"9.99\",\n                                        \"currencyCode\": \"USD\"\n                                    }\n                                }, {\n                                    \"cutoffTime\": \"2019-02-25T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-02-26\",\n                                    \"nextPaymentDate\": \"2019-02-27\",\n                                    \"paymentServiceType\": \"REGULAR_PAYMENT\"\n                                }],\n                            \"ebill\": {\n                                \"capable\": true,\n                                \"enabled\": true,\n                                \"status\": \"ACTIVE\",\n                                \"latestBill\": {\n                                    \"id\": \"20141219140239655590\",\n                                    \"amount\": {\n                                        \"amount\": \"100.99\",\n                                        \"currencyCode\": \"USD\"\n                                    },\n                                    \"minAmountDue\": {\n                                        \"amount\": \"20.50\",\n                                        \"currencyCode\": \"USD\"\n                                    },\n                                    \"outstandingBalance\": {\n                                        \"amount\": \"201.98\",\n                                        \"currencyCode\": \"USD\"\n                                    },\n                                    \"paymentDate\": \"2019-03-01\",\n                                    \"status\": \"PAID\",\n                                    \"url\": \"http://my.ebill.pdf\",\n                                    \"statementAvailable\": false,\n                                    \"paymentId\": \"abc0192802\"\n                                },\n                                \"autopay\": {\n                                    \"paymentAccount\": {\n                                        \"accountNumber\": \"11111111\",\n                                        \"routingNumber\": \"000000022\",\n                                        \"accountType\": \"SAVINGS_ACCOUNT\",\n                                        \"accountNickName\": \"Current Account\"\n                                    },\n                                    \"daysBeforePayOn\": 3,\n                                    \"maxPaymentAmount\": {\n                                        \"amount\": \"123\",\n                                        \"currencyCode\": \"USD\"\n                                    },\n                                    \"payOn\": \"BILL_ARRIVAL\",\n                                    \"payAmount\": \"FULL_AMOUNT\",\n                                    \"paymentScheduledAlert\": false,\n                                    \"paymentSentAlert\": true,\n                                    \"paymentCompleteAlert\": true\n                                }\n                            },\n                            \"overnightDeliveryAddress\": {\n                                \"state\": \"FL\",\n                                \"city\": \"Saint Petersburg\",\n                                \"address1\": \"560 Carillon Parkway\",\n                                \"postalCode\": \"33717\"\n                            }\n                        }, {\n                            \"id\": \"0002\",\n                            \"name\": \"Electric Company\",\n                            \"accountNumber\": \"78641258\",\n                            \"electronic\": true,\n                            \"hasRecurringPayments\": true,\n                            \"nextPayment\": {\n                                \"amount\": {\n                                    \"amount\": \"101.99\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"paymentDate\": \"2019-02-28\",\n                                \"recurring\": true,\n                                \"automaticPayment\": false\n                            },\n                            \"paymentServices\": [{\n                                    \"cutoffTime\": \"2019-02-25T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-02-26\",\n                                    \"nextPaymentDate\": \"2019-02-27\",\n                                    \"paymentServiceType\": \"REGULAR_PAYMENT\"\n                                }],\n                            \"ebill\": {\n                                \"capable\": true,\n                                \"enabled\": true,\n                                \"status\": \"UPDATE_CREDENTIALS\"\n                            }\n                        }, {\n                            \"id\": \"0003\",\n                            \"name\": \"John Doe\",\n                            \"electronic\": false,\n                            \"hasRecurringPayments\": false,\n                            \"paymentServices\": [{\n                                    \"cutoffTime\": \"2019-03-04T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-03-05\",\n                                    \"nextPaymentDate\": \"2019-03-06\",\n                                    \"paymentServiceType\": \"REGULAR_PAYMENT\"\n                                }]\n                        }, {\n                            \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n                            \"name\": \"Gas Company\",\n                            \"electronic\": true,\n                            \"hasRecurringPayments\": false,\n                            \"nextPayment\": {\n                                \"amount\": {\n                                    \"amount\": \"20.99\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"paymentDate\": \"2019-03-20\",\n                                \"recurring\": false,\n                                \"automaticPayment\": false\n                            },\n                            \"paymentServices\": [{\n                                    \"cutoffTime\": \"2019-03-21T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-03-22\",\n                                    \"nextPaymentDate\": \"2019-03-25\",\n                                    \"paymentServiceType\": \"EXPEDITED_PAYMENT\",\n                                    \"deliveryDays\": 3,\n                                    \"fee\": {\n                                        \"amount\": \"0\",\n                                        \"currencyCode\": \"USD\"\n                                    }\n                                }, {\n                                    \"cutoffTime\": \"2019-03-27T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-03-28\",\n                                    \"nextPaymentDate\": \"2019-03-29\",\n                                    \"paymentServiceType\": \"REGULAR_PAYMENT\"\n                                }],\n                            \"ebill\": {\n                                \"capable\": true,\n                                \"enabled\": true,\n                                \"status\": \"ACTIVE\"\n                            }\n                        }, {\n                            \"id\": \"31315694\",\n                            \"name\": \"Somewhat Wireless\",\n                            \"nickName\": \"Internet\",\n                            \"accountNumber\": \"152236988\",\n                            \"electronic\": true,\n                            \"hasRecurringPayments\": true,\n                            \"paymentServices\": [{\n                                    \"cutoffTime\": \"2019-10-08T06:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-10-08\",\n                                    \"nextPaymentDate\": \"2019-10-09\",\n                                    \"paymentServiceType\": \"REGULAR_PAYMENT\",\n                                    \"deliveryDays\": 1\n                                }],\n                            \"ebill\": {\n                                \"capable\": true,\n                                \"enabled\": true,\n                                \"status\": \"USER_ACTION\"\n                            }\n                        }, {\n                            \"id\": \"31315661\",\n                            \"name\": \"Outer Rim Supply Co.\",\n                            \"accountNumber\": \"152236978\",\n                            \"electronic\": true,\n                            \"hasRecurringPayments\": false,\n                            \"paymentServices\": [{\n                                    \"cutoffTime\": \"2019-10-08T06:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-10-08\",\n                                    \"nextPaymentDate\": \"2019-10-09\",\n                                    \"paymentServiceType\": \"REGULAR_PAYMENT\",\n                                    \"deliveryDays\": 1\n                                }],\n                            \"ebill\": {\n                                \"capable\": true,\n                                \"enabled\": true,\n                                \"status\": \"ERROR\"\n                            }\n                        }, {\n                            \"id\": \"0004\",\n                            \"name\": \"Water Company\",\n                            \"electronic\": true,\n                            \"hasRecurringPayments\": false,\n                            \"nextPayment\": {\n                                \"amount\": {\n                                    \"amount\": \"2001.89\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"paymentDate\": \"2019-03-14\",\n                                \"recurring\": false,\n                                \"automaticPayment\": false\n                            },\n                            \"paymentServices\": [{\n                                    \"cutoffTime\": \"2019-03-11T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-03-12\",\n                                    \"nextPaymentDate\": \"2019-03-13\",\n                                    \"paymentServiceType\": \"OVERNIGHT_CHECK\",\n                                    \"deliveryDays\": 3,\n                                    \"fee\": {\n                                        \"amount\": \"9.99\",\n                                        \"currencyCode\": \"USD\"\n                                    }\n                                }, {\n                                    \"cutoffTime\": \"2019-03-18T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-03-19\",\n                                    \"nextPaymentDate\": \"2019-03-20\",\n                                    \"paymentServiceType\": \"REGULAR_PAYMENT\"\n                                }],\n                            \"overnightDeliveryAddress\": {\n                                \"state\": \"FL\",\n                                \"city\": \"Saint Petersburg\",\n                                \"address1\": \"560 Carillon Parkway\",\n                                \"postalCode\": \"33717\"\n                            },\n                            \"ebill\": {\n                                \"capable\": true,\n                                \"enabled\": true,\n                                \"status\": \"NOT_SUPPORTED\"\n                            }\n                        }, {\n                            \"id\": \"0005\",\n                            \"name\": \"Phone Company\",\n                            \"electronic\": true,\n                            \"hasRecurringPayments\": true,\n                            \"nextPayment\": {\n                                \"amount\": {\n                                    \"amount\": \"45.23\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"paymentDate\": \"2019-04-10\",\n                                \"recurring\": false,\n                                \"automaticPayment\": false\n                            },\n                            \"paymentServices\": [{\n                                    \"cutoffTime\": \"2019-04-01T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-04-02\",\n                                    \"nextPaymentDate\": \"2019-04-03\",\n                                    \"paymentServiceType\": \"OVERNIGHT_CHECK\",\n                                    \"deliveryDays\": 3,\n                                    \"fee\": {\n                                        \"amount\": \"9.99\",\n                                        \"currencyCode\": \"USD\"\n                                    }\n                                }, {\n                                    \"cutoffTime\": \"2019-04-08T15:00:00.000-04:00\",\n                                    \"earliestPaymentDate\": \"2019-04-08\",\n                                    \"nextPaymentDate\": \"2019-04-08\",\n                                    \"paymentServiceType\": \"REGULAR_PAYMENT\"\n                                }],\n                            \"ebill\": {\n                                \"capable\": true,\n                                \"enabled\": false\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nclass BillPayPaymentsService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new BillpayConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    deletePaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deletePaymentById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/${encodeURIComponent(String(_id))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deletePaymentByIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deletePaymentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/${encodeURIComponent(String(_id))}`;\n    }\n    deleteRecurringPaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteRecurringPaymentById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring/${encodeURIComponent(String(_id))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deleteRecurringPaymentByIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteRecurringPaymentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring/${encodeURIComponent(String(_id))}`;\n    }\n    getBillPayPayments(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _status = requestParameters[\"status\"];\n        if (_status === null || _status === undefined) {\n            throw new Error('Required parameter status was null or undefined when calling getBillPayPayments.');\n        }\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _payeeID = requestParameters[\"payeeID\"];\n        const _paymentType = requestParameters[\"paymentType\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_status !== undefined && _status !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _status, 'status');\n        }\n        if (_startDate !== undefined && _startDate !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _endDate, 'endDate');\n        }\n        if (_payeeID !== undefined && _payeeID !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _payeeID, 'payeeID');\n        }\n        if (_paymentType !== undefined && _paymentType !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _paymentType, 'paymentType');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _direction, 'direction');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/payments`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getBillPayPaymentsUrl(requestParameters) {\n        const _status = requestParameters[\"status\"];\n        if (_status === null || _status === undefined) {\n            throw new Error('Required parameter status was null or undefined when calling getBillPayPayments.');\n        }\n        const _startDate = requestParameters[\"startDate\"];\n        const _endDate = requestParameters[\"endDate\"];\n        const _payeeID = requestParameters[\"payeeID\"];\n        const _paymentType = requestParameters[\"paymentType\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_status !== undefined && _status !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _status, 'status');\n        }\n        if (_startDate !== undefined && _startDate !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _startDate, 'startDate');\n        }\n        if (_endDate !== undefined && _endDate !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _endDate, 'endDate');\n        }\n        if (_payeeID !== undefined && _payeeID !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _payeeID, 'payeeID');\n        }\n        if (_paymentType !== undefined && _paymentType !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _paymentType, 'paymentType');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _direction, 'direction');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payments${queryString ? `?${queryString}` : ''}`;\n    }\n    getPaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getPaymentById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/${encodeURIComponent(String(_id))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getPaymentByIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getPaymentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/${encodeURIComponent(String(_id))}`;\n    }\n    getRecurringPaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getRecurringPaymentById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring/${encodeURIComponent(String(_id))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getRecurringPaymentByIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getRecurringPaymentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring/${encodeURIComponent(String(_id))}`;\n    }\n    postBillPayPayments(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _billPayPaymentsPostRequestBody = requestParameters[\"billPayPaymentsPostRequestBody\"];\n        if (_billPayPaymentsPostRequestBody === null || _billPayPaymentsPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayPaymentsPostRequestBody was null or undefined when calling postBillPayPayments.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/bill-pay/payments`, _billPayPaymentsPostRequestBody, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postBillPayPaymentsUrl(requestParameters) {\n        const _billPayPaymentsPostRequestBody = requestParameters[\"billPayPaymentsPostRequestBody\"];\n        if (_billPayPaymentsPostRequestBody === null || _billPayPaymentsPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayPaymentsPostRequestBody was null or undefined when calling postBillPayPayments.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payments`;\n    }\n    postBillPayRecurringPayments(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _billPayRecurringPaymentsPostRequestBody = requestParameters[\"billPayRecurringPaymentsPostRequestBody\"];\n        if (_billPayRecurringPaymentsPostRequestBody === null || _billPayRecurringPaymentsPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayRecurringPaymentsPostRequestBody was null or undefined when calling postBillPayRecurringPayments.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring`, _billPayRecurringPaymentsPostRequestBody, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postBillPayRecurringPaymentsUrl(requestParameters) {\n        const _billPayRecurringPaymentsPostRequestBody = requestParameters[\"billPayRecurringPaymentsPostRequestBody\"];\n        if (_billPayRecurringPaymentsPostRequestBody === null || _billPayRecurringPaymentsPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayRecurringPaymentsPostRequestBody was null or undefined when calling postBillPayRecurringPayments.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring`;\n    }\n    putPaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putPaymentById.');\n        }\n        const _paymentByIdPutRequestBody = requestParameters[\"paymentByIdPutRequestBody\"];\n        if (_paymentByIdPutRequestBody === null || _paymentByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter paymentByIdPutRequestBody was null or undefined when calling putPaymentById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/${encodeURIComponent(String(_id))}`, _paymentByIdPutRequestBody, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putPaymentByIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putPaymentById.');\n        }\n        const _paymentByIdPutRequestBody = requestParameters[\"paymentByIdPutRequestBody\"];\n        if (_paymentByIdPutRequestBody === null || _paymentByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter paymentByIdPutRequestBody was null or undefined when calling putPaymentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/${encodeURIComponent(String(_id))}`;\n    }\n    putRecurringPaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putRecurringPaymentById.');\n        }\n        const _recurringPaymentByIdPutRequestBody = requestParameters[\"recurringPaymentByIdPutRequestBody\"];\n        if (_recurringPaymentByIdPutRequestBody === null || _recurringPaymentByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter recurringPaymentByIdPutRequestBody was null or undefined when calling putRecurringPaymentById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring/${encodeURIComponent(String(_id))}`, _recurringPaymentByIdPutRequestBody, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putRecurringPaymentByIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putRecurringPaymentById.');\n        }\n        const _recurringPaymentByIdPutRequestBody = requestParameters[\"recurringPaymentByIdPutRequestBody\"];\n        if (_recurringPaymentByIdPutRequestBody === null || _recurringPaymentByIdPutRequestBody === undefined) {\n            throw new Error('Required parameter recurringPaymentByIdPutRequestBody was null or undefined when calling putRecurringPaymentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payments/recurring/${encodeURIComponent(String(_id))}`;\n    }\n}\nBillPayPaymentsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayPaymentsService, deps: [{ token: i1.HttpClient }, { token: BILLPAY_BASE_PATH, optional: true }, { token: BillpayConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nBillPayPaymentsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayPaymentsService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayPaymentsService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [BILLPAY_BASE_PATH]\n                }] }, { type: BillpayConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst BillPayPaymentsServiceDeletePaymentByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payments/{id}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPaymentsServiceDeleteRecurringPaymentByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payments/recurring/{id}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPaymentsServiceGetBillPayPaymentsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payments\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"payments\": [{\n                            \"id\": \"8a9483495f058d2f015f058d366b0045\",\n                            \"payeeID\": \"3\",\n                            \"payeeName\": \"Soccer Shots\",\n                            \"payeeNickName\": \"Kids Soccer\",\n                            \"payeeElectronic\": false,\n                            \"amount\": {\n                                \"amount\": \"10.99\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"paymentDate\": \"2019-04-21\",\n                            \"paymentAccount\": {\n                                \"accountNumber\": \"11111111\",\n                                \"routingNumber\": \"000000022\",\n                                \"accountType\": \"SAVINGS_ACCOUNT\",\n                                \"accountNickName\": \"Current Account\"\n                            },\n                            \"recurring\": false,\n                            \"automaticPayment\": false,\n                            \"status\": \"PENDING\",\n                            \"fee\": {\n                                \"amount\": \"9.99\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"ebillID\": \"20141219140239655590\"\n                        }, {\n                            \"id\": \"8a9483495f058d2f015f058d366a003c\",\n                            \"payeeID\": \"4\",\n                            \"payeeName\": \"Gas Bill\",\n                            \"payeeAccountNumber\": \"100000001\",\n                            \"payeeElectronic\": true,\n                            \"amount\": {\n                                \"amount\": \"100.99\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"paymentDate\": \"2019-02-22\",\n                            \"paymentAccount\": {\n                                \"id\": \"1\",\n                                \"accountNumber\": \"22222222\",\n                                \"routingNumber\": \"000000033\",\n                                \"accountType\": \"CHECKING_ACCOUNT\"\n                            },\n                            \"recurring\": true,\n                            \"automaticPayment\": false,\n                            \"frequency\": \"MONTHLY\",\n                            \"numberOfInstances\": 2,\n                            \"paymentScheduledAlert\": true,\n                            \"paymentSentAlert\": true,\n                            \"modelExpirationAlert\": true,\n                            \"status\": \"FAILED\"\n                        }, {\n                            \"id\": \"8a9483a96dd476f1016dd476f7e8001c\",\n                            \"payeeID\": \"2\",\n                            \"payeeName\": \"The Republic\",\n                            \"payeeAccountNumber\": \"12345O\",\n                            \"payeeElectronic\": true,\n                            \"amount\": {\n                                \"amount\": \"200.99\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"paymentDate\": \"2018-11-23\",\n                            \"paymentMemo\": \"Order #66\",\n                            \"paymentAccount\": {\n                                \"accountNumber\": \"100001001\",\n                                \"accountNickName\": \"Joint Account\",\n                                \"accountType\": \"CHECKING_ACCOUNT\",\n                                \"routingNumber\": \"110001001\"\n                            },\n                            \"recurring\": false,\n                            \"automaticPayment\": true,\n                            \"paymentScheduledAlert\": true,\n                            \"paymentSentAlert\": true,\n                            \"modelExpirationAlert\": true,\n                            \"status\": \"PROCESSED\"\n                        }],\n                    \"totalCount\": 3\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPaymentsServiceGetPaymentByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payments/{id}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"payment\": {\n                        \"id\": \"8a9483495f058d2f015f058d366a003c\",\n                        \"payeeID\": \"0002\",\n                        \"payeeName\": \"Citibank\",\n                        \"payeeAccountNumber\": \"100000001\",\n                        \"payeeElectronic\": false,\n                        \"amount\": {\n                            \"amount\": \"100.99\",\n                            \"currencyCode\": \"USD\"\n                        },\n                        \"paymentDate\": \"2019-02-22\",\n                        \"paymentAccount\": {\n                            \"id\": \"1\",\n                            \"accountNumber\": \"000000001\",\n                            \"routingNumber\": \"000000011\",\n                            \"accountType\": \"CHECKING_ACCOUNT\"\n                        },\n                        \"recurring\": false,\n                        \"automaticPayment\": false,\n                        \"status\": \"PENDING\",\n                        \"fee\": {\n                            \"amount\": \"9.99\",\n                            \"currencyCode\": \"USD\"\n                        },\n                        \"ebillID\": \"20141219140239655590\"\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPaymentsServiceGetRecurringPaymentByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payments/recurring/{id}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"payment\": {\n                        \"id\": \"8a9483495f058d2f015f058d366a003c\",\n                        \"payeeID\": \"0005\",\n                        \"payeeName\": \"Citibank\",\n                        \"payeeAccountNumber\": \"100000001\",\n                        \"payeeElectronic\": true,\n                        \"amount\": {\n                            \"amount\": \"100.99\",\n                            \"currencyCode\": \"USD\"\n                        },\n                        \"paymentDate\": \"2019-02-22\",\n                        \"paymentAccount\": {\n                            \"id\": \"1\",\n                            \"accountNumber\": \"000000001\",\n                            \"routingNumber\": \"000000011\",\n                            \"accountType\": \"CHECKING_ACCOUNT\"\n                        },\n                        \"paymentMemo\": \"Here is some money\",\n                        \"recurring\": true,\n                        \"frequency\": \"MONTHLY\",\n                        \"numberOfInstances\": 2,\n                        \"paymentScheduledAlert\": true,\n                        \"paymentSentAlert\": true,\n                        \"modelExpirationAlert\": true,\n                        \"status\": \"PENDING\"\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPaymentsServicePostBillPayPaymentsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payments\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"payments\": [{\n                            \"payeeID\": \"payee1\",\n                            \"paymentID\": \"payment1\",\n                            \"errors\": []\n                        }, {\n                            \"payeeID\": \"payee2\",\n                            \"paymentID\": \"payment2\",\n                            \"errors\": []\n                        }, {\n                            \"payeeID\": \"payee3\",\n                            \"errors\": [{\n                                    \"message\": \"Invalid next payment date\",\n                                    \"key\": \"billpay.api.invalidNextPaymentDate\"\n                                }, {\n                                    \"message\": \"Payment already exists\",\n                                    \"key\": \"billpay.api.paymentAlreadyExists\"\n                                }]\n                        }, {\n                            \"payeeID\": \"payee4\",\n                            \"paymentID\": \"payment4\",\n                            \"errors\": []\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [],\n                    \"payments\": [{\n                            \"payeeID\": \"1\",\n                            \"errors\": [{\n                                    \"message\": \"The payee is invalid\",\n                                    \"key\": \"billpay.api.invalidPayee\"\n                                }]\n                        }, {\n                            \"payeeID\": \"2\",\n                            \"errors\": [{\n                                    \"message\": \"The payee is invalid\",\n                                    \"key\": \"billpay.api.invalidPayee\"\n                                }]\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPaymentsServicePostBillPayRecurringPaymentsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payments/recurring\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPaymentsServicePutPaymentByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payments/{id}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPaymentsServicePutRecurringPaymentByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payments/recurring/{id}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPaymentsServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payments/{id}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payments/recurring/{id}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payments\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"payments\": [{\n                            \"id\": \"8a9483495f058d2f015f058d366b0045\",\n                            \"payeeID\": \"3\",\n                            \"payeeName\": \"Soccer Shots\",\n                            \"payeeNickName\": \"Kids Soccer\",\n                            \"payeeElectronic\": false,\n                            \"amount\": {\n                                \"amount\": \"10.99\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"paymentDate\": \"2019-04-21\",\n                            \"paymentAccount\": {\n                                \"accountNumber\": \"11111111\",\n                                \"routingNumber\": \"000000022\",\n                                \"accountType\": \"SAVINGS_ACCOUNT\",\n                                \"accountNickName\": \"Current Account\"\n                            },\n                            \"recurring\": false,\n                            \"automaticPayment\": false,\n                            \"status\": \"PENDING\",\n                            \"fee\": {\n                                \"amount\": \"9.99\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"ebillID\": \"20141219140239655590\"\n                        }, {\n                            \"id\": \"8a9483495f058d2f015f058d366a003c\",\n                            \"payeeID\": \"4\",\n                            \"payeeName\": \"Gas Bill\",\n                            \"payeeAccountNumber\": \"100000001\",\n                            \"payeeElectronic\": true,\n                            \"amount\": {\n                                \"amount\": \"100.99\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"paymentDate\": \"2019-02-22\",\n                            \"paymentAccount\": {\n                                \"id\": \"1\",\n                                \"accountNumber\": \"22222222\",\n                                \"routingNumber\": \"000000033\",\n                                \"accountType\": \"CHECKING_ACCOUNT\"\n                            },\n                            \"recurring\": true,\n                            \"automaticPayment\": false,\n                            \"frequency\": \"MONTHLY\",\n                            \"numberOfInstances\": 2,\n                            \"paymentScheduledAlert\": true,\n                            \"paymentSentAlert\": true,\n                            \"modelExpirationAlert\": true,\n                            \"status\": \"FAILED\"\n                        }, {\n                            \"id\": \"8a9483a96dd476f1016dd476f7e8001c\",\n                            \"payeeID\": \"2\",\n                            \"payeeName\": \"The Republic\",\n                            \"payeeAccountNumber\": \"12345O\",\n                            \"payeeElectronic\": true,\n                            \"amount\": {\n                                \"amount\": \"200.99\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"paymentDate\": \"2018-11-23\",\n                            \"paymentMemo\": \"Order #66\",\n                            \"paymentAccount\": {\n                                \"accountNumber\": \"100001001\",\n                                \"accountNickName\": \"Joint Account\",\n                                \"accountType\": \"CHECKING_ACCOUNT\",\n                                \"routingNumber\": \"110001001\"\n                            },\n                            \"recurring\": false,\n                            \"automaticPayment\": true,\n                            \"paymentScheduledAlert\": true,\n                            \"paymentSentAlert\": true,\n                            \"modelExpirationAlert\": true,\n                            \"status\": \"PROCESSED\"\n                        }],\n                    \"totalCount\": 3\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payments/{id}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"payment\": {\n                        \"id\": \"8a9483495f058d2f015f058d366a003c\",\n                        \"payeeID\": \"0002\",\n                        \"payeeName\": \"Citibank\",\n                        \"payeeAccountNumber\": \"100000001\",\n                        \"payeeElectronic\": false,\n                        \"amount\": {\n                            \"amount\": \"100.99\",\n                            \"currencyCode\": \"USD\"\n                        },\n                        \"paymentDate\": \"2019-02-22\",\n                        \"paymentAccount\": {\n                            \"id\": \"1\",\n                            \"accountNumber\": \"000000001\",\n                            \"routingNumber\": \"000000011\",\n                            \"accountType\": \"CHECKING_ACCOUNT\"\n                        },\n                        \"recurring\": false,\n                        \"automaticPayment\": false,\n                        \"status\": \"PENDING\",\n                        \"fee\": {\n                            \"amount\": \"9.99\",\n                            \"currencyCode\": \"USD\"\n                        },\n                        \"ebillID\": \"20141219140239655590\"\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payments/recurring/{id}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"payment\": {\n                        \"id\": \"8a9483495f058d2f015f058d366a003c\",\n                        \"payeeID\": \"0005\",\n                        \"payeeName\": \"Citibank\",\n                        \"payeeAccountNumber\": \"100000001\",\n                        \"payeeElectronic\": true,\n                        \"amount\": {\n                            \"amount\": \"100.99\",\n                            \"currencyCode\": \"USD\"\n                        },\n                        \"paymentDate\": \"2019-02-22\",\n                        \"paymentAccount\": {\n                            \"id\": \"1\",\n                            \"accountNumber\": \"000000001\",\n                            \"routingNumber\": \"000000011\",\n                            \"accountType\": \"CHECKING_ACCOUNT\"\n                        },\n                        \"paymentMemo\": \"Here is some money\",\n                        \"recurring\": true,\n                        \"frequency\": \"MONTHLY\",\n                        \"numberOfInstances\": 2,\n                        \"paymentScheduledAlert\": true,\n                        \"paymentSentAlert\": true,\n                        \"modelExpirationAlert\": true,\n                        \"status\": \"PENDING\"\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payments\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"payments\": [{\n                            \"payeeID\": \"payee1\",\n                            \"paymentID\": \"payment1\",\n                            \"errors\": []\n                        }, {\n                            \"payeeID\": \"payee2\",\n                            \"paymentID\": \"payment2\",\n                            \"errors\": []\n                        }, {\n                            \"payeeID\": \"payee3\",\n                            \"errors\": [{\n                                    \"message\": \"Invalid next payment date\",\n                                    \"key\": \"billpay.api.invalidNextPaymentDate\"\n                                }, {\n                                    \"message\": \"Payment already exists\",\n                                    \"key\": \"billpay.api.paymentAlreadyExists\"\n                                }]\n                        }, {\n                            \"payeeID\": \"payee4\",\n                            \"paymentID\": \"payment4\",\n                            \"errors\": []\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [],\n                    \"payments\": [{\n                            \"payeeID\": \"1\",\n                            \"errors\": [{\n                                    \"message\": \"The payee is invalid\",\n                                    \"key\": \"billpay.api.invalidPayee\"\n                                }]\n                        }, {\n                            \"payeeID\": \"2\",\n                            \"errors\": [{\n                                    \"message\": \"The payee is invalid\",\n                                    \"key\": \"billpay.api.invalidPayee\"\n                                }]\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payments/recurring\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payments/{id}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payments/recurring/{id}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d66161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nclass BillPayPayverisService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new BillpayConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    deleteBillPayPayverisEbillsEnrolment(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _payeeID = requestParameters[\"payeeID\"];\n        if (_payeeID === null || _payeeID === undefined) {\n            throw new Error('Required parameter payeeID was null or undefined when calling deleteBillPayPayverisEbillsEnrolment.');\n        }\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_payeeID !== undefined && _payeeID !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _payeeID, 'payeeID');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/bill-pay/payveris/ebills/enrolment`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deleteBillPayPayverisEbillsEnrolmentUrl(requestParameters) {\n        const _payeeID = requestParameters[\"payeeID\"];\n        if (_payeeID === null || _payeeID === undefined) {\n            throw new Error('Required parameter payeeID was null or undefined when calling deleteBillPayPayverisEbillsEnrolment.');\n        }\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_payeeID !== undefined && _payeeID !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _payeeID, 'payeeID');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payveris/ebills/enrolment${queryString ? `?${queryString}` : ''}`;\n    }\n    postBillPayPayverisEbillsEnrolment(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _billPayPayverisEbillsEnrolmentPostRequestBody = requestParameters[\"billPayPayverisEbillsEnrolmentPostRequestBody\"];\n        if (_billPayPayverisEbillsEnrolmentPostRequestBody === null || _billPayPayverisEbillsEnrolmentPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayPayverisEbillsEnrolmentPostRequestBody was null or undefined when calling postBillPayPayverisEbillsEnrolment.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/bill-pay/payveris/ebills/enrolment`, _billPayPayverisEbillsEnrolmentPostRequestBody, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postBillPayPayverisEbillsEnrolmentUrl(requestParameters) {\n        const _billPayPayverisEbillsEnrolmentPostRequestBody = requestParameters[\"billPayPayverisEbillsEnrolmentPostRequestBody\"];\n        if (_billPayPayverisEbillsEnrolmentPostRequestBody === null || _billPayPayverisEbillsEnrolmentPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayPayverisEbillsEnrolmentPostRequestBody was null or undefined when calling postBillPayPayverisEbillsEnrolment.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payveris/ebills/enrolment`;\n    }\n    postBillPayPayverisResolveEbillErrors(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _billPayPayverisResolveEbillErrorsPostRequestBody = requestParameters[\"billPayPayverisResolveEbillErrorsPostRequestBody\"];\n        if (_billPayPayverisResolveEbillErrorsPostRequestBody === null || _billPayPayverisResolveEbillErrorsPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayPayverisResolveEbillErrorsPostRequestBody was null or undefined when calling postBillPayPayverisResolveEbillErrors.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/bill-pay/payveris/ebills/resolve-errors`, _billPayPayverisResolveEbillErrorsPostRequestBody, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postBillPayPayverisResolveEbillErrorsUrl(requestParameters) {\n        const _billPayPayverisResolveEbillErrorsPostRequestBody = requestParameters[\"billPayPayverisResolveEbillErrorsPostRequestBody\"];\n        if (_billPayPayverisResolveEbillErrorsPostRequestBody === null || _billPayPayverisResolveEbillErrorsPostRequestBody === undefined) {\n            throw new Error('Required parameter billPayPayverisResolveEbillErrorsPostRequestBody was null or undefined when calling postBillPayPayverisResolveEbillErrors.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payveris/ebills/resolve-errors`;\n    }\n}\nBillPayPayverisService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayPayverisService, deps: [{ token: i1.HttpClient }, { token: BILLPAY_BASE_PATH, optional: true }, { token: BillpayConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nBillPayPayverisService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayPayverisService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPayPayverisService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [BILLPAY_BASE_PATH]\n                }] }, { type: BillpayConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst BillPayPayverisServiceDeleteBillPayPayverisEbillsEnrolmentMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payveris/ebills/enrolment\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPayverisServicePostBillPayPayverisEbillsEnrolmentMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payveris/ebills/enrolment\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"payeeID\": \"9993\",\n                    \"billers\": [],\n                    \"accounts\": [],\n                    \"callBackRequired\": false\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPayverisServicePostBillPayPayverisResolveEbillErrorsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payveris/ebills/resolve-errors\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"payeeID\": \"9993\",\n                    \"billers\": [],\n                    \"accounts\": [],\n                    \"callBackRequired\": false\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPayPayverisServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payveris/ebills/enrolment\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payveris/ebills/enrolment\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"payeeID\": \"9993\",\n                    \"billers\": [],\n                    \"accounts\": [],\n                    \"callBackRequired\": false\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payveris/ebills/resolve-errors\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"payeeID\": \"9993\",\n                    \"billers\": [],\n                    \"accounts\": [],\n                    \"callBackRequired\": false\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nclass BillPaySearchService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new BillpayConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    getBillPaySearch(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _name = requestParameters[\"name\"];\n        if (_name === null || _name === undefined) {\n            throw new Error('Required parameter name was null or undefined when calling getBillPaySearch.');\n        }\n        const _zipCode = requestParameters[\"zipCode\"];\n        const _accountNumber = requestParameters[\"accountNumber\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_name !== undefined && _name !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _name, 'name');\n        }\n        if (_zipCode !== undefined && _zipCode !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _zipCode, 'zipCode');\n        }\n        if (_accountNumber !== undefined && _accountNumber !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _accountNumber, 'accountNumber');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/bill-pay/payees-search`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getBillPaySearchUrl(requestParameters) {\n        const _name = requestParameters[\"name\"];\n        if (_name === null || _name === undefined) {\n            throw new Error('Required parameter name was null or undefined when calling getBillPaySearch.');\n        }\n        const _zipCode = requestParameters[\"zipCode\"];\n        const _accountNumber = requestParameters[\"accountNumber\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_name !== undefined && _name !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _name, 'name');\n        }\n        if (_zipCode !== undefined && _zipCode !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _zipCode, 'zipCode');\n        }\n        if (_accountNumber !== undefined && _accountNumber !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _accountNumber, 'accountNumber');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/bill-pay/payees-search${queryString ? `?${queryString}` : ''}`;\n    }\n}\nBillPaySearchService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPaySearchService, deps: [{ token: i1.HttpClient }, { token: BILLPAY_BASE_PATH, optional: true }, { token: BillpayConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nBillPaySearchService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPaySearchService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BillPaySearchService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [BILLPAY_BASE_PATH]\n                }] }, { type: BillpayConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst BillPaySearchServiceGetBillPaySearchMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/bill-pay/payees-search\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"payees\": [{\n                            \"merchantID\": \"10000001\",\n                            \"name\": \"Backbase UK\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000002\",\n                            \"name\": \"Backbase AMS\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000003\",\n                            \"name\": \"Backbase US\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000004\",\n                            \"name\": \"adventescent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000005\",\n                            \"name\": \"animadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000006\",\n                            \"name\": \"circumadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000007\",\n                            \"name\": \"syadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000008\",\n                            \"name\": \"maladvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000009\",\n                            \"name\": \"sucadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000010\",\n                            \"name\": \"sysadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000011\",\n                            \"name\": \"adventacious\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000012\",\n                            \"name\": \"adventack\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000013\",\n                            \"name\": \"belladvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000014\",\n                            \"name\": \"coradvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000015\",\n                            \"name\": \"polyadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000016\",\n                            \"name\": \"adventous\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000017\",\n                            \"name\": \"adventant\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000018\",\n                            \"name\": \"vivadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000019\",\n                            \"name\": \"foradvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000020\",\n                            \"name\": \"inadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000021\",\n                            \"name\": \"bovadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000022\",\n                            \"name\": \"adventize\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000023\",\n                            \"name\": \"postadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000024\",\n                            \"name\": \"lunadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000025\",\n                            \"name\": \"amadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000026\",\n                            \"name\": \"symadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000027\",\n                            \"name\": \"advental\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000028\",\n                            \"name\": \"adventic\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000029\",\n                            \"name\": \"lupadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000030\",\n                            \"name\": \"sufadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000031\",\n                            \"name\": \"adventari\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000032\",\n                            \"name\": \"adventism\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000033\",\n                            \"name\": \"comadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000034\",\n                            \"name\": \"laudadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000035\",\n                            \"name\": \"adventose\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000036\",\n                            \"name\": \"enadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000037\",\n                            \"name\": \"misadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000038\",\n                            \"name\": \"portadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000039\",\n                            \"name\": \"adventor\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000040\",\n                            \"name\": \"venadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000041\",\n                            \"name\": \"tenadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000042\",\n                            \"name\": \"adventation\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000043\",\n                            \"name\": \"adventicious\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000044\",\n                            \"name\": \"adventill\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000045\",\n                            \"name\": \"fortadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000046\",\n                            \"name\": \"adventil\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000047\",\n                            \"name\": \"rhyadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000048\",\n                            \"name\": \"aceradvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000049\",\n                            \"name\": \"difadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000050\",\n                            \"name\": \"adventand\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000051\",\n                            \"name\": \"adventible\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000052\",\n                            \"name\": \"peradvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000053\",\n                            \"name\": \"interadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000054\",\n                            \"name\": \"podadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000055\",\n                            \"name\": \"adventend\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000056\",\n                            \"name\": \"maradvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000057\",\n                            \"name\": \"uberadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000058\",\n                            \"name\": \"movadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000059\",\n                            \"name\": \"adventile\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000060\",\n                            \"name\": \"exadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000061\",\n                            \"name\": \"frontadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000062\",\n                            \"name\": \"pedadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000063\",\n                            \"name\": \"outadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000064\",\n                            \"name\": \"myadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000065\",\n                            \"name\": \"finadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000066\",\n                            \"name\": \"adventac\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000067\",\n                            \"name\": \"adventaid\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000068\",\n                            \"name\": \"dominadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000069\",\n                            \"name\": \"transadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000070\",\n                            \"name\": \"suradvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000071\",\n                            \"name\": \"sumadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000072\",\n                            \"name\": \"adventive\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000073\",\n                            \"name\": \"feladvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000074\",\n                            \"name\": \"adventa\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000075\",\n                            \"name\": \"domadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000076\",\n                            \"name\": \"anadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000077\",\n                            \"name\": \"adventoid\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000078\",\n                            \"name\": \"hyperadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000079\",\n                            \"name\": \"adventore\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000080\",\n                            \"name\": \"adventate\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000081\",\n                            \"name\": \"adventosis\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000082\",\n                            \"name\": \"albadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000083\",\n                            \"name\": \"synadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000084\",\n                            \"name\": \"canadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000085\",\n                            \"name\": \"supadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000086\",\n                            \"name\": \"midadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000087\",\n                            \"name\": \"esadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000088\",\n                            \"name\": \"skyadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000089\",\n                            \"name\": \"susadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000090\",\n                            \"name\": \"archadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000091\",\n                            \"name\": \"locadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000092\",\n                            \"name\": \"insuladvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000093\",\n                            \"name\": \"sugadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000094\",\n                            \"name\": \"capadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000095\",\n                            \"name\": \"falcadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000096\",\n                            \"name\": \"monadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000097\",\n                            \"name\": \"syladvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000098\",\n                            \"name\": \"conadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000099\",\n                            \"name\": \"cisadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000100\",\n                            \"name\": \"kayadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000001\",\n                            \"name\": \"cedadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000002\",\n                            \"name\": \"veradvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000003\",\n                            \"name\": \"cervadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000004\",\n                            \"name\": \"audadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000005\",\n                            \"name\": \"coladvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000006\",\n                            \"name\": \"vertadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000007\",\n                            \"name\": \"adventashun\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000008\",\n                            \"name\": \"suradvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000009\",\n                            \"name\": \"subadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000010\",\n                            \"name\": \"superadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000011\",\n                            \"name\": \"doladvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000012\",\n                            \"name\": \"nonadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000013\",\n                            \"name\": \"garadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000014\",\n                            \"name\": \"adventalt\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000015\",\n                            \"name\": \"premadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000016\",\n                            \"name\": \"adventity\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000017\",\n                            \"name\": \"bonadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000018\",\n                            \"name\": \"adventise\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000019\",\n                            \"name\": \"genadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000019\",\n                            \"name\": \"adventist\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000020\",\n                            \"name\": \"adventable\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000021\",\n                            \"name\": \"auradvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000022\",\n                            \"name\": \"adventent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000023\",\n                            \"name\": \"disadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000024\",\n                            \"name\": \"panadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000025\",\n                            \"name\": \"adventer\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000026\",\n                            \"name\": \"calcadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000027\",\n                            \"name\": \"unadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000028\",\n                            \"name\": \"adventall\",\n                            \"zipRequired\": false\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BillPaySearchServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/bill-pay/payees-search\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"payees\": [{\n                            \"merchantID\": \"10000001\",\n                            \"name\": \"Backbase UK\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000002\",\n                            \"name\": \"Backbase AMS\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000003\",\n                            \"name\": \"Backbase US\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000004\",\n                            \"name\": \"adventescent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000005\",\n                            \"name\": \"animadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000006\",\n                            \"name\": \"circumadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000007\",\n                            \"name\": \"syadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000008\",\n                            \"name\": \"maladvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000009\",\n                            \"name\": \"sucadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000010\",\n                            \"name\": \"sysadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000011\",\n                            \"name\": \"adventacious\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000012\",\n                            \"name\": \"adventack\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000013\",\n                            \"name\": \"belladvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000014\",\n                            \"name\": \"coradvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000015\",\n                            \"name\": \"polyadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000016\",\n                            \"name\": \"adventous\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000017\",\n                            \"name\": \"adventant\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000018\",\n                            \"name\": \"vivadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000019\",\n                            \"name\": \"foradvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000020\",\n                            \"name\": \"inadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000021\",\n                            \"name\": \"bovadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000022\",\n                            \"name\": \"adventize\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000023\",\n                            \"name\": \"postadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000024\",\n                            \"name\": \"lunadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000025\",\n                            \"name\": \"amadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000026\",\n                            \"name\": \"symadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000027\",\n                            \"name\": \"advental\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000028\",\n                            \"name\": \"adventic\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000029\",\n                            \"name\": \"lupadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000030\",\n                            \"name\": \"sufadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000031\",\n                            \"name\": \"adventari\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000032\",\n                            \"name\": \"adventism\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000033\",\n                            \"name\": \"comadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000034\",\n                            \"name\": \"laudadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000035\",\n                            \"name\": \"adventose\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000036\",\n                            \"name\": \"enadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000037\",\n                            \"name\": \"misadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000038\",\n                            \"name\": \"portadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000039\",\n                            \"name\": \"adventor\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000040\",\n                            \"name\": \"venadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000041\",\n                            \"name\": \"tenadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000042\",\n                            \"name\": \"adventation\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000043\",\n                            \"name\": \"adventicious\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000044\",\n                            \"name\": \"adventill\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000045\",\n                            \"name\": \"fortadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000046\",\n                            \"name\": \"adventil\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000047\",\n                            \"name\": \"rhyadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000048\",\n                            \"name\": \"aceradvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000049\",\n                            \"name\": \"difadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000050\",\n                            \"name\": \"adventand\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000051\",\n                            \"name\": \"adventible\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000052\",\n                            \"name\": \"peradvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000053\",\n                            \"name\": \"interadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000054\",\n                            \"name\": \"podadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000055\",\n                            \"name\": \"adventend\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000056\",\n                            \"name\": \"maradvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000057\",\n                            \"name\": \"uberadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000058\",\n                            \"name\": \"movadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000059\",\n                            \"name\": \"adventile\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000060\",\n                            \"name\": \"exadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000061\",\n                            \"name\": \"frontadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000062\",\n                            \"name\": \"pedadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000063\",\n                            \"name\": \"outadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000064\",\n                            \"name\": \"myadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000065\",\n                            \"name\": \"finadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000066\",\n                            \"name\": \"adventac\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000067\",\n                            \"name\": \"adventaid\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000068\",\n                            \"name\": \"dominadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000069\",\n                            \"name\": \"transadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000070\",\n                            \"name\": \"suradvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000071\",\n                            \"name\": \"sumadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000072\",\n                            \"name\": \"adventive\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000073\",\n                            \"name\": \"feladvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000074\",\n                            \"name\": \"adventa\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000075\",\n                            \"name\": \"domadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000076\",\n                            \"name\": \"anadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000077\",\n                            \"name\": \"adventoid\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000078\",\n                            \"name\": \"hyperadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000079\",\n                            \"name\": \"adventore\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000080\",\n                            \"name\": \"adventate\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000081\",\n                            \"name\": \"adventosis\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000082\",\n                            \"name\": \"albadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000083\",\n                            \"name\": \"synadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000084\",\n                            \"name\": \"canadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000085\",\n                            \"name\": \"supadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000086\",\n                            \"name\": \"midadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000087\",\n                            \"name\": \"esadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000088\",\n                            \"name\": \"skyadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000089\",\n                            \"name\": \"susadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000090\",\n                            \"name\": \"archadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000091\",\n                            \"name\": \"locadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000092\",\n                            \"name\": \"insuladvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000093\",\n                            \"name\": \"sugadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000094\",\n                            \"name\": \"capadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000095\",\n                            \"name\": \"falcadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000096\",\n                            \"name\": \"monadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000097\",\n                            \"name\": \"syladvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"10000098\",\n                            \"name\": \"conadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000099\",\n                            \"name\": \"cisadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"10000100\",\n                            \"name\": \"kayadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000001\",\n                            \"name\": \"cedadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000002\",\n                            \"name\": \"veradvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000003\",\n                            \"name\": \"cervadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000004\",\n                            \"name\": \"audadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000005\",\n                            \"name\": \"coladvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000006\",\n                            \"name\": \"vertadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000007\",\n                            \"name\": \"adventashun\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000008\",\n                            \"name\": \"suradvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000009\",\n                            \"name\": \"subadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000010\",\n                            \"name\": \"superadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000011\",\n                            \"name\": \"doladvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000012\",\n                            \"name\": \"nonadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000013\",\n                            \"name\": \"garadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000014\",\n                            \"name\": \"adventalt\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000015\",\n                            \"name\": \"premadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000016\",\n                            \"name\": \"adventity\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000017\",\n                            \"name\": \"bonadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000018\",\n                            \"name\": \"adventise\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000019\",\n                            \"name\": \"genadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000019\",\n                            \"name\": \"adventist\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000020\",\n                            \"name\": \"adventable\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000021\",\n                            \"name\": \"auradvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000022\",\n                            \"name\": \"adventent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000023\",\n                            \"name\": \"disadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000024\",\n                            \"name\": \"panadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000025\",\n                            \"name\": \"adventer\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000026\",\n                            \"name\": \"calcadvent\",\n                            \"zipRequired\": true\n                        }, {\n                            \"merchantID\": \"20000027\",\n                            \"name\": \"unadvent\",\n                            \"zipRequired\": false\n                        }, {\n                            \"merchantID\": \"20000028\",\n                            \"name\": \"adventall\",\n                            \"zipRequired\": false\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n            {\n                status: 501,\n                body: {\n                    \"message\": \"Operation not supported\"\n                }\n            },\n            {\n                status: 502,\n                body: {\n                    \"message\": \"Bad Gateway\",\n                    \"errors\": [{\n                            \"message\": \"Internal error calling API provider\",\n                            \"key\": \"common.api.providerInternalError\"\n                        }]\n                }\n            },\n            {\n                status: 504,\n                body: {\n                    \"message\": \"Gateway Timeout\",\n                    \"errors\": [{\n                            \"message\": \"API provider unavailable.\",\n                            \"key\": \"common.api.providerUnavailable\"\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nexport { BILLPAY_BASE_PATH, BillPayAccountsService, BillPayAccountsServiceGetBillPayAccountsMocksProvider, BillPayAccountsServiceMocksProvider, BillPayAutopayService, BillPayAutopayServiceDeleteBillPayAutopayMocksProvider, BillPayAutopayServiceMocksProvider, BillPayAutopayServicePutBillPayAutopayMocksProvider, BillPayEbillsService, BillPayEbillsServiceDeleteBillPayEbillsMocksProvider, BillPayEbillsServiceGetBillPayEbillStatementsMocksProvider, BillPayEbillsServiceGetBillPayEbillsMocksProvider, BillPayEbillsServiceMocksProvider, BillPayEbillsServicePutEbillByIdMocksProvider, BillPayEnrolmentService, BillPayEnrolmentServiceGetBillPayEnrolmentMocksProvider, BillPayEnrolmentServiceMocksProvider, BillPayEnrolmentServicePostBillPayEnrolmentMocksProvider, BillPayPayeesService, BillPayPayeesServiceDeleteElectronicPayeeByIdMocksProvider, BillPayPayeesServiceDeletePayeeByIdMocksProvider, BillPayPayeesServiceGetElectronicPayeeByIdMocksProvider, BillPayPayeesServiceGetPayeeByIdMocksProvider, BillPayPayeesServiceMocksProvider, BillPayPayeesServicePostBillPayElectronicPayeesMocksProvider, BillPayPayeesServicePostBillPayPayeesMocksProvider, BillPayPayeesServicePutElectronicPayeeByIdMocksProvider, BillPayPayeesServicePutPayeeByIdMocksProvider, BillPayPayeesSummaryService, BillPayPayeesSummaryServiceGetBillPayPayeesSummaryMocksProvider, BillPayPayeesSummaryServiceMocksProvider, BillPayPaymentsService, BillPayPaymentsServiceDeletePaymentByIdMocksProvider, BillPayPaymentsServiceDeleteRecurringPaymentByIdMocksProvider, BillPayPaymentsServiceGetBillPayPaymentsMocksProvider, BillPayPaymentsServiceGetPaymentByIdMocksProvider, BillPayPaymentsServiceGetRecurringPaymentByIdMocksProvider, BillPayPaymentsServiceMocksProvider, BillPayPaymentsServicePostBillPayPaymentsMocksProvider, BillPayPaymentsServicePostBillPayRecurringPaymentsMocksProvider, BillPayPaymentsServicePutPaymentByIdMocksProvider, BillPayPaymentsServicePutRecurringPaymentByIdMocksProvider, BillPayPayverisService, BillPayPayverisServiceDeleteBillPayPayverisEbillsEnrolmentMocksProvider, BillPayPayverisServiceMocksProvider, BillPayPayverisServicePostBillPayPayverisEbillsEnrolmentMocksProvider, BillPayPayverisServicePostBillPayPayverisResolveEbillErrorsMocksProvider, BillPaySearchService, BillPaySearchServiceGetBillPaySearchMocksProvider, BillPaySearchServiceMocksProvider, BillpayApiModule, BillpayConfiguration, COLLECTION_FORMATS, CONFIG_TOKEN };\n"]},"metadata":{},"sourceType":"module"}