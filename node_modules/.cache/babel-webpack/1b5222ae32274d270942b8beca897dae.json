{"ast":null,"code":"import * as i1$2 from '@angular/forms';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i2$1 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, Directive, EventEmitter, Component, ChangeDetectionStrategy, Input, Output, ViewChild, InjectionToken, PLATFORM_ID, Inject, ViewChildren, NgModule } from '@angular/core';\nimport { __rest, __decorate, __metadata } from 'tslib';\nimport * as i1 from '@backbase/foundation-ang/core';\nimport { BbTemplate, RouterService, RoutableWidget, BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport * as i2$2 from '@angular/router';\nimport { NavigationEnd, RouterModule } from '@angular/router';\nimport { Subject, BehaviorSubject, ReplaySubject, merge, combineLatest, of, Subscription } from 'rxjs';\nimport { map, mapTo, scan, switchMap, shareReplay, distinctUntilChanged, catchError, withLatestFrom, mergeMap, take, tap, startWith, takeUntil, filter, debounceTime } from 'rxjs/operators';\nimport * as i1$1 from '@backbase/data-ang/contact-manager';\nimport * as i8 from '@backbase/contact-common-ang';\nimport { LoadMoreMethod, ContactActions, toBoolean, toInteger, BB_CONTACT_IBAN_COUNTRIES_LIST, IbanMask, IbanValidatorModule, NoWhiteSpaceModule, ConfirmActionDialogModule, EmailDomainModule } from '@backbase/contact-common-ang';\nimport * as i4 from '@backbase/ui-ang/notification';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\nimport * as i2 from '@backbase/ui-ang/header';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport * as i3 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i6 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport * as i8$1 from '@backbase/ui-ang/iban-pipe';\nimport { BbIbanPipeModule } from '@backbase/ui-ang/iban-pipe';\nimport * as i7 from '@backbase/ui-ang/loading-indicator';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport * as i4$1 from '@backbase/ui-ang/input-text';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport * as i5 from '@backbase/ui-ang/input-validation-message';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport * as i6$1 from '@backbase/ui-ang/input-email';\nimport { InputEmailModule } from '@backbase/ui-ang/input-email';\nimport * as i6$2 from '@backbase/ui-ang/pagination';\nimport { PaginatorModule } from '@backbase/ui-ang/pagination';\nimport * as i7$1 from '@backbase/ui-ang/load-button';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport * as i9 from '@backbase/ui-ang/search-box';\nimport { SearchBoxModule } from '@backbase/ui-ang/search-box';\nimport * as i10 from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDropdownModule, NgbTypeaheadModule } from '@ng-bootstrap/ng-bootstrap';\nimport * as i12 from '@backbase/ui-ang/empty-state';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport * as i13 from '@backbase/ui-ang/common-error-state';\nimport { ErrorCommonStateModule } from '@backbase/ui-ang/common-error-state';\nimport { AvatarModule } from '@backbase/ui-ang/avatar';\nimport { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';\nimport { EllipsisModule } from '@backbase/ui-ang/ellipsis';\n\nfunction ContactsDetailComponent_ng_template_1_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelementStart(1, \"span\", 15);\n    i0.ɵɵelementStart(2, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function ContactsDetailComponent_ng_template_1_div_8_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const hostRef_r2 = i0.ɵɵnextContext().$implicit;\n      return hostRef_r2.edit(hostRef_r2.item.id);\n    });\n    i0.ɵɵi18nStart(3, 17);\n    i0.ɵɵelement(4, \"bb-icon-ui\", 18);\n    i0.ɵɵi18nEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 19);\n    i0.ɵɵelementStart(6, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function ContactsDetailComponent_ng_template_1_div_8_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const hostRef_r2 = i0.ɵɵnextContext().$implicit;\n      return hostRef_r2.openDeleteModal();\n    });\n    i0.ɵɵi18nStart(7, 21);\n    i0.ɵɵelement(8, \"bb-icon-ui\", 22);\n    i0.ɵɵi18nEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsDetailComponent_ng_template_1_div_10_ng_container_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"bbIban\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const account_r14 = i0.ɵɵnextContext().ngIf;\n    const hostRef_r2 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, account_r14[hostRef_r2.type]), \" \");\n  }\n}\n\nfunction ContactsDetailComponent_ng_template_1_div_10_ng_container_6_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const account_r14 = i0.ɵɵnextContext().ngIf;\n    const hostRef_r2 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵtextInterpolate1(\"\", account_r14[hostRef_r2.type], \" \");\n  }\n}\n\nfunction ContactsDetailComponent_ng_template_1_div_10_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ContactsDetailComponent_ng_template_1_div_10_ng_container_6_ng_container_1_Template, 3, 3, \"ng-container\", 29);\n    i0.ɵɵtemplate(2, ContactsDetailComponent_ng_template_1_div_10_ng_container_6_ng_template_2_Template, 1, 1, \"ng-template\", null, 30, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r16 = i0.ɵɵreference(3);\n\n    const hostRef_r2 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", hostRef_r2.type === \"IBAN\")(\"ngIfElse\", _r16);\n  }\n}\n\nfunction ContactsDetailComponent_ng_template_1_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelementStart(1, \"span\", 24, 9);\n    i0.ɵɵi18n(3, 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"bb-header-ui\", 26);\n    i0.ɵɵelementStart(5, \"div\", 27);\n    i0.ɵɵtemplate(6, ContactsDetailComponent_ng_template_1_div_10_ng_container_6_Template, 4, 2, \"ng-container\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r12 = i0.ɵɵreference(2);\n\n    const hostRef_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵi18nExp(hostRef_r2.type);\n    i0.ɵɵi18nApply(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"heading\", _r12.textContent);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", hostRef_r2.item == null ? null : hostRef_r2.item.accounts[0]);\n  }\n}\n\nfunction ContactsDetailComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵelementStart(2, \"div\", 6);\n    i0.ɵɵelementStart(3, \"div\", 7);\n    i0.ɵɵelementStart(4, \"span\", 8, 9);\n    i0.ɵɵi18n(6, 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"bb-header-ui\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, ContactsDetailComponent_ng_template_1_div_8_Template, 9, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"hr\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, ContactsDetailComponent_ng_template_1_div_10_Template, 7, 3, \"div\", 13);\n  }\n\n  if (rf & 2) {\n    const hostRef_r2 = ctx.$implicit;\n\n    const _r4 = i0.ɵɵreference(5);\n\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"heading\", hostRef_r2.item.name || _r4.textContent);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", hostRef_r2.item.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", hostRef_r2.showDetail);\n  }\n}\n\nfunction ContactsDetailComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"bb-confirm-action-dialog\", 31);\n    i0.ɵɵlistener(\"confirm\", function ContactsDetailComponent_ng_template_3_Template_bb_confirm_action_dialog_confirm_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const hostRef_r24 = restoredCtx.$implicit;\n      return hostRef_r24.onConfirmDelete();\n    })(\"cancel\", function ContactsDetailComponent_ng_template_3_Template_bb_confirm_action_dialog_cancel_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const hostRef_r24 = restoredCtx.$implicit;\n      return hostRef_r24.onCancelDelete();\n    });\n    i0.ɵɵelementStart(1, \"span\", 32);\n    i0.ɵɵi18n(2, 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 34);\n    i0.ɵɵi18n(4, 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 36);\n    i0.ɵɵi18n(6, 37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 38);\n    i0.ɵɵi18n(8, 39);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const hostRef_r24 = ctx.$implicit;\n    i0.ɵɵproperty(\"isOpen\", hostRef_r24.isDeleteConfirmOpened)(\"confirmButtonColor\", \"danger\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵi18nExp(hostRef_r24.item.name);\n    i0.ɵɵi18nApply(4);\n  }\n}\n\nconst _c26 = [\"deleteSuccessNotificationTemplate\"];\nconst _c27 = [\"deleteErrorNotificationTemplate\"];\n\nfunction ContactsDetailContainerComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"bb-contacts-detail\", 4);\n    i0.ɵɵlistener(\"editContactsItem\", function ContactsDetailContainerComponent_ng_container_0_Template_bb_contacts_detail_editContactsItem_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.edit($event);\n    })(\"deleteContactsItem\", function ContactsDetailContainerComponent_ng_container_0_Template_bb_contacts_detail_deleteContactsItem_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.deleteContactsItem($event);\n    });\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r7 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"item\", item_r7)(\"type\", i0.ɵɵpipeBind1(2, 2, ctx_r0.contactTypeId$));\n  }\n}\n\nfunction ContactsDetailContainerComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelement(1, \"bb-loading-indicator-ui\", 6);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsDetailContainerComponent_ng_template_4_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵi18n(1, 10);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsDetailContainerComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 7);\n    i0.ɵɵtemplate(1, ContactsDetailContainerComponent_ng_template_4_ng_template_1_Template, 2, 0, \"ng-template\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"bbHostRef\", ctx_r4.hostRef);\n  }\n}\n\nfunction ContactsDetailContainerComponent_ng_template_6_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵi18n(1, 13);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsDetailContainerComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 11);\n    i0.ɵɵtemplate(1, ContactsDetailContainerComponent_ng_template_6_ng_template_1_Template, 2, 0, \"ng-template\", 12);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"bbHostRef\", ctx_r6.hostRef);\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_bb_loading_indicator_ui_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-loading-indicator-ui\");\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_form_2_ng_container_9_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_form_2_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ContactsFormComponent_ng_template_1_form_2_ng_container_9_ng_container_1_Template, 1, 0, \"ng-container\", 28);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r4 = i0.ɵɵreference(4);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r4);\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_form_2_ng_container_10_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_form_2_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ContactsFormComponent_ng_template_1_form_2_ng_container_10_ng_container_1_Template, 1, 0, \"ng-container\", 28);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r8 = i0.ɵɵreference(8);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r8);\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_form_2_ng_container_11_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_form_2_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ContactsFormComponent_ng_template_1_form_2_ng_container_11_ng_container_1_Template, 1, 0, \"ng-container\", 28);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r10 = i0.ɵɵreference(10);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r10);\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_form_2_ng_container_12_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_form_2_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ContactsFormComponent_ng_template_1_form_2_ng_container_12_ng_container_1_Template, 1, 0, \"ng-container\", 28);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r6 = i0.ɵɵreference(6);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r6);\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_form_2_ng_container_13_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_form_2_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ContactsFormComponent_ng_template_1_form_2_ng_container_13_ng_container_1_Template, 1, 0, \"ng-container\", 28);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r4 = i0.ɵɵreference(4);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r4);\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_form_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 10);\n    i0.ɵɵlistener(\"submit\", function ContactsFormComponent_ng_template_1_form_2_Template_form_submit_0_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const hostRef_r1 = i0.ɵɵnextContext().$implicit;\n      return hostRef_r1.saveItem();\n    });\n    i0.ɵɵelementStart(1, \"div\", 11);\n    i0.ɵɵelementStart(2, \"div\", 12);\n    i0.ɵɵelement(3, \"bb-input-text-ui\", 13);\n    i0.ɵɵelementStart(4, \"bb-input-validation-message-ui\", 14);\n    i0.ɵɵelementStart(5, \"span\", 15);\n    i0.ɵɵi18n(6, 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 17);\n    i0.ɵɵelementContainerStart(8, 18);\n    i0.ɵɵtemplate(9, ContactsFormComponent_ng_template_1_form_2_ng_container_9_Template, 2, 1, \"ng-container\", 19);\n    i0.ɵɵtemplate(10, ContactsFormComponent_ng_template_1_form_2_ng_container_10_Template, 2, 1, \"ng-container\", 19);\n    i0.ɵɵtemplate(11, ContactsFormComponent_ng_template_1_form_2_ng_container_11_Template, 2, 1, \"ng-container\", 19);\n    i0.ɵɵtemplate(12, ContactsFormComponent_ng_template_1_form_2_ng_container_12_Template, 2, 1, \"ng-container\", 19);\n    i0.ɵɵtemplate(13, ContactsFormComponent_ng_template_1_form_2_ng_container_13_Template, 2, 1, \"ng-container\", 20);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 21);\n    i0.ɵɵelementStart(15, \"button\", 22);\n    i0.ɵɵi18n(16, 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function ContactsFormComponent_ng_template_1_form_2_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const hostRef_r1 = i0.ɵɵnextContext().$implicit;\n      return hostRef_r1.back();\n    });\n    i0.ɵɵi18n(18, 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function ContactsFormComponent_ng_template_1_form_2_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const hostRef_r1 = i0.ɵɵnextContext().$implicit;\n      return hostRef_r1.cancel();\n    });\n    i0.ɵɵi18n(20, 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const hostRef_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"hidden\", hostRef_r1.disabledSubmit)(\"formGroup\", hostRef_r1.contactsForm);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControl\", hostRef_r1.contactsForm.controls.name)(\"maxLength\", 140)(\"required\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"showErrors\", (hostRef_r1.contactsForm.controls.name.errors == null ? null : hostRef_r1.contactsForm.controls.name.errors.required) && hostRef_r1.contactsForm.controls.name.touched);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngSwitch\", hostRef_r1.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", hostRef_r1.createAccountTypeRef.IBAN);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", hostRef_r1.createAccountTypeRef.EMAIL);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", hostRef_r1.createAccountTypeRef.PHONE);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", hostRef_r1.createAccountTypeRef.ACCOUNT);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", hostRef_r1.submitted && hostRef_r1.contactsForm.invalid || hostRef_r1.disabledSubmit);\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_ng_template_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c48 = function (a0, a1) {\n  return {\n    control: a0,\n    errorMessageAcctType: a1\n  };\n};\n\nfunction ContactsFormComponent_ng_template_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-input-text-ui\", 29);\n    i0.ɵɵtemplate(1, ContactsFormComponent_ng_template_1_ng_template_3_ng_container_1_Template, 1, 0, \"ng-container\", 30);\n    i0.ɵɵelementStart(2, \"bb-input-validation-message-ui\", 14);\n    i0.ɵɵelementContainerStart(3);\n    i0.ɵɵelementStart(4, \"span\", 31);\n    i0.ɵɵi18n(5, 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const hostRef_r1 = i0.ɵɵnextContext().$implicit;\n\n    const _r12 = i0.ɵɵreference(12);\n\n    i0.ɵɵproperty(\"formControl\", hostRef_r1.contactsForm.controls.IBAN)(\"maxLength\", hostRef_r1.ibanMask.length)(\"required\", true)(\"mask\", hostRef_r1.ibanMask)(\"maskValidator\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r12)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(8, _c48, hostRef_r1.contactsForm.controls.IBAN, hostRef_r1.type));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"showErrors\", hostRef_r1.contactsForm.controls.IBAN.touched && (hostRef_r1.contactsForm.controls.IBAN.errors == null ? null : hostRef_r1.contactsForm.controls.IBAN.errors.invalidIban));\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_ng_template_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-input-text-ui\", 33);\n    i0.ɵɵtemplate(1, ContactsFormComponent_ng_template_1_ng_template_5_ng_container_1_Template, 1, 0, \"ng-container\", 30);\n  }\n\n  if (rf & 2) {\n    const hostRef_r1 = i0.ɵɵnextContext().$implicit;\n\n    const _r12 = i0.ɵɵreference(12);\n\n    i0.ɵɵproperty(\"formControl\", hostRef_r1.contactsForm.controls.accountNumber)(\"maxLength\", 34)(\"required\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r12)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(5, _c48, hostRef_r1.contactsForm.controls.accountNumber, hostRef_r1.type));\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_ng_template_7_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 34, 35);\n    i0.ɵɵi18nStart(2, 36);\n    i0.ɵɵelement(3, \"small\", 37);\n    i0.ɵɵi18nEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"bb-input-email-ui\", 38);\n    i0.ɵɵtemplate(5, ContactsFormComponent_ng_template_1_ng_template_7_ng_container_5_Template, 1, 0, \"ng-container\", 30);\n    i0.ɵɵelementStart(6, \"bb-input-validation-message-ui\", 14);\n    i0.ɵɵelementContainerStart(7);\n    i0.ɵɵelementStart(8, \"span\", 39);\n    i0.ɵɵi18n(9, 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r36 = i0.ɵɵreference(1);\n\n    const hostRef_r1 = i0.ɵɵnextContext().$implicit;\n\n    const _r12 = i0.ɵɵreference(12);\n\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"aria-labelledby\", _r36.id)(\"formControl\", hostRef_r1.contactsForm.controls.email)(\"maxLength\", 255)(\"required\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r12)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(7, _c48, hostRef_r1.contactsForm.controls.email, hostRef_r1.type));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"showErrors\", hostRef_r1.contactsForm.controls.email.touched && (hostRef_r1.contactsForm.controls.email.errors == null ? null : hostRef_r1.contactsForm.controls.email.errors.email));\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_ng_template_9_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 41, 42);\n    i0.ɵɵi18nStart(2, 43);\n    i0.ɵɵelement(3, \"small\", 44);\n    i0.ɵɵi18nEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"bb-input-text-ui\", 45);\n    i0.ɵɵtemplate(5, ContactsFormComponent_ng_template_1_ng_template_9_ng_container_5_Template, 1, 0, \"ng-container\", 30);\n  }\n\n  if (rf & 2) {\n    const _r39 = i0.ɵɵreference(1);\n\n    const hostRef_r1 = i0.ɵɵnextContext().$implicit;\n\n    const _r12 = i0.ɵɵreference(12);\n\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", hostRef_r1.contactsForm.controls.phoneNumber)(\"maxLength\", 30)(\"required\", true)(\"aria-labelledby\", _r39.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r12)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(6, _c48, hostRef_r1.contactsForm.controls.phoneNumber && hostRef_r1.contactsForm.controls.phoneNumber, hostRef_r1.type));\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_ng_template_11_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 49);\n    i0.ɵɵi18n(1, 50);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_ng_template_11_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 49);\n    i0.ɵɵi18n(1, 51);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_ng_template_11_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 52);\n    i0.ɵɵi18n(1, 53);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_ng_template_11_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 54);\n    i0.ɵɵi18n(1, 55);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"bb-input-validation-message-ui\", 14);\n    i0.ɵɵelementContainerStart(1, 18);\n    i0.ɵɵtemplate(2, ContactsFormComponent_ng_template_1_ng_template_11_span_2_Template, 2, 0, \"span\", 46);\n    i0.ɵɵtemplate(3, ContactsFormComponent_ng_template_1_ng_template_11_span_3_Template, 2, 0, \"span\", 46);\n    i0.ɵɵtemplate(4, ContactsFormComponent_ng_template_1_ng_template_11_span_4_Template, 2, 0, \"span\", 47);\n    i0.ɵɵtemplate(5, ContactsFormComponent_ng_template_1_ng_template_11_span_5_Template, 2, 0, \"span\", 48);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const control_r42 = ctx.control;\n    const errorMessageAcctType_r43 = ctx.errorMessageAcctType;\n    const hostRef_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"showErrors\", (control_r42.errors == null ? null : control_r42.errors.required) && control_r42.touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", errorMessageAcctType_r43);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", hostRef_r1.createAccountTypeRef.ACCOUNT);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", hostRef_r1.createAccountTypeRef.IBAN);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", hostRef_r1.createAccountTypeRef.PHONE);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", hostRef_r1.createAccountTypeRef.EMAIL);\n  }\n}\n\nfunction ContactsFormComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r50 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"bb-contacts-detail\", 2);\n    i0.ɵɵlistener(\"deleteContactsItem\", function ContactsFormComponent_ng_template_1_Template_bb_contacts_detail_deleteContactsItem_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r50);\n      const hostRef_r1 = restoredCtx.$implicit;\n      return hostRef_r1.deleteItemEmit();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(1, ContactsFormComponent_ng_template_1_bb_loading_indicator_ui_1_Template, 1, 0, \"bb-loading-indicator-ui\", 3);\n    i0.ɵɵtemplate(2, ContactsFormComponent_ng_template_1_form_2_Template, 21, 12, \"form\", 4);\n    i0.ɵɵtemplate(3, ContactsFormComponent_ng_template_1_ng_template_3_Template, 6, 11, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(5, ContactsFormComponent_ng_template_1_ng_template_5_Template, 2, 8, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(7, ContactsFormComponent_ng_template_1_ng_template_7_Template, 10, 10, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(9, ContactsFormComponent_ng_template_1_ng_template_9_Template, 6, 9, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(11, ContactsFormComponent_ng_template_1_ng_template_11_Template, 6, 6, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    const hostRef_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"showDetail\", false)(\"item\", hostRef_r1.item)(\"type\", hostRef_r1.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", hostRef_r1.disabledSubmit);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", hostRef_r1.contactsForm);\n  }\n}\n\nconst _c65 = [\"notificationCreateSuccess\"];\nconst _c66 = [\"notificationCreateError\"];\nconst _c67 = [\"notificationEditSuccess\"];\nconst _c68 = [\"notificationEditError\"];\nconst _c69 = [\"discardChangesModalContent\"];\n\nfunction ContactsFormContainerComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"bb-contacts-form\", 8);\n    i0.ɵɵlistener(\"save\", function ContactsFormContainerComponent_ng_container_0_Template_bb_contacts_form_save_1_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.save($event);\n    })(\"cancelEdit\", function ContactsFormContainerComponent_ng_container_0_Template_bb_contacts_form_cancelEdit_1_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.cancelEdit($event);\n    })(\"backEvent\", function ContactsFormContainerComponent_ng_container_0_Template_bb_contacts_form_backEvent_1_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.back($event);\n    })(\"deleteContactsItem\", function ContactsFormContainerComponent_ng_container_0_Template_bb_contacts_form_deleteContactsItem_1_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.deleteContactsItem($event);\n    });\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r12 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"item\", item_r12)(\"type\", i0.ɵɵpipeBind1(2, 3, ctx_r0.itemType$))(\"disabledSubmit\", ctx_r0.isPendingRequest);\n  }\n}\n\nfunction ContactsFormContainerComponent_ng_template_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵi18n(1, 12);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsFormContainerComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 9);\n    i0.ɵɵtemplate(1, ContactsFormContainerComponent_ng_template_2_ng_template_1_Template, 2, 0, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"bbHostRef\", ctx_r2.hostRef);\n  }\n}\n\nfunction ContactsFormContainerComponent_ng_template_4_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵi18n(1, 16);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsFormContainerComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 13);\n    i0.ɵɵtemplate(1, ContactsFormContainerComponent_ng_template_4_ng_template_1_Template, 2, 0, \"ng-template\", 14);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"bbHostRef\", ctx_r4.hostRef);\n  }\n}\n\nfunction ContactsFormContainerComponent_ng_template_6_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵi18n(1, 19);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsFormContainerComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 17);\n    i0.ɵɵtemplate(1, ContactsFormContainerComponent_ng_template_6_ng_template_1_Template, 2, 0, \"ng-template\", 18);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"bbHostRef\", ctx_r6.hostRef);\n  }\n}\n\nfunction ContactsFormContainerComponent_ng_template_8_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵi18n(1, 22);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsFormContainerComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 20);\n    i0.ɵɵtemplate(1, ContactsFormContainerComponent_ng_template_8_ng_template_1_Template, 2, 0, \"ng-template\", 21);\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"bbHostRef\", ctx_r8.hostRef);\n  }\n}\n\nfunction ContactsFormContainerComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelement(1, \"bb-loading-indicator-ui\", 24);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsFormContainerComponent_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"bb-confirm-action-dialog\", 25);\n    i0.ɵɵlistener(\"confirm\", function ContactsFormContainerComponent_ng_template_13_Template_bb_confirm_action_dialog_confirm_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const hostRef_r22 = restoredCtx.$implicit;\n      return hostRef_r22.onConfirmDiscard();\n    })(\"cancel\", function ContactsFormContainerComponent_ng_template_13_Template_bb_confirm_action_dialog_cancel_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const hostRef_r22 = restoredCtx.$implicit;\n      return hostRef_r22.onCancelDiscard();\n    });\n    i0.ɵɵelementStart(1, \"span\", 26);\n    i0.ɵɵi18n(2, 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 28);\n    i0.ɵɵi18n(4, 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 30);\n    i0.ɵɵi18n(6, 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 32);\n    i0.ɵɵi18n(8, 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const hostRef_r22 = ctx.$implicit;\n    i0.ɵɵproperty(\"isOpen\", hostRef_r22.isDiscardConfirmOpened)(\"confirmButtonColor\", \"danger\");\n  }\n}\n\nfunction ContactSelectAccountTypeComponent_div_13_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c92 = function (a0) {\n  return {\n    listItem: a0\n  };\n};\n\nfunction ContactSelectAccountTypeComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ContactSelectAccountTypeComponent_div_13_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const listItem_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵnextContext();\n\n    const _r2 = i0.ɵɵreference(15);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r2)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c92, listItem_r4));\n  }\n}\n\nfunction ContactSelectAccountTypeComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ContactSelectAccountTypeComponent_div_13_div_1_Template, 2, 4, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const listItem_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", listItem_r4.enableItem);\n  }\n}\n\nfunction ContactSelectAccountTypeComponent_ng_template_14_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"bb-icon-ui\", 20);\n    i0.ɵɵelementStart(2, \"div\", 21);\n    i0.ɵɵelementContainerStart(3);\n    i0.ɵɵi18n(4, 22);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 23);\n    i0.ɵɵelement(6, \"bb-icon-ui\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ContactSelectAccountTypeComponent_ng_template_14_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"bb-icon-ui\", 20);\n    i0.ɵɵelementStart(2, \"div\", 25);\n    i0.ɵɵelementContainerStart(3);\n    i0.ɵɵi18n(4, 26);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 23);\n    i0.ɵɵelement(6, \"bb-icon-ui\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ContactSelectAccountTypeComponent_ng_template_14_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"bb-icon-ui\", 27);\n    i0.ɵɵelementStart(2, \"div\", 28);\n    i0.ɵɵelementContainerStart(3);\n    i0.ɵɵi18n(4, 29);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 23);\n    i0.ɵɵelement(6, \"bb-icon-ui\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ContactSelectAccountTypeComponent_ng_template_14_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"bb-icon-ui\", 30);\n    i0.ɵɵelementStart(2, \"div\", 31);\n    i0.ɵɵelementContainerStart(3);\n    i0.ɵɵi18n(4, 32);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 23);\n    i0.ɵɵelement(6, \"bb-icon-ui\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ContactSelectAccountTypeComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelementStart(1, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function ContactSelectAccountTypeComponent_ng_template_14_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const listItem_r8 = restoredCtx.listItem;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.updateCreateContactType(listItem_r8);\n    });\n    i0.ɵɵelementContainerStart(2, 18);\n    i0.ɵɵtemplate(3, ContactSelectAccountTypeComponent_ng_template_14_ng_container_3_Template, 7, 0, \"ng-container\", 19);\n    i0.ɵɵtemplate(4, ContactSelectAccountTypeComponent_ng_template_14_ng_container_4_Template, 7, 0, \"ng-container\", 19);\n    i0.ɵɵtemplate(5, ContactSelectAccountTypeComponent_ng_template_14_ng_container_5_Template, 7, 0, \"ng-container\", 19);\n    i0.ɵɵtemplate(6, ContactSelectAccountTypeComponent_ng_template_14_ng_container_6_Template, 7, 0, \"ng-container\", 19);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const listItem_r8 = ctx.listItem;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngSwitch\", listItem_r8.listItem);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r3.createAccountTypeRef.IBAN);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r3.createAccountTypeRef.ACCOUNT);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r3.createAccountTypeRef.EMAIL);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r3.createAccountTypeRef.PHONE);\n  }\n}\n\nfunction ContactsListItemComponent_div_8_ng_container_2_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ContactsListItemComponent_div_8_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 2);\n    i0.ɵɵelementStart(2, \"span\", 11);\n    i0.ɵɵi18n(3, 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" :\\xA0 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ContactsListItemComponent_div_8_ng_container_2_ng_container_5_Template, 1, 0, \"ng-container\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r2 = i0.ɵɵreference(11);\n\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r2);\n  }\n}\n\nfunction ContactsListItemComponent_div_8_ng_container_3_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ContactsListItemComponent_div_8_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 2);\n    i0.ɵɵelementStart(2, \"span\", 14);\n    i0.ɵɵi18n(3, 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" :\\xA0 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ContactsListItemComponent_div_8_ng_container_3_ng_container_5_Template, 1, 0, \"ng-container\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r4 = i0.ɵɵreference(13);\n\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r4);\n  }\n}\n\nfunction ContactsListItemComponent_div_8_ng_container_4_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ContactsListItemComponent_div_8_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 2);\n    i0.ɵɵelementStart(2, \"span\", 16);\n    i0.ɵɵi18n(3, 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" :\\xA0 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ContactsListItemComponent_div_8_ng_container_4_ng_container_5_Template, 1, 0, \"ng-container\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r4 = i0.ɵɵreference(13);\n\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r4);\n  }\n}\n\nfunction ContactsListItemComponent_div_8_ng_container_5_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ContactsListItemComponent_div_8_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 2);\n    i0.ɵɵelementStart(2, \"span\", 11);\n    i0.ɵɵi18n(3, 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" :\\xA0 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ContactsListItemComponent_div_8_ng_container_5_ng_container_5_Template, 1, 0, \"ng-container\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r2 = i0.ɵɵreference(11);\n\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r2);\n  }\n}\n\nfunction ContactsListItemComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementContainerStart(1, 9);\n    i0.ɵɵtemplate(2, ContactsListItemComponent_div_8_ng_container_2_Template, 6, 1, \"ng-container\", 10);\n    i0.ɵɵtemplate(3, ContactsListItemComponent_div_8_ng_container_3_Template, 6, 1, \"ng-container\", 10);\n    i0.ɵɵtemplate(4, ContactsListItemComponent_div_8_ng_container_4_Template, 6, 1, \"ng-container\", 10);\n    i0.ɵɵtemplate(5, ContactsListItemComponent_div_8_ng_container_5_Template, 6, 1, \"ng-container\", 10);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r0.selectedAccountType);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.createAccountType.IBAN);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.createAccountType.EMAIL);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.createAccountType.PHONE);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.createAccountType.ACCOUNT);\n  }\n}\n\nfunction ContactsListItemComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"span\", 19);\n    i0.ɵɵi18n(2, 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 2);\n    i0.ɵɵtext(4, \":\\xA0\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 21);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.contactItem.alias, \" \");\n  }\n}\n\nfunction ContactsListItemComponent_ng_template_10_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"bbIban\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const account_r15 = ctx.ngIf;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, account_r15[ctx_r14.selectedAccountType]), \" \");\n  }\n}\n\nfunction ContactsListItemComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ContactsListItemComponent_ng_template_10_span_0_Template, 3, 3, \"span\", 22);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.contactItem == null ? null : ctx_r3.contactItem.accounts[0]);\n  }\n}\n\nfunction ContactsListItemComponent_ng_template_12_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const account_r17 = ctx.ngIf;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", account_r17[ctx_r16.selectedAccountType], \" \");\n  }\n}\n\nfunction ContactsListItemComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ContactsListItemComponent_ng_template_12_span_0_Template, 2, 1, \"span\", 22);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.contactItem == null ? null : ctx_r5.contactItem.accounts[0]);\n  }\n}\n\nconst _c113 = [\"contactItem\"];\n\nfunction ContactsListWidgetComponent_div_0_ng_container_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.latestSeparator, \" \");\n  }\n}\n\nconst _c114 = function (a0, a1) {\n  return {\n    \"bb-grouped-list__item--is-active\": a0,\n    \"bb-grouped-list__item--no-separator\": a1\n  };\n};\n\nfunction ContactsListWidgetComponent_div_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ContactsListWidgetComponent_div_0_ng_container_2_li_1_Template, 2, 1, \"li\", 3);\n    i0.ɵɵelementStart(2, \"li\", 4, 5);\n    i0.ɵɵlistener(\"keydown.Home\", function ContactsListWidgetComponent_div_0_ng_container_2_Template_li_keydown_Home_2_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.onChangeFocusItemTo($event, 0);\n    })(\"keydown.ArrowUp\", function ContactsListWidgetComponent_div_0_ng_container_2_Template_li_keydown_ArrowUp_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const i_r3 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.onChangeFocusItemTo($event, i_r3 - 1);\n    })(\"keydown.ArrowDown\", function ContactsListWidgetComponent_div_0_ng_container_2_Template_li_keydown_ArrowDown_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const i_r3 = restoredCtx.index;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return ctx_r9.onChangeFocusItemTo($event, i_r3 + 1);\n    })(\"keydown.End\", function ContactsListWidgetComponent_div_0_ng_container_2_Template_li_keydown_End_2_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.onChangeFocusItemTo($event, ctx_r10.items.length);\n    })(\"click\", function ContactsListWidgetComponent_div_0_ng_container_2_Template_li_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const item_r2 = restoredCtx.$implicit;\n      const i_r3 = restoredCtx.index;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.onContactSelect(item_r2.id, i_r3);\n    })(\"keyup.Space\", function ContactsListWidgetComponent_div_0_ng_container_2_Template_li_keyup_Space_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const item_r2 = restoredCtx.$implicit;\n      const i_r3 = restoredCtx.index;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.onContactSelect(item_r2.id, i_r3);\n    })(\"keyup.Enter\", function ContactsListWidgetComponent_div_0_ng_container_2_Template_li_keyup_Enter_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const item_r2 = restoredCtx.$implicit;\n      const i_r3 = restoredCtx.index;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.onContactSelect(item_r2.id, i_r3);\n    });\n    i0.ɵɵelement(4, \"bb-contact-list-item\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isListHeading(item_r2, i_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"tabindex\", ctx_r1.getTabIndex(i_r3))(\"ngClass\", i0.ɵɵpureFunction2(7, _c114, ctx_r1.selectedItemId === item_r2.id, ctx_r1.hasNoSeparatorClass(i_r3)));\n    i0.ɵɵattribute(\"aria-pressed\", ctx_r1.selectedItemId === item_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"contactItem\", item_r2)(\"showAccountNumber\", true)(\"showAlias\", ctx_r1.showAlias);\n  }\n}\n\nfunction ContactsListWidgetComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"ul\", 1);\n    i0.ɵɵtemplate(2, ContactsListWidgetComponent_div_0_ng_container_2_Template, 5, 10, \"ng-container\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.items);\n  }\n}\n\nfunction ContactsListContainerComponent_ng_container_1_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵelementStart(1, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function ContactsListContainerComponent_ng_container_1_div_5_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.backToList();\n    });\n    i0.ɵɵelement(2, \"bb-icon-ui\", 23);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵi18n(4, 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c117 = function (a0) {\n  return {\n    \"d-none d-lg-block\": a0\n  };\n};\n\nfunction ContactsListContainerComponent_ng_container_1_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵelementContainer(1, 26);\n    i0.ɵɵelementStart(2, \"div\", 27);\n    i0.ɵɵpipe(3, \"async\");\n    i0.ɵɵprojection(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const items_r15 = i0.ɵɵnextContext().ngIf;\n    const ctx_r17 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"bbHostRef\", ctx_r17.hostRef)(\"bbTemplateContext\", items_r15);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c117, i0.ɵɵpipeBind1(3, 3, ctx_r17.isListView)));\n  }\n}\n\nfunction ContactsListContainerComponent_ng_container_1_ng_template_12_bb_pagination_ui_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"bb-pagination-ui\", 30);\n    i0.ɵɵlistener(\"pageChange\", function ContactsListContainerComponent_ng_container_1_ng_template_12_bb_pagination_ui_0_Template_bb_pagination_ui_pageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const hostRef_r22 = i0.ɵɵnextContext().$implicit;\n      return hostRef_r22.onPageChange($event);\n    });\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵpipe(3, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r29 = i0.ɵɵnextContext();\n    const hostRef_r22 = ctx_r29.$implicit;\n    const items_r23 = ctx_r29.context;\n    let tmp_0_0;\n    i0.ɵɵproperty(\"page\", (tmp_0_0 = i0.ɵɵpipeBind1(1, 6, hostRef_r22.pagination)) == null ? null : tmp_0_0.from)(\"boundaryLinks\", false)(\"directionLinks\", true)(\"totalItems\", items_r23 == null ? null : items_r23.count)(\"itemsPerPage\", i0.ɵɵpipeBind1(2, 8, hostRef_r22.pageSize))(\"maxNavPages\", i0.ɵɵpipeBind1(3, 10, hostRef_r22.maxNavPages));\n  }\n}\n\nfunction ContactsListContainerComponent_ng_container_1_ng_template_12_div_2_bb_load_button_ui_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"bb-load-button-ui\", 33);\n    i0.ɵɵlistener(\"click\", function ContactsListContainerComponent_ng_container_1_ng_template_12_div_2_bb_load_button_ui_1_Template_bb_load_button_ui_click_0_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const hostRef_r22 = i0.ɵɵnextContext(2).$implicit;\n      return hostRef_r22.loadMore();\n    });\n    i0.ɵɵelementContainerStart(1);\n    i0.ɵɵi18n(2, 34);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsListContainerComponent_ng_container_1_ng_template_12_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, ContactsListContainerComponent_ng_container_1_ng_template_12_div_2_bb_load_button_ui_1_Template, 3, 0, \"bb-load-button-ui\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const items_r23 = i0.ɵɵnextContext().context;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", items_r23.count && items_r23.count > items_r23.contacts.length);\n  }\n}\n\nfunction ContactsListContainerComponent_ng_container_1_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ContactsListContainerComponent_ng_container_1_ng_template_12_bb_pagination_ui_0_Template, 4, 12, \"bb-pagination-ui\", 28);\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵtemplate(2, ContactsListContainerComponent_ng_container_1_ng_template_12_div_2_Template, 2, 1, \"div\", 29);\n    i0.ɵɵpipe(3, \"async\");\n  }\n\n  if (rf & 2) {\n    const hostRef_r22 = ctx.$implicit;\n    const items_r23 = ctx.context;\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, hostRef_r22.paginationType) !== \"load-more\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 4, hostRef_r22.paginationType) === \"load-more\" && items_r23.contacts.length > 0);\n  }\n}\n\nfunction ContactsListContainerComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 12);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementStart(3, \"div\", 13);\n    i0.ɵɵelementContainer(4, 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ContactsListContainerComponent_ng_container_1_div_5_Template, 5, 0, \"div\", 15);\n    i0.ɵɵpipe(6, \"async\");\n    i0.ɵɵtemplate(7, ContactsListContainerComponent_ng_container_1_div_7_Template, 5, 7, \"div\", 16);\n    i0.ɵɵelementStart(8, \"div\", 17);\n    i0.ɵɵpipe(9, \"async\");\n    i0.ɵɵelementStart(10, \"div\", 18);\n    i0.ɵɵelementContainer(11, 19);\n    i0.ɵɵtemplate(12, ContactsListContainerComponent_ng_container_1_ng_template_12_Template, 4, 6, \"ng-template\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const items_r15 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n\n    const _r7 = i0.ɵɵreference(10);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c117, !i0.ɵɵpipeBind1(2, 9, ctx_r0.isListView)));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"bbHostRef\", ctx_r0.hostRef)(\"bbTemplateContext\", items_r15);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !i0.ɵɵpipeBind1(6, 11, ctx_r0.isListView));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", items_r15 && items_r15.contacts.length > 0 || ctx_r0.hostRef.firstContactEdit)(\"ngIfElse\", _r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c117, !i0.ɵɵpipeBind1(9, 13, ctx_r0.isListView)));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"bbHostRef\", ctx_r0.hostRef)(\"bbTemplateContext\", items_r15);\n  }\n}\n\nconst _c120 = function (a0, a1) {\n  return {\n    \"d-block\": a0,\n    \"d-lg-block d-none\": a1\n  };\n};\n\nfunction ContactsListContainerComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementStart(3, \"bb-contacts-list-widget\", 36);\n    i0.ɵɵlistener(\"selectedChange\", function ContactsListContainerComponent_ng_template_3_Template_bb_contacts_list_widget_selectedChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r38);\n      const hostRef_r35 = restoredCtx.$implicit;\n      return hostRef_r35.select($event);\n    });\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const hostRef_r35 = ctx.$implicit;\n    const items_r36 = ctx.context;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(10, _c120, i0.ɵɵpipeBind1(1, 4, hostRef_r35.isListView), !i0.ɵɵpipeBind1(2, 6, hostRef_r35.isListView)));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"items\", items_r36.contacts)(\"selectedItemId\", i0.ɵɵpipeBind1(4, 8, hostRef_r35.selectedItemId))(\"showAlias\", false);\n  }\n}\n\nfunction ContactsListContainerComponent_ng_template_4_bb_search_box_ui_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"bb-search-box-ui\", 46);\n    i0.ɵɵlistener(\"valueChange\", function ContactsListContainerComponent_ng_template_4_bb_search_box_ui_2_Template_bb_search_box_ui_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const hostRef_r39 = i0.ɵɵnextContext().$implicit;\n      return hostRef_r39.onSearchTermChange($event);\n    })(\"submit\", function ContactsListContainerComponent_ng_template_4_bb_search_box_ui_2_Template_bb_search_box_ui_submit_0_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const hostRef_r39 = i0.ɵɵnextContext().$implicit;\n      return hostRef_r39.searchContacts(hostRef_r39.searchTerm.value);\n    })(\"keyup.enter\", function ContactsListContainerComponent_ng_template_4_bb_search_box_ui_2_Template_bb_search_box_ui_keyup_enter_0_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const hostRef_r39 = i0.ɵɵnextContext().$implicit;\n      return hostRef_r39.searchContacts(hostRef_r39.searchTerm.value);\n    })(\"clear\", function ContactsListContainerComponent_ng_template_4_bb_search_box_ui_2_Template_bb_search_box_ui_clear_0_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const hostRef_r39 = i0.ɵɵnextContext().$implicit;\n      return hostRef_r39.clearSearch();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const hostRef_r39 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"showSearch\", true)(\"showClear\", true)(\"formControl\", hostRef_r39.searchTerm);\n  }\n}\n\nfunction ContactsListContainerComponent_ng_template_4_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵelement(1, \"ngb-highlight\", 48);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const result_r54 = ctx.result;\n    const term_r55 = ctx.term;\n    i0.ɵɵproperty(\"title\", result_r54);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"result\", result_r54)(\"term\", term_r55);\n  }\n}\n\nfunction ContactsListContainerComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r57 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵelementStart(1, \"div\", 38);\n    i0.ɵɵtemplate(2, ContactsListContainerComponent_ng_template_4_bb_search_box_ui_2_Template, 1, 3, \"bb-search-box-ui\", 39);\n    i0.ɵɵelementStart(3, \"div\", 40);\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵi18n(5, 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 42);\n    i0.ɵɵelementStart(7, \"button\", 43);\n    i0.ɵɵlistener(\"click\", function ContactsListContainerComponent_ng_template_4_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r57);\n      const items_r40 = restoredCtx.context;\n      const hostRef_r39 = restoredCtx.$implicit;\n      return hostRef_r39.newContact(items_r40.contacts.length);\n    });\n    i0.ɵɵi18n(8, 44);\n    i0.ɵɵpipe(9, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, ContactsListContainerComponent_ng_template_4_ng_template_10_Template, 2, 3, \"ng-template\", null, 45, i0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    const hostRef_r39 = ctx.$implicit;\n    const items_r40 = ctx.context;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", hostRef_r39.isSearchBoxVisible);\n    i0.ɵɵadvance(3);\n    i0.ɵɵi18nExp(items_r40.count || 0)(items_r40.count);\n    i0.ɵɵi18nApply(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !i0.ɵɵpipeBind1(9, 4, hostRef_r39.newContactAllowed));\n  }\n}\n\nfunction ContactsListContainerComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 49);\n    i0.ɵɵelement(1, \"bb-loading-indicator-ui\", 50);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsListContainerComponent_ng_template_6_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 52);\n  }\n\n  if (rf & 2) {\n    const ctx_r59 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"bbHostRef\", ctx_r59.hostRef);\n  }\n}\n\nfunction ContactsListContainerComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ContactsListContainerComponent_ng_template_6_ng_container_0_Template, 1, 1, \"ng-container\", 51);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n\n    const _r13 = i0.ɵɵreference(16);\n\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.error)(\"ngIfElse\", _r13);\n  }\n}\n\nfunction ContactsListContainerComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 49);\n    i0.ɵɵelement(1, \"bb-empty-state-ui\", 53);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsListContainerComponent_ng_template_9_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 55);\n  }\n\n  if (rf & 2) {\n    const ctx_r61 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"bbHostRef\", ctx_r61.hostRef);\n  }\n}\n\nfunction ContactsListContainerComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ContactsListContainerComponent_ng_template_9_ng_container_0_Template, 1, 1, \"ng-container\", 54);\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n\n    const _r10 = i0.ɵɵreference(13);\n\n    i0.ɵɵproperty(\"ngIf\", !ctx_r8.hostRef.searchTerm.value)(\"ngIfElse\", _r10);\n  }\n}\n\nfunction ContactsListContainerComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 49);\n    i0.ɵɵelement(1, \"bb-empty-state-ui\", 56);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsListContainerComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 57);\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"bbHostRef\", ctx_r11.hostRef)(\"bbTemplateContext\", ctx_r11.searchTerm);\n  }\n}\n\nfunction ContactsListContainerComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 49);\n    i0.ɵɵelement(1, \"bb-common-error-state-ui\", 58);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const error_r65 = ctx.context;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"error\", error_r65);\n    i0.ɵɵattribute(\"data-role\", \"contact-manager-error\");\n  }\n}\n\nfunction ContactsListContainerComponent_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 59);\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"bbHostRef\", ctx_r14.hostRef)(\"bbTemplateContext\", ctx_r14.error);\n  }\n}\n\nconst _c141 = [\"*\"];\nvar AccountCreateType;\n\n(function (AccountCreateType) {\n  AccountCreateType[\"IBAN\"] = \"IBAN\";\n  AccountCreateType[\"EMAIL\"] = \"email\";\n  AccountCreateType[\"PHONE\"] = \"phoneNumber\";\n  AccountCreateType[\"ACCOUNT\"] = \"accountNumber\";\n})(AccountCreateType || (AccountCreateType = {}));\n\nvar AccountTypeModelKey;\n\n(function (AccountTypeModelKey) {\n  AccountTypeModelKey[\"IBAN\"] = \"IBAN\";\n  AccountTypeModelKey[\"BBAN\"] = \"accountNumber\";\n})(AccountTypeModelKey || (AccountTypeModelKey = {}));\n\nvar View;\n\n(function (View) {\n  View[\"List\"] = \"LIST\";\n  View[\"Detail\"] = \"DETAIL\";\n  View[\"Edit\"] = \"EDIT\";\n  View[\"Select\"] = \"SELECT\";\n})(View || (View = {}));\n/**\n *\n * This service manages the routes of the widget.\n *\n * @see ContactManagerWidgetModule\n * @usageNotes\n *\n * ### Ensure the ContactManagerWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ContactManagerWidgetModule,\n *   ],\n * })\n * export class ContactManagerWidgetModule {}\n * ```\n *\n * ### Inject this service into your provider\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ContactsNavigationService]\n * })\n *  export class ContactManagerWidgetModule {\n * ```\n */\n\n\nclass ContactsNavigationService {\n  /**\n   * @param {RouterService} routerService router service\n   */\n  constructor(routerService) {\n    this.routerService = routerService;\n    this._currentView = View.List;\n  }\n\n  get currentView() {\n    return this._currentView;\n  }\n\n  set currentView(view) {\n    this._currentView = view;\n  }\n  /**\n   * Routes to list view\n   *\n   * @param {?number} page current Page number.\n   * @param {?string} query Searched query text\n   * @param {'merge' | 'preserve' | ''} queryParamsHandling query hash handling. default value is merge\n   * @returns {Promise<boolean>} returns a observable of boolean.\n   */\n\n\n  list(page, query, queryParamsHandling = 'merge') {\n    const queryParam = {\n      page: page !== undefined && page > -1 ? page : undefined\n    };\n    if (query || query === '') queryParam.query = query;\n    return this.routerService.navigate(['./'], {\n      queryParams: Object.assign({}, queryParam),\n      queryParamsHandling: queryParamsHandling\n    });\n  }\n  /**\n   * Routes to select view for contact types.\n   *\n   * @param {string} id - contact ID\n   * @returns {Promise<boolean>} Boolean promise.\n   */\n\n\n  select(id) {\n    this.currentView = View.Detail;\n    return this.routerService.navigate([id], {\n      queryParamsHandling: 'merge'\n    });\n  }\n  /**\n   * Routes to edit screen of selected contact.\n   *\n   * @param {string} id - Contact ID, for selected conatct for edit.\n   * @param {string} type - selected type of the contact\n   * @returns {Promise<boolean>} Boolean promise.\n   */\n\n\n  edit(id, type = AccountCreateType.IBAN) {\n    this.currentView = View.Edit;\n    return this.routerService.navigate(['edit', id, type], {\n      queryParamsHandling: 'merge'\n    });\n  }\n  /**\n   * Routes to new contact view.\n   *\n   * @returns {Promise<boolean>} Boolean promise.\n   */\n\n\n  newContact() {\n    this.currentView = View.Select;\n    return this.routerService.navigate(['select'], {\n      queryParamsHandling: 'merge'\n    });\n  }\n  /**\n   * Route to new contact edit form when new contact is selected.\n   *\n   * @param {AccountCreateType} type whether the new contact is of IBAN/Phone/Email/Account type\n   * @returns {Promise<boolean>} resolves to true when form is ready\n   */\n\n\n  newContactForm(type) {\n    this.currentView = View.Edit;\n    return this.routerService.navigate(['edit', 0, type], {\n      queryParamsHandling: 'merge'\n    });\n  }\n\n}\n/** @nocollapse */\n\n\nContactsNavigationService.ɵfac = function ContactsNavigationService_Factory(t) {\n  return new (t || ContactsNavigationService)(i0.ɵɵinject(i1.RouterService));\n};\n/** @nocollapse */\n\n\nContactsNavigationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ContactsNavigationService,\n  factory: ContactsNavigationService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsNavigationService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.RouterService\n    }];\n  }, null);\n})();\n\nvar ModalOptions;\n\n(function (ModalOptions) {\n  ModalOptions[ModalOptions[\"Cancel\"] = 0] = \"Cancel\";\n  ModalOptions[ModalOptions[\"Success\"] = 1] = \"Success\";\n})(ModalOptions || (ModalOptions = {}));\n\nconst defaultListParams = {\n  pagination: {\n    from: 0,\n    size: 4,\n    query: ''\n  },\n  paginationType: LoadMoreMethod.PAGINATION\n};\n/**\n *\n * This service calls the api calls from data-ang\n *\n * @see ContactManagerWidgetModule\n * @usageNotes\n *\n * ### Ensure the ContactManagerWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ContactManagerWidgetModule,\n *   ],\n * })\n * export class ContactManagerWidgetModule {}\n * ```\n *\n * ### Inject this service into your provider\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ContactsService]\n * })\n *  export class ContactManagerWidgetModule {\n * ```\n */\n\nclass ContactsService {\n  constructor(dataService) {\n    this.dataService = dataService; // \"Events\" - Subjects that are used to trigger actions\n\n    this.saveComplete = new Subject();\n    this.listParams = new BehaviorSubject(defaultListParams);\n    this.selectedItemId = new ReplaySubject(1);\n    this.lastSelectedItemId = new BehaviorSubject(undefined);\n    this.actions$ = merge(this.listParams.pipe(map(({\n      pagination,\n      paginationType,\n      method\n    }) => ({\n      action: ContactActions.Load,\n      params: pagination,\n      paginationType,\n      method: method\n    }))), this.saveComplete.pipe(mapTo({\n      action: ContactActions.Refresh\n    }))); // The params to use for a list request\n\n    this.items = this.actions$.pipe(scan((state, action) => Object.assign(Object.assign({}, state), action)), map(({\n      action,\n      params,\n      paginationType,\n      method\n    }) => {\n      const isLoadMoreRefresh = action === ContactActions.Refresh && paginationType === LoadMoreMethod.LOAD_MORE;\n      return {\n        action,\n        paginationType,\n        params: Object.assign(Object.assign({}, params), isLoadMoreRefresh ? {\n          from: 0,\n          size: (params.from + 1) * params.size\n        } : {}),\n        method\n      };\n    }), switchMap(_a => {\n      var {\n        params,\n        method\n      } = _a,\n          state = __rest(_a, [\"params\", \"method\"]);\n\n      return this.dataService.getContacts(this.toHttpParams(params), 'response').pipe(map(listFromData), map(response => Object.assign(Object.assign(Object.assign(Object.assign({}, response), {\n        params\n      }), state), {\n        method\n      })));\n    }), scan((acc, curr) => {\n      const {\n        count,\n        action,\n        paginationType,\n        method\n      } = curr;\n      let contacts;\n\n      if (curr.params.from > 0 && acc.params.query === curr.params.query && action !== ContactActions.Refresh && paginationType === LoadMoreMethod.LOAD_MORE && method !== 'search') {\n        contacts = [...acc.contacts, ...curr.contacts];\n      } else {\n        contacts = [...curr.contacts];\n      }\n\n      return {\n        count,\n        contacts,\n        params: curr.params\n      };\n    }), shareReplay());\n    this.currentlySelectedItemId = combineLatest([this.selectedItemId, this.lastSelectedItemId, this.items]).pipe(map(([id, lastItemId, items]) => {\n      var _a, _b, _c;\n\n      return (_c = (_a = id !== null && id !== void 0 ? id : lastItemId) !== null && _a !== void 0 ? _a : (_b = items.contacts[0]) === null || _b === void 0 ? void 0 : _b.id) !== null && _c !== void 0 ? _c : null;\n    }));\n    this.item = combineLatest([this.currentlySelectedItemId.pipe(distinctUntilChanged()), this.items]).pipe(switchMap(([id, items]) => {\n      var _a;\n\n      if (id === '0') {\n        return of(undefined);\n      }\n\n      let contact = this.getContactsItem((_a = id !== null && id !== void 0 ? id : this.lastSelectedItemId.value) !== null && _a !== void 0 ? _a : undefined, items);\n      const firstContact = this.getContactsItem(this.firstContact(items.contacts), items);\n\n      if (!contact && this.lastSelectedItemId.value) {\n        const contactId = this.lastSelectedItemId.value;\n        return this.dataService.getContact({\n          contactId\n        }).pipe(catchError(() => of(firstContact)));\n      }\n\n      if (contact) {\n        this.lastSelectedItemId.next(contact.id);\n      }\n\n      return of(contact || firstContact);\n    }), shareReplay());\n    this.deleteSuccess = new Subject();\n    this.deleteError = new Subject();\n  }\n  /**\n   * Updates the selected contact.\n   *\n   * @param {Observable<ItemId | null>} ids contact Id\n   */\n\n\n  getItemFrom(ids) {\n    ids.subscribe(id => this.selectedItemId.next(id));\n  }\n\n  firstContact(contacts) {\n    return contacts && contacts.length > 0 ? contacts[0].id : undefined;\n  }\n  /**\n   * Gets the contact in the given list by id.\n   *\n   * @param {string | undefined} id contact ID\n   * @param {ContactList} items all contacts in an array form.\n   * @returns {ContactItem | undefined} contact item from list or undefined\n   */\n\n\n  getContactsItem(id, items) {\n    if (!(items && items.contacts && items.contacts.length)) return;\n    let item;\n\n    if (id === '0') {\n      return undefined;\n    } else {\n      item = items.contacts.find(v => v.id === id);\n    }\n\n    return item;\n  }\n\n  toHttpParams(params) {\n    return {\n      from: Math.floor(params.from),\n      size: Math.floor(params.size),\n      query: params.query || undefined\n    };\n  }\n  /**\n   * Update the list of Parameters when changed.\n   *\n   * @param {?string} query search query\n   * @param {?number} page current Page of contact lists\n   * @param {?number} size no of records to be shown on one page\n   * @param {?string} paginationType type of pagination `load-more` or `pagination`\n   * @param {?string} method enumerated value\n   */\n\n\n  updateItemList(query, page, size, paginationType, method) {\n    this.listParams.next({\n      pagination: {\n        query: query || '',\n        from: page || 0,\n        size: size || 5\n      },\n      paginationType: paginationType || LoadMoreMethod.PAGINATION,\n      method\n    });\n  }\n  /**\n   * Gets the account Type for the contacts.\n   *\n   * @returns {Observable<string>} Observable of a string with accountType\n   */\n\n\n  getAccountType() {\n    return this.item.pipe(map(contactItem => contactItem ? this.checkaccountType(contactItem) : AccountCreateType.IBAN));\n  }\n  /**\n   * Calls the update API for contacts when updated.\n   *\n   * @param {ContactItem} item - Updated contact.\n   * @returns {Observable<string | undefined>} the observable of updated ID of contact.\n   */\n\n\n  save(item) {\n    if (isNew(item)) {\n      const postItem = item;\n      return this.dataService.postContacts({\n        contactsPostRequestBody: postItem\n      }, 'response').pipe(map(res => this.saveSuccess(res)));\n    } else {\n      return this.dataService.putContact({\n        contactId: item.id,\n        contactPutRequestBody: item\n      }, 'response').pipe(map(res => this.editSuccess(res, item.id)));\n    }\n  }\n  /**\n   * Returns the contact Id when updated.\n   *\n   * @param {HttpResponse<Id>} res save response\n   * @returns {string | undefined} contact ID.\n   */\n\n\n  saveSuccess(res) {\n    if (res.body && res.body.id) {\n      this.saveComplete.next();\n      return res.body.id;\n    } else {\n      // error state\n      return undefined;\n    }\n  }\n  /**\n   * Returns the ID of the contact when edit is successful\n   *\n   * @param {HttpResponse<ContactUpdateDeleteResponse>} res response of editing a contact.\n   * @param {string} id Contact ID.\n   * @returns {string | undefined} the ID of contact when edit is successful.\n   */\n\n\n  editSuccess(res, id) {\n    if (res.body) {\n      this.saveComplete.next();\n      return id;\n    } else {\n      // error state\n      return undefined;\n    }\n  }\n  /**\n   * Calls the deletion API.\n   *\n   * @param {string} contactId - Contact ID for selected contact.\n   * @returns {Subscription} Subscription of deletion api.\n   */\n\n\n  delete(contactId) {\n    return this.dataService.deleteContact({\n      contactId\n    }).subscribe(() => {\n      this.deleteSuccess.next();\n      this.saveComplete.next();\n    }, error => this.deleteError.next(error));\n  }\n  /**\n   * Returns the account Type for the given contact\n   *\n   * @param {ContactItem} item contact object.\n   * @returns {string} type of account for one contact.\n   */\n\n\n  checkaccountType(item) {\n    if (item) {\n      return (Object.entries(item === null || item === void 0 ? void 0 : item.accounts[0]).find(([key, value]) => Object.values(AccountCreateType).includes(key) && value) || [])[0] || AccountCreateType.IBAN;\n    }\n\n    return AccountCreateType.IBAN;\n  }\n\n}\n/** @nocollapse */\n\n\nContactsService.ɵfac = function ContactsService_Factory(t) {\n  return new (t || ContactsService)(i0.ɵɵinject(i1$1.ContactsHttpService));\n};\n/** @nocollapse */\n\n\nContactsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ContactsService,\n  factory: ContactsService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.ContactsHttpService\n    }];\n  }, null);\n})();\n/**\n * Returns if the contact is new or is being edited.\n *\n * @param {ContactItem} item contact object\n * @returns {boolean} whether the item is new or existing\n */\n\n\nfunction isNew(item) {\n  return item.id === undefined || item.id === '';\n}\n/**\n * Returns the contact list in a format.\n *\n * @param {HttpResponse<Contacts>} response http response with data\n * @returns {ContactList} contacts list with total count.\n */\n\n\nfunction listFromData(response) {\n  if (response.body === null) {\n    throw new Error('Response body not set');\n  }\n\n  const headers = response.headers;\n  const totalCount = headers.get('X-Total-Count');\n  return {\n    count: totalCount ? +totalCount : null,\n    contacts: response.body\n  };\n}\n/**\n *\n * This service manages the widget properties.\n *\n * @see ContactManagerWidgetModule\n * @usageNotes\n *\n * ### Ensure the ContactManagerWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ContactManagerWidgetModule,\n *   ],\n * })\n * export class ContactManagerWidgetModule {}\n * ```\n *\n * ### Inject this service to the providers.\n *\n * ```ts\n * @Component({\n *   ...\n *  providers: [\n * {\n *   provide: ContactManagerPreferencesService,\n *   useClass: ContactManagerJourneyPreferencesService,\n * },\n * })\n *  export class ContactManagerWidgetModule {\n * ```\n */\n\n\nclass ContactManagerPreferencesService {\n  constructor(itemModel) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n\n    this.itemModel = itemModel;\n    this.newContactSubject$ = new BehaviorSubject(undefined);\n    this.pageSizeSubject$ = new BehaviorSubject(undefined);\n    this.maxNavPagesSubject$ = new BehaviorSubject(undefined);\n    this.paginationTypeSubject$ = new BehaviorSubject(undefined);\n    this.createContactEmailSubject$ = new BehaviorSubject(undefined);\n    this.createContactIBANSubject$ = new BehaviorSubject(undefined);\n    this.createContactAccountSubject$ = new BehaviorSubject(undefined);\n    this.createContactPhoneSubject$ = new BehaviorSubject(undefined);\n    this.notificationDismissTimeSubject$ = new BehaviorSubject(undefined);\n    this.newContactItemModel = (_a = this.itemModel) === null || _a === void 0 ? void 0 : _a.property('newContact').pipe(map(toBoolean));\n    this.pageSizeItemModel = (_b = this.itemModel) === null || _b === void 0 ? void 0 : _b.property('pageSize').pipe(map(toInteger));\n    this.maxNavPagesItemModel = (_c = this.itemModel) === null || _c === void 0 ? void 0 : _c.property('maxNavPages').pipe(map(toInteger));\n    this.paginationTypeItemModel = (_d = this.itemModel) === null || _d === void 0 ? void 0 : _d.property('paginationType');\n    this.createContactEmailItemModel = (_e = this.itemModel) === null || _e === void 0 ? void 0 : _e.property('createContactEmail').pipe(map(toBoolean));\n    this.createContactIBANItemModel = (_f = this.itemModel) === null || _f === void 0 ? void 0 : _f.property('createContactIBAN').pipe(map(toBoolean));\n    this.createContactAccountItemModel = (_g = this.itemModel) === null || _g === void 0 ? void 0 : _g.property('createContactAccount').pipe(map(toBoolean));\n    this.createContactPhoneItemModel = (_h = this.itemModel) === null || _h === void 0 ? void 0 : _h.property('createContactPhone').pipe(map(toBoolean));\n    this.notificationDismissTimeItemModel = (_j = this.itemModel) === null || _j === void 0 ? void 0 : _j.property('notificationDismissTime').pipe(map(toInteger));\n    this.newContact$ = this.getProperty(this.newContactSubject$, this.newContactItemModel);\n    this.pageSize$ = this.getProperty(this.pageSizeSubject$, this.pageSizeItemModel);\n    this.maxNavPages$ = this.getProperty(this.maxNavPagesSubject$, this.maxNavPagesItemModel);\n    this.paginationType$ = this.getProperty(this.paginationTypeSubject$, this.paginationTypeItemModel);\n    this.createContactEmail$ = this.getProperty(this.createContactEmailSubject$, this.createContactEmailItemModel);\n    this.createContactIBAN$ = this.getProperty(this.createContactIBANSubject$, this.createContactIBANItemModel);\n    this.createContactAccount$ = this.getProperty(this.createContactAccountSubject$, this.createContactAccountItemModel);\n    this.createContactPhone$ = this.getProperty(this.createContactPhoneSubject$, this.createContactPhoneItemModel);\n    this.notificationDismissTime$ = this.getProperty(this.notificationDismissTimeSubject$, this.notificationDismissTimeItemModel);\n  }\n\n  getProperty(input$, itemModel) {\n    return combineLatest([input$, itemModel]).pipe(map(([value, valueIM]) => value === undefined ? valueIM : value));\n  }\n  /**\n   *  Update the new Contact value\n   *\n   * @param {boolean} value selected value\n   */\n\n\n  setNewContact(value) {\n    this.newContactSubject$.next(value);\n  }\n  /**\n   *  Update the pageSize value\n   *\n   * @param {number} value selected value\n   */\n\n\n  setPageSize(value) {\n    this.pageSizeSubject$.next(value);\n  }\n  /**\n   *  Update the maxNavPages value\n   *\n   * @param {number} value selected value\n   */\n\n\n  setMaxNavPages(value) {\n    this.maxNavPagesSubject$.next(value);\n  }\n  /**\n   *  Update the paginationType value\n   *\n   * @param {string} value selected value\n   */\n\n\n  setPaginationType(value) {\n    this.paginationTypeSubject$.next(value);\n  }\n  /**\n   *  Update the notificationDissmissTime value\n   *\n   * @param {number} value selected value\n   */\n\n\n  setNotificationDismissTime(value) {\n    this.notificationDismissTimeSubject$.next(value);\n  }\n  /**\n   *  Update the createContactEmail value\n   *\n   * @param {boolean} value selected value\n   */\n\n\n  setCreateContactEmail(value) {\n    this.createContactEmailSubject$.next(value);\n  }\n  /**\n   *  Update the createContactIBAN value\n   *\n   * @param {boolean} value selected value\n   */\n\n\n  setCreateContactIBAN(value) {\n    this.createContactIBANSubject$.next(value);\n  }\n  /**\n   *  Update the createContactAccount value\n   *\n   * @param {boolean} value selected value\n   */\n\n\n  setCreateContactAccount(value) {\n    this.createContactAccountSubject$.next(value);\n  }\n  /**\n   *  Update the createContactPhone value\n   *\n   * @param {boolean} value selected value\n   */\n\n\n  setCreateContactPhone(value) {\n    this.createContactPhoneSubject$.next(value);\n  }\n\n}\n/** @nocollapse */\n\n\nContactManagerPreferencesService.ɵfac = function ContactManagerPreferencesService_Factory(t) {\n  return new (t || ContactManagerPreferencesService)(i0.ɵɵinject(i1.ItemModel, 8));\n};\n/** @nocollapse */\n\n\nContactManagerPreferencesService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ContactManagerPreferencesService,\n  factory: ContactManagerPreferencesService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactManagerPreferencesService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.ItemModel,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * This is an extension slot to be used for customizing delete confirmation dialog\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsDeleteConfirmationCustomizable let-hostRef let-context=\"context\">\n *   <div class=\"modal-header\">\n *     <h4 i18n=\"@@contact-manager-detail.header.delete.contact\" class=\"modal-title\" data-role=\"delete-contact-label\">\n *       Delete Contact\n *     </h4>\n *   </div>\n *   <div i18n=\"@@contact-manager-detail.delete.confirmation\" class=\"modal-body\" role=\"alert\">\n *     <p class=\"break-word\">\n *       Are you sure you want to delete {{ hostRef.item.name }} from your contacts? This action cannot be undone.\n *     </p>\n *   </div>\n *   <div class=\"bb-button-bar bb-button-bar--reverse modal-footer\">\n *     <button\n *       i18n=\"@@contact-manager-detail.button.cancel\"\n *       type=\"button\"\n *       class=\"bb-button-bar__button\"\n *       bbButton\n *       color=\"secondary\"\n *       (click)=\"context.dismiss()\"\n *     >\n *       Not now\n *     </button>\n *     <button\n *       i18n=\"@@contact-manager-detail.button.delete\"\n *       type=\"button\"\n *       class=\"bb-button-bar__button\"\n *       bbButton\n *       color=\"danger\"\n *       data-role=\"confirm-delete-button\"\n *       (click)=\"hostRef.deleteContact()\"\n *     >\n *       Delete\n *     </button>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsDeleteConfirmationCustomizableDirective extends BbTemplate {}\n/** @nocollapse */\n\n\nContactsDeleteConfirmationCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵContactsDeleteConfirmationCustomizableDirective_BaseFactory;\n  return function ContactsDeleteConfirmationCustomizableDirective_Factory(t) {\n    return (ɵContactsDeleteConfirmationCustomizableDirective_BaseFactory || (ɵContactsDeleteConfirmationCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ContactsDeleteConfirmationCustomizableDirective)))(t || ContactsDeleteConfirmationCustomizableDirective);\n  };\n}();\n/** @nocollapse */\n\n\nContactsDeleteConfirmationCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ContactsDeleteConfirmationCustomizableDirective,\n  selectors: [[\"\", \"bbContactsDeleteConfirmationCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsDeleteConfirmationCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbContactsDeleteConfirmationCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * Displays a detail of contact selected.\n *\n * The following extension slots are available in this component:\n *  - `ContactsDetailCustomizableDirective`\n *\n * @see ContactsDetailCustomizableDirective\n * @usageNotes\n *\n * ### Display a details of contacts\n *\n * ```html\n * <bb-contacts-detail\n *    [showDetail]=\"false\"\n *    [item]=\"hostRef.item\"\n *    [type]=\"hostRef.type\"\n *    (deleteContactsItem)=\"hostRef.deleteItemEmit()\"\n *    (editContactsItem)=\"hostRef.editContactsItem()\"\n * ></bb-contacts-detail>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsDetailComponent {\n  constructor(service) {\n    this.service = service;\n    this.hostRef = this;\n    /**\n     * Wether to show user details or not\n     */\n\n    this.showDetail = true;\n    /**\n     * Event emitted when contact is edited\n     */\n\n    this.editContactsItem = new EventEmitter();\n    /**\n     * Event emitted when contact is deleted\n     */\n\n    this.deleteContactsItem = new EventEmitter();\n    this.isDeleteConfirmOpened = false;\n  }\n  /**\n   * OnInit - lifecycle hook.\n   */\n\n\n  ngOnInit() {\n    if (this.item === undefined) {\n      throw new Error('`item` input is required in `bb-contacts-detail` component');\n    }\n  }\n  /**\n   *  Will emit the event when contact is edited.\n   *\n   * @param {string} id the contact id that has to be edited.\n   */\n\n\n  edit(id) {\n    this.editContactsItem.emit({\n      id: id,\n      type: this.type\n    });\n  }\n  /**\n   * opens modal for delete confirmation\n   */\n\n\n  openDeleteModal() {\n    this.isDeleteConfirmOpened = true;\n  }\n  /**\n   * event handler for confirming delete\n   */\n\n\n  onConfirmDelete() {\n    this.deleteContactsItem.emit(this.item.id);\n    this.isDeleteConfirmOpened = false;\n  }\n  /**\n   * event handler for rejecting delete\n   */\n\n\n  onCancelDelete() {\n    this.isDeleteConfirmOpened = false;\n  }\n\n}\n/** @nocollapse */\n\n\nContactsDetailComponent.ɵfac = function ContactsDetailComponent_Factory(t) {\n  return new (t || ContactsDetailComponent)(i0.ɵɵdirectiveInject(ContactsService));\n};\n/** @nocollapse */\n\n\nContactsDetailComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ContactsDetailComponent,\n  selectors: [[\"bb-contacts-detail\"]],\n  inputs: {\n    type: \"type\",\n    showDetail: \"showDetail\",\n    item: \"item\"\n  },\n  outputs: {\n    editContactsItem: \"editContactsItem\",\n    deleteContactsItem: \"deleteContactsItem\"\n  },\n  decls: 4,\n  vars: 3,\n  consts: function () {\n    let i18n_0;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Title shown when user is in create contact\n       * @meaning Create contact heading \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__1 = goog.getMsg(\" Create contact \");\n      i18n_0 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__1;\n    } else {\n      i18n_0 = $localize`:Create contact heading | Title shown when user is in create contact@@contact-manager-detail.create.heading: Create contact `;\n    }\n\n    let i18n_2;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___3 = goog.getMsg(\"Edit\");\n      i18n_2 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___3;\n    } else {\n      i18n_2 = $localize`:@@contact-manager-detail.button.edit.tooltip:Edit`;\n    }\n\n    let i18n_4;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Aria label edit contact menu\n       * @meaning Edit Contact \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___5 = goog.getMsg(\"Edit Contact\");\n      i18n_4 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___5;\n    } else {\n      i18n_4 = $localize`:Edit Contact | Aria label edit contact menu@@contact-manager-detail.label.actions.edit:Edit Contact`;\n    }\n\n    let i18n_6;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Button for editing an existing contact\n       * @meaning Edit Contact Button \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___7 = goog.getMsg(\"{$startTagBbIconUi}{$closeTagBbIconUi}\", {\n        \"startTagBbIconUi\": \"\\uFFFD#4\\uFFFD\",\n        \"closeTagBbIconUi\": \"\\uFFFD/#4\\uFFFD\"\n      });\n      i18n_6 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___7;\n    } else {\n      i18n_6 = $localize`:Edit Contact Button | Button for editing an existing contact@@contact-manager-detail.button.edit:${\"\\uFFFD#4\\uFFFD\"}:START_TAG_BB_ICON_UI:${\"\\uFFFD/#4\\uFFFD\"}:CLOSE_TAG_BB_ICON_UI:`;\n    }\n\n    let i18n_8;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___9 = goog.getMsg(\"Delete\");\n      i18n_8 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___9;\n    } else {\n      i18n_8 = $localize`:@@contact-manager-detail.button.delete.tooltip:Delete`;\n    }\n\n    let i18n_10;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Aria label delete contact menu\n       * @meaning Delete Contact \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___11 = goog.getMsg(\"Delete Contact\");\n      i18n_10 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___11;\n    } else {\n      i18n_10 = $localize`:Delete Contact | Aria label delete contact menu@@contact-manager-detail.label.actions.delete:Delete Contact`;\n    }\n\n    let i18n_12;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Button for deleting an existing contact\n       * @meaning Delete Contact Button \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___13 = goog.getMsg(\"{$startTagBbIconUi}{$closeTagBbIconUi}\", {\n        \"startTagBbIconUi\": \"\\uFFFD#8\\uFFFD\",\n        \"closeTagBbIconUi\": \"\\uFFFD/#8\\uFFFD\"\n      });\n      i18n_12 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___13;\n    } else {\n      i18n_12 = $localize`:Delete Contact Button | Button for deleting an existing contact@@contact-manager-detail.detail.button.delete:${\"\\uFFFD#8\\uFFFD\"}:START_TAG_BB_ICON_UI:${\"\\uFFFD/#8\\uFFFD\"}:CLOSE_TAG_BB_ICON_UI:`;\n    }\n\n    let i18n_15;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___16 = goog.getMsg(\"{VAR_SELECT, select, IBAN {IBAN} accountNumber {Account number} email {Email} phoneNumber {Phone number} other {IBAN}}\");\n      i18n_15 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___16;\n    } else {\n      i18n_15 = $localize`{VAR_SELECT, select, IBAN {IBAN} accountNumber {Account number} email {Email} phoneNumber {Phone number} other {IBAN}}`;\n    }\n\n    i18n_15 = i0.ɵɵi18nPostprocess(i18n_15, {\n      \"VAR_SELECT\": \"\\uFFFD0\\uFFFD\"\n    });\n    let i18n_14;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Heading for account number or IBAN or Email or Phone\n       * @meaning Account number \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___17 = goog.getMsg(\" {$icu} \", {\n        \"icu\": i18n_15\n      });\n      i18n_14 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___17;\n    } else {\n      i18n_14 = $localize`:Account number | Heading for account number or IBAN or Email or Phone@@contact-manager-detail.label.account.type.heading: ${i18n_15}:ICU: `;\n    }\n\n    let i18n_18;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__19 = goog.getMsg(\"Delete Contact\");\n      i18n_18 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__19;\n    } else {\n      i18n_18 = $localize`:@@contact-manager-detail.header.delete.contact:Delete Contact`;\n    }\n\n    let i18n_20;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__21 = goog.getMsg(\" Are you sure you want to delete {$interpolation} from your contacts? This action cannot be undone. \", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_20 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__21;\n    } else {\n      i18n_20 = $localize`:@@contact-manager-detail.delete.confirmation: Are you sure you want to delete ${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION: from your contacts? This action cannot be undone. `;\n    }\n\n    let i18n_22;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__23 = goog.getMsg(\"Not now\");\n      i18n_22 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__23;\n    } else {\n      i18n_22 = $localize`:@@contact-manager-detail.button.cancel:Not now`;\n    }\n\n    let i18n_24;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__25 = goog.getMsg(\"Delete\");\n      i18n_24 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__25;\n    } else {\n      i18n_24 = $localize`:@@contact-manager-detail.button.delete:Delete`;\n    }\n\n    return [[\"bbContactsDetailCustomizable\", \"\", 3, \"bbHostRef\", \"bbTemplateContext\"], [\"bbContactsDetailCustomizable\", \"\"], [\"bbContactsDeleteConfirmationCustomizable\", \"\", 3, \"bbHostRef\"], [\"bbContactsDeleteConfirmationCustomizable\", \"\"], [1, \"bb-block\", \"bb-block--xl\"], [1, \"bb-stack\", \"bb-stack--align-bottom\"], [1, \"bb-stack__item\", \"bb-stack__item--fill\"], [\"data-role\", \"contact-details-info-name\", 1, \"bb-block\"], [\"data-role\", \"create-contact-label\", \"aria-hidden\", \"true\", 1, \"d-none\"], [\"heading\", \"\"], i18n_0, [\"data-role\", \"create-new-contact-label\", \"headingType\", \"h3\", \"headingClasses\", \"break-word\", 3, \"heading\"], [\"class\", \"bb-stack__item bb-stack__item--push-right\", 4, \"ngIf\"], [\"class\", \"bb-lock bb-lock bb-block--lg\", 4, \"ngIf\"], [1, \"bb-stack__item\", \"bb-stack__item--push-right\"], [\"bbTooltip\", i18n_2, \"triggers\", \"hover focus\"], [\"data-role\", \"contact-edit-button\", \"bbButton\", \"\", \"circle\", \"true\", \"color\", \"link\", \"aria-label\", i18n_4, 3, \"click\"], i18n_6, [\"name\", \"edit\", \"color\", \"dark\"], [\"bbTooltip\", i18n_8, \"triggers\", \"hover focus\"], [\"bbButton\", \"\", \"circle\", \"true\", \"color\", \"link\", \"data-role\", \"delete-button\", \"aria-label\", i18n_10, 3, \"click\"], i18n_12, [\"name\", \"delete\", \"color\", \"dark\"], [1, \"bb-lock\", \"bb-lock\", \"bb-block--lg\"], [\"aria-hidden\", \"true\", 1, \"d-none\"], i18n_14, [\"headingType\", \"h5\", 1, \"bb-block\", \"bb-block-md\", 3, \"heading\"], [\"data-role\", \"contact-details-info\", 1, \"bb-bock\", \"bb-block-md\"], [4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"notIban\", \"\"], [3, \"isOpen\", \"confirmButtonColor\", \"confirm\", \"cancel\"], [\"title\", \"\", \"data-role\", \"delete-contact-label\"], i18n_18, [\"body\", \"\"], i18n_20, [\"cancelButtonLabel\", \"\"], i18n_22, [\"confirmButtonLabel\", \"\", \"data-role\", \"confirm-delete-button\"], i18n_24];\n  },\n  template: function ContactsDetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵtemplate(1, ContactsDetailComponent_ng_template_1_Template, 11, 3, \"ng-template\", 1);\n      i0.ɵɵelementContainer(2, 2);\n      i0.ɵɵtemplate(3, ContactsDetailComponent_ng_template_3_Template, 9, 3, \"ng-template\", 3);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"bbHostRef\", ctx.hostRef)(\"bbTemplateContext\", ctx.item);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"bbHostRef\", ctx.hostRef);\n    }\n  },\n  directives: function () {\n    return [ContactsDetailCustomizableDirective, ContactsDeleteConfirmationCustomizableDirective, i2.HeaderComponent, i2$1.NgIf, i6.ButtonDirective, i3.IconComponent, i8.ConfirmActionDialogComponent];\n  },\n  pipes: function () {\n    return [i8$1.BbIbanPipe];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsDetailComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-contacts-detail',\n      templateUrl: './contacts-detail.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ContactsService\n    }];\n  }, {\n    type: [{\n      type: Input\n    }],\n    showDetail: [{\n      type: Input\n    }],\n    item: [{\n      type: Input\n    }],\n    editContactsItem: [{\n      type: Output\n    }],\n    deleteContactsItem: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * This is an extension slot to be used for customizing an item of the contact details.\n *\n * @usageNotes\n *\n * ### Display a contact details\n *\n * ```html\n * <ng-template bbContactsDetailCustomizable let-hostRef let-item=\"item\">\n * <div class=\"bb-block bb-block--xl\">\n *   <div class=\"bb-stack bb-stack--align-bottom\">\n *     <div class=\"bb-stack__item bb-stack__item--fill\">\n *       <div\n *         class=\"bb-block\"\n *         data-role=\"contact-details-info-name\"\n *       >\n *         <span\n *           class=\"d-none\"\n *           data-role=\"create-contact-label\"\n *           aria-hidden=\"true\"\n *           i18n-heading=\"Create contact heading | Title shown when user is in\n *                        create contact@@contact-manager-detail.create.heading\"\n *          #heading\n *         >\n *           Create contact\n *         </span>\n *         <bb-header-ui\n *           data-role=\"create-new-contact-label\"\n *           headingType=\"h3\"\n *           [heading]=\"hostRef.item.name || heading.textContent\"\n *         >\n *         </bb-header-ui>\n *       </div>\n *     </div>\n *     <div\n *      *ngIf=\"hostRef.item.name\"\n *       class=\"bb-stack__item bb-stack__item--push-right\"\n *     >\n *       <span\n *         bbTooltip=\"Edit\"\n *         triggers=\"hover focus\"\n *       >\n *         <button\n *           data-role=\"contact-edit-button\"\n *           bbButton\n *           circle=\"true\"\n *           color=\"link\"\n *           (click)=\"hostRef.edit(hostRef.item.id)\"\n *           i18n=\"Edit Contact Button | Button for editing an existing contact@@contact-manager-detail.button.edit\"\n *           aria-label=\"Edit Contact\"\n *           i18n-aria-label=\"Edit Contact | Aria label edit contact menu@@contact-manager-detail.label.actions.edit\"\n *         >\n *           <bb-icon-ui\n *             name=\"edit\"\n *             color=\"dark\"\n *           ></bb-icon-ui>\n *         </button>\n *       </span>\n *       <span\n *         bbTooltip=\"Delete\"\n *         triggers=\"hover focus\"\n *       >\n *         <button data-role=\"contact-delete-button\"\n *           bbButton\n *           circle=\"true\"\n *           color=\"link\"\n *           (click)=\"hostRef.openDeleteModal(hostRef.modalContent)\"\n *           i18n=\"Delete Contact Button | Button for deleting an existing contact@@contact-manager-detail.detail.button.delete\"\n *           data-role=\"delete-button\"\n *           aria-label=\"Delete Contact\"\n *           i18n-aria-label=\"Delete Contact | Aria label delete contact menu@@contact-manager-detail.label.actions.delete\"\n *         >\n *           <bb-icon-ui name=\"delete\" color=\"dark\"></bb-icon-ui>\n *         </button>\n *       </span>\n *     </div>\n *   </div>\n *   <hr/>\n * </div>\n * <div\n *   class=\"bb-lock bb-lock bb-block--lg\"\n *  *ngIf=\"hostRef.showDetail\"\n * >\n *   <span\n *     class=\"d-none\"\n *     aria-hidden=\"true\"\n *     i18n=\"Account number | Heading for account number or\n *      IBAN or Email or Phone@@contact-manager-detail.label.account.type.heading\"\n *     #heading\n *   >\n *    {hostRef.type, select, IBAN {IBAN}  accountNumber {Account number} email { Email} phoneNumber { Phone number} other {IBAN} }\n *   </span>\n *   <bb-header-ui\n *     headingType=\"h5\"\n *     [heading]=\"heading.textContent\"\n *     class=\"bb-block bb-block-md\"\n *   >\n *   </bb-header-ui>\n *   <div\n *     class=\"bb-bock bb-block-md\"\n *     data-role=\"contact-details-info-alias\"\n *   >\n *   <span *ngIf=\"hostRef.item?.accounts[0] as account\">\n *     {{ account[hostRef.type] }}\n *   </span>\n *   </div>\n * </div>\n *</ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsDetailCustomizableDirective extends BbTemplate {}\n/** @nocollapse */\n\n\nContactsDetailCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵContactsDetailCustomizableDirective_BaseFactory;\n  return function ContactsDetailCustomizableDirective_Factory(t) {\n    return (ɵContactsDetailCustomizableDirective_BaseFactory || (ɵContactsDetailCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ContactsDetailCustomizableDirective)))(t || ContactsDetailCustomizableDirective);\n  };\n}();\n/** @nocollapse */\n\n\nContactsDetailCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ContactsDetailCustomizableDirective,\n  selectors: [[\"\", \"bbContactsDetailCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsDetailCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbContactsDetailCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * This is an extension slot to be used for customizing success notification after deleting a contact\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsDeleteSuccessNotificationCustomizable>\n *   <span\n *     i18n=\"Notification delete success message@@contact-manager-detail-container.notification.delete.success\"\n *     role=\"alert\"\n *     aria-atomic=\"true\"\n *   >\n *     Contact was deleted succesfully\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsDeleteSuccessNotificationCustomizableDirective extends BbTemplate {}\n/** @nocollapse */\n\n\nContactsDeleteSuccessNotificationCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵContactsDeleteSuccessNotificationCustomizableDirective_BaseFactory;\n  return function ContactsDeleteSuccessNotificationCustomizableDirective_Factory(t) {\n    return (ɵContactsDeleteSuccessNotificationCustomizableDirective_BaseFactory || (ɵContactsDeleteSuccessNotificationCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ContactsDeleteSuccessNotificationCustomizableDirective)))(t || ContactsDeleteSuccessNotificationCustomizableDirective);\n  };\n}();\n/** @nocollapse */\n\n\nContactsDeleteSuccessNotificationCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ContactsDeleteSuccessNotificationCustomizableDirective,\n  selectors: [[\"\", \"bbContactsDeleteSuccessNotificationCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsDeleteSuccessNotificationCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbContactsDeleteSuccessNotificationCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * This is an extension slot to be used for customizing error notification after deleting a contact\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsDeleteErrorNotificationCustomizable>\n *   <span\n *     i18n=\"Notification delete failed error message@@contact-manager-detail-container.notification.delete.error\"\n *     role=\"alert\"\n *     aria-atomic=\"true\"\n *   >\n *     Error deleting contact\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsDeleteErrorNotificationCustomizableDirective extends BbTemplate {}\n/** @nocollapse */\n\n\nContactsDeleteErrorNotificationCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵContactsDeleteErrorNotificationCustomizableDirective_BaseFactory;\n  return function ContactsDeleteErrorNotificationCustomizableDirective_Factory(t) {\n    return (ɵContactsDeleteErrorNotificationCustomizableDirective_BaseFactory || (ɵContactsDeleteErrorNotificationCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ContactsDeleteErrorNotificationCustomizableDirective)))(t || ContactsDeleteErrorNotificationCustomizableDirective);\n  };\n}();\n/** @nocollapse */\n\n\nContactsDeleteErrorNotificationCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ContactsDeleteErrorNotificationCustomizableDirective,\n  selectors: [[\"\", \"bbContactsDeleteErrorNotificationCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsDeleteErrorNotificationCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbContactsDeleteErrorNotificationCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * Container component for showing contact details.\n *\n * @usageNotes\n *\n * ### Display details of the contact.\n *\n * ```html\n * <bb-contacts-detail-container></bb-contacts-detail-container>\n * ```\n *\n * ### Additionally use the container component in routing.\n *\n * ```typescript\n * const routes: [\n * {\n *  path: '',\n *  component: ContactsDetailContainerComponent\n * }]\n *\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsDetailContainerComponent {\n  constructor(service, route, navigation, notificationService, propertiesService) {\n    this.service = service;\n    this.route = route;\n    this.navigation = navigation;\n    this.notificationService = notificationService;\n    this.propertiesService = propertiesService;\n    this.hostRef = this;\n    this.itemId = this.route.paramMap.pipe(map(params => params.get('id')));\n    this.item = this.service.item; //.pipe(map(item => this.fromService(item)));\n\n    this.notificationTimeout$ = this.propertiesService.notificationDismissTime$;\n    this.contactTypeId$ = this.service.getAccountType();\n    this.subscriptions = new Subscription();\n    service.getItemFrom(this.itemId);\n  }\n  /**\n   * onInit - lifecycle hook\n   */\n\n\n  ngOnInit() {\n    this.subscriptions.add(this.itemId.subscribe(itemId => {\n      if (!itemId) {\n        this.navigation.currentView = View.List;\n      } else {\n        this.navigation.currentView = View.Detail;\n      }\n    }));\n    this.subscriptions.add(this.service.deleteSuccess.pipe(withLatestFrom(this.notificationTimeout$), map(([response, timeout]) => ({\n      timeout\n    }))).subscribe(({\n      timeout\n    }) => this.notificationService.showNotification({\n      header: this.deleteSuccessNotificationTemplate,\n      message: '',\n      modifier: 'success',\n      ttl: timeout\n    })));\n    this.subscriptions.add(this.service.deleteError.pipe(withLatestFrom(this.notificationTimeout$), map(([error, timeout]) => ({\n      error,\n      timeout\n    }))).subscribe(({\n      error,\n      timeout\n    }) => this.notificationService.showNotification({\n      header: this.deleteErrorNotificationTemplate,\n      message: '',\n      modifier: 'error',\n      ttl: timeout\n    })));\n  }\n  /**\n   * OnDestroy- lifecycle hook Unsubscribing the subscription.\n   */\n\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n  /**\n   *  Emits the output when edit is clicked.\n   *\n   * @param {SelectContactEvent} accountData - An object which contains id and type of contact to be edited.\n   */\n\n\n  edit(accountData) {\n    this.navigation.edit(accountData.id, accountData.type);\n  }\n  /**\n   * Method that calls the delete service and returns to list view.\n   *\n   * @param {string} id - contact ID which has to be deleted.\n   */\n\n\n  deleteContactsItem(id) {\n    this.service.delete(id);\n    this.navigation.list();\n    this.navigation.currentView = View.List;\n  }\n\n}\n/** @nocollapse */\n\n\nContactsDetailContainerComponent.ɵfac = function ContactsDetailContainerComponent_Factory(t) {\n  return new (t || ContactsDetailContainerComponent)(i0.ɵɵdirectiveInject(ContactsService), i0.ɵɵdirectiveInject(i2$2.ActivatedRoute), i0.ɵɵdirectiveInject(ContactsNavigationService), i0.ɵɵdirectiveInject(i4.NotificationService), i0.ɵɵdirectiveInject(ContactManagerPreferencesService));\n};\n/** @nocollapse */\n\n\nContactsDetailContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ContactsDetailContainerComponent,\n  selectors: [[\"bb-contacts-detail-container\"]],\n  viewQuery: function ContactsDetailContainerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c26, 5);\n      i0.ɵɵviewQuery(_c27, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.deleteSuccessNotificationTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.deleteErrorNotificationTemplate = _t.first);\n    }\n  },\n  decls: 8,\n  vars: 4,\n  consts: function () {\n    let i18n_28;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__29 = goog.getMsg(\"Loading...\");\n      i18n_28 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__29;\n    } else {\n      i18n_28 = $localize`:@@contact-manager-detail-container.loading.label:Loading...`;\n    }\n\n    let i18n_30;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Notification delete success message\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___31 = goog.getMsg(\" Contact was deleted succesfully \");\n      i18n_30 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___31;\n    } else {\n      i18n_30 = $localize`:Notification delete success message@@contact-manager-detail-container.notification.delete.success: Contact was deleted succesfully `;\n    }\n\n    let i18n_32;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Notification delete failed error message\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___33 = goog.getMsg(\" Error deleting contact \");\n      i18n_32 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___33;\n    } else {\n      i18n_32 = $localize`:Notification delete failed error message@@contact-manager-detail-container.notification.delete.error: Error deleting contact `;\n    }\n\n    return [[4, \"ngIf\", \"ngIfElse\"], [\"loadingTemplate\", \"\"], [\"deleteSuccessNotificationTemplate\", \"\"], [\"deleteErrorNotificationTemplate\", \"\"], [3, \"item\", \"type\", \"editContactsItem\", \"deleteContactsItem\"], [1, \"bb-state-container\"], [\"text\", i18n_28], [\"bbContactsDeleteSuccessNotificationCustomizable\", \"\", 3, \"bbHostRef\"], [\"bbContactsDeleteSuccessNotificationCustomizable\", \"\"], [\"role\", \"alert\", \"aria-atomic\", \"true\"], i18n_30, [\"bbContactsDeleteErrorNotificationCustomizable\", \"\", 3, \"bbHostRef\"], [\"bbContactsDeleteErrorNotificationCustomizable\", \"\"], i18n_32];\n  },\n  template: function ContactsDetailContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ContactsDetailContainerComponent_ng_container_0_Template, 3, 4, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, ContactsDetailContainerComponent_ng_template_2_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(4, ContactsDetailContainerComponent_ng_template_4_Template, 2, 1, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(6, ContactsDetailContainerComponent_ng_template_6_Template, 2, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(3);\n\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.item))(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i2$1.NgIf, ContactsDetailComponent, i7.LoadingIndicatorComponent, ContactsDeleteSuccessNotificationCustomizableDirective, ContactsDeleteErrorNotificationCustomizableDirective],\n  pipes: [i2$1.AsyncPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsDetailContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-contacts-detail-container',\n      templateUrl: './contacts-detail-container.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ContactsService\n    }, {\n      type: i2$2.ActivatedRoute\n    }, {\n      type: ContactsNavigationService\n    }, {\n      type: i4.NotificationService\n    }, {\n      type: ContactManagerPreferencesService\n    }];\n  }, {\n    deleteSuccessNotificationTemplate: [{\n      type: ViewChild,\n      args: ['deleteSuccessNotificationTemplate']\n    }],\n    deleteErrorNotificationTemplate: [{\n      type: ViewChild,\n      args: ['deleteErrorNotificationTemplate']\n    }]\n  });\n})();\n\nconst emptyIbanCountriesList = {};\nconst BB_CONTACT_FORM_ADDITIONS_TOKEN = new InjectionToken('BB_CONTACT_FORM_ADDITIONS_TOKEN');\nconst ContactConfigProviders = [{\n  provide: BB_CONTACT_FORM_ADDITIONS_TOKEN,\n  useValue: {\n    additions: undefined\n  }\n}, {\n  provide: BB_CONTACT_IBAN_COUNTRIES_LIST,\n  useValue: emptyIbanCountriesList\n}];\n/**\n * Displays a contact form.\n *\n * The following extension slots are available in this component:\n *  - `ContactsFormCustomizableDirective`\n *\n * @see ContactsFormCustomizableDirective\n * @usageNotes\n *\n * ### Display a form for adding / editing the contact form.\n *\n * ```html\n *  <bb-contacts-form\n *   [item]=\"item\"\n *   [type]=\"itemType$ | async\"\n *   (save)=\"save($event)\"\n *   (cancelEdit)=\"cancelEdit($event)\"\n *   (backEvent)=\"back($event)\"\n *   (deleteContactsItem)=\"deleteContactsItem($event)\"\n * ></bb-contacts-form>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\nclass ContactsFormComponent {\n  constructor(fb, vcRef, platformId, formAdditionsConfig) {\n    this.fb = fb;\n    this.vcRef = vcRef;\n    this.platformId = platformId;\n    this.formAdditionsConfig = formAdditionsConfig;\n    this.hostRef = this;\n    this.submitted = false;\n    this.ibanMask = IbanMask;\n    /**\n     * Controls whether form can be submitted\n     */\n\n    this.disabledSubmit = false;\n    /**\n     * Event emitted when contact edit is saved\n     */\n\n    this.save = new EventEmitter();\n    /**\n     * Event emitted when contact edit is cancelled\n     */\n\n    this.cancelEdit = new EventEmitter();\n    /**\n     * Event emitted when user clicks back\n     */\n\n    this.backEvent = new EventEmitter();\n    /**\n     * Event emitted when contact is deleted\n     */\n\n    this.deleteContactsItem = new EventEmitter();\n    /**\n     * Contact account Type reference.\n     */\n\n    this.createAccountTypeRef = AccountCreateType;\n  }\n  /**\n   * OnInit - lifecycle hook.\n   */\n\n\n  ngOnInit() {\n    if (this.item === undefined) {\n      throw new Error('`item` input is required in `bb-contact-form` component');\n    }\n  }\n  /**\n   * AfterViewInt- lifecycle hook.\n   */\n\n\n  ngAfterViewInit() {\n    var _a;\n\n    if (isPlatformBrowser(this.platformId)) {\n      (_a = this.vcRef.element.nativeElement.querySelector('input')) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }\n  /**\n   * OnChanges - lifecycle hook.\n   *\n   * @param {SimpleChanges} changes angular SimpleChanges object\n   */\n\n\n  ngOnChanges(changes) {\n    if (changes.type) {\n      this.submitted = false;\n      this.contactsForm = this.createFormGroupInstance();\n    }\n  }\n\n  createFormGroupInstance() {\n    const {\n      additions\n    } = Object.assign({}, this.formAdditionsConfig);\n    return this.fb.group(Object.assign({\n      name: [this.item.name],\n      IBAN: [this.item.IBAN],\n      accountNumber: [this.item.accountNumber],\n      email: [this.item.email],\n      phoneNumber: [this.item.phoneNumber]\n    }, additions ? {\n      additions: this.fb.group(additions)\n    } : {}));\n  }\n  /**\n   * saveItem - method that emits the data when saved.\n   */\n\n\n  saveItem() {\n    this.submitted = true;\n\n    if (this.contactsForm.valid) {\n      this.save.emit(Object.assign(Object.assign({}, this.item), this.contactsForm ? this.contactsForm.value : {}));\n    } else {\n      this.contactsForm.markAllAsTouched();\n    }\n  }\n  /**\n   * emits the id of the contact that has cancelled.\n   */\n\n\n  cancel() {\n    this.cancelEdit.emit(this.item.id);\n  }\n  /**\n   * emits the id, when back is clicked.\n   */\n\n\n  back() {\n    this.backEvent.emit(this.item.id);\n  }\n\n  get name() {\n    return this.contactsForm.get('name');\n  }\n\n  get iban() {\n    return this.contactsForm.get('IBAN');\n  }\n\n  get accountNumber() {\n    return this.contactsForm.get('accountNumber');\n  }\n  /**\n   *  the id of the contact is emitted when deleted.\n   */\n\n\n  deleteItemEmit() {\n    this.deleteContactsItem.emit(this.item.id);\n  }\n\n}\n/** @nocollapse */\n\n\nContactsFormComponent.ɵfac = function ContactsFormComponent_Factory(t) {\n  return new (t || ContactsFormComponent)(i0.ɵɵdirectiveInject(i1$2.FormBuilder), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(BB_CONTACT_FORM_ADDITIONS_TOKEN, 8));\n};\n/** @nocollapse */\n\n\nContactsFormComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ContactsFormComponent,\n  selectors: [[\"bb-contacts-form\"]],\n  inputs: {\n    item: \"item\",\n    type: \"type\",\n    disabledSubmit: \"disabledSubmit\"\n  },\n  outputs: {\n    save: \"save\",\n    cancelEdit: \"cancelEdit\",\n    backEvent: \"backEvent\",\n    deleteContactsItem: \"deleteContactsItem\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: function () {\n    let i18n_34;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Label for contacts detail component name\n       * @meaning Contacts name label \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___35 = goog.getMsg(\"Name\");\n      i18n_34 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___35;\n    } else {\n      i18n_34 = $localize`:Contacts name label | Label for contacts detail component name@@contact-manager-form.label.name:Name`;\n    }\n\n    let i18n_36;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Text for contacts detail component name required\n       *                 error\n       * @meaning Contacts name required error text \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___37 = goog.getMsg(\" Name is required \");\n      i18n_36 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___37;\n    } else {\n      i18n_36 = $localize`:Contacts name required error text | Text for contacts detail component name required\n                error@@contact-manager-form.label.nameRequired: Name is required `;\n    }\n\n    let i18n_38;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Save button text for saving a contact item\n       * @meaning Save current form \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___39 = goog.getMsg(\" Save \");\n      i18n_38 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___39;\n    } else {\n      i18n_38 = $localize`:Save current form | Save button text for saving a contact item@@contact-manager-form.button.save: Save `;\n    }\n\n    let i18n_40;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Back button text for going back to selection\n       * @meaning Back action in current form \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___41 = goog.getMsg(\" Back \");\n      i18n_40 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___41;\n    } else {\n      i18n_40 = $localize`:Back action in current form | Back button text for going back to selection@@contact-manager-form.button.back: Back `;\n    }\n\n    let i18n_42;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Cancel button text for cancelling a creation of a new\n       *           contact\n       * @meaning Cancel action in current form \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___43 = goog.getMsg(\" Cancel \");\n      i18n_42 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___43;\n    } else {\n      i18n_42 = $localize`:Cancel action in current form | Cancel button text for cancelling a creation of a new\n          contact@@contact-manager-form.button.cancel: Cancel `;\n    }\n\n    let i18n_44;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___45 = goog.getMsg(\"IBAN\");\n      i18n_44 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___45;\n    } else {\n      i18n_44 = $localize`:@@contact-manager-form.label.bban:IBAN`;\n    }\n\n    let i18n_46;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Text for contacts detail component iban invalid\n       *             error\n       * @meaning Contacts account number invalid error text \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___47 = goog.getMsg(\" Invalid IBAN \");\n      i18n_46 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___47;\n    } else {\n      i18n_46 = $localize`:Contacts account number invalid error text | Text for contacts detail component iban invalid\n            error@@contact-manager-form.label.ibanInvalid: Invalid IBAN `;\n    }\n\n    let i18n_49;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___50 = goog.getMsg(\"Account number\");\n      i18n_49 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___50;\n    } else {\n      i18n_49 = $localize`:@@contact-manager-form.label.account.number:Account number`;\n    }\n\n    let i18n_51;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___52 = goog.getMsg(\" Email {$startSmallText}E.g. sarawilliams@backbase.com{$closeSmallText}\", {\n        \"startSmallText\": \"\\uFFFD#3\\uFFFD\",\n        \"closeSmallText\": \"\\uFFFD/#3\\uFFFD\"\n      });\n      i18n_51 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___52;\n    } else {\n      i18n_51 = $localize`:@@contact-personal-data.contactEmail.label: Email ${\"\\uFFFD#3\\uFFFD\"}:START_SMALL_TEXT:E.g. sarawilliams@backbase.com${\"\\uFFFD/#3\\uFFFD\"}:CLOSE_SMALL_TEXT:`;\n    }\n\n    let i18n_53;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Text for contacts detail component email invalid\n       *           error\n       * @meaning Contacts email id invalid error text \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___54 = goog.getMsg(\" Invalid email \");\n      i18n_53 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___54;\n    } else {\n      i18n_53 = $localize`:Contacts email id invalid error text | Text for contacts detail component email invalid\n          error@@contact-manager-form.label.email.invalid: Invalid email `;\n    }\n\n    let i18n_55;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___56 = goog.getMsg(\" Phone number {$startSmallText}E.g. +12027953213{$closeSmallText}\", {\n        \"startSmallText\": \"\\uFFFD#3\\uFFFD\",\n        \"closeSmallText\": \"\\uFFFD/#3\\uFFFD\"\n      });\n      i18n_55 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___56;\n    } else {\n      i18n_55 = $localize`:@@contact-manager-form.label.phoneNumber: Phone number ${\"\\uFFFD#3\\uFFFD\"}:START_SMALL_TEXT:E.g. +12027953213${\"\\uFFFD/#3\\uFFFD\"}:CLOSE_SMALL_TEXT:`;\n    }\n\n    let i18n_57;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Text for contacts detail component account number required\n       *             error\n       * @meaning Contacts account number required error text \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS____58 = goog.getMsg(\" Account number is required \");\n      i18n_57 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS____58;\n    } else {\n      i18n_57 = $localize`:Contacts account number required error text | Text for contacts detail component account number required\n            error@@contact-manager-form.label.account.required: Account number is required `;\n    }\n\n    let i18n_59;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Text for contacts detail component IBAN required\n       *             error\n       * @meaning Contacts IBAN required error text \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS____60 = goog.getMsg(\" IBAN is required \");\n      i18n_59 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS____60;\n    } else {\n      i18n_59 = $localize`:Contacts IBAN required error text | Text for contacts detail component IBAN required\n            error@@contact-manager-form.label.iban.required: IBAN is required `;\n    }\n\n    let i18n_61;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Text for contacts detail component Phone required\n       *             error\n       * @meaning Contacts Phone number required error text \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS____62 = goog.getMsg(\" Phone number is required \");\n      i18n_61 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS____62;\n    } else {\n      i18n_61 = $localize`:Contacts Phone number required error text | Text for contacts detail component Phone required\n            error@@contact-manager-form.label.phone.number.required: Phone number is required `;\n    }\n\n    let i18n_63;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Text for contacts detail component Email required\n       *             error\n       * @meaning Contacts EMAIL required error text \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS____64 = goog.getMsg(\" Email is required \");\n      i18n_63 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS____64;\n    } else {\n      i18n_63 = $localize`:Contacts EMAIL required error text | Text for contacts detail component Email required\n            error@@contact-manager-form.label.email.required: Email is required `;\n    }\n\n    return [[\"bbContactsFormCustomizable\", \"\", 3, \"bbHostRef\", \"bbTemplateContext\"], [\"bbContactsFormCustomizable\", \"\"], [3, \"showDetail\", \"item\", \"type\", \"deleteContactsItem\"], [4, \"ngIf\"], [\"class\", \"bb-block bb-block--xl\", 3, \"hidden\", \"formGroup\", \"submit\", 4, \"ngIf\"], [\"iban\", \"\"], [\"bban\", \"\"], [\"email\", \"\"], [\"phone\", \"\"], [\"err\", \"\"], [1, \"bb-block\", \"bb-block--xl\", 3, \"hidden\", \"formGroup\", \"submit\"], [1, \"row\"], [\"data-role\", \"contact-account-info-account-name1\", 1, \"bb-block\", \"bb-block--xl\", \"col-12\"], [\"id\", \"bb-create-contact-name\", \"data-role\", \"new-contact-name\", \"label\", i18n_34, \"bbNoWhiteSpace\", \"\", 3, \"formControl\", \"maxLength\", \"required\"], [\"role\", \"alert\", 1, \"position-absolute\", 3, \"showErrors\"], [\"data-role\", \"missing-account-name\"], i18n_36, [1, \"bb-block\", \"bb-block--xl\", \"col-12\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [1, \"bb-button-bar\", \"bb-button-bar--spacing-sm\"], [\"bbButton\", \"\", \"type\", \"submit\", \"color\", \"primary\", \"name\", \"save\", \"data-role\", \"save-button\", 1, \"bb-button-bar__button\", 3, \"disabled\"], i18n_38, [\"bbButton\", \"\", \"color\", \"secondary\", \"type\", \"button\", \"name\", \"back\", \"data-role\", \"contacts-form-back-button\", 1, \"bb-button-bar__button\", 3, \"click\"], i18n_40, [\"bbButton\", \"\", \"color\", \"link-text\", \"type\", \"button\", \"name\", \"cancel\", \"data-role\", \"contacts-form-cancel-button\", 1, \"bb-button-bar__button\", \"bb-button-bar__button--across\", 3, \"click\"], i18n_42, [4, \"ngTemplateOutlet\"], [\"id\", \"bb-create-contact-iban\", \"label\", i18n_44, \"data-role\", \"new-contact-iban\", \"bbIbanValidator\", \"\", 3, \"formControl\", \"maxLength\", \"required\", \"mask\", \"maskValidator\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"data-role\", \"invalid-account-number-error-label\"], i18n_46, [\"id\", \"bb-create-contact-bban\", \"label\", i18n_49, \"data-role\", \"new-contact-bban\", 3, \"formControl\", \"maxLength\", \"required\"], [\"id\", \"bb-create-contact-email-label\", \"data-role\", \"contact-account-create-email-label\", 1, \"mb-2\"], [\"contactsEmailLabel\", \"\"], i18n_51, [1, \"d-block\", \"bb-text-support\", \"bb-text-default\"], [\"data-role\", \"new-contact-email\", \"bbEmailDomainValidator\", \"\", 3, \"aria-labelledby\", \"formControl\", \"maxLength\", \"required\"], [\"data-role\", \"invalid-email-error-label\"], i18n_53, [\"id\", \"bb-create-contact-phone-label\", \"data-role\", \"contact-account-create-phone\", 1, \"mb-2\"], [\"contactsPhoneLabel\", \"\"], i18n_55, [\"id\", \"example-number\", 1, \"d-block\", \"bb-text-support\", \"bb-text-default\"], [\"aria-describedby\", \"example-number\", \"data-role\", \"new-contact-phone\", 3, \"formControl\", \"maxLength\", \"required\", \"aria-labelledby\"], [\"data-role\", \"missing-account-number-error-label\", 4, \"ngSwitchCase\"], [\"data-role\", \"missing-phone-number-error-label\", 4, \"ngSwitchCase\"], [\"data-role\", \"missing-email-error-label\", 4, \"ngSwitchCase\"], [\"data-role\", \"missing-account-number-error-label\"], i18n_57, i18n_59, [\"data-role\", \"missing-phone-number-error-label\"], i18n_61, [\"data-role\", \"missing-email-error-label\"], i18n_63];\n  },\n  template: function ContactsFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵtemplate(1, ContactsFormComponent_ng_template_1_Template, 13, 5, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"bbHostRef\", ctx.hostRef)(\"bbTemplateContext\", ctx.item);\n    }\n  },\n  directives: function () {\n    return [ContactsFormCustomizableDirective, ContactsDetailComponent, i2$1.NgIf, i7.LoadingIndicatorComponent, i1$2.ɵNgNoValidate, i1$2.NgControlStatusGroup, i1$2.FormGroupDirective, i4$1.InputTextComponent, i8.NoWhiteSpaceValidatorDirective, i1$2.NgControlStatus, i1$2.FormControlDirective, i1$2.RequiredValidator, i5.InputValidationMessageComponent, i2$1.NgSwitch, i2$1.NgSwitchCase, i2$1.NgSwitchDefault, i6.ButtonDirective, i2$1.NgTemplateOutlet, i8.IbanValidatorDirective, i6$1.InputEmailComponent, i8.EmailDomainValidatorDirective];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsFormComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-contacts-form',\n      templateUrl: './contacts-form.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i1$2.FormBuilder\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [BB_CONTACT_FORM_ADDITIONS_TOKEN]\n      }]\n    }];\n  }, {\n    item: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    disabledSubmit: [{\n      type: Input\n    }],\n    save: [{\n      type: Output\n    }],\n    cancelEdit: [{\n      type: Output\n    }],\n    backEvent: [{\n      type: Output\n    }],\n    deleteContactsItem: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * This is an extension slot to be used for customizing an form of contacts editing.\n *\n * @usageNotes\n *\n * ### Display a contact form.\n *\n * ```html\n *  <bb-contacts-detail\n *   [showDetail]=\"false\"\n *   [item]=\"hostRef.item\"\n *   [type]=\"hostRef.type\"\n *   (deleteContactsItem)=\"hostRef.deleteItemEmit()\"\n * ></bb-contacts-detail>\n * <form\n *  *ngIf=\"hostRef.contactsForm\"\n *   (submit)=\"hostRef.saveItem()\"\n *   [formGroup]=\"hostRef.contactsForm\"\n *   class=\"bb-block bb-block--xl\"\n * >\n *   <fieldSet>\n *     <div class=\"row\">\n *       <div\n *         class=\"bb-block bb-block--lg col-12\"\n *         data-role=\"contact-account-info-account-name1\"\n *       >\n *         <label\n *           [for]=\"contactsName.id\"\n *           data-role=\"edit-contact-label\"\n *           i18n=\"Contacts name label | Label for contacts detail component name@@contact-manager-form.label.name\"\n *         >\n *           Name\n *         </label>\n *         <bb-input-text-ui\n *           data-role=\"new-contact-name\"\n *           [formControl]=\"hostRef.contactsForm.controls.name\"\n *           name=\"contactsName\"\n *           #contactsName\n *           [maxLength]=\"140\"\n *           [required]=\"hostRef.submitted\"\n *         >\n *         </bb-input-text-ui>\n *\n *         <bb-input-validation-message-ui\n *           role=\"alert\"\n *           [showErrors]=\"\n *             hostRef.contactsForm.controls.name.invalid &&\n *             (hostRef.contactsForm.controls.name.dirty || hostRef.contactsForm.controls.name.touched)\n *           \">\n *           <ng-container\n *           *ngIf=\"hostRef.contactsForm.controls.name.errors?.required || hostRef.contactsForm.controls.name.errors?.minlength\">\n *             <span\n *               i18n=\"\n *                 Contacts name required error text | Text for contacts detail component name required\n *                 error@@contact-manager-form.label.nameRequired\n *               \"\n *               data-role=\"missing-account-name\">\n *               Name is required\n *             </span>\n *           </ng-container>\n *         </bb-input-validation-message-ui>\n *       </div>\n *       <div class=\"bb-block bb-block--lg col-12\">\n *         <ng-container [ngSwitch]=\"hostRef.type\">\n *           <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.IBAN\">\n *             <ng-container *ngTemplateOutlet=\"iban\"></ng-container>\n *           </ng-container>\n *           <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.EMAIL\">\n *             <ng-container *ngTemplateOutlet=\"email\"></ng-container>\n *           </ng-container>\n *           <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.PHONE\">\n *             <ng-container *ngTemplateOutlet=\"phone\"></ng-container>\n *           </ng-container>\n *           <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.ACCOUNT\">\n *             <ng-container *ngTemplateOutlet=\"bban\"></ng-container>\n *           </ng-container>\n *           <ng-container *ngSwitchDefault>\n *             <ng-container *ngTemplateOutlet=\"iban\"></ng-container>\n *           </ng-container>\n *         </ng-container>\n *\n *       </div>\n *     </div>\n *   </fieldSet>\n *   <div class=\"bb-button-bar\">\n *     <button\n *       bbButton\n *       type=\"submit\"\n *       color=\"primary\"\n *       type=\"submit\"\n *       [disabled]=\"hostRef.contactsForm.invalid || !hostRef.contactsForm?.controls?.name?.value.trim()\"\n *       class=\"bb-button-bar__button\"\n *       name=\"save\"\n *       data-role=\"save-button\"\n *       i18n=\"Save current form | Save button text for saving a contact item@@contact-manager-form.button.save\"\n *     >\n *       Save\n *     </button>\n *     <button\n *     bbButton\n *     color=\"secondary\"\n *     (click)=\"hostRef.back()\"\n *     type=\"button\"\n *     class=\"bb-button-bar__button\"\n *     name=\"back\"\n *     data-role=\"contacts-form-back-button\"\n *     i18n=\"\n *       Back action in current form | Back button text for going back to selection@@contact-manager-form.button.back\n *     \"\n *   >\n *     Back\n *   </button>\n *     <button\n *       bbButton\n *       color=\"link-text\"\n *       (click)=\"hostRef.cancel()\"\n *       type=\"button\"\n *       class=\"bb-button-bar__button bb-button-bar__button--across\"\n *       name=\"cancel\"\n *       data-role=\"contacts-form-cancel-button\"\n *       i18n=\"\n *         Cancel action in current form | Cancel button text for cancelling a creation of a new\n *         contact@@contact-manager-form.button.cancel\n *       \"\n *     >\n *       Cancel\n *     </button>\n *   </div>\n * </form>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsFormCustomizableDirective extends BbTemplate {}\n/** @nocollapse */\n\n\nContactsFormCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵContactsFormCustomizableDirective_BaseFactory;\n  return function ContactsFormCustomizableDirective_Factory(t) {\n    return (ɵContactsFormCustomizableDirective_BaseFactory || (ɵContactsFormCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ContactsFormCustomizableDirective)))(t || ContactsFormCustomizableDirective);\n  };\n}();\n/** @nocollapse */\n\n\nContactsFormCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ContactsFormCustomizableDirective,\n  selectors: [[\"\", \"bbContactsFormCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsFormCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbContactsFormCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * This is an extension slot to be used for customizing success notification after creating a contact\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsCreateSuccessNotificationCustomizable>\n *   <span\n *     i18n=\"@@contact-manager-form-container.notification-create.success\"\n *     data-role=\"successfully-saved-contact\"\n *     role=\"alert\"\n *     aria-atomic=\"true\"\n *   >\n *     Successfully saved Contact\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsCreateSuccessNotificationCustomizableDirective extends BbTemplate {}\n/** @nocollapse */\n\n\nContactsCreateSuccessNotificationCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵContactsCreateSuccessNotificationCustomizableDirective_BaseFactory;\n  return function ContactsCreateSuccessNotificationCustomizableDirective_Factory(t) {\n    return (ɵContactsCreateSuccessNotificationCustomizableDirective_BaseFactory || (ɵContactsCreateSuccessNotificationCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ContactsCreateSuccessNotificationCustomizableDirective)))(t || ContactsCreateSuccessNotificationCustomizableDirective);\n  };\n}();\n/** @nocollapse */\n\n\nContactsCreateSuccessNotificationCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ContactsCreateSuccessNotificationCustomizableDirective,\n  selectors: [[\"\", \"bbContactsCreateSuccessNotificationCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsCreateSuccessNotificationCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbContactsCreateSuccessNotificationCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * This is an extension slot to be used for customizing error notification after creating a contact\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsCreateErrorNotificationCustomizable>\n *   <span\n *     i18n=\"@@contact-manager-form-container.notification-create.error\"\n *     data-role=\"failed-to-save-contact\"\n *     role=\"alert\"\n *     aria-atomic=\"true\"\n *   >\n *     Error saving Contact\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsCreateErrorNotificationCustomizableDirective extends BbTemplate {}\n/** @nocollapse */\n\n\nContactsCreateErrorNotificationCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵContactsCreateErrorNotificationCustomizableDirective_BaseFactory;\n  return function ContactsCreateErrorNotificationCustomizableDirective_Factory(t) {\n    return (ɵContactsCreateErrorNotificationCustomizableDirective_BaseFactory || (ɵContactsCreateErrorNotificationCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ContactsCreateErrorNotificationCustomizableDirective)))(t || ContactsCreateErrorNotificationCustomizableDirective);\n  };\n}();\n/** @nocollapse */\n\n\nContactsCreateErrorNotificationCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ContactsCreateErrorNotificationCustomizableDirective,\n  selectors: [[\"\", \"bbContactsCreateErrorNotificationCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsCreateErrorNotificationCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbContactsCreateErrorNotificationCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * This is an extension slot to be used for customizing success notification after editing a contact\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsEditSuccessNotificationCustomizable>\n *   <span\n *     i18n=\"@@contact-manager-form-container.notification-edit.success\"\n *     data-role=\"successfully-saved-contact\"\n *     role=\"alert\"\n *     aria-atomic=\"true\"\n *   >\n *     Successfully saved Contact\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsEditSuccessNotificationCustomizableDirective extends BbTemplate {}\n/** @nocollapse */\n\n\nContactsEditSuccessNotificationCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵContactsEditSuccessNotificationCustomizableDirective_BaseFactory;\n  return function ContactsEditSuccessNotificationCustomizableDirective_Factory(t) {\n    return (ɵContactsEditSuccessNotificationCustomizableDirective_BaseFactory || (ɵContactsEditSuccessNotificationCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ContactsEditSuccessNotificationCustomizableDirective)))(t || ContactsEditSuccessNotificationCustomizableDirective);\n  };\n}();\n/** @nocollapse */\n\n\nContactsEditSuccessNotificationCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ContactsEditSuccessNotificationCustomizableDirective,\n  selectors: [[\"\", \"bbContactsEditSuccessNotificationCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsEditSuccessNotificationCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbContactsEditSuccessNotificationCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * This is an extension slot to be used for customizing error notification after editing a contact\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsEditErrorNotificationCustomizable>\n *   <span\n *     i18n=\"@@contact-manager-form-container.notification-edit.error\"\n *     data-role=\"failed-to-save-contact\"\n *     role=\"alert\"\n *     aria-atomic=\"true\"\n *   >\n *     Error saving Contact\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsEditErrorNotificationCustomizableDirective extends BbTemplate {}\n/** @nocollapse */\n\n\nContactsEditErrorNotificationCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵContactsEditErrorNotificationCustomizableDirective_BaseFactory;\n  return function ContactsEditErrorNotificationCustomizableDirective_Factory(t) {\n    return (ɵContactsEditErrorNotificationCustomizableDirective_BaseFactory || (ɵContactsEditErrorNotificationCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ContactsEditErrorNotificationCustomizableDirective)))(t || ContactsEditErrorNotificationCustomizableDirective);\n  };\n}();\n/** @nocollapse */\n\n\nContactsEditErrorNotificationCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ContactsEditErrorNotificationCustomizableDirective,\n  selectors: [[\"\", \"bbContactsEditErrorNotificationCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsEditErrorNotificationCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbContactsEditErrorNotificationCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * This is an extension slot to be used for customizing confirmation dialog of discarding changes\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsEditDiscardConfirmationCustomizable let-hostRef let-context=\"context\">\n *   <div class=\"modal-header\">\n *     <h4 i18n=\"@contact-manager-form-container.header.discardChanges\" class=\"modal-title\">Discard Changes</h4>\n *   </div>\n *   <div class=\"modal-body\" role=\"alert\">\n *     <p i18n=\"@@contact-manager-form-container.discardChangesConfirmation\">\n *       Are you sure you want to discard your changes? This action cannot be undone.\n *     </p>\n *   </div>\n *   <div class=\"modal-footer\">\n *     <div class=\"d-flex flex-row-reverse\">\n *       <button\n *         class=\"ml-3\"\n *         bbButton\n *         color=\"danger\"\n *         i18n=\"@@contact-manager-form-container.button.discard\"\n *         type=\"button\"\n *         (click)=\"hostRef.discardChanges()\"\n *       >\n *         Discard\n *       </button>\n *       <button\n *         i18n=\"@@contact-manager-form-container.button.cancel\"\n *         type=\"button\"\n *         bbButton\n *         color=\"secondary\"\n *         (click)=\"context.dismiss()\"\n *       >\n *         Not now\n *       </button>\n *     </div>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsEditDiscardConfirmationCustomizableDirective extends BbTemplate {}\n/** @nocollapse */\n\n\nContactsEditDiscardConfirmationCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵContactsEditDiscardConfirmationCustomizableDirective_BaseFactory;\n  return function ContactsEditDiscardConfirmationCustomizableDirective_Factory(t) {\n    return (ɵContactsEditDiscardConfirmationCustomizableDirective_BaseFactory || (ɵContactsEditDiscardConfirmationCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ContactsEditDiscardConfirmationCustomizableDirective)))(t || ContactsEditDiscardConfirmationCustomizableDirective);\n  };\n}();\n/** @nocollapse */\n\n\nContactsEditDiscardConfirmationCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ContactsEditDiscardConfirmationCustomizableDirective,\n  selectors: [[\"\", \"bbContactsEditDiscardConfirmationCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsEditDiscardConfirmationCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbContactsEditDiscardConfirmationCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * Container component for showing contact details.\n *\n * @usageNotes\n *\n * ### Display create/ edit form for contacts\n *\n * ```html\n * <bb-contacts-form-container></bb-contacts-form-container>\n * ```\n *\n * ### Additionally use the container component in routing.\n *\n * ```typescript\n * const routes: [\n *   {\n *   path: 'edit/:id/:type',\n *   canDeactivate: [CanDeactivateGuard],\n *   component: ContactsFormContainerComponent,\n * }]\n *\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsFormContainerComponent {\n  constructor(service, route, navigation, notificationService, propertiesService, cdr) {\n    this.service = service;\n    this.route = route;\n    this.navigation = navigation;\n    this.notificationService = notificationService;\n    this.propertiesService = propertiesService;\n    this.cdr = cdr;\n    this.hostRef = this;\n    this.itemId = this.route.paramMap.pipe(map(params => params.get('id')));\n    this.itemType$ = this.route.paramMap.pipe(map(params => params.get('type')));\n    this.item = this.service.item.pipe(map(item => this.fromService(item)));\n    this.notificationTimeout$ = this.propertiesService.notificationDismissTime$;\n    this.isDiscardConfirmOpened = false;\n    this.discard$ = new Subject();\n    this.isPendingRequest = false;\n    service.getItemFrom(this.itemId);\n  }\n  /**\n   * onInit - lifecycle hook for setting current view.\n   */\n\n\n  ngOnInit() {\n    this.navigation.currentView = View.Edit;\n    this.isPendingRequest = false;\n  }\n  /**\n   * Calling the save api and showing the notification.\n   *\n   * @param {ContactsFormItem} item - Contact Object while save\n   */\n\n\n  save(item) {\n    this.isPendingRequest = true;\n    this.itemId.pipe(mergeMap(() => this.service.save(this.toService(item))), catchError(() => of(undefined)), withLatestFrom(this.notificationTimeout$), map(([id, timeout]) => ({\n      id,\n      timeout\n    })), take(1)).subscribe(({\n      id,\n      timeout\n    }) => {\n      this.isPendingRequest = false;\n      this.formComponent.contactsForm.markAsPristine();\n\n      if (id) {\n        this.navigation.select(id);\n        this.notificationService.showNotification({\n          header: item.id ? this.notificationEditSuccessTemplate : this.notificationCreateSuccessTemplate,\n          message: '',\n          modifier: 'success',\n          ttl: timeout\n        });\n      } else {\n        this.notificationService.showNotification({\n          header: item.id ? this.notificationEditErrorTemplate : this.notificationCreateErrorTemplate,\n          message: '',\n          modifier: 'error',\n          ttl: timeout\n        });\n      }\n\n      this.navigation.currentView = View.List;\n      this.navigation.list();\n    });\n  }\n  /**\n   * showing the confirmation modal, when moving away from route.\n   *\n   * @returns {Promise<boolean> | boolean} whether route can be deactivated\n   */\n\n\n  canDeactivate() {\n    var _a, _b;\n\n    if ((_b = (_a = this.formComponent) === null || _a === void 0 ? void 0 : _a.contactsForm) === null || _b === void 0 ? void 0 : _b.dirty) {\n      this.isDiscardConfirmOpened = true;\n      this.discard$.complete();\n      this.discard$ = new Subject();\n      this.cdr.markForCheck();\n      return this.discard$;\n    }\n\n    return true;\n  }\n  /**\n   *  When the Edit is cancelled. It determines if it should show the selected contact or list\n   *\n   * @param {string} id - Contact Id.\n   */\n\n\n  cancelEdit(id) {\n    if (id) {\n      this.navigation.select(id);\n      this.navigation.currentView = View.Detail;\n    } else {\n      this.navigation.list();\n      this.navigation.currentView = View.List;\n    }\n  }\n  /**\n   * Method to go to previous screen based on id\n   *\n   * @param {string | undefined} id - Contact Id\n   */\n\n\n  back(id) {\n    if (id) {\n      this.navigation.list();\n      this.navigation.currentView = View.List;\n    } else {\n      this.navigation.newContact();\n      this.navigation.currentView = View.Select;\n    }\n  }\n  /**\n   *\n   * @param {ContactItem | undefined} item Contact object.\n   * @returns {ContactsFormItem} The transformed contact Object when returned from API.\n   */\n  // eslint-disable-next-line complexity\n\n\n  fromService(item) {\n    if (item) {\n      return {\n        id: item.id,\n        name: item.name,\n        IBAN: item.accounts && item.accounts[0] && item.accounts[0].IBAN ? item.accounts[0].IBAN : undefined,\n        accountNumber: item.accounts && item.accounts[0] && item.accounts[0].accountNumber ? item.accounts[0].accountNumber : undefined,\n        email: item.accounts && item.accounts[0] && item.accounts[0].email ? item.accounts[0].email : undefined,\n        phoneNumber: item.accounts && item.accounts[0] && item.accounts[0].phoneNumber ? item.accounts[0].phoneNumber : undefined,\n        accounts: item.accounts || [],\n        additions: item.additions || {}\n      };\n    } else {\n      return {\n        id: '',\n        name: '',\n        surname: '',\n        initials: '',\n        accounts: [],\n        additions: {}\n      };\n    }\n  }\n  /**\n   *\n   * @param {ContactsFormItem} item Contact Object\n   * @returns {ContactItem} The trandformed contact object when submitting to API.\n   */\n\n\n  toService(item) {\n    return Object.assign({\n      id: item.id,\n      name: item.name,\n      accounts: [Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, item.accounts && item.accounts[0] ? item.accounts[0] : {}), item.IBAN ? {\n        IBAN: item.IBAN\n      } : {}), item.accountNumber ? {\n        accountNumber: item.accountNumber\n      } : {}), item.phoneNumber ? {\n        phoneNumber: item.phoneNumber\n      } : {}), item.email ? {\n        email: item.email\n      } : {})]\n    }, item.additions ? {\n      additions: item.additions\n    } : {});\n  }\n  /**\n   * Method that calls the delete api and returns to the list.\n   *\n   * @param {string} id Contact Id to be deleted\n   */\n\n\n  deleteContactsItem(id) {\n    this.service.delete(id);\n    this.navigation.list();\n    this.navigation.currentView = View.List;\n  }\n  /**\n   * event handler for confirming discard\n   */\n\n\n  onConfirmDiscard() {\n    this.discard$.next(true);\n    this.discard$.complete();\n    this.isDiscardConfirmOpened = false;\n  }\n  /**\n   * event handler for canceling discard\n   */\n\n\n  onCancelDiscard() {\n    this.discard$.next(false);\n    this.discard$.complete();\n    this.isDiscardConfirmOpened = false;\n  }\n\n}\n/** @nocollapse */\n\n\nContactsFormContainerComponent.ɵfac = function ContactsFormContainerComponent_Factory(t) {\n  return new (t || ContactsFormContainerComponent)(i0.ɵɵdirectiveInject(ContactsService), i0.ɵɵdirectiveInject(i2$2.ActivatedRoute), i0.ɵɵdirectiveInject(ContactsNavigationService), i0.ɵɵdirectiveInject(i4.NotificationService), i0.ɵɵdirectiveInject(ContactManagerPreferencesService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n/** @nocollapse */\n\n\nContactsFormContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ContactsFormContainerComponent,\n  selectors: [[\"bb-contacts-form-container\"]],\n  viewQuery: function ContactsFormContainerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(ContactsFormComponent, 5);\n      i0.ɵɵviewQuery(_c65, 5);\n      i0.ɵɵviewQuery(_c66, 5);\n      i0.ɵɵviewQuery(_c67, 5);\n      i0.ɵɵviewQuery(_c68, 5);\n      i0.ɵɵviewQuery(_c69, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formComponent = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.notificationCreateSuccessTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.notificationCreateErrorTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.notificationEditSuccessTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.notificationEditErrorTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.discardChangesModalContent = _t.first);\n    }\n  },\n  decls: 14,\n  vars: 5,\n  consts: function () {\n    let i18n_70;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___71 = goog.getMsg(\" Successfully saved Contact \");\n      i18n_70 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___71;\n    } else {\n      i18n_70 = $localize`:@@contact-manager-form-container.notification-create.success: Successfully saved Contact `;\n    }\n\n    let i18n_72;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___73 = goog.getMsg(\" Error saving Contact \");\n      i18n_72 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___73;\n    } else {\n      i18n_72 = $localize`:@@contact-manager-form-container.notification-create.error: Error saving Contact `;\n    }\n\n    let i18n_74;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___75 = goog.getMsg(\" Successfully saved Contact \");\n      i18n_74 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___75;\n    } else {\n      i18n_74 = $localize`:@@contact-manager-form-container.notification-edit.success: Successfully saved Contact `;\n    }\n\n    let i18n_76;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___77 = goog.getMsg(\" Error saving Contact \");\n      i18n_76 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___77;\n    } else {\n      i18n_76 = $localize`:@@contact-manager-form-container.notification-edit.error: Error saving Contact `;\n    }\n\n    let i18n_78;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__79 = goog.getMsg(\"Loading...\");\n      i18n_78 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__79;\n    } else {\n      i18n_78 = $localize`:@@contact-manager-form-container.loading.label:Loading...`;\n    }\n\n    let i18n_80;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc \\@contact-manager-form-container.header.discardChanges\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__81 = goog.getMsg(\"Discard Changes\");\n      i18n_80 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__81;\n    } else {\n      i18n_80 = $localize`:@contact-manager-form-container.header.discardChanges:Discard Changes`;\n    }\n\n    let i18n_82;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__83 = goog.getMsg(\" Are you sure you want to discard your changes? This action cannot be undone. \");\n      i18n_82 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__83;\n    } else {\n      i18n_82 = $localize`:@@contact-manager-form-container.discardChangesConfirmation: Are you sure you want to discard your changes? This action cannot be undone. `;\n    }\n\n    let i18n_84;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__85 = goog.getMsg(\"Not now\");\n      i18n_84 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__85;\n    } else {\n      i18n_84 = $localize`:@@contact-manager-form-container.button.cancel:Not now`;\n    }\n\n    let i18n_86;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__87 = goog.getMsg(\"Discard\");\n      i18n_86 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__87;\n    } else {\n      i18n_86 = $localize`:@@contact-manager-form-container.button.discard:Discard`;\n    }\n\n    return [[4, \"ngIf\", \"ngIfElse\"], [\"notificationCreateSuccess\", \"\"], [\"notificationCreateError\", \"\"], [\"notificationEditSuccess\", \"\"], [\"notificationEditError\", \"\"], [\"loadingTemplate\", \"\"], [\"bbContactsEditDiscardConfirmationCustomizable\", \"\", 3, \"bbHostRef\"], [\"bbContactsEditDiscardConfirmationCustomizable\", \"\"], [3, \"item\", \"type\", \"disabledSubmit\", \"save\", \"cancelEdit\", \"backEvent\", \"deleteContactsItem\"], [\"bbContactsCreateSuccessNotificationCustomizable\", \"\", 3, \"bbHostRef\"], [\"bbContactsCreateSuccessNotificationCustomizable\", \"\"], [\"data-role\", \"successfully-saved-contact\", \"role\", \"alert\", \"aria-atomic\", \"true\"], i18n_70, [\"bbContactsCreateErrorNotificationCustomizable\", \"\", 3, \"bbHostRef\"], [\"bbContactsCreateErrorNotificationCustomizable\", \"\"], [\"data-role\", \"failed-to-save-contact\", \"role\", \"alert\", \"aria-atomic\", \"true\"], i18n_72, [\"bbContactsEditSuccessNotificationCustomizable\", \"\", 3, \"bbHostRef\"], [\"bbContactsEditSuccessNotificationCustomizable\", \"\"], i18n_74, [\"bbContactsEditErrorNotificationCustomizable\", \"\", 3, \"bbHostRef\"], [\"bbContactsEditErrorNotificationCustomizable\", \"\"], i18n_76, [1, \"bb-state-container\"], [\"text\", i18n_78], [3, \"isOpen\", \"confirmButtonColor\", \"confirm\", \"cancel\"], [\"title\", \"\"], i18n_80, [\"body\", \"\"], i18n_82, [\"cancelButtonLabel\", \"\"], i18n_84, [\"confirmButtonLabel\", \"\"], i18n_86];\n  },\n  template: function ContactsFormContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ContactsFormContainerComponent_ng_container_0_Template, 3, 5, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, ContactsFormContainerComponent_ng_template_2_Template, 2, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(4, ContactsFormContainerComponent_ng_template_4_Template, 2, 1, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(6, ContactsFormContainerComponent_ng_template_6_Template, 2, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(8, ContactsFormContainerComponent_ng_template_8_Template, 2, 1, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(10, ContactsFormContainerComponent_ng_template_10_Template, 2, 0, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementContainer(12, 6);\n      i0.ɵɵtemplate(13, ContactsFormContainerComponent_ng_template_13_Template, 9, 2, \"ng-template\", 7);\n    }\n\n    if (rf & 2) {\n      const _r9 = i0.ɵɵreference(11);\n\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 3, ctx.item))(\"ngIfElse\", _r9);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"bbHostRef\", ctx.hostRef);\n    }\n  },\n  directives: [i2$1.NgIf, ContactsEditDiscardConfirmationCustomizableDirective, ContactsFormComponent, ContactsCreateSuccessNotificationCustomizableDirective, ContactsCreateErrorNotificationCustomizableDirective, ContactsEditSuccessNotificationCustomizableDirective, ContactsEditErrorNotificationCustomizableDirective, i7.LoadingIndicatorComponent, i8.ConfirmActionDialogComponent],\n  pipes: [i2$1.AsyncPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsFormContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-contacts-form-container',\n      templateUrl: './contacts-form-container.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ContactsService\n    }, {\n      type: i2$2.ActivatedRoute\n    }, {\n      type: ContactsNavigationService\n    }, {\n      type: i4.NotificationService\n    }, {\n      type: ContactManagerPreferencesService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    formComponent: [{\n      type: ViewChild,\n      args: [ContactsFormComponent]\n    }],\n    notificationCreateSuccessTemplate: [{\n      type: ViewChild,\n      args: ['notificationCreateSuccess']\n    }],\n    notificationCreateErrorTemplate: [{\n      type: ViewChild,\n      args: ['notificationCreateError']\n    }],\n    notificationEditSuccessTemplate: [{\n      type: ViewChild,\n      args: ['notificationEditSuccess']\n    }],\n    notificationEditErrorTemplate: [{\n      type: ViewChild,\n      args: ['notificationEditError']\n    }],\n    discardChangesModalContent: [{\n      type: ViewChild,\n      args: ['discardChangesModalContent']\n    }]\n  });\n})();\n/**\n *\n * This guard is called while deactivating the route to check if the form is dirty.\n *\n * @see ContactManagerWidgetModule\n * @usageNotes\n *\n * ### Ensure the ContactManagerWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ContactManagerWidgetModule,\n *   ],\n * })\n * export class ContactManagerWidgetModule {}\n * ```\n *\n * ### Inject this guard into your route\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [{\n *   path: 'edit/:id/:type',\n *   canDeactivate: [CanDeactivateGuard],\n *   component: ContactsFormContainerComponent,\n * },]\n * })\n *  export class ContactManagerWidgetModule {\n * ```\n */\n\n\nclass CanDeactivateGuard {\n  canDeactivate(component) {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n\n}\n/** @nocollapse */\n\n\nCanDeactivateGuard.ɵfac = function CanDeactivateGuard_Factory(t) {\n  return new (t || CanDeactivateGuard)();\n};\n/** @nocollapse */\n\n\nCanDeactivateGuard.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CanDeactivateGuard,\n  factory: CanDeactivateGuard.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CanDeactivateGuard, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Displays a list of all contact types, allowing one to be selected.\n *\n * @usageNotes\n *\n * ### Display a list of types of contact that can be created\n *\n * ```html\n * <bb-contact-account-select-type\n *   [listOfAccountTypes]=\"createContactList$ | async\"\n *   [noOfItemsinList]=\"noOfItemsinList\n * ></bb-contact-account-select-type>\n * ```\n *\n * ### Additionally set the selected contact type\n *\n * ```html\n * <bb-contact-account-select-type\n *   [listOfAccountTypes]=\"createContactList$ | async\"\n *   [noOfItemsinList]=\"noOfItemsinList\n *   (selectedAccountType)=\"selectedAccountType()\"\n * ></bb-contact-account-select-type>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactSelectAccountTypeComponent {\n  constructor(navigation) {\n    this.navigation = navigation;\n    /**\n     * event when account is selected.\n     */\n\n    this.selectedAccountType = new EventEmitter();\n    this.createAccountTypeRef = AccountCreateType;\n  }\n  /**\n   * OnInit lifecycle hook.\n   */\n\n\n  ngOnInit() {\n    var _a;\n\n    this.navigation.currentView = View.Edit;\n\n    if (this.noOfItemsinList === 0 || this.noOfItemsinList === 1) {\n      this.navigation.newContactForm(((_a = this.listOfAccountTypes.find(list => list.enableItem)) === null || _a === void 0 ? void 0 : _a.listItem) || this.createAccountTypeRef.IBAN);\n    }\n  }\n  /**\n   * Update the selected account type for contact creation.\n   *\n   * @param {CreateListType} $event -The selected contact Type details.\n   */\n\n\n  updateCreateContactType($event) {\n    this.navigation.currentView = View.Edit;\n    this.navigation.newContactForm($event.listItem);\n  }\n\n}\n/** @nocollapse */\n\n\nContactSelectAccountTypeComponent.ɵfac = function ContactSelectAccountTypeComponent_Factory(t) {\n  return new (t || ContactSelectAccountTypeComponent)(i0.ɵɵdirectiveInject(ContactsNavigationService));\n};\n/** @nocollapse */\n\n\nContactSelectAccountTypeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ContactSelectAccountTypeComponent,\n  selectors: [[\"bb-contact-account-select-type\"]],\n  inputs: {\n    listOfAccountTypes: \"listOfAccountTypes\",\n    noOfItemsinList: \"noOfItemsinList\"\n  },\n  outputs: {\n    selectedAccountType: \"selectedAccountType\"\n  },\n  decls: 16,\n  vars: 2,\n  consts: function () {\n    let i18n_88;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Title shown when user is in select contact type\n       * @meaning Create new contact heading \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS_89 = goog.getMsg(\" Create new contact \");\n      i18n_88 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS_89;\n    } else {\n      i18n_88 = $localize`:Create new contact heading | Title shown when user is in select contact type@@contact-manager-detail.create.select.heading: Create new contact `;\n    }\n\n    let i18n_90;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS_91 = goog.getMsg(\" Select which information you want to use to create a contact. You can move money with an account number, a phone number or an email \");\n      i18n_90 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS_91;\n    } else {\n      i18n_90 = $localize`:@@create-contact-type-list.select.info.text: Select which information you want to use to create a contact. You can move money with an account number, a phone number or an email `;\n    }\n\n    let i18n_93;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___94 = goog.getMsg(\"With an IBAN \");\n      i18n_93 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___94;\n    } else {\n      i18n_93 = $localize`:@@create-contact-type-list.select.button.text.iban:With an IBAN `;\n    }\n\n    let i18n_95;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___96 = goog.getMsg(\"With an account number \");\n      i18n_95 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___96;\n    } else {\n      i18n_95 = $localize`:@@create-contact-type-list.select.button.text.account:With an account number `;\n    }\n\n    let i18n_97;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___98 = goog.getMsg(\"With an email \");\n      i18n_97 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___98;\n    } else {\n      i18n_97 = $localize`:@@create-contact-type-list.select.button.text.email:With an email `;\n    }\n\n    let i18n_99;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___100 = goog.getMsg(\"With a phone number \");\n      i18n_99 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___100;\n    } else {\n      i18n_99 = $localize`:@@create-contact-type-list.select.button.text.phone:With a phone number `;\n    }\n\n    return [[1, \"bb-block\", \"bb-block--xl\"], [1, \"bb-stack\", \"bb-stack--align-bottom\"], [1, \"bb-stack__item\", \"bb-stack__item--fill\"], [\"data-role\", \"contact-details-info-name\", 1, \"bb-block\"], [\"data-role\", \"create-contact-label\", \"aria-hidden\", \"true\", 1, \"d-none\"], [\"heading\", \"\"], i18n_88, [\"data-role\", \"create-new-contact-label\", \"headingType\", \"h3\", 3, \"heading\"], [1, \"bb-lock\", \"bb-text-support\"], [\"data-role\", \"create-contact-select-new-account-info\", 1, \"bb-bock\"], i18n_90, [1, \"bb-select-payment-option\"], [4, \"ngFor\", \"ngForOf\"], [\"listButton\", \"\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"bb-button-bar\", \"m-3\"], [\"bbButton\", \"\", \"color\", \"unstyled\", 1, \"bb-button-bar__button\", \"bb-button-bar__button--across\", \"bb-inline-stack\", \"col-12\", \"bb-select-payment-option__label\", 3, \"click\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"name\", \"person-outline\", 1, \"bb-inline-stack__item\", \"col\", \"bb-text-support\"], [\"data-role\", \"iban-item\", 1, \"col-10\", \"text-left\"], i18n_93, [1, \"col\"], [\"name\", \"angle-right\", 1, \"bb-inline-stack__item\", \"col-1\", \"bb-text-support\"], [\"data-role\", \"account-number-item\", 1, \"col-10\", \"text-left\"], i18n_95, [\"name\", \"inbox\", 1, \"bb-inline-stack__item\", \"col\", \"bb-text-support\"], [\"data-role\", \"email-item\", 1, \"col-10\", \"text-left\"], i18n_97, [\"name\", \"phone\", 1, \"bb-inline-stack__item\", \"col\", \"bb-text-support\"], [\"data-role\", \"phone-number-item\", 1, \"col-10\", \"text-left\"], i18n_99];\n  },\n  template: function ContactSelectAccountTypeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵelementStart(4, \"span\", 4, 5);\n      i0.ɵɵi18n(6, 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"bb-header-ui\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"hr\");\n      i0.ɵɵelementStart(9, \"div\", 8);\n      i0.ɵɵelementStart(10, \"div\", 9);\n      i0.ɵɵi18n(11, 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 11);\n      i0.ɵɵtemplate(13, ContactSelectAccountTypeComponent_div_13_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, ContactSelectAccountTypeComponent_ng_template_14_Template, 7, 5, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(5);\n\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"heading\", _r0.textContent);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.listOfAccountTypes);\n    }\n  },\n  directives: [i2.HeaderComponent, i2$1.NgForOf, i2$1.NgIf, i2$1.NgTemplateOutlet, i6.ButtonDirective, i2$1.NgSwitch, i2$1.NgSwitchCase, i3.IconComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactSelectAccountTypeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-contact-account-select-type',\n      templateUrl: './contact-select-account-type.component.html'\n    }]\n  }], function () {\n    return [{\n      type: ContactsNavigationService\n    }];\n  }, {\n    listOfAccountTypes: [{\n      type: Input\n    }],\n    noOfItemsinList: [{\n      type: Input\n    }],\n    selectedAccountType: [{\n      type: Output\n    }]\n  });\n})();\n/**\n *\n * Container component for showing contact list.\n *\n * @usageNotes\n *\n * ### Display list of all the types of contacts to select before creation.\n *\n * ```html\n * <bb-contacts-type-list-container></bb-contacts-type-list-container>\n * ```\n * ### Additionally use the container component in routing.\n *\n * ```typescript\n * const routes: [\n * {\n *  path: 'select',\n *  component: ContactsTypeListContainerComponent\n * }]\n *\n *\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsTypeListContainerComponent {\n  constructor(contactService, propertiesService) {\n    this.contactService = contactService;\n    this.propertiesService = propertiesService;\n    /**\n     * property from user if the contact creation through email is allowed\n     */\n\n    this.allowEmail$ = this.propertiesService.createContactEmail$;\n    /**\n     * property from user if the contact creation through IBAN is allowed\n     */\n\n    this.allowIBAN$ = this.propertiesService.createContactIBAN$;\n    /**\n     * property from user if the contact creation through Account Number is allowed\n     */\n\n    this.allowAccount$ = this.propertiesService.createContactAccount$;\n    /**\n     * property from user if the contact creation through Phone Number is allowed\n     */\n\n    this.allowPhone$ = this.propertiesService.createContactPhone$;\n    /**\n     * check which properties are allowed and showing them on screen.\n     */\n\n    this.createContactList$ = combineLatest([this.allowAccount$, this.allowIBAN$, this.allowPhone$, this.allowEmail$]).pipe(tap(contactListItem => this.noOfItemsinList = contactListItem.filter(listItem => listItem && typeof listItem === 'boolean').length), map(([Account, IBAN, Phone, Email]) => [{\n      listItem: AccountCreateType.ACCOUNT,\n      enableItem: Account === null || Account === void 0 ? void 0 : Account.valueOf()\n    }, {\n      listItem: AccountCreateType.IBAN,\n      enableItem: IBAN === null || IBAN === void 0 ? void 0 : IBAN.valueOf()\n    }, {\n      listItem: AccountCreateType.PHONE,\n      enableItem: Phone === null || Phone === void 0 ? void 0 : Phone.valueOf()\n    }, {\n      listItem: AccountCreateType.EMAIL,\n      enableItem: Email === null || Email === void 0 ? void 0 : Email.valueOf()\n    }]));\n  }\n\n}\n/** @nocollapse */\n\n\nContactsTypeListContainerComponent.ɵfac = function ContactsTypeListContainerComponent_Factory(t) {\n  return new (t || ContactsTypeListContainerComponent)(i0.ɵɵdirectiveInject(ContactsService), i0.ɵɵdirectiveInject(ContactManagerPreferencesService));\n};\n/** @nocollapse */\n\n\nContactsTypeListContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ContactsTypeListContainerComponent,\n  selectors: [[\"bb-contacts-type-list-container\"]],\n  decls: 2,\n  vars: 4,\n  consts: [[3, \"listOfAccountTypes\", \"noOfItemsinList\"]],\n  template: function ContactsTypeListContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"bb-contact-account-select-type\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"listOfAccountTypes\", i0.ɵɵpipeBind1(1, 2, ctx.createContactList$))(\"noOfItemsinList\", ctx.noOfItemsinList);\n    }\n  },\n  directives: [ContactSelectAccountTypeComponent],\n  pipes: [i2$1.AsyncPipe],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsTypeListContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-contacts-type-list-container',\n      templateUrl: './contacts-type-list-container.component.html'\n    }]\n  }], function () {\n    return [{\n      type: ContactsService\n    }, {\n      type: ContactManagerPreferencesService\n    }];\n  }, null);\n})();\n/**\n * Displays an item in the  list of all contacts\n *\n * @usageNotes\n *\n * ### Display a single item in the list of types of contact.\n *\n * ```html\n * <bb-contact-list-item\n *     [contactItem]=\"item\"\n *     [showAccountNumber]=\"true\"\n *     [showAlias]=\"showAlias\"\n *  ></bb-contact-list-item>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsListItemComponent {\n  constructor(service) {\n    this.service = service;\n    /**\n     * Wether to show contact account number.\n     * Default is false.\n     */\n\n    this.showAccountNumber = false;\n    /**\n     * Wether to show contact alias.\n     * Default is false.\n     */\n\n    this.showAlias = false;\n    this.accountTypeKeyRef = AccountTypeModelKey;\n    this.createAccountType = AccountCreateType;\n  }\n  /**\n   * OnInit - lifecycle hook.\n   */\n\n\n  ngOnInit() {\n    if (this.contactItem === undefined) {\n      throw new Error('`item` input is required in `bb-todo-list-item` component');\n    } else {\n      this.selectedAccountType = this.service.checkaccountType(this.contactItem);\n    }\n  }\n\n}\n/** @nocollapse */\n\n\nContactsListItemComponent.ɵfac = function ContactsListItemComponent_Factory(t) {\n  return new (t || ContactsListItemComponent)(i0.ɵɵdirectiveInject(ContactsService));\n};\n/** @nocollapse */\n\n\nContactsListItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ContactsListItemComponent,\n  selectors: [[\"bb-contact-list-item\"]],\n  inputs: {\n    contactItem: \"contactItem\",\n    showAccountNumber: \"showAccountNumber\",\n    showAlias: \"showAlias\"\n  },\n  decls: 14,\n  vars: 3,\n  consts: function () {\n    let i18n_101;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc name\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS_102 = goog.getMsg(\" Name \");\n      i18n_101 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS_102;\n    } else {\n      i18n_101 = $localize`:name@@bb-contact-list-item.label.name: Name `;\n    }\n\n    let i18n_103;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc account number\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___104 = goog.getMsg(\" IBAN \");\n      i18n_103 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___104;\n    } else {\n      i18n_103 = $localize`:account number@@bb-contact-list-item.label.iban: IBAN `;\n    }\n\n    let i18n_105;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc account number\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___106 = goog.getMsg(\" Email \");\n      i18n_105 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___106;\n    } else {\n      i18n_105 = $localize`:account number@@bb-contact-list-item.label.email: Email `;\n    }\n\n    let i18n_107;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc account number\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___108 = goog.getMsg(\" Phone number \");\n      i18n_107 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___108;\n    } else {\n      i18n_107 = $localize`:account number@@bb-contact-list-item.label.phone.number: Phone number `;\n    }\n\n    let i18n_109;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc account number\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___110 = goog.getMsg(\" Account number \");\n      i18n_109 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___110;\n    } else {\n      i18n_109 = $localize`:account number@@bb-contact-list-item.label.account.number: Account number `;\n    }\n\n    let i18n_111;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc name\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__112 = goog.getMsg(\"Alias\");\n      i18n_111 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__112;\n    } else {\n      i18n_111 = $localize`:name@@bb-contact-list-item.label.alias:Alias`;\n    }\n\n    return [[1, \"bb-block\", \"bb-block--sm\"], [1, \"bb-block\", \"bb-block--xs\", \"break-word\"], [1, \"sr-only\"], [\"data-role\", \"name-header\"], i18n_101, [\"data-role\", \"list-name\", 1, \"bb-text-bold\", \"break-word\"], [\"class\", \"bb-block bb-block--xs break-word\", 4, \"ngIf\"], [\"accountdetails\", \"\"], [\"details\", \"\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"data-role\", \"account-header\"], i18n_103, [4, \"ngTemplateOutlet\"], [\"data-role\", \"email-header\"], i18n_105, [\"data-role\", \"phone-header\"], i18n_107, i18n_109, [\"data-role\", \"alias-header\", 1, \"sr-only\"], i18n_111, [\"data-role\", \"list-alias\", 1, \"bb-text-support\", \"break-word\"], [\"class\", \"bb-text-support\", \"data-role\", \"list-account-number\", 4, \"ngIf\"], [\"data-role\", \"list-account-number\", 1, \"bb-text-support\"]];\n  },\n  template: function ContactsListItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"span\", 2);\n      i0.ɵɵelementStart(3, \"span\", 3);\n      i0.ɵɵi18n(4, 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(5, \" :\\xA0 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"span\", 5);\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, ContactsListItemComponent_div_8_Template, 6, 5, \"div\", 6);\n      i0.ɵɵtemplate(9, ContactsListItemComponent_div_9_Template, 7, 1, \"div\", 6);\n      i0.ɵɵtemplate(10, ContactsListItemComponent_ng_template_10_Template, 1, 1, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(12, ContactsListItemComponent_ng_template_12_Template, 1, 1, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate1(\" \", ctx.contactItem.name, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showAccountNumber);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showAlias && ctx.contactItem.alias);\n    }\n  },\n  directives: [i2$1.NgIf, i2$1.NgSwitch, i2$1.NgSwitchCase, i2$1.NgTemplateOutlet],\n  pipes: [i8$1.BbIbanPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsListItemComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-contact-list-item',\n      templateUrl: './contact-list-item.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ContactsService\n    }];\n  }, {\n    contactItem: [{\n      type: Input\n    }],\n    showAccountNumber: [{\n      type: Input\n    }],\n    showAlias: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Displays a list of all contacts\n *\n * @usageNotes\n *\n * ### Display a list of types of contact that can be created\n *\n * ```html\n * <bb-contacts-list-widget\n *       [items]=\"items.contacts\"\n *       [showAlias]=\"false\"\n *     >\n *  </bb-contacts-list-widget>\n * ```\n *\n * ### Additionally update the list\n *\n * ```html\n *  <bb-contacts-list-widget\n *       [items]=\"items.contacts\"\n *       (selectedChange)=\"hostRef.select($event)\"\n *       (formItemChange)=\"hostRef.edit($event)\"\n *       [showAlias]=\"false\"\n *     >\n *   </bb-contacts-list-widget>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsListWidgetComponent {\n  constructor() {\n    /**\n     * Event that is emitted when selected item changes\n     */\n    this.selectedChange = new EventEmitter();\n    this.focused = 0;\n    this.contactItemArray = [];\n    this.accountTypeSelected = AccountCreateType.IBAN;\n    this.gc$ = new Subject();\n    this.createAccountTypeRef = AccountCreateType;\n  }\n  /**\n   * AfterViewInit- lifecycle hook.\n   */\n\n\n  ngAfterViewInit() {\n    this.contactItem.changes.pipe(startWith(this.contactItem)).pipe(takeUntil(this.gc$)).subscribe(data => {\n      this.contactItemArray = data.toArray();\n    });\n  }\n  /**\n   * onDestroy - lifecycle hook.\n   */\n\n\n  ngOnDestroy() {\n    this.gc$.next();\n    this.gc$.complete();\n  }\n  /**\n   * getTabIndex defines if item can be reached by Tab,\n   * which only the focused item can\n   *\n   * @param {number} i index of an element\n   * @returns {number} [tabindex] parameter value\n   */\n\n\n  getTabIndex(i) {\n    return i === this.focused ? '0' : '-1';\n  }\n  /**\n   * Prevents focus from going beyond the limits of the list\n   *\n   * @param {number} desiredFocus index of an element\n   * @returns {number} index of an element within bounds\n   */\n\n\n  clampDesiredFocus(desiredFocus) {\n    return Math.max(0, Math.min(desiredFocus, this.items.length - 1));\n  }\n  /**\n   * Implements keyboard controls for the contact list.\n   * Call on key down events to move the focus to the appropriate element.\n   *\n   * @param {Event} event HTMLEvent object\n   * @param {number} desiredFocus index of an element\n   */\n\n\n  onChangeFocusItemTo(event, desiredFocus) {\n    var _a, _b;\n\n    event.preventDefault();\n    const realisticFocus = this.clampDesiredFocus(desiredFocus);\n    if (this.focused === realisticFocus) return;\n    this.focused = realisticFocus;\n    (_b = (_a = this.contactItem.find((_, i) => i === this.focused)) === null || _a === void 0 ? void 0 : _a.nativeElement) === null || _b === void 0 ? void 0 : _b.focus();\n  }\n  /**\n   *\n   * @param {string} id - Id of the selcted contact\n   * @param {number} index - index of the selected contact\n   */\n\n\n  onContactSelect(id, index) {\n    this.focused = index;\n    this.accountTypeSelected = '';\n    this.selectedChange.emit(id);\n  }\n  /**\n   * isListHeading defines if grouping heading\n   * should be added before list item\n   *\n   * @param {ContactItem} item ContactItem object\n   * @param {number} index index of an element\n   * @returns {boolean} whether item a list heading\n   */\n\n\n  isListHeading(item, index) {\n    const char = this.getGroupHeadingChar(item.name.trim());\n\n    if (this.latestSeparator !== char || !index) {\n      this.latestSeparator = char;\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * hasNoSeparatorClass tells if the list item\n   * should have bb-grouped-list__item--no-separator class.\n   *\n   * @param {number} index index of an element\n   * @returns {boolean} whether element should have separator class\n   */\n\n\n  hasNoSeparatorClass(index) {\n    const nextItem = this.items[index + 1];\n\n    if (!nextItem) {\n      return false;\n    } else {\n      const nextChar = this.getGroupHeadingChar(nextItem.name.trim());\n\n      if (this.latestSeparator !== nextChar) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getGroupHeadingChar(name) {\n    return String.fromCodePoint(name.codePointAt(0)).toUpperCase();\n  }\n\n}\n/** @nocollapse */\n\n\nContactsListWidgetComponent.ɵfac = function ContactsListWidgetComponent_Factory(t) {\n  return new (t || ContactsListWidgetComponent)();\n};\n/** @nocollapse */\n\n\nContactsListWidgetComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ContactsListWidgetComponent,\n  selectors: [[\"bb-contacts-list-widget\"]],\n  viewQuery: function ContactsListWidgetComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c113, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contactItem = _t);\n    }\n  },\n  inputs: {\n    items: \"items\",\n    selectedItemId: \"selectedItemId\",\n    showAlias: \"showAlias\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [\"data-role\", \"existing-contact\", \"role\", \"list\", 1, \"bb-grouped-list\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"bb-grouped-list__group bb-text-support bb-text-bold\", \"data-role\", \"header-row\", 4, \"ngIf\"], [\"role\", \"button\", \"data-role\", \"contact-manager-list-item\", 1, \"bb-grouped-list__item\", 3, \"tabindex\", \"ngClass\", \"keydown.Home\", \"keydown.ArrowUp\", \"keydown.ArrowDown\", \"keydown.End\", \"click\", \"keyup.Space\", \"keyup.Enter\"], [\"contactItem\", \"\"], [3, \"contactItem\", \"showAccountNumber\", \"showAlias\"], [\"data-role\", \"header-row\", 1, \"bb-grouped-list__group\", \"bb-text-support\", \"bb-text-bold\"]],\n  template: function ContactsListWidgetComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ContactsListWidgetComponent_div_0_Template, 3, 1, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.items && ctx.items.length);\n    }\n  },\n  directives: [i2$1.NgIf, i2$1.NgForOf, i2$1.NgClass, ContactsListItemComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsListWidgetComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-contacts-list-widget',\n      templateUrl: './contact-list.component.html'\n    }]\n  }], null, {\n    items: [{\n      type: Input\n    }],\n    selectedChange: [{\n      type: Output\n    }],\n    selectedItemId: [{\n      type: Input\n    }],\n    contactItem: [{\n      type: ViewChildren,\n      args: ['contactItem']\n    }],\n    showAlias: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * This is an extension slot to be used for customizing contact manager widget..\n *\n * @usageNotes\n *\n * ### Display a single contact detail\n *\n * ```html\n *  <ng-template bbContactsListContainerCustomizable let-hostRef let-items=\"context\">\n *   <div\n *     class=\"col\"\n *     [ngClass]=\"{\n *       'd-block': hostRef.isListView | async,\n *       'd-lg-block d-none': !(hostRef.isListView | async)\n *     }\"\n *   >\n *     <bb-contacts-list-widget\n *       [items]=\"items.contacts\"\n *       (selectedChange)=\"hostRef.select($event)\"\n *       (formItemChange)=\"hostRef.edit($event)\"\n *       [showAlias]=\"false\"\n *     >\n *     </bb-contacts-list-widget>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsListContainerCustomizableDirective extends BbTemplate {}\n/** @nocollapse */\n\n\nContactsListContainerCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵContactsListContainerCustomizableDirective_BaseFactory;\n  return function ContactsListContainerCustomizableDirective_Factory(t) {\n    return (ɵContactsListContainerCustomizableDirective_BaseFactory || (ɵContactsListContainerCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ContactsListContainerCustomizableDirective)))(t || ContactsListContainerCustomizableDirective);\n  };\n}();\n/** @nocollapse */\n\n\nContactsListContainerCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ContactsListContainerCustomizableDirective,\n  selectors: [[\"\", \"bbContactsListContainerCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsListContainerCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbContactsListContainerCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * This is an extension slot to be used for customizing contact manager header section\n *\n * @usageNotes\n *\n * ### Display a header section with search box\n *\n * ```html\n *  <ng-template bbContactsTopSectionCustomizable let-hostRef let-item=\"context\">\n *   <div class=\"col bb-stack\">\n *     <div class=\"bb-stack__item bb-stack__item--fill\">\n *       <bb-search-box-ui\n *         class=\"bb-toolbar__item\"\n *         data-role=\"search-contact-textbox\"\n *         placeholder=\"Search\"\n *         i18n-placeholder=\"Search box placeholder | Placeholder for search box@@contact-manager.placeholder.search\"\n *         [showSearch]=\"true\"\n *         [showClear]=\"true\"\n *         (submit)=\"hostRef.searchBoxItemSelected()\"\n *         (clear)=\"hostRef.searchBoxItemSelected(true)\"\n *         [formControl]=\"hostRef.searchTerm\"\n *         (keyUp.enter)=\"hostRef.searchBoxItemSelected()\"\n *       ></bb-search-box-ui>\n *     </div>\n *     <div class=\"bb-stack__item\">\n *       <button\n *         bbButton\n *         i18n=\"New Contact Button | Button for creating a new contact@@contact-manager.button.newContact\"\n *         data-role=\"new-contact-button\"\n *         class=\"d-none d-lg-block bb-button-bar__button\"\n *         [disabled]=\"!(hostRef.newContactAllowed | async)\"\n *         (click)=\"hostRef.newContact(item.contacts.length)\"\n *         type=\"button\"\n *       >\n *         New Contact\n *       </button>\n *       <button\n *         bbButton\n *         i18n=\"New Contact Button | Button for creating a new contact@@contact-manager.button.newContact\"\n *         data-role=\"new-contact-button\"\n *         class=\"d-block d-lg-none bb-button-bar__button\"\n *         [disabled]=\"!hostRef.newContactAllowed\"\n *         (click)=\"hostRef.newContact(item.contacts.length)\"\n *         type=\"button\"\n *       >\n *         New Contact\n *       </button>\n *     </div>\n *   </div>\n *   <ng-template #rt let-result=\"result\" let-term=\"term\">\n *     <div class=\"text-truncate\" [title]=\"result\">\n *       <ngb-highlight [result]=\"result\" [term]=\"term\"></ngb-highlight>\n *     </div>\n *   </ng-template>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsTopSectionCustomizableDirective extends BbTemplate {}\n/** @nocollapse */\n\n\nContactsTopSectionCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵContactsTopSectionCustomizableDirective_BaseFactory;\n  return function ContactsTopSectionCustomizableDirective_Factory(t) {\n    return (ɵContactsTopSectionCustomizableDirective_BaseFactory || (ɵContactsTopSectionCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ContactsTopSectionCustomizableDirective)))(t || ContactsTopSectionCustomizableDirective);\n  };\n}();\n/** @nocollapse */\n\n\nContactsTopSectionCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ContactsTopSectionCustomizableDirective,\n  selectors: [[\"\", \"bbContactsTopSectionCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsTopSectionCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbContactsTopSectionCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * This is an extension slot to be used for customizing contact manager pagination\n *\n * @usageNotes\n *\n * ### Display the pagination\n *\n * ```html\n *   <ng-template bbContactsLoadMoreCustomizable let-hostRef let-items=\"context\">\n *   <bb-pagination-ui\n *     *ngIf=\"(hostRef.paginationType | async) !== 'load-more'\"\n *     class=\"bb-pagination\"\n *     [page]=\"(hostRef.pagination | async)?.from\"\n *     [boundaryLinks]=\"false\"\n *     [directionLinks]=\"true\"\n *     [totalItems]=\"items?.count\"\n *     [itemsPerPage]=\"hostRef.pageSize | async\"\n *     [maxNavPages]=\"hostRef.maxNavPages | async\"\n *     (pageChange)=\"hostRef.onPageChange($event)\"\n *   ></bb-pagination-ui>\n *   <div class=\"p-5 text-center\" *ngIf=\"(hostRef.paginationType | async) === 'load-more'\">\n *     <button\n *       class=\"border text-dark btn btn-secondary\"\n *       (click)=\"hostRef.loadMore()\"\n *       [disabled]=\"items.count && items.count <= items.contacts.length\"\n *     >\n *       <ng-container\n *          i18n=\"Load more button label | Load more button shown down bellow contact list@@contact-manager.load-more.label\">\n *         Load more\n *       </ng-container>\n *     </button>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsLoadMoreCustomizableDirective extends BbTemplate {}\n/** @nocollapse */\n\n\nContactsLoadMoreCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵContactsLoadMoreCustomizableDirective_BaseFactory;\n  return function ContactsLoadMoreCustomizableDirective_Factory(t) {\n    return (ɵContactsLoadMoreCustomizableDirective_BaseFactory || (ɵContactsLoadMoreCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ContactsLoadMoreCustomizableDirective)))(t || ContactsLoadMoreCustomizableDirective);\n  };\n}();\n/** @nocollapse */\n\n\nContactsLoadMoreCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ContactsLoadMoreCustomizableDirective,\n  selectors: [[\"\", \"bbContactsLoadMoreCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsLoadMoreCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbContactsLoadMoreCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * This is an extension slot to be used for customizing contact manager widget loading view\n *\n * @usageNotes\n *\n * ### Display loading icon\n *\n * ```html\n *    <ng-template bbContactsLoadingCustomizable let-hostRef>\n *   <div class=\"bb-state-container\">\n *     <bb-loading-indicator-ui\n *       i18n-text=\"@@contact-manager.loading.label\"\n *       text=\"Loading contacts...\"\n *     ></bb-loading-indicator-ui>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsLoadingCustomizableDirective extends BbTemplate {}\n/** @nocollapse */\n\n\nContactsLoadingCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵContactsLoadingCustomizableDirective_BaseFactory;\n  return function ContactsLoadingCustomizableDirective_Factory(t) {\n    return (ɵContactsLoadingCustomizableDirective_BaseFactory || (ɵContactsLoadingCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ContactsLoadingCustomizableDirective)))(t || ContactsLoadingCustomizableDirective);\n  };\n}();\n/** @nocollapse */\n\n\nContactsLoadingCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ContactsLoadingCustomizableDirective,\n  selectors: [[\"\", \"bbContactsLoadingCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsLoadingCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbContactsLoadingCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * This is an extension slot to be used for customizing contact manager widget empty view\n *\n * @usageNotes\n *\n * ### Display empty message\n *\n * ```html\n *  <ng-template bbContactsEmptyStateCustomizable let-hostRef>\n *   <div class=\"bb-state-container\">\n *     <bb-empty-state-ui\n *       i18n-title=\"@@contact-manager.state.noContactsLoaded.title\"\n *       title=\"No contacts\"\n *       i18n-subtitle=\"@@contact-manager.state.noContactsLoaded.subtitle\"\n *       subtitle=\"You don't have any contacts to display yet.<br>Try adding a new contact using the 'New Contact' button\"\n *       iconClasses=\"d-flex justify-content-center mb-3\"\n *       iconModifier=\"contacts\"\n *       iconColor=\"primary\"\n *       iconSize=\"xxl\"\n *     ></bb-empty-state-ui>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsEmptyStateCustomizableDirective extends BbTemplate {}\n/** @nocollapse */\n\n\nContactsEmptyStateCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵContactsEmptyStateCustomizableDirective_BaseFactory;\n  return function ContactsEmptyStateCustomizableDirective_Factory(t) {\n    return (ɵContactsEmptyStateCustomizableDirective_BaseFactory || (ɵContactsEmptyStateCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ContactsEmptyStateCustomizableDirective)))(t || ContactsEmptyStateCustomizableDirective);\n  };\n}();\n/** @nocollapse */\n\n\nContactsEmptyStateCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ContactsEmptyStateCustomizableDirective,\n  selectors: [[\"\", \"bbContactsEmptyStateCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsEmptyStateCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbContactsEmptyStateCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * This is an extension slot to be used for customizing contact manager Empty view on search\n *\n * @usageNotes\n *\n * ### Display no search result found message.\n *\n * ```html\n *  <ng-template bbContactsEmptySearchStateCustomizable let-hostRef let-term=\"context\">\n *   <div class=\"bb-state-container\">\n *     <bb-empty-state-ui\n *       i18n-title=\"@@contact-manager.state.empty-search.title\"\n *       title=\"No results found\"\n *       i18n-subtitle=\"@@contact-manager.state.empty-search.subtitle\"\n *       subtitle=\"We can't find what you're looking for. Please try a different criteria.\"\n *       iconClasses=\"d-flex justify-content-center mb-3\"\n *       iconModifier=\"search\"\n *       iconColor=\"primary\"\n *       iconSize=\"xxl\"\n *     ></bb-empty-state-ui>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsEmptySearchStateCustomizableDirective extends BbTemplate {}\n/** @nocollapse */\n\n\nContactsEmptySearchStateCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵContactsEmptySearchStateCustomizableDirective_BaseFactory;\n  return function ContactsEmptySearchStateCustomizableDirective_Factory(t) {\n    return (ɵContactsEmptySearchStateCustomizableDirective_BaseFactory || (ɵContactsEmptySearchStateCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ContactsEmptySearchStateCustomizableDirective)))(t || ContactsEmptySearchStateCustomizableDirective);\n  };\n}();\n/** @nocollapse */\n\n\nContactsEmptySearchStateCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ContactsEmptySearchStateCustomizableDirective,\n  selectors: [[\"\", \"bbContactsEmptySearchStateCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsEmptySearchStateCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbContactsEmptySearchStateCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * This is an extension slot to be used for customizing contact Error state\n *\n * @usageNotes\n *\n * ### Display error view\n *\n * ```html\n *  <ng-template bbContactsErrorStateCustomizable let-hostRef let-error=\"context\">\n *   <div class=\"bb-state-container\">\n *     <bb-common-error-state-ui [error]=\"error\"></bb-common-error-state-ui>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsErrorStateCustomizableDirective extends BbTemplate {}\n/** @nocollapse */\n\n\nContactsErrorStateCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵContactsErrorStateCustomizableDirective_BaseFactory;\n  return function ContactsErrorStateCustomizableDirective_Factory(t) {\n    return (ɵContactsErrorStateCustomizableDirective_BaseFactory || (ɵContactsErrorStateCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ContactsErrorStateCustomizableDirective)))(t || ContactsErrorStateCustomizableDirective);\n  };\n}();\n/** @nocollapse */\n\n\nContactsErrorStateCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ContactsErrorStateCustomizableDirective,\n  selectors: [[\"\", \"bbContactsErrorStateCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsErrorStateCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbContactsErrorStateCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * The following extension slots are available in this component:\n *  - `ContactsListContainerCustomizableDirective`\n *  - `ContactsTopSectionCustomizableDirective`\n *  - `ContactsLoadMoreCustomizableDirective`\n *  - `ContactsLoadingCustomizableDirective`\n *  - `ContactsEmptyStateCustomizableDirective`\n *  - `ContactsEmptySearchStateCustomizableDirective`\n *  - `ContactsErrorStateCustomizableDirective`\n *\n * @see ContactsListContainerCustomizableDirective\n * @see ContactsTopSectionCustomizableDirective\n * @see ContactsLoadMoreCustomizableDirective\n * @see ContactsLoadingCustomizableDirective\n * @see ContactsEmptyStateCustomizableDirective\n * @see ContactsEmptySearchStateCustomizableDirective\n * @see ContactsErrorStateCustomizableDirective\n * Container component for showing contact list.\n * @usageNotes\n *\n * ### Display list of all the contacts with details / edit form.\n *\n * ```html\n * <bb-contacts-list-container>\n *  <router-outlet></router-outlet>\n * </bb-contacts-list-container>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n\n\nclass ContactsListContainerComponent {\n  constructor(service, navigation, router, route, propertiesService) {\n    this.service = service;\n    this.navigation = navigation;\n    this.router = router;\n    this.route = route;\n    this.propertiesService = propertiesService;\n    this.firstContactEdit = false;\n    this.isSearchBoxVisible = true;\n    this.searchTerm = new FormControl();\n    this.containerlistParams = new BehaviorSubject('');\n    this.debounceSearch$ = new Subject();\n    this.hostRef = this;\n    this.newContactAllowed = this.propertiesService.newContact$;\n    this.pageSize = this.propertiesService.pageSize$;\n    this.maxNavPages = this.propertiesService.maxNavPages$;\n    this.paginationType = this.propertiesService.paginationType$;\n    this.isListView = this.router.events.pipe(filter(e => e instanceof NavigationEnd), map(e => e.url), startWith(this.router.url), map(() => {\n      const isList = this.navigation.currentView === View.List;\n\n      if (isList) {\n        this.firstContactEdit = false;\n      }\n\n      return isList;\n    }), shareReplay());\n    this.pagination = combineLatest([this.route.queryParamMap, this.pageSize]).pipe(map(([params, pageSize]) => this.pageParamsFromRoute(params, pageSize)));\n    this.items = this.service.items.pipe(tap(results => {\n      this.isSearchBoxVisible = !!this.searchTerm.value ? true : results.contacts.length > 0;\n      results.contacts.sort((a, b) => a.name.toLocaleUpperCase().trim() > b.name.toLocaleUpperCase().trim() ? 1 : -1);\n    }), catchError(error => {\n      this.error = error;\n      return of(undefined);\n    }));\n    /**\n     * Observable of currently selected item id\n     */\n\n    this.selectedItemId = this.service.currentlySelectedItemId;\n    this.listParams = combineLatest([this.containerlistParams, this.pagination, this.pageSize, this.paginationType]).pipe(map(([method, paginationParams, pageSize, paginationType]) => {\n      if (method === LoadMoreMethod.LOAD_MORE && paginationType === LoadMoreMethod.LOAD_MORE) {\n        paginationParams.from++;\n        paginationParams.size = pageSize;\n      }\n\n      return {\n        paginationParams,\n        paginationType,\n        method\n      };\n    }), map(({\n      paginationParams,\n      paginationType,\n      method\n    }) => ({\n      pagination: {\n        from: paginationParams.from,\n        size: paginationParams.size,\n        query: paginationParams.query\n      },\n      paginationType,\n      method\n    })));\n  }\n\n  ngOnInit() {\n    this.subscription = this.listParams.subscribe(params => {\n      return this.service.updateItemList(params.pagination.query, params.pagination.from, params.pagination.size, params.paginationType, params.method);\n    });\n    this.subscription.add(this.debounceSearch$.pipe(debounceTime(300), distinctUntilChanged()).subscribe(term => this.searchContacts(term)));\n  }\n  /**\n   * Event handler for search box value change\n   *\n   * @param {string} phrase text to search for\n   */\n\n\n  onSearchTermChange(phrase) {\n    this.debounceSearch$.next(phrase);\n  }\n  /**\n   * Event handler for search box clear\n   */\n\n\n  clearSearch() {\n    this.debounceSearch$.next('');\n  }\n  /**\n   * Queries contacts with given phrase\n   *\n   * @param {string} phrase text to search for\n   */\n\n\n  searchContacts(phrase) {\n    this.containerlistParams.next('search');\n    this.navigation.list(0, phrase); // TODO: Remove query params when migrating widget\n  }\n  /**\n   * Navigates to list page.\n   *\n   * @param {number} page Current page number.\n   */\n\n\n  onPageChange(page) {\n    this.navigation.list(page);\n  }\n  /**\n   * Updat the list parameter as load more.\n   */\n\n\n  loadMore() {\n    this.containerlistParams.next('load-more');\n  }\n  /**\n   * Routes to selected contact details.\n   *\n   * @param {string} id  Contact ID\n   */\n\n\n  select(id) {\n    this.navigation.select(id);\n  }\n  /**\n   * Routes to new contact.\n   *\n   * @param {number} totalContacts - total number of contacts.\n   */\n\n\n  newContact(totalContacts) {\n    this.firstContactEdit = !totalContacts;\n    this.navigation.newContact();\n    this.navigation.currentView = View.Select;\n  }\n  /**\n   * method to return back to list view.\n   */\n\n\n  backToList() {\n    this.navigation.currentView = View.List;\n    this.navigation.list();\n  }\n\n  pageParamsFromRoute(query, pageSize) {\n    const from = query.get('page');\n    this.searchTerm.setValue(query.get('query') || '');\n    return {\n      from: from && Number.parseInt(from, 10) || 0,\n      size: pageSize ? Number(pageSize) : 5,\n      query: this.searchTerm.value || ''\n    };\n  }\n\n  ngOnDestroy() {\n    var _a;\n\n    (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n  }\n\n}\n/** @nocollapse */\n\n\nContactsListContainerComponent.ɵfac = function ContactsListContainerComponent_Factory(t) {\n  return new (t || ContactsListContainerComponent)(i0.ɵɵdirectiveInject(ContactsService), i0.ɵɵdirectiveInject(ContactsNavigationService), i0.ɵɵdirectiveInject(i2$2.Router), i0.ɵɵdirectiveInject(i2$2.ActivatedRoute), i0.ɵɵdirectiveInject(ContactManagerPreferencesService));\n};\n/** @nocollapse */\n\n\nContactsListContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ContactsListContainerComponent,\n  selectors: [[\"bb-contacts-list-container\"]],\n  ngContentSelectors: _c141,\n  decls: 17,\n  vars: 4,\n  consts: function () {\n    let i18n_115;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Span for going back to list view\n       * @meaning Back to list view\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___116 = goog.getMsg(\" Back to list \");\n      i18n_115 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS___116;\n    } else {\n      i18n_115 = $localize`:Back to list view|Span for going back to list view@@contact-manager.span.backToList: Back to list `;\n    }\n\n    let i18n_118;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Load more button shown down bellow contact list\n       * @meaning Load more button label \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS_____119 = goog.getMsg(\" Load more \");\n      i18n_118 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS_____119;\n    } else {\n      i18n_118 = $localize`:Load more button label | Load more button shown down bellow contact list@@contact-manager.load-more.label: Load more `;\n    }\n\n    let i18n_121;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Placeholder for search box\n       * @meaning Search box placeholder \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__122 = goog.getMsg(\"Search\");\n      i18n_121 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__122;\n    } else {\n      i18n_121 = $localize`:Search box placeholder | Placeholder for search box@@contact-manager.placeholder.search:Search`;\n    }\n\n    let i18n_123;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__124 = goog.getMsg(\"Search\");\n      i18n_123 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__124;\n    } else {\n      i18n_123 = $localize`:@@contact-manager.placeholder.search:Search`;\n    }\n\n    let i18n_126;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__127 = goog.getMsg(\"{VAR_PLURAL, plural, =1 {1 result found} other {{INTERPOLATION} results found}}\");\n      i18n_126 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__127;\n    } else {\n      i18n_126 = $localize`{VAR_PLURAL, plural, =1 {1 result found} other {{INTERPOLATION} results found}}`;\n    }\n\n    i18n_126 = i0.ɵɵi18nPostprocess(i18n_126, {\n      \"VAR_PLURAL\": \"\\uFFFD0\\uFFFD\",\n      \"INTERPOLATION\": \"\\uFFFD1\\uFFFD\"\n    });\n    let i18n_125;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__128 = goog.getMsg(\" {$icu} \", {\n        \"icu\": i18n_126\n      });\n      i18n_125 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__128;\n    } else {\n      i18n_125 = $localize`:@@contact-manager.list.results-found: ${i18n_126}:ICU: `;\n    }\n\n    let i18n_129;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Button for creating a new contact\n       * @meaning New Contact Button \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__130 = goog.getMsg(\" New Contact \");\n      i18n_129 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__130;\n    } else {\n      i18n_129 = $localize`:New Contact Button | Button for creating a new contact@@contact-manager.button.newContact: New Contact `;\n    }\n\n    let i18n_131;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__132 = goog.getMsg(\"Loading contacts...\");\n      i18n_131 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__132;\n    } else {\n      i18n_131 = $localize`:@@contact-manager.loading.label:Loading contacts...`;\n    }\n\n    let i18n_133;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__134 = goog.getMsg(\"No contacts\");\n      i18n_133 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__134;\n    } else {\n      i18n_133 = $localize`:@@contact-manager.state.noContactsLoaded.title:No contacts`;\n    }\n\n    let i18n_135;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__136 = goog.getMsg(\"You don't have any contacts to display yet.<br>Try adding a new contact using the 'New Contact' button\");\n      i18n_135 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__136;\n    } else {\n      i18n_135 = $localize`:@@contact-manager.state.noContactsLoaded.subtitle:You don't have any contacts to display yet.<br>Try adding a new contact using the 'New Contact' button`;\n    }\n\n    let i18n_137;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__138 = goog.getMsg(\"No results found\");\n      i18n_137 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__138;\n    } else {\n      i18n_137 = $localize`:@@contact-manager.state.empty-search.title:No results found`;\n    }\n\n    let i18n_139;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__140 = goog.getMsg(\"We can't find what you're looking for. Please try a different criteria.\");\n      i18n_139 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_CONTACT_MANAGER_WIDGET_ANG_FESM2015_BACKBASE_CONTACT_MANAGER_WIDGET_ANG_JS__140;\n    } else {\n      i18n_139 = $localize`:@@contact-manager.state.empty-search.subtitle:We can't find what you're looking for. Please try a different criteria.`;\n    }\n\n    return [[\"data-role\", \"loading-label\", 1, \"card\", \"card-body\"], [4, \"ngIf\", \"ngIfElse\"], [\"bbContactsListContainerCustomizable\", \"\"], [\"bbContactsTopSectionCustomizable\", \"\"], [\"bbContactsLoadingCustomizable\", \"\"], [\"loadingTemplate\", \"\"], [\"bbContactsEmptyStateCustomizable\", \"\"], [\"emptyTemplate\", \"\"], [\"bbContactsEmptySearchStateCustomizable\", \"\"], [\"emptySearchTemplate\", \"\"], [\"bbContactsErrorStateCustomizable\", \"\"], [\"errorTemplate\", \"\"], [1, \"bb-block\", \"bb-block--md\", 3, \"ngClass\"], [1, \"row\"], [\"bbContactsTopSectionCustomizable\", \"\", 3, \"bbHostRef\", \"bbTemplateContext\"], [\"class\", \"row d-block d-lg-none\", 4, \"ngIf\"], [\"class\", \"row bb-block bb-block--md\", 4, \"ngIf\", \"ngIfElse\"], [1, \"row\", 3, \"ngClass\"], [1, \"col-lg-6\"], [\"bbContactsLoadMoreCustomizable\", \"\", 3, \"bbHostRef\", \"bbTemplateContext\"], [\"bbContactsLoadMoreCustomizable\", \"\"], [1, \"row\", \"d-block\", \"d-lg-none\"], [\"bbButton\", \"\", \"color\", \"unstyled\", 1, \"bb-text-bold\", \"text-primary\", 3, \"click\"], [\"name\", \"angle-left\"], i18n_115, [1, \"row\", \"bb-block\", \"bb-block--md\"], [\"bbContactsListContainerCustomizable\", \"\", 3, \"bbHostRef\", \"bbTemplateContext\"], [1, \"col\", \"col-lg-6\", 3, \"ngClass\"], [\"class\", \"bb-pagination\", 3, \"page\", \"boundaryLinks\", \"directionLinks\", \"totalItems\", \"itemsPerPage\", \"maxNavPages\", \"pageChange\", 4, \"ngIf\"], [\"class\", \"p-5 text-center\", 4, \"ngIf\"], [1, \"bb-pagination\", 3, \"page\", \"boundaryLinks\", \"directionLinks\", \"totalItems\", \"itemsPerPage\", \"maxNavPages\", \"pageChange\"], [1, \"p-5\", \"text-center\"], [\"class\", \"bb-block bb-block--md\", \"color\", \"secondary\", \"data-role\", \"contact-load-more\", 3, \"click\", 4, \"ngIf\"], [\"color\", \"secondary\", \"data-role\", \"contact-load-more\", 1, \"bb-block\", \"bb-block--md\", 3, \"click\"], i18n_118, [1, \"col\", 3, \"ngClass\"], [3, \"items\", \"selectedItemId\", \"showAlias\", \"selectedChange\"], [1, \"col\", \"bb-stack\"], [1, \"bb-stack__item\", \"bb-stack__item--fill\"], [\"class\", \"bb-toolbar__item\", \"data-role\", \"contact-manager-search\", \"placeholder\", i18n_121, \"aria-label\", i18n_123, 3, \"showSearch\", \"showClear\", \"formControl\", \"valueChange\", \"submit\", \"keyup.enter\", \"clear\", 4, \"ngIf\"], [\"aria-live\", \"assertive\", 1, \"sr-only\"], i18n_125, [1, \"bb-stack__item\", \"align-self-start\"], [\"bbButton\", \"\", \"data-role\", \"new-contact-button\", \"type\", \"button\", 1, \"d-block\", \"bb-button-bar__button\", 3, \"disabled\", \"click\"], i18n_129, [\"rt\", \"\"], [\"data-role\", \"contact-manager-search\", \"placeholder\", i18n_121, \"aria-label\", i18n_123, 1, \"bb-toolbar__item\", 3, \"showSearch\", \"showClear\", \"formControl\", \"valueChange\", \"submit\", \"keyup.enter\", \"clear\"], [1, \"text-truncate\", 3, \"title\"], [3, \"result\", \"term\"], [1, \"bb-state-container\"], [\"text\", i18n_131, \"data-role\", \"contact-manager-loading\"], [\"bbContactsLoadingCustomizable\", \"\", 3, \"bbHostRef\", 4, \"ngIf\", \"ngIfElse\"], [\"bbContactsLoadingCustomizable\", \"\", 3, \"bbHostRef\"], [\"title\", i18n_133, \"subtitle\", i18n_135, \"iconClasses\", \"d-flex justify-content-center mb-3\", \"iconModifier\", \"contacts\", \"iconSize\", \"xxl\", \"data-role\", \"contact-manager-empty\"], [\"bbContactsEmptyStateCustomizable\", \"\", 3, \"bbHostRef\", 4, \"ngIf\", \"ngIfElse\"], [\"bbContactsEmptyStateCustomizable\", \"\", 3, \"bbHostRef\"], [\"title\", i18n_137, \"subtitle\", i18n_139, \"iconClasses\", \"d-flex justify-content-center mb-3\", \"iconModifier\", \"search\", \"iconColor\", \"primary\", \"iconSize\", \"xxl\", \"data-role\", \"contact-manager-list-search-empty\"], [\"bbContactsEmptySearchStateCustomizable\", \"\", 3, \"bbHostRef\", \"bbTemplateContext\"], [3, \"error\"], [\"bbContactsErrorStateCustomizable\", \"\", 3, \"bbHostRef\", \"bbTemplateContext\"]];\n  },\n  template: function ContactsListContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ContactsListContainerComponent_ng_container_1_Template, 13, 19, \"ng-container\", 1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵtemplate(3, ContactsListContainerComponent_ng_template_3_Template, 5, 13, \"ng-template\", 2);\n      i0.ɵɵtemplate(4, ContactsListContainerComponent_ng_template_4_Template, 12, 6, \"ng-template\", 3);\n      i0.ɵɵtemplate(5, ContactsListContainerComponent_ng_template_5_Template, 2, 0, \"ng-template\", 4);\n      i0.ɵɵtemplate(6, ContactsListContainerComponent_ng_template_6_Template, 1, 2, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(8, ContactsListContainerComponent_ng_template_8_Template, 2, 0, \"ng-template\", 6);\n      i0.ɵɵtemplate(9, ContactsListContainerComponent_ng_template_9_Template, 1, 2, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(11, ContactsListContainerComponent_ng_template_11_Template, 2, 0, \"ng-template\", 8);\n      i0.ɵɵtemplate(12, ContactsListContainerComponent_ng_template_12_Template, 1, 2, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(14, ContactsListContainerComponent_ng_template_14_Template, 2, 2, \"ng-template\", 10);\n      i0.ɵɵtemplate(15, ContactsListContainerComponent_ng_template_15_Template, 1, 2, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r4 = i0.ɵɵreference(7);\n\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 2, ctx.items))(\"ngIfElse\", _r4);\n    }\n  },\n  directives: [i2$1.NgIf, ContactsListContainerCustomizableDirective, ContactsTopSectionCustomizableDirective, ContactsLoadingCustomizableDirective, ContactsEmptyStateCustomizableDirective, ContactsEmptySearchStateCustomizableDirective, ContactsErrorStateCustomizableDirective, i2$1.NgClass, ContactsLoadMoreCustomizableDirective, i6.ButtonDirective, i3.IconComponent, i6$2.PaginatorComponent, i7$1.LoadButtonComponent, ContactsListWidgetComponent, i9.SearchBoxComponent, i1$2.NgControlStatus, i1$2.FormControlDirective, i10.NgbHighlight, i7.LoadingIndicatorComponent, i12.EmptyStateComponent, i13.ErrorCommonStateComponent],\n  pipes: [i2$1.AsyncPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactsListContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-contacts-list-container',\n      templateUrl: 'contacts-list-container.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ContactsService\n    }, {\n      type: ContactsNavigationService\n    }, {\n      type: i2$2.Router\n    }, {\n      type: i2$2.ActivatedRoute\n    }, {\n      type: ContactManagerPreferencesService\n    }];\n  }, null);\n})();\n/**\n * Returns the new instance of contactnavigationservice.\n *\n * @param {RouterService} service router service\n * @returns {ContactsNavigationService} new service instance\n */\n\n\nfunction makeNavigationService(service) {\n  return new ContactsNavigationService(service);\n}\n\nconst contactsRoutes = [{\n  path: '',\n  component: ContactsDetailContainerComponent\n}, {\n  path: 'select',\n  component: ContactsTypeListContainerComponent\n}, {\n  path: ':id',\n  component: ContactsDetailContainerComponent\n}, {\n  path: 'edit/:id/:type',\n  canDeactivate: [CanDeactivateGuard],\n  component: ContactsFormContainerComponent\n}];\nlet ContactManagerWidgetComponent = class ContactManagerWidgetComponent {\n  constructor(preferencesService) {\n    this.preferencesService = preferencesService;\n  }\n  /**\n   * property to enable the creation of new contacts\n   */\n\n\n  set newContact(value) {\n    this.preferencesService.setNewContact(value);\n  }\n  /**\n   * Number of contacts per page\n   */\n\n\n  set pageSize(value) {\n    this.preferencesService.setPageSize(value);\n  }\n  /**\n   * Max. number of navigation pages\n   */\n\n\n  set maxNavPages(value) {\n    this.preferencesService.setMaxNavPages(value);\n  }\n  /**\n   * Pagination type (pagination, load-more)\n   */\n\n\n  set paginationType(value) {\n    this.preferencesService.setPaginationType(value);\n  }\n  /**\n   * Milliseconds to dismiss any notification message\n   */\n\n\n  set notificationDismissTime(value) {\n    this.preferencesService.setNotificationDismissTime(value);\n  }\n  /**\n   * property from user if the contact creation through email is allowed\n   */\n\n\n  set createContactEmail(value) {\n    this.preferencesService.setCreateContactEmail(value);\n  }\n  /**\n   * property from user if the contact creation through IBAN is allowed\n   */\n\n\n  set createContactIBAN(value) {\n    this.preferencesService.setCreateContactIBAN(value);\n  }\n  /**\n   * property from user if the contact creation through Account Number is allowed\n   */\n\n\n  set createContactAccount(value) {\n    this.preferencesService.setCreateContactAccount(value);\n  }\n  /**\n   * property from user if the contact creation through Phone Number is allowed\n   */\n\n\n  set createContactPhone(value) {\n    this.preferencesService.setCreateContactPhone(value);\n  }\n\n};\n/** @nocollapse */\n\nContactManagerWidgetComponent.ɵfac = function ContactManagerWidgetComponent_Factory(t) {\n  return new (t || ContactManagerWidgetComponent)(i0.ɵɵdirectiveInject(ContactManagerPreferencesService));\n};\n/** @nocollapse */\n\n\nContactManagerWidgetComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ContactManagerWidgetComponent,\n  selectors: [[\"bb-contacts\"], [\"bb-contact-manager-widget\"]],\n  inputs: {\n    newContact: \"newContact\",\n    pageSize: \"pageSize\",\n    maxNavPages: \"maxNavPages\",\n    paginationType: \"paginationType\",\n    notificationDismissTime: \"notificationDismissTime\",\n    createContactEmail: \"createContactEmail\",\n    createContactIBAN: \"createContactIBAN\",\n    createContactAccount: \"createContactAccount\",\n    createContactPhone: \"createContactPhone\"\n  },\n  features: [i0.ɵɵProvidersFeature([RouterService, {\n    provide: ContactsNavigationService,\n    useFactory: makeNavigationService,\n    deps: [RouterService]\n  }, ContactsService, ContactManagerPreferencesService])],\n  decls: 2,\n  vars: 0,\n  template: function ContactManagerWidgetComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"bb-contacts-list-container\");\n      i0.ɵɵelement(1, \"bb-router-outlet\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  directives: [ContactsListContainerComponent, i1.RouterOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\nContactManagerWidgetComponent = __decorate([RoutableWidget({\n  routes: contactsRoutes\n})\n/**\n * A widget for managing contacts.\n *\n * @usageNotes\n *\n * ### Include this widget in your `AppModule`:\n *\n * ```typescript\n * @NgModule({\n *   imports: [\n *     ContactManagerWidgetModule,\n *   ],\n *  providers:[{\n *     provide: ContactsNavigationService,\n *     useFactory: makeNavigationService,\n *     deps: [RouterService],\n *   }],\n *   ...\n * })\n * export class AppModule {}\n * ```\n *\n * ### Include this widget (standalone model)\n *\n * ```typescript\n * export const environment: Environment = {\n *   ...\n *   bootstrap: {\n *     pageModel: {\n *       name: 'root',\n *       properties: {},\n *       children: [\n *         {\n *           name: 'bb-contact-manager-ang',\n *           properties: {\n *             classId: 'ContactManagerWidgetModule',\n *             \"notificationDismissTime\": 0,\n *             \"createContactIBAN\": true,\n *             \"createContactPhone\": true,\n *             \"createContactAccount\": true,\n *             \"createContactEmail\": true\n *           },\n *         },\n *       ],\n *     },\n *   },\n * };\n * ```\n *\n * ### Routable Widget\n *\n * Using the `@CopyRoutes` for component\n *\n * ```typescript\n * @CopyRoutes(ContactManagerWidgetComponent)\n * export class ExtendedContactManagerWidgetComponent\n * ```\n * @ngModule ContactManagerWidgetModule\n */\n, __metadata(\"design:paramtypes\", [ContactManagerPreferencesService])], ContactManagerWidgetComponent);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactManagerWidgetComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-contacts, bb-contact-manager-widget',\n      template: `\n    <bb-contacts-list-container>\n      <bb-router-outlet></bb-router-outlet>\n    </bb-contacts-list-container>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [RouterService, {\n        provide: ContactsNavigationService,\n        useFactory: makeNavigationService,\n        deps: [RouterService]\n      }, ContactsService, ContactManagerPreferencesService]\n    }]\n  }], function () {\n    return [{\n      type: ContactManagerPreferencesService\n    }];\n  }, {\n    newContact: [{\n      type: Input,\n      args: ['newContact']\n    }],\n    pageSize: [{\n      type: Input,\n      args: ['pageSize']\n    }],\n    maxNavPages: [{\n      type: Input,\n      args: ['maxNavPages']\n    }],\n    paginationType: [{\n      type: Input,\n      args: ['paginationType']\n    }],\n    notificationDismissTime: [{\n      type: Input,\n      args: ['notificationDismissTime']\n    }],\n    createContactEmail: [{\n      type: Input,\n      args: ['createContactEmail']\n    }],\n    createContactIBAN: [{\n      type: Input,\n      args: ['createContactIBAN']\n    }],\n    createContactAccount: [{\n      type: Input,\n      args: ['createContactAccount']\n    }],\n    createContactPhone: [{\n      type: Input,\n      args: ['createContactPhone']\n    }]\n  });\n})();\n\nconst uiModules = [ButtonModule, IconModule, NotificationModule, FormsModule, InputTextModule, InputValidationMessageModule, HeaderModule, EmptyStateModule, AvatarModule, PaginatorModule, DropdownMenuModule, EllipsisModule, LoadingIndicatorModule, ErrorCommonStateModule, NgbDropdownModule, NgbTypeaheadModule, ReactiveFormsModule, BbIbanPipeModule, SearchBoxModule, InputEmailModule, LoadButtonModule];\nconst dependentModules = [IbanValidatorModule, NoWhiteSpaceModule, ConfirmActionDialogModule, EmailDomainModule];\nconst components = [ContactManagerWidgetComponent, ContactsListWidgetComponent, ContactsListItemComponent, ContactsListContainerComponent, ContactsDetailComponent, ContactsDetailContainerComponent, ContactsFormComponent, ContactsFormContainerComponent, ContactSelectAccountTypeComponent, ContactsTypeListContainerComponent];\nconst customizationDirectives = [ContactsListContainerCustomizableDirective, ContactsTopSectionCustomizableDirective, ContactsDetailCustomizableDirective, ContactsFormCustomizableDirective, ContactsLoadMoreCustomizableDirective, ContactsLoadingCustomizableDirective, ContactsEmptyStateCustomizableDirective, ContactsEmptySearchStateCustomizableDirective, ContactsErrorStateCustomizableDirective, ContactsCreateErrorNotificationCustomizableDirective, ContactsCreateSuccessNotificationCustomizableDirective, ContactsDeleteConfirmationCustomizableDirective, ContactsDeleteErrorNotificationCustomizableDirective, ContactsDeleteSuccessNotificationCustomizableDirective, ContactsEditDiscardConfirmationCustomizableDirective, ContactsEditErrorNotificationCustomizableDirective, ContactsEditSuccessNotificationCustomizableDirective];\n/**\n * Exports the Widgets and UI components for managing contacts.\n *\n * The following widgets are included in this module:\n *  - `ContactManagerWidgetComponent`\n *\n * @see ContactManagerWidgetComponent\n * @usageNotes\n *\n * ### Include the exported widgets in your `AppModule`:\n *\n * ```typescript\n * @NgModule({\n *   imports: [\n *     ContactManagerWidgetModule,\n *   ],\n *  providers:[{\n *   provide: CONTACT_MANAGER_BASE_PATH,\n *   useFactory: getBasePath('contact-manager'),\n *   deps: [PAGE_CONFIG], },\n * {\n *   provide: ACCESS_CONTROL_BASE_PATH,\n *   useFactory: getBasePath('access-control'),\n *   deps: [PAGE_CONFIG], }]\n *   ...\n * })\n * export class AppModule {}\n * ```\n */\n\nclass ContactManagerWidgetModule {}\n/** @nocollapse */\n\n\nContactManagerWidgetModule.ɵfac = function ContactManagerWidgetModule_Factory(t) {\n  return new (t || ContactManagerWidgetModule)();\n};\n/** @nocollapse */\n\n\nContactManagerWidgetModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ContactManagerWidgetModule\n});\n/** @nocollapse */\n\nContactManagerWidgetModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [CanDeactivateGuard, ContactsService, ...ContactConfigProviders],\n  imports: [[CommonModule, RouterModule, ...dependentModules, ...uiModules, BackbaseCoreModule.withConfig({\n    classMap: {\n      ContactManagerWidgetComponent\n    }\n  })], IbanValidatorModule, NoWhiteSpaceModule, ConfirmActionDialogModule, EmailDomainModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContactManagerWidgetModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, RouterModule, ...dependentModules, ...uiModules, BackbaseCoreModule.withConfig({\n        classMap: {\n          ContactManagerWidgetComponent\n        }\n      })],\n      declarations: [...components, ...customizationDirectives],\n      providers: [CanDeactivateGuard, ContactsService, ...ContactConfigProviders],\n      exports: [...components, ...customizationDirectives, ...dependentModules],\n      entryComponents: [ContactsDetailContainerComponent, ContactsListContainerComponent, ContactsFormContainerComponent, ContactsTypeListContainerComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AccountCreateType, BB_CONTACT_FORM_ADDITIONS_TOKEN, CanDeactivateGuard, ContactManagerPreferencesService, ContactManagerWidgetComponent, ContactManagerWidgetModule, ContactSelectAccountTypeComponent, ContactsCreateErrorNotificationCustomizableDirective, ContactsCreateSuccessNotificationCustomizableDirective, ContactsDeleteConfirmationCustomizableDirective, ContactsDeleteErrorNotificationCustomizableDirective, ContactsDeleteSuccessNotificationCustomizableDirective, ContactsDetailComponent, ContactsDetailContainerComponent, ContactsDetailCustomizableDirective, ContactsEditDiscardConfirmationCustomizableDirective, ContactsEditErrorNotificationCustomizableDirective, ContactsEditSuccessNotificationCustomizableDirective, ContactsEmptySearchStateCustomizableDirective, ContactsEmptyStateCustomizableDirective, ContactsErrorStateCustomizableDirective, ContactsFormComponent, ContactsFormContainerComponent, ContactsFormCustomizableDirective, ContactsListContainerComponent, ContactsListContainerCustomizableDirective, ContactsListItemComponent, ContactsListWidgetComponent, ContactsLoadMoreCustomizableDirective, ContactsLoadingCustomizableDirective, ContactsNavigationService, ContactsTopSectionCustomizableDirective, ContactsTypeListContainerComponent };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/contact-manager-widget-ang/fesm2015/backbase-contact-manager-widget-ang.js"],"names":["i1$2","FormControl","FormsModule","ReactiveFormsModule","i2$1","isPlatformBrowser","CommonModule","i0","Injectable","Optional","Directive","EventEmitter","Component","ChangeDetectionStrategy","Input","Output","ViewChild","InjectionToken","PLATFORM_ID","Inject","ViewChildren","NgModule","__rest","__decorate","__metadata","i1","BbTemplate","RouterService","RoutableWidget","BackbaseCoreModule","i2$2","NavigationEnd","RouterModule","Subject","BehaviorSubject","ReplaySubject","merge","combineLatest","of","Subscription","map","mapTo","scan","switchMap","shareReplay","distinctUntilChanged","catchError","withLatestFrom","mergeMap","take","tap","startWith","takeUntil","filter","debounceTime","i1$1","i8","LoadMoreMethod","ContactActions","toBoolean","toInteger","BB_CONTACT_IBAN_COUNTRIES_LIST","IbanMask","IbanValidatorModule","NoWhiteSpaceModule","ConfirmActionDialogModule","EmailDomainModule","i4","NotificationModule","i2","HeaderModule","i3","IconModule","i6","ButtonModule","i8$1","BbIbanPipeModule","i7","LoadingIndicatorModule","i4$1","InputTextModule","i5","InputValidationMessageModule","i6$1","InputEmailModule","i6$2","PaginatorModule","i7$1","LoadButtonModule","i9","SearchBoxModule","i10","NgbDropdownModule","NgbTypeaheadModule","i12","EmptyStateModule","i13","ErrorCommonStateModule","AvatarModule","DropdownMenuModule","EllipsisModule","AccountCreateType","AccountTypeModelKey","View","ContactsNavigationService","constructor","routerService","_currentView","List","currentView","view","list","page","query","queryParamsHandling","queryParam","undefined","navigate","queryParams","Object","assign","select","id","Detail","edit","type","IBAN","Edit","newContact","Select","newContactForm","ɵfac","ɵprov","ModalOptions","defaultListParams","pagination","from","size","paginationType","PAGINATION","ContactsService","dataService","saveComplete","listParams","selectedItemId","lastSelectedItemId","actions$","pipe","method","action","Load","params","Refresh","items","state","isLoadMoreRefresh","LOAD_MORE","_a","getContacts","toHttpParams","listFromData","response","acc","curr","count","contacts","currentlySelectedItemId","lastItemId","_b","_c","item","contact","getContactsItem","value","firstContact","contactId","getContact","next","deleteSuccess","deleteError","getItemFrom","ids","subscribe","length","find","v","Math","floor","updateItemList","getAccountType","contactItem","checkaccountType","save","isNew","postItem","postContacts","contactsPostRequestBody","res","saveSuccess","putContact","contactPutRequestBody","editSuccess","body","delete","deleteContact","error","entries","accounts","key","values","includes","ContactsHttpService","Error","headers","totalCount","get","ContactManagerPreferencesService","itemModel","_d","_e","_f","_g","_h","_j","newContactSubject$","pageSizeSubject$","maxNavPagesSubject$","paginationTypeSubject$","createContactEmailSubject$","createContactIBANSubject$","createContactAccountSubject$","createContactPhoneSubject$","notificationDismissTimeSubject$","newContactItemModel","property","pageSizeItemModel","maxNavPagesItemModel","paginationTypeItemModel","createContactEmailItemModel","createContactIBANItemModel","createContactAccountItemModel","createContactPhoneItemModel","notificationDismissTimeItemModel","newContact$","getProperty","pageSize$","maxNavPages$","paginationType$","createContactEmail$","createContactIBAN$","createContactAccount$","createContactPhone$","notificationDismissTime$","input$","valueIM","setNewContact","setPageSize","setMaxNavPages","setPaginationType","setNotificationDismissTime","setCreateContactEmail","setCreateContactIBAN","setCreateContactAccount","setCreateContactPhone","ItemModel","decorators","ContactsDeleteConfirmationCustomizableDirective","ɵdir","args","selector","ContactsDetailComponent","service","hostRef","showDetail","editContactsItem","deleteContactsItem","isDeleteConfirmOpened","ngOnInit","emit","openDeleteModal","onConfirmDelete","onCancelDelete","ɵcmp","ContactsDetailCustomizableDirective","HeaderComponent","NgIf","ButtonDirective","IconComponent","ConfirmActionDialogComponent","BbIbanPipe","templateUrl","changeDetection","OnPush","ContactsDeleteSuccessNotificationCustomizableDirective","ContactsDeleteErrorNotificationCustomizableDirective","ContactsDetailContainerComponent","route","navigation","notificationService","propertiesService","itemId","paramMap","notificationTimeout$","contactTypeId$","subscriptions","add","timeout","showNotification","header","deleteSuccessNotificationTemplate","message","modifier","ttl","deleteErrorNotificationTemplate","ngOnDestroy","unsubscribe","accountData","ActivatedRoute","NotificationService","LoadingIndicatorComponent","AsyncPipe","emptyIbanCountriesList","BB_CONTACT_FORM_ADDITIONS_TOKEN","ContactConfigProviders","provide","useValue","additions","ContactsFormComponent","fb","vcRef","platformId","formAdditionsConfig","submitted","ibanMask","disabledSubmit","cancelEdit","backEvent","createAccountTypeRef","ngAfterViewInit","element","nativeElement","querySelector","focus","ngOnChanges","changes","contactsForm","createFormGroupInstance","group","name","accountNumber","email","phoneNumber","saveItem","valid","markAllAsTouched","cancel","back","iban","deleteItemEmit","FormBuilder","ViewContainerRef","ContactsFormCustomizableDirective","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","InputTextComponent","NoWhiteSpaceValidatorDirective","NgControlStatus","FormControlDirective","RequiredValidator","InputValidationMessageComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","NgTemplateOutlet","IbanValidatorDirective","InputEmailComponent","EmailDomainValidatorDirective","ContactsCreateSuccessNotificationCustomizableDirective","ContactsCreateErrorNotificationCustomizableDirective","ContactsEditSuccessNotificationCustomizableDirective","ContactsEditErrorNotificationCustomizableDirective","ContactsEditDiscardConfirmationCustomizableDirective","ContactsFormContainerComponent","cdr","itemType$","fromService","isDiscardConfirmOpened","discard$","isPendingRequest","toService","formComponent","markAsPristine","notificationEditSuccessTemplate","notificationCreateSuccessTemplate","notificationEditErrorTemplate","notificationCreateErrorTemplate","canDeactivate","dirty","complete","markForCheck","surname","initials","onConfirmDiscard","onCancelDiscard","ChangeDetectorRef","discardChangesModalContent","CanDeactivateGuard","component","ContactSelectAccountTypeComponent","selectedAccountType","noOfItemsinList","listOfAccountTypes","enableItem","listItem","updateCreateContactType","$event","NgForOf","ContactsTypeListContainerComponent","contactService","allowEmail$","allowIBAN$","allowAccount$","allowPhone$","createContactList$","contactListItem","Account","Phone","Email","ACCOUNT","valueOf","PHONE","EMAIL","ContactsListItemComponent","showAccountNumber","showAlias","accountTypeKeyRef","createAccountType","ContactsListWidgetComponent","selectedChange","focused","contactItemArray","accountTypeSelected","gc$","data","toArray","getTabIndex","i","clampDesiredFocus","desiredFocus","max","min","onChangeFocusItemTo","event","preventDefault","realisticFocus","_","onContactSelect","index","isListHeading","char","getGroupHeadingChar","trim","latestSeparator","hasNoSeparatorClass","nextItem","nextChar","String","fromCodePoint","codePointAt","toUpperCase","NgClass","ContactsListContainerCustomizableDirective","ContactsTopSectionCustomizableDirective","ContactsLoadMoreCustomizableDirective","ContactsLoadingCustomizableDirective","ContactsEmptyStateCustomizableDirective","ContactsEmptySearchStateCustomizableDirective","ContactsErrorStateCustomizableDirective","ContactsListContainerComponent","router","firstContactEdit","isSearchBoxVisible","searchTerm","containerlistParams","debounceSearch$","newContactAllowed","pageSize","maxNavPages","isListView","events","e","url","isList","queryParamMap","pageParamsFromRoute","results","sort","a","b","toLocaleUpperCase","paginationParams","subscription","term","searchContacts","onSearchTermChange","phrase","clearSearch","onPageChange","loadMore","totalContacts","backToList","setValue","Number","parseInt","Router","PaginatorComponent","LoadButtonComponent","SearchBoxComponent","NgbHighlight","EmptyStateComponent","ErrorCommonStateComponent","makeNavigationService","contactsRoutes","path","ContactManagerWidgetComponent","preferencesService","notificationDismissTime","createContactEmail","createContactIBAN","createContactAccount","createContactPhone","useFactory","deps","RouterOutletDirective","routes","template","providers","uiModules","dependentModules","components","customizationDirectives","ContactManagerWidgetModule","ɵmod","ɵinj","withConfig","classMap","imports","declarations","exports","entryComponents"],"mappings":"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","sourcesContent":["import * as i1$2 from '@angular/forms';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i2$1 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, Directive, EventEmitter, Component, ChangeDetectionStrategy, Input, Output, ViewChild, InjectionToken, PLATFORM_ID, Inject, ViewChildren, NgModule } from '@angular/core';\nimport { __rest, __decorate, __metadata } from 'tslib';\nimport * as i1 from '@backbase/foundation-ang/core';\nimport { BbTemplate, RouterService, RoutableWidget, BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport * as i2$2 from '@angular/router';\nimport { NavigationEnd, RouterModule } from '@angular/router';\nimport { Subject, BehaviorSubject, ReplaySubject, merge, combineLatest, of, Subscription } from 'rxjs';\nimport { map, mapTo, scan, switchMap, shareReplay, distinctUntilChanged, catchError, withLatestFrom, mergeMap, take, tap, startWith, takeUntil, filter, debounceTime } from 'rxjs/operators';\nimport * as i1$1 from '@backbase/data-ang/contact-manager';\nimport * as i8 from '@backbase/contact-common-ang';\nimport { LoadMoreMethod, ContactActions, toBoolean, toInteger, BB_CONTACT_IBAN_COUNTRIES_LIST, IbanMask, IbanValidatorModule, NoWhiteSpaceModule, ConfirmActionDialogModule, EmailDomainModule } from '@backbase/contact-common-ang';\nimport * as i4 from '@backbase/ui-ang/notification';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\nimport * as i2 from '@backbase/ui-ang/header';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport * as i3 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i6 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport * as i8$1 from '@backbase/ui-ang/iban-pipe';\nimport { BbIbanPipeModule } from '@backbase/ui-ang/iban-pipe';\nimport * as i7 from '@backbase/ui-ang/loading-indicator';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport * as i4$1 from '@backbase/ui-ang/input-text';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport * as i5 from '@backbase/ui-ang/input-validation-message';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport * as i6$1 from '@backbase/ui-ang/input-email';\nimport { InputEmailModule } from '@backbase/ui-ang/input-email';\nimport * as i6$2 from '@backbase/ui-ang/pagination';\nimport { PaginatorModule } from '@backbase/ui-ang/pagination';\nimport * as i7$1 from '@backbase/ui-ang/load-button';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport * as i9 from '@backbase/ui-ang/search-box';\nimport { SearchBoxModule } from '@backbase/ui-ang/search-box';\nimport * as i10 from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDropdownModule, NgbTypeaheadModule } from '@ng-bootstrap/ng-bootstrap';\nimport * as i12 from '@backbase/ui-ang/empty-state';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport * as i13 from '@backbase/ui-ang/common-error-state';\nimport { ErrorCommonStateModule } from '@backbase/ui-ang/common-error-state';\nimport { AvatarModule } from '@backbase/ui-ang/avatar';\nimport { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';\nimport { EllipsisModule } from '@backbase/ui-ang/ellipsis';\n\nvar AccountCreateType;\n(function (AccountCreateType) {\n    AccountCreateType[\"IBAN\"] = \"IBAN\";\n    AccountCreateType[\"EMAIL\"] = \"email\";\n    AccountCreateType[\"PHONE\"] = \"phoneNumber\";\n    AccountCreateType[\"ACCOUNT\"] = \"accountNumber\";\n})(AccountCreateType || (AccountCreateType = {}));\nvar AccountTypeModelKey;\n(function (AccountTypeModelKey) {\n    AccountTypeModelKey[\"IBAN\"] = \"IBAN\";\n    AccountTypeModelKey[\"BBAN\"] = \"accountNumber\";\n})(AccountTypeModelKey || (AccountTypeModelKey = {}));\n\nvar View;\n(function (View) {\n    View[\"List\"] = \"LIST\";\n    View[\"Detail\"] = \"DETAIL\";\n    View[\"Edit\"] = \"EDIT\";\n    View[\"Select\"] = \"SELECT\";\n})(View || (View = {}));\n/**\n *\n * This service manages the routes of the widget.\n *\n * @see ContactManagerWidgetModule\n * @usageNotes\n *\n * ### Ensure the ContactManagerWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ContactManagerWidgetModule,\n *   ],\n * })\n * export class ContactManagerWidgetModule {}\n * ```\n *\n * ### Inject this service into your provider\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ContactsNavigationService]\n * })\n *  export class ContactManagerWidgetModule {\n * ```\n */\nclass ContactsNavigationService {\n    /**\n     * @param {RouterService} routerService router service\n     */\n    constructor(routerService) {\n        this.routerService = routerService;\n        this._currentView = View.List;\n    }\n    get currentView() {\n        return this._currentView;\n    }\n    set currentView(view) {\n        this._currentView = view;\n    }\n    /**\n     * Routes to list view\n     *\n     * @param {?number} page current Page number.\n     * @param {?string} query Searched query text\n     * @param {'merge' | 'preserve' | ''} queryParamsHandling query hash handling. default value is merge\n     * @returns {Promise<boolean>} returns a observable of boolean.\n     */\n    list(page, query, queryParamsHandling = 'merge') {\n        const queryParam = {\n            page: page !== undefined && page > -1 ? page : undefined,\n        };\n        if (query || query === '')\n            queryParam.query = query;\n        return this.routerService.navigate(['./'], {\n            queryParams: Object.assign({}, queryParam),\n            queryParamsHandling: queryParamsHandling,\n        });\n    }\n    /**\n     * Routes to select view for contact types.\n     *\n     * @param {string} id - contact ID\n     * @returns {Promise<boolean>} Boolean promise.\n     */\n    select(id) {\n        this.currentView = View.Detail;\n        return this.routerService.navigate([id], { queryParamsHandling: 'merge' });\n    }\n    /**\n     * Routes to edit screen of selected contact.\n     *\n     * @param {string} id - Contact ID, for selected conatct for edit.\n     * @param {string} type - selected type of the contact\n     * @returns {Promise<boolean>} Boolean promise.\n     */\n    edit(id, type = AccountCreateType.IBAN) {\n        this.currentView = View.Edit;\n        return this.routerService.navigate(['edit', id, type], { queryParamsHandling: 'merge' });\n    }\n    /**\n     * Routes to new contact view.\n     *\n     * @returns {Promise<boolean>} Boolean promise.\n     */\n    newContact() {\n        this.currentView = View.Select;\n        return this.routerService.navigate(['select'], { queryParamsHandling: 'merge' });\n    }\n    /**\n     * Route to new contact edit form when new contact is selected.\n     *\n     * @param {AccountCreateType} type whether the new contact is of IBAN/Phone/Email/Account type\n     * @returns {Promise<boolean>} resolves to true when form is ready\n     */\n    newContactForm(type) {\n        this.currentView = View.Edit;\n        return this.routerService.navigate(['edit', 0, type], { queryParamsHandling: 'merge' });\n    }\n}\n/** @nocollapse */ ContactsNavigationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsNavigationService, deps: [{ token: i1.RouterService }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ ContactsNavigationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsNavigationService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsNavigationService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.RouterService }]; } });\n\nvar ModalOptions;\n(function (ModalOptions) {\n    ModalOptions[ModalOptions[\"Cancel\"] = 0] = \"Cancel\";\n    ModalOptions[ModalOptions[\"Success\"] = 1] = \"Success\";\n})(ModalOptions || (ModalOptions = {}));\nconst defaultListParams = {\n    pagination: {\n        from: 0,\n        size: 4,\n        query: '',\n    },\n    paginationType: LoadMoreMethod.PAGINATION,\n};\n/**\n *\n * This service calls the api calls from data-ang\n *\n * @see ContactManagerWidgetModule\n * @usageNotes\n *\n * ### Ensure the ContactManagerWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ContactManagerWidgetModule,\n *   ],\n * })\n * export class ContactManagerWidgetModule {}\n * ```\n *\n * ### Inject this service into your provider\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ContactsService]\n * })\n *  export class ContactManagerWidgetModule {\n * ```\n */\nclass ContactsService {\n    constructor(dataService) {\n        this.dataService = dataService;\n        // \"Events\" - Subjects that are used to trigger actions\n        this.saveComplete = new Subject();\n        this.listParams = new BehaviorSubject(defaultListParams);\n        this.selectedItemId = new ReplaySubject(1);\n        this.lastSelectedItemId = new BehaviorSubject(undefined);\n        this.actions$ = merge(this.listParams.pipe(map(({ pagination, paginationType, method }) => ({\n            action: ContactActions.Load,\n            params: pagination,\n            paginationType,\n            method: method,\n        }))), this.saveComplete.pipe(mapTo({ action: ContactActions.Refresh })));\n        // The params to use for a list request\n        this.items = this.actions$.pipe(scan((state, action) => (Object.assign(Object.assign({}, state), action))), map(({ action, params, paginationType, method }) => {\n            const isLoadMoreRefresh = action === ContactActions.Refresh && paginationType === LoadMoreMethod.LOAD_MORE;\n            return {\n                action,\n                paginationType,\n                params: Object.assign(Object.assign({}, params), (isLoadMoreRefresh ? { from: 0, size: (params.from + 1) * params.size } : {})),\n                method,\n            };\n        }), switchMap((_a) => {\n            var { params, method } = _a, state = __rest(_a, [\"params\", \"method\"]);\n            return this.dataService.getContacts(this.toHttpParams(params), 'response').pipe(map(listFromData), map((response) => (Object.assign(Object.assign(Object.assign(Object.assign({}, response), { params }), state), { method }))));\n        }), scan((acc, curr) => {\n            const { count, action, paginationType, method } = curr;\n            let contacts;\n            if (curr.params.from > 0 &&\n                acc.params.query === curr.params.query &&\n                action !== ContactActions.Refresh &&\n                paginationType === LoadMoreMethod.LOAD_MORE &&\n                method !== 'search') {\n                contacts = [...acc.contacts, ...curr.contacts];\n            }\n            else {\n                contacts = [...curr.contacts];\n            }\n            return {\n                count,\n                contacts,\n                params: curr.params,\n            };\n        }), shareReplay());\n        this.currentlySelectedItemId = combineLatest([\n            this.selectedItemId,\n            this.lastSelectedItemId,\n            this.items,\n        ]).pipe(map(([id, lastItemId, items]) => {\n            var _a, _b, _c;\n            return (_c = (_a = id !== null && id !== void 0 ? id : lastItemId) !== null && _a !== void 0 ? _a : (_b = items.contacts[0]) === null || _b === void 0 ? void 0 : _b.id) !== null && _c !== void 0 ? _c : null;\n        }));\n        this.item = combineLatest([\n            this.currentlySelectedItemId.pipe(distinctUntilChanged()),\n            this.items,\n        ]).pipe(switchMap(([id, items]) => {\n            var _a;\n            if (id === '0') {\n                return of(undefined);\n            }\n            let contact = this.getContactsItem((_a = id !== null && id !== void 0 ? id : this.lastSelectedItemId.value) !== null && _a !== void 0 ? _a : undefined, items);\n            const firstContact = this.getContactsItem(this.firstContact(items.contacts), items);\n            if (!contact && this.lastSelectedItemId.value) {\n                const contactId = this.lastSelectedItemId.value;\n                return this.dataService.getContact({ contactId }).pipe(catchError(() => of(firstContact)));\n            }\n            if (contact) {\n                this.lastSelectedItemId.next(contact.id);\n            }\n            return of(contact || firstContact);\n        }), shareReplay());\n        this.deleteSuccess = new Subject();\n        this.deleteError = new Subject();\n    }\n    /**\n     * Updates the selected contact.\n     *\n     * @param {Observable<ItemId | null>} ids contact Id\n     */\n    getItemFrom(ids) {\n        ids.subscribe((id) => this.selectedItemId.next(id));\n    }\n    firstContact(contacts) {\n        return contacts && contacts.length > 0 ? contacts[0].id : undefined;\n    }\n    /**\n     * Gets the contact in the given list by id.\n     *\n     * @param {string | undefined} id contact ID\n     * @param {ContactList} items all contacts in an array form.\n     * @returns {ContactItem | undefined} contact item from list or undefined\n     */\n    getContactsItem(id, items) {\n        if (!(items && items.contacts && items.contacts.length))\n            return;\n        let item;\n        if (id === '0') {\n            return undefined;\n        }\n        else {\n            item = items.contacts.find((v) => v.id === id);\n        }\n        return item;\n    }\n    toHttpParams(params) {\n        return {\n            from: Math.floor(params.from),\n            size: Math.floor(params.size),\n            query: params.query || undefined,\n        };\n    }\n    /**\n     * Update the list of Parameters when changed.\n     *\n     * @param {?string} query search query\n     * @param {?number} page current Page of contact lists\n     * @param {?number} size no of records to be shown on one page\n     * @param {?string} paginationType type of pagination `load-more` or `pagination`\n     * @param {?string} method enumerated value\n     */\n    updateItemList(query, page, size, paginationType, method) {\n        this.listParams.next({\n            pagination: {\n                query: query || '',\n                from: page || 0,\n                size: size || 5,\n            },\n            paginationType: paginationType || LoadMoreMethod.PAGINATION,\n            method,\n        });\n    }\n    /**\n     * Gets the account Type for the contacts.\n     *\n     * @returns {Observable<string>} Observable of a string with accountType\n     */\n    getAccountType() {\n        return this.item.pipe(map((contactItem) => (contactItem ? this.checkaccountType(contactItem) : AccountCreateType.IBAN)));\n    }\n    /**\n     * Calls the update API for contacts when updated.\n     *\n     * @param {ContactItem} item - Updated contact.\n     * @returns {Observable<string | undefined>} the observable of updated ID of contact.\n     */\n    save(item) {\n        if (isNew(item)) {\n            const postItem = item;\n            return this.dataService\n                .postContacts({ contactsPostRequestBody: postItem }, 'response')\n                .pipe(map((res) => this.saveSuccess(res)));\n        }\n        else {\n            return this.dataService\n                .putContact({ contactId: item.id, contactPutRequestBody: item }, 'response')\n                .pipe(map((res) => this.editSuccess(res, item.id)));\n        }\n    }\n    /**\n     * Returns the contact Id when updated.\n     *\n     * @param {HttpResponse<Id>} res save response\n     * @returns {string | undefined} contact ID.\n     */\n    saveSuccess(res) {\n        if (res.body && res.body.id) {\n            this.saveComplete.next();\n            return res.body.id;\n        }\n        else {\n            // error state\n            return undefined;\n        }\n    }\n    /**\n     * Returns the ID of the contact when edit is successful\n     *\n     * @param {HttpResponse<ContactUpdateDeleteResponse>} res response of editing a contact.\n     * @param {string} id Contact ID.\n     * @returns {string | undefined} the ID of contact when edit is successful.\n     */\n    editSuccess(res, id) {\n        if (res.body) {\n            this.saveComplete.next();\n            return id;\n        }\n        else {\n            // error state\n            return undefined;\n        }\n    }\n    /**\n     * Calls the deletion API.\n     *\n     * @param {string} contactId - Contact ID for selected contact.\n     * @returns {Subscription} Subscription of deletion api.\n     */\n    delete(contactId) {\n        return this.dataService.deleteContact({ contactId }).subscribe(() => {\n            this.deleteSuccess.next();\n            this.saveComplete.next();\n        }, (error) => this.deleteError.next(error));\n    }\n    /**\n     * Returns the account Type for the given contact\n     *\n     * @param {ContactItem} item contact object.\n     * @returns {string} type of account for one contact.\n     */\n    checkaccountType(item) {\n        if (item) {\n            return ((Object.entries(item === null || item === void 0 ? void 0 : item.accounts[0]).find(([key, value]) => Object.values(AccountCreateType).includes(key) && value) || [])[0] || AccountCreateType.IBAN);\n        }\n        return AccountCreateType.IBAN;\n    }\n}\n/** @nocollapse */ ContactsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsService, deps: [{ token: i1$1.ContactsHttpService }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ ContactsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.ContactsHttpService }]; } });\n/**\n * Returns if the contact is new or is being edited.\n *\n * @param {ContactItem} item contact object\n * @returns {boolean} whether the item is new or existing\n */\nfunction isNew(item) {\n    return item.id === undefined || item.id === '';\n}\n/**\n * Returns the contact list in a format.\n *\n * @param {HttpResponse<Contacts>} response http response with data\n * @returns {ContactList} contacts list with total count.\n */\nfunction listFromData(response) {\n    if (response.body === null) {\n        throw new Error('Response body not set');\n    }\n    const headers = response.headers;\n    const totalCount = headers.get('X-Total-Count');\n    return {\n        count: totalCount ? +totalCount : null,\n        contacts: response.body,\n    };\n}\n\n/**\n *\n * This service manages the widget properties.\n *\n * @see ContactManagerWidgetModule\n * @usageNotes\n *\n * ### Ensure the ContactManagerWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ContactManagerWidgetModule,\n *   ],\n * })\n * export class ContactManagerWidgetModule {}\n * ```\n *\n * ### Inject this service to the providers.\n *\n * ```ts\n * @Component({\n *   ...\n *  providers: [\n * {\n *   provide: ContactManagerPreferencesService,\n *   useClass: ContactManagerJourneyPreferencesService,\n * },\n * })\n *  export class ContactManagerWidgetModule {\n * ```\n */\nclass ContactManagerPreferencesService {\n    constructor(itemModel) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        this.itemModel = itemModel;\n        this.newContactSubject$ = new BehaviorSubject(undefined);\n        this.pageSizeSubject$ = new BehaviorSubject(undefined);\n        this.maxNavPagesSubject$ = new BehaviorSubject(undefined);\n        this.paginationTypeSubject$ = new BehaviorSubject(undefined);\n        this.createContactEmailSubject$ = new BehaviorSubject(undefined);\n        this.createContactIBANSubject$ = new BehaviorSubject(undefined);\n        this.createContactAccountSubject$ = new BehaviorSubject(undefined);\n        this.createContactPhoneSubject$ = new BehaviorSubject(undefined);\n        this.notificationDismissTimeSubject$ = new BehaviorSubject(undefined);\n        this.newContactItemModel = (_a = this.itemModel) === null || _a === void 0 ? void 0 : _a.property('newContact').pipe(map(toBoolean));\n        this.pageSizeItemModel = (_b = this.itemModel) === null || _b === void 0 ? void 0 : _b.property('pageSize').pipe(map(toInteger));\n        this.maxNavPagesItemModel = (_c = this.itemModel) === null || _c === void 0 ? void 0 : _c.property('maxNavPages').pipe(map(toInteger));\n        this.paginationTypeItemModel = (_d = this.itemModel) === null || _d === void 0 ? void 0 : _d.property('paginationType');\n        this.createContactEmailItemModel = (_e = this.itemModel) === null || _e === void 0 ? void 0 : _e.property('createContactEmail').pipe(map(toBoolean));\n        this.createContactIBANItemModel = (_f = this.itemModel) === null || _f === void 0 ? void 0 : _f.property('createContactIBAN').pipe(map(toBoolean));\n        this.createContactAccountItemModel = (_g = this.itemModel) === null || _g === void 0 ? void 0 : _g.property('createContactAccount').pipe(map(toBoolean));\n        this.createContactPhoneItemModel = (_h = this.itemModel) === null || _h === void 0 ? void 0 : _h.property('createContactPhone').pipe(map(toBoolean));\n        this.notificationDismissTimeItemModel = (_j = this.itemModel) === null || _j === void 0 ? void 0 : _j.property('notificationDismissTime').pipe(map(toInteger));\n        this.newContact$ = this.getProperty(this.newContactSubject$, this.newContactItemModel);\n        this.pageSize$ = this.getProperty(this.pageSizeSubject$, this.pageSizeItemModel);\n        this.maxNavPages$ = this.getProperty(this.maxNavPagesSubject$, this.maxNavPagesItemModel);\n        this.paginationType$ = this.getProperty(this.paginationTypeSubject$, this.paginationTypeItemModel);\n        this.createContactEmail$ = this.getProperty(this.createContactEmailSubject$, this.createContactEmailItemModel);\n        this.createContactIBAN$ = this.getProperty(this.createContactIBANSubject$, this.createContactIBANItemModel);\n        this.createContactAccount$ = this.getProperty(this.createContactAccountSubject$, this.createContactAccountItemModel);\n        this.createContactPhone$ = this.getProperty(this.createContactPhoneSubject$, this.createContactPhoneItemModel);\n        this.notificationDismissTime$ = this.getProperty(this.notificationDismissTimeSubject$, this.notificationDismissTimeItemModel);\n    }\n    getProperty(input$, itemModel) {\n        return combineLatest([input$, itemModel]).pipe(map(([value, valueIM]) => (value === undefined ? valueIM : value)));\n    }\n    /**\n     *  Update the new Contact value\n     *\n     * @param {boolean} value selected value\n     */\n    setNewContact(value) {\n        this.newContactSubject$.next(value);\n    }\n    /**\n     *  Update the pageSize value\n     *\n     * @param {number} value selected value\n     */\n    setPageSize(value) {\n        this.pageSizeSubject$.next(value);\n    }\n    /**\n     *  Update the maxNavPages value\n     *\n     * @param {number} value selected value\n     */\n    setMaxNavPages(value) {\n        this.maxNavPagesSubject$.next(value);\n    }\n    /**\n     *  Update the paginationType value\n     *\n     * @param {string} value selected value\n     */\n    setPaginationType(value) {\n        this.paginationTypeSubject$.next(value);\n    }\n    /**\n     *  Update the notificationDissmissTime value\n     *\n     * @param {number} value selected value\n     */\n    setNotificationDismissTime(value) {\n        this.notificationDismissTimeSubject$.next(value);\n    }\n    /**\n     *  Update the createContactEmail value\n     *\n     * @param {boolean} value selected value\n     */\n    setCreateContactEmail(value) {\n        this.createContactEmailSubject$.next(value);\n    }\n    /**\n     *  Update the createContactIBAN value\n     *\n     * @param {boolean} value selected value\n     */\n    setCreateContactIBAN(value) {\n        this.createContactIBANSubject$.next(value);\n    }\n    /**\n     *  Update the createContactAccount value\n     *\n     * @param {boolean} value selected value\n     */\n    setCreateContactAccount(value) {\n        this.createContactAccountSubject$.next(value);\n    }\n    /**\n     *  Update the createContactPhone value\n     *\n     * @param {boolean} value selected value\n     */\n    setCreateContactPhone(value) {\n        this.createContactPhoneSubject$.next(value);\n    }\n}\n/** @nocollapse */ ContactManagerPreferencesService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactManagerPreferencesService, deps: [{ token: i1.ItemModel, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ ContactManagerPreferencesService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactManagerPreferencesService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactManagerPreferencesService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.ItemModel, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * This is an extension slot to be used for customizing delete confirmation dialog\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsDeleteConfirmationCustomizable let-hostRef let-context=\"context\">\n *   <div class=\"modal-header\">\n *     <h4 i18n=\"@@contact-manager-detail.header.delete.contact\" class=\"modal-title\" data-role=\"delete-contact-label\">\n *       Delete Contact\n *     </h4>\n *   </div>\n *   <div i18n=\"@@contact-manager-detail.delete.confirmation\" class=\"modal-body\" role=\"alert\">\n *     <p class=\"break-word\">\n *       Are you sure you want to delete {{ hostRef.item.name }} from your contacts? This action cannot be undone.\n *     </p>\n *   </div>\n *   <div class=\"bb-button-bar bb-button-bar--reverse modal-footer\">\n *     <button\n *       i18n=\"@@contact-manager-detail.button.cancel\"\n *       type=\"button\"\n *       class=\"bb-button-bar__button\"\n *       bbButton\n *       color=\"secondary\"\n *       (click)=\"context.dismiss()\"\n *     >\n *       Not now\n *     </button>\n *     <button\n *       i18n=\"@@contact-manager-detail.button.delete\"\n *       type=\"button\"\n *       class=\"bb-button-bar__button\"\n *       bbButton\n *       color=\"danger\"\n *       data-role=\"confirm-delete-button\"\n *       (click)=\"hostRef.deleteContact()\"\n *     >\n *       Delete\n *     </button>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsDeleteConfirmationCustomizableDirective extends BbTemplate {\n}\n/** @nocollapse */ ContactsDeleteConfirmationCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsDeleteConfirmationCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ ContactsDeleteConfirmationCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsDeleteConfirmationCustomizableDirective, selector: \"[bbContactsDeleteConfirmationCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsDeleteConfirmationCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbContactsDeleteConfirmationCustomizable]',\n                }]\n        }] });\n\n/**\n * Displays a detail of contact selected.\n *\n * The following extension slots are available in this component:\n *  - `ContactsDetailCustomizableDirective`\n *\n * @see ContactsDetailCustomizableDirective\n * @usageNotes\n *\n * ### Display a details of contacts\n *\n * ```html\n * <bb-contacts-detail\n *    [showDetail]=\"false\"\n *    [item]=\"hostRef.item\"\n *    [type]=\"hostRef.type\"\n *    (deleteContactsItem)=\"hostRef.deleteItemEmit()\"\n *    (editContactsItem)=\"hostRef.editContactsItem()\"\n * ></bb-contacts-detail>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsDetailComponent {\n    constructor(service) {\n        this.service = service;\n        this.hostRef = this;\n        /**\n         * Wether to show user details or not\n         */\n        this.showDetail = true;\n        /**\n         * Event emitted when contact is edited\n         */\n        this.editContactsItem = new EventEmitter();\n        /**\n         * Event emitted when contact is deleted\n         */\n        this.deleteContactsItem = new EventEmitter();\n        this.isDeleteConfirmOpened = false;\n    }\n    /**\n     * OnInit - lifecycle hook.\n     */\n    ngOnInit() {\n        if (this.item === undefined) {\n            throw new Error('`item` input is required in `bb-contacts-detail` component');\n        }\n    }\n    /**\n     *  Will emit the event when contact is edited.\n     *\n     * @param {string} id the contact id that has to be edited.\n     */\n    edit(id) {\n        this.editContactsItem.emit({ id: id, type: this.type });\n    }\n    /**\n     * opens modal for delete confirmation\n     */\n    openDeleteModal() {\n        this.isDeleteConfirmOpened = true;\n    }\n    /**\n     * event handler for confirming delete\n     */\n    onConfirmDelete() {\n        this.deleteContactsItem.emit(this.item.id);\n        this.isDeleteConfirmOpened = false;\n    }\n    /**\n     * event handler for rejecting delete\n     */\n    onCancelDelete() {\n        this.isDeleteConfirmOpened = false;\n    }\n}\n/** @nocollapse */ ContactsDetailComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsDetailComponent, deps: [{ token: ContactsService }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ ContactsDetailComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsDetailComponent, selector: \"bb-contacts-detail\", inputs: { type: \"type\", showDetail: \"showDetail\", item: \"item\" }, outputs: { editContactsItem: \"editContactsItem\", deleteContactsItem: \"deleteContactsItem\" }, ngImport: i0, template: \"<ng-container bbContactsDetailCustomizable [bbHostRef]=\\\"hostRef\\\" [bbTemplateContext]=\\\"item\\\"></ng-container>\\n<ng-template bbContactsDetailCustomizable let-hostRef let-item=\\\"item\\\">\\n  <div class=\\\"bb-block bb-block--xl\\\">\\n    <div class=\\\"bb-stack bb-stack--align-bottom\\\">\\n      <div class=\\\"bb-stack__item bb-stack__item--fill\\\">\\n        <div class=\\\"bb-block\\\" data-role=\\\"contact-details-info-name\\\">\\n          <span\\n            class=\\\"d-none\\\"\\n            data-role=\\\"create-contact-label\\\"\\n            aria-hidden=\\\"true\\\"\\n            i18n=\\\"Create contact heading | Title shown when user is in create contact@@contact-manager-detail.create.heading\\\"\\n            #heading\\n          >\\n            Create contact\\n          </span>\\n          <bb-header-ui\\n            data-role=\\\"create-new-contact-label\\\"\\n            headingType=\\\"h3\\\"\\n            headingClasses=\\\"break-word\\\"\\n            [heading]=\\\"hostRef.item.name || heading.textContent\\\"\\n          >\\n          </bb-header-ui>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"hostRef.item.name\\\" class=\\\"bb-stack__item bb-stack__item--push-right\\\">\\n        <span bbTooltip=\\\"Edit\\\" triggers=\\\"hover focus\\\" i18n-bbTooltip=\\\"@@contact-manager-detail.button.edit.tooltip\\\">\\n          <button\\n            data-role=\\\"contact-edit-button\\\"\\n            bbButton\\n            circle=\\\"true\\\"\\n            color=\\\"link\\\"\\n            (click)=\\\"hostRef.edit(hostRef.item.id)\\\"\\n            i18n=\\\"Edit Contact Button | Button for editing an existing contact@@contact-manager-detail.button.edit\\\"\\n            aria-label=\\\"Edit Contact\\\"\\n            i18n-aria-label=\\\"Edit Contact | Aria label edit contact menu@@contact-manager-detail.label.actions.edit\\\"\\n          >\\n            <bb-icon-ui name=\\\"edit\\\" color=\\\"dark\\\"></bb-icon-ui>\\n          </button>\\n        </span>\\n        <span bbTooltip=\\\"Delete\\\" triggers=\\\"hover focus\\\" i18n-bbTooltip=\\\"@@contact-manager-detail.button.delete.tooltip\\\">\\n          <button\\n            bbButton\\n            circle=\\\"true\\\"\\n            color=\\\"link\\\"\\n            (click)=\\\"hostRef.openDeleteModal()\\\"\\n            i18n=\\\"Delete Contact Button | Button for deleting an existing contact@@contact-manager-detail.detail.button.delete\\\"\\n            data-role=\\\"delete-button\\\"\\n            aria-label=\\\"Delete Contact\\\"\\n            i18n-aria-label=\\\"Delete Contact | Aria label delete contact menu@@contact-manager-detail.label.actions.delete\\\"\\n          >\\n            <bb-icon-ui name=\\\"delete\\\" color=\\\"dark\\\"></bb-icon-ui>\\n          </button>\\n        </span>\\n      </div>\\n    </div>\\n    <hr />\\n  </div>\\n  <div class=\\\"bb-lock bb-lock bb-block--lg\\\" *ngIf=\\\"hostRef.showDetail\\\">\\n    <span\\n      class=\\\"d-none\\\"\\n      aria-hidden=\\\"true\\\"\\n      i18n=\\\"Account number | Heading for account number or IBAN or Email or Phone@@contact-manager-detail.label.account.type.heading\\\"\\n      #heading\\n    >\\n      {hostRef.type, select, IBAN {IBAN} accountNumber {Account number} email { Email} phoneNumber { Phone number} other\\n      {IBAN} }\\n    </span>\\n    <bb-header-ui headingType=\\\"h5\\\" [heading]=\\\"heading.textContent\\\" class=\\\"bb-block bb-block-md\\\"></bb-header-ui>\\n    <div class=\\\"bb-bock bb-block-md\\\" data-role=\\\"contact-details-info\\\">\\n      <ng-container *ngIf=\\\"hostRef.item?.accounts[0] as account\\\">\\n        <ng-container *ngIf=\\\"hostRef.type === 'IBAN'; else notIban\\\">\\n          {{ account[hostRef.type] | bbIban }}\\n        </ng-container>\\n        <ng-template #notIban>{{ account[hostRef.type] }} </ng-template>\\n      </ng-container>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-container bbContactsDeleteConfirmationCustomizable [bbHostRef]=\\\"hostRef\\\"></ng-container>\\n<ng-template bbContactsDeleteConfirmationCustomizable let-hostRef>\\n  <bb-confirm-action-dialog\\n    [isOpen]=\\\"hostRef.isDeleteConfirmOpened\\\"\\n    [confirmButtonColor]=\\\"'danger'\\\"\\n    (confirm)=\\\"hostRef.onConfirmDelete()\\\"\\n    (cancel)=\\\"hostRef.onCancelDelete()\\\"\\n  >\\n    <span title i18n=\\\"@@contact-manager-detail.header.delete.contact\\\" data-role=\\\"delete-contact-label\\\"\\n      >Delete Contact</span\\n    >\\n    <span body i18n=\\\"@@contact-manager-detail.delete.confirmation\\\">\\n      Are you sure you want to delete {{ hostRef.item.name }} from your contacts? This action cannot be undone.\\n    </span>\\n    <span cancelButtonLabel i18n=\\\"@@contact-manager-detail.button.cancel\\\">Not now</span>\\n    <span confirmButtonLabel i18n=\\\"@@contact-manager-detail.button.delete\\\" data-role=\\\"confirm-delete-button\\\"\\n      >Delete</span\\n    >\\n  </bb-confirm-action-dialog>\\n</ng-template>\\n\", components: [{ type: i0.forwardRef(function () { return i2.HeaderComponent; }), selector: \"bb-header-ui\", inputs: [\"headingClasses\", \"headingType\", \"heading\"] }, { type: i0.forwardRef(function () { return i3.IconComponent; }), selector: \"bb-icon-ui\", inputs: [\"name\", \"inverse\", \"size\", \"color\", \"animate\", \"aria-label\", \"cropped\", \"backgroundType\"] }, { type: i0.forwardRef(function () { return i8.ConfirmActionDialogComponent; }), selector: \"bb-confirm-action-dialog\", inputs: [\"confirmButtonColor\", \"cancelButtonColor\", \"isOpen\", \"attachComment\", \"commentFieldLabel\"], outputs: [\"confirm\", \"cancel\"] }], directives: [{ type: i0.forwardRef(function () { return ContactsDetailCustomizableDirective; }), selector: \"[bbContactsDetailCustomizable]\" }, { type: i0.forwardRef(function () { return i2$1.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i0.forwardRef(function () { return i6.ButtonDirective; }), selector: \"button[bbButton]\", inputs: [\"type\", \"color\", \"buttonSize\", \"block\", \"circle\"] }, { type: i0.forwardRef(function () { return ContactsDeleteConfirmationCustomizableDirective; }), selector: \"[bbContactsDeleteConfirmationCustomizable]\" }], pipes: { \"bbIban\": i0.forwardRef(function () { return i8$1.BbIbanPipe; }) }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsDetailComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-contacts-detail',\n                    templateUrl: './contacts-detail.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: ContactsService }]; }, propDecorators: { type: [{\n                type: Input\n            }], showDetail: [{\n                type: Input\n            }], item: [{\n                type: Input\n            }], editContactsItem: [{\n                type: Output\n            }], deleteContactsItem: [{\n                type: Output\n            }] } });\n/**\n * This is an extension slot to be used for customizing an item of the contact details.\n *\n * @usageNotes\n *\n * ### Display a contact details\n *\n * ```html\n * <ng-template bbContactsDetailCustomizable let-hostRef let-item=\"item\">\n * <div class=\"bb-block bb-block--xl\">\n *   <div class=\"bb-stack bb-stack--align-bottom\">\n *     <div class=\"bb-stack__item bb-stack__item--fill\">\n *       <div\n *         class=\"bb-block\"\n *         data-role=\"contact-details-info-name\"\n *       >\n *         <span\n *           class=\"d-none\"\n *           data-role=\"create-contact-label\"\n *           aria-hidden=\"true\"\n *           i18n-heading=\"Create contact heading | Title shown when user is in\n *                        create contact@@contact-manager-detail.create.heading\"\n *          #heading\n *         >\n *           Create contact\n *         </span>\n *         <bb-header-ui\n *           data-role=\"create-new-contact-label\"\n *           headingType=\"h3\"\n *           [heading]=\"hostRef.item.name || heading.textContent\"\n *         >\n *         </bb-header-ui>\n *       </div>\n *     </div>\n *     <div\n *      *ngIf=\"hostRef.item.name\"\n *       class=\"bb-stack__item bb-stack__item--push-right\"\n *     >\n *       <span\n *         bbTooltip=\"Edit\"\n *         triggers=\"hover focus\"\n *       >\n *         <button\n *           data-role=\"contact-edit-button\"\n *           bbButton\n *           circle=\"true\"\n *           color=\"link\"\n *           (click)=\"hostRef.edit(hostRef.item.id)\"\n *           i18n=\"Edit Contact Button | Button for editing an existing contact@@contact-manager-detail.button.edit\"\n *           aria-label=\"Edit Contact\"\n *           i18n-aria-label=\"Edit Contact | Aria label edit contact menu@@contact-manager-detail.label.actions.edit\"\n *         >\n *           <bb-icon-ui\n *             name=\"edit\"\n *             color=\"dark\"\n *           ></bb-icon-ui>\n *         </button>\n *       </span>\n *       <span\n *         bbTooltip=\"Delete\"\n *         triggers=\"hover focus\"\n *       >\n *         <button data-role=\"contact-delete-button\"\n *           bbButton\n *           circle=\"true\"\n *           color=\"link\"\n *           (click)=\"hostRef.openDeleteModal(hostRef.modalContent)\"\n *           i18n=\"Delete Contact Button | Button for deleting an existing contact@@contact-manager-detail.detail.button.delete\"\n *           data-role=\"delete-button\"\n *           aria-label=\"Delete Contact\"\n *           i18n-aria-label=\"Delete Contact | Aria label delete contact menu@@contact-manager-detail.label.actions.delete\"\n *         >\n *           <bb-icon-ui name=\"delete\" color=\"dark\"></bb-icon-ui>\n *         </button>\n *       </span>\n *     </div>\n *   </div>\n *   <hr/>\n * </div>\n * <div\n *   class=\"bb-lock bb-lock bb-block--lg\"\n *  *ngIf=\"hostRef.showDetail\"\n * >\n *   <span\n *     class=\"d-none\"\n *     aria-hidden=\"true\"\n *     i18n=\"Account number | Heading for account number or\n *      IBAN or Email or Phone@@contact-manager-detail.label.account.type.heading\"\n *     #heading\n *   >\n *    {hostRef.type, select, IBAN {IBAN}  accountNumber {Account number} email { Email} phoneNumber { Phone number} other {IBAN} }\n *   </span>\n *   <bb-header-ui\n *     headingType=\"h5\"\n *     [heading]=\"heading.textContent\"\n *     class=\"bb-block bb-block-md\"\n *   >\n *   </bb-header-ui>\n *   <div\n *     class=\"bb-bock bb-block-md\"\n *     data-role=\"contact-details-info-alias\"\n *   >\n *   <span *ngIf=\"hostRef.item?.accounts[0] as account\">\n *     {{ account[hostRef.type] }}\n *   </span>\n *   </div>\n * </div>\n *</ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsDetailCustomizableDirective extends BbTemplate {\n}\n/** @nocollapse */ ContactsDetailCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsDetailCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ ContactsDetailCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsDetailCustomizableDirective, selector: \"[bbContactsDetailCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsDetailCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbContactsDetailCustomizable]',\n                }]\n        }] });\n\n/**\n * This is an extension slot to be used for customizing success notification after deleting a contact\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsDeleteSuccessNotificationCustomizable>\n *   <span\n *     i18n=\"Notification delete success message@@contact-manager-detail-container.notification.delete.success\"\n *     role=\"alert\"\n *     aria-atomic=\"true\"\n *   >\n *     Contact was deleted succesfully\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsDeleteSuccessNotificationCustomizableDirective extends BbTemplate {\n}\n/** @nocollapse */ ContactsDeleteSuccessNotificationCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsDeleteSuccessNotificationCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ ContactsDeleteSuccessNotificationCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsDeleteSuccessNotificationCustomizableDirective, selector: \"[bbContactsDeleteSuccessNotificationCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsDeleteSuccessNotificationCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbContactsDeleteSuccessNotificationCustomizable]',\n                }]\n        }] });\n\n/**\n * This is an extension slot to be used for customizing error notification after deleting a contact\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsDeleteErrorNotificationCustomizable>\n *   <span\n *     i18n=\"Notification delete failed error message@@contact-manager-detail-container.notification.delete.error\"\n *     role=\"alert\"\n *     aria-atomic=\"true\"\n *   >\n *     Error deleting contact\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsDeleteErrorNotificationCustomizableDirective extends BbTemplate {\n}\n/** @nocollapse */ ContactsDeleteErrorNotificationCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsDeleteErrorNotificationCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ ContactsDeleteErrorNotificationCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsDeleteErrorNotificationCustomizableDirective, selector: \"[bbContactsDeleteErrorNotificationCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsDeleteErrorNotificationCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbContactsDeleteErrorNotificationCustomizable]',\n                }]\n        }] });\n\n/**\n * Container component for showing contact details.\n *\n * @usageNotes\n *\n * ### Display details of the contact.\n *\n * ```html\n * <bb-contacts-detail-container></bb-contacts-detail-container>\n * ```\n *\n * ### Additionally use the container component in routing.\n *\n * ```typescript\n * const routes: [\n * {\n *  path: '',\n *  component: ContactsDetailContainerComponent\n * }]\n *\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsDetailContainerComponent {\n    constructor(service, route, navigation, notificationService, propertiesService) {\n        this.service = service;\n        this.route = route;\n        this.navigation = navigation;\n        this.notificationService = notificationService;\n        this.propertiesService = propertiesService;\n        this.hostRef = this;\n        this.itemId = this.route.paramMap.pipe(map((params) => params.get('id')));\n        this.item = this.service.item; //.pipe(map(item => this.fromService(item)));\n        this.notificationTimeout$ = this.propertiesService.notificationDismissTime$;\n        this.contactTypeId$ = this.service.getAccountType();\n        this.subscriptions = new Subscription();\n        service.getItemFrom(this.itemId);\n    }\n    /**\n     * onInit - lifecycle hook\n     */\n    ngOnInit() {\n        this.subscriptions.add(this.itemId.subscribe((itemId) => {\n            if (!itemId) {\n                this.navigation.currentView = View.List;\n            }\n            else {\n                this.navigation.currentView = View.Detail;\n            }\n        }));\n        this.subscriptions.add(this.service.deleteSuccess\n            .pipe(withLatestFrom(this.notificationTimeout$), map(([response, timeout]) => ({ timeout })))\n            .subscribe(({ timeout }) => this.notificationService.showNotification({\n            header: this.deleteSuccessNotificationTemplate,\n            message: '',\n            modifier: 'success',\n            ttl: timeout,\n        })));\n        this.subscriptions.add(this.service.deleteError\n            .pipe(withLatestFrom(this.notificationTimeout$), map(([error, timeout]) => ({ error, timeout })))\n            .subscribe(({ error, timeout }) => this.notificationService.showNotification({\n            header: this.deleteErrorNotificationTemplate,\n            message: '',\n            modifier: 'error',\n            ttl: timeout,\n        })));\n    }\n    /**\n     * OnDestroy- lifecycle hook Unsubscribing the subscription.\n     */\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n    }\n    /**\n     *  Emits the output when edit is clicked.\n     *\n     * @param {SelectContactEvent} accountData - An object which contains id and type of contact to be edited.\n     */\n    edit(accountData) {\n        this.navigation.edit(accountData.id, accountData.type);\n    }\n    /**\n     * Method that calls the delete service and returns to list view.\n     *\n     * @param {string} id - contact ID which has to be deleted.\n     */\n    deleteContactsItem(id) {\n        this.service.delete(id);\n        this.navigation.list();\n        this.navigation.currentView = View.List;\n    }\n}\n/** @nocollapse */ ContactsDetailContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsDetailContainerComponent, deps: [{ token: ContactsService }, { token: i2$2.ActivatedRoute }, { token: ContactsNavigationService }, { token: i4.NotificationService }, { token: ContactManagerPreferencesService }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ ContactsDetailContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsDetailContainerComponent, selector: \"bb-contacts-detail-container\", viewQueries: [{ propertyName: \"deleteSuccessNotificationTemplate\", first: true, predicate: [\"deleteSuccessNotificationTemplate\"], descendants: true }, { propertyName: \"deleteErrorNotificationTemplate\", first: true, predicate: [\"deleteErrorNotificationTemplate\"], descendants: true }], ngImport: i0, template: \"<ng-container *ngIf=\\\"item | async as item; else loadingTemplate\\\">\\n  <bb-contacts-detail\\n    [item]=\\\"item\\\"\\n    [type]=\\\"contactTypeId$ | async\\\"\\n    (editContactsItem)=\\\"edit($event)\\\"\\n    (deleteContactsItem)=\\\"deleteContactsItem($event)\\\"\\n  >\\n  </bb-contacts-detail>\\n</ng-container>\\n\\n<ng-template #loadingTemplate>\\n  <div class=\\\"bb-state-container\\\">\\n    <bb-loading-indicator-ui\\n      i18n-text=\\\"@@contact-manager-detail-container.loading.label\\\"\\n      text=\\\"Loading...\\\"\\n    ></bb-loading-indicator-ui>\\n  </div>\\n</ng-template>\\n\\n<ng-template #deleteSuccessNotificationTemplate>\\n  <ng-container bbContactsDeleteSuccessNotificationCustomizable [bbHostRef]=\\\"hostRef\\\"></ng-container>\\n  <ng-template bbContactsDeleteSuccessNotificationCustomizable>\\n    <span\\n      i18n=\\\"Notification delete success message@@contact-manager-detail-container.notification.delete.success\\\"\\n      role=\\\"alert\\\"\\n      aria-atomic=\\\"true\\\"\\n    >\\n      Contact was deleted succesfully\\n    </span>\\n  </ng-template>\\n</ng-template>\\n\\n<ng-template #deleteErrorNotificationTemplate>\\n  <ng-container bbContactsDeleteErrorNotificationCustomizable [bbHostRef]=\\\"hostRef\\\"></ng-container>\\n  <ng-template bbContactsDeleteErrorNotificationCustomizable>\\n    <span\\n      i18n=\\\"Notification delete failed error message@@contact-manager-detail-container.notification.delete.error\\\"\\n      role=\\\"alert\\\"\\n      aria-atomic=\\\"true\\\"\\n    >\\n      Error deleting contact\\n    </span>\\n  </ng-template>\\n</ng-template>\\n\", components: [{ type: ContactsDetailComponent, selector: \"bb-contacts-detail\", inputs: [\"type\", \"showDetail\", \"item\"], outputs: [\"editContactsItem\", \"deleteContactsItem\"] }, { type: i7.LoadingIndicatorComponent, selector: \"bb-loading-indicator-ui\", inputs: [\"text\", \"loaderSize\", \"showDelay\", \"hasBackground\", \"inline\"] }], directives: [{ type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: ContactsDeleteSuccessNotificationCustomizableDirective, selector: \"[bbContactsDeleteSuccessNotificationCustomizable]\" }, { type: ContactsDeleteErrorNotificationCustomizableDirective, selector: \"[bbContactsDeleteErrorNotificationCustomizable]\" }], pipes: { \"async\": i2$1.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsDetailContainerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-contacts-detail-container',\n                    templateUrl: './contacts-detail-container.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: ContactsService }, { type: i2$2.ActivatedRoute }, { type: ContactsNavigationService }, { type: i4.NotificationService }, { type: ContactManagerPreferencesService }]; }, propDecorators: { deleteSuccessNotificationTemplate: [{\n                type: ViewChild,\n                args: ['deleteSuccessNotificationTemplate']\n            }], deleteErrorNotificationTemplate: [{\n                type: ViewChild,\n                args: ['deleteErrorNotificationTemplate']\n            }] } });\n\nconst emptyIbanCountriesList = {};\nconst BB_CONTACT_FORM_ADDITIONS_TOKEN = new InjectionToken('BB_CONTACT_FORM_ADDITIONS_TOKEN');\nconst ContactConfigProviders = [\n    {\n        provide: BB_CONTACT_FORM_ADDITIONS_TOKEN,\n        useValue: { additions: undefined },\n    },\n    {\n        provide: BB_CONTACT_IBAN_COUNTRIES_LIST,\n        useValue: emptyIbanCountriesList,\n    },\n];\n\n/**\n * Displays a contact form.\n *\n * The following extension slots are available in this component:\n *  - `ContactsFormCustomizableDirective`\n *\n * @see ContactsFormCustomizableDirective\n * @usageNotes\n *\n * ### Display a form for adding / editing the contact form.\n *\n * ```html\n *  <bb-contacts-form\n *   [item]=\"item\"\n *   [type]=\"itemType$ | async\"\n *   (save)=\"save($event)\"\n *   (cancelEdit)=\"cancelEdit($event)\"\n *   (backEvent)=\"back($event)\"\n *   (deleteContactsItem)=\"deleteContactsItem($event)\"\n * ></bb-contacts-form>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsFormComponent {\n    constructor(fb, vcRef, platformId, formAdditionsConfig) {\n        this.fb = fb;\n        this.vcRef = vcRef;\n        this.platformId = platformId;\n        this.formAdditionsConfig = formAdditionsConfig;\n        this.hostRef = this;\n        this.submitted = false;\n        this.ibanMask = IbanMask;\n        /**\n         * Controls whether form can be submitted\n         */\n        this.disabledSubmit = false;\n        /**\n         * Event emitted when contact edit is saved\n         */\n        this.save = new EventEmitter();\n        /**\n         * Event emitted when contact edit is cancelled\n         */\n        this.cancelEdit = new EventEmitter();\n        /**\n         * Event emitted when user clicks back\n         */\n        this.backEvent = new EventEmitter();\n        /**\n         * Event emitted when contact is deleted\n         */\n        this.deleteContactsItem = new EventEmitter();\n        /**\n         * Contact account Type reference.\n         */\n        this.createAccountTypeRef = AccountCreateType;\n    }\n    /**\n     * OnInit - lifecycle hook.\n     */\n    ngOnInit() {\n        if (this.item === undefined) {\n            throw new Error('`item` input is required in `bb-contact-form` component');\n        }\n    }\n    /**\n     * AfterViewInt- lifecycle hook.\n     */\n    ngAfterViewInit() {\n        var _a;\n        if (isPlatformBrowser(this.platformId)) {\n            (_a = this.vcRef.element.nativeElement.querySelector('input')) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n    }\n    /**\n     * OnChanges - lifecycle hook.\n     *\n     * @param {SimpleChanges} changes angular SimpleChanges object\n     */\n    ngOnChanges(changes) {\n        if (changes.type) {\n            this.submitted = false;\n            this.contactsForm = this.createFormGroupInstance();\n        }\n    }\n    createFormGroupInstance() {\n        const { additions } = Object.assign({}, this.formAdditionsConfig);\n        return this.fb.group(Object.assign({ name: [this.item.name], IBAN: [this.item.IBAN], accountNumber: [this.item.accountNumber], email: [this.item.email], phoneNumber: [this.item.phoneNumber] }, (additions ? { additions: this.fb.group(additions) } : {})));\n    }\n    /**\n     * saveItem - method that emits the data when saved.\n     */\n    saveItem() {\n        this.submitted = true;\n        if (this.contactsForm.valid) {\n            this.save.emit(Object.assign(Object.assign({}, this.item), (this.contactsForm ? this.contactsForm.value : {})));\n        }\n        else {\n            this.contactsForm.markAllAsTouched();\n        }\n    }\n    /**\n     * emits the id of the contact that has cancelled.\n     */\n    cancel() {\n        this.cancelEdit.emit(this.item.id);\n    }\n    /**\n     * emits the id, when back is clicked.\n     */\n    back() {\n        this.backEvent.emit(this.item.id);\n    }\n    get name() {\n        return this.contactsForm.get('name');\n    }\n    get iban() {\n        return this.contactsForm.get('IBAN');\n    }\n    get accountNumber() {\n        return this.contactsForm.get('accountNumber');\n    }\n    /**\n     *  the id of the contact is emitted when deleted.\n     */\n    deleteItemEmit() {\n        this.deleteContactsItem.emit(this.item.id);\n    }\n}\n/** @nocollapse */ ContactsFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsFormComponent, deps: [{ token: i1$2.FormBuilder }, { token: i0.ViewContainerRef }, { token: PLATFORM_ID }, { token: BB_CONTACT_FORM_ADDITIONS_TOKEN, optional: true }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ ContactsFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsFormComponent, selector: \"bb-contacts-form\", inputs: { item: \"item\", type: \"type\", disabledSubmit: \"disabledSubmit\" }, outputs: { save: \"save\", cancelEdit: \"cancelEdit\", backEvent: \"backEvent\", deleteContactsItem: \"deleteContactsItem\" }, usesOnChanges: true, ngImport: i0, template: \"<ng-container bbContactsFormCustomizable [bbHostRef]=\\\"hostRef\\\" [bbTemplateContext]=\\\"item\\\"></ng-container>\\n<ng-template bbContactsFormCustomizable let-hostRef>\\n  <bb-contacts-detail\\n    [showDetail]=\\\"false\\\"\\n    [item]=\\\"hostRef.item\\\"\\n    [type]=\\\"hostRef.type\\\"\\n    (deleteContactsItem)=\\\"hostRef.deleteItemEmit()\\\"\\n  ></bb-contacts-detail>\\n  <bb-loading-indicator-ui *ngIf=\\\"hostRef.disabledSubmit\\\"></bb-loading-indicator-ui>\\n  <form\\n    *ngIf=\\\"hostRef.contactsForm\\\"\\n    [hidden]=\\\"hostRef.disabledSubmit\\\"\\n    (submit)=\\\"hostRef.saveItem()\\\"\\n    [formGroup]=\\\"hostRef.contactsForm\\\"\\n    class=\\\"bb-block bb-block--xl\\\"\\n  >\\n    <div class=\\\"row\\\">\\n      <div class=\\\"bb-block bb-block--xl col-12\\\" data-role=\\\"contact-account-info-account-name1\\\">\\n        <bb-input-text-ui\\n          id=\\\"bb-create-contact-name\\\"\\n          data-role=\\\"new-contact-name\\\"\\n          label=\\\"Name\\\"\\n          i18n-label=\\\"Contacts name label | Label for contacts detail component name@@contact-manager-form.label.name\\\"\\n          [formControl]=\\\"hostRef.contactsForm.controls.name\\\"\\n          [maxLength]=\\\"140\\\"\\n          [required]=\\\"true\\\"\\n          bbNoWhiteSpace\\n        >\\n        </bb-input-text-ui>\\n        <bb-input-validation-message-ui\\n          class=\\\"position-absolute\\\"\\n          role=\\\"alert\\\"\\n          [showErrors]=\\\"hostRef.contactsForm.controls.name.errors?.required && hostRef.contactsForm.controls.name.touched\\\"\\n        >\\n          <span\\n            i18n=\\\"\\n                Contacts name required error text | Text for contacts detail component name required\\n                error@@contact-manager-form.label.nameRequired\\n              \\\"\\n            data-role=\\\"missing-account-name\\\"\\n          >\\n            Name is required\\n          </span>\\n        </bb-input-validation-message-ui>\\n      </div>\\n      <div class=\\\"bb-block bb-block--xl col-12\\\">\\n        <ng-container [ngSwitch]=\\\"hostRef.type\\\">\\n          <ng-container *ngSwitchCase=\\\"hostRef.createAccountTypeRef.IBAN\\\">\\n            <ng-container *ngTemplateOutlet=\\\"iban\\\"></ng-container>\\n          </ng-container>\\n          <ng-container *ngSwitchCase=\\\"hostRef.createAccountTypeRef.EMAIL\\\">\\n            <ng-container *ngTemplateOutlet=\\\"email\\\"></ng-container>\\n          </ng-container>\\n          <ng-container *ngSwitchCase=\\\"hostRef.createAccountTypeRef.PHONE\\\">\\n            <ng-container *ngTemplateOutlet=\\\"phone\\\"></ng-container>\\n          </ng-container>\\n          <ng-container *ngSwitchCase=\\\"hostRef.createAccountTypeRef.ACCOUNT\\\">\\n            <ng-container *ngTemplateOutlet=\\\"bban\\\"></ng-container>\\n          </ng-container>\\n          <ng-container *ngSwitchDefault>\\n            <ng-container *ngTemplateOutlet=\\\"iban\\\"></ng-container>\\n          </ng-container>\\n        </ng-container>\\n      </div>\\n    </div>\\n    <div class=\\\"bb-button-bar bb-button-bar--spacing-sm\\\">\\n      <button\\n        bbButton\\n        class=\\\"bb-button-bar__button\\\"\\n        type=\\\"submit\\\"\\n        color=\\\"primary\\\"\\n        name=\\\"save\\\"\\n        data-role=\\\"save-button\\\"\\n        i18n=\\\"Save current form | Save button text for saving a contact item@@contact-manager-form.button.save\\\"\\n        [disabled]=\\\"hostRef.submitted && hostRef.contactsForm.invalid || hostRef.disabledSubmit\\\"\\n      >\\n        Save\\n      </button>\\n      <button\\n        bbButton\\n        color=\\\"secondary\\\"\\n        type=\\\"button\\\"\\n        class=\\\"bb-button-bar__button\\\"\\n        name=\\\"back\\\"\\n        data-role=\\\"contacts-form-back-button\\\"\\n        i18n=\\\"\\n        Back action in current form | Back button text for going back to selection@@contact-manager-form.button.back\\n      \\\"\\n        (click)=\\\"hostRef.back()\\\"\\n      >\\n        Back\\n      </button>\\n      <button\\n        bbButton\\n        color=\\\"link-text\\\"\\n        type=\\\"button\\\"\\n        class=\\\"bb-button-bar__button bb-button-bar__button--across\\\"\\n        name=\\\"cancel\\\"\\n        data-role=\\\"contacts-form-cancel-button\\\"\\n        i18n=\\\"\\n          Cancel action in current form | Cancel button text for cancelling a creation of a new\\n          contact@@contact-manager-form.button.cancel\\n        \\\"\\n        (click)=\\\"hostRef.cancel()\\\"\\n      >\\n        Cancel\\n      </button>\\n    </div>\\n  </form>\\n\\n  <ng-template #iban>\\n    <bb-input-text-ui\\n      id=\\\"bb-create-contact-iban\\\"\\n      label=\\\"IBAN\\\"\\n      i18n-label=\\\"@@contact-manager-form.label.bban\\\"\\n      data-role=\\\"new-contact-iban\\\"\\n      [formControl]=\\\"hostRef.contactsForm.controls.IBAN\\\"\\n      [maxLength]=\\\"hostRef.ibanMask.length\\\"\\n      [required]=\\\"true\\\"\\n      [mask]=\\\"hostRef.ibanMask\\\"\\n      [maskValidator]=\\\"false\\\"\\n      bbIbanValidator\\n    >\\n    </bb-input-text-ui>\\n\\n    <ng-container\\n      *ngTemplateOutlet=\\\"err; context:{ control: hostRef.contactsForm.controls.IBAN, errorMessageAcctType: hostRef.type }\\\"\\n    >\\n    </ng-container>\\n\\n    <bb-input-validation-message-ui\\n      class=\\\"position-absolute\\\"\\n      role=\\\"alert\\\"\\n      [showErrors]=\\\"hostRef.contactsForm.controls.IBAN.touched\\n      && hostRef.contactsForm.controls.IBAN.errors?.invalidIban\\\"\\n    >\\n      <ng-container>\\n        <span\\n          i18n=\\\"\\n            Contacts account number invalid error text | Text for contacts detail component iban invalid\\n            error@@contact-manager-form.label.ibanInvalid\\n          \\\"\\n          data-role=\\\"invalid-account-number-error-label\\\"\\n        >\\n          Invalid IBAN\\n        </span>\\n      </ng-container>\\n    </bb-input-validation-message-ui>\\n  </ng-template>\\n\\n  <ng-template #bban>\\n    <bb-input-text-ui\\n      id=\\\"bb-create-contact-bban\\\"\\n      label=\\\"Account number\\\"\\n      i18n-label=\\\"@@contact-manager-form.label.account.number\\\"\\n      data-role=\\\"new-contact-bban\\\"\\n      [formControl]=\\\"hostRef.contactsForm.controls.accountNumber\\\"\\n      [maxLength]=\\\"34\\\"\\n      [required]=\\\"true\\\"\\n    >\\n    </bb-input-text-ui>\\n\\n    <ng-container\\n      *ngTemplateOutlet=\\\"err; context:{ control: hostRef.contactsForm.controls.accountNumber, errorMessageAcctType: hostRef.type }\\\"\\n    >\\n    </ng-container>\\n  </ng-template>\\n\\n  <ng-template #email>\\n    <label\\n      #contactsEmailLabel\\n      id=\\\"bb-create-contact-email-label\\\"\\n      data-role=\\\"contact-account-create-email-label\\\"\\n      i18n=\\\"@@contact-personal-data.contactEmail.label\\\"\\n      class=\\\"mb-2\\\"\\n    >\\n      Email\\n      <small class=\\\"d-block bb-text-support bb-text-default\\\">E.g. sarawilliams@backbase.com</small>\\n    </label>\\n    <bb-input-email-ui\\n      [aria-labelledby]=\\\"contactsEmailLabel.id\\\"\\n      [formControl]=\\\"hostRef.contactsForm.controls.email\\\"\\n      [maxLength]=\\\"255\\\"\\n      [required]=\\\"true\\\"\\n      data-role=\\\"new-contact-email\\\"\\n      bbEmailDomainValidator\\n    >\\n    </bb-input-email-ui>\\n\\n    <ng-container\\n      *ngTemplateOutlet=\\\"err; context:{ control: hostRef.contactsForm.controls.email, errorMessageAcctType: hostRef.type }\\\"\\n    >\\n    </ng-container>\\n    <bb-input-validation-message-ui\\n      class=\\\"position-absolute\\\"\\n      role=\\\"alert\\\"\\n      [showErrors]=\\\"hostRef.contactsForm.controls.email.touched\\n      && hostRef.contactsForm.controls.email.errors?.email\\\"\\n    >\\n      <ng-container>\\n        <span\\n          i18n=\\\"\\n          Contacts email id invalid error text | Text for contacts detail component email invalid\\n          error@@contact-manager-form.label.email.invalid\\n        \\\"\\n          data-role=\\\"invalid-email-error-label\\\"\\n        >\\n          Invalid email\\n        </span>\\n      </ng-container>\\n    </bb-input-validation-message-ui>\\n  </ng-template>\\n\\n  <ng-template #phone>\\n    <label\\n      #contactsPhoneLabel\\n      id=\\\"bb-create-contact-phone-label\\\"\\n      data-role=\\\"contact-account-create-phone\\\"\\n      i18n=\\\"@@contact-manager-form.label.phoneNumber\\\"\\n      class=\\\"mb-2\\\"\\n    >\\n      Phone number\\n      <small id=\\\"example-number\\\" class=\\\"d-block bb-text-support bb-text-default\\\">E.g. +12027953213</small>\\n    </label>\\n    <bb-input-text-ui\\n      [formControl]=\\\"hostRef.contactsForm.controls.phoneNumber\\\"\\n      [maxLength]=\\\"30\\\"\\n      [required]=\\\"true\\\"\\n      [aria-labelledby]=\\\"contactsPhoneLabel.id\\\"\\n      aria-describedby=\\\"example-number\\\"\\n      data-role=\\\"new-contact-phone\\\"\\n    >\\n    </bb-input-text-ui>\\n    <ng-container\\n      *ngTemplateOutlet=\\\"err; context:{ control: hostRef.contactsForm.controls.phoneNumber && hostRef.contactsForm.controls.phoneNumber, errorMessageAcctType: hostRef.type }\\\"\\n    >\\n    </ng-container>\\n  </ng-template>\\n\\n  <ng-template #err let-control=\\\"control\\\" let-errorMessageAcctType=\\\"errorMessageAcctType\\\">\\n    <bb-input-validation-message-ui\\n      class=\\\"position-absolute\\\"\\n      role=\\\"alert\\\"\\n      [showErrors]=\\\"control.errors?.required\\n    && control.touched\\n\\\"\\n    >\\n      <ng-container [ngSwitch]=\\\"errorMessageAcctType\\\">\\n        <span\\n          *ngSwitchCase=\\\"hostRef.createAccountTypeRef.ACCOUNT\\\"\\n          i18n=\\\"\\n            Contacts account number required error text | Text for contacts detail component account number required\\n            error@@contact-manager-form.label.account.required\\n          \\\"\\n          data-role=\\\"missing-account-number-error-label\\\"\\n        >\\n          Account number is required\\n        </span>\\n        <span\\n          *ngSwitchCase=\\\"hostRef.createAccountTypeRef.IBAN\\\"\\n          i18n=\\\"\\n            Contacts IBAN required error text | Text for contacts detail component IBAN required\\n            error@@contact-manager-form.label.iban.required\\n          \\\"\\n          data-role=\\\"missing-account-number-error-label\\\"\\n        >\\n          IBAN is required\\n        </span>\\n        <span\\n          *ngSwitchCase=\\\"hostRef.createAccountTypeRef.PHONE\\\"\\n          i18n=\\\"\\n            Contacts Phone number required error text | Text for contacts detail component Phone required\\n            error@@contact-manager-form.label.phone.number.required\\n          \\\"\\n          data-role=\\\"missing-phone-number-error-label\\\"\\n        >\\n          Phone number is required\\n        </span>\\n        <span\\n          *ngSwitchCase=\\\"hostRef.createAccountTypeRef.EMAIL\\\"\\n          i18n=\\\"\\n            Contacts EMAIL required error text | Text for contacts detail component Email required\\n            error@@contact-manager-form.label.email.required\\n          \\\"\\n          data-role=\\\"missing-email-error-label\\\"\\n        >\\n          Email is required\\n        </span>\\n      </ng-container>\\n    </bb-input-validation-message-ui>\\n  </ng-template>\\n</ng-template>\\n\", components: [{ type: i0.forwardRef(function () { return ContactsDetailComponent; }), selector: \"bb-contacts-detail\", inputs: [\"type\", \"showDetail\", \"item\"], outputs: [\"editContactsItem\", \"deleteContactsItem\"] }, { type: i0.forwardRef(function () { return i7.LoadingIndicatorComponent; }), selector: \"bb-loading-indicator-ui\", inputs: [\"text\", \"loaderSize\", \"showDelay\", \"hasBackground\", \"inline\"] }, { type: i0.forwardRef(function () { return i4$1.InputTextComponent; }), selector: \"bb-input-text-ui\", inputs: [\"placeholder\", \"maxLength\", \"minLength\", \"autocomplete\", \"readonly\", \"mask\", \"maskValidator\", \"showCharCounter\"], outputs: [\"valueChange\"] }, { type: i0.forwardRef(function () { return i5.InputValidationMessageComponent; }), selector: \"bb-input-validation-message-ui\", inputs: [\"showErrors\", \"messageId\"] }, { type: i0.forwardRef(function () { return i6$1.InputEmailComponent; }), selector: \"bb-input-email-ui\", inputs: [\"placeholder\", \"maxLength\", \"minLength\", \"readonly\", \"autocomplete\"] }], directives: [{ type: i0.forwardRef(function () { return ContactsFormCustomizableDirective; }), selector: \"[bbContactsFormCustomizable]\" }, { type: i0.forwardRef(function () { return i2$1.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i0.forwardRef(function () { return i1$2.ɵNgNoValidate; }), selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i0.forwardRef(function () { return i1$2.NgControlStatusGroup; }), selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i0.forwardRef(function () { return i1$2.FormGroupDirective; }), selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i0.forwardRef(function () { return i8.NoWhiteSpaceValidatorDirective; }), selector: \"[bbNoWhiteSpace]\" }, { type: i0.forwardRef(function () { return i1$2.NgControlStatus; }), selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i0.forwardRef(function () { return i1$2.FormControlDirective; }), selector: \"[formControl]\", inputs: [\"disabled\", \"formControl\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { type: i0.forwardRef(function () { return i1$2.RequiredValidator; }), selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { type: i0.forwardRef(function () { return i2$1.NgSwitch; }), selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i0.forwardRef(function () { return i2$1.NgSwitchCase; }), selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i0.forwardRef(function () { return i2$1.NgTemplateOutlet; }), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i0.forwardRef(function () { return i2$1.NgSwitchDefault; }), selector: \"[ngSwitchDefault]\" }, { type: i0.forwardRef(function () { return i6.ButtonDirective; }), selector: \"button[bbButton]\", inputs: [\"type\", \"color\", \"buttonSize\", \"block\", \"circle\"] }, { type: i0.forwardRef(function () { return i8.IbanValidatorDirective; }), selector: \"[bbIbanValidator]\" }, { type: i0.forwardRef(function () { return i8.EmailDomainValidatorDirective; }), selector: \"[bbEmailDomainValidator]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsFormComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-contacts-form',\n                    templateUrl: './contacts-form.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: i1$2.FormBuilder }, { type: i0.ViewContainerRef }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [BB_CONTACT_FORM_ADDITIONS_TOKEN]\n                }] }]; }, propDecorators: { item: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], disabledSubmit: [{\n                type: Input\n            }], save: [{\n                type: Output\n            }], cancelEdit: [{\n                type: Output\n            }], backEvent: [{\n                type: Output\n            }], deleteContactsItem: [{\n                type: Output\n            }] } });\n/**\n * This is an extension slot to be used for customizing an form of contacts editing.\n *\n * @usageNotes\n *\n * ### Display a contact form.\n *\n * ```html\n *  <bb-contacts-detail\n *   [showDetail]=\"false\"\n *   [item]=\"hostRef.item\"\n *   [type]=\"hostRef.type\"\n *   (deleteContactsItem)=\"hostRef.deleteItemEmit()\"\n * ></bb-contacts-detail>\n * <form\n *  *ngIf=\"hostRef.contactsForm\"\n *   (submit)=\"hostRef.saveItem()\"\n *   [formGroup]=\"hostRef.contactsForm\"\n *   class=\"bb-block bb-block--xl\"\n * >\n *   <fieldSet>\n *     <div class=\"row\">\n *       <div\n *         class=\"bb-block bb-block--lg col-12\"\n *         data-role=\"contact-account-info-account-name1\"\n *       >\n *         <label\n *           [for]=\"contactsName.id\"\n *           data-role=\"edit-contact-label\"\n *           i18n=\"Contacts name label | Label for contacts detail component name@@contact-manager-form.label.name\"\n *         >\n *           Name\n *         </label>\n *         <bb-input-text-ui\n *           data-role=\"new-contact-name\"\n *           [formControl]=\"hostRef.contactsForm.controls.name\"\n *           name=\"contactsName\"\n *           #contactsName\n *           [maxLength]=\"140\"\n *           [required]=\"hostRef.submitted\"\n *         >\n *         </bb-input-text-ui>\n *\n *         <bb-input-validation-message-ui\n *           role=\"alert\"\n *           [showErrors]=\"\n *             hostRef.contactsForm.controls.name.invalid &&\n *             (hostRef.contactsForm.controls.name.dirty || hostRef.contactsForm.controls.name.touched)\n *           \">\n *           <ng-container\n *           *ngIf=\"hostRef.contactsForm.controls.name.errors?.required || hostRef.contactsForm.controls.name.errors?.minlength\">\n *             <span\n *               i18n=\"\n *                 Contacts name required error text | Text for contacts detail component name required\n *                 error@@contact-manager-form.label.nameRequired\n *               \"\n *               data-role=\"missing-account-name\">\n *               Name is required\n *             </span>\n *           </ng-container>\n *         </bb-input-validation-message-ui>\n *       </div>\n *       <div class=\"bb-block bb-block--lg col-12\">\n *         <ng-container [ngSwitch]=\"hostRef.type\">\n *           <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.IBAN\">\n *             <ng-container *ngTemplateOutlet=\"iban\"></ng-container>\n *           </ng-container>\n *           <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.EMAIL\">\n *             <ng-container *ngTemplateOutlet=\"email\"></ng-container>\n *           </ng-container>\n *           <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.PHONE\">\n *             <ng-container *ngTemplateOutlet=\"phone\"></ng-container>\n *           </ng-container>\n *           <ng-container *ngSwitchCase=\"hostRef.createAccountTypeRef.ACCOUNT\">\n *             <ng-container *ngTemplateOutlet=\"bban\"></ng-container>\n *           </ng-container>\n *           <ng-container *ngSwitchDefault>\n *             <ng-container *ngTemplateOutlet=\"iban\"></ng-container>\n *           </ng-container>\n *         </ng-container>\n *\n *       </div>\n *     </div>\n *   </fieldSet>\n *   <div class=\"bb-button-bar\">\n *     <button\n *       bbButton\n *       type=\"submit\"\n *       color=\"primary\"\n *       type=\"submit\"\n *       [disabled]=\"hostRef.contactsForm.invalid || !hostRef.contactsForm?.controls?.name?.value.trim()\"\n *       class=\"bb-button-bar__button\"\n *       name=\"save\"\n *       data-role=\"save-button\"\n *       i18n=\"Save current form | Save button text for saving a contact item@@contact-manager-form.button.save\"\n *     >\n *       Save\n *     </button>\n *     <button\n *     bbButton\n *     color=\"secondary\"\n *     (click)=\"hostRef.back()\"\n *     type=\"button\"\n *     class=\"bb-button-bar__button\"\n *     name=\"back\"\n *     data-role=\"contacts-form-back-button\"\n *     i18n=\"\n *       Back action in current form | Back button text for going back to selection@@contact-manager-form.button.back\n *     \"\n *   >\n *     Back\n *   </button>\n *     <button\n *       bbButton\n *       color=\"link-text\"\n *       (click)=\"hostRef.cancel()\"\n *       type=\"button\"\n *       class=\"bb-button-bar__button bb-button-bar__button--across\"\n *       name=\"cancel\"\n *       data-role=\"contacts-form-cancel-button\"\n *       i18n=\"\n *         Cancel action in current form | Cancel button text for cancelling a creation of a new\n *         contact@@contact-manager-form.button.cancel\n *       \"\n *     >\n *       Cancel\n *     </button>\n *   </div>\n * </form>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsFormCustomizableDirective extends BbTemplate {\n}\n/** @nocollapse */ ContactsFormCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsFormCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ ContactsFormCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsFormCustomizableDirective, selector: \"[bbContactsFormCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsFormCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbContactsFormCustomizable]',\n                }]\n        }] });\n\n/**\n * This is an extension slot to be used for customizing success notification after creating a contact\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsCreateSuccessNotificationCustomizable>\n *   <span\n *     i18n=\"@@contact-manager-form-container.notification-create.success\"\n *     data-role=\"successfully-saved-contact\"\n *     role=\"alert\"\n *     aria-atomic=\"true\"\n *   >\n *     Successfully saved Contact\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsCreateSuccessNotificationCustomizableDirective extends BbTemplate {\n}\n/** @nocollapse */ ContactsCreateSuccessNotificationCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsCreateSuccessNotificationCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ ContactsCreateSuccessNotificationCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsCreateSuccessNotificationCustomizableDirective, selector: \"[bbContactsCreateSuccessNotificationCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsCreateSuccessNotificationCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbContactsCreateSuccessNotificationCustomizable]',\n                }]\n        }] });\n\n/**\n * This is an extension slot to be used for customizing error notification after creating a contact\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsCreateErrorNotificationCustomizable>\n *   <span\n *     i18n=\"@@contact-manager-form-container.notification-create.error\"\n *     data-role=\"failed-to-save-contact\"\n *     role=\"alert\"\n *     aria-atomic=\"true\"\n *   >\n *     Error saving Contact\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsCreateErrorNotificationCustomizableDirective extends BbTemplate {\n}\n/** @nocollapse */ ContactsCreateErrorNotificationCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsCreateErrorNotificationCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ ContactsCreateErrorNotificationCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsCreateErrorNotificationCustomizableDirective, selector: \"[bbContactsCreateErrorNotificationCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsCreateErrorNotificationCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbContactsCreateErrorNotificationCustomizable]',\n                }]\n        }] });\n\n/**\n * This is an extension slot to be used for customizing success notification after editing a contact\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsEditSuccessNotificationCustomizable>\n *   <span\n *     i18n=\"@@contact-manager-form-container.notification-edit.success\"\n *     data-role=\"successfully-saved-contact\"\n *     role=\"alert\"\n *     aria-atomic=\"true\"\n *   >\n *     Successfully saved Contact\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsEditSuccessNotificationCustomizableDirective extends BbTemplate {\n}\n/** @nocollapse */ ContactsEditSuccessNotificationCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsEditSuccessNotificationCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ ContactsEditSuccessNotificationCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsEditSuccessNotificationCustomizableDirective, selector: \"[bbContactsEditSuccessNotificationCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsEditSuccessNotificationCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbContactsEditSuccessNotificationCustomizable]',\n                }]\n        }] });\n\n/**\n * This is an extension slot to be used for customizing error notification after editing a contact\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsEditErrorNotificationCustomizable>\n *   <span\n *     i18n=\"@@contact-manager-form-container.notification-edit.error\"\n *     data-role=\"failed-to-save-contact\"\n *     role=\"alert\"\n *     aria-atomic=\"true\"\n *   >\n *     Error saving Contact\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsEditErrorNotificationCustomizableDirective extends BbTemplate {\n}\n/** @nocollapse */ ContactsEditErrorNotificationCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsEditErrorNotificationCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ ContactsEditErrorNotificationCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsEditErrorNotificationCustomizableDirective, selector: \"[bbContactsEditErrorNotificationCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsEditErrorNotificationCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbContactsEditErrorNotificationCustomizable]',\n                }]\n        }] });\n\n/**\n * This is an extension slot to be used for customizing confirmation dialog of discarding changes\n *\n * @example\n *\n * ```html\n * <ng-template bbContactsEditDiscardConfirmationCustomizable let-hostRef let-context=\"context\">\n *   <div class=\"modal-header\">\n *     <h4 i18n=\"@contact-manager-form-container.header.discardChanges\" class=\"modal-title\">Discard Changes</h4>\n *   </div>\n *   <div class=\"modal-body\" role=\"alert\">\n *     <p i18n=\"@@contact-manager-form-container.discardChangesConfirmation\">\n *       Are you sure you want to discard your changes? This action cannot be undone.\n *     </p>\n *   </div>\n *   <div class=\"modal-footer\">\n *     <div class=\"d-flex flex-row-reverse\">\n *       <button\n *         class=\"ml-3\"\n *         bbButton\n *         color=\"danger\"\n *         i18n=\"@@contact-manager-form-container.button.discard\"\n *         type=\"button\"\n *         (click)=\"hostRef.discardChanges()\"\n *       >\n *         Discard\n *       </button>\n *       <button\n *         i18n=\"@@contact-manager-form-container.button.cancel\"\n *         type=\"button\"\n *         bbButton\n *         color=\"secondary\"\n *         (click)=\"context.dismiss()\"\n *       >\n *         Not now\n *       </button>\n *     </div>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsEditDiscardConfirmationCustomizableDirective extends BbTemplate {\n}\n/** @nocollapse */ ContactsEditDiscardConfirmationCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsEditDiscardConfirmationCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ ContactsEditDiscardConfirmationCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsEditDiscardConfirmationCustomizableDirective, selector: \"[bbContactsEditDiscardConfirmationCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsEditDiscardConfirmationCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbContactsEditDiscardConfirmationCustomizable]',\n                }]\n        }] });\n\n/**\n * Container component for showing contact details.\n *\n * @usageNotes\n *\n * ### Display create/ edit form for contacts\n *\n * ```html\n * <bb-contacts-form-container></bb-contacts-form-container>\n * ```\n *\n * ### Additionally use the container component in routing.\n *\n * ```typescript\n * const routes: [\n *   {\n *   path: 'edit/:id/:type',\n *   canDeactivate: [CanDeactivateGuard],\n *   component: ContactsFormContainerComponent,\n * }]\n *\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsFormContainerComponent {\n    constructor(service, route, navigation, notificationService, propertiesService, cdr) {\n        this.service = service;\n        this.route = route;\n        this.navigation = navigation;\n        this.notificationService = notificationService;\n        this.propertiesService = propertiesService;\n        this.cdr = cdr;\n        this.hostRef = this;\n        this.itemId = this.route.paramMap.pipe(map((params) => params.get('id')));\n        this.itemType$ = this.route.paramMap.pipe(map((params) => params.get('type')));\n        this.item = this.service.item.pipe(map((item) => this.fromService(item)));\n        this.notificationTimeout$ = this.propertiesService.notificationDismissTime$;\n        this.isDiscardConfirmOpened = false;\n        this.discard$ = new Subject();\n        this.isPendingRequest = false;\n        service.getItemFrom(this.itemId);\n    }\n    /**\n     * onInit - lifecycle hook for setting current view.\n     */\n    ngOnInit() {\n        this.navigation.currentView = View.Edit;\n        this.isPendingRequest = false;\n    }\n    /**\n     * Calling the save api and showing the notification.\n     *\n     * @param {ContactsFormItem} item - Contact Object while save\n     */\n    save(item) {\n        this.isPendingRequest = true;\n        this.itemId\n            .pipe(mergeMap(() => this.service.save(this.toService(item))), catchError(() => of(undefined)), withLatestFrom(this.notificationTimeout$), map(([id, timeout]) => ({ id, timeout })), take(1))\n            .subscribe(({ id, timeout }) => {\n            this.isPendingRequest = false;\n            this.formComponent.contactsForm.markAsPristine();\n            if (id) {\n                this.navigation.select(id);\n                this.notificationService.showNotification({\n                    header: (item.id\n                        ? this.notificationEditSuccessTemplate\n                        : this.notificationCreateSuccessTemplate),\n                    message: '',\n                    modifier: 'success',\n                    ttl: timeout,\n                });\n            }\n            else {\n                this.notificationService.showNotification({\n                    header: (item.id\n                        ? this.notificationEditErrorTemplate\n                        : this.notificationCreateErrorTemplate),\n                    message: '',\n                    modifier: 'error',\n                    ttl: timeout,\n                });\n            }\n            this.navigation.currentView = View.List;\n            this.navigation.list();\n        });\n    }\n    /**\n     * showing the confirmation modal, when moving away from route.\n     *\n     * @returns {Promise<boolean> | boolean} whether route can be deactivated\n     */\n    canDeactivate() {\n        var _a, _b;\n        if ((_b = (_a = this.formComponent) === null || _a === void 0 ? void 0 : _a.contactsForm) === null || _b === void 0 ? void 0 : _b.dirty) {\n            this.isDiscardConfirmOpened = true;\n            this.discard$.complete();\n            this.discard$ = new Subject();\n            this.cdr.markForCheck();\n            return this.discard$;\n        }\n        return true;\n    }\n    /**\n     *  When the Edit is cancelled. It determines if it should show the selected contact or list\n     *\n     * @param {string} id - Contact Id.\n     */\n    cancelEdit(id) {\n        if (id) {\n            this.navigation.select(id);\n            this.navigation.currentView = View.Detail;\n        }\n        else {\n            this.navigation.list();\n            this.navigation.currentView = View.List;\n        }\n    }\n    /**\n     * Method to go to previous screen based on id\n     *\n     * @param {string | undefined} id - Contact Id\n     */\n    back(id) {\n        if (id) {\n            this.navigation.list();\n            this.navigation.currentView = View.List;\n        }\n        else {\n            this.navigation.newContact();\n            this.navigation.currentView = View.Select;\n        }\n    }\n    /**\n     *\n     * @param {ContactItem | undefined} item Contact object.\n     * @returns {ContactsFormItem} The transformed contact Object when returned from API.\n     */\n    // eslint-disable-next-line complexity\n    fromService(item) {\n        if (item) {\n            return {\n                id: item.id,\n                name: item.name,\n                IBAN: item.accounts && item.accounts[0] && item.accounts[0].IBAN ? item.accounts[0].IBAN : undefined,\n                accountNumber: item.accounts && item.accounts[0] && item.accounts[0].accountNumber\n                    ? item.accounts[0].accountNumber\n                    : undefined,\n                email: item.accounts && item.accounts[0] && item.accounts[0].email ? item.accounts[0].email : undefined,\n                phoneNumber: item.accounts && item.accounts[0] && item.accounts[0].phoneNumber ? item.accounts[0].phoneNumber : undefined,\n                accounts: item.accounts || [],\n                additions: item.additions || {},\n            };\n        }\n        else {\n            return { id: '', name: '', surname: '', initials: '', accounts: [], additions: {} };\n        }\n    }\n    /**\n     *\n     * @param {ContactsFormItem} item Contact Object\n     * @returns {ContactItem} The trandformed contact object when submitting to API.\n     */\n    toService(item) {\n        return Object.assign({ id: item.id, name: item.name, accounts: [\n                Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (item.accounts && item.accounts[0] ? item.accounts[0] : {})), (item.IBAN ? { IBAN: item.IBAN } : {})), (item.accountNumber ? { accountNumber: item.accountNumber } : {})), (item.phoneNumber ? { phoneNumber: item.phoneNumber } : {})), (item.email ? { email: item.email } : {})),\n            ] }, (item.additions ? { additions: item.additions } : {}));\n    }\n    /**\n     * Method that calls the delete api and returns to the list.\n     *\n     * @param {string} id Contact Id to be deleted\n     */\n    deleteContactsItem(id) {\n        this.service.delete(id);\n        this.navigation.list();\n        this.navigation.currentView = View.List;\n    }\n    /**\n     * event handler for confirming discard\n     */\n    onConfirmDiscard() {\n        this.discard$.next(true);\n        this.discard$.complete();\n        this.isDiscardConfirmOpened = false;\n    }\n    /**\n     * event handler for canceling discard\n     */\n    onCancelDiscard() {\n        this.discard$.next(false);\n        this.discard$.complete();\n        this.isDiscardConfirmOpened = false;\n    }\n}\n/** @nocollapse */ ContactsFormContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsFormContainerComponent, deps: [{ token: ContactsService }, { token: i2$2.ActivatedRoute }, { token: ContactsNavigationService }, { token: i4.NotificationService }, { token: ContactManagerPreferencesService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ ContactsFormContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsFormContainerComponent, selector: \"bb-contacts-form-container\", viewQueries: [{ propertyName: \"formComponent\", first: true, predicate: ContactsFormComponent, descendants: true }, { propertyName: \"notificationCreateSuccessTemplate\", first: true, predicate: [\"notificationCreateSuccess\"], descendants: true }, { propertyName: \"notificationCreateErrorTemplate\", first: true, predicate: [\"notificationCreateError\"], descendants: true }, { propertyName: \"notificationEditSuccessTemplate\", first: true, predicate: [\"notificationEditSuccess\"], descendants: true }, { propertyName: \"notificationEditErrorTemplate\", first: true, predicate: [\"notificationEditError\"], descendants: true }, { propertyName: \"discardChangesModalContent\", first: true, predicate: [\"discardChangesModalContent\"], descendants: true }], ngImport: i0, template: \"<ng-container *ngIf=\\\"item | async as item; else loadingTemplate\\\">\\n  <bb-contacts-form\\n    [item]=\\\"item\\\"\\n    [type]=\\\"itemType$ | async\\\"\\n    [disabledSubmit]=\\\"isPendingRequest\\\"\\n    (save)=\\\"save($event)\\\"\\n    (cancelEdit)=\\\"cancelEdit($event)\\\"\\n    (backEvent)=\\\"back($event)\\\"\\n    (deleteContactsItem)=\\\"deleteContactsItem($event)\\\"\\n  ></bb-contacts-form>\\n</ng-container>\\n\\n<ng-template #notificationCreateSuccess>\\n  <ng-container bbContactsCreateSuccessNotificationCustomizable [bbHostRef]=\\\"hostRef\\\"></ng-container>\\n  <ng-template bbContactsCreateSuccessNotificationCustomizable>\\n    <span\\n      i18n=\\\"@@contact-manager-form-container.notification-create.success\\\"\\n      data-role=\\\"successfully-saved-contact\\\"\\n      role=\\\"alert\\\"\\n      aria-atomic=\\\"true\\\"\\n    >\\n      Successfully saved Contact\\n    </span>\\n  </ng-template>\\n</ng-template>\\n\\n<ng-template #notificationCreateError>\\n  <ng-container bbContactsCreateErrorNotificationCustomizable [bbHostRef]=\\\"hostRef\\\"></ng-container>\\n  <ng-template bbContactsCreateErrorNotificationCustomizable>\\n    <span\\n      i18n=\\\"@@contact-manager-form-container.notification-create.error\\\"\\n      data-role=\\\"failed-to-save-contact\\\"\\n      role=\\\"alert\\\"\\n      aria-atomic=\\\"true\\\"\\n    >\\n      Error saving Contact\\n    </span>\\n  </ng-template>\\n</ng-template>\\n\\n<ng-template #notificationEditSuccess>\\n  <ng-container bbContactsEditSuccessNotificationCustomizable [bbHostRef]=\\\"hostRef\\\"></ng-container>\\n  <ng-template bbContactsEditSuccessNotificationCustomizable>\\n    <span\\n      i18n=\\\"@@contact-manager-form-container.notification-edit.success\\\"\\n      data-role=\\\"successfully-saved-contact\\\"\\n      role=\\\"alert\\\"\\n      aria-atomic=\\\"true\\\"\\n    >\\n      Successfully saved Contact\\n    </span>\\n  </ng-template>\\n</ng-template>\\n\\n<ng-template #notificationEditError>\\n  <ng-container bbContactsEditErrorNotificationCustomizable [bbHostRef]=\\\"hostRef\\\"></ng-container>\\n  <ng-template bbContactsEditErrorNotificationCustomizable>\\n    <span\\n      i18n=\\\"@@contact-manager-form-container.notification-edit.error\\\"\\n      data-role=\\\"failed-to-save-contact\\\"\\n      role=\\\"alert\\\"\\n      aria-atomic=\\\"true\\\"\\n    >\\n      Error saving Contact\\n    </span>\\n  </ng-template>\\n</ng-template>\\n\\n<ng-template #loadingTemplate>\\n  <div class=\\\"bb-state-container\\\">\\n    <bb-loading-indicator-ui\\n      i18n-text=\\\"@@contact-manager-form-container.loading.label\\\"\\n      text=\\\"Loading...\\\"\\n    ></bb-loading-indicator-ui>\\n  </div>\\n</ng-template>\\n\\n<ng-container bbContactsEditDiscardConfirmationCustomizable [bbHostRef]=\\\"hostRef\\\"></ng-container>\\n<ng-template bbContactsEditDiscardConfirmationCustomizable let-hostRef>\\n  <bb-confirm-action-dialog\\n    [isOpen]=\\\"hostRef.isDiscardConfirmOpened\\\"\\n    [confirmButtonColor]=\\\"'danger'\\\"\\n    (confirm)=\\\"hostRef.onConfirmDiscard()\\\"\\n    (cancel)=\\\"hostRef.onCancelDiscard()\\\"\\n  >\\n    <span title i18n=\\\"@contact-manager-form-container.header.discardChanges\\\">Discard Changes</span>\\n    <span body i18n=\\\"@@contact-manager-form-container.discardChangesConfirmation\\\">\\n      Are you sure you want to discard your changes? This action cannot be undone.\\n    </span>\\n    <span cancelButtonLabel i18n=\\\"@@contact-manager-form-container.button.cancel\\\">Not now</span>\\n    <span confirmButtonLabel i18n=\\\"@@contact-manager-form-container.button.discard\\\">Discard</span>\\n  </bb-confirm-action-dialog>\\n</ng-template>\\n\", components: [{ type: ContactsFormComponent, selector: \"bb-contacts-form\", inputs: [\"item\", \"type\", \"disabledSubmit\"], outputs: [\"save\", \"cancelEdit\", \"backEvent\", \"deleteContactsItem\"] }, { type: i7.LoadingIndicatorComponent, selector: \"bb-loading-indicator-ui\", inputs: [\"text\", \"loaderSize\", \"showDelay\", \"hasBackground\", \"inline\"] }, { type: i8.ConfirmActionDialogComponent, selector: \"bb-confirm-action-dialog\", inputs: [\"confirmButtonColor\", \"cancelButtonColor\", \"isOpen\", \"attachComment\", \"commentFieldLabel\"], outputs: [\"confirm\", \"cancel\"] }], directives: [{ type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: ContactsCreateSuccessNotificationCustomizableDirective, selector: \"[bbContactsCreateSuccessNotificationCustomizable]\" }, { type: ContactsCreateErrorNotificationCustomizableDirective, selector: \"[bbContactsCreateErrorNotificationCustomizable]\" }, { type: ContactsEditSuccessNotificationCustomizableDirective, selector: \"[bbContactsEditSuccessNotificationCustomizable]\" }, { type: ContactsEditErrorNotificationCustomizableDirective, selector: \"[bbContactsEditErrorNotificationCustomizable]\" }, { type: ContactsEditDiscardConfirmationCustomizableDirective, selector: \"[bbContactsEditDiscardConfirmationCustomizable]\" }], pipes: { \"async\": i2$1.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsFormContainerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-contacts-form-container',\n                    templateUrl: './contacts-form-container.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: ContactsService }, { type: i2$2.ActivatedRoute }, { type: ContactsNavigationService }, { type: i4.NotificationService }, { type: ContactManagerPreferencesService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { formComponent: [{\n                type: ViewChild,\n                args: [ContactsFormComponent]\n            }], notificationCreateSuccessTemplate: [{\n                type: ViewChild,\n                args: ['notificationCreateSuccess']\n            }], notificationCreateErrorTemplate: [{\n                type: ViewChild,\n                args: ['notificationCreateError']\n            }], notificationEditSuccessTemplate: [{\n                type: ViewChild,\n                args: ['notificationEditSuccess']\n            }], notificationEditErrorTemplate: [{\n                type: ViewChild,\n                args: ['notificationEditError']\n            }], discardChangesModalContent: [{\n                type: ViewChild,\n                args: ['discardChangesModalContent']\n            }] } });\n\n/**\n *\n * This guard is called while deactivating the route to check if the form is dirty.\n *\n * @see ContactManagerWidgetModule\n * @usageNotes\n *\n * ### Ensure the ContactManagerWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ContactManagerWidgetModule,\n *   ],\n * })\n * export class ContactManagerWidgetModule {}\n * ```\n *\n * ### Inject this guard into your route\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [{\n *   path: 'edit/:id/:type',\n *   canDeactivate: [CanDeactivateGuard],\n *   component: ContactsFormContainerComponent,\n * },]\n * })\n *  export class ContactManagerWidgetModule {\n * ```\n */\nclass CanDeactivateGuard {\n    canDeactivate(component) {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n/** @nocollapse */ CanDeactivateGuard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CanDeactivateGuard, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ CanDeactivateGuard.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CanDeactivateGuard });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CanDeactivateGuard, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Displays a list of all contact types, allowing one to be selected.\n *\n * @usageNotes\n *\n * ### Display a list of types of contact that can be created\n *\n * ```html\n * <bb-contact-account-select-type\n *   [listOfAccountTypes]=\"createContactList$ | async\"\n *   [noOfItemsinList]=\"noOfItemsinList\n * ></bb-contact-account-select-type>\n * ```\n *\n * ### Additionally set the selected contact type\n *\n * ```html\n * <bb-contact-account-select-type\n *   [listOfAccountTypes]=\"createContactList$ | async\"\n *   [noOfItemsinList]=\"noOfItemsinList\n *   (selectedAccountType)=\"selectedAccountType()\"\n * ></bb-contact-account-select-type>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactSelectAccountTypeComponent {\n    constructor(navigation) {\n        this.navigation = navigation;\n        /**\n         * event when account is selected.\n         */\n        this.selectedAccountType = new EventEmitter();\n        this.createAccountTypeRef = AccountCreateType;\n    }\n    /**\n     * OnInit lifecycle hook.\n     */\n    ngOnInit() {\n        var _a;\n        this.navigation.currentView = View.Edit;\n        if (this.noOfItemsinList === 0 || this.noOfItemsinList === 1) {\n            this.navigation.newContactForm(((_a = this.listOfAccountTypes.find((list) => list.enableItem)) === null || _a === void 0 ? void 0 : _a.listItem) || this.createAccountTypeRef.IBAN);\n        }\n    }\n    /**\n     * Update the selected account type for contact creation.\n     *\n     * @param {CreateListType} $event -The selected contact Type details.\n     */\n    updateCreateContactType($event) {\n        this.navigation.currentView = View.Edit;\n        this.navigation.newContactForm($event.listItem);\n    }\n}\n/** @nocollapse */ ContactSelectAccountTypeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactSelectAccountTypeComponent, deps: [{ token: ContactsNavigationService }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ ContactSelectAccountTypeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactSelectAccountTypeComponent, selector: \"bb-contact-account-select-type\", inputs: { listOfAccountTypes: \"listOfAccountTypes\", noOfItemsinList: \"noOfItemsinList\" }, outputs: { selectedAccountType: \"selectedAccountType\" }, ngImport: i0, template: \"<div class=\\\"bb-block bb-block--xl\\\">\\n  <div class=\\\"bb-stack bb-stack--align-bottom\\\">\\n    <div class=\\\"bb-stack__item bb-stack__item--fill\\\">\\n      <div class=\\\"bb-block\\\" data-role=\\\"contact-details-info-name\\\">\\n        <span\\n          class=\\\"d-none\\\"\\n          data-role=\\\"create-contact-label\\\"\\n          aria-hidden=\\\"true\\\"\\n          i18n=\\\"Create new contact heading | Title shown when user is in select contact type@@contact-manager-detail.create.select.heading\\\"\\n          #heading\\n        >\\n          Create new contact\\n        </span>\\n        <bb-header-ui data-role=\\\"create-new-contact-label\\\" headingType=\\\"h3\\\" [heading]=\\\"heading.textContent\\\">\\n        </bb-header-ui>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<hr />\\n<div class=\\\"bb-lock bb-text-support\\\">\\n  <div\\n    class=\\\"bb-bock\\\"\\n    data-role=\\\"create-contact-select-new-account-info\\\"\\n    i18n=\\\"@@create-contact-type-list.select.info.text\\\"\\n  >\\n    Select which information you want to use to create a contact. You can move money with an account number, a phone\\n    number or an email\\n  </div>\\n</div>\\n<div class=\\\"bb-select-payment-option\\\">\\n  <div *ngFor=\\\"let listItem of listOfAccountTypes\\\">\\n    <div *ngIf=\\\"listItem.enableItem\\\">\\n      <ng-container *ngTemplateOutlet=\\\"listButton; context: { listItem: listItem}\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #listButton let-listItem=\\\"listItem\\\">\\n  <div class=\\\"bb-button-bar m-3\\\">\\n    <button\\n      class=\\\"bb-button-bar__button bb-button-bar__button--across bb-inline-stack col-12 bb-select-payment-option__label\\\"\\n      bbButton\\n      color=\\\"unstyled\\\"\\n      (click)=\\\"updateCreateContactType(listItem)\\\"\\n    >\\n      <ng-container [ngSwitch]=\\\"listItem.listItem\\\">\\n        <ng-container *ngSwitchCase=\\\"createAccountTypeRef.IBAN\\\">\\n          <bb-icon-ui class=\\\"bb-inline-stack__item col bb-text-support\\\" name=\\\"person-outline\\\"></bb-icon-ui>\\n          <div data-role=\\\"iban-item\\\" class=\\\"col-10 text-left\\\">\\n            <ng-container i18n=\\\"@@create-contact-type-list.select.button.text.iban\\\">With an IBAN </ng-container>\\n          </div>\\n\\n          <div class=\\\"col\\\">\\n            <bb-icon-ui class=\\\"bb-inline-stack__item col-1 bb-text-support\\\" name=\\\"angle-right\\\"></bb-icon-ui>\\n          </div>\\n        </ng-container>\\n        <ng-container *ngSwitchCase=\\\"createAccountTypeRef.ACCOUNT\\\">\\n          <bb-icon-ui class=\\\"bb-inline-stack__item col bb-text-support\\\" name=\\\"person-outline\\\"></bb-icon-ui>\\n          <div data-role=\\\"account-number-item\\\" class=\\\"col-10 text-left\\\">\\n            <ng-container i18n=\\\"@@create-contact-type-list.select.button.text.account\\\"\\n              >With an account number\\n            </ng-container>\\n          </div>\\n\\n          <div class=\\\"col\\\">\\n            <bb-icon-ui class=\\\"bb-inline-stack__item col-1 bb-text-support\\\" name=\\\"angle-right\\\"></bb-icon-ui>\\n          </div>\\n        </ng-container>\\n        <ng-container *ngSwitchCase=\\\"createAccountTypeRef.EMAIL\\\">\\n          <bb-icon-ui class=\\\"bb-inline-stack__item col bb-text-support\\\" name=\\\"inbox\\\"></bb-icon-ui>\\n          <div data-role=\\\"email-item\\\" class=\\\"col-10 text-left\\\">\\n            <ng-container i18n=\\\"@@create-contact-type-list.select.button.text.email\\\">With an email </ng-container>\\n          </div>\\n\\n          <div class=\\\"col\\\">\\n            <bb-icon-ui class=\\\"bb-inline-stack__item col-1 bb-text-support\\\" name=\\\"angle-right\\\"></bb-icon-ui>\\n          </div>\\n        </ng-container>\\n        <ng-container *ngSwitchCase=\\\"createAccountTypeRef.PHONE\\\">\\n          <bb-icon-ui class=\\\"bb-inline-stack__item col bb-text-support\\\" name=\\\"phone\\\"></bb-icon-ui>\\n          <div data-role=\\\"phone-number-item\\\" class=\\\"col-10 text-left\\\">\\n            <ng-container i18n=\\\"@@create-contact-type-list.select.button.text.phone\\\">With a phone number </ng-container>\\n          </div>\\n\\n          <div class=\\\"col\\\">\\n            <bb-icon-ui class=\\\"bb-inline-stack__item col-1 bb-text-support\\\" name=\\\"angle-right\\\"></bb-icon-ui>\\n          </div>\\n        </ng-container>\\n      </ng-container>\\n    </button>\\n  </div>\\n</ng-template>\\n\", components: [{ type: i2.HeaderComponent, selector: \"bb-header-ui\", inputs: [\"headingClasses\", \"headingType\", \"heading\"] }, { type: i3.IconComponent, selector: \"bb-icon-ui\", inputs: [\"name\", \"inverse\", \"size\", \"color\", \"animate\", \"aria-label\", \"cropped\", \"backgroundType\"] }], directives: [{ type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i6.ButtonDirective, selector: \"button[bbButton]\", inputs: [\"type\", \"color\", \"buttonSize\", \"block\", \"circle\"] }, { type: i2$1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2$1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactSelectAccountTypeComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-contact-account-select-type',\n                    templateUrl: './contact-select-account-type.component.html',\n                }]\n        }], ctorParameters: function () { return [{ type: ContactsNavigationService }]; }, propDecorators: { listOfAccountTypes: [{\n                type: Input\n            }], noOfItemsinList: [{\n                type: Input\n            }], selectedAccountType: [{\n                type: Output\n            }] } });\n\n/**\n *\n * Container component for showing contact list.\n *\n * @usageNotes\n *\n * ### Display list of all the types of contacts to select before creation.\n *\n * ```html\n * <bb-contacts-type-list-container></bb-contacts-type-list-container>\n * ```\n * ### Additionally use the container component in routing.\n *\n * ```typescript\n * const routes: [\n * {\n *  path: 'select',\n *  component: ContactsTypeListContainerComponent\n * }]\n *\n *\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsTypeListContainerComponent {\n    constructor(contactService, propertiesService) {\n        this.contactService = contactService;\n        this.propertiesService = propertiesService;\n        /**\n         * property from user if the contact creation through email is allowed\n         */\n        this.allowEmail$ = this.propertiesService.createContactEmail$;\n        /**\n         * property from user if the contact creation through IBAN is allowed\n         */\n        this.allowIBAN$ = this.propertiesService.createContactIBAN$;\n        /**\n         * property from user if the contact creation through Account Number is allowed\n         */\n        this.allowAccount$ = this.propertiesService.createContactAccount$;\n        /**\n         * property from user if the contact creation through Phone Number is allowed\n         */\n        this.allowPhone$ = this.propertiesService.createContactPhone$;\n        /**\n         * check which properties are allowed and showing them on screen.\n         */\n        this.createContactList$ = combineLatest([\n            this.allowAccount$,\n            this.allowIBAN$,\n            this.allowPhone$,\n            this.allowEmail$,\n        ]).pipe(tap((contactListItem) => (this.noOfItemsinList = contactListItem.filter((listItem) => listItem && typeof listItem === 'boolean').length)), map(([Account, IBAN, Phone, Email]) => [\n            {\n                listItem: AccountCreateType.ACCOUNT,\n                enableItem: Account === null || Account === void 0 ? void 0 : Account.valueOf(),\n            },\n            {\n                listItem: AccountCreateType.IBAN,\n                enableItem: IBAN === null || IBAN === void 0 ? void 0 : IBAN.valueOf(),\n            },\n            { listItem: AccountCreateType.PHONE, enableItem: Phone === null || Phone === void 0 ? void 0 : Phone.valueOf() },\n            { listItem: AccountCreateType.EMAIL, enableItem: Email === null || Email === void 0 ? void 0 : Email.valueOf() },\n        ]));\n    }\n}\n/** @nocollapse */ ContactsTypeListContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsTypeListContainerComponent, deps: [{ token: ContactsService }, { token: ContactManagerPreferencesService }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ ContactsTypeListContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsTypeListContainerComponent, selector: \"bb-contacts-type-list-container\", ngImport: i0, template: \"<bb-contact-account-select-type [listOfAccountTypes]=\\\"createContactList$ | async\\\" [noOfItemsinList]=\\\"noOfItemsinList\\\">\\n</bb-contact-account-select-type>\\n\", components: [{ type: ContactSelectAccountTypeComponent, selector: \"bb-contact-account-select-type\", inputs: [\"listOfAccountTypes\", \"noOfItemsinList\"], outputs: [\"selectedAccountType\"] }], pipes: { \"async\": i2$1.AsyncPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsTypeListContainerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-contacts-type-list-container',\n                    templateUrl: './contacts-type-list-container.component.html',\n                }]\n        }], ctorParameters: function () { return [{ type: ContactsService }, { type: ContactManagerPreferencesService }]; } });\n\n/**\n * Displays an item in the  list of all contacts\n *\n * @usageNotes\n *\n * ### Display a single item in the list of types of contact.\n *\n * ```html\n * <bb-contact-list-item\n *     [contactItem]=\"item\"\n *     [showAccountNumber]=\"true\"\n *     [showAlias]=\"showAlias\"\n *  ></bb-contact-list-item>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsListItemComponent {\n    constructor(service) {\n        this.service = service;\n        /**\n         * Wether to show contact account number.\n         * Default is false.\n         */\n        this.showAccountNumber = false;\n        /**\n         * Wether to show contact alias.\n         * Default is false.\n         */\n        this.showAlias = false;\n        this.accountTypeKeyRef = AccountTypeModelKey;\n        this.createAccountType = AccountCreateType;\n    }\n    /**\n     * OnInit - lifecycle hook.\n     */\n    ngOnInit() {\n        if (this.contactItem === undefined) {\n            throw new Error('`item` input is required in `bb-todo-list-item` component');\n        }\n        else {\n            this.selectedAccountType = this.service.checkaccountType(this.contactItem);\n        }\n    }\n}\n/** @nocollapse */ ContactsListItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsListItemComponent, deps: [{ token: ContactsService }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ ContactsListItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsListItemComponent, selector: \"bb-contact-list-item\", inputs: { contactItem: \"contactItem\", showAccountNumber: \"showAccountNumber\", showAlias: \"showAlias\" }, ngImport: i0, template: \"<div class=\\\"bb-block bb-block--sm\\\">\\n  <div class=\\\"bb-block bb-block--xs break-word\\\">\\n    <span class=\\\"sr-only\\\">\\n      <span i18n=\\\"name@@bb-contact-list-item.label.name\\\" data-role=\\\"name-header\\\"> Name </span>\\n      :&nbsp;\\n    </span>\\n    <span class=\\\"bb-text-bold break-word\\\" data-role=\\\"list-name\\\"> {{ contactItem.name }} </span>\\n  </div>\\n  <div *ngIf=\\\"showAccountNumber\\\" class=\\\"bb-block bb-block--xs break-word\\\">\\n    <ng-container [ngSwitch]=\\\"selectedAccountType\\\">\\n      <ng-container *ngSwitchCase=\\\"createAccountType.IBAN\\\">\\n        <span class=\\\"sr-only\\\">\\n          <span i18n=\\\"account number@@bb-contact-list-item.label.iban\\\" data-role=\\\"account-header\\\"> IBAN </span>\\n          :&nbsp;\\n        </span>\\n        <ng-container *ngTemplateOutlet=\\\"accountdetails\\\"></ng-container>\\n      </ng-container>\\n      <ng-container *ngSwitchCase=\\\"createAccountType.EMAIL\\\">\\n        <span class=\\\"sr-only\\\">\\n          <span i18n=\\\"account number@@bb-contact-list-item.label.email\\\" data-role=\\\"email-header\\\"> Email </span>\\n          :&nbsp;\\n        </span>\\n        <ng-container *ngTemplateOutlet=\\\"details\\\"></ng-container>\\n      </ng-container>\\n      <ng-container *ngSwitchCase=\\\"createAccountType.PHONE\\\">\\n        <span class=\\\"sr-only\\\">\\n          <span i18n=\\\"account number@@bb-contact-list-item.label.phone.number\\\" data-role=\\\"phone-header\\\">\\n            Phone number\\n          </span>\\n          :&nbsp;\\n        </span>\\n        <ng-container *ngTemplateOutlet=\\\"details\\\"></ng-container>\\n      </ng-container>\\n      <ng-container *ngSwitchCase=\\\"createAccountType.ACCOUNT\\\">\\n        <span class=\\\"sr-only\\\">\\n          <span i18n=\\\"account number@@bb-contact-list-item.label.account.number\\\" data-role=\\\"account-header\\\">\\n            Account number\\n          </span>\\n          :&nbsp;\\n        </span>\\n        <ng-container *ngTemplateOutlet=\\\"accountdetails\\\"></ng-container>\\n      </ng-container>\\n    </ng-container>\\n  </div>\\n  <div *ngIf=\\\"showAlias && contactItem.alias\\\" class=\\\"bb-block bb-block--xs break-word\\\">\\n    <span class=\\\"sr-only\\\" data-role=\\\"alias-header\\\" i18n=\\\"name@@bb-contact-list-item.label.alias\\\">Alias</span>\\n    <span class=\\\"sr-only\\\">:&nbsp;</span>\\n    <span class=\\\"bb-text-support break-word\\\" data-role=\\\"list-alias\\\"> {{ contactItem.alias }} </span>\\n  </div>\\n\\n  <ng-template #accountdetails>\\n    <span class=\\\"bb-text-support\\\" data-role=\\\"list-account-number\\\" *ngIf=\\\"contactItem?.accounts[0] as account\\\">\\n      {{ account[selectedAccountType] | bbIban}}\\n    </span>\\n  </ng-template>\\n  <ng-template #details>\\n    <span class=\\\"bb-text-support\\\" data-role=\\\"list-account-number\\\" *ngIf=\\\"contactItem?.accounts[0] as account\\\">\\n      {{ account[selectedAccountType]}}\\n    </span>\\n  </ng-template>\\n</div>\\n\", directives: [{ type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2$1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2$1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i2$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], pipes: { \"bbIban\": i8$1.BbIbanPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsListItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-contact-list-item',\n                    templateUrl: './contact-list-item.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: ContactsService }]; }, propDecorators: { contactItem: [{\n                type: Input\n            }], showAccountNumber: [{\n                type: Input\n            }], showAlias: [{\n                type: Input\n            }] } });\n\n/**\n * Displays a list of all contacts\n *\n * @usageNotes\n *\n * ### Display a list of types of contact that can be created\n *\n * ```html\n * <bb-contacts-list-widget\n *       [items]=\"items.contacts\"\n *       [showAlias]=\"false\"\n *     >\n *  </bb-contacts-list-widget>\n * ```\n *\n * ### Additionally update the list\n *\n * ```html\n *  <bb-contacts-list-widget\n *       [items]=\"items.contacts\"\n *       (selectedChange)=\"hostRef.select($event)\"\n *       (formItemChange)=\"hostRef.edit($event)\"\n *       [showAlias]=\"false\"\n *     >\n *   </bb-contacts-list-widget>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsListWidgetComponent {\n    constructor() {\n        /**\n         * Event that is emitted when selected item changes\n         */\n        this.selectedChange = new EventEmitter();\n        this.focused = 0;\n        this.contactItemArray = [];\n        this.accountTypeSelected = AccountCreateType.IBAN;\n        this.gc$ = new Subject();\n        this.createAccountTypeRef = AccountCreateType;\n    }\n    /**\n     * AfterViewInit- lifecycle hook.\n     */\n    ngAfterViewInit() {\n        this.contactItem.changes\n            .pipe(startWith(this.contactItem))\n            .pipe(takeUntil(this.gc$))\n            .subscribe((data) => {\n            this.contactItemArray = data.toArray();\n        });\n    }\n    /**\n     * onDestroy - lifecycle hook.\n     */\n    ngOnDestroy() {\n        this.gc$.next();\n        this.gc$.complete();\n    }\n    /**\n     * getTabIndex defines if item can be reached by Tab,\n     * which only the focused item can\n     *\n     * @param {number} i index of an element\n     * @returns {number} [tabindex] parameter value\n     */\n    getTabIndex(i) {\n        return i === this.focused ? '0' : '-1';\n    }\n    /**\n     * Prevents focus from going beyond the limits of the list\n     *\n     * @param {number} desiredFocus index of an element\n     * @returns {number} index of an element within bounds\n     */\n    clampDesiredFocus(desiredFocus) {\n        return Math.max(0, Math.min(desiredFocus, this.items.length - 1));\n    }\n    /**\n     * Implements keyboard controls for the contact list.\n     * Call on key down events to move the focus to the appropriate element.\n     *\n     * @param {Event} event HTMLEvent object\n     * @param {number} desiredFocus index of an element\n     */\n    onChangeFocusItemTo(event, desiredFocus) {\n        var _a, _b;\n        event.preventDefault();\n        const realisticFocus = this.clampDesiredFocus(desiredFocus);\n        if (this.focused === realisticFocus)\n            return;\n        this.focused = realisticFocus;\n        (_b = (_a = this.contactItem.find((_, i) => i === this.focused)) === null || _a === void 0 ? void 0 : _a.nativeElement) === null || _b === void 0 ? void 0 : _b.focus();\n    }\n    /**\n     *\n     * @param {string} id - Id of the selcted contact\n     * @param {number} index - index of the selected contact\n     */\n    onContactSelect(id, index) {\n        this.focused = index;\n        this.accountTypeSelected = '';\n        this.selectedChange.emit(id);\n    }\n    /**\n     * isListHeading defines if grouping heading\n     * should be added before list item\n     *\n     * @param {ContactItem} item ContactItem object\n     * @param {number} index index of an element\n     * @returns {boolean} whether item a list heading\n     */\n    isListHeading(item, index) {\n        const char = this.getGroupHeadingChar(item.name.trim());\n        if (this.latestSeparator !== char || !index) {\n            this.latestSeparator = char;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * hasNoSeparatorClass tells if the list item\n     * should have bb-grouped-list__item--no-separator class.\n     *\n     * @param {number} index index of an element\n     * @returns {boolean} whether element should have separator class\n     */\n    hasNoSeparatorClass(index) {\n        const nextItem = this.items[index + 1];\n        if (!nextItem) {\n            return false;\n        }\n        else {\n            const nextChar = this.getGroupHeadingChar(nextItem.name.trim());\n            if (this.latestSeparator !== nextChar) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getGroupHeadingChar(name) {\n        return String.fromCodePoint(name.codePointAt(0)).toUpperCase();\n    }\n}\n/** @nocollapse */ ContactsListWidgetComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsListWidgetComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ ContactsListWidgetComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsListWidgetComponent, selector: \"bb-contacts-list-widget\", inputs: { items: \"items\", selectedItemId: \"selectedItemId\", showAlias: \"showAlias\" }, outputs: { selectedChange: \"selectedChange\" }, viewQueries: [{ propertyName: \"contactItem\", predicate: [\"contactItem\"], descendants: true }], ngImport: i0, template: \"<div *ngIf=\\\"items && items.length\\\">\\n  <ul class=\\\"bb-grouped-list\\\" data-role=\\\"existing-contact\\\" role=\\\"list\\\">\\n    <ng-container *ngFor=\\\"let item of items; let i = index\\\">\\n      <li\\n        *ngIf=\\\"isListHeading(item, i)\\\"\\n        class=\\\"bb-grouped-list__group bb-text-support bb-text-bold\\\"\\n        data-role=\\\"header-row\\\"\\n      >\\n        {{ latestSeparator }}\\n      </li>\\n      <li\\n        class=\\\"bb-grouped-list__item\\\"\\n        role=\\\"button\\\"\\n        data-role=\\\"contact-manager-list-item\\\"\\n        [tabindex]=\\\"getTabIndex(i)\\\"\\n        [attr.aria-pressed]=\\\"selectedItemId === item.id\\\"\\n        [ngClass]=\\\"{\\n          'bb-grouped-list__item--is-active': selectedItemId === item.id,\\n          'bb-grouped-list__item--no-separator': hasNoSeparatorClass(i)\\n        }\\\"\\n        (keydown.Home)=\\\"onChangeFocusItemTo($event, 0)\\\"\\n        (keydown.ArrowUp)=\\\"onChangeFocusItemTo($event, i-1)\\\"\\n        (keydown.ArrowDown)=\\\"onChangeFocusItemTo($event, i+1)\\\"\\n        (keydown.End)=\\\"onChangeFocusItemTo($event, items.length)\\\"\\n        (click)=\\\"onContactSelect(item.id, i)\\\"\\n        (keyup.Space)=\\\"onContactSelect(item.id, i)\\\"\\n        (keyup.Enter)=\\\"onContactSelect(item.id, i)\\\"\\n        #contactItem\\n      >\\n        <bb-contact-list-item\\n          [contactItem]=\\\"item\\\"\\n          [showAccountNumber]=\\\"true\\\"\\n          [showAlias]=\\\"showAlias\\\"\\n        ></bb-contact-list-item>\\n      </li>\\n    </ng-container>\\n  </ul>\\n</div>\\n\", components: [{ type: ContactsListItemComponent, selector: \"bb-contact-list-item\", inputs: [\"contactItem\", \"showAccountNumber\", \"showAlias\"] }], directives: [{ type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsListWidgetComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-contacts-list-widget',\n                    templateUrl: './contact-list.component.html',\n                }]\n        }], propDecorators: { items: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], selectedItemId: [{\n                type: Input\n            }], contactItem: [{\n                type: ViewChildren,\n                args: ['contactItem']\n            }], showAlias: [{\n                type: Input\n            }] } });\n\n/**\n * This is an extension slot to be used for customizing contact manager widget..\n *\n * @usageNotes\n *\n * ### Display a single contact detail\n *\n * ```html\n *  <ng-template bbContactsListContainerCustomizable let-hostRef let-items=\"context\">\n *   <div\n *     class=\"col\"\n *     [ngClass]=\"{\n *       'd-block': hostRef.isListView | async,\n *       'd-lg-block d-none': !(hostRef.isListView | async)\n *     }\"\n *   >\n *     <bb-contacts-list-widget\n *       [items]=\"items.contacts\"\n *       (selectedChange)=\"hostRef.select($event)\"\n *       (formItemChange)=\"hostRef.edit($event)\"\n *       [showAlias]=\"false\"\n *     >\n *     </bb-contacts-list-widget>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsListContainerCustomizableDirective extends BbTemplate {\n}\n/** @nocollapse */ ContactsListContainerCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsListContainerCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ ContactsListContainerCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsListContainerCustomizableDirective, selector: \"[bbContactsListContainerCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsListContainerCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbContactsListContainerCustomizable]',\n                }]\n        }] });\n/**\n * This is an extension slot to be used for customizing contact manager header section\n *\n * @usageNotes\n *\n * ### Display a header section with search box\n *\n * ```html\n *  <ng-template bbContactsTopSectionCustomizable let-hostRef let-item=\"context\">\n *   <div class=\"col bb-stack\">\n *     <div class=\"bb-stack__item bb-stack__item--fill\">\n *       <bb-search-box-ui\n *         class=\"bb-toolbar__item\"\n *         data-role=\"search-contact-textbox\"\n *         placeholder=\"Search\"\n *         i18n-placeholder=\"Search box placeholder | Placeholder for search box@@contact-manager.placeholder.search\"\n *         [showSearch]=\"true\"\n *         [showClear]=\"true\"\n *         (submit)=\"hostRef.searchBoxItemSelected()\"\n *         (clear)=\"hostRef.searchBoxItemSelected(true)\"\n *         [formControl]=\"hostRef.searchTerm\"\n *         (keyUp.enter)=\"hostRef.searchBoxItemSelected()\"\n *       ></bb-search-box-ui>\n *     </div>\n *     <div class=\"bb-stack__item\">\n *       <button\n *         bbButton\n *         i18n=\"New Contact Button | Button for creating a new contact@@contact-manager.button.newContact\"\n *         data-role=\"new-contact-button\"\n *         class=\"d-none d-lg-block bb-button-bar__button\"\n *         [disabled]=\"!(hostRef.newContactAllowed | async)\"\n *         (click)=\"hostRef.newContact(item.contacts.length)\"\n *         type=\"button\"\n *       >\n *         New Contact\n *       </button>\n *       <button\n *         bbButton\n *         i18n=\"New Contact Button | Button for creating a new contact@@contact-manager.button.newContact\"\n *         data-role=\"new-contact-button\"\n *         class=\"d-block d-lg-none bb-button-bar__button\"\n *         [disabled]=\"!hostRef.newContactAllowed\"\n *         (click)=\"hostRef.newContact(item.contacts.length)\"\n *         type=\"button\"\n *       >\n *         New Contact\n *       </button>\n *     </div>\n *   </div>\n *   <ng-template #rt let-result=\"result\" let-term=\"term\">\n *     <div class=\"text-truncate\" [title]=\"result\">\n *       <ngb-highlight [result]=\"result\" [term]=\"term\"></ngb-highlight>\n *     </div>\n *   </ng-template>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsTopSectionCustomizableDirective extends BbTemplate {\n}\n/** @nocollapse */ ContactsTopSectionCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsTopSectionCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ ContactsTopSectionCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsTopSectionCustomizableDirective, selector: \"[bbContactsTopSectionCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsTopSectionCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbContactsTopSectionCustomizable]',\n                }]\n        }] });\n/**\n * This is an extension slot to be used for customizing contact manager pagination\n *\n * @usageNotes\n *\n * ### Display the pagination\n *\n * ```html\n *   <ng-template bbContactsLoadMoreCustomizable let-hostRef let-items=\"context\">\n *   <bb-pagination-ui\n *     *ngIf=\"(hostRef.paginationType | async) !== 'load-more'\"\n *     class=\"bb-pagination\"\n *     [page]=\"(hostRef.pagination | async)?.from\"\n *     [boundaryLinks]=\"false\"\n *     [directionLinks]=\"true\"\n *     [totalItems]=\"items?.count\"\n *     [itemsPerPage]=\"hostRef.pageSize | async\"\n *     [maxNavPages]=\"hostRef.maxNavPages | async\"\n *     (pageChange)=\"hostRef.onPageChange($event)\"\n *   ></bb-pagination-ui>\n *   <div class=\"p-5 text-center\" *ngIf=\"(hostRef.paginationType | async) === 'load-more'\">\n *     <button\n *       class=\"border text-dark btn btn-secondary\"\n *       (click)=\"hostRef.loadMore()\"\n *       [disabled]=\"items.count && items.count <= items.contacts.length\"\n *     >\n *       <ng-container\n *          i18n=\"Load more button label | Load more button shown down bellow contact list@@contact-manager.load-more.label\">\n *         Load more\n *       </ng-container>\n *     </button>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsLoadMoreCustomizableDirective extends BbTemplate {\n}\n/** @nocollapse */ ContactsLoadMoreCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsLoadMoreCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ ContactsLoadMoreCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsLoadMoreCustomizableDirective, selector: \"[bbContactsLoadMoreCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsLoadMoreCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbContactsLoadMoreCustomizable]',\n                }]\n        }] });\n/**\n * This is an extension slot to be used for customizing contact manager widget loading view\n *\n * @usageNotes\n *\n * ### Display loading icon\n *\n * ```html\n *    <ng-template bbContactsLoadingCustomizable let-hostRef>\n *   <div class=\"bb-state-container\">\n *     <bb-loading-indicator-ui\n *       i18n-text=\"@@contact-manager.loading.label\"\n *       text=\"Loading contacts...\"\n *     ></bb-loading-indicator-ui>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsLoadingCustomizableDirective extends BbTemplate {\n}\n/** @nocollapse */ ContactsLoadingCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsLoadingCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ ContactsLoadingCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsLoadingCustomizableDirective, selector: \"[bbContactsLoadingCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsLoadingCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbContactsLoadingCustomizable]',\n                }]\n        }] });\n/**\n * This is an extension slot to be used for customizing contact manager widget empty view\n *\n * @usageNotes\n *\n * ### Display empty message\n *\n * ```html\n *  <ng-template bbContactsEmptyStateCustomizable let-hostRef>\n *   <div class=\"bb-state-container\">\n *     <bb-empty-state-ui\n *       i18n-title=\"@@contact-manager.state.noContactsLoaded.title\"\n *       title=\"No contacts\"\n *       i18n-subtitle=\"@@contact-manager.state.noContactsLoaded.subtitle\"\n *       subtitle=\"You don't have any contacts to display yet.<br>Try adding a new contact using the 'New Contact' button\"\n *       iconClasses=\"d-flex justify-content-center mb-3\"\n *       iconModifier=\"contacts\"\n *       iconColor=\"primary\"\n *       iconSize=\"xxl\"\n *     ></bb-empty-state-ui>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsEmptyStateCustomizableDirective extends BbTemplate {\n}\n/** @nocollapse */ ContactsEmptyStateCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsEmptyStateCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ ContactsEmptyStateCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsEmptyStateCustomizableDirective, selector: \"[bbContactsEmptyStateCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsEmptyStateCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbContactsEmptyStateCustomizable]',\n                }]\n        }] });\n/**\n * This is an extension slot to be used for customizing contact manager Empty view on search\n *\n * @usageNotes\n *\n * ### Display no search result found message.\n *\n * ```html\n *  <ng-template bbContactsEmptySearchStateCustomizable let-hostRef let-term=\"context\">\n *   <div class=\"bb-state-container\">\n *     <bb-empty-state-ui\n *       i18n-title=\"@@contact-manager.state.empty-search.title\"\n *       title=\"No results found\"\n *       i18n-subtitle=\"@@contact-manager.state.empty-search.subtitle\"\n *       subtitle=\"We can't find what you're looking for. Please try a different criteria.\"\n *       iconClasses=\"d-flex justify-content-center mb-3\"\n *       iconModifier=\"search\"\n *       iconColor=\"primary\"\n *       iconSize=\"xxl\"\n *     ></bb-empty-state-ui>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsEmptySearchStateCustomizableDirective extends BbTemplate {\n}\n/** @nocollapse */ ContactsEmptySearchStateCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsEmptySearchStateCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ ContactsEmptySearchStateCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsEmptySearchStateCustomizableDirective, selector: \"[bbContactsEmptySearchStateCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsEmptySearchStateCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbContactsEmptySearchStateCustomizable]',\n                }]\n        }] });\n/**\n * This is an extension slot to be used for customizing contact Error state\n *\n * @usageNotes\n *\n * ### Display error view\n *\n * ```html\n *  <ng-template bbContactsErrorStateCustomizable let-hostRef let-error=\"context\">\n *   <div class=\"bb-state-container\">\n *     <bb-common-error-state-ui [error]=\"error\"></bb-common-error-state-ui>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsErrorStateCustomizableDirective extends BbTemplate {\n}\n/** @nocollapse */ ContactsErrorStateCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsErrorStateCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ ContactsErrorStateCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsErrorStateCustomizableDirective, selector: \"[bbContactsErrorStateCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsErrorStateCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbContactsErrorStateCustomizable]',\n                }]\n        }] });\n\n/**\n * The following extension slots are available in this component:\n *  - `ContactsListContainerCustomizableDirective`\n *  - `ContactsTopSectionCustomizableDirective`\n *  - `ContactsLoadMoreCustomizableDirective`\n *  - `ContactsLoadingCustomizableDirective`\n *  - `ContactsEmptyStateCustomizableDirective`\n *  - `ContactsEmptySearchStateCustomizableDirective`\n *  - `ContactsErrorStateCustomizableDirective`\n *\n * @see ContactsListContainerCustomizableDirective\n * @see ContactsTopSectionCustomizableDirective\n * @see ContactsLoadMoreCustomizableDirective\n * @see ContactsLoadingCustomizableDirective\n * @see ContactsEmptyStateCustomizableDirective\n * @see ContactsEmptySearchStateCustomizableDirective\n * @see ContactsErrorStateCustomizableDirective\n * Container component for showing contact list.\n * @usageNotes\n *\n * ### Display list of all the contacts with details / edit form.\n *\n * ```html\n * <bb-contacts-list-container>\n *  <router-outlet></router-outlet>\n * </bb-contacts-list-container>\n * ```\n * @ngModule ContactManagerWidgetModule\n */\nclass ContactsListContainerComponent {\n    constructor(service, navigation, router, route, propertiesService) {\n        this.service = service;\n        this.navigation = navigation;\n        this.router = router;\n        this.route = route;\n        this.propertiesService = propertiesService;\n        this.firstContactEdit = false;\n        this.isSearchBoxVisible = true;\n        this.searchTerm = new FormControl();\n        this.containerlistParams = new BehaviorSubject('');\n        this.debounceSearch$ = new Subject();\n        this.hostRef = this;\n        this.newContactAllowed = this.propertiesService.newContact$;\n        this.pageSize = this.propertiesService.pageSize$;\n        this.maxNavPages = this.propertiesService.maxNavPages$;\n        this.paginationType = this.propertiesService.paginationType$;\n        this.isListView = this.router.events.pipe(filter((e) => e instanceof NavigationEnd), map((e) => e.url), startWith(this.router.url), map(() => {\n            const isList = this.navigation.currentView === View.List;\n            if (isList) {\n                this.firstContactEdit = false;\n            }\n            return isList;\n        }), shareReplay());\n        this.pagination = combineLatest([this.route.queryParamMap, this.pageSize]).pipe(map(([params, pageSize]) => this.pageParamsFromRoute(params, pageSize)));\n        this.items = this.service.items.pipe(tap((results) => {\n            this.isSearchBoxVisible = !!this.searchTerm.value ? true : results.contacts.length > 0;\n            results.contacts.sort((a, b) => a.name.toLocaleUpperCase().trim() > b.name.toLocaleUpperCase().trim() ? 1 : -1);\n        }), catchError((error) => {\n            this.error = error;\n            return of(undefined);\n        }));\n        /**\n         * Observable of currently selected item id\n         */\n        this.selectedItemId = this.service.currentlySelectedItemId;\n        this.listParams = combineLatest([\n            this.containerlistParams,\n            this.pagination,\n            this.pageSize,\n            this.paginationType,\n        ]).pipe(map(([method, paginationParams, pageSize, paginationType]) => {\n            if (method === LoadMoreMethod.LOAD_MORE && paginationType === LoadMoreMethod.LOAD_MORE) {\n                paginationParams.from++;\n                paginationParams.size = pageSize;\n            }\n            return {\n                paginationParams,\n                paginationType,\n                method,\n            };\n        }), map(({ paginationParams, paginationType, method }) => ({\n            pagination: {\n                from: paginationParams.from,\n                size: paginationParams.size,\n                query: paginationParams.query,\n            },\n            paginationType,\n            method,\n        })));\n    }\n    ngOnInit() {\n        this.subscription = this.listParams.subscribe((params) => {\n            return this.service.updateItemList(params.pagination.query, params.pagination.from, params.pagination.size, params.paginationType, params.method);\n        });\n        this.subscription.add(this.debounceSearch$\n            .pipe(debounceTime(300), distinctUntilChanged())\n            .subscribe((term) => this.searchContacts(term)));\n    }\n    /**\n     * Event handler for search box value change\n     *\n     * @param {string} phrase text to search for\n     */\n    onSearchTermChange(phrase) {\n        this.debounceSearch$.next(phrase);\n    }\n    /**\n     * Event handler for search box clear\n     */\n    clearSearch() {\n        this.debounceSearch$.next('');\n    }\n    /**\n     * Queries contacts with given phrase\n     *\n     * @param {string} phrase text to search for\n     */\n    searchContacts(phrase) {\n        this.containerlistParams.next('search');\n        this.navigation.list(0, phrase); // TODO: Remove query params when migrating widget\n    }\n    /**\n     * Navigates to list page.\n     *\n     * @param {number} page Current page number.\n     */\n    onPageChange(page) {\n        this.navigation.list(page);\n    }\n    /**\n     * Updat the list parameter as load more.\n     */\n    loadMore() {\n        this.containerlistParams.next('load-more');\n    }\n    /**\n     * Routes to selected contact details.\n     *\n     * @param {string} id  Contact ID\n     */\n    select(id) {\n        this.navigation.select(id);\n    }\n    /**\n     * Routes to new contact.\n     *\n     * @param {number} totalContacts - total number of contacts.\n     */\n    newContact(totalContacts) {\n        this.firstContactEdit = !totalContacts;\n        this.navigation.newContact();\n        this.navigation.currentView = View.Select;\n    }\n    /**\n     * method to return back to list view.\n     */\n    backToList() {\n        this.navigation.currentView = View.List;\n        this.navigation.list();\n    }\n    pageParamsFromRoute(query, pageSize) {\n        const from = query.get('page');\n        this.searchTerm.setValue(query.get('query') || '');\n        return {\n            from: (from && Number.parseInt(from, 10)) || 0,\n            size: pageSize ? Number(pageSize) : 5,\n            query: this.searchTerm.value || '',\n        };\n    }\n    ngOnDestroy() {\n        var _a;\n        (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    }\n}\n/** @nocollapse */ ContactsListContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsListContainerComponent, deps: [{ token: ContactsService }, { token: ContactsNavigationService }, { token: i2$2.Router }, { token: i2$2.ActivatedRoute }, { token: ContactManagerPreferencesService }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ ContactsListContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactsListContainerComponent, selector: \"bb-contacts-list-container\", ngImport: i0, template: \"<div class=\\\"card card-body\\\" data-role=\\\"loading-label\\\">\\n  <ng-container *ngIf=\\\"items | async as items; else loadingTemplate\\\">\\n    <div\\n      class=\\\"bb-block bb-block--md\\\"\\n      [ngClass]=\\\"{\\n        'd-none d-lg-block': !(isListView | async)\\n      }\\\"\\n    >\\n      <div class=\\\"row\\\">\\n        <ng-container bbContactsTopSectionCustomizable [bbHostRef]=\\\"hostRef\\\" [bbTemplateContext]=\\\"items\\\"></ng-container>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"!(isListView | async)\\\" class=\\\"row d-block d-lg-none\\\">\\n      <button bbButton color=\\\"unstyled\\\" (click)=\\\"backToList()\\\" class=\\\"bb-text-bold text-primary\\\">\\n        <bb-icon-ui name=\\\"angle-left\\\"></bb-icon-ui>\\n        <span i18n=\\\"Back to list view|Span for going back to list view@@contact-manager.span.backToList\\\">\\n          Back to list\\n        </span>\\n      </button>\\n    </div>\\n    <div\\n      class=\\\"row bb-block bb-block--md\\\"\\n      *ngIf=\\\"(items && items.contacts.length > 0) || hostRef.firstContactEdit; else emptyTemplate\\\"\\n    >\\n      <ng-container\\n        bbContactsListContainerCustomizable\\n        [bbHostRef]=\\\"hostRef\\\"\\n        [bbTemplateContext]=\\\"items\\\"\\n      ></ng-container>\\n      <div\\n        class=\\\"col col-lg-6\\\"\\n        [ngClass]=\\\"{\\n          'd-none d-lg-block': isListView | async\\n        }\\\"\\n      >\\n        <ng-content></ng-content>\\n      </div>\\n    </div>\\n    <div\\n      class=\\\"row\\\"\\n      [ngClass]=\\\"{\\n        'd-none d-lg-block': !(isListView | async)\\n      }\\\"\\n    >\\n      <div class=\\\"col-lg-6\\\">\\n        <ng-container bbContactsLoadMoreCustomizable [bbHostRef]=\\\"hostRef\\\" [bbTemplateContext]=\\\"items\\\"></ng-container>\\n        <ng-template bbContactsLoadMoreCustomizable let-hostRef let-items=\\\"context\\\">\\n          <bb-pagination-ui\\n            *ngIf=\\\"(hostRef.paginationType | async) !== 'load-more'\\\"\\n            class=\\\"bb-pagination\\\"\\n            [page]=\\\"(hostRef.pagination | async)?.from\\\"\\n            [boundaryLinks]=\\\"false\\\"\\n            [directionLinks]=\\\"true\\\"\\n            [totalItems]=\\\"items?.count\\\"\\n            [itemsPerPage]=\\\"hostRef.pageSize | async\\\"\\n            [maxNavPages]=\\\"hostRef.maxNavPages | async\\\"\\n            (pageChange)=\\\"hostRef.onPageChange($event)\\\"\\n          ></bb-pagination-ui>\\n          <div\\n            class=\\\"p-5 text-center\\\"\\n            *ngIf=\\\"(hostRef.paginationType | async) === 'load-more' && items.contacts.length > 0\\\"\\n          >\\n            <bb-load-button-ui\\n              class=\\\"bb-block bb-block--md\\\"\\n              color=\\\"secondary\\\"\\n              data-role=\\\"contact-load-more\\\"\\n              *ngIf=\\\"items.count && items.count > items.contacts.length\\\"\\n              (click)=\\\"hostRef.loadMore()\\\"\\n            >\\n              <ng-container\\n                i18n=\\\"Load more button label | Load more button shown down bellow contact list@@contact-manager.load-more.label\\\"\\n              >\\n                Load more\\n              </ng-container>\\n            </bb-load-button-ui>\\n          </div>\\n        </ng-template>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n  <ng-template bbContactsListContainerCustomizable let-hostRef let-items=\\\"context\\\">\\n    <div\\n      class=\\\"col\\\"\\n      [ngClass]=\\\"{\\n        'd-block': hostRef.isListView | async,\\n        'd-lg-block d-none': !(hostRef.isListView | async)\\n      }\\\"\\n    >\\n      <bb-contacts-list-widget\\n        [items]=\\\"items.contacts\\\"\\n        [selectedItemId]=\\\"hostRef.selectedItemId | async\\\"\\n        [showAlias]=\\\"false\\\"\\n        (selectedChange)=\\\"hostRef.select($event)\\\"\\n      >\\n      </bb-contacts-list-widget>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template bbContactsTopSectionCustomizable let-hostRef let-items=\\\"context\\\">\\n    <div class=\\\"col bb-stack\\\">\\n      <div class=\\\"bb-stack__item bb-stack__item--fill\\\">\\n        <bb-search-box-ui\\n          *ngIf=\\\"hostRef.isSearchBoxVisible\\\"\\n          class=\\\"bb-toolbar__item\\\"\\n          data-role=\\\"contact-manager-search\\\"\\n          placeholder=\\\"Search\\\"\\n          i18n-placeholder=\\\"Search box placeholder | Placeholder for search box@@contact-manager.placeholder.search\\\"\\n          aria-label=\\\"Search\\\"\\n          i18n-aria-label=\\\"@@contact-manager.placeholder.search\\\"\\n          [showSearch]=\\\"true\\\"\\n          [showClear]=\\\"true\\\"\\n          [formControl]=\\\"hostRef.searchTerm\\\"\\n          (valueChange)=\\\"hostRef.onSearchTermChange($event)\\\"\\n          (submit)=\\\"hostRef.searchContacts(hostRef.searchTerm.value)\\\"\\n          (keyup.enter)=\\\"hostRef.searchContacts(hostRef.searchTerm.value)\\\"\\n          (clear)=\\\"hostRef.clearSearch()\\\"\\n        ></bb-search-box-ui>\\n        <div class=\\\"sr-only\\\" aria-live=\\\"assertive\\\">\\n          <p i18n=\\\"@@contact-manager.list.results-found\\\">\\n            {items.count || 0, plural, =1 {1 result found} other {{{items.count}} results found}}\\n          </p>\\n        </div>\\n      </div>\\n      <div class=\\\"bb-stack__item align-self-start\\\">\\n        <button\\n          bbButton\\n          i18n=\\\"New Contact Button | Button for creating a new contact@@contact-manager.button.newContact\\\"\\n          data-role=\\\"new-contact-button\\\"\\n          class=\\\"d-block bb-button-bar__button\\\"\\n          [disabled]=\\\"!(hostRef.newContactAllowed | async)\\\"\\n          (click)=\\\"hostRef.newContact(items.contacts.length)\\\"\\n          type=\\\"button\\\"\\n        >\\n          New Contact\\n        </button>\\n      </div>\\n    </div>\\n    <ng-template #rt let-result=\\\"result\\\" let-term=\\\"term\\\">\\n      <div class=\\\"text-truncate\\\" [title]=\\\"result\\\">\\n        <ngb-highlight [result]=\\\"result\\\" [term]=\\\"term\\\"></ngb-highlight>\\n      </div>\\n    </ng-template>\\n  </ng-template>\\n\\n  <ng-template bbContactsLoadingCustomizable let-hostRef>\\n    <div class=\\\"bb-state-container\\\">\\n      <bb-loading-indicator-ui\\n        i18n-text=\\\"@@contact-manager.loading.label\\\"\\n        text=\\\"Loading contacts...\\\"\\n        data-role=\\\"contact-manager-loading\\\"\\n      ></bb-loading-indicator-ui>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template #loadingTemplate>\\n    <ng-container *ngIf=\\\"!error; else errorTemplate\\\" bbContactsLoadingCustomizable [bbHostRef]=\\\"hostRef\\\"></ng-container>\\n  </ng-template>\\n\\n  <ng-template bbContactsEmptyStateCustomizable let-hostRef>\\n    <div class=\\\"bb-state-container\\\">\\n      <bb-empty-state-ui\\n        i18n-title=\\\"@@contact-manager.state.noContactsLoaded.title\\\"\\n        title=\\\"No contacts\\\"\\n        i18n-subtitle=\\\"@@contact-manager.state.noContactsLoaded.subtitle\\\"\\n        subtitle=\\\"You don't have any contacts to display yet.<br>Try adding a new contact using the 'New Contact' button\\\"\\n        iconClasses=\\\"d-flex justify-content-center mb-3\\\"\\n        iconModifier=\\\"contacts\\\"\\n        iconSize=\\\"xxl\\\"\\n        data-role=\\\"contact-manager-empty\\\"\\n      ></bb-empty-state-ui>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template #emptyTemplate>\\n    <ng-container\\n      *ngIf=\\\"!hostRef.searchTerm.value; else emptySearchTemplate\\\"\\n      bbContactsEmptyStateCustomizable\\n      [bbHostRef]=\\\"hostRef\\\"\\n    ></ng-container>\\n  </ng-template>\\n\\n  <ng-template bbContactsEmptySearchStateCustomizable let-hostRef let-term=\\\"context\\\">\\n    <div class=\\\"bb-state-container\\\">\\n      <bb-empty-state-ui\\n        i18n-title=\\\"@@contact-manager.state.empty-search.title\\\"\\n        title=\\\"No results found\\\"\\n        i18n-subtitle=\\\"@@contact-manager.state.empty-search.subtitle\\\"\\n        subtitle=\\\"We can't find what you're looking for. Please try a different criteria.\\\"\\n        iconClasses=\\\"d-flex justify-content-center mb-3\\\"\\n        iconModifier=\\\"search\\\"\\n        iconColor=\\\"primary\\\"\\n        iconSize=\\\"xxl\\\"\\n        data-role=\\\"contact-manager-list-search-empty\\\"\\n      ></bb-empty-state-ui>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template #emptySearchTemplate>\\n    <ng-container\\n      bbContactsEmptySearchStateCustomizable\\n      [bbHostRef]=\\\"hostRef\\\"\\n      [bbTemplateContext]=\\\"searchTerm\\\"\\n    ></ng-container>\\n  </ng-template>\\n\\n  <ng-template bbContactsErrorStateCustomizable let-hostRef let-error=\\\"context\\\">\\n    <div class=\\\"bb-state-container\\\">\\n      <bb-common-error-state-ui [attr.data-role]=\\\"'contact-manager-error'\\\" [error]=\\\"error\\\"></bb-common-error-state-ui>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template #errorTemplate>\\n    <ng-container bbContactsErrorStateCustomizable [bbHostRef]=\\\"hostRef\\\" [bbTemplateContext]=\\\"error\\\"></ng-container>\\n  </ng-template>\\n</div>\\n\", components: [{ type: i3.IconComponent, selector: \"bb-icon-ui\", inputs: [\"name\", \"inverse\", \"size\", \"color\", \"animate\", \"aria-label\", \"cropped\", \"backgroundType\"] }, { type: i6$2.PaginatorComponent, selector: \"bb-pagination-ui\", inputs: [\"page\", \"boundaryLinks\", \"directionLinks\", \"totalItems\", \"itemsPerPage\", \"maxNavPages\"], outputs: [\"pageChange\"] }, { type: i7$1.LoadButtonComponent, selector: \"bb-load-button-ui\", inputs: [\"isLoading\", \"from\", \"size\", \"circle\", \"totalCount\"], outputs: [\"paramChange\"] }, { type: ContactsListWidgetComponent, selector: \"bb-contacts-list-widget\", inputs: [\"items\", \"selectedItemId\", \"showAlias\"], outputs: [\"selectedChange\"] }, { type: i9.SearchBoxComponent, selector: \"bb-search-box-ui\", inputs: [\"placeholder\", \"maxLength\", \"squareBorder\", \"typeaheadOptions\", \"showSearch\", \"showClear\", \"searchLabel\", \"clearLabel\", \"autocomplete\"], outputs: [\"submit\", \"clear\", \"valueChange\"] }, { type: i10.NgbHighlight, selector: \"ngb-highlight\", inputs: [\"highlightClass\", \"accentSensitive\", \"result\", \"term\"] }, { type: i7.LoadingIndicatorComponent, selector: \"bb-loading-indicator-ui\", inputs: [\"text\", \"loaderSize\", \"showDelay\", \"hasBackground\", \"inline\"] }, { type: i12.EmptyStateComponent, selector: \"bb-empty-state-ui\", inputs: [\"title\", \"subtitle\", \"showIcon\", \"iconClasses\", \"iconModifier\", \"iconSize\", \"iconColor\"] }, { type: i13.ErrorCommonStateComponent, selector: \"bb-common-error-state-ui\", inputs: [\"error\"] }], directives: [{ type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: ContactsTopSectionCustomizableDirective, selector: \"[bbContactsTopSectionCustomizable]\" }, { type: i6.ButtonDirective, selector: \"button[bbButton]\", inputs: [\"type\", \"color\", \"buttonSize\", \"block\", \"circle\"] }, { type: ContactsListContainerCustomizableDirective, selector: \"[bbContactsListContainerCustomizable]\" }, { type: ContactsLoadMoreCustomizableDirective, selector: \"[bbContactsLoadMoreCustomizable]\" }, { type: i1$2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1$2.FormControlDirective, selector: \"[formControl]\", inputs: [\"disabled\", \"formControl\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { type: ContactsLoadingCustomizableDirective, selector: \"[bbContactsLoadingCustomizable]\" }, { type: ContactsEmptyStateCustomizableDirective, selector: \"[bbContactsEmptyStateCustomizable]\" }, { type: ContactsEmptySearchStateCustomizableDirective, selector: \"[bbContactsEmptySearchStateCustomizable]\" }, { type: ContactsErrorStateCustomizableDirective, selector: \"[bbContactsErrorStateCustomizable]\" }], pipes: { \"async\": i2$1.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactsListContainerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-contacts-list-container',\n                    templateUrl: 'contacts-list-container.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: ContactsService }, { type: ContactsNavigationService }, { type: i2$2.Router }, { type: i2$2.ActivatedRoute }, { type: ContactManagerPreferencesService }]; } });\n\n/**\n * Returns the new instance of contactnavigationservice.\n *\n * @param {RouterService} service router service\n * @returns {ContactsNavigationService} new service instance\n */\nfunction makeNavigationService(service) {\n    return new ContactsNavigationService(service);\n}\nconst contactsRoutes = [\n    {\n        path: '',\n        component: ContactsDetailContainerComponent,\n    },\n    {\n        path: 'select',\n        component: ContactsTypeListContainerComponent,\n    },\n    {\n        path: ':id',\n        component: ContactsDetailContainerComponent,\n    },\n    {\n        path: 'edit/:id/:type',\n        canDeactivate: [CanDeactivateGuard],\n        component: ContactsFormContainerComponent,\n    },\n];\nlet ContactManagerWidgetComponent = class ContactManagerWidgetComponent {\n    constructor(preferencesService) {\n        this.preferencesService = preferencesService;\n    }\n    /**\n     * property to enable the creation of new contacts\n     */\n    set newContact(value) {\n        this.preferencesService.setNewContact(value);\n    }\n    /**\n     * Number of contacts per page\n     */\n    set pageSize(value) {\n        this.preferencesService.setPageSize(value);\n    }\n    /**\n     * Max. number of navigation pages\n     */\n    set maxNavPages(value) {\n        this.preferencesService.setMaxNavPages(value);\n    }\n    /**\n     * Pagination type (pagination, load-more)\n     */\n    set paginationType(value) {\n        this.preferencesService.setPaginationType(value);\n    }\n    /**\n     * Milliseconds to dismiss any notification message\n     */\n    set notificationDismissTime(value) {\n        this.preferencesService.setNotificationDismissTime(value);\n    }\n    /**\n     * property from user if the contact creation through email is allowed\n     */\n    set createContactEmail(value) {\n        this.preferencesService.setCreateContactEmail(value);\n    }\n    /**\n     * property from user if the contact creation through IBAN is allowed\n     */\n    set createContactIBAN(value) {\n        this.preferencesService.setCreateContactIBAN(value);\n    }\n    /**\n     * property from user if the contact creation through Account Number is allowed\n     */\n    set createContactAccount(value) {\n        this.preferencesService.setCreateContactAccount(value);\n    }\n    /**\n     * property from user if the contact creation through Phone Number is allowed\n     */\n    set createContactPhone(value) {\n        this.preferencesService.setCreateContactPhone(value);\n    }\n};\n/** @nocollapse */ ContactManagerWidgetComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactManagerWidgetComponent, deps: [{ token: ContactManagerPreferencesService }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ ContactManagerWidgetComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContactManagerWidgetComponent, selector: \"bb-contacts, bb-contact-manager-widget\", inputs: { newContact: \"newContact\", pageSize: \"pageSize\", maxNavPages: \"maxNavPages\", paginationType: \"paginationType\", notificationDismissTime: \"notificationDismissTime\", createContactEmail: \"createContactEmail\", createContactIBAN: \"createContactIBAN\", createContactAccount: \"createContactAccount\", createContactPhone: \"createContactPhone\" }, providers: [\n        RouterService,\n        {\n            provide: ContactsNavigationService,\n            useFactory: makeNavigationService,\n            deps: [RouterService],\n        },\n        ContactsService,\n        ContactManagerPreferencesService,\n    ], ngImport: i0, template: `\n    <bb-contacts-list-container>\n      <bb-router-outlet></bb-router-outlet>\n    </bb-contacts-list-container>\n  `, isInline: true, components: [{ type: ContactsListContainerComponent, selector: \"bb-contacts-list-container\" }], directives: [{ type: i1.RouterOutletDirective, selector: \"bb-router-outlet\", outputs: [\"activate\", \"deactivate\"], exportAs: [\"bbOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\nContactManagerWidgetComponent = __decorate([\n    RoutableWidget({\n        routes: contactsRoutes,\n    })\n    /**\n     * A widget for managing contacts.\n     *\n     * @usageNotes\n     *\n     * ### Include this widget in your `AppModule`:\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [\n     *     ContactManagerWidgetModule,\n     *   ],\n     *  providers:[{\n     *     provide: ContactsNavigationService,\n     *     useFactory: makeNavigationService,\n     *     deps: [RouterService],\n     *   }],\n     *   ...\n     * })\n     * export class AppModule {}\n     * ```\n     *\n     * ### Include this widget (standalone model)\n     *\n     * ```typescript\n     * export const environment: Environment = {\n     *   ...\n     *   bootstrap: {\n     *     pageModel: {\n     *       name: 'root',\n     *       properties: {},\n     *       children: [\n     *         {\n     *           name: 'bb-contact-manager-ang',\n     *           properties: {\n     *             classId: 'ContactManagerWidgetModule',\n     *             \"notificationDismissTime\": 0,\n     *             \"createContactIBAN\": true,\n     *             \"createContactPhone\": true,\n     *             \"createContactAccount\": true,\n     *             \"createContactEmail\": true\n     *           },\n     *         },\n     *       ],\n     *     },\n     *   },\n     * };\n     * ```\n     *\n     * ### Routable Widget\n     *\n     * Using the `@CopyRoutes` for component\n     *\n     * ```typescript\n     * @CopyRoutes(ContactManagerWidgetComponent)\n     * export class ExtendedContactManagerWidgetComponent\n     * ```\n     * @ngModule ContactManagerWidgetModule\n     */\n    ,\n    __metadata(\"design:paramtypes\", [ContactManagerPreferencesService])\n], ContactManagerWidgetComponent);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactManagerWidgetComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-contacts, bb-contact-manager-widget',\n                    template: `\n    <bb-contacts-list-container>\n      <bb-router-outlet></bb-router-outlet>\n    </bb-contacts-list-container>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        RouterService,\n                        {\n                            provide: ContactsNavigationService,\n                            useFactory: makeNavigationService,\n                            deps: [RouterService],\n                        },\n                        ContactsService,\n                        ContactManagerPreferencesService,\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: ContactManagerPreferencesService }]; }, propDecorators: { newContact: [{\n                type: Input,\n                args: ['newContact']\n            }], pageSize: [{\n                type: Input,\n                args: ['pageSize']\n            }], maxNavPages: [{\n                type: Input,\n                args: ['maxNavPages']\n            }], paginationType: [{\n                type: Input,\n                args: ['paginationType']\n            }], notificationDismissTime: [{\n                type: Input,\n                args: ['notificationDismissTime']\n            }], createContactEmail: [{\n                type: Input,\n                args: ['createContactEmail']\n            }], createContactIBAN: [{\n                type: Input,\n                args: ['createContactIBAN']\n            }], createContactAccount: [{\n                type: Input,\n                args: ['createContactAccount']\n            }], createContactPhone: [{\n                type: Input,\n                args: ['createContactPhone']\n            }] } });\n\nconst uiModules = [\n    ButtonModule,\n    IconModule,\n    NotificationModule,\n    FormsModule,\n    InputTextModule,\n    InputValidationMessageModule,\n    HeaderModule,\n    EmptyStateModule,\n    AvatarModule,\n    PaginatorModule,\n    DropdownMenuModule,\n    EllipsisModule,\n    LoadingIndicatorModule,\n    ErrorCommonStateModule,\n    NgbDropdownModule,\n    NgbTypeaheadModule,\n    ReactiveFormsModule,\n    BbIbanPipeModule,\n    SearchBoxModule,\n    InputEmailModule,\n    LoadButtonModule,\n];\nconst dependentModules = [IbanValidatorModule, NoWhiteSpaceModule, ConfirmActionDialogModule, EmailDomainModule];\nconst components = [\n    ContactManagerWidgetComponent,\n    ContactsListWidgetComponent,\n    ContactsListItemComponent,\n    ContactsListContainerComponent,\n    ContactsDetailComponent,\n    ContactsDetailContainerComponent,\n    ContactsFormComponent,\n    ContactsFormContainerComponent,\n    ContactSelectAccountTypeComponent,\n    ContactsTypeListContainerComponent,\n];\nconst customizationDirectives = [\n    ContactsListContainerCustomizableDirective,\n    ContactsTopSectionCustomizableDirective,\n    ContactsDetailCustomizableDirective,\n    ContactsFormCustomizableDirective,\n    ContactsLoadMoreCustomizableDirective,\n    ContactsLoadingCustomizableDirective,\n    ContactsEmptyStateCustomizableDirective,\n    ContactsEmptySearchStateCustomizableDirective,\n    ContactsErrorStateCustomizableDirective,\n    ContactsCreateErrorNotificationCustomizableDirective,\n    ContactsCreateSuccessNotificationCustomizableDirective,\n    ContactsDeleteConfirmationCustomizableDirective,\n    ContactsDeleteErrorNotificationCustomizableDirective,\n    ContactsDeleteSuccessNotificationCustomizableDirective,\n    ContactsEditDiscardConfirmationCustomizableDirective,\n    ContactsEditErrorNotificationCustomizableDirective,\n    ContactsEditSuccessNotificationCustomizableDirective,\n];\n/**\n * Exports the Widgets and UI components for managing contacts.\n *\n * The following widgets are included in this module:\n *  - `ContactManagerWidgetComponent`\n *\n * @see ContactManagerWidgetComponent\n * @usageNotes\n *\n * ### Include the exported widgets in your `AppModule`:\n *\n * ```typescript\n * @NgModule({\n *   imports: [\n *     ContactManagerWidgetModule,\n *   ],\n *  providers:[{\n *   provide: CONTACT_MANAGER_BASE_PATH,\n *   useFactory: getBasePath('contact-manager'),\n *   deps: [PAGE_CONFIG], },\n * {\n *   provide: ACCESS_CONTROL_BASE_PATH,\n *   useFactory: getBasePath('access-control'),\n *   deps: [PAGE_CONFIG], }]\n *   ...\n * })\n * export class AppModule {}\n * ```\n */\nclass ContactManagerWidgetModule {\n}\n/** @nocollapse */ ContactManagerWidgetModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactManagerWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ ContactManagerWidgetModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactManagerWidgetModule, declarations: [ContactManagerWidgetComponent,\n        ContactsListWidgetComponent,\n        ContactsListItemComponent,\n        ContactsListContainerComponent,\n        ContactsDetailComponent,\n        ContactsDetailContainerComponent,\n        ContactsFormComponent,\n        ContactsFormContainerComponent,\n        ContactSelectAccountTypeComponent,\n        ContactsTypeListContainerComponent, ContactsListContainerCustomizableDirective,\n        ContactsTopSectionCustomizableDirective,\n        ContactsDetailCustomizableDirective,\n        ContactsFormCustomizableDirective,\n        ContactsLoadMoreCustomizableDirective,\n        ContactsLoadingCustomizableDirective,\n        ContactsEmptyStateCustomizableDirective,\n        ContactsEmptySearchStateCustomizableDirective,\n        ContactsErrorStateCustomizableDirective,\n        ContactsCreateErrorNotificationCustomizableDirective,\n        ContactsCreateSuccessNotificationCustomizableDirective,\n        ContactsDeleteConfirmationCustomizableDirective,\n        ContactsDeleteErrorNotificationCustomizableDirective,\n        ContactsDeleteSuccessNotificationCustomizableDirective,\n        ContactsEditDiscardConfirmationCustomizableDirective,\n        ContactsEditErrorNotificationCustomizableDirective,\n        ContactsEditSuccessNotificationCustomizableDirective], imports: [CommonModule,\n        RouterModule, IbanValidatorModule, NoWhiteSpaceModule, ConfirmActionDialogModule, EmailDomainModule, ButtonModule,\n        IconModule,\n        NotificationModule,\n        FormsModule,\n        InputTextModule,\n        InputValidationMessageModule,\n        HeaderModule,\n        EmptyStateModule,\n        AvatarModule,\n        PaginatorModule,\n        DropdownMenuModule,\n        EllipsisModule,\n        LoadingIndicatorModule,\n        ErrorCommonStateModule,\n        NgbDropdownModule,\n        NgbTypeaheadModule,\n        ReactiveFormsModule,\n        BbIbanPipeModule,\n        SearchBoxModule,\n        InputEmailModule,\n        LoadButtonModule, i1.BackbaseCoreModule], exports: [ContactManagerWidgetComponent,\n        ContactsListWidgetComponent,\n        ContactsListItemComponent,\n        ContactsListContainerComponent,\n        ContactsDetailComponent,\n        ContactsDetailContainerComponent,\n        ContactsFormComponent,\n        ContactsFormContainerComponent,\n        ContactSelectAccountTypeComponent,\n        ContactsTypeListContainerComponent, ContactsListContainerCustomizableDirective,\n        ContactsTopSectionCustomizableDirective,\n        ContactsDetailCustomizableDirective,\n        ContactsFormCustomizableDirective,\n        ContactsLoadMoreCustomizableDirective,\n        ContactsLoadingCustomizableDirective,\n        ContactsEmptyStateCustomizableDirective,\n        ContactsEmptySearchStateCustomizableDirective,\n        ContactsErrorStateCustomizableDirective,\n        ContactsCreateErrorNotificationCustomizableDirective,\n        ContactsCreateSuccessNotificationCustomizableDirective,\n        ContactsDeleteConfirmationCustomizableDirective,\n        ContactsDeleteErrorNotificationCustomizableDirective,\n        ContactsDeleteSuccessNotificationCustomizableDirective,\n        ContactsEditDiscardConfirmationCustomizableDirective,\n        ContactsEditErrorNotificationCustomizableDirective,\n        ContactsEditSuccessNotificationCustomizableDirective, IbanValidatorModule, NoWhiteSpaceModule, ConfirmActionDialogModule, EmailDomainModule] });\n/** @nocollapse */ ContactManagerWidgetModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactManagerWidgetModule, providers: [CanDeactivateGuard, ContactsService, ...ContactConfigProviders], imports: [[\n            CommonModule,\n            RouterModule,\n            ...dependentModules,\n            ...uiModules,\n            BackbaseCoreModule.withConfig({\n                classMap: { ContactManagerWidgetComponent },\n            }),\n        ], IbanValidatorModule, NoWhiteSpaceModule, ConfirmActionDialogModule, EmailDomainModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContactManagerWidgetModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        RouterModule,\n                        ...dependentModules,\n                        ...uiModules,\n                        BackbaseCoreModule.withConfig({\n                            classMap: { ContactManagerWidgetComponent },\n                        }),\n                    ],\n                    declarations: [...components, ...customizationDirectives],\n                    providers: [CanDeactivateGuard, ContactsService, ...ContactConfigProviders],\n                    exports: [...components, ...customizationDirectives, ...dependentModules],\n                    entryComponents: [\n                        ContactsDetailContainerComponent,\n                        ContactsListContainerComponent,\n                        ContactsFormContainerComponent,\n                        ContactsTypeListContainerComponent,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AccountCreateType, BB_CONTACT_FORM_ADDITIONS_TOKEN, CanDeactivateGuard, ContactManagerPreferencesService, ContactManagerWidgetComponent, ContactManagerWidgetModule, ContactSelectAccountTypeComponent, ContactsCreateErrorNotificationCustomizableDirective, ContactsCreateSuccessNotificationCustomizableDirective, ContactsDeleteConfirmationCustomizableDirective, ContactsDeleteErrorNotificationCustomizableDirective, ContactsDeleteSuccessNotificationCustomizableDirective, ContactsDetailComponent, ContactsDetailContainerComponent, ContactsDetailCustomizableDirective, ContactsEditDiscardConfirmationCustomizableDirective, ContactsEditErrorNotificationCustomizableDirective, ContactsEditSuccessNotificationCustomizableDirective, ContactsEmptySearchStateCustomizableDirective, ContactsEmptyStateCustomizableDirective, ContactsErrorStateCustomizableDirective, ContactsFormComponent, ContactsFormContainerComponent, ContactsFormCustomizableDirective, ContactsListContainerComponent, ContactsListContainerCustomizableDirective, ContactsListItemComponent, ContactsListWidgetComponent, ContactsLoadMoreCustomizableDirective, ContactsLoadingCustomizableDirective, ContactsNavigationService, ContactsTopSectionCustomizableDirective, ContactsTypeListContainerComponent };\n"]},"metadata":{},"sourceType":"module"}