{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, ChangeDetectionStrategy, Input, Output, HostListener, NgModule } from '@angular/core';\nimport * as i10 from '@angular/forms';\nimport { Validators, FormGroup, FormControl, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\nimport { InputBaseComponent, BaseClassesModule } from '@backbase/ui-ang/base-classes';\nimport '@angular/localize/init';\nimport { idListAttr } from '@backbase/ui-ang/util';\nimport * as i1 from '@backbase/foundation-ang/future';\nimport * as i2 from '@backbase/ui-ang/services';\nimport * as i3 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i4 from '@backbase/ui-ang/input-text';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport * as i5 from '@backbase/ui-ang/input-validation-message';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport * as i6 from '@backbase/ui-ang/loading-indicator';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport * as i7 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i8 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport * as i9 from '@backbase/ui-ang/tooltip-directive';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\n\nfunction InputInlineEditComponent_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction InputInlineEditComponent_ng_container_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.inputText, \" \");\n  }\n}\n\nfunction InputInlineEditComponent_ng_container_1_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function InputInlineEditComponent_ng_container_1_button_5_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.onEdit($event);\n    });\n    i0.ɵɵelement(1, \"bb-icon-ui\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"circle\", true)(\"bbTooltip\", ctx_r6.tooltipEdit);\n    i0.ɵɵattribute(\"aria-describedby\", ctx_r6.ariaDescribedby)(\"aria-label\", ctx_r6.ariaLabelEdit)(\"aria-labelledby\", ctx_r6.ariaLabelledby)(\"data-role\", \"inline-edit-btn\");\n  }\n}\n\nfunction InputInlineEditComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵtemplate(2, InputInlineEditComponent_ng_container_1_ng_container_2_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵtemplate(3, InputInlineEditComponent_ng_container_1_ng_template_3_Template, 2, 1, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(5, InputInlineEditComponent_ng_container_1_button_5_Template, 2, 6, \"button\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r4 = i0.ɵɵreference(4);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.inputInlineTemplate ? ctx_r0.inputInlineTemplate : _r4)(\"ngTemplateOutletContext\", ctx_r0);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.canEdit);\n  }\n}\n\nfunction InputInlineEditComponent_ng_template_2_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.hint, \" \");\n  }\n}\n\nfunction InputInlineEditComponent_ng_template_2_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵi18n(1, 25);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵi18nExp(ctx_r10.maxLength);\n    i0.ɵɵi18nApply(1);\n  }\n}\n\nfunction InputInlineEditComponent_ng_template_2_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵi18n(1, 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵi18nExp(ctx_r11.minLength);\n    i0.ɵɵi18nApply(1);\n  }\n}\n\nfunction InputInlineEditComponent_ng_template_2_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵi18n(1, 27);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵi18nExp(ctx_r12.minValue);\n    i0.ɵɵi18nApply(1);\n  }\n}\n\nfunction InputInlineEditComponent_ng_template_2_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵi18n(1, 28);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵi18nExp(ctx_r13.maxValue);\n    i0.ɵɵi18nApply(1);\n  }\n}\n\nfunction InputInlineEditComponent_ng_template_2_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵi18n(1, 29);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction InputInlineEditComponent_ng_template_2_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵi18n(1, 30);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction InputInlineEditComponent_ng_template_2_bb_loading_indicator_ui_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-loading-indicator-ui\", 31);\n  }\n}\n\nfunction InputInlineEditComponent_ng_template_2_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-icon-ui\", 32);\n  }\n}\n\nfunction InputInlineEditComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelementStart(1, \"form\", 11);\n    i0.ɵɵlistener(\"ngSubmit\", function InputInlineEditComponent_ng_template_2_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return !ctx_r19.hasError() && ctx_r19.onAccept();\n    });\n    i0.ɵɵelementStart(2, \"bb-input-text-ui\", 12);\n    i0.ɵɵlistener(\"click\", function InputInlineEditComponent_ng_template_2_Template_bb_input_text_ui_click_2_listener($event) {\n      return $event.stopPropagation();\n    })(\"blur\", function InputInlineEditComponent_ng_template_2_Template_bb_input_text_ui_blur_2_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.onBlur($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 13);\n    i0.ɵɵelementStart(4, \"div\", 14);\n    i0.ɵɵtemplate(5, InputInlineEditComponent_ng_template_2_div_5_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementStart(6, \"bb-input-validation-message-ui\", 16);\n    i0.ɵɵtemplate(7, InputInlineEditComponent_ng_template_2_div_7_Template, 2, 1, \"div\", 17);\n    i0.ɵɵtemplate(8, InputInlineEditComponent_ng_template_2_div_8_Template, 2, 1, \"div\", 17);\n    i0.ɵɵtemplate(9, InputInlineEditComponent_ng_template_2_div_9_Template, 2, 1, \"div\", 17);\n    i0.ɵɵtemplate(10, InputInlineEditComponent_ng_template_2_div_10_Template, 2, 1, \"div\", 17);\n    i0.ɵɵtemplate(11, InputInlineEditComponent_ng_template_2_div_11_Template, 2, 0, \"div\", 17);\n    i0.ɵɵtemplate(12, InputInlineEditComponent_ng_template_2_div_12_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 18);\n    i0.ɵɵelementStart(14, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function InputInlineEditComponent_ng_template_2_Template_button_click_14_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.onCancel($event);\n    });\n    i0.ɵɵelement(15, \"bb-icon-ui\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function InputInlineEditComponent_ng_template_2_Template_button_click_16_listener($event) {\n      return $event.stopPropagation();\n    });\n    i0.ɵɵtemplate(17, InputInlineEditComponent_ng_template_2_bb_loading_indicator_ui_17_Template, 1, 0, \"bb-loading-indicator-ui\", 22);\n    i0.ɵɵtemplate(18, InputInlineEditComponent_ng_template_2_ng_template_18_Template, 1, 0, \"ng-template\", null, 23, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r17 = i0.ɵɵreference(19);\n\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.vForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"label\", ctx_r2.label);\n    i0.ɵɵpropertyInterpolate(\"id\", ctx_r2.id);\n    i0.ɵɵproperty(\"required\", ctx_r2.required)(\"readonly\", ctx_r2.readonly)(\"maxLength\", ctx_r2.maxLength)(\"minLength\", ctx_r2.minLength)(\"autofocus\", true)(\"ngClass\", ctx_r2.inputClassName)(\"autocomplete\", ctx_r2.autocomplete);\n    i0.ɵɵattribute(\"data-role\", \"inline-edit-input\")(\"aria-autocomplete\", ctx_r2.ariaAutocomplete)(\"aria-controls\", ctx_r2.ariaControls)(\"aria-labelledby\", ctx_r2.ariaLabelledby)(\"aria-describedby\", ctx_r2.idListAttr(ctx_r2.ariaDescribedby, ctx_r2.validationMessagesId))(\"aria-expanded\", ctx_r2.ariaExpanded)(\"aria-activedescendant\", ctx_r2.ariaActivedescendant)(\"role\", ctx_r2.role)(\"aria-invalid\", ctx_r2.ariaInvalid)(\"aria-owns\", ctx_r2.ariaOwns)(\"size\", ctx_r2.size);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.hint && !ctx_r2.hasError());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"showErrors\", ctx_r2.hasError())(\"id\", ctx_r2.validationMessagesId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.hasError(\"maxlength\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.hasError(\"minlength\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.hasError(\"min\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.hasError(\"max\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.hasError(\"pattern\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.hasError(\"required\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"circle\", true)(\"bbTooltip\", ctx_r2.tooltipCancel);\n    i0.ɵɵattribute(\"data-role\", \"inline-edit-cancel\")(\"aria-label\", ctx_r2.ariaLabelCancel);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"circle\", true)(\"bbTooltip\", ctx_r2.tooltipAccept);\n    i0.ɵɵattribute(\"data-role\", \"inline-edit-accept\")(\"aria-label\", ctx_r2.ariaLabelAccept);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isLoading)(\"ngIfElse\", _r17);\n  }\n}\n\nconst defaultAriaLabels = {\n  accept: $localize`:Aria label for accept button@@input-inline-edit-ui.button.aria-label.accept:Accept`,\n  edit: $localize`:Aria label for edit button@@input-inline-edit-ui.button.aria-label.edit:Edit`,\n  cancel: $localize`:Aria label for cancel button@@input-inline-edit-ui.button.aria-label.cancel:Cancel`\n};\nconst defaultTooltips = Object.assign({}, defaultAriaLabels);\nvar InputInlineEditState;\n\n(function (InputInlineEditState) {\n  InputInlineEditState[InputInlineEditState[\"IDLE\"] = 0] = \"IDLE\";\n  InputInlineEditState[InputInlineEditState[\"LOADING\"] = 1] = \"LOADING\";\n  InputInlineEditState[InputInlineEditState[\"EDITING\"] = 2] = \"EDITING\";\n})(InputInlineEditState || (InputInlineEditState = {}));\n/**\n * @name InputInlineEditComponent\n *\n * @a11y Current component provide option to pass needed accessibility\n * attributes. You need to take care of properties that are required in your case :\n *  - role\n *  - aria-activedescendant\n *  - aria-describedby\n *  - aria-expanded\n *  - aria-invalid\n *  - aria-label\n *  - aria-labelledby\n *  - aria-owns\n *\n * @description\n * Component that enables inline input editing.\n */\n\n\nclass InputInlineEditComponent extends InputBaseComponent {\n  constructor(cd, deprecationsService, domAttributesService) {\n    super(cd, deprecationsService);\n    this.domAttributesService = domAttributesService;\n    this._state = InputInlineEditState.IDLE;\n    /**\n     * Emit on edit state changes\n     */\n\n    this.stateChange = new EventEmitter();\n    /**\n     * Flag represents visibility of edit button\n     *\n     * @default: true\n     */\n\n    this.canEdit = true;\n    /**\n     * Applies additional loading state for edit flow\n     *\n     * @default: false\n     */\n\n    this.hasLoadingState = false;\n    /**\n     * The maxLength for the text input.\n     */\n\n    this.maxLength = Infinity;\n    /**\n     * The minLength for the text input.\n     */\n\n    this.minLength = 0;\n    /**\n     * Whether the text input should be auto-focused when shown.\n     */\n\n    this.autofocus = false;\n    /**\n     * The event that's fired after on Cancel.\n     */\n\n    this.cancel = new EventEmitter();\n    /**\n     * The event that's fired after on Accept.\n     */\n\n    this.accept = new EventEmitter();\n    /**\n     * string for aria label on Accept button\n     */\n\n    this.ariaLabelAccept = defaultAriaLabels.accept;\n    /**\n     * string for aria label on Cancel button\n     */\n\n    this.ariaLabelCancel = defaultAriaLabels.cancel;\n    /**\n     * string for aria label on Edit button\n     */\n\n    this.ariaLabelEdit = defaultAriaLabels.edit;\n    /**\n     * string for tooltip on Accept button\n     */\n\n    this.tooltipAccept = defaultTooltips.accept;\n    /**\n     * string for tooltip on Cancel button\n     */\n\n    this.tooltipCancel = defaultTooltips.cancel;\n    /**\n     * string for tooltip on Edit button\n     */\n\n    this.tooltipEdit = defaultTooltips.edit;\n    /**\n     * Utility function for use in template\n     */\n\n    this.idListAttr = idListAttr;\n    this.validationMessagesId = this.domAttributesService.generateId();\n  }\n  /**\n   * State for inline edit\n   */\n\n\n  set state(value) {\n    this._state = value;\n\n    if (this.vForm && value === InputInlineEditState.IDLE) {\n      this.vForm.controls.inputInline.setValue(this._inputText);\n    }\n  }\n  /**\n   * string for editing\n   */\n\n\n  set inputText(value) {\n    var _a;\n\n    this._inputText = value;\n    (_a = this.vForm) === null || _a === void 0 ? void 0 : _a.controls.inputInline.setValue(this._inputText);\n  }\n\n  get inputText() {\n    return this._inputText;\n  }\n\n  ngAfterContentInit() {\n    const validators = [Validators.maxLength(this.maxLength), Validators.minLength(this.minLength)];\n\n    if (this.required) {\n      validators.push(Validators.required);\n    }\n\n    if (this.pattern) {\n      validators.push(Validators.pattern(this.pattern));\n    }\n\n    if (this.minValue) {\n      validators.push(Validators.min(this.minValue));\n    }\n\n    if (this.maxValue) {\n      validators.push(Validators.max(this.maxValue));\n    }\n\n    this.vForm = new FormGroup({\n      inputInline: new FormControl(this._inputText, Validators.compose(validators))\n    });\n  }\n\n  writeValue(inputValue) {\n    if (typeof inputValue === 'string') {\n      this._inputText = inputValue;\n    }\n\n    super.writeValue(inputValue);\n  }\n\n  onEdit(event) {\n    event.stopPropagation();\n    this.updateState(InputInlineEditState.EDITING);\n  }\n\n  onCancel(event) {\n    var _a;\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    (_a = this.vForm) === null || _a === void 0 ? void 0 : _a.controls.inputInline.setValue(this._inputText);\n    this.updateState(InputInlineEditState.IDLE);\n    this.cancel.emit();\n  }\n\n  get isLoading() {\n    return this._state === InputInlineEditState.LOADING;\n  }\n\n  get editMode() {\n    return this._state === InputInlineEditState.EDITING;\n  }\n\n  get isIdleMode() {\n    return this._state === InputInlineEditState.IDLE;\n  }\n  /**\n   * Emits the updated value from input\n   *\n   * If the {@link InputInlineEditComponent.hasLoadingState } set to true -> the state is not changed,\n   * as component state should be updated from outside, otherwise the value will be updated with the\n   * new one and state will be switched to `IDLE`\n   *\n   */\n\n\n  onAccept() {\n    const newString = this.vForm ? this.vForm.controls.inputInline.value : '';\n\n    if (!this.hasLoadingState) {\n      this.updateState(InputInlineEditState.IDLE);\n      this._inputText = newString;\n      this.onValueChange(newString);\n    }\n\n    this.accept.emit(newString);\n  }\n\n  hasError(type) {\n    const fieldControl = this.vForm ? this.vForm.controls.inputInline : null;\n\n    if (!fieldControl || !fieldControl.errors) {\n      return undefined;\n    }\n\n    return type ? fieldControl.errors[type] : fieldControl.errors;\n  }\n\n  onKeydownHandler(evt) {\n    if (this.editMode) {\n      this.onCancel();\n    }\n  }\n\n  updateState(value) {\n    this._state = value;\n    this.stateChange.emit(value);\n  }\n\n}\n\nInputInlineEditComponent.ɵfac = function InputInlineEditComponent_Factory(t) {\n  return new (t || InputInlineEditComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.DeprecationsService), i0.ɵɵdirectiveInject(i2.DomAttributesService));\n};\n\nInputInlineEditComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: InputInlineEditComponent,\n  selectors: [[\"bb-input-inline-edit-ui\"]],\n  hostBindings: function InputInlineEditComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown.escape\", function InputInlineEditComponent_keydown_escape_HostBindingHandler($event) {\n        return ctx.onKeydownHandler($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  inputs: {\n    state: \"state\",\n    canEdit: \"canEdit\",\n    hasLoadingState: \"hasLoadingState\",\n    inputInlineTemplate: \"inputInlineTemplate\",\n    inputText: \"inputText\",\n    maxLength: \"maxLength\",\n    minLength: \"minLength\",\n    maxValue: \"maxValue\",\n    minValue: \"minValue\",\n    autofocus: \"autofocus\",\n    ariaLabelAccept: \"ariaLabelAccept\",\n    ariaLabelCancel: \"ariaLabelCancel\",\n    ariaLabelEdit: \"ariaLabelEdit\",\n    tooltipAccept: \"tooltipAccept\",\n    tooltipCancel: \"tooltipCancel\",\n    tooltipEdit: \"tooltipEdit\",\n    autocomplete: \"autocomplete\",\n    pattern: \"pattern\",\n    hint: \"hint\"\n  },\n  outputs: {\n    stateChange: \"stateChange\",\n    cancel: \"cancel\",\n    accept: \"accept\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => InputInlineEditComponent),\n    multi: true\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 4,\n  vars: 2,\n  consts: function () {\n    let i18n_0;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc String is more than 'maxLength' characters \n       * @meaning Max Length Error\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_INPUT_INLINE_EDIT_JS___1 = goog.getMsg(\" Insert max {$interpolation} characters \", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_0 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_INPUT_INLINE_EDIT_JS___1;\n    } else {\n      i18n_0 = $localize`:Max Length Error|String is more than 'maxLength' characters @@input-inline-edit-ui.maxLengthError: Insert max ${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION: characters `;\n    }\n\n    let i18n_2;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc String is less than 'minLength' characters \n       * @meaning Min Length Error\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_INPUT_INLINE_EDIT_JS___3 = goog.getMsg(\" Insert min {$interpolation} characters \", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_2 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_INPUT_INLINE_EDIT_JS___3;\n    } else {\n      i18n_2 = $localize`:Min Length Error|String is less than 'minLength' characters @@input-inline-edit-ui.minLengthError: Insert min ${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION: characters `;\n    }\n\n    let i18n_4;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Number is less than 'minValue' \n       * @meaning Min value Error\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_INPUT_INLINE_EDIT_JS___5 = goog.getMsg(\" Insert min {$interpolation} \", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_4 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_INPUT_INLINE_EDIT_JS___5;\n    } else {\n      i18n_4 = $localize`:Min value Error|Number is less than 'minValue' @@input-inline-edit-ui.minValueError: Insert min ${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION: `;\n    }\n\n    let i18n_6;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Number is more than 'maxValue' \n       * @meaning Max value Error\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_INPUT_INLINE_EDIT_JS___7 = goog.getMsg(\" Insert max {$interpolation} \", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_6 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_INPUT_INLINE_EDIT_JS___7;\n    } else {\n      i18n_6 = $localize`:Max value Error|Number is more than 'maxValue' @@input-inline-edit-ui.maxValueError: Insert max ${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION: `;\n    }\n\n    let i18n_8;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Format value is invalid \n       * @meaning Format value error\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_INPUT_INLINE_EDIT_JS___9 = goog.getMsg(\" Input value provided is invalid \");\n      i18n_8 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_INPUT_INLINE_EDIT_JS___9;\n    } else {\n      i18n_8 = $localize`:Format value error|Format value is invalid @@input-inline-edit-ui.formatValueError: Input value provided is invalid `;\n    }\n\n    let i18n_10;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc String is required \n       * @meaning Required error\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_INPUT_INLINE_EDIT_JS___11 = goog.getMsg(\" Field is required \");\n      i18n_10 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_INPUT_INLINE_EDIT_JS___11;\n    } else {\n      i18n_10 = $localize`:Required error|String is required @@input-inline-edit-ui.requiredError: Field is required `;\n    }\n\n    return [[1, \"bb-input-inline-edit-ui\"], [4, \"ngIf\", \"ngIfElse\"], [\"editingState\", \"\"], [1, \"bb-stack\", \"bb-input-inline-edit-ui__idle-wrapper\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"defaultInlineTemplate\", \"\"], [\"bbButton\", \"\", \"class\", \"bb-stack__item bb-stack__item--no-shrink\", \"color\", \"link-dark\", \"type\", \"button\", \"buttonSize\", \"sm\", \"container\", \"body\", \"triggers\", \"hover focus\", \"placement\", \"auto\", 3, \"circle\", \"bbTooltip\", \"click\", 4, \"ngIf\"], [\"data-role\", \"inline-edit-text\", 1, \"bb-stack__item\", \"bb-stack__item--spacing-none\"], [\"bbButton\", \"\", \"color\", \"link-dark\", \"type\", \"button\", \"buttonSize\", \"sm\", \"container\", \"body\", \"triggers\", \"hover focus\", \"placement\", \"auto\", 1, \"bb-stack__item\", \"bb-stack__item--no-shrink\", 3, \"circle\", \"bbTooltip\", \"click\"], [\"name\", \"edit\", 1, \"bb-text-support\"], [1, \"form-group\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"inputInline\", 3, \"label\", \"required\", \"readonly\", \"maxLength\", \"minLength\", \"autofocus\", \"ngClass\", \"id\", \"autocomplete\", \"click\", \"blur\"], [1, \"bb-stack\", \"bb-stack--align-top\", \"bb-stack--density-md\"], [1, \"bb-stack__item\", \"bb-stack__item--fill\"], [\"class\", \"bb-subtitle bb-text-support\", \"data-role\", \"inline-edit-hint\", 4, \"ngIf\"], [3, \"showErrors\", \"id\"], [4, \"ngIf\"], [1, \"bb-stack__item\", \"bb-stack__item--push-right\", \"flex-shrink-0\"], [\"bbButton\", \"\", \"type\", \"reset\", \"color\", \"danger\", \"buttonSize\", \"sm\", \"container\", \"body\", \"triggers\", \"hover focus\", \"placement\", \"auto\", 1, \"bb-stack__item\", \"bb-stack__item--push-right\", 3, \"circle\", \"bbTooltip\", \"click\"], [\"name\", \"times\"], [\"bbButton\", \"\", \"color\", \"success\", \"type\", \"submit\", \"buttonSize\", \"sm\", \"container\", \"body\", \"triggers\", \"hover focus\", \"placement\", \"auto\", 1, \"bb-load-button\", 3, \"circle\", \"bbTooltip\", \"click\"], [\"class\", \"bb-load-button__loading-indicator\", \"loaderSize\", \"sm\", 4, \"ngIf\", \"ngIfElse\"], [\"checkIcon\", \"\"], [\"data-role\", \"inline-edit-hint\", 1, \"bb-subtitle\", \"bb-text-support\"], i18n_0, i18n_2, i18n_4, i18n_6, i18n_8, i18n_10, [\"loaderSize\", \"sm\", 1, \"bb-load-button__loading-indicator\"], [\"name\", \"check\"]];\n  },\n  template: function InputInlineEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, InputInlineEditComponent_ng_container_1_Template, 6, 3, \"ng-container\", 1);\n      i0.ɵɵtemplate(2, InputInlineEditComponent_ng_template_2_Template, 20, 40, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(3);\n\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isIdleMode)(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i7.NgIf, i7.NgTemplateOutlet, i8.ButtonDirective, i9.TooltipDirective, i3.IconComponent, i10.ɵNgNoValidate, i10.NgControlStatusGroup, i10.FormGroupDirective, i4.InputTextComponent, i10.NgControlStatus, i10.FormControlName, i10.RequiredValidator, i7.NgClass, i5.InputValidationMessageComponent, i6.LoadingIndicatorComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputInlineEditComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-input-inline-edit-ui',\n      templateUrl: './input-inline-edit.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => InputInlineEditComponent),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.DeprecationsService\n    }, {\n      type: i2.DomAttributesService\n    }];\n  }, {\n    state: [{\n      type: Input\n    }],\n    stateChange: [{\n      type: Output\n    }],\n    canEdit: [{\n      type: Input\n    }],\n    hasLoadingState: [{\n      type: Input\n    }],\n    inputInlineTemplate: [{\n      type: Input\n    }],\n    inputText: [{\n      type: Input\n    }],\n    maxLength: [{\n      type: Input\n    }],\n    minLength: [{\n      type: Input\n    }],\n    maxValue: [{\n      type: Input\n    }],\n    minValue: [{\n      type: Input\n    }],\n    autofocus: [{\n      type: Input\n    }],\n    cancel: [{\n      type: Output\n    }],\n    accept: [{\n      type: Output\n    }],\n    ariaLabelAccept: [{\n      type: Input\n    }],\n    ariaLabelCancel: [{\n      type: Input\n    }],\n    ariaLabelEdit: [{\n      type: Input\n    }],\n    tooltipAccept: [{\n      type: Input\n    }],\n    tooltipCancel: [{\n      type: Input\n    }],\n    tooltipEdit: [{\n      type: Input\n    }],\n    autocomplete: [{\n      type: Input\n    }],\n    pattern: [{\n      type: Input\n    }],\n    hint: [{\n      type: Input\n    }],\n    onKeydownHandler: [{\n      type: HostListener,\n      args: ['document:keydown.escape', ['$event']]\n    }]\n  });\n})();\n\nclass InputInlineEditModule {}\n\nInputInlineEditModule.ɵfac = function InputInlineEditModule_Factory(t) {\n  return new (t || InputInlineEditModule)();\n};\n\nInputInlineEditModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: InputInlineEditModule\n});\nInputInlineEditModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, IconModule, ReactiveFormsModule, BaseClassesModule, ButtonModule, InputTextModule, InputValidationMessageModule, LoadingIndicatorModule, TooltipModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputInlineEditModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, IconModule, ReactiveFormsModule, BaseClassesModule, ButtonModule, InputTextModule, InputValidationMessageModule, LoadingIndicatorModule, TooltipModule],\n      declarations: [InputInlineEditComponent],\n      exports: [InputInlineEditComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { InputInlineEditComponent, InputInlineEditModule, InputInlineEditState };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-input-inline-edit.js"],"names":["i0","EventEmitter","forwardRef","Component","ChangeDetectionStrategy","Input","Output","HostListener","NgModule","i10","Validators","FormGroup","FormControl","NG_VALUE_ACCESSOR","ReactiveFormsModule","InputBaseComponent","BaseClassesModule","idListAttr","i1","i2","i3","IconModule","i4","InputTextModule","i5","InputValidationMessageModule","i6","LoadingIndicatorModule","i7","CommonModule","i8","ButtonModule","i9","TooltipModule","defaultAriaLabels","accept","$localize","edit","cancel","defaultTooltips","Object","assign","InputInlineEditState","InputInlineEditComponent","constructor","cd","deprecationsService","domAttributesService","_state","IDLE","stateChange","canEdit","hasLoadingState","maxLength","Infinity","minLength","autofocus","ariaLabelAccept","ariaLabelCancel","ariaLabelEdit","tooltipAccept","tooltipCancel","tooltipEdit","validationMessagesId","generateId","state","value","vForm","controls","inputInline","setValue","_inputText","inputText","_a","ngAfterContentInit","validators","required","push","pattern","minValue","min","maxValue","max","compose","writeValue","inputValue","onEdit","event","stopPropagation","updateState","EDITING","onCancel","emit","isLoading","LOADING","editMode","isIdleMode","onAccept","newString","onValueChange","hasError","type","fieldControl","errors","undefined","onKeydownHandler","evt","ɵfac","ChangeDetectorRef","DeprecationsService","DomAttributesService","ɵcmp","provide","useExisting","multi","NgIf","NgTemplateOutlet","ButtonDirective","TooltipDirective","IconComponent","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","InputTextComponent","NgControlStatus","FormControlName","RequiredValidator","NgClass","InputValidationMessageComponent","LoadingIndicatorComponent","args","selector","templateUrl","changeDetection","OnPush","providers","inputInlineTemplate","autocomplete","hint","InputInlineEditModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, ChangeDetectionStrategy, Input, Output, HostListener, NgModule } from '@angular/core';\nimport * as i10 from '@angular/forms';\nimport { Validators, FormGroup, FormControl, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\nimport { InputBaseComponent, BaseClassesModule } from '@backbase/ui-ang/base-classes';\nimport '@angular/localize/init';\nimport { idListAttr } from '@backbase/ui-ang/util';\nimport * as i1 from '@backbase/foundation-ang/future';\nimport * as i2 from '@backbase/ui-ang/services';\nimport * as i3 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i4 from '@backbase/ui-ang/input-text';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport * as i5 from '@backbase/ui-ang/input-validation-message';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport * as i6 from '@backbase/ui-ang/loading-indicator';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport * as i7 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i8 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport * as i9 from '@backbase/ui-ang/tooltip-directive';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\n\nconst defaultAriaLabels = {\n    accept: $localize `:Aria label for accept button@@input-inline-edit-ui.button.aria-label.accept:Accept`,\n    edit: $localize `:Aria label for edit button@@input-inline-edit-ui.button.aria-label.edit:Edit`,\n    cancel: $localize `:Aria label for cancel button@@input-inline-edit-ui.button.aria-label.cancel:Cancel`,\n};\nconst defaultTooltips = Object.assign({}, defaultAriaLabels);\n\nvar InputInlineEditState;\n(function (InputInlineEditState) {\n    InputInlineEditState[InputInlineEditState[\"IDLE\"] = 0] = \"IDLE\";\n    InputInlineEditState[InputInlineEditState[\"LOADING\"] = 1] = \"LOADING\";\n    InputInlineEditState[InputInlineEditState[\"EDITING\"] = 2] = \"EDITING\";\n})(InputInlineEditState || (InputInlineEditState = {}));\n/**\n * @name InputInlineEditComponent\n *\n * @a11y Current component provide option to pass needed accessibility\n * attributes. You need to take care of properties that are required in your case :\n *  - role\n *  - aria-activedescendant\n *  - aria-describedby\n *  - aria-expanded\n *  - aria-invalid\n *  - aria-label\n *  - aria-labelledby\n *  - aria-owns\n *\n * @description\n * Component that enables inline input editing.\n */\nclass InputInlineEditComponent extends InputBaseComponent {\n    constructor(cd, deprecationsService, domAttributesService) {\n        super(cd, deprecationsService);\n        this.domAttributesService = domAttributesService;\n        this._state = InputInlineEditState.IDLE;\n        /**\n         * Emit on edit state changes\n         */\n        this.stateChange = new EventEmitter();\n        /**\n         * Flag represents visibility of edit button\n         *\n         * @default: true\n         */\n        this.canEdit = true;\n        /**\n         * Applies additional loading state for edit flow\n         *\n         * @default: false\n         */\n        this.hasLoadingState = false;\n        /**\n         * The maxLength for the text input.\n         */\n        this.maxLength = Infinity;\n        /**\n         * The minLength for the text input.\n         */\n        this.minLength = 0;\n        /**\n         * Whether the text input should be auto-focused when shown.\n         */\n        this.autofocus = false;\n        /**\n         * The event that's fired after on Cancel.\n         */\n        this.cancel = new EventEmitter();\n        /**\n         * The event that's fired after on Accept.\n         */\n        this.accept = new EventEmitter();\n        /**\n         * string for aria label on Accept button\n         */\n        this.ariaLabelAccept = defaultAriaLabels.accept;\n        /**\n         * string for aria label on Cancel button\n         */\n        this.ariaLabelCancel = defaultAriaLabels.cancel;\n        /**\n         * string for aria label on Edit button\n         */\n        this.ariaLabelEdit = defaultAriaLabels.edit;\n        /**\n         * string for tooltip on Accept button\n         */\n        this.tooltipAccept = defaultTooltips.accept;\n        /**\n         * string for tooltip on Cancel button\n         */\n        this.tooltipCancel = defaultTooltips.cancel;\n        /**\n         * string for tooltip on Edit button\n         */\n        this.tooltipEdit = defaultTooltips.edit;\n        /**\n         * Utility function for use in template\n         */\n        this.idListAttr = idListAttr;\n        this.validationMessagesId = this.domAttributesService.generateId();\n    }\n    /**\n     * State for inline edit\n     */\n    set state(value) {\n        this._state = value;\n        if (this.vForm && value === InputInlineEditState.IDLE) {\n            this.vForm.controls.inputInline.setValue(this._inputText);\n        }\n    }\n    /**\n     * string for editing\n     */\n    set inputText(value) {\n        var _a;\n        this._inputText = value;\n        (_a = this.vForm) === null || _a === void 0 ? void 0 : _a.controls.inputInline.setValue(this._inputText);\n    }\n    get inputText() {\n        return this._inputText;\n    }\n    ngAfterContentInit() {\n        const validators = [Validators.maxLength(this.maxLength), Validators.minLength(this.minLength)];\n        if (this.required) {\n            validators.push(Validators.required);\n        }\n        if (this.pattern) {\n            validators.push(Validators.pattern(this.pattern));\n        }\n        if (this.minValue) {\n            validators.push(Validators.min(this.minValue));\n        }\n        if (this.maxValue) {\n            validators.push(Validators.max(this.maxValue));\n        }\n        this.vForm = new FormGroup({\n            inputInline: new FormControl(this._inputText, Validators.compose(validators)),\n        });\n    }\n    writeValue(inputValue) {\n        if (typeof inputValue === 'string') {\n            this._inputText = inputValue;\n        }\n        super.writeValue(inputValue);\n    }\n    onEdit(event) {\n        event.stopPropagation();\n        this.updateState(InputInlineEditState.EDITING);\n    }\n    onCancel(event) {\n        var _a;\n        if (event) {\n            event.stopPropagation();\n        }\n        (_a = this.vForm) === null || _a === void 0 ? void 0 : _a.controls.inputInline.setValue(this._inputText);\n        this.updateState(InputInlineEditState.IDLE);\n        this.cancel.emit();\n    }\n    get isLoading() {\n        return this._state === InputInlineEditState.LOADING;\n    }\n    get editMode() {\n        return this._state === InputInlineEditState.EDITING;\n    }\n    get isIdleMode() {\n        return this._state === InputInlineEditState.IDLE;\n    }\n    /**\n     * Emits the updated value from input\n     *\n     * If the {@link InputInlineEditComponent.hasLoadingState } set to true -> the state is not changed,\n     * as component state should be updated from outside, otherwise the value will be updated with the\n     * new one and state will be switched to `IDLE`\n     *\n     */\n    onAccept() {\n        const newString = this.vForm ? this.vForm.controls.inputInline.value : '';\n        if (!this.hasLoadingState) {\n            this.updateState(InputInlineEditState.IDLE);\n            this._inputText = newString;\n            this.onValueChange(newString);\n        }\n        this.accept.emit(newString);\n    }\n    hasError(type) {\n        const fieldControl = this.vForm ? this.vForm.controls.inputInline : null;\n        if (!fieldControl || !fieldControl.errors) {\n            return undefined;\n        }\n        return type ? fieldControl.errors[type] : fieldControl.errors;\n    }\n    onKeydownHandler(evt) {\n        if (this.editMode) {\n            this.onCancel();\n        }\n    }\n    updateState(value) {\n        this._state = value;\n        this.stateChange.emit(value);\n    }\n}\nInputInlineEditComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputInlineEditComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DeprecationsService }, { token: i2.DomAttributesService }], target: i0.ɵɵFactoryTarget.Component });\nInputInlineEditComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: InputInlineEditComponent, selector: \"bb-input-inline-edit-ui\", inputs: { state: \"state\", canEdit: \"canEdit\", hasLoadingState: \"hasLoadingState\", inputInlineTemplate: \"inputInlineTemplate\", inputText: \"inputText\", maxLength: \"maxLength\", minLength: \"minLength\", maxValue: \"maxValue\", minValue: \"minValue\", autofocus: \"autofocus\", ariaLabelAccept: \"ariaLabelAccept\", ariaLabelCancel: \"ariaLabelCancel\", ariaLabelEdit: \"ariaLabelEdit\", tooltipAccept: \"tooltipAccept\", tooltipCancel: \"tooltipCancel\", tooltipEdit: \"tooltipEdit\", autocomplete: \"autocomplete\", pattern: \"pattern\", hint: \"hint\" }, outputs: { stateChange: \"stateChange\", cancel: \"cancel\", accept: \"accept\" }, host: { listeners: { \"document:keydown.escape\": \"onKeydownHandler($event)\" } }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => InputInlineEditComponent),\n            multi: true,\n        },\n    ], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"bb-input-inline-edit-ui\\\">\\n  <ng-container *ngIf=\\\"isIdleMode; else editingState\\\">\\n    <div class=\\\"bb-stack bb-input-inline-edit-ui__idle-wrapper\\\">\\n      <ng-container\\n        *ngTemplateOutlet=\\\"inputInlineTemplate ? inputInlineTemplate : defaultInlineTemplate; context: this\\\"\\n      >\\n      </ng-container>\\n      <ng-template #defaultInlineTemplate>\\n        <span class=\\\"bb-stack__item bb-stack__item--spacing-none\\\" data-role=\\\"inline-edit-text\\\">\\n          {{ inputText }}\\n        </span>\\n      </ng-template>\\n\\n      <button\\n        *ngIf=\\\"canEdit\\\"\\n        bbButton\\n        class=\\\"bb-stack__item bb-stack__item--no-shrink\\\"\\n        (click)=\\\"onEdit($event)\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        [attr.aria-label]=\\\"ariaLabelEdit\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        color=\\\"link-dark\\\"\\n        [attr.data-role]=\\\"'inline-edit-btn'\\\"\\n        [circle]=\\\"true\\\"\\n        type=\\\"button\\\"\\n        buttonSize=\\\"sm\\\"\\n        [bbTooltip]=\\\"tooltipEdit\\\"\\n        container=\\\"body\\\"\\n        triggers=\\\"hover focus\\\"\\n        placement=\\\"auto\\\"\\n      >\\n        <bb-icon-ui class=\\\"bb-text-support\\\" name=\\\"edit\\\"></bb-icon-ui>\\n      </button>\\n    </div>\\n  </ng-container>\\n  <ng-template #editingState>\\n    <div class=\\\"form-group\\\">\\n      <form [formGroup]=\\\"vForm\\\" (ngSubmit)=\\\"!hasError() && onAccept()\\\">\\n        <bb-input-text-ui\\n          [attr.data-role]=\\\"'inline-edit-input'\\\"\\n          label=\\\"{{ label }}\\\"\\n          formControlName=\\\"inputInline\\\"\\n          [attr.aria-autocomplete]=\\\"ariaAutocomplete\\\"\\n          [attr.aria-controls]=\\\"ariaControls\\\"\\n          [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n          [attr.aria-describedby]=\\\"idListAttr(ariaDescribedby, validationMessagesId)\\\"\\n          [attr.aria-expanded]=\\\"ariaExpanded\\\"\\n          [attr.aria-activedescendant]=\\\"ariaActivedescendant\\\"\\n          [attr.role]=\\\"role\\\"\\n          [attr.aria-invalid]=\\\"ariaInvalid\\\"\\n          [attr.aria-owns]=\\\"ariaOwns\\\"\\n          [required]=\\\"required\\\"\\n          [readonly]=\\\"readonly\\\"\\n          [maxLength]=\\\"maxLength\\\"\\n          [minLength]=\\\"minLength\\\"\\n          [autofocus]=\\\"true\\\"\\n          [ngClass]=\\\"inputClassName\\\"\\n          [attr.size]=\\\"size\\\"\\n          (click)=\\\"$event.stopPropagation()\\\"\\n          (blur)=\\\"onBlur($event)\\\"\\n          id=\\\"{{ id }}\\\"\\n          [autocomplete]=\\\"autocomplete\\\"\\n        >\\n        </bb-input-text-ui>\\n        <div class=\\\"bb-stack bb-stack--align-top bb-stack--density-md\\\">\\n          <div class=\\\"bb-stack__item bb-stack__item--fill\\\">\\n            <div class=\\\"bb-subtitle bb-text-support\\\" data-role=\\\"inline-edit-hint\\\" *ngIf=\\\"hint && !hasError()\\\">\\n              {{ hint }}\\n            </div>\\n            <bb-input-validation-message-ui [showErrors]=\\\"hasError()\\\" [id]=\\\"validationMessagesId\\\">\\n              <div\\n                *ngIf=\\\"hasError('maxlength')\\\"\\n                i18n=\\\"Max Length Error|String is more than 'maxLength' characters @@input-inline-edit-ui.maxLengthError\\\"\\n              >\\n                Insert max {{ maxLength }} characters\\n              </div>\\n              <div\\n                *ngIf=\\\"hasError('minlength')\\\"\\n                i18n=\\\"Min Length Error|String is less than 'minLength' characters @@input-inline-edit-ui.minLengthError\\\"\\n              >\\n                Insert min {{ minLength }} characters\\n              </div>\\n              <div\\n                *ngIf=\\\"hasError('min')\\\"\\n                i18n=\\\"Min value Error|Number is less than 'minValue' @@input-inline-edit-ui.minValueError\\\"\\n              >\\n                Insert min {{ minValue }}\\n              </div>\\n              <div\\n                *ngIf=\\\"hasError('max')\\\"\\n                i18n=\\\"Max value Error|Number is more than 'maxValue' @@input-inline-edit-ui.maxValueError\\\"\\n              >\\n                Insert max {{ maxValue }}\\n              </div>\\n              <div\\n                *ngIf=\\\"hasError('pattern')\\\"\\n                i18n=\\\"Format value error|Format value is invalid @@input-inline-edit-ui.formatValueError\\\"\\n              >\\n                Input value provided is invalid\\n              </div>\\n              <div\\n                *ngIf=\\\"hasError('required')\\\"\\n                i18n=\\\"Required error|String is required @@input-inline-edit-ui.requiredError\\\"\\n              >\\n                Field is required\\n              </div>\\n            </bb-input-validation-message-ui>\\n          </div>\\n          <div class=\\\"bb-stack__item bb-stack__item--push-right flex-shrink-0\\\">\\n            <button\\n              bbButton\\n              type=\\\"reset\\\"\\n              (click)=\\\"onCancel($event)\\\"\\n              class=\\\"bb-stack__item bb-stack__item--push-right\\\"\\n              color=\\\"danger\\\"\\n              [attr.data-role]=\\\"'inline-edit-cancel'\\\"\\n              [circle]=\\\"true\\\"\\n              [attr.aria-label]=\\\"ariaLabelCancel\\\"\\n              buttonSize=\\\"sm\\\"\\n              [bbTooltip]=\\\"tooltipCancel\\\"\\n              container=\\\"body\\\"\\n              triggers=\\\"hover focus\\\"\\n              placement=\\\"auto\\\"\\n            >\\n              <bb-icon-ui name=\\\"times\\\"></bb-icon-ui>\\n            </button>\\n            <button\\n              bbButton\\n              (click)=\\\"$event.stopPropagation()\\\"\\n              color=\\\"success\\\"\\n              [attr.data-role]=\\\"'inline-edit-accept'\\\"\\n              type=\\\"submit\\\"\\n              [circle]=\\\"true\\\"\\n              [attr.aria-label]=\\\"ariaLabelAccept\\\"\\n              buttonSize=\\\"sm\\\"\\n              class=\\\"bb-load-button\\\"\\n              [bbTooltip]=\\\"tooltipAccept\\\"\\n              container=\\\"body\\\"\\n              triggers=\\\"hover focus\\\"\\n              placement=\\\"auto\\\"\\n            >\\n              <bb-loading-indicator-ui\\n                *ngIf=\\\"isLoading; else checkIcon\\\"\\n                class=\\\"bb-load-button__loading-indicator\\\"\\n                loaderSize=\\\"sm\\\"\\n              ></bb-loading-indicator-ui>\\n              <ng-template #checkIcon>\\n                <bb-icon-ui name=\\\"check\\\"></bb-icon-ui>\\n              </ng-template>\\n            </button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </ng-template>\\n</div>\\n\", components: [{ type: i3.IconComponent, selector: \"bb-icon-ui\", inputs: [\"name\", \"inverse\", \"size\", \"color\", \"animate\", \"aria-label\", \"cropped\", \"backgroundType\"] }, { type: i4.InputTextComponent, selector: \"bb-input-text-ui\", inputs: [\"placeholder\", \"maxLength\", \"minLength\", \"autocomplete\", \"readonly\", \"mask\", \"maskValidator\", \"showCharCounter\"], outputs: [\"valueChange\"] }, { type: i5.InputValidationMessageComponent, selector: \"bb-input-validation-message-ui\", inputs: [\"showErrors\", \"messageId\"] }, { type: i6.LoadingIndicatorComponent, selector: \"bb-loading-indicator-ui\", inputs: [\"text\", \"loaderSize\", \"showDelay\", \"hasBackground\", \"inline\"] }], directives: [{ type: i7.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i7.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i8.ButtonDirective, selector: \"button[bbButton]\", inputs: [\"type\", \"color\", \"buttonSize\", \"block\", \"circle\"] }, { type: i9.TooltipDirective, selector: \"[bbTooltip]\", inputs: [\"bbTooltip\", \"triggers\"] }, { type: i10.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i10.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i10.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i10.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i10.FormControlName, selector: \"[formControlName]\", inputs: [\"disabled\", \"formControlName\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { type: i10.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { type: i7.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputInlineEditComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-input-inline-edit-ui',\n                    templateUrl: './input-inline-edit.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => InputInlineEditComponent),\n                            multi: true,\n                        },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DeprecationsService }, { type: i2.DomAttributesService }]; }, propDecorators: { state: [{\n                type: Input\n            }], stateChange: [{\n                type: Output\n            }], canEdit: [{\n                type: Input\n            }], hasLoadingState: [{\n                type: Input\n            }], inputInlineTemplate: [{\n                type: Input\n            }], inputText: [{\n                type: Input\n            }], maxLength: [{\n                type: Input\n            }], minLength: [{\n                type: Input\n            }], maxValue: [{\n                type: Input\n            }], minValue: [{\n                type: Input\n            }], autofocus: [{\n                type: Input\n            }], cancel: [{\n                type: Output\n            }], accept: [{\n                type: Output\n            }], ariaLabelAccept: [{\n                type: Input\n            }], ariaLabelCancel: [{\n                type: Input\n            }], ariaLabelEdit: [{\n                type: Input\n            }], tooltipAccept: [{\n                type: Input\n            }], tooltipCancel: [{\n                type: Input\n            }], tooltipEdit: [{\n                type: Input\n            }], autocomplete: [{\n                type: Input\n            }], pattern: [{\n                type: Input\n            }], hint: [{\n                type: Input\n            }], onKeydownHandler: [{\n                type: HostListener,\n                args: ['document:keydown.escape', ['$event']]\n            }] } });\n\nclass InputInlineEditModule {\n}\nInputInlineEditModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputInlineEditModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nInputInlineEditModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputInlineEditModule, declarations: [InputInlineEditComponent], imports: [CommonModule,\n        IconModule,\n        ReactiveFormsModule,\n        BaseClassesModule,\n        ButtonModule,\n        InputTextModule,\n        InputValidationMessageModule,\n        LoadingIndicatorModule,\n        TooltipModule], exports: [InputInlineEditComponent] });\nInputInlineEditModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputInlineEditModule, imports: [[\n            CommonModule,\n            IconModule,\n            ReactiveFormsModule,\n            BaseClassesModule,\n            ButtonModule,\n            InputTextModule,\n            InputValidationMessageModule,\n            LoadingIndicatorModule,\n            TooltipModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputInlineEditModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        IconModule,\n                        ReactiveFormsModule,\n                        BaseClassesModule,\n                        ButtonModule,\n                        InputTextModule,\n                        InputValidationMessageModule,\n                        LoadingIndicatorModule,\n                        TooltipModule,\n                    ],\n                    declarations: [InputInlineEditComponent],\n                    exports: [InputInlineEditComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InputInlineEditComponent, InputInlineEditModule, InputInlineEditState };\n"]},"metadata":{},"sourceType":"module"}