{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\nconst ApprovalStatus = {\n  PENDING: 'PENDING',\n  APPROVED: 'APPROVED',\n  REJECTED: 'REJECTED',\n  CANCELLED: 'CANCELLED'\n};\nconst BatchPaymentStatus = {\n  REJECTED: 'REJECTED'\n};\nconst BatchStatus = {\n  OPEN: 'OPEN',\n  CLOSED: 'CLOSED',\n  DRAFT: 'DRAFT',\n  INVALID: 'INVALID',\n  VALID: 'VALID',\n  ENTERED: 'ENTERED',\n  REJECTED: 'REJECTED',\n  CANCELLED: 'CANCELLED',\n  READY: 'READY',\n  ACKNOWLEDGED: 'ACKNOWLEDGED',\n  DOWNLOADING: 'DOWNLOADING',\n  ACCEPTED: 'ACCEPTED',\n  PROCESSED: 'PROCESSED'\n};\nvar BreachInfo;\n\n(function (BreachInfo) {\n  BreachInfo.BreachTypeEnum = {\n    THRESHOLD: 'THRESHOLD',\n    CONSUMPTION: 'CONSUMPTION'\n  };\n  BreachInfo.BreachedLimitTypeEnum = {\n    PERIODIC: 'PERIODIC',\n    TRANSACTIONAL: 'TRANSACTIONAL'\n  };\n})(BreachInfo || (BreachInfo = {}));\n\nconst ChargeBearer = {\n  OUR: 'OUR',\n  BEN: 'BEN',\n  SHA: 'SHA'\n};\nconst CreditDebitIndicator = {\n  CREDIT: 'CREDIT',\n  DEBIT: 'DEBIT'\n};\nconst CreditDebitMixedIndicator = {\n  CREDIT: 'CREDIT',\n  DEBIT: 'DEBIT',\n  MIXED: 'MIXED'\n};\nvar ExchangeRateInformation;\n\n(function (ExchangeRateInformation) {\n  ExchangeRateInformation.RateTypeEnum = {\n    ACTUAL: 'ACTUAL',\n    INDICATIVE: 'INDICATIVE',\n    AGREED: 'AGREED'\n  };\n})(ExchangeRateInformation || (ExchangeRateInformation = {}));\n\nconst InstructionPriority = {\n  NORM: 'NORM',\n  HIGH: 'HIGH'\n};\nconst InvolvedPartyRole = {\n  CREDITOR: 'CREDITOR',\n  DEBTOR: 'DEBTOR'\n};\nconst PaymentAction = {\n  APPROVE: 'APPROVE',\n  FINALAPPROVE: 'FINAL_APPROVE',\n  REJECT: 'REJECT',\n  CANCEL: 'CANCEL',\n  DELETE: 'DELETE',\n  EDIT: 'EDIT'\n};\nconst PaymentMode = {\n  SINGLE: 'SINGLE',\n  RECURRING: 'RECURRING'\n};\nconst RecordStatus = {\n  APPROVED: 'APPROVED',\n  REJECTED: 'REJECTED'\n};\nvar RemittanceInformation;\n\n(function (RemittanceInformation) {\n  RemittanceInformation.TypeEnum = {\n    STRUCTURED: 'STRUCTURED',\n    UNSTRUCTURED: 'UNSTRUCTURED'\n  };\n})(RemittanceInformation || (RemittanceInformation = {}));\n\nvar Schedule;\n\n(function (Schedule) {\n  Schedule.NonWorkingDayExecutionStrategyEnum = {\n    BEFORE: 'BEFORE',\n    AFTER: 'AFTER',\n    NONE: 'NONE'\n  };\n  Schedule.TransferFrequencyEnum = {\n    ONCE: 'ONCE',\n    DAILY: 'DAILY',\n    WEEKLY: 'WEEKLY',\n    BIWEEKLY: 'BIWEEKLY',\n    MONTHLY: 'MONTHLY',\n    QUARTERLY: 'QUARTERLY',\n    YEARLY: 'YEARLY'\n  };\n  Schedule.EveryEnum = {\n    _1: '1',\n    _2: '2'\n  };\n})(Schedule || (Schedule = {}));\n\nconst SchemeNames = {\n  IBAN: 'IBAN',\n  BBAN: 'BBAN',\n  ID: 'ID',\n  EXTERNALID: 'EXTERNAL_ID',\n  EMAIL: 'EMAIL',\n  MOBILE: 'MOBILE'\n};\nconst Status = {\n  DRAFT: 'DRAFT',\n  ENTERED: 'ENTERED',\n  READY: 'READY',\n  ACCEPTED: 'ACCEPTED',\n  PROCESSED: 'PROCESSED',\n  REJECTED: 'REJECTED',\n  CANCELLED: 'CANCELLED',\n  CANCELLATIONPENDING: 'CANCELLATION_PENDING',\n  CONFIRMATIONPENDING: 'CONFIRMATION_PENDING',\n  CONFIRMATIONDECLINED: 'CONFIRMATION_DECLINED',\n  REPLACED: 'REPLACED'\n};\nconst UploadStatus = {\n  OPEN: 'OPEN',\n  UPLOADING: 'UPLOADING',\n  UPLOADED: 'UPLOADED',\n  VALID: 'VALID',\n  DUPLICATE: 'DUPLICATE',\n  DONE: 'DONE',\n  FAILED: 'FAILED'\n};\nconst PAYMENT_BATCH_BASE_PATH = new InjectionToken('PAYMENT_BATCH_BASE_PATH');\nconst COLLECTION_FORMATS = {\n  'csv': ',',\n  'tsv': '   ',\n  'ssv': ' ',\n  'pipes': '|'\n};\n\nclass PaymentBatchConfiguration {\n  constructor(configurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n    this.encoder = configurationParameters.encoder;\n\n    if (configurationParameters.credentials) {\n      this.credentials = configurationParameters.credentials;\n    } else {\n      this.credentials = {};\n    }\n  }\n\n  selectHeaderContentType(contentTypes) {\n    if (contentTypes.length === 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n\n    return type;\n  }\n\n  selectHeaderAccept(accepts) {\n    if (accepts.length === 0) {\n      return undefined;\n    }\n\n    const type = accepts.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return accepts[0];\n    }\n\n    return type;\n  }\n\n  isJsonMime(mime) {\n    const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n    return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n  }\n\n  lookupCredential(key) {\n    const value = this.credentials[key];\n    return typeof value === 'function' ? value() : value;\n  }\n\n}\n\nconst CONFIG_TOKEN = new InjectionToken('api-data-module PaymentBatchConfiguration');\n\nclass PaymentBatchApiModule {\n  constructor(parentModule, http, dataModulesManager, config) {\n    if (parentModule) {\n      throw new Error('PaymentBatchApiModule is already loaded. Import in your base AppModule only.');\n    }\n\n    if (!http) {\n      throw new Error('You need to import the HttpClientModule in your AppModule! \\n' + 'See also https://github.com/angular/angular/issues/20575');\n    }\n\n    if (dataModulesManager) {\n      dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n        apiRoot: '',\n        servicePath: config.basePath || '',\n        headers: {}\n      });\n    }\n  }\n\n  static forRoot(configurationFactory) {\n    return {\n      ngModule: PaymentBatchApiModule,\n      providers: [{\n        provide: PaymentBatchConfiguration,\n        useFactory: configurationFactory\n      }]\n    };\n  }\n\n}\n\nPaymentBatchApiModule.ɵfac = function PaymentBatchApiModule_Factory(t) {\n  return new (t || PaymentBatchApiModule)(i0.ɵɵinject(PaymentBatchApiModule, 12), i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DataModulesManager, 8), i0.ɵɵinject(PaymentBatchConfiguration));\n};\n\nPaymentBatchApiModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PaymentBatchApiModule\n});\nPaymentBatchApiModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [],\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaymentBatchApiModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [],\n      exports: [],\n      providers: []\n    }]\n  }], function () {\n    return [{\n      type: PaymentBatchApiModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: i1.HttpClient,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2.DataModulesManager,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: PaymentBatchConfiguration\n    }];\n  }, null);\n})();\n\nclass CustomHttpParameterCodec {\n  encodeKey(k) {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v) {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k) {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v) {\n    return decodeURIComponent(v);\n  }\n\n}\n\nclass BatchOrdersHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new PaymentBatchConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  deleteBatchOrderIdByBatchOrderId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchOrderId = requestParameters[\"batchOrderId\"];\n\n    if (_batchOrderId === null || _batchOrderId === undefined) {\n      throw new Error('Required parameter batchOrderId was null or undefined when calling deleteBatchOrderIdByBatchOrderId.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deleteBatchOrderIdByBatchOrderIdUrl(requestParameters) {\n    const _batchOrderId = requestParameters[\"batchOrderId\"];\n\n    if (_batchOrderId === null || _batchOrderId === undefined) {\n      throw new Error('Required parameter batchOrderId was null or undefined when calling deleteBatchOrderIdByBatchOrderId.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}`;\n  }\n\n  deleteBatchPaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchOrderId = requestParameters[\"batchOrderId\"];\n\n    if (_batchOrderId === null || _batchOrderId === undefined) {\n      throw new Error('Required parameter batchOrderId was null or undefined when calling deleteBatchPaymentById.');\n    }\n\n    const _batchPaymentId = requestParameters[\"batchPaymentId\"];\n\n    if (_batchPaymentId === null || _batchPaymentId === undefined) {\n      throw new Error('Required parameter batchPaymentId was null or undefined when calling deleteBatchPaymentById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments/${encodeURIComponent(String(_batchPaymentId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deleteBatchPaymentByIdUrl(requestParameters) {\n    const _batchOrderId = requestParameters[\"batchOrderId\"];\n\n    if (_batchOrderId === null || _batchOrderId === undefined) {\n      throw new Error('Required parameter batchOrderId was null or undefined when calling deleteBatchPaymentById.');\n    }\n\n    const _batchPaymentId = requestParameters[\"batchPaymentId\"];\n\n    if (_batchPaymentId === null || _batchPaymentId === undefined) {\n      throw new Error('Required parameter batchPaymentId was null or undefined when calling deleteBatchPaymentById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments/${encodeURIComponent(String(_batchPaymentId))}`;\n  }\n\n  getBatchOrders(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _query = requestParameters[\"query\"];\n    const _amountFrom = requestParameters[\"amountFrom\"];\n    const _amountTo = requestParameters[\"amountTo\"];\n    const _executionDate = requestParameters[\"executionDate\"];\n    const _executionDateFrom = requestParameters[\"executionDateFrom\"];\n    const _executionDateTo = requestParameters[\"executionDateTo\"];\n    const _status = requestParameters[\"status\"];\n    const _from = requestParameters[\"from\"];\n    const _cursor = requestParameters[\"cursor\"];\n    const _size = requestParameters[\"size\"];\n    const _dynamicCreditDebitMixedIndicator = requestParameters[\"dynamicCreditDebitMixedIndicator\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_query !== undefined && _query !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n    }\n\n    if (_amountFrom !== undefined && _amountFrom !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _amountFrom, 'amountFrom');\n    }\n\n    if (_amountTo !== undefined && _amountTo !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _amountTo, 'amountTo');\n    }\n\n    if (_executionDate !== undefined && _executionDate !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _executionDate, 'executionDate');\n    }\n\n    if (_executionDateFrom !== undefined && _executionDateFrom !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _executionDateFrom, 'executionDateFrom');\n    }\n\n    if (_executionDateTo !== undefined && _executionDateTo !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _executionDateTo, 'executionDateTo');\n    }\n\n    if (_status) {\n      _status.forEach(element => {\n        queryParameters = this.addToHttpParams(queryParameters, element, 'status');\n      });\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_cursor !== undefined && _cursor !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    if (_dynamicCreditDebitMixedIndicator !== undefined && _dynamicCreditDebitMixedIndicator !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _dynamicCreditDebitMixedIndicator, 'dynamicCreditDebitMixedIndicator');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/batch-orders`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getBatchOrdersUrl(requestParameters) {\n    const _query = requestParameters[\"query\"];\n    const _amountFrom = requestParameters[\"amountFrom\"];\n    const _amountTo = requestParameters[\"amountTo\"];\n    const _executionDate = requestParameters[\"executionDate\"];\n    const _executionDateFrom = requestParameters[\"executionDateFrom\"];\n    const _executionDateTo = requestParameters[\"executionDateTo\"];\n    const _status = requestParameters[\"status\"];\n    const _from = requestParameters[\"from\"];\n    const _cursor = requestParameters[\"cursor\"];\n    const _size = requestParameters[\"size\"];\n    const _dynamicCreditDebitMixedIndicator = requestParameters[\"dynamicCreditDebitMixedIndicator\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_query !== undefined && _query !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n    }\n\n    if (_amountFrom !== undefined && _amountFrom !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _amountFrom, 'amountFrom');\n    }\n\n    if (_amountTo !== undefined && _amountTo !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _amountTo, 'amountTo');\n    }\n\n    if (_executionDate !== undefined && _executionDate !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _executionDate, 'executionDate');\n    }\n\n    if (_executionDateFrom !== undefined && _executionDateFrom !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _executionDateFrom, 'executionDateFrom');\n    }\n\n    if (_executionDateTo !== undefined && _executionDateTo !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _executionDateTo, 'executionDateTo');\n    }\n\n    if (_status) {\n      _status.forEach(element => {\n        queryParameters = this.addToHttpParams(queryParameters, element, 'status');\n      });\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_cursor !== undefined && _cursor !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    if (_dynamicCreditDebitMixedIndicator !== undefined && _dynamicCreditDebitMixedIndicator !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _dynamicCreditDebitMixedIndicator, 'dynamicCreditDebitMixedIndicator');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/batch-orders${queryString ? `?${queryString}` : ''}`;\n  }\n\n  getBatchOrdersById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchOrderId = requestParameters[\"batchOrderId\"];\n\n    if (_batchOrderId === null || _batchOrderId === undefined) {\n      throw new Error('Required parameter batchOrderId was null or undefined when calling getBatchOrdersById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getBatchOrdersByIdUrl(requestParameters) {\n    const _batchOrderId = requestParameters[\"batchOrderId\"];\n\n    if (_batchOrderId === null || _batchOrderId === undefined) {\n      throw new Error('Required parameter batchOrderId was null or undefined when calling getBatchOrdersById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}`;\n  }\n\n  getBatchPaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchOrderId = requestParameters[\"batchOrderId\"];\n\n    if (_batchOrderId === null || _batchOrderId === undefined) {\n      throw new Error('Required parameter batchOrderId was null or undefined when calling getBatchPaymentById.');\n    }\n\n    const _batchPaymentId = requestParameters[\"batchPaymentId\"];\n\n    if (_batchPaymentId === null || _batchPaymentId === undefined) {\n      throw new Error('Required parameter batchPaymentId was null or undefined when calling getBatchPaymentById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments/${encodeURIComponent(String(_batchPaymentId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getBatchPaymentByIdUrl(requestParameters) {\n    const _batchOrderId = requestParameters[\"batchOrderId\"];\n\n    if (_batchOrderId === null || _batchOrderId === undefined) {\n      throw new Error('Required parameter batchOrderId was null or undefined when calling getBatchPaymentById.');\n    }\n\n    const _batchPaymentId = requestParameters[\"batchPaymentId\"];\n\n    if (_batchPaymentId === null || _batchPaymentId === undefined) {\n      throw new Error('Required parameter batchPaymentId was null or undefined when calling getBatchPaymentById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments/${encodeURIComponent(String(_batchPaymentId))}`;\n  }\n\n  getBatchPaymentsById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchOrderId = requestParameters[\"batchOrderId\"];\n\n    if (_batchOrderId === null || _batchOrderId === undefined) {\n      throw new Error('Required parameter batchOrderId was null or undefined when calling getBatchPaymentsById.');\n    }\n\n    const _from = requestParameters[\"from\"];\n    const _cursor = requestParameters[\"cursor\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_cursor !== undefined && _cursor !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getBatchPaymentsByIdUrl(requestParameters) {\n    const _batchOrderId = requestParameters[\"batchOrderId\"];\n\n    if (_batchOrderId === null || _batchOrderId === undefined) {\n      throw new Error('Required parameter batchOrderId was null or undefined when calling getBatchPaymentsById.');\n    }\n\n    const _from = requestParameters[\"from\"];\n    const _cursor = requestParameters[\"cursor\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_cursor !== undefined && _cursor !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments${queryString ? `?${queryString}` : ''}`;\n  }\n\n  postBatchOrders(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchOrdersPostRequest = requestParameters[\"batchOrdersPostRequest\"];\n\n    if (_batchOrdersPostRequest === null || _batchOrdersPostRequest === undefined) {\n      throw new Error('Required parameter batchOrdersPostRequest was null or undefined when calling postBatchOrders.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/batch-orders`, _batchOrdersPostRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postBatchOrdersUrl(requestParameters) {\n    const _batchOrdersPostRequest = requestParameters[\"batchOrdersPostRequest\"];\n\n    if (_batchOrdersPostRequest === null || _batchOrdersPostRequest === undefined) {\n      throw new Error('Required parameter batchOrdersPostRequest was null or undefined when calling postBatchOrders.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/batch-orders`;\n  }\n\n  postBatchPayments(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchOrderId = requestParameters[\"batchOrderId\"];\n\n    if (_batchOrderId === null || _batchOrderId === undefined) {\n      throw new Error('Required parameter batchOrderId was null or undefined when calling postBatchPayments.');\n    }\n\n    const _batchPaymentsPostRequest = requestParameters[\"batchPaymentsPostRequest\"];\n\n    if (_batchPaymentsPostRequest === null || _batchPaymentsPostRequest === undefined) {\n      throw new Error('Required parameter batchPaymentsPostRequest was null or undefined when calling postBatchPayments.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments`, _batchPaymentsPostRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postBatchPaymentsUrl(requestParameters) {\n    const _batchOrderId = requestParameters[\"batchOrderId\"];\n\n    if (_batchOrderId === null || _batchOrderId === undefined) {\n      throw new Error('Required parameter batchOrderId was null or undefined when calling postBatchPayments.');\n    }\n\n    const _batchPaymentsPostRequest = requestParameters[\"batchPaymentsPostRequest\"];\n\n    if (_batchPaymentsPostRequest === null || _batchPaymentsPostRequest === undefined) {\n      throw new Error('Required parameter batchPaymentsPostRequest was null or undefined when calling postBatchPayments.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments`;\n  }\n\n  putApprovalsById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchOrderId = requestParameters[\"batchOrderId\"];\n\n    if (_batchOrderId === null || _batchOrderId === undefined) {\n      throw new Error('Required parameter batchOrderId was null or undefined when calling putApprovalsById.');\n    }\n\n    const _batchOrderApprovalPutRequest = requestParameters[\"batchOrderApprovalPutRequest\"];\n\n    if (_batchOrderApprovalPutRequest === null || _batchOrderApprovalPutRequest === undefined) {\n      throw new Error('Required parameter batchOrderApprovalPutRequest was null or undefined when calling putApprovalsById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/approvals`, _batchOrderApprovalPutRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putApprovalsByIdUrl(requestParameters) {\n    const _batchOrderId = requestParameters[\"batchOrderId\"];\n\n    if (_batchOrderId === null || _batchOrderId === undefined) {\n      throw new Error('Required parameter batchOrderId was null or undefined when calling putApprovalsById.');\n    }\n\n    const _batchOrderApprovalPutRequest = requestParameters[\"batchOrderApprovalPutRequest\"];\n\n    if (_batchOrderApprovalPutRequest === null || _batchOrderApprovalPutRequest === undefined) {\n      throw new Error('Required parameter batchOrderApprovalPutRequest was null or undefined when calling putApprovalsById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/approvals`;\n  }\n\n  putBatchPaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchOrderId = requestParameters[\"batchOrderId\"];\n\n    if (_batchOrderId === null || _batchOrderId === undefined) {\n      throw new Error('Required parameter batchOrderId was null or undefined when calling putBatchPaymentById.');\n    }\n\n    const _batchPaymentId = requestParameters[\"batchPaymentId\"];\n\n    if (_batchPaymentId === null || _batchPaymentId === undefined) {\n      throw new Error('Required parameter batchPaymentId was null or undefined when calling putBatchPaymentById.');\n    }\n\n    const _batchPaymentsPutRequest = requestParameters[\"batchPaymentsPutRequest\"];\n\n    if (_batchPaymentsPutRequest === null || _batchPaymentsPutRequest === undefined) {\n      throw new Error('Required parameter batchPaymentsPutRequest was null or undefined when calling putBatchPaymentById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments/${encodeURIComponent(String(_batchPaymentId))}`, _batchPaymentsPutRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putBatchPaymentByIdUrl(requestParameters) {\n    const _batchOrderId = requestParameters[\"batchOrderId\"];\n\n    if (_batchOrderId === null || _batchOrderId === undefined) {\n      throw new Error('Required parameter batchOrderId was null or undefined when calling putBatchPaymentById.');\n    }\n\n    const _batchPaymentId = requestParameters[\"batchPaymentId\"];\n\n    if (_batchPaymentId === null || _batchPaymentId === undefined) {\n      throw new Error('Required parameter batchPaymentId was null or undefined when calling putBatchPaymentById.');\n    }\n\n    const _batchPaymentsPutRequest = requestParameters[\"batchPaymentsPutRequest\"];\n\n    if (_batchPaymentsPutRequest === null || _batchPaymentsPutRequest === undefined) {\n      throw new Error('Required parameter batchPaymentsPutRequest was null or undefined when calling putBatchPaymentById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments/${encodeURIComponent(String(_batchPaymentId))}`;\n  }\n\n  updateBatchOrderById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchOrderId = requestParameters[\"batchOrderId\"];\n\n    if (_batchOrderId === null || _batchOrderId === undefined) {\n      throw new Error('Required parameter batchOrderId was null or undefined when calling updateBatchOrderById.');\n    }\n\n    const _batchOrderPutRequest = requestParameters[\"batchOrderPutRequest\"];\n\n    if (_batchOrderPutRequest === null || _batchOrderPutRequest === undefined) {\n      throw new Error('Required parameter batchOrderPutRequest was null or undefined when calling updateBatchOrderById.');\n    }\n\n    const _dryRun = requestParameters[\"dryRun\"];\n    const _intendedCreditTransactionsCount = requestParameters[\"intendedCreditTransactionsCount\"];\n    const _intendedDebitTransactionsCount = requestParameters[\"intendedDebitTransactionsCount\"];\n    const _intendedCreditAmount = requestParameters[\"intendedCreditAmount\"];\n    const _intendedDebitAmount = requestParameters[\"intendedDebitAmount\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_dryRun !== undefined && _dryRun !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _dryRun, 'dryRun');\n    }\n\n    if (_intendedCreditTransactionsCount !== undefined && _intendedCreditTransactionsCount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedCreditTransactionsCount, 'intendedCreditTransactionsCount');\n    }\n\n    if (_intendedDebitTransactionsCount !== undefined && _intendedDebitTransactionsCount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedDebitTransactionsCount, 'intendedDebitTransactionsCount');\n    }\n\n    if (_intendedCreditAmount !== undefined && _intendedCreditAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedCreditAmount, 'intendedCreditAmount');\n    }\n\n    if (_intendedDebitAmount !== undefined && _intendedDebitAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedDebitAmount, 'intendedDebitAmount');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}`, _batchOrderPutRequest, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  updateBatchOrderByIdUrl(requestParameters) {\n    const _batchOrderId = requestParameters[\"batchOrderId\"];\n\n    if (_batchOrderId === null || _batchOrderId === undefined) {\n      throw new Error('Required parameter batchOrderId was null or undefined when calling updateBatchOrderById.');\n    }\n\n    const _batchOrderPutRequest = requestParameters[\"batchOrderPutRequest\"];\n\n    if (_batchOrderPutRequest === null || _batchOrderPutRequest === undefined) {\n      throw new Error('Required parameter batchOrderPutRequest was null or undefined when calling updateBatchOrderById.');\n    }\n\n    const _dryRun = requestParameters[\"dryRun\"];\n    const _intendedCreditTransactionsCount = requestParameters[\"intendedCreditTransactionsCount\"];\n    const _intendedDebitTransactionsCount = requestParameters[\"intendedDebitTransactionsCount\"];\n    const _intendedCreditAmount = requestParameters[\"intendedCreditAmount\"];\n    const _intendedDebitAmount = requestParameters[\"intendedDebitAmount\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_dryRun !== undefined && _dryRun !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _dryRun, 'dryRun');\n    }\n\n    if (_intendedCreditTransactionsCount !== undefined && _intendedCreditTransactionsCount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedCreditTransactionsCount, 'intendedCreditTransactionsCount');\n    }\n\n    if (_intendedDebitTransactionsCount !== undefined && _intendedDebitTransactionsCount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedDebitTransactionsCount, 'intendedDebitTransactionsCount');\n    }\n\n    if (_intendedCreditAmount !== undefined && _intendedCreditAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedCreditAmount, 'intendedCreditAmount');\n    }\n\n    if (_intendedDebitAmount !== undefined && _intendedDebitAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedDebitAmount, 'intendedDebitAmount');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}${queryString ? `?${queryString}` : ''}`;\n  }\n\n}\n\nBatchOrdersHttpService.ɵfac = function BatchOrdersHttpService_Factory(t) {\n  return new (t || BatchOrdersHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(PAYMENT_BATCH_BASE_PATH, 8), i0.ɵɵinject(PaymentBatchConfiguration, 8));\n};\n\nBatchOrdersHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BatchOrdersHttpService,\n  factory: BatchOrdersHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BatchOrdersHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [PAYMENT_BATCH_BASE_PATH]\n      }]\n    }, {\n      type: PaymentBatchConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst BatchOrdersHttpServiceDeleteBatchOrderIdByBatchOrderIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict error\",\n      \"errors\": [{\n        \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n        \"key\": \"transactions.api.billingstatus.transaction\",\n        \"context\": {\n          \"billingStatus\": \"BILLED\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchOrdersHttpServiceDeleteBatchPaymentByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments/{batchPaymentId}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch order not found\",\n      \"errors\": []\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch payment not found\",\n      \"errors\": []\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict error\",\n      \"errors\": [{\n        \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n        \"key\": \"transactions.api.billingstatus.transaction\",\n        \"context\": {\n          \"billingStatus\": \"BILLED\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchOrdersHttpServiceGetBatchOrdersMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/batch-orders\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"batchOrders\": [{\n        \"id\": \"2f3a6d96-f671-4f03-994d-8f6caaa53cab\",\n        \"name\": \"Employee salaries\",\n        \"type\": \"SEPACT\",\n        \"creditDebitMixedIndicator\": \"CREDIT\",\n        \"status\": \"ACCEPTED\",\n        \"totalTransactionsCount\": 73500,\n        \"totalCreditTransactionsCount\": 73500,\n        \"totalInstructedAmount\": {\n          \"amount\": \"2400123.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"totalCreditInstructedAmount\": {\n          \"amount\": \"2400123.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"account\": {\n          \"name\": \"Main Current\",\n          \"identification\": {\n            \"identification\": \"CH8739215260566920524\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"requestedExecutionDate\": \"2019-02-18\",\n        \"canDelete\": false,\n        \"canCancel\": false\n      }, {\n        \"id\": \"33295f9c-95ec-42f9-9817-64f7d48be023\",\n        \"name\": \"Employee salaries\",\n        \"type\": \"SEPACT\",\n        \"creditDebitMixedIndicator\": \"CREDIT\",\n        \"status\": \"ACCEPTED\",\n        \"totalTransactionsCount\": 75930,\n        \"totalCreditTransactionsCount\": 75930,\n        \"totalInstructedAmount\": {\n          \"amount\": \"2479474.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"totalCreditInstructedAmount\": {\n          \"amount\": \"2479474.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"account\": {\n          \"name\": \"Main Current\",\n          \"identification\": {\n            \"identification\": \"CH8739215260566920524\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"requestedExecutionDate\": \"2019-03-18\",\n        \"canDelete\": false,\n        \"canCancel\": false\n      }, {\n        \"id\": \"f3da0418-c801-4db1-ae52-597f1459b525\",\n        \"name\": \"Employee salaries\",\n        \"type\": \"SEPACT\",\n        \"creditDebitMixedIndicator\": \"CREDIT\",\n        \"status\": \"ENTERED\",\n        \"totalTransactionsCount\": 78791,\n        \"totalCreditTransactionsCount\": 78791,\n        \"totalInstructedAmount\": {\n          \"amount\": \"2552947.15\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"totalCreditInstructedAmount\": {\n          \"amount\": \"2552947.15\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"account\": {\n          \"name\": \"Main Current\",\n          \"identification\": {\n            \"identification\": \"CH8739215260566920524\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"requestedExecutionDate\": \"2019-04-18\",\n        \"canDelete\": true,\n        \"canCancel\": false\n      }],\n      \"totalBatchOrders\": 3,\n      \"creditDebitMixedIndicator\": \"CREDIT\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"batchOrders\": [{\n        \"id\": \"a8e1ba16-d9be-4dd4-92b8-e2fbfe138b71\",\n        \"name\": \"Employees salaries May\",\n        \"type\": \"SEPACT\",\n        \"creditDebitMixedIndicator\": \"CREDIT\",\n        \"status\": \"ENTERED\",\n        \"totalTransactionsCount\": 71,\n        \"totalCreditTransactionsCount\": 71,\n        \"totalInstructedAmount\": {\n          \"amount\": \"191056.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"totalCreditInstructedAmount\": {\n          \"amount\": \"191056.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"account\": {\n          \"name\": \"Salaries Account\",\n          \"identification\": {\n            \"identification\": \"ST42353317399261373273497\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"requestedExecutionDate\": \"2019-05-27\",\n        \"approval\": {\n          \"id\": \"9bb143b1-bdb3-4ca5-9631-e02e743d6a10\",\n          \"userId\": \"23b8a2ac-e8bb-46b1-98d2-a2da71dfd646\",\n          \"externalUserId\": \"judi-miles\",\n          \"userFullName\": \"Judi Miles\",\n          \"serviceAgreementId\": \"e3e718d8-8f2e-4ef4-bf27-22580759b742\",\n          \"itemId\": \"a8e1ba16-d9be-4dd4-92b8-e2fbfe138b71\",\n          \"dataAccessItemId\": \"ac59c1a1-3729-4514-8051-5015dd0aadef\",\n          \"resource\": \"Batches\",\n          \"function\": \"SEPACT\",\n          \"status\": \"PENDING\",\n          \"createdAt\": \"2019-05-10T10:29:10Z\",\n          \"records\": [],\n          \"canApprove\": true,\n          \"canReject\": true,\n          \"finalApprover\": true\n        },\n        \"canDelete\": false,\n        \"canCancel\": false\n      }],\n      \"totalBatchOrders\": 1,\n      \"creditDebitMixedIndicator\": \"CREDIT\"\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchOrdersHttpServiceGetBatchOrdersByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"2f3a6d96-f671-4f03-994d-8f6caaa53cab\",\n      \"name\": \"Employee salaries\",\n      \"type\": \"SEPACT\",\n      \"creditDebitMixedIndicator\": \"CREDIT\",\n      \"status\": \"ACCEPTED\",\n      \"totalTransactionsCount\": 73500,\n      \"totalCreditTransactionsCount\": 73500,\n      \"totalInstructedAmount\": {\n        \"amount\": \"2400123.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"totalCreditInstructedAmount\": {\n        \"amount\": \"2400123.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"account\": {\n        \"name\": \"Main Current\",\n        \"identification\": {\n          \"identification\": \"CH8739215260566920524\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"requestedExecutionDate\": \"2019-02-18\",\n      \"fileName\": \"salaries-2019-02.csv\",\n      \"userFullName\": \"Davy Jones\",\n      \"uploadCompletedAt\": \"2019-02-22T14:08:34Z\",\n      \"canDelete\": false,\n      \"canCancel\": false\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"2fd15c69-c4da-4c58-986f-d46082057bf5\",\n      \"name\": \"End of Q2 payments\",\n      \"type\": \"SEPACT\",\n      \"status\": \"ENTERED\",\n      \"totalTransactionsCount\": 2109,\n      \"totalInstructedAmount\": {\n        \"amount\": \"280810.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"account\": {\n        \"name\": \"Main\",\n        \"identification\": {\n          \"identification\": \"NO0741575812927\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"requestedExecutionDate\": \"2019-05-31\",\n      \"fileName\": \"2019-Q2-payments.csv\",\n      \"userFullName\": \"Tommy Perrotti\",\n      \"uploadCompletedAt\": \"2019-05-16T14:09:30Z\",\n      \"approval\": {\n        \"id\": \"9966c07c-1547-42a5-9bc7-91986ff33993\",\n        \"userId\": \"c3608888-faa3-4f23-9c5a-269dd39caea5\",\n        \"externalUserId\": \"judi-miles\",\n        \"userFullName\": \"Judi Miles\",\n        \"serviceAgreementId\": \"64f538bf-3f5d-4dd9-8de7-ba7082da198d\",\n        \"itemId\": \"2fd15c69-c4da-4c58-986f-d46082057bf5\",\n        \"dataAccessItemId\": \"f094b702-e912-434c-8e49-12c56fc78551\",\n        \"resource\": \"Batches\",\n        \"function\": \"SEPACT\",\n        \"status\": \"PENDING\",\n        \"createdAt\": \"2019-05-16T14:09:40Z\",\n        \"records\": [{\n          \"id\": \"9e61d96d-fea3-44a4-8903-88d95eb266a8\",\n          \"userId\": \"f34feccc-0d0d-4365-982b-d6d1779e5aaf\",\n          \"externalUserId\": \"bigWillie\",\n          \"userFullName\": \"Willie Iles\",\n          \"approvalTypeId\": \"ece87cfe-33f9-45a4-8c51-a04a9f905c66\",\n          \"status\": \"APPROVED\",\n          \"createdAt\": \"2019-05-17T13:44:02Z\"\n        }],\n        \"canApprove\": false,\n        \"canReject\": false,\n        \"finalApprover\": false\n      },\n      \"canDelete\": false,\n      \"canCancel\": true\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"b438751d-6e6a-4601-8009-a82fa22bddcc\",\n      \"name\": \"Employee salaries\",\n      \"type\": \"SEPACT\",\n      \"status\": \"REJECTED\",\n      \"totalTransactionsCount\": 9208,\n      \"totalInstructedAmount\": {\n        \"amount\": \"50343009.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"account\": {\n        \"name\": \"Main Account 8\",\n        \"identification\": {\n          \"identification\": \"NL18ABNA4956451237\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"requestedExecutionDate\": \"2019-09-15\",\n      \"description\": \"Salary Sep 2019\",\n      \"bankStatus\": \"UNPROCESSABLE\",\n      \"reasonCode\": \"RJ08\",\n      \"reasonText\": \"Insufficient funds\",\n      \"errorDescription\": \"Target account has not enough funds to execute batch payments\",\n      \"fileName\": \"salaries-2019-02.csv\",\n      \"userFullName\": \"Davy Jones\",\n      \"uploadCompletedAt\": \"2019-02-22T14:08:34Z\",\n      \"canDelete\": false,\n      \"canCancel\": false\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"2f4c4bb6-c107-473a-adbd-7343b8f0ea80\",\n      \"name\": \"Salaries 2020-12\",\n      \"type\": \"ACH_CREDIT\",\n      \"status\": \"ACCEPTED\",\n      \"totalTransactionsCount\": 401,\n      \"totalInstructedAmount\": {\n        \"amount\": \"650980.25\",\n        \"currencyCode\": \"USD\"\n      },\n      \"account\": {\n        \"name\": \"Current Account\",\n        \"identification\": {\n          \"identification\": \"7649373647\",\n          \"schemeName\": \"BBAN\"\n        }\n      },\n      \"bankBranchCode\": \"113105452\",\n      \"companyId\": \"1800948594\",\n      \"companyName\": \"Your Company\",\n      \"requestedExecutionDate\": \"2020-12-18\",\n      \"fileName\": \"salaries-2020-12.ach\",\n      \"userFullName\": \"Ben Jones\",\n      \"uploadCompletedAt\": \"2020-12-15T15:28:10Z\",\n      \"canDelete\": false,\n      \"canCancel\": false\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchOrdersHttpServiceGetBatchPaymentByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments/{batchPaymentId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"counterpartyName\": \"M. Frederiksen\",\n      \"counterpartyAccountNumber\": \"DE49500105174361358418\",\n      \"instructedAmount\": {\n        \"amount\": \"5576.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"description\": \"Salary Feb 2019 empl.no:068572\",\n      \"status\": \"REJECTED\",\n      \"extendedDescription\": \"Addenda record for the credit payment \\nAddenda record for the credit payment\",\n      \"bankStatus\": \"UNPROCESSABLE\",\n      \"reasonCode\": \"RJ05\",\n      \"reasonText\": \"Rejected by counterparty bank\",\n      \"errorDescription\": \"Target account has been closed.\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchOrdersHttpServiceGetBatchPaymentsByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"batchPayments\": [{\n        \"counterpartyName\": \"A. Hamers\",\n        \"counterpartyAccountNumber\": \"NL62ABNA0609476343\",\n        \"instructedAmount\": {\n          \"amount\": \"4102.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"description\": \"Salaray Feb 2019 empl.no:902713\",\n        \"extendedDescriptionSize\": 99999\n      }, {\n        \"counterpartyName\": \"E. Gutierrez\",\n        \"counterpartyAccountNumber\": \"NL50ABNA4418364501\",\n        \"instructedAmount\": {\n          \"amount\": \"5287.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"description\": \"Salaray Feb 2019 empl.no:256869\",\n        \"extendedDescriptionSize\": 0\n      }, {\n        \"counterpartyName\": \"C.M. McAlister\",\n        \"counterpartyAccountNumber\": \"BE98735114499693\",\n        \"instructedAmount\": {\n          \"amount\": \"3398.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"description\": \"Salaray Feb 2019 empl.no:100642\",\n        \"extendedDescriptionSize\": 456768\n      }, {\n        \"counterpartyName\": \"K.C. Bennis\",\n        \"counterpartyAccountNumber\": \"NL67ABNA5515439724\",\n        \"instructedAmount\": {\n          \"amount\": \"4334.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"description\": \"Salaray Feb 2019 empl.no:191872\",\n        \"extendedDescriptionSize\": 0\n      }, {\n        \"counterpartyName\": \"M. Frederiksen\",\n        \"counterpartyAccountNumber\": \"DE49500105174361358418\",\n        \"instructedAmount\": {\n          \"amount\": \"5576.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"description\": \"Salaray Feb 2019 empl.no:068572\",\n        \"extendedDescriptionSize\": 123,\n        \"status\": \"REJECTED\",\n        \"bankStatus\": \"UNPROCESSABLE\",\n        \"reasonCode\": \"RJ05\",\n        \"reasonText\": \"Rejected by counterparty bank\",\n        \"errorDescription\": \"Target account has been closed.\"\n      }],\n      \"totalBatchPayments\": 5,\n      \"batchOrder\": {\n        \"id\": \"2f3a6d96-f671-4f03-994d-8f6caaa53cab\",\n        \"name\": \"Employee salaries\",\n        \"type\": \"SEPACT\",\n        \"status\": \"ACCEPTED\",\n        \"totalTransactionsCount\": 5,\n        \"totalInstructedAmount\": {\n          \"amount\": \"2400123.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"account\": {\n          \"name\": \"Main Current\",\n          \"identification\": {\n            \"identification\": \"CH8739215260566920524\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"requestedExecutionDate\": \"2019-02-18\",\n        \"fileName\": \"salaries-2019-02.csv\",\n        \"userFullName\": \"Davy Jones\",\n        \"uploadCompletedAt\": \"2019-02-22T14:08:34Z\",\n        \"confidentialType\": \"confidential type\"\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchOrdersHttpServicePostBatchOrdersMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/batch-orders\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"c1263fd6-8bd3-4a0b-be02-5db5cb1d6d06\",\n      \"status\": \"DRAFT\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchOrdersHttpServicePostBatchPaymentsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"cad9e668-15a4-44bf-832d-67e7b41387ac\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch order not found\",\n      \"errors\": []\n    }\n  }]\n}]);\nconst BatchOrdersHttpServicePutApprovalsByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/approvals\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"batchOrder\": {\n        \"id\": \"72d17d02-20a9-4f0b-b2b8-f83959eb187e\",\n        \"name\": \"Salaries May 2019\",\n        \"type\": \"SEPACT\",\n        \"creditDebitMixedIndicator\": \"CREDIT\",\n        \"status\": \"ENTERED\",\n        \"totalTransactionsCount\": 6504,\n        \"totalCreditTransactionsCount\": 6504,\n        \"totalInstructedAmount\": {\n          \"amount\": \"14009055.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"totalCreditInstructedAmount\": {\n          \"amount\": \"14009055.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"account\": {\n          \"name\": \"Salaries account\",\n          \"identification\": {\n            \"identification\": \"NL78ABNA3470416656\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"requestedExecutionDate\": \"2019-05-26\",\n        \"approval\": {\n          \"id\": \"00b5ca29-eddd-49f4-a898-c3f185ab9a3a\",\n          \"userId\": \"4840854b-0597-47a6-8984-87cb50f970eb\",\n          \"externalUserId\": \"judi-miles\",\n          \"userFullName\": \"Judi Miles\",\n          \"serviceAgreementId\": \"ea7b3dfd-29b8-4559-872a-91f5576b56ef\",\n          \"itemId\": \"72d17d02-20a9-4f0b-b2b8-f83959eb187e\",\n          \"dataAccessItemId\": \"606c7afa-3c8a-4210-ad25-fc83893a4e49\",\n          \"resource\": \"Batches\",\n          \"function\": \"SEPACT\",\n          \"status\": \"PENDING\",\n          \"createdAt\": \"2019-08-10T18:09:21Z\",\n          \"records\": [],\n          \"canApprove\": true,\n          \"canReject\": true,\n          \"finalApprover\": false\n        }\n      },\n      \"approvalStatus\": \"PENDING\"\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Limits has been breached, check the report for more details\",\n      \"checkTime\": \"2019-10-31T12:12:12Z\",\n      \"breachReport\": [{\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Service Agreement\",\n          \"description\": \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"user-BBID\": \"oleksii\",\n        \"breachInfo\": [{\n          \"breachType\": \"THRESHOLD\",\n          \"breachedLimitType\": \"PERIODIC\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2019-10-31T00:00:00Z\",\n            \"endTime\": \"2019-10-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"250.0\",\n          \"currentThreshold\": \"499.9\"\n        }, {\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"monthly\",\n            \"startTime\": \"2019-10-01T00:00:00Z\",\n            \"endTime\": \"2019-10-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"9950.0\",\n          \"currentThreshold\": \"10000.0\"\n        }]\n      }, {\n        \"user-BBID\": \"oleksii\",\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2019-10-31T00:00:00Z\",\n            \"endTime\": \"2019-10-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"500.0\",\n          \"currentThreshold\": \"1000.0\"\n        }]\n      }, {\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Function Access Group\",\n          \"description\": \"Batches approvers\"\n        }, {\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Function\",\n          \"description\": \"Domestic batches\"\n        }, {\n          \"ref\": \"Approve\",\n          \"type\": \"Privilege\",\n          \"description\": \"Approve\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"THRESHOLD\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2019-10-31T00:00:00Z\",\n            \"endTime\": \"2019-10-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"250.0\",\n          \"currentThreshold\": \"499.9\"\n        }]\n      }, {\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Legal Entity\",\n          \"description\": \"Kuhic, Gislason and Kemmer\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"quarterly\",\n            \"startTime\": \"2019-10-01T00:00:00Z\",\n            \"endTime\": \"2019-12-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"99950.0\",\n          \"currentThreshold\": \"100000.0\"\n        }]\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchOrdersHttpServicePutBatchPaymentByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments/{batchPaymentId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"7dc95f0a-deba-47be-8f5d-6d0454ef271c\",\n      \"counterpartyName\": \"Uriel Johnson\",\n      \"counterpartyAccountNumber\": \"HU65109180019369738837536884\",\n      \"instructedAmount\": {\n        \"amount\": \"830.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"description\": \"Order 00023162\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch order not found\",\n      \"errors\": []\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch payment not found\",\n      \"errors\": []\n    }\n  }]\n}]);\nconst BatchOrdersHttpServiceUpdateBatchOrderByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"f7e4f0bf-6080-46be-bd5d-7dad2b054495\",\n      \"name\": \"Employee salaries\",\n      \"type\": \"SEPACT\",\n      \"creditDebitMixedIndicator\": \"CREDIT\",\n      \"status\": \"CANCELLED\",\n      \"totalTransactionsCount\": 120,\n      \"totalCreditTransactionsCount\": 120,\n      \"totalInstructedAmount\": {\n        \"amount\": \"322038.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"totalCreditInstructedAmount\": {\n        \"amount\": \"322038.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"account\": {\n        \"name\": \"Main Current\",\n        \"identification\": {\n          \"identification\": \"NL54ABNA2366058993\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"requestedExecutionDate\": \"2012-01-01\",\n      \"fileName\": \"salaries-2020-01.csv\",\n      \"userFullName\": \"John Davis\",\n      \"uploadCompletedAt\": \"2019-12-31T23:55:31Z\",\n      \"canDelete\": false,\n      \"canCancel\": false,\n      \"approval\": {\n        \"id\": \"ac150312-1bec-4075-934f-23600886cb4e\",\n        \"userId\": \"64350fcf-ddd1-4cdc-b725-f6c76f89f7c2\",\n        \"externalUserId\": \"jdavis\",\n        \"userFullName\": \"John Davis\",\n        \"serviceAgreementId\": \"c94dc22f-381f-4127-a9f2-db2f5a314e41\",\n        \"itemId\": \"f7e4f0bf-6080-46be-bd5d-7dad2b054495\",\n        \"dataAccessItemId\": \"e8daae6b-0276-4533-b64d-e3c73afb47a0\",\n        \"resource\": \"Batches\",\n        \"function\": \"SEPACT\",\n        \"status\": \"PENDING\",\n        \"createdAt\": \"2019-12-31T23:56:08Z\",\n        \"records\": [{\n          \"id\": \"9e61d96d-fea3-44a4-8903-88d95eb266a8\",\n          \"userId\": \"f34feccc-0d0d-4365-982b-d6d1779e5aaf\",\n          \"externalUserId\": \"twilliams\",\n          \"userFullName\": \"Tobi Williams\",\n          \"approvalTypeId\": \"16f655f3-3abf-438d-8351-2c667d5a3c86\",\n          \"status\": \"APPROVED\",\n          \"createdAt\": \"2019-12-31T23:57:20Z\"\n        }],\n        \"canApprove\": false,\n        \"canReject\": false,\n        \"finalApprover\": false\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"The requested status ({{requestedStatus}}) is not valid. The status can be set to {{expectedStatus}}.\",\n        \"key\": \"BatchOrderCannotBeUpdated\",\n        \"context\": {\n          \"requestedStatus\": \"READY\",\n          \"expectedStatus\": \"CANCELLED\"\n        }\n      }]\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict\",\n      \"errors\": [{\n        \"message\": \"The current status of the batch order ({{currentStatus}}) does not allow cancellation.\",\n        \"key\": \"BatchOrderCannotBeCancelled\",\n        \"context\": {\n          \"currentStatus\": \"PROCESSED\"\n        }\n      }]\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict\",\n      \"errors\": [{\n        \"message\": \"Only partially approved batch orders can be cancelled.\",\n        \"key\": \"BatchOrderWithoutApprovalsCannotBeCancelled\"\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchOrdersHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict error\",\n      \"errors\": [{\n        \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n        \"key\": \"transactions.api.billingstatus.transaction\",\n        \"context\": {\n          \"billingStatus\": \"BILLED\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments/{batchPaymentId}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch order not found\",\n      \"errors\": []\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch payment not found\",\n      \"errors\": []\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict error\",\n      \"errors\": [{\n        \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n        \"key\": \"transactions.api.billingstatus.transaction\",\n        \"context\": {\n          \"billingStatus\": \"BILLED\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/batch-orders\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"batchOrders\": [{\n        \"id\": \"2f3a6d96-f671-4f03-994d-8f6caaa53cab\",\n        \"name\": \"Employee salaries\",\n        \"type\": \"SEPACT\",\n        \"creditDebitMixedIndicator\": \"CREDIT\",\n        \"status\": \"ACCEPTED\",\n        \"totalTransactionsCount\": 73500,\n        \"totalCreditTransactionsCount\": 73500,\n        \"totalInstructedAmount\": {\n          \"amount\": \"2400123.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"totalCreditInstructedAmount\": {\n          \"amount\": \"2400123.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"account\": {\n          \"name\": \"Main Current\",\n          \"identification\": {\n            \"identification\": \"CH8739215260566920524\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"requestedExecutionDate\": \"2019-02-18\",\n        \"canDelete\": false,\n        \"canCancel\": false\n      }, {\n        \"id\": \"33295f9c-95ec-42f9-9817-64f7d48be023\",\n        \"name\": \"Employee salaries\",\n        \"type\": \"SEPACT\",\n        \"creditDebitMixedIndicator\": \"CREDIT\",\n        \"status\": \"ACCEPTED\",\n        \"totalTransactionsCount\": 75930,\n        \"totalCreditTransactionsCount\": 75930,\n        \"totalInstructedAmount\": {\n          \"amount\": \"2479474.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"totalCreditInstructedAmount\": {\n          \"amount\": \"2479474.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"account\": {\n          \"name\": \"Main Current\",\n          \"identification\": {\n            \"identification\": \"CH8739215260566920524\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"requestedExecutionDate\": \"2019-03-18\",\n        \"canDelete\": false,\n        \"canCancel\": false\n      }, {\n        \"id\": \"f3da0418-c801-4db1-ae52-597f1459b525\",\n        \"name\": \"Employee salaries\",\n        \"type\": \"SEPACT\",\n        \"creditDebitMixedIndicator\": \"CREDIT\",\n        \"status\": \"ENTERED\",\n        \"totalTransactionsCount\": 78791,\n        \"totalCreditTransactionsCount\": 78791,\n        \"totalInstructedAmount\": {\n          \"amount\": \"2552947.15\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"totalCreditInstructedAmount\": {\n          \"amount\": \"2552947.15\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"account\": {\n          \"name\": \"Main Current\",\n          \"identification\": {\n            \"identification\": \"CH8739215260566920524\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"requestedExecutionDate\": \"2019-04-18\",\n        \"canDelete\": true,\n        \"canCancel\": false\n      }],\n      \"totalBatchOrders\": 3,\n      \"creditDebitMixedIndicator\": \"CREDIT\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"batchOrders\": [{\n        \"id\": \"a8e1ba16-d9be-4dd4-92b8-e2fbfe138b71\",\n        \"name\": \"Employees salaries May\",\n        \"type\": \"SEPACT\",\n        \"creditDebitMixedIndicator\": \"CREDIT\",\n        \"status\": \"ENTERED\",\n        \"totalTransactionsCount\": 71,\n        \"totalCreditTransactionsCount\": 71,\n        \"totalInstructedAmount\": {\n          \"amount\": \"191056.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"totalCreditInstructedAmount\": {\n          \"amount\": \"191056.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"account\": {\n          \"name\": \"Salaries Account\",\n          \"identification\": {\n            \"identification\": \"ST42353317399261373273497\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"requestedExecutionDate\": \"2019-05-27\",\n        \"approval\": {\n          \"id\": \"9bb143b1-bdb3-4ca5-9631-e02e743d6a10\",\n          \"userId\": \"23b8a2ac-e8bb-46b1-98d2-a2da71dfd646\",\n          \"externalUserId\": \"judi-miles\",\n          \"userFullName\": \"Judi Miles\",\n          \"serviceAgreementId\": \"e3e718d8-8f2e-4ef4-bf27-22580759b742\",\n          \"itemId\": \"a8e1ba16-d9be-4dd4-92b8-e2fbfe138b71\",\n          \"dataAccessItemId\": \"ac59c1a1-3729-4514-8051-5015dd0aadef\",\n          \"resource\": \"Batches\",\n          \"function\": \"SEPACT\",\n          \"status\": \"PENDING\",\n          \"createdAt\": \"2019-05-10T10:29:10Z\",\n          \"records\": [],\n          \"canApprove\": true,\n          \"canReject\": true,\n          \"finalApprover\": true\n        },\n        \"canDelete\": false,\n        \"canCancel\": false\n      }],\n      \"totalBatchOrders\": 1,\n      \"creditDebitMixedIndicator\": \"CREDIT\"\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"2f3a6d96-f671-4f03-994d-8f6caaa53cab\",\n      \"name\": \"Employee salaries\",\n      \"type\": \"SEPACT\",\n      \"creditDebitMixedIndicator\": \"CREDIT\",\n      \"status\": \"ACCEPTED\",\n      \"totalTransactionsCount\": 73500,\n      \"totalCreditTransactionsCount\": 73500,\n      \"totalInstructedAmount\": {\n        \"amount\": \"2400123.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"totalCreditInstructedAmount\": {\n        \"amount\": \"2400123.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"account\": {\n        \"name\": \"Main Current\",\n        \"identification\": {\n          \"identification\": \"CH8739215260566920524\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"requestedExecutionDate\": \"2019-02-18\",\n      \"fileName\": \"salaries-2019-02.csv\",\n      \"userFullName\": \"Davy Jones\",\n      \"uploadCompletedAt\": \"2019-02-22T14:08:34Z\",\n      \"canDelete\": false,\n      \"canCancel\": false\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"2fd15c69-c4da-4c58-986f-d46082057bf5\",\n      \"name\": \"End of Q2 payments\",\n      \"type\": \"SEPACT\",\n      \"status\": \"ENTERED\",\n      \"totalTransactionsCount\": 2109,\n      \"totalInstructedAmount\": {\n        \"amount\": \"280810.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"account\": {\n        \"name\": \"Main\",\n        \"identification\": {\n          \"identification\": \"NO0741575812927\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"requestedExecutionDate\": \"2019-05-31\",\n      \"fileName\": \"2019-Q2-payments.csv\",\n      \"userFullName\": \"Tommy Perrotti\",\n      \"uploadCompletedAt\": \"2019-05-16T14:09:30Z\",\n      \"approval\": {\n        \"id\": \"9966c07c-1547-42a5-9bc7-91986ff33993\",\n        \"userId\": \"c3608888-faa3-4f23-9c5a-269dd39caea5\",\n        \"externalUserId\": \"judi-miles\",\n        \"userFullName\": \"Judi Miles\",\n        \"serviceAgreementId\": \"64f538bf-3f5d-4dd9-8de7-ba7082da198d\",\n        \"itemId\": \"2fd15c69-c4da-4c58-986f-d46082057bf5\",\n        \"dataAccessItemId\": \"f094b702-e912-434c-8e49-12c56fc78551\",\n        \"resource\": \"Batches\",\n        \"function\": \"SEPACT\",\n        \"status\": \"PENDING\",\n        \"createdAt\": \"2019-05-16T14:09:40Z\",\n        \"records\": [{\n          \"id\": \"9e61d96d-fea3-44a4-8903-88d95eb266a8\",\n          \"userId\": \"f34feccc-0d0d-4365-982b-d6d1779e5aaf\",\n          \"externalUserId\": \"bigWillie\",\n          \"userFullName\": \"Willie Iles\",\n          \"approvalTypeId\": \"ece87cfe-33f9-45a4-8c51-a04a9f905c66\",\n          \"status\": \"APPROVED\",\n          \"createdAt\": \"2019-05-17T13:44:02Z\"\n        }],\n        \"canApprove\": false,\n        \"canReject\": false,\n        \"finalApprover\": false\n      },\n      \"canDelete\": false,\n      \"canCancel\": true\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"b438751d-6e6a-4601-8009-a82fa22bddcc\",\n      \"name\": \"Employee salaries\",\n      \"type\": \"SEPACT\",\n      \"status\": \"REJECTED\",\n      \"totalTransactionsCount\": 9208,\n      \"totalInstructedAmount\": {\n        \"amount\": \"50343009.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"account\": {\n        \"name\": \"Main Account 8\",\n        \"identification\": {\n          \"identification\": \"NL18ABNA4956451237\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"requestedExecutionDate\": \"2019-09-15\",\n      \"description\": \"Salary Sep 2019\",\n      \"bankStatus\": \"UNPROCESSABLE\",\n      \"reasonCode\": \"RJ08\",\n      \"reasonText\": \"Insufficient funds\",\n      \"errorDescription\": \"Target account has not enough funds to execute batch payments\",\n      \"fileName\": \"salaries-2019-02.csv\",\n      \"userFullName\": \"Davy Jones\",\n      \"uploadCompletedAt\": \"2019-02-22T14:08:34Z\",\n      \"canDelete\": false,\n      \"canCancel\": false\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"2f4c4bb6-c107-473a-adbd-7343b8f0ea80\",\n      \"name\": \"Salaries 2020-12\",\n      \"type\": \"ACH_CREDIT\",\n      \"status\": \"ACCEPTED\",\n      \"totalTransactionsCount\": 401,\n      \"totalInstructedAmount\": {\n        \"amount\": \"650980.25\",\n        \"currencyCode\": \"USD\"\n      },\n      \"account\": {\n        \"name\": \"Current Account\",\n        \"identification\": {\n          \"identification\": \"7649373647\",\n          \"schemeName\": \"BBAN\"\n        }\n      },\n      \"bankBranchCode\": \"113105452\",\n      \"companyId\": \"1800948594\",\n      \"companyName\": \"Your Company\",\n      \"requestedExecutionDate\": \"2020-12-18\",\n      \"fileName\": \"salaries-2020-12.ach\",\n      \"userFullName\": \"Ben Jones\",\n      \"uploadCompletedAt\": \"2020-12-15T15:28:10Z\",\n      \"canDelete\": false,\n      \"canCancel\": false\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments/{batchPaymentId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"counterpartyName\": \"M. Frederiksen\",\n      \"counterpartyAccountNumber\": \"DE49500105174361358418\",\n      \"instructedAmount\": {\n        \"amount\": \"5576.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"description\": \"Salary Feb 2019 empl.no:068572\",\n      \"status\": \"REJECTED\",\n      \"extendedDescription\": \"Addenda record for the credit payment \\nAddenda record for the credit payment\",\n      \"bankStatus\": \"UNPROCESSABLE\",\n      \"reasonCode\": \"RJ05\",\n      \"reasonText\": \"Rejected by counterparty bank\",\n      \"errorDescription\": \"Target account has been closed.\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"batchPayments\": [{\n        \"counterpartyName\": \"A. Hamers\",\n        \"counterpartyAccountNumber\": \"NL62ABNA0609476343\",\n        \"instructedAmount\": {\n          \"amount\": \"4102.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"description\": \"Salaray Feb 2019 empl.no:902713\",\n        \"extendedDescriptionSize\": 99999\n      }, {\n        \"counterpartyName\": \"E. Gutierrez\",\n        \"counterpartyAccountNumber\": \"NL50ABNA4418364501\",\n        \"instructedAmount\": {\n          \"amount\": \"5287.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"description\": \"Salaray Feb 2019 empl.no:256869\",\n        \"extendedDescriptionSize\": 0\n      }, {\n        \"counterpartyName\": \"C.M. McAlister\",\n        \"counterpartyAccountNumber\": \"BE98735114499693\",\n        \"instructedAmount\": {\n          \"amount\": \"3398.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"description\": \"Salaray Feb 2019 empl.no:100642\",\n        \"extendedDescriptionSize\": 456768\n      }, {\n        \"counterpartyName\": \"K.C. Bennis\",\n        \"counterpartyAccountNumber\": \"NL67ABNA5515439724\",\n        \"instructedAmount\": {\n          \"amount\": \"4334.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"description\": \"Salaray Feb 2019 empl.no:191872\",\n        \"extendedDescriptionSize\": 0\n      }, {\n        \"counterpartyName\": \"M. Frederiksen\",\n        \"counterpartyAccountNumber\": \"DE49500105174361358418\",\n        \"instructedAmount\": {\n          \"amount\": \"5576.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"description\": \"Salaray Feb 2019 empl.no:068572\",\n        \"extendedDescriptionSize\": 123,\n        \"status\": \"REJECTED\",\n        \"bankStatus\": \"UNPROCESSABLE\",\n        \"reasonCode\": \"RJ05\",\n        \"reasonText\": \"Rejected by counterparty bank\",\n        \"errorDescription\": \"Target account has been closed.\"\n      }],\n      \"totalBatchPayments\": 5,\n      \"batchOrder\": {\n        \"id\": \"2f3a6d96-f671-4f03-994d-8f6caaa53cab\",\n        \"name\": \"Employee salaries\",\n        \"type\": \"SEPACT\",\n        \"status\": \"ACCEPTED\",\n        \"totalTransactionsCount\": 5,\n        \"totalInstructedAmount\": {\n          \"amount\": \"2400123.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"account\": {\n          \"name\": \"Main Current\",\n          \"identification\": {\n            \"identification\": \"CH8739215260566920524\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"requestedExecutionDate\": \"2019-02-18\",\n        \"fileName\": \"salaries-2019-02.csv\",\n        \"userFullName\": \"Davy Jones\",\n        \"uploadCompletedAt\": \"2019-02-22T14:08:34Z\",\n        \"confidentialType\": \"confidential type\"\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/batch-orders\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"c1263fd6-8bd3-4a0b-be02-5db5cb1d6d06\",\n      \"status\": \"DRAFT\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"cad9e668-15a4-44bf-832d-67e7b41387ac\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch order not found\",\n      \"errors\": []\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/approvals\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"batchOrder\": {\n        \"id\": \"72d17d02-20a9-4f0b-b2b8-f83959eb187e\",\n        \"name\": \"Salaries May 2019\",\n        \"type\": \"SEPACT\",\n        \"creditDebitMixedIndicator\": \"CREDIT\",\n        \"status\": \"ENTERED\",\n        \"totalTransactionsCount\": 6504,\n        \"totalCreditTransactionsCount\": 6504,\n        \"totalInstructedAmount\": {\n          \"amount\": \"14009055.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"totalCreditInstructedAmount\": {\n          \"amount\": \"14009055.00\",\n          \"currencyCode\": \"EUR\"\n        },\n        \"account\": {\n          \"name\": \"Salaries account\",\n          \"identification\": {\n            \"identification\": \"NL78ABNA3470416656\",\n            \"schemeName\": \"IBAN\"\n          }\n        },\n        \"requestedExecutionDate\": \"2019-05-26\",\n        \"approval\": {\n          \"id\": \"00b5ca29-eddd-49f4-a898-c3f185ab9a3a\",\n          \"userId\": \"4840854b-0597-47a6-8984-87cb50f970eb\",\n          \"externalUserId\": \"judi-miles\",\n          \"userFullName\": \"Judi Miles\",\n          \"serviceAgreementId\": \"ea7b3dfd-29b8-4559-872a-91f5576b56ef\",\n          \"itemId\": \"72d17d02-20a9-4f0b-b2b8-f83959eb187e\",\n          \"dataAccessItemId\": \"606c7afa-3c8a-4210-ad25-fc83893a4e49\",\n          \"resource\": \"Batches\",\n          \"function\": \"SEPACT\",\n          \"status\": \"PENDING\",\n          \"createdAt\": \"2019-08-10T18:09:21Z\",\n          \"records\": [],\n          \"canApprove\": true,\n          \"canReject\": true,\n          \"finalApprover\": false\n        }\n      },\n      \"approvalStatus\": \"PENDING\"\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Limits has been breached, check the report for more details\",\n      \"checkTime\": \"2019-10-31T12:12:12Z\",\n      \"breachReport\": [{\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Service Agreement\",\n          \"description\": \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"user-BBID\": \"oleksii\",\n        \"breachInfo\": [{\n          \"breachType\": \"THRESHOLD\",\n          \"breachedLimitType\": \"PERIODIC\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2019-10-31T00:00:00Z\",\n            \"endTime\": \"2019-10-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"250.0\",\n          \"currentThreshold\": \"499.9\"\n        }, {\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"monthly\",\n            \"startTime\": \"2019-10-01T00:00:00Z\",\n            \"endTime\": \"2019-10-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"9950.0\",\n          \"currentThreshold\": \"10000.0\"\n        }]\n      }, {\n        \"user-BBID\": \"oleksii\",\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2019-10-31T00:00:00Z\",\n            \"endTime\": \"2019-10-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"500.0\",\n          \"currentThreshold\": \"1000.0\"\n        }]\n      }, {\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Function Access Group\",\n          \"description\": \"Batches approvers\"\n        }, {\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Function\",\n          \"description\": \"Domestic batches\"\n        }, {\n          \"ref\": \"Approve\",\n          \"type\": \"Privilege\",\n          \"description\": \"Approve\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"THRESHOLD\",\n          \"timeframe\": {\n            \"period\": \"daily\",\n            \"startTime\": \"2019-10-31T00:00:00Z\",\n            \"endTime\": \"2019-10-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"250.0\",\n          \"currentThreshold\": \"499.9\"\n        }]\n      }, {\n        \"limitedEntity\": [{\n          \"ref\": \"1234567-12312-123123\",\n          \"type\": \"Legal Entity\",\n          \"description\": \"Kuhic, Gislason and Kemmer\"\n        }],\n        \"shadow\": false,\n        \"currency\": \"EUR\",\n        \"breachInfo\": [{\n          \"breachType\": \"CONSUMPTION\",\n          \"timeframe\": {\n            \"period\": \"quarterly\",\n            \"startTime\": \"2019-10-01T00:00:00Z\",\n            \"endTime\": \"2019-12-31T23:59:59Z\"\n          },\n          \"currentConsumption\": \"99950.0\",\n          \"currentThreshold\": \"100000.0\"\n        }]\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments/{batchPaymentId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"7dc95f0a-deba-47be-8f5d-6d0454ef271c\",\n      \"counterpartyName\": \"Uriel Johnson\",\n      \"counterpartyAccountNumber\": \"HU65109180019369738837536884\",\n      \"instructedAmount\": {\n        \"amount\": \"830.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"description\": \"Order 00023162\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch order not found\",\n      \"errors\": []\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch payment not found\",\n      \"errors\": []\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"f7e4f0bf-6080-46be-bd5d-7dad2b054495\",\n      \"name\": \"Employee salaries\",\n      \"type\": \"SEPACT\",\n      \"creditDebitMixedIndicator\": \"CREDIT\",\n      \"status\": \"CANCELLED\",\n      \"totalTransactionsCount\": 120,\n      \"totalCreditTransactionsCount\": 120,\n      \"totalInstructedAmount\": {\n        \"amount\": \"322038.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"totalCreditInstructedAmount\": {\n        \"amount\": \"322038.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"account\": {\n        \"name\": \"Main Current\",\n        \"identification\": {\n          \"identification\": \"NL54ABNA2366058993\",\n          \"schemeName\": \"IBAN\"\n        }\n      },\n      \"requestedExecutionDate\": \"2012-01-01\",\n      \"fileName\": \"salaries-2020-01.csv\",\n      \"userFullName\": \"John Davis\",\n      \"uploadCompletedAt\": \"2019-12-31T23:55:31Z\",\n      \"canDelete\": false,\n      \"canCancel\": false,\n      \"approval\": {\n        \"id\": \"ac150312-1bec-4075-934f-23600886cb4e\",\n        \"userId\": \"64350fcf-ddd1-4cdc-b725-f6c76f89f7c2\",\n        \"externalUserId\": \"jdavis\",\n        \"userFullName\": \"John Davis\",\n        \"serviceAgreementId\": \"c94dc22f-381f-4127-a9f2-db2f5a314e41\",\n        \"itemId\": \"f7e4f0bf-6080-46be-bd5d-7dad2b054495\",\n        \"dataAccessItemId\": \"e8daae6b-0276-4533-b64d-e3c73afb47a0\",\n        \"resource\": \"Batches\",\n        \"function\": \"SEPACT\",\n        \"status\": \"PENDING\",\n        \"createdAt\": \"2019-12-31T23:56:08Z\",\n        \"records\": [{\n          \"id\": \"9e61d96d-fea3-44a4-8903-88d95eb266a8\",\n          \"userId\": \"f34feccc-0d0d-4365-982b-d6d1779e5aaf\",\n          \"externalUserId\": \"twilliams\",\n          \"userFullName\": \"Tobi Williams\",\n          \"approvalTypeId\": \"16f655f3-3abf-438d-8351-2c667d5a3c86\",\n          \"status\": \"APPROVED\",\n          \"createdAt\": \"2019-12-31T23:57:20Z\"\n        }],\n        \"canApprove\": false,\n        \"canReject\": false,\n        \"finalApprover\": false\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"The requested status ({{requestedStatus}}) is not valid. The status can be set to {{expectedStatus}}.\",\n        \"key\": \"BatchOrderCannotBeUpdated\",\n        \"context\": {\n          \"requestedStatus\": \"READY\",\n          \"expectedStatus\": \"CANCELLED\"\n        }\n      }]\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict\",\n      \"errors\": [{\n        \"message\": \"The current status of the batch order ({{currentStatus}}) does not allow cancellation.\",\n        \"key\": \"BatchOrderCannotBeCancelled\",\n        \"context\": {\n          \"currentStatus\": \"PROCESSED\"\n        }\n      }]\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict\",\n      \"errors\": [{\n        \"message\": \"Only partially approved batch orders can be cancelled.\",\n        \"key\": \"BatchOrderWithoutApprovalsCannotBeCancelled\"\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\n\nclass BatchUploadsHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new PaymentBatchConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  canConsumeForm(consumes) {\n    const form = 'multipart/form-data';\n\n    for (const consume of consumes) {\n      if (form === consume) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  createBatchOrdersForId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchUploadId = requestParameters[\"batchUploadId\"];\n\n    if (_batchUploadId === null || _batchUploadId === undefined) {\n      throw new Error('Required parameter batchUploadId was null or undefined when calling createBatchOrdersForId.');\n    }\n\n    const _confidentialType = requestParameters[\"confidentialType\"];\n    const _file = requestParameters[\"file\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_confidentialType !== undefined && _confidentialType !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _confidentialType, 'confidentialType');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['multipart/form-data'];\n    const canConsumeForm = this.canConsumeForm(consumes);\n    let formParams;\n    let useForm = false;\n    let convertFormParamsToString = false;\n    useForm = canConsumeForm;\n\n    if (useForm) {\n      formParams = new FormData();\n    } else {\n      formParams = new HttpParams({\n        encoder: this.encoder\n      });\n    }\n\n    if (_file !== undefined) {\n      formParams = formParams.append('file', _file) || formParams;\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/batch-uploads/${encodeURIComponent(String(_batchUploadId))}/batch-orders`, convertFormParamsToString ? formParams.toString() : formParams, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  createBatchOrdersForIdUrl(requestParameters) {\n    const _batchUploadId = requestParameters[\"batchUploadId\"];\n\n    if (_batchUploadId === null || _batchUploadId === undefined) {\n      throw new Error('Required parameter batchUploadId was null or undefined when calling createBatchOrdersForId.');\n    }\n\n    const _confidentialType = requestParameters[\"confidentialType\"];\n    const _file = requestParameters[\"file\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_confidentialType !== undefined && _confidentialType !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _confidentialType, 'confidentialType');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/batch-uploads/${encodeURIComponent(String(_batchUploadId))}/batch-orders${queryString ? `?${queryString}` : ''}`;\n  }\n\n  deleteBatchUploadById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchUploadId = requestParameters[\"batchUploadId\"];\n\n    if (_batchUploadId === null || _batchUploadId === undefined) {\n      throw new Error('Required parameter batchUploadId was null or undefined when calling deleteBatchUploadById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/batch-uploads/${encodeURIComponent(String(_batchUploadId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deleteBatchUploadByIdUrl(requestParameters) {\n    const _batchUploadId = requestParameters[\"batchUploadId\"];\n\n    if (_batchUploadId === null || _batchUploadId === undefined) {\n      throw new Error('Required parameter batchUploadId was null or undefined when calling deleteBatchUploadById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/batch-uploads/${encodeURIComponent(String(_batchUploadId))}`;\n  }\n\n  getBatchUploadById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchUploadId = requestParameters[\"batchUploadId\"];\n\n    if (_batchUploadId === null || _batchUploadId === undefined) {\n      throw new Error('Required parameter batchUploadId was null or undefined when calling getBatchUploadById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/batch-uploads/${encodeURIComponent(String(_batchUploadId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getBatchUploadByIdUrl(requestParameters) {\n    const _batchUploadId = requestParameters[\"batchUploadId\"];\n\n    if (_batchUploadId === null || _batchUploadId === undefined) {\n      throw new Error('Required parameter batchUploadId was null or undefined when calling getBatchUploadById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/batch-uploads/${encodeURIComponent(String(_batchUploadId))}`;\n  }\n\n  getBatchUploads(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _from = requestParameters[\"from\"];\n    const _cursor = requestParameters[\"cursor\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_cursor !== undefined && _cursor !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/batch-uploads`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getBatchUploadsUrl(requestParameters) {\n    const _from = requestParameters[\"from\"];\n    const _cursor = requestParameters[\"cursor\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_cursor !== undefined && _cursor !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/batch-uploads${queryString ? `?${queryString}` : ''}`;\n  }\n\n  putBatchUploadIdByBatchUploadId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchUploadId = requestParameters[\"batchUploadId\"];\n\n    if (_batchUploadId === null || _batchUploadId === undefined) {\n      throw new Error('Required parameter batchUploadId was null or undefined when calling putBatchUploadIdByBatchUploadId.');\n    }\n\n    const _batchUploadPutRequest = requestParameters[\"batchUploadPutRequest\"];\n\n    if (_batchUploadPutRequest === null || _batchUploadPutRequest === undefined) {\n      throw new Error('Required parameter batchUploadPutRequest was null or undefined when calling putBatchUploadIdByBatchUploadId.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/batch-uploads/${encodeURIComponent(String(_batchUploadId))}`, _batchUploadPutRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putBatchUploadIdByBatchUploadIdUrl(requestParameters) {\n    const _batchUploadId = requestParameters[\"batchUploadId\"];\n\n    if (_batchUploadId === null || _batchUploadId === undefined) {\n      throw new Error('Required parameter batchUploadId was null or undefined when calling putBatchUploadIdByBatchUploadId.');\n    }\n\n    const _batchUploadPutRequest = requestParameters[\"batchUploadPutRequest\"];\n\n    if (_batchUploadPutRequest === null || _batchUploadPutRequest === undefined) {\n      throw new Error('Required parameter batchUploadPutRequest was null or undefined when calling putBatchUploadIdByBatchUploadId.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/batch-uploads/${encodeURIComponent(String(_batchUploadId))}`;\n  }\n\n  startBatchUpload(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _startUploadBatchOrdersPostRequest = requestParameters[\"startUploadBatchOrdersPostRequest\"];\n\n    if (_startUploadBatchOrdersPostRequest === null || _startUploadBatchOrdersPostRequest === undefined) {\n      throw new Error('Required parameter startUploadBatchOrdersPostRequest was null or undefined when calling startBatchUpload.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/batch-uploads`, _startUploadBatchOrdersPostRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  startBatchUploadUrl(requestParameters) {\n    const _startUploadBatchOrdersPostRequest = requestParameters[\"startUploadBatchOrdersPostRequest\"];\n\n    if (_startUploadBatchOrdersPostRequest === null || _startUploadBatchOrdersPostRequest === undefined) {\n      throw new Error('Required parameter startUploadBatchOrdersPostRequest was null or undefined when calling startBatchUpload.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/batch-uploads`;\n  }\n\n}\n\nBatchUploadsHttpService.ɵfac = function BatchUploadsHttpService_Factory(t) {\n  return new (t || BatchUploadsHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(PAYMENT_BATCH_BASE_PATH, 8), i0.ɵɵinject(PaymentBatchConfiguration, 8));\n};\n\nBatchUploadsHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BatchUploadsHttpService,\n  factory: BatchUploadsHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BatchUploadsHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [PAYMENT_BATCH_BASE_PATH]\n      }]\n    }, {\n      type: PaymentBatchConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst BatchUploadsHttpServiceCreateBatchOrdersForIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/batch-uploads/{batchUploadId}/batch-orders\",\n  method: \"POST\",\n  responses: [{\n    status: 202,\n    body: {\n      \"id\": \"b51c4261-54c9-42e5-b5ae-4c1390b890d8\",\n      \"status\": \"DONE\",\n      \"totalBatchOrdersCount\": 3,\n      \"totalTransactionsCount\": 10211,\n      \"size\": 94371840,\n      \"uploadedSize\": 94371840\n    }\n  }, {\n    status: 202,\n    body: {\n      \"id\": \"0288dde3-9b89-4997-9e57-54684bf3c3c1\",\n      \"status\": \"DUPLICATE\",\n      \"totalBatchOrdersCount\": 3,\n      \"totalTransactionsCount\": 10211,\n      \"size\": 94371840,\n      \"uploadedSize\": 94371840\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"The request was rejected because its size exceeds the configured maximum ({{maxSize}})\",\n        \"key\": \"UploadExceedsMaxSize\",\n        \"context\": {\n          \"maxSize\": \"104857600\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"Total amount of batch ({{actual}}) does not match the expected amount ({{expected}})\",\n        \"key\": \"TotalAmountMismatch\",\n        \"context\": {\n          \"actual\": \"2400123.00\",\n          \"expected\": \"2398675.00\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"Total number of batches ({{actual}}) does not match the expected number ({{expected}})\",\n        \"key\": \"TotalBatchMismatch\",\n        \"context\": {\n          \"actual\": \"3\",\n          \"expected\": \"4\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"The integer part of '{{amount}}' for '{{fieldName}}' exceeds the maximum number of digits {{maximum}}\",\n        \"key\": \"AmountContainsTooManyDigits\",\n        \"context\": {\n          \"amount\": \"1234567890123456789.123456\",\n          \"fieldName\": \"batchTotalAmount\",\n          \"maximum\": \"18\"\n        }\n      }, {\n        \"message\": \"The fractional part of '{{amount}}' for '{{fieldName}}' exceeds the maximum number of decimal digits {{maximum}}\",\n        \"key\": \"AmountContainsTooManyDecimalDigits\",\n        \"context\": {\n          \"amount\": \"1234567890123456789.123456\",\n          \"fieldName\": \"batchTotalAmount\",\n          \"maximum\": \"5\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchUploadsHttpServiceDeleteBatchUploadByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/batch-uploads/{batchUploadId}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict\",\n      \"errors\": [{\n        \"message\": \"The current status of the batch upload ({{currentStatus}}) does not allow deleting the batch upload.\",\n        \"key\": \"BatchUploadCannotBeDeleted\",\n        \"context\": {\n          \"currentStatus\": \"OPEN\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchUploadsHttpServiceGetBatchUploadByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/batch-uploads/{batchUploadId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n      \"status\": \"OPEN\",\n      \"file\": {\n        \"name\": \"salaries-2019-02.csv\",\n        \"size\": 94371840,\n        \"uploadedSize\": 18874368\n      },\n      \"batchFileType\": \"BB_SEPACT_CSV\",\n      \"totalBatchOrdersCount\": 3,\n      \"createdAt\": \"2019-02-22T13:44:02Z\",\n      \"errors\": []\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n      \"status\": \"OPEN\",\n      \"file\": {\n        \"name\": \"salaries-2019-02.csv\",\n        \"size\": 94371840,\n        \"uploadedSize\": 42467328\n      },\n      \"batchFileType\": \"BB_SEPACT_CSV\",\n      \"totalBatchOrdersCount\": 3,\n      \"createdAt\": \"2019-02-22T13:44:02Z\",\n      \"errors\": []\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n      \"status\": \"OPEN\",\n      \"file\": {\n        \"name\": \"salaries-2019-02.csv\",\n        \"size\": 94371840,\n        \"uploadedSize\": 70778880\n      },\n      \"batchFileType\": \"BB_SEPACT_CSV\",\n      \"totalBatchOrdersCount\": 3,\n      \"createdAt\": \"2019-02-22T13:44:02Z\",\n      \"errors\": []\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n      \"status\": \"UPLOADED\",\n      \"file\": {\n        \"name\": \"salaries-2019-02.csv\",\n        \"size\": 94371840,\n        \"uploadedSize\": 94371840\n      },\n      \"batchFileType\": \"BB_SEPACT_CSV\",\n      \"totalBatchOrdersCount\": 3,\n      \"createdAt\": \"2019-02-22T13:44:02Z\",\n      \"completedAt\": \"2019-02-22T14:08:34Z\",\n      \"errors\": []\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n      \"status\": \"DONE\",\n      \"file\": {\n        \"name\": \"salaries-2019-12.csv\",\n        \"size\": 54371840,\n        \"uploadedSize\": 54371840,\n        \"lastModified\": \"2019-12-22T08:06:00Z\"\n      },\n      \"digest\": {\n        \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n        \"algorithm\": \"SHA-256\"\n      },\n      \"batchFileType\": \"BB_SEPACT_CSV\",\n      \"totalBatchOrdersCount\": 1,\n      \"createdAt\": \"2019-12-24T07:09:33Z\",\n      \"completedAt\": \"2019-12-24T07:11:09Z\",\n      \"errors\": []\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"3650f774-2a95-4bfb-9f00-1c58fc1af0c6\",\n      \"status\": \"DUPLICATE\",\n      \"file\": {\n        \"name\": \"salaries-2019-12.csv\",\n        \"size\": 54371840,\n        \"uploadedSize\": 54371840,\n        \"lastModified\": \"2019-12-22T08:06:00Z\"\n      },\n      \"digest\": {\n        \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n        \"algorithm\": \"SHA-256\"\n      },\n      \"batchFileType\": \"BB_SEPACT_CSV\",\n      \"totalBatchOrdersCount\": 1,\n      \"createdAt\": \"2019-12-28T09:11:13Z\",\n      \"completedAt\": \"2019-12-28T09:13:23Z\",\n      \"duplicates\": [{\n        \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n        \"status\": \"DONE\",\n        \"file\": {\n          \"name\": \"salaries-2019-12.csv\",\n          \"size\": 54371840,\n          \"uploadedSize\": 54371840,\n          \"lastModified\": \"2019-12-22T08:06:00Z\"\n        },\n        \"digest\": {\n          \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n          \"algorithm\": \"SHA-256\"\n        },\n        \"batchFileType\": \"BB_SEPACT_CSV\",\n        \"totalBatchOrdersCount\": 1,\n        \"createdAt\": \"2019-12-24T07:09:33Z\",\n        \"completedAt\": \"2019-12-24T07:11:09Z\"\n      }],\n      \"errors\": []\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"80467759-0178-4231-af61-003bf1bc842b\",\n      \"totalBatchOrdersCount\": 3,\n      \"size\": 94371840,\n      \"uploadedSize\": 94371840,\n      \"status\": \"FAILED\",\n      \"errors\": [{\n        \"message\": \"The actual total amount ({{totalAmount}}) does not match the expected total amount ({{headerTotalAmount}})\",\n        \"key\": \"TotalAmountMismatch\",\n        \"context\": {\n          \"totalAmount\": \"2400123.00\",\n          \"headerTotalAmount\": \"2398675.00\"\n        }\n      }]\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"9151b4d0-f058-4b01-8bed-474dfc34831e\",\n      \"totalBatchOrdersCount\": 4,\n      \"size\": 94371840,\n      \"uploadedSize\": 94371840,\n      \"status\": \"FAILED\",\n      \"errors\": [{\n        \"message\": \"Total number of batches ({{actual}}) does not match the expected number ({{expected}})\",\n        \"key\": \"TotalBatchMismatch\",\n        \"context\": {\n          \"actual\": \"3\",\n          \"expected\": \"4\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchUploadsHttpServiceGetBatchUploadsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/batch-uploads\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"batchUploads\": [{\n        \"id\": \"3d0e77b1-08fc-490d-898c-694169c76a2f\",\n        \"status\": \"FAILED\",\n        \"file\": {\n          \"name\": \"salaries-2019-02.csv\",\n          \"size\": 94370816\n        },\n        \"batchFileType\": \"BB_SEPACT_CSV\",\n        \"totalBatchOrdersCount\": 3,\n        \"createdAt\": \"2019-02-22T13:14:37Z\"\n      }, {\n        \"id\": \"82c85c38-35af-4fa8-87e5-d8374937cac2\",\n        \"status\": \"DONE\",\n        \"file\": {\n          \"name\": \"salaries-2019-02.csv\",\n          \"size\": 94371840,\n          \"uploadedSize\": 94371840,\n          \"lastModified\": \"2019-12-22T08:06:00Z\"\n        },\n        \"digest\": {\n          \"value\": \"d6099d20c5866e317bebbc69cc0eb681\",\n          \"algorithm\": \"MD5\"\n        },\n        \"batchFileType\": \"BB_SEPACT_CSV\",\n        \"totalBatchOrdersCount\": 3,\n        \"createdAt\": \"2019-02-22T13:44:02Z\",\n        \"completedAt\": \"2019-02-22T14:08:34Z\"\n      }, {\n        \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n        \"status\": \"DONE\",\n        \"file\": {\n          \"name\": \"salaries-2019-12.csv\",\n          \"size\": 54371840,\n          \"uploadedSize\": 54371840,\n          \"lastModified\": \"2019-12-22T08:06:00Z\"\n        },\n        \"digest\": {\n          \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n          \"algorithm\": \"SHA-256\"\n        },\n        \"batchFileType\": \"BB_SEPACT_CSV\",\n        \"totalBatchOrdersCount\": 1,\n        \"createdAt\": \"2019-12-24T07:09:33Z\",\n        \"completedAt\": \"2019-12-24T07:11:09Z\"\n      }, {\n        \"id\": \"3650f774-2a95-4bfb-9f00-1c58fc1af0c6\",\n        \"status\": \"DUPLICATE\",\n        \"file\": {\n          \"name\": \"salaries-2019-12.csv\",\n          \"size\": 54371840,\n          \"uploadedSize\": 54371840,\n          \"lastModified\": \"2019-12-22T08:06:00Z\"\n        },\n        \"digest\": {\n          \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n          \"algorithm\": \"SHA-256\"\n        },\n        \"batchFileType\": \"BB_SEPACT_CSV\",\n        \"totalBatchOrdersCount\": 1,\n        \"createdAt\": \"2019-12-28T09:11:13Z\",\n        \"completedAt\": \"2019-12-28T09:13:23Z\"\n      }]\n    }\n  }]\n}]);\nconst BatchUploadsHttpServicePutBatchUploadIdByBatchUploadIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/batch-uploads/{batchUploadId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"The requested status ({{requestedStatus}}) is not valid. The status can be set to {{expectedStatus}}.\",\n        \"key\": \"BatchUploadCannotBeUpdated\",\n        \"context\": {\n          \"requestedStatus\": \"OPEN\",\n          \"expectedStatus\": \"DONE\"\n        }\n      }]\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict\",\n      \"errors\": [{\n        \"message\": \"The current status of the batch upload ({{currentStatus}}) does not allow updating the status.\",\n        \"key\": \"BatchUploadCannotBeUpdated\",\n        \"context\": {\n          \"currentStatus\": \"OPEN\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchUploadsHttpServiceStartBatchUploadMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/batch-uploads\",\n  method: \"POST\",\n  responses: [{\n    status: 202,\n    body: {\n      \"batchUploadId\": \"5490bc83-9ea1-4b28-a465-2bb541e7c90b\",\n      \"status\": \"OPEN\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"File extension ({{actual}}) is not one of the supported ones {{expected}}\",\n        \"key\": \"UploadFileExtensionInvalid\",\n        \"context\": {\n          \"actual\": \"xls\",\n          \"expected\": \"{csv}\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"File size ({{actual}}) exceeds the configured maximum ({{expected}})\",\n        \"key\": \"UploadMaxFileSize\",\n        \"context\": {\n          \"actual\": \"115343360\",\n          \"expected\": \"104857600\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchUploadsHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/batch-uploads/{batchUploadId}/batch-orders\",\n  method: \"POST\",\n  responses: [{\n    status: 202,\n    body: {\n      \"id\": \"b51c4261-54c9-42e5-b5ae-4c1390b890d8\",\n      \"status\": \"DONE\",\n      \"totalBatchOrdersCount\": 3,\n      \"totalTransactionsCount\": 10211,\n      \"size\": 94371840,\n      \"uploadedSize\": 94371840\n    }\n  }, {\n    status: 202,\n    body: {\n      \"id\": \"0288dde3-9b89-4997-9e57-54684bf3c3c1\",\n      \"status\": \"DUPLICATE\",\n      \"totalBatchOrdersCount\": 3,\n      \"totalTransactionsCount\": 10211,\n      \"size\": 94371840,\n      \"uploadedSize\": 94371840\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"The request was rejected because its size exceeds the configured maximum ({{maxSize}})\",\n        \"key\": \"UploadExceedsMaxSize\",\n        \"context\": {\n          \"maxSize\": \"104857600\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"Total amount of batch ({{actual}}) does not match the expected amount ({{expected}})\",\n        \"key\": \"TotalAmountMismatch\",\n        \"context\": {\n          \"actual\": \"2400123.00\",\n          \"expected\": \"2398675.00\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"Total number of batches ({{actual}}) does not match the expected number ({{expected}})\",\n        \"key\": \"TotalBatchMismatch\",\n        \"context\": {\n          \"actual\": \"3\",\n          \"expected\": \"4\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"The integer part of '{{amount}}' for '{{fieldName}}' exceeds the maximum number of digits {{maximum}}\",\n        \"key\": \"AmountContainsTooManyDigits\",\n        \"context\": {\n          \"amount\": \"1234567890123456789.123456\",\n          \"fieldName\": \"batchTotalAmount\",\n          \"maximum\": \"18\"\n        }\n      }, {\n        \"message\": \"The fractional part of '{{amount}}' for '{{fieldName}}' exceeds the maximum number of decimal digits {{maximum}}\",\n        \"key\": \"AmountContainsTooManyDecimalDigits\",\n        \"context\": {\n          \"amount\": \"1234567890123456789.123456\",\n          \"fieldName\": \"batchTotalAmount\",\n          \"maximum\": \"5\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/batch-uploads/{batchUploadId}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict\",\n      \"errors\": [{\n        \"message\": \"The current status of the batch upload ({{currentStatus}}) does not allow deleting the batch upload.\",\n        \"key\": \"BatchUploadCannotBeDeleted\",\n        \"context\": {\n          \"currentStatus\": \"OPEN\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/batch-uploads/{batchUploadId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n      \"status\": \"OPEN\",\n      \"file\": {\n        \"name\": \"salaries-2019-02.csv\",\n        \"size\": 94371840,\n        \"uploadedSize\": 18874368\n      },\n      \"batchFileType\": \"BB_SEPACT_CSV\",\n      \"totalBatchOrdersCount\": 3,\n      \"createdAt\": \"2019-02-22T13:44:02Z\",\n      \"errors\": []\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n      \"status\": \"OPEN\",\n      \"file\": {\n        \"name\": \"salaries-2019-02.csv\",\n        \"size\": 94371840,\n        \"uploadedSize\": 42467328\n      },\n      \"batchFileType\": \"BB_SEPACT_CSV\",\n      \"totalBatchOrdersCount\": 3,\n      \"createdAt\": \"2019-02-22T13:44:02Z\",\n      \"errors\": []\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n      \"status\": \"OPEN\",\n      \"file\": {\n        \"name\": \"salaries-2019-02.csv\",\n        \"size\": 94371840,\n        \"uploadedSize\": 70778880\n      },\n      \"batchFileType\": \"BB_SEPACT_CSV\",\n      \"totalBatchOrdersCount\": 3,\n      \"createdAt\": \"2019-02-22T13:44:02Z\",\n      \"errors\": []\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n      \"status\": \"UPLOADED\",\n      \"file\": {\n        \"name\": \"salaries-2019-02.csv\",\n        \"size\": 94371840,\n        \"uploadedSize\": 94371840\n      },\n      \"batchFileType\": \"BB_SEPACT_CSV\",\n      \"totalBatchOrdersCount\": 3,\n      \"createdAt\": \"2019-02-22T13:44:02Z\",\n      \"completedAt\": \"2019-02-22T14:08:34Z\",\n      \"errors\": []\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n      \"status\": \"DONE\",\n      \"file\": {\n        \"name\": \"salaries-2019-12.csv\",\n        \"size\": 54371840,\n        \"uploadedSize\": 54371840,\n        \"lastModified\": \"2019-12-22T08:06:00Z\"\n      },\n      \"digest\": {\n        \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n        \"algorithm\": \"SHA-256\"\n      },\n      \"batchFileType\": \"BB_SEPACT_CSV\",\n      \"totalBatchOrdersCount\": 1,\n      \"createdAt\": \"2019-12-24T07:09:33Z\",\n      \"completedAt\": \"2019-12-24T07:11:09Z\",\n      \"errors\": []\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"3650f774-2a95-4bfb-9f00-1c58fc1af0c6\",\n      \"status\": \"DUPLICATE\",\n      \"file\": {\n        \"name\": \"salaries-2019-12.csv\",\n        \"size\": 54371840,\n        \"uploadedSize\": 54371840,\n        \"lastModified\": \"2019-12-22T08:06:00Z\"\n      },\n      \"digest\": {\n        \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n        \"algorithm\": \"SHA-256\"\n      },\n      \"batchFileType\": \"BB_SEPACT_CSV\",\n      \"totalBatchOrdersCount\": 1,\n      \"createdAt\": \"2019-12-28T09:11:13Z\",\n      \"completedAt\": \"2019-12-28T09:13:23Z\",\n      \"duplicates\": [{\n        \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n        \"status\": \"DONE\",\n        \"file\": {\n          \"name\": \"salaries-2019-12.csv\",\n          \"size\": 54371840,\n          \"uploadedSize\": 54371840,\n          \"lastModified\": \"2019-12-22T08:06:00Z\"\n        },\n        \"digest\": {\n          \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n          \"algorithm\": \"SHA-256\"\n        },\n        \"batchFileType\": \"BB_SEPACT_CSV\",\n        \"totalBatchOrdersCount\": 1,\n        \"createdAt\": \"2019-12-24T07:09:33Z\",\n        \"completedAt\": \"2019-12-24T07:11:09Z\"\n      }],\n      \"errors\": []\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"80467759-0178-4231-af61-003bf1bc842b\",\n      \"totalBatchOrdersCount\": 3,\n      \"size\": 94371840,\n      \"uploadedSize\": 94371840,\n      \"status\": \"FAILED\",\n      \"errors\": [{\n        \"message\": \"The actual total amount ({{totalAmount}}) does not match the expected total amount ({{headerTotalAmount}})\",\n        \"key\": \"TotalAmountMismatch\",\n        \"context\": {\n          \"totalAmount\": \"2400123.00\",\n          \"headerTotalAmount\": \"2398675.00\"\n        }\n      }]\n    }\n  }, {\n    status: 200,\n    body: {\n      \"id\": \"9151b4d0-f058-4b01-8bed-474dfc34831e\",\n      \"totalBatchOrdersCount\": 4,\n      \"size\": 94371840,\n      \"uploadedSize\": 94371840,\n      \"status\": \"FAILED\",\n      \"errors\": [{\n        \"message\": \"Total number of batches ({{actual}}) does not match the expected number ({{expected}})\",\n        \"key\": \"TotalBatchMismatch\",\n        \"context\": {\n          \"actual\": \"3\",\n          \"expected\": \"4\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/batch-uploads\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"batchUploads\": [{\n        \"id\": \"3d0e77b1-08fc-490d-898c-694169c76a2f\",\n        \"status\": \"FAILED\",\n        \"file\": {\n          \"name\": \"salaries-2019-02.csv\",\n          \"size\": 94370816\n        },\n        \"batchFileType\": \"BB_SEPACT_CSV\",\n        \"totalBatchOrdersCount\": 3,\n        \"createdAt\": \"2019-02-22T13:14:37Z\"\n      }, {\n        \"id\": \"82c85c38-35af-4fa8-87e5-d8374937cac2\",\n        \"status\": \"DONE\",\n        \"file\": {\n          \"name\": \"salaries-2019-02.csv\",\n          \"size\": 94371840,\n          \"uploadedSize\": 94371840,\n          \"lastModified\": \"2019-12-22T08:06:00Z\"\n        },\n        \"digest\": {\n          \"value\": \"d6099d20c5866e317bebbc69cc0eb681\",\n          \"algorithm\": \"MD5\"\n        },\n        \"batchFileType\": \"BB_SEPACT_CSV\",\n        \"totalBatchOrdersCount\": 3,\n        \"createdAt\": \"2019-02-22T13:44:02Z\",\n        \"completedAt\": \"2019-02-22T14:08:34Z\"\n      }, {\n        \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n        \"status\": \"DONE\",\n        \"file\": {\n          \"name\": \"salaries-2019-12.csv\",\n          \"size\": 54371840,\n          \"uploadedSize\": 54371840,\n          \"lastModified\": \"2019-12-22T08:06:00Z\"\n        },\n        \"digest\": {\n          \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n          \"algorithm\": \"SHA-256\"\n        },\n        \"batchFileType\": \"BB_SEPACT_CSV\",\n        \"totalBatchOrdersCount\": 1,\n        \"createdAt\": \"2019-12-24T07:09:33Z\",\n        \"completedAt\": \"2019-12-24T07:11:09Z\"\n      }, {\n        \"id\": \"3650f774-2a95-4bfb-9f00-1c58fc1af0c6\",\n        \"status\": \"DUPLICATE\",\n        \"file\": {\n          \"name\": \"salaries-2019-12.csv\",\n          \"size\": 54371840,\n          \"uploadedSize\": 54371840,\n          \"lastModified\": \"2019-12-22T08:06:00Z\"\n        },\n        \"digest\": {\n          \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n          \"algorithm\": \"SHA-256\"\n        },\n        \"batchFileType\": \"BB_SEPACT_CSV\",\n        \"totalBatchOrdersCount\": 1,\n        \"createdAt\": \"2019-12-28T09:11:13Z\",\n        \"completedAt\": \"2019-12-28T09:13:23Z\"\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/batch-uploads/{batchUploadId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"The requested status ({{requestedStatus}}) is not valid. The status can be set to {{expectedStatus}}.\",\n        \"key\": \"BatchUploadCannotBeUpdated\",\n        \"context\": {\n          \"requestedStatus\": \"OPEN\",\n          \"expectedStatus\": \"DONE\"\n        }\n      }]\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict\",\n      \"errors\": [{\n        \"message\": \"The current status of the batch upload ({{currentStatus}}) does not allow updating the status.\",\n        \"key\": \"BatchUploadCannotBeUpdated\",\n        \"context\": {\n          \"currentStatus\": \"OPEN\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/batch-uploads\",\n  method: \"POST\",\n  responses: [{\n    status: 202,\n    body: {\n      \"batchUploadId\": \"5490bc83-9ea1-4b28-a465-2bb541e7c90b\",\n      \"status\": \"OPEN\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"File extension ({{actual}}) is not one of the supported ones {{expected}}\",\n        \"key\": \"UploadFileExtensionInvalid\",\n        \"context\": {\n          \"actual\": \"xls\",\n          \"expected\": \"{csv}\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad request\",\n      \"errors\": [{\n        \"message\": \"File size ({{actual}}) exceeds the configured maximum ({{expected}})\",\n        \"key\": \"UploadMaxFileSize\",\n        \"context\": {\n          \"actual\": \"115343360\",\n          \"expected\": \"104857600\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nexport { ApprovalStatus, BatchOrdersHttpService, BatchOrdersHttpServiceDeleteBatchOrderIdByBatchOrderIdMocksProvider, BatchOrdersHttpServiceDeleteBatchPaymentByIdMocksProvider, BatchOrdersHttpServiceGetBatchOrdersByIdMocksProvider, BatchOrdersHttpServiceGetBatchOrdersMocksProvider, BatchOrdersHttpServiceGetBatchPaymentByIdMocksProvider, BatchOrdersHttpServiceGetBatchPaymentsByIdMocksProvider, BatchOrdersHttpServiceMocksProvider, BatchOrdersHttpServicePostBatchOrdersMocksProvider, BatchOrdersHttpServicePostBatchPaymentsMocksProvider, BatchOrdersHttpServicePutApprovalsByIdMocksProvider, BatchOrdersHttpServicePutBatchPaymentByIdMocksProvider, BatchOrdersHttpServiceUpdateBatchOrderByIdMocksProvider, BatchPaymentStatus, BatchStatus, BatchUploadsHttpService, BatchUploadsHttpServiceCreateBatchOrdersForIdMocksProvider, BatchUploadsHttpServiceDeleteBatchUploadByIdMocksProvider, BatchUploadsHttpServiceGetBatchUploadByIdMocksProvider, BatchUploadsHttpServiceGetBatchUploadsMocksProvider, BatchUploadsHttpServiceMocksProvider, BatchUploadsHttpServicePutBatchUploadIdByBatchUploadIdMocksProvider, BatchUploadsHttpServiceStartBatchUploadMocksProvider, BreachInfo, COLLECTION_FORMATS, CONFIG_TOKEN, ChargeBearer, CreditDebitIndicator, CreditDebitMixedIndicator, ExchangeRateInformation, InstructionPriority, InvolvedPartyRole, PAYMENT_BATCH_BASE_PATH, PaymentAction, PaymentBatchApiModule, PaymentBatchConfiguration, PaymentMode, RecordStatus, RemittanceInformation, Schedule, SchemeNames, Status, UploadStatus };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/payment-batch-http-ang/fesm2015/backbase-payment-batch-http-ang.js"],"names":["i0","InjectionToken","NgModule","Optional","SkipSelf","Injectable","Inject","i1","HttpHeaders","HttpParams","i2","createMocks","ApprovalStatus","PENDING","APPROVED","REJECTED","CANCELLED","BatchPaymentStatus","BatchStatus","OPEN","CLOSED","DRAFT","INVALID","VALID","ENTERED","READY","ACKNOWLEDGED","DOWNLOADING","ACCEPTED","PROCESSED","BreachInfo","BreachTypeEnum","THRESHOLD","CONSUMPTION","BreachedLimitTypeEnum","PERIODIC","TRANSACTIONAL","ChargeBearer","OUR","BEN","SHA","CreditDebitIndicator","CREDIT","DEBIT","CreditDebitMixedIndicator","MIXED","ExchangeRateInformation","RateTypeEnum","ACTUAL","INDICATIVE","AGREED","InstructionPriority","NORM","HIGH","InvolvedPartyRole","CREDITOR","DEBTOR","PaymentAction","APPROVE","FINALAPPROVE","REJECT","CANCEL","DELETE","EDIT","PaymentMode","SINGLE","RECURRING","RecordStatus","RemittanceInformation","TypeEnum","STRUCTURED","UNSTRUCTURED","Schedule","NonWorkingDayExecutionStrategyEnum","BEFORE","AFTER","NONE","TransferFrequencyEnum","ONCE","DAILY","WEEKLY","BIWEEKLY","MONTHLY","QUARTERLY","YEARLY","EveryEnum","_1","_2","SchemeNames","IBAN","BBAN","ID","EXTERNALID","EMAIL","MOBILE","Status","CANCELLATIONPENDING","CONFIRMATIONPENDING","CONFIRMATIONDECLINED","REPLACED","UploadStatus","UPLOADING","UPLOADED","DUPLICATE","DONE","FAILED","PAYMENT_BATCH_BASE_PATH","COLLECTION_FORMATS","PaymentBatchConfiguration","constructor","configurationParameters","apiKeys","username","password","accessToken","basePath","withCredentials","encoder","credentials","selectHeaderContentType","contentTypes","length","undefined","type","find","x","isJsonMime","selectHeaderAccept","accepts","mime","jsonMime","RegExp","test","toLowerCase","lookupCredential","key","value","CONFIG_TOKEN","PaymentBatchApiModule","parentModule","http","dataModulesManager","config","Error","setModuleConfig","apiRoot","servicePath","headers","forRoot","configurationFactory","ngModule","providers","provide","useFactory","ɵfac","HttpClient","DataModulesManager","ɵmod","ɵinj","args","imports","declarations","exports","decorators","CustomHttpParameterCodec","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeURIComponent","decodeValue","BatchOrdersHttpService","httpClient","configuration","defaultHeaders","addToHttpParams","httpParams","Date","addToHttpParamsRecursive","Array","isArray","forEach","elem","append","toISOString","substr","Object","keys","deleteBatchOrderIdByBatchOrderId","requestParameters","observe","reportProgress","options","_batchOrderId","httpHeaderAcceptSelected","httpHeaderAccept","httpHeaderAccepts","set","responseType","startsWith","delete","String","deleteBatchOrderIdByBatchOrderIdUrl","deleteBatchPaymentById","_batchPaymentId","deleteBatchPaymentByIdUrl","getBatchOrders","_query","_amountFrom","_amountTo","_executionDate","_executionDateFrom","_executionDateTo","_status","_from","_cursor","_size","_dynamicCreditDebitMixedIndicator","queryParameters","element","get","params","getBatchOrdersUrl","queryString","toString","getBatchOrdersById","getBatchOrdersByIdUrl","getBatchPaymentById","getBatchPaymentByIdUrl","getBatchPaymentsById","getBatchPaymentsByIdUrl","postBatchOrders","_batchOrdersPostRequest","consumes","httpContentTypeSelected","post","postBatchOrdersUrl","postBatchPayments","_batchPaymentsPostRequest","postBatchPaymentsUrl","putApprovalsById","_batchOrderApprovalPutRequest","put","putApprovalsByIdUrl","putBatchPaymentById","_batchPaymentsPutRequest","putBatchPaymentByIdUrl","updateBatchOrderById","_batchOrderPutRequest","_dryRun","_intendedCreditTransactionsCount","_intendedDebitTransactionsCount","_intendedCreditAmount","_intendedDebitAmount","updateBatchOrderByIdUrl","ɵprov","providedIn","BatchOrdersHttpServiceDeleteBatchOrderIdByBatchOrderIdMocksProvider","urlPattern","method","responses","status","body","BatchOrdersHttpServiceDeleteBatchPaymentByIdMocksProvider","BatchOrdersHttpServiceGetBatchOrdersMocksProvider","BatchOrdersHttpServiceGetBatchOrdersByIdMocksProvider","BatchOrdersHttpServiceGetBatchPaymentByIdMocksProvider","BatchOrdersHttpServiceGetBatchPaymentsByIdMocksProvider","BatchOrdersHttpServicePostBatchOrdersMocksProvider","BatchOrdersHttpServicePostBatchPaymentsMocksProvider","BatchOrdersHttpServicePutApprovalsByIdMocksProvider","BatchOrdersHttpServicePutBatchPaymentByIdMocksProvider","BatchOrdersHttpServiceUpdateBatchOrderByIdMocksProvider","BatchOrdersHttpServiceMocksProvider","BatchUploadsHttpService","canConsumeForm","form","consume","createBatchOrdersForId","_batchUploadId","_confidentialType","_file","formParams","useForm","convertFormParamsToString","FormData","createBatchOrdersForIdUrl","deleteBatchUploadById","deleteBatchUploadByIdUrl","getBatchUploadById","getBatchUploadByIdUrl","getBatchUploads","getBatchUploadsUrl","putBatchUploadIdByBatchUploadId","_batchUploadPutRequest","putBatchUploadIdByBatchUploadIdUrl","startBatchUpload","_startUploadBatchOrdersPostRequest","startBatchUploadUrl","BatchUploadsHttpServiceCreateBatchOrdersForIdMocksProvider","BatchUploadsHttpServiceDeleteBatchUploadByIdMocksProvider","BatchUploadsHttpServiceGetBatchUploadByIdMocksProvider","BatchUploadsHttpServiceGetBatchUploadsMocksProvider","BatchUploadsHttpServicePutBatchUploadIdByBatchUploadIdMocksProvider","BatchUploadsHttpServiceStartBatchUploadMocksProvider","BatchUploadsHttpServiceMocksProvider"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\n\nconst ApprovalStatus = {\n    PENDING: 'PENDING',\n    APPROVED: 'APPROVED',\n    REJECTED: 'REJECTED',\n    CANCELLED: 'CANCELLED'\n};\n\nconst BatchPaymentStatus = {\n    REJECTED: 'REJECTED'\n};\n\nconst BatchStatus = {\n    OPEN: 'OPEN',\n    CLOSED: 'CLOSED',\n    DRAFT: 'DRAFT',\n    INVALID: 'INVALID',\n    VALID: 'VALID',\n    ENTERED: 'ENTERED',\n    REJECTED: 'REJECTED',\n    CANCELLED: 'CANCELLED',\n    READY: 'READY',\n    ACKNOWLEDGED: 'ACKNOWLEDGED',\n    DOWNLOADING: 'DOWNLOADING',\n    ACCEPTED: 'ACCEPTED',\n    PROCESSED: 'PROCESSED'\n};\n\nvar BreachInfo;\n(function (BreachInfo) {\n    BreachInfo.BreachTypeEnum = {\n        THRESHOLD: 'THRESHOLD',\n        CONSUMPTION: 'CONSUMPTION'\n    };\n    BreachInfo.BreachedLimitTypeEnum = {\n        PERIODIC: 'PERIODIC',\n        TRANSACTIONAL: 'TRANSACTIONAL'\n    };\n})(BreachInfo || (BreachInfo = {}));\n\nconst ChargeBearer = {\n    OUR: 'OUR',\n    BEN: 'BEN',\n    SHA: 'SHA'\n};\n\nconst CreditDebitIndicator = {\n    CREDIT: 'CREDIT',\n    DEBIT: 'DEBIT'\n};\n\nconst CreditDebitMixedIndicator = {\n    CREDIT: 'CREDIT',\n    DEBIT: 'DEBIT',\n    MIXED: 'MIXED'\n};\n\nvar ExchangeRateInformation;\n(function (ExchangeRateInformation) {\n    ExchangeRateInformation.RateTypeEnum = {\n        ACTUAL: 'ACTUAL',\n        INDICATIVE: 'INDICATIVE',\n        AGREED: 'AGREED'\n    };\n})(ExchangeRateInformation || (ExchangeRateInformation = {}));\n\nconst InstructionPriority = {\n    NORM: 'NORM',\n    HIGH: 'HIGH'\n};\n\nconst InvolvedPartyRole = {\n    CREDITOR: 'CREDITOR',\n    DEBTOR: 'DEBTOR'\n};\n\nconst PaymentAction = {\n    APPROVE: 'APPROVE',\n    FINALAPPROVE: 'FINAL_APPROVE',\n    REJECT: 'REJECT',\n    CANCEL: 'CANCEL',\n    DELETE: 'DELETE',\n    EDIT: 'EDIT'\n};\n\nconst PaymentMode = {\n    SINGLE: 'SINGLE',\n    RECURRING: 'RECURRING'\n};\n\nconst RecordStatus = {\n    APPROVED: 'APPROVED',\n    REJECTED: 'REJECTED'\n};\n\nvar RemittanceInformation;\n(function (RemittanceInformation) {\n    RemittanceInformation.TypeEnum = {\n        STRUCTURED: 'STRUCTURED',\n        UNSTRUCTURED: 'UNSTRUCTURED'\n    };\n})(RemittanceInformation || (RemittanceInformation = {}));\n\nvar Schedule;\n(function (Schedule) {\n    Schedule.NonWorkingDayExecutionStrategyEnum = {\n        BEFORE: 'BEFORE',\n        AFTER: 'AFTER',\n        NONE: 'NONE'\n    };\n    Schedule.TransferFrequencyEnum = {\n        ONCE: 'ONCE',\n        DAILY: 'DAILY',\n        WEEKLY: 'WEEKLY',\n        BIWEEKLY: 'BIWEEKLY',\n        MONTHLY: 'MONTHLY',\n        QUARTERLY: 'QUARTERLY',\n        YEARLY: 'YEARLY'\n    };\n    Schedule.EveryEnum = {\n        _1: '1',\n        _2: '2'\n    };\n})(Schedule || (Schedule = {}));\n\nconst SchemeNames = {\n    IBAN: 'IBAN',\n    BBAN: 'BBAN',\n    ID: 'ID',\n    EXTERNALID: 'EXTERNAL_ID',\n    EMAIL: 'EMAIL',\n    MOBILE: 'MOBILE'\n};\n\nconst Status = {\n    DRAFT: 'DRAFT',\n    ENTERED: 'ENTERED',\n    READY: 'READY',\n    ACCEPTED: 'ACCEPTED',\n    PROCESSED: 'PROCESSED',\n    REJECTED: 'REJECTED',\n    CANCELLED: 'CANCELLED',\n    CANCELLATIONPENDING: 'CANCELLATION_PENDING',\n    CONFIRMATIONPENDING: 'CONFIRMATION_PENDING',\n    CONFIRMATIONDECLINED: 'CONFIRMATION_DECLINED',\n    REPLACED: 'REPLACED'\n};\n\nconst UploadStatus = {\n    OPEN: 'OPEN',\n    UPLOADING: 'UPLOADING',\n    UPLOADED: 'UPLOADED',\n    VALID: 'VALID',\n    DUPLICATE: 'DUPLICATE',\n    DONE: 'DONE',\n    FAILED: 'FAILED'\n};\n\nconst PAYMENT_BATCH_BASE_PATH = new InjectionToken('PAYMENT_BATCH_BASE_PATH');\nconst COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n};\n\nclass PaymentBatchConfiguration {\n    constructor(configurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n    selectHeaderContentType(contentTypes) {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n        const type = contentTypes.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n    selectHeaderAccept(accepts) {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n        const type = accepts.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n    lookupCredential(key) {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\nconst CONFIG_TOKEN = new InjectionToken('api-data-module PaymentBatchConfiguration');\n\nclass PaymentBatchApiModule {\n    constructor(parentModule, http, dataModulesManager, config) {\n        if (parentModule) {\n            throw new Error('PaymentBatchApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n                'See also https://github.com/angular/angular/issues/20575');\n        }\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n    static forRoot(configurationFactory) {\n        return {\n            ngModule: PaymentBatchApiModule,\n            providers: [{ provide: PaymentBatchConfiguration, useFactory: configurationFactory }]\n        };\n    }\n}\nPaymentBatchApiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentBatchApiModule, deps: [{ token: PaymentBatchApiModule, optional: true, skipSelf: true }, { token: i1.HttpClient, optional: true }, { token: i2.DataModulesManager, optional: true }, { token: PaymentBatchConfiguration }], target: i0.ɵɵFactoryTarget.NgModule });\nPaymentBatchApiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentBatchApiModule });\nPaymentBatchApiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentBatchApiModule, providers: [], imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentBatchApiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [],\n                    exports: [],\n                    providers: []\n                }]\n        }], ctorParameters: function () { return [{ type: PaymentBatchApiModule, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DataModulesManager, decorators: [{\n                    type: Optional\n                }] }, { type: PaymentBatchConfiguration }]; } });\n\nclass CustomHttpParameterCodec {\n    encodeKey(k) {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v) {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k) {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v) {\n        return decodeURIComponent(v);\n    }\n}\n\nclass BatchOrdersHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new PaymentBatchConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    deleteBatchOrderIdByBatchOrderId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchOrderId = requestParameters[\"batchOrderId\"];\n        if (_batchOrderId === null || _batchOrderId === undefined) {\n            throw new Error('Required parameter batchOrderId was null or undefined when calling deleteBatchOrderIdByBatchOrderId.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deleteBatchOrderIdByBatchOrderIdUrl(requestParameters) {\n        const _batchOrderId = requestParameters[\"batchOrderId\"];\n        if (_batchOrderId === null || _batchOrderId === undefined) {\n            throw new Error('Required parameter batchOrderId was null or undefined when calling deleteBatchOrderIdByBatchOrderId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}`;\n    }\n    deleteBatchPaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchOrderId = requestParameters[\"batchOrderId\"];\n        if (_batchOrderId === null || _batchOrderId === undefined) {\n            throw new Error('Required parameter batchOrderId was null or undefined when calling deleteBatchPaymentById.');\n        }\n        const _batchPaymentId = requestParameters[\"batchPaymentId\"];\n        if (_batchPaymentId === null || _batchPaymentId === undefined) {\n            throw new Error('Required parameter batchPaymentId was null or undefined when calling deleteBatchPaymentById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments/${encodeURIComponent(String(_batchPaymentId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deleteBatchPaymentByIdUrl(requestParameters) {\n        const _batchOrderId = requestParameters[\"batchOrderId\"];\n        if (_batchOrderId === null || _batchOrderId === undefined) {\n            throw new Error('Required parameter batchOrderId was null or undefined when calling deleteBatchPaymentById.');\n        }\n        const _batchPaymentId = requestParameters[\"batchPaymentId\"];\n        if (_batchPaymentId === null || _batchPaymentId === undefined) {\n            throw new Error('Required parameter batchPaymentId was null or undefined when calling deleteBatchPaymentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments/${encodeURIComponent(String(_batchPaymentId))}`;\n    }\n    getBatchOrders(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _query = requestParameters[\"query\"];\n        const _amountFrom = requestParameters[\"amountFrom\"];\n        const _amountTo = requestParameters[\"amountTo\"];\n        const _executionDate = requestParameters[\"executionDate\"];\n        const _executionDateFrom = requestParameters[\"executionDateFrom\"];\n        const _executionDateTo = requestParameters[\"executionDateTo\"];\n        const _status = requestParameters[\"status\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        const _dynamicCreditDebitMixedIndicator = requestParameters[\"dynamicCreditDebitMixedIndicator\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_query !== undefined && _query !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n        }\n        if (_amountFrom !== undefined && _amountFrom !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _amountFrom, 'amountFrom');\n        }\n        if (_amountTo !== undefined && _amountTo !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _amountTo, 'amountTo');\n        }\n        if (_executionDate !== undefined && _executionDate !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _executionDate, 'executionDate');\n        }\n        if (_executionDateFrom !== undefined && _executionDateFrom !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _executionDateFrom, 'executionDateFrom');\n        }\n        if (_executionDateTo !== undefined && _executionDateTo !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _executionDateTo, 'executionDateTo');\n        }\n        if (_status) {\n            _status.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters, element, 'status');\n            });\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        if (_dynamicCreditDebitMixedIndicator !== undefined && _dynamicCreditDebitMixedIndicator !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _dynamicCreditDebitMixedIndicator, 'dynamicCreditDebitMixedIndicator');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/batch-orders`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getBatchOrdersUrl(requestParameters) {\n        const _query = requestParameters[\"query\"];\n        const _amountFrom = requestParameters[\"amountFrom\"];\n        const _amountTo = requestParameters[\"amountTo\"];\n        const _executionDate = requestParameters[\"executionDate\"];\n        const _executionDateFrom = requestParameters[\"executionDateFrom\"];\n        const _executionDateTo = requestParameters[\"executionDateTo\"];\n        const _status = requestParameters[\"status\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        const _dynamicCreditDebitMixedIndicator = requestParameters[\"dynamicCreditDebitMixedIndicator\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_query !== undefined && _query !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n        }\n        if (_amountFrom !== undefined && _amountFrom !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _amountFrom, 'amountFrom');\n        }\n        if (_amountTo !== undefined && _amountTo !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _amountTo, 'amountTo');\n        }\n        if (_executionDate !== undefined && _executionDate !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _executionDate, 'executionDate');\n        }\n        if (_executionDateFrom !== undefined && _executionDateFrom !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _executionDateFrom, 'executionDateFrom');\n        }\n        if (_executionDateTo !== undefined && _executionDateTo !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _executionDateTo, 'executionDateTo');\n        }\n        if (_status) {\n            _status.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters, element, 'status');\n            });\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        if (_dynamicCreditDebitMixedIndicator !== undefined && _dynamicCreditDebitMixedIndicator !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _dynamicCreditDebitMixedIndicator, 'dynamicCreditDebitMixedIndicator');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/batch-orders${queryString ? `?${queryString}` : ''}`;\n    }\n    getBatchOrdersById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchOrderId = requestParameters[\"batchOrderId\"];\n        if (_batchOrderId === null || _batchOrderId === undefined) {\n            throw new Error('Required parameter batchOrderId was null or undefined when calling getBatchOrdersById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getBatchOrdersByIdUrl(requestParameters) {\n        const _batchOrderId = requestParameters[\"batchOrderId\"];\n        if (_batchOrderId === null || _batchOrderId === undefined) {\n            throw new Error('Required parameter batchOrderId was null or undefined when calling getBatchOrdersById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}`;\n    }\n    getBatchPaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchOrderId = requestParameters[\"batchOrderId\"];\n        if (_batchOrderId === null || _batchOrderId === undefined) {\n            throw new Error('Required parameter batchOrderId was null or undefined when calling getBatchPaymentById.');\n        }\n        const _batchPaymentId = requestParameters[\"batchPaymentId\"];\n        if (_batchPaymentId === null || _batchPaymentId === undefined) {\n            throw new Error('Required parameter batchPaymentId was null or undefined when calling getBatchPaymentById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments/${encodeURIComponent(String(_batchPaymentId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getBatchPaymentByIdUrl(requestParameters) {\n        const _batchOrderId = requestParameters[\"batchOrderId\"];\n        if (_batchOrderId === null || _batchOrderId === undefined) {\n            throw new Error('Required parameter batchOrderId was null or undefined when calling getBatchPaymentById.');\n        }\n        const _batchPaymentId = requestParameters[\"batchPaymentId\"];\n        if (_batchPaymentId === null || _batchPaymentId === undefined) {\n            throw new Error('Required parameter batchPaymentId was null or undefined when calling getBatchPaymentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments/${encodeURIComponent(String(_batchPaymentId))}`;\n    }\n    getBatchPaymentsById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchOrderId = requestParameters[\"batchOrderId\"];\n        if (_batchOrderId === null || _batchOrderId === undefined) {\n            throw new Error('Required parameter batchOrderId was null or undefined when calling getBatchPaymentsById.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getBatchPaymentsByIdUrl(requestParameters) {\n        const _batchOrderId = requestParameters[\"batchOrderId\"];\n        if (_batchOrderId === null || _batchOrderId === undefined) {\n            throw new Error('Required parameter batchOrderId was null or undefined when calling getBatchPaymentsById.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments${queryString ? `?${queryString}` : ''}`;\n    }\n    postBatchOrders(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchOrdersPostRequest = requestParameters[\"batchOrdersPostRequest\"];\n        if (_batchOrdersPostRequest === null || _batchOrdersPostRequest === undefined) {\n            throw new Error('Required parameter batchOrdersPostRequest was null or undefined when calling postBatchOrders.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/batch-orders`, _batchOrdersPostRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postBatchOrdersUrl(requestParameters) {\n        const _batchOrdersPostRequest = requestParameters[\"batchOrdersPostRequest\"];\n        if (_batchOrdersPostRequest === null || _batchOrdersPostRequest === undefined) {\n            throw new Error('Required parameter batchOrdersPostRequest was null or undefined when calling postBatchOrders.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/batch-orders`;\n    }\n    postBatchPayments(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchOrderId = requestParameters[\"batchOrderId\"];\n        if (_batchOrderId === null || _batchOrderId === undefined) {\n            throw new Error('Required parameter batchOrderId was null or undefined when calling postBatchPayments.');\n        }\n        const _batchPaymentsPostRequest = requestParameters[\"batchPaymentsPostRequest\"];\n        if (_batchPaymentsPostRequest === null || _batchPaymentsPostRequest === undefined) {\n            throw new Error('Required parameter batchPaymentsPostRequest was null or undefined when calling postBatchPayments.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments`, _batchPaymentsPostRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postBatchPaymentsUrl(requestParameters) {\n        const _batchOrderId = requestParameters[\"batchOrderId\"];\n        if (_batchOrderId === null || _batchOrderId === undefined) {\n            throw new Error('Required parameter batchOrderId was null or undefined when calling postBatchPayments.');\n        }\n        const _batchPaymentsPostRequest = requestParameters[\"batchPaymentsPostRequest\"];\n        if (_batchPaymentsPostRequest === null || _batchPaymentsPostRequest === undefined) {\n            throw new Error('Required parameter batchPaymentsPostRequest was null or undefined when calling postBatchPayments.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments`;\n    }\n    putApprovalsById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchOrderId = requestParameters[\"batchOrderId\"];\n        if (_batchOrderId === null || _batchOrderId === undefined) {\n            throw new Error('Required parameter batchOrderId was null or undefined when calling putApprovalsById.');\n        }\n        const _batchOrderApprovalPutRequest = requestParameters[\"batchOrderApprovalPutRequest\"];\n        if (_batchOrderApprovalPutRequest === null || _batchOrderApprovalPutRequest === undefined) {\n            throw new Error('Required parameter batchOrderApprovalPutRequest was null or undefined when calling putApprovalsById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/approvals`, _batchOrderApprovalPutRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putApprovalsByIdUrl(requestParameters) {\n        const _batchOrderId = requestParameters[\"batchOrderId\"];\n        if (_batchOrderId === null || _batchOrderId === undefined) {\n            throw new Error('Required parameter batchOrderId was null or undefined when calling putApprovalsById.');\n        }\n        const _batchOrderApprovalPutRequest = requestParameters[\"batchOrderApprovalPutRequest\"];\n        if (_batchOrderApprovalPutRequest === null || _batchOrderApprovalPutRequest === undefined) {\n            throw new Error('Required parameter batchOrderApprovalPutRequest was null or undefined when calling putApprovalsById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/approvals`;\n    }\n    putBatchPaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchOrderId = requestParameters[\"batchOrderId\"];\n        if (_batchOrderId === null || _batchOrderId === undefined) {\n            throw new Error('Required parameter batchOrderId was null or undefined when calling putBatchPaymentById.');\n        }\n        const _batchPaymentId = requestParameters[\"batchPaymentId\"];\n        if (_batchPaymentId === null || _batchPaymentId === undefined) {\n            throw new Error('Required parameter batchPaymentId was null or undefined when calling putBatchPaymentById.');\n        }\n        const _batchPaymentsPutRequest = requestParameters[\"batchPaymentsPutRequest\"];\n        if (_batchPaymentsPutRequest === null || _batchPaymentsPutRequest === undefined) {\n            throw new Error('Required parameter batchPaymentsPutRequest was null or undefined when calling putBatchPaymentById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments/${encodeURIComponent(String(_batchPaymentId))}`, _batchPaymentsPutRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putBatchPaymentByIdUrl(requestParameters) {\n        const _batchOrderId = requestParameters[\"batchOrderId\"];\n        if (_batchOrderId === null || _batchOrderId === undefined) {\n            throw new Error('Required parameter batchOrderId was null or undefined when calling putBatchPaymentById.');\n        }\n        const _batchPaymentId = requestParameters[\"batchPaymentId\"];\n        if (_batchPaymentId === null || _batchPaymentId === undefined) {\n            throw new Error('Required parameter batchPaymentId was null or undefined when calling putBatchPaymentById.');\n        }\n        const _batchPaymentsPutRequest = requestParameters[\"batchPaymentsPutRequest\"];\n        if (_batchPaymentsPutRequest === null || _batchPaymentsPutRequest === undefined) {\n            throw new Error('Required parameter batchPaymentsPutRequest was null or undefined when calling putBatchPaymentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}/batch-payments/${encodeURIComponent(String(_batchPaymentId))}`;\n    }\n    updateBatchOrderById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchOrderId = requestParameters[\"batchOrderId\"];\n        if (_batchOrderId === null || _batchOrderId === undefined) {\n            throw new Error('Required parameter batchOrderId was null or undefined when calling updateBatchOrderById.');\n        }\n        const _batchOrderPutRequest = requestParameters[\"batchOrderPutRequest\"];\n        if (_batchOrderPutRequest === null || _batchOrderPutRequest === undefined) {\n            throw new Error('Required parameter batchOrderPutRequest was null or undefined when calling updateBatchOrderById.');\n        }\n        const _dryRun = requestParameters[\"dryRun\"];\n        const _intendedCreditTransactionsCount = requestParameters[\"intendedCreditTransactionsCount\"];\n        const _intendedDebitTransactionsCount = requestParameters[\"intendedDebitTransactionsCount\"];\n        const _intendedCreditAmount = requestParameters[\"intendedCreditAmount\"];\n        const _intendedDebitAmount = requestParameters[\"intendedDebitAmount\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_dryRun !== undefined && _dryRun !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _dryRun, 'dryRun');\n        }\n        if (_intendedCreditTransactionsCount !== undefined && _intendedCreditTransactionsCount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedCreditTransactionsCount, 'intendedCreditTransactionsCount');\n        }\n        if (_intendedDebitTransactionsCount !== undefined && _intendedDebitTransactionsCount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedDebitTransactionsCount, 'intendedDebitTransactionsCount');\n        }\n        if (_intendedCreditAmount !== undefined && _intendedCreditAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedCreditAmount, 'intendedCreditAmount');\n        }\n        if (_intendedDebitAmount !== undefined && _intendedDebitAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedDebitAmount, 'intendedDebitAmount');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}`, _batchOrderPutRequest, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    updateBatchOrderByIdUrl(requestParameters) {\n        const _batchOrderId = requestParameters[\"batchOrderId\"];\n        if (_batchOrderId === null || _batchOrderId === undefined) {\n            throw new Error('Required parameter batchOrderId was null or undefined when calling updateBatchOrderById.');\n        }\n        const _batchOrderPutRequest = requestParameters[\"batchOrderPutRequest\"];\n        if (_batchOrderPutRequest === null || _batchOrderPutRequest === undefined) {\n            throw new Error('Required parameter batchOrderPutRequest was null or undefined when calling updateBatchOrderById.');\n        }\n        const _dryRun = requestParameters[\"dryRun\"];\n        const _intendedCreditTransactionsCount = requestParameters[\"intendedCreditTransactionsCount\"];\n        const _intendedDebitTransactionsCount = requestParameters[\"intendedDebitTransactionsCount\"];\n        const _intendedCreditAmount = requestParameters[\"intendedCreditAmount\"];\n        const _intendedDebitAmount = requestParameters[\"intendedDebitAmount\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_dryRun !== undefined && _dryRun !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _dryRun, 'dryRun');\n        }\n        if (_intendedCreditTransactionsCount !== undefined && _intendedCreditTransactionsCount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedCreditTransactionsCount, 'intendedCreditTransactionsCount');\n        }\n        if (_intendedDebitTransactionsCount !== undefined && _intendedDebitTransactionsCount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedDebitTransactionsCount, 'intendedDebitTransactionsCount');\n        }\n        if (_intendedCreditAmount !== undefined && _intendedCreditAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedCreditAmount, 'intendedCreditAmount');\n        }\n        if (_intendedDebitAmount !== undefined && _intendedDebitAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedDebitAmount, 'intendedDebitAmount');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/batch-orders/${encodeURIComponent(String(_batchOrderId))}${queryString ? `?${queryString}` : ''}`;\n    }\n}\nBatchOrdersHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BatchOrdersHttpService, deps: [{ token: i1.HttpClient }, { token: PAYMENT_BATCH_BASE_PATH, optional: true }, { token: PaymentBatchConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nBatchOrdersHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BatchOrdersHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BatchOrdersHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [PAYMENT_BATCH_BASE_PATH]\n                }] }, { type: PaymentBatchConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst BatchOrdersHttpServiceDeleteBatchOrderIdByBatchOrderIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict error\",\n                    \"errors\": [{\n                            \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n                            \"key\": \"transactions.api.billingstatus.transaction\",\n                            \"context\": {\n                                \"billingStatus\": \"BILLED\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchOrdersHttpServiceDeleteBatchPaymentByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments/{batchPaymentId}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch order not found\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch payment not found\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict error\",\n                    \"errors\": [{\n                            \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n                            \"key\": \"transactions.api.billingstatus.transaction\",\n                            \"context\": {\n                                \"billingStatus\": \"BILLED\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchOrdersHttpServiceGetBatchOrdersMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/batch-orders\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"batchOrders\": [{\n                            \"id\": \"2f3a6d96-f671-4f03-994d-8f6caaa53cab\",\n                            \"name\": \"Employee salaries\",\n                            \"type\": \"SEPACT\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"status\": \"ACCEPTED\",\n                            \"totalTransactionsCount\": 73500,\n                            \"totalCreditTransactionsCount\": 73500,\n                            \"totalInstructedAmount\": {\n                                \"amount\": \"2400123.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"2400123.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"account\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": {\n                                    \"identification\": \"CH8739215260566920524\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"requestedExecutionDate\": \"2019-02-18\",\n                            \"canDelete\": false,\n                            \"canCancel\": false\n                        }, {\n                            \"id\": \"33295f9c-95ec-42f9-9817-64f7d48be023\",\n                            \"name\": \"Employee salaries\",\n                            \"type\": \"SEPACT\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"status\": \"ACCEPTED\",\n                            \"totalTransactionsCount\": 75930,\n                            \"totalCreditTransactionsCount\": 75930,\n                            \"totalInstructedAmount\": {\n                                \"amount\": \"2479474.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"2479474.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"account\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": {\n                                    \"identification\": \"CH8739215260566920524\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"requestedExecutionDate\": \"2019-03-18\",\n                            \"canDelete\": false,\n                            \"canCancel\": false\n                        }, {\n                            \"id\": \"f3da0418-c801-4db1-ae52-597f1459b525\",\n                            \"name\": \"Employee salaries\",\n                            \"type\": \"SEPACT\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"status\": \"ENTERED\",\n                            \"totalTransactionsCount\": 78791,\n                            \"totalCreditTransactionsCount\": 78791,\n                            \"totalInstructedAmount\": {\n                                \"amount\": \"2552947.15\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"2552947.15\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"account\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": {\n                                    \"identification\": \"CH8739215260566920524\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"requestedExecutionDate\": \"2019-04-18\",\n                            \"canDelete\": true,\n                            \"canCancel\": false\n                        }],\n                    \"totalBatchOrders\": 3,\n                    \"creditDebitMixedIndicator\": \"CREDIT\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"batchOrders\": [{\n                            \"id\": \"a8e1ba16-d9be-4dd4-92b8-e2fbfe138b71\",\n                            \"name\": \"Employees salaries May\",\n                            \"type\": \"SEPACT\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"status\": \"ENTERED\",\n                            \"totalTransactionsCount\": 71,\n                            \"totalCreditTransactionsCount\": 71,\n                            \"totalInstructedAmount\": {\n                                \"amount\": \"191056.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"191056.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"account\": {\n                                \"name\": \"Salaries Account\",\n                                \"identification\": {\n                                    \"identification\": \"ST42353317399261373273497\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"requestedExecutionDate\": \"2019-05-27\",\n                            \"approval\": {\n                                \"id\": \"9bb143b1-bdb3-4ca5-9631-e02e743d6a10\",\n                                \"userId\": \"23b8a2ac-e8bb-46b1-98d2-a2da71dfd646\",\n                                \"externalUserId\": \"judi-miles\",\n                                \"userFullName\": \"Judi Miles\",\n                                \"serviceAgreementId\": \"e3e718d8-8f2e-4ef4-bf27-22580759b742\",\n                                \"itemId\": \"a8e1ba16-d9be-4dd4-92b8-e2fbfe138b71\",\n                                \"dataAccessItemId\": \"ac59c1a1-3729-4514-8051-5015dd0aadef\",\n                                \"resource\": \"Batches\",\n                                \"function\": \"SEPACT\",\n                                \"status\": \"PENDING\",\n                                \"createdAt\": \"2019-05-10T10:29:10Z\",\n                                \"records\": [],\n                                \"canApprove\": true,\n                                \"canReject\": true,\n                                \"finalApprover\": true\n                            },\n                            \"canDelete\": false,\n                            \"canCancel\": false\n                        }],\n                    \"totalBatchOrders\": 1,\n                    \"creditDebitMixedIndicator\": \"CREDIT\"\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchOrdersHttpServiceGetBatchOrdersByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"2f3a6d96-f671-4f03-994d-8f6caaa53cab\",\n                    \"name\": \"Employee salaries\",\n                    \"type\": \"SEPACT\",\n                    \"creditDebitMixedIndicator\": \"CREDIT\",\n                    \"status\": \"ACCEPTED\",\n                    \"totalTransactionsCount\": 73500,\n                    \"totalCreditTransactionsCount\": 73500,\n                    \"totalInstructedAmount\": {\n                        \"amount\": \"2400123.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"totalCreditInstructedAmount\": {\n                        \"amount\": \"2400123.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"account\": {\n                        \"name\": \"Main Current\",\n                        \"identification\": {\n                            \"identification\": \"CH8739215260566920524\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"requestedExecutionDate\": \"2019-02-18\",\n                    \"fileName\": \"salaries-2019-02.csv\",\n                    \"userFullName\": \"Davy Jones\",\n                    \"uploadCompletedAt\": \"2019-02-22T14:08:34Z\",\n                    \"canDelete\": false,\n                    \"canCancel\": false\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"2fd15c69-c4da-4c58-986f-d46082057bf5\",\n                    \"name\": \"End of Q2 payments\",\n                    \"type\": \"SEPACT\",\n                    \"status\": \"ENTERED\",\n                    \"totalTransactionsCount\": 2109,\n                    \"totalInstructedAmount\": {\n                        \"amount\": \"280810.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"account\": {\n                        \"name\": \"Main\",\n                        \"identification\": {\n                            \"identification\": \"NO0741575812927\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"requestedExecutionDate\": \"2019-05-31\",\n                    \"fileName\": \"2019-Q2-payments.csv\",\n                    \"userFullName\": \"Tommy Perrotti\",\n                    \"uploadCompletedAt\": \"2019-05-16T14:09:30Z\",\n                    \"approval\": {\n                        \"id\": \"9966c07c-1547-42a5-9bc7-91986ff33993\",\n                        \"userId\": \"c3608888-faa3-4f23-9c5a-269dd39caea5\",\n                        \"externalUserId\": \"judi-miles\",\n                        \"userFullName\": \"Judi Miles\",\n                        \"serviceAgreementId\": \"64f538bf-3f5d-4dd9-8de7-ba7082da198d\",\n                        \"itemId\": \"2fd15c69-c4da-4c58-986f-d46082057bf5\",\n                        \"dataAccessItemId\": \"f094b702-e912-434c-8e49-12c56fc78551\",\n                        \"resource\": \"Batches\",\n                        \"function\": \"SEPACT\",\n                        \"status\": \"PENDING\",\n                        \"createdAt\": \"2019-05-16T14:09:40Z\",\n                        \"records\": [{\n                                \"id\": \"9e61d96d-fea3-44a4-8903-88d95eb266a8\",\n                                \"userId\": \"f34feccc-0d0d-4365-982b-d6d1779e5aaf\",\n                                \"externalUserId\": \"bigWillie\",\n                                \"userFullName\": \"Willie Iles\",\n                                \"approvalTypeId\": \"ece87cfe-33f9-45a4-8c51-a04a9f905c66\",\n                                \"status\": \"APPROVED\",\n                                \"createdAt\": \"2019-05-17T13:44:02Z\"\n                            }],\n                        \"canApprove\": false,\n                        \"canReject\": false,\n                        \"finalApprover\": false\n                    },\n                    \"canDelete\": false,\n                    \"canCancel\": true\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"b438751d-6e6a-4601-8009-a82fa22bddcc\",\n                    \"name\": \"Employee salaries\",\n                    \"type\": \"SEPACT\",\n                    \"status\": \"REJECTED\",\n                    \"totalTransactionsCount\": 9208,\n                    \"totalInstructedAmount\": {\n                        \"amount\": \"50343009.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"account\": {\n                        \"name\": \"Main Account 8\",\n                        \"identification\": {\n                            \"identification\": \"NL18ABNA4956451237\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"requestedExecutionDate\": \"2019-09-15\",\n                    \"description\": \"Salary Sep 2019\",\n                    \"bankStatus\": \"UNPROCESSABLE\",\n                    \"reasonCode\": \"RJ08\",\n                    \"reasonText\": \"Insufficient funds\",\n                    \"errorDescription\": \"Target account has not enough funds to execute batch payments\",\n                    \"fileName\": \"salaries-2019-02.csv\",\n                    \"userFullName\": \"Davy Jones\",\n                    \"uploadCompletedAt\": \"2019-02-22T14:08:34Z\",\n                    \"canDelete\": false,\n                    \"canCancel\": false\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"2f4c4bb6-c107-473a-adbd-7343b8f0ea80\",\n                    \"name\": \"Salaries 2020-12\",\n                    \"type\": \"ACH_CREDIT\",\n                    \"status\": \"ACCEPTED\",\n                    \"totalTransactionsCount\": 401,\n                    \"totalInstructedAmount\": {\n                        \"amount\": \"650980.25\",\n                        \"currencyCode\": \"USD\"\n                    },\n                    \"account\": {\n                        \"name\": \"Current Account\",\n                        \"identification\": {\n                            \"identification\": \"7649373647\",\n                            \"schemeName\": \"BBAN\"\n                        }\n                    },\n                    \"bankBranchCode\": \"113105452\",\n                    \"companyId\": \"1800948594\",\n                    \"companyName\": \"Your Company\",\n                    \"requestedExecutionDate\": \"2020-12-18\",\n                    \"fileName\": \"salaries-2020-12.ach\",\n                    \"userFullName\": \"Ben Jones\",\n                    \"uploadCompletedAt\": \"2020-12-15T15:28:10Z\",\n                    \"canDelete\": false,\n                    \"canCancel\": false\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchOrdersHttpServiceGetBatchPaymentByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments/{batchPaymentId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"counterpartyName\": \"M. Frederiksen\",\n                    \"counterpartyAccountNumber\": \"DE49500105174361358418\",\n                    \"instructedAmount\": {\n                        \"amount\": \"5576.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"description\": \"Salary Feb 2019 empl.no:068572\",\n                    \"status\": \"REJECTED\",\n                    \"extendedDescription\": \"Addenda record for the credit payment \\nAddenda record for the credit payment\",\n                    \"bankStatus\": \"UNPROCESSABLE\",\n                    \"reasonCode\": \"RJ05\",\n                    \"reasonText\": \"Rejected by counterparty bank\",\n                    \"errorDescription\": \"Target account has been closed.\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchOrdersHttpServiceGetBatchPaymentsByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"batchPayments\": [{\n                            \"counterpartyName\": \"A. Hamers\",\n                            \"counterpartyAccountNumber\": \"NL62ABNA0609476343\",\n                            \"instructedAmount\": {\n                                \"amount\": \"4102.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"description\": \"Salaray Feb 2019 empl.no:902713\",\n                            \"extendedDescriptionSize\": 99999\n                        }, {\n                            \"counterpartyName\": \"E. Gutierrez\",\n                            \"counterpartyAccountNumber\": \"NL50ABNA4418364501\",\n                            \"instructedAmount\": {\n                                \"amount\": \"5287.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"description\": \"Salaray Feb 2019 empl.no:256869\",\n                            \"extendedDescriptionSize\": 0\n                        }, {\n                            \"counterpartyName\": \"C.M. McAlister\",\n                            \"counterpartyAccountNumber\": \"BE98735114499693\",\n                            \"instructedAmount\": {\n                                \"amount\": \"3398.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"description\": \"Salaray Feb 2019 empl.no:100642\",\n                            \"extendedDescriptionSize\": 456768\n                        }, {\n                            \"counterpartyName\": \"K.C. Bennis\",\n                            \"counterpartyAccountNumber\": \"NL67ABNA5515439724\",\n                            \"instructedAmount\": {\n                                \"amount\": \"4334.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"description\": \"Salaray Feb 2019 empl.no:191872\",\n                            \"extendedDescriptionSize\": 0\n                        }, {\n                            \"counterpartyName\": \"M. Frederiksen\",\n                            \"counterpartyAccountNumber\": \"DE49500105174361358418\",\n                            \"instructedAmount\": {\n                                \"amount\": \"5576.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"description\": \"Salaray Feb 2019 empl.no:068572\",\n                            \"extendedDescriptionSize\": 123,\n                            \"status\": \"REJECTED\",\n                            \"bankStatus\": \"UNPROCESSABLE\",\n                            \"reasonCode\": \"RJ05\",\n                            \"reasonText\": \"Rejected by counterparty bank\",\n                            \"errorDescription\": \"Target account has been closed.\"\n                        }],\n                    \"totalBatchPayments\": 5,\n                    \"batchOrder\": {\n                        \"id\": \"2f3a6d96-f671-4f03-994d-8f6caaa53cab\",\n                        \"name\": \"Employee salaries\",\n                        \"type\": \"SEPACT\",\n                        \"status\": \"ACCEPTED\",\n                        \"totalTransactionsCount\": 5,\n                        \"totalInstructedAmount\": {\n                            \"amount\": \"2400123.00\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"account\": {\n                            \"name\": \"Main Current\",\n                            \"identification\": {\n                                \"identification\": \"CH8739215260566920524\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"requestedExecutionDate\": \"2019-02-18\",\n                        \"fileName\": \"salaries-2019-02.csv\",\n                        \"userFullName\": \"Davy Jones\",\n                        \"uploadCompletedAt\": \"2019-02-22T14:08:34Z\",\n                        \"confidentialType\": \"confidential type\"\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchOrdersHttpServicePostBatchOrdersMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/batch-orders\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"c1263fd6-8bd3-4a0b-be02-5db5cb1d6d06\",\n                    \"status\": \"DRAFT\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchOrdersHttpServicePostBatchPaymentsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"cad9e668-15a4-44bf-832d-67e7b41387ac\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch order not found\",\n                    \"errors\": []\n                }\n            },\n        ]\n    }]);\nconst BatchOrdersHttpServicePutApprovalsByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/approvals\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"batchOrder\": {\n                        \"id\": \"72d17d02-20a9-4f0b-b2b8-f83959eb187e\",\n                        \"name\": \"Salaries May 2019\",\n                        \"type\": \"SEPACT\",\n                        \"creditDebitMixedIndicator\": \"CREDIT\",\n                        \"status\": \"ENTERED\",\n                        \"totalTransactionsCount\": 6504,\n                        \"totalCreditTransactionsCount\": 6504,\n                        \"totalInstructedAmount\": {\n                            \"amount\": \"14009055.00\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"totalCreditInstructedAmount\": {\n                            \"amount\": \"14009055.00\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"account\": {\n                            \"name\": \"Salaries account\",\n                            \"identification\": {\n                                \"identification\": \"NL78ABNA3470416656\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"requestedExecutionDate\": \"2019-05-26\",\n                        \"approval\": {\n                            \"id\": \"00b5ca29-eddd-49f4-a898-c3f185ab9a3a\",\n                            \"userId\": \"4840854b-0597-47a6-8984-87cb50f970eb\",\n                            \"externalUserId\": \"judi-miles\",\n                            \"userFullName\": \"Judi Miles\",\n                            \"serviceAgreementId\": \"ea7b3dfd-29b8-4559-872a-91f5576b56ef\",\n                            \"itemId\": \"72d17d02-20a9-4f0b-b2b8-f83959eb187e\",\n                            \"dataAccessItemId\": \"606c7afa-3c8a-4210-ad25-fc83893a4e49\",\n                            \"resource\": \"Batches\",\n                            \"function\": \"SEPACT\",\n                            \"status\": \"PENDING\",\n                            \"createdAt\": \"2019-08-10T18:09:21Z\",\n                            \"records\": [],\n                            \"canApprove\": true,\n                            \"canReject\": true,\n                            \"finalApprover\": false\n                        }\n                    },\n                    \"approvalStatus\": \"PENDING\"\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Limits has been breached, check the report for more details\",\n                    \"checkTime\": \"2019-10-31T12:12:12Z\",\n                    \"breachReport\": [{\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Service Agreement\",\n                                    \"description\": \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"user-BBID\": \"oleksii\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"THRESHOLD\",\n                                    \"breachedLimitType\": \"PERIODIC\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2019-10-31T00:00:00Z\",\n                                        \"endTime\": \"2019-10-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"250.0\",\n                                    \"currentThreshold\": \"499.9\"\n                                }, {\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"monthly\",\n                                        \"startTime\": \"2019-10-01T00:00:00Z\",\n                                        \"endTime\": \"2019-10-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"9950.0\",\n                                    \"currentThreshold\": \"10000.0\"\n                                }]\n                        }, {\n                            \"user-BBID\": \"oleksii\",\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2019-10-31T00:00:00Z\",\n                                        \"endTime\": \"2019-10-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"500.0\",\n                                    \"currentThreshold\": \"1000.0\"\n                                }]\n                        }, {\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Function Access Group\",\n                                    \"description\": \"Batches approvers\"\n                                }, {\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Function\",\n                                    \"description\": \"Domestic batches\"\n                                }, {\n                                    \"ref\": \"Approve\",\n                                    \"type\": \"Privilege\",\n                                    \"description\": \"Approve\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"THRESHOLD\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2019-10-31T00:00:00Z\",\n                                        \"endTime\": \"2019-10-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"250.0\",\n                                    \"currentThreshold\": \"499.9\"\n                                }]\n                        }, {\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Legal Entity\",\n                                    \"description\": \"Kuhic, Gislason and Kemmer\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"quarterly\",\n                                        \"startTime\": \"2019-10-01T00:00:00Z\",\n                                        \"endTime\": \"2019-12-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"99950.0\",\n                                    \"currentThreshold\": \"100000.0\"\n                                }]\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchOrdersHttpServicePutBatchPaymentByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments/{batchPaymentId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"7dc95f0a-deba-47be-8f5d-6d0454ef271c\",\n                    \"counterpartyName\": \"Uriel Johnson\",\n                    \"counterpartyAccountNumber\": \"HU65109180019369738837536884\",\n                    \"instructedAmount\": {\n                        \"amount\": \"830.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"description\": \"Order 00023162\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch order not found\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch payment not found\",\n                    \"errors\": []\n                }\n            },\n        ]\n    }]);\nconst BatchOrdersHttpServiceUpdateBatchOrderByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"f7e4f0bf-6080-46be-bd5d-7dad2b054495\",\n                    \"name\": \"Employee salaries\",\n                    \"type\": \"SEPACT\",\n                    \"creditDebitMixedIndicator\": \"CREDIT\",\n                    \"status\": \"CANCELLED\",\n                    \"totalTransactionsCount\": 120,\n                    \"totalCreditTransactionsCount\": 120,\n                    \"totalInstructedAmount\": {\n                        \"amount\": \"322038.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"totalCreditInstructedAmount\": {\n                        \"amount\": \"322038.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"account\": {\n                        \"name\": \"Main Current\",\n                        \"identification\": {\n                            \"identification\": \"NL54ABNA2366058993\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"requestedExecutionDate\": \"2012-01-01\",\n                    \"fileName\": \"salaries-2020-01.csv\",\n                    \"userFullName\": \"John Davis\",\n                    \"uploadCompletedAt\": \"2019-12-31T23:55:31Z\",\n                    \"canDelete\": false,\n                    \"canCancel\": false,\n                    \"approval\": {\n                        \"id\": \"ac150312-1bec-4075-934f-23600886cb4e\",\n                        \"userId\": \"64350fcf-ddd1-4cdc-b725-f6c76f89f7c2\",\n                        \"externalUserId\": \"jdavis\",\n                        \"userFullName\": \"John Davis\",\n                        \"serviceAgreementId\": \"c94dc22f-381f-4127-a9f2-db2f5a314e41\",\n                        \"itemId\": \"f7e4f0bf-6080-46be-bd5d-7dad2b054495\",\n                        \"dataAccessItemId\": \"e8daae6b-0276-4533-b64d-e3c73afb47a0\",\n                        \"resource\": \"Batches\",\n                        \"function\": \"SEPACT\",\n                        \"status\": \"PENDING\",\n                        \"createdAt\": \"2019-12-31T23:56:08Z\",\n                        \"records\": [{\n                                \"id\": \"9e61d96d-fea3-44a4-8903-88d95eb266a8\",\n                                \"userId\": \"f34feccc-0d0d-4365-982b-d6d1779e5aaf\",\n                                \"externalUserId\": \"twilliams\",\n                                \"userFullName\": \"Tobi Williams\",\n                                \"approvalTypeId\": \"16f655f3-3abf-438d-8351-2c667d5a3c86\",\n                                \"status\": \"APPROVED\",\n                                \"createdAt\": \"2019-12-31T23:57:20Z\"\n                            }],\n                        \"canApprove\": false,\n                        \"canReject\": false,\n                        \"finalApprover\": false\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"The requested status ({{requestedStatus}}) is not valid. The status can be set to {{expectedStatus}}.\",\n                            \"key\": \"BatchOrderCannotBeUpdated\",\n                            \"context\": {\n                                \"requestedStatus\": \"READY\",\n                                \"expectedStatus\": \"CANCELLED\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict\",\n                    \"errors\": [{\n                            \"message\": \"The current status of the batch order ({{currentStatus}}) does not allow cancellation.\",\n                            \"key\": \"BatchOrderCannotBeCancelled\",\n                            \"context\": {\n                                \"currentStatus\": \"PROCESSED\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict\",\n                    \"errors\": [{\n                            \"message\": \"Only partially approved batch orders can be cancelled.\",\n                            \"key\": \"BatchOrderWithoutApprovalsCannotBeCancelled\"\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchOrdersHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict error\",\n                    \"errors\": [{\n                            \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n                            \"key\": \"transactions.api.billingstatus.transaction\",\n                            \"context\": {\n                                \"billingStatus\": \"BILLED\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments/{batchPaymentId}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch order not found\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch payment not found\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict error\",\n                    \"errors\": [{\n                            \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n                            \"key\": \"transactions.api.billingstatus.transaction\",\n                            \"context\": {\n                                \"billingStatus\": \"BILLED\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/batch-orders\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"batchOrders\": [{\n                            \"id\": \"2f3a6d96-f671-4f03-994d-8f6caaa53cab\",\n                            \"name\": \"Employee salaries\",\n                            \"type\": \"SEPACT\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"status\": \"ACCEPTED\",\n                            \"totalTransactionsCount\": 73500,\n                            \"totalCreditTransactionsCount\": 73500,\n                            \"totalInstructedAmount\": {\n                                \"amount\": \"2400123.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"2400123.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"account\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": {\n                                    \"identification\": \"CH8739215260566920524\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"requestedExecutionDate\": \"2019-02-18\",\n                            \"canDelete\": false,\n                            \"canCancel\": false\n                        }, {\n                            \"id\": \"33295f9c-95ec-42f9-9817-64f7d48be023\",\n                            \"name\": \"Employee salaries\",\n                            \"type\": \"SEPACT\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"status\": \"ACCEPTED\",\n                            \"totalTransactionsCount\": 75930,\n                            \"totalCreditTransactionsCount\": 75930,\n                            \"totalInstructedAmount\": {\n                                \"amount\": \"2479474.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"2479474.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"account\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": {\n                                    \"identification\": \"CH8739215260566920524\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"requestedExecutionDate\": \"2019-03-18\",\n                            \"canDelete\": false,\n                            \"canCancel\": false\n                        }, {\n                            \"id\": \"f3da0418-c801-4db1-ae52-597f1459b525\",\n                            \"name\": \"Employee salaries\",\n                            \"type\": \"SEPACT\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"status\": \"ENTERED\",\n                            \"totalTransactionsCount\": 78791,\n                            \"totalCreditTransactionsCount\": 78791,\n                            \"totalInstructedAmount\": {\n                                \"amount\": \"2552947.15\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"2552947.15\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"account\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": {\n                                    \"identification\": \"CH8739215260566920524\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"requestedExecutionDate\": \"2019-04-18\",\n                            \"canDelete\": true,\n                            \"canCancel\": false\n                        }],\n                    \"totalBatchOrders\": 3,\n                    \"creditDebitMixedIndicator\": \"CREDIT\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"batchOrders\": [{\n                            \"id\": \"a8e1ba16-d9be-4dd4-92b8-e2fbfe138b71\",\n                            \"name\": \"Employees salaries May\",\n                            \"type\": \"SEPACT\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"status\": \"ENTERED\",\n                            \"totalTransactionsCount\": 71,\n                            \"totalCreditTransactionsCount\": 71,\n                            \"totalInstructedAmount\": {\n                                \"amount\": \"191056.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"191056.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"account\": {\n                                \"name\": \"Salaries Account\",\n                                \"identification\": {\n                                    \"identification\": \"ST42353317399261373273497\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"requestedExecutionDate\": \"2019-05-27\",\n                            \"approval\": {\n                                \"id\": \"9bb143b1-bdb3-4ca5-9631-e02e743d6a10\",\n                                \"userId\": \"23b8a2ac-e8bb-46b1-98d2-a2da71dfd646\",\n                                \"externalUserId\": \"judi-miles\",\n                                \"userFullName\": \"Judi Miles\",\n                                \"serviceAgreementId\": \"e3e718d8-8f2e-4ef4-bf27-22580759b742\",\n                                \"itemId\": \"a8e1ba16-d9be-4dd4-92b8-e2fbfe138b71\",\n                                \"dataAccessItemId\": \"ac59c1a1-3729-4514-8051-5015dd0aadef\",\n                                \"resource\": \"Batches\",\n                                \"function\": \"SEPACT\",\n                                \"status\": \"PENDING\",\n                                \"createdAt\": \"2019-05-10T10:29:10Z\",\n                                \"records\": [],\n                                \"canApprove\": true,\n                                \"canReject\": true,\n                                \"finalApprover\": true\n                            },\n                            \"canDelete\": false,\n                            \"canCancel\": false\n                        }],\n                    \"totalBatchOrders\": 1,\n                    \"creditDebitMixedIndicator\": \"CREDIT\"\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"2f3a6d96-f671-4f03-994d-8f6caaa53cab\",\n                    \"name\": \"Employee salaries\",\n                    \"type\": \"SEPACT\",\n                    \"creditDebitMixedIndicator\": \"CREDIT\",\n                    \"status\": \"ACCEPTED\",\n                    \"totalTransactionsCount\": 73500,\n                    \"totalCreditTransactionsCount\": 73500,\n                    \"totalInstructedAmount\": {\n                        \"amount\": \"2400123.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"totalCreditInstructedAmount\": {\n                        \"amount\": \"2400123.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"account\": {\n                        \"name\": \"Main Current\",\n                        \"identification\": {\n                            \"identification\": \"CH8739215260566920524\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"requestedExecutionDate\": \"2019-02-18\",\n                    \"fileName\": \"salaries-2019-02.csv\",\n                    \"userFullName\": \"Davy Jones\",\n                    \"uploadCompletedAt\": \"2019-02-22T14:08:34Z\",\n                    \"canDelete\": false,\n                    \"canCancel\": false\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"2fd15c69-c4da-4c58-986f-d46082057bf5\",\n                    \"name\": \"End of Q2 payments\",\n                    \"type\": \"SEPACT\",\n                    \"status\": \"ENTERED\",\n                    \"totalTransactionsCount\": 2109,\n                    \"totalInstructedAmount\": {\n                        \"amount\": \"280810.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"account\": {\n                        \"name\": \"Main\",\n                        \"identification\": {\n                            \"identification\": \"NO0741575812927\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"requestedExecutionDate\": \"2019-05-31\",\n                    \"fileName\": \"2019-Q2-payments.csv\",\n                    \"userFullName\": \"Tommy Perrotti\",\n                    \"uploadCompletedAt\": \"2019-05-16T14:09:30Z\",\n                    \"approval\": {\n                        \"id\": \"9966c07c-1547-42a5-9bc7-91986ff33993\",\n                        \"userId\": \"c3608888-faa3-4f23-9c5a-269dd39caea5\",\n                        \"externalUserId\": \"judi-miles\",\n                        \"userFullName\": \"Judi Miles\",\n                        \"serviceAgreementId\": \"64f538bf-3f5d-4dd9-8de7-ba7082da198d\",\n                        \"itemId\": \"2fd15c69-c4da-4c58-986f-d46082057bf5\",\n                        \"dataAccessItemId\": \"f094b702-e912-434c-8e49-12c56fc78551\",\n                        \"resource\": \"Batches\",\n                        \"function\": \"SEPACT\",\n                        \"status\": \"PENDING\",\n                        \"createdAt\": \"2019-05-16T14:09:40Z\",\n                        \"records\": [{\n                                \"id\": \"9e61d96d-fea3-44a4-8903-88d95eb266a8\",\n                                \"userId\": \"f34feccc-0d0d-4365-982b-d6d1779e5aaf\",\n                                \"externalUserId\": \"bigWillie\",\n                                \"userFullName\": \"Willie Iles\",\n                                \"approvalTypeId\": \"ece87cfe-33f9-45a4-8c51-a04a9f905c66\",\n                                \"status\": \"APPROVED\",\n                                \"createdAt\": \"2019-05-17T13:44:02Z\"\n                            }],\n                        \"canApprove\": false,\n                        \"canReject\": false,\n                        \"finalApprover\": false\n                    },\n                    \"canDelete\": false,\n                    \"canCancel\": true\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"b438751d-6e6a-4601-8009-a82fa22bddcc\",\n                    \"name\": \"Employee salaries\",\n                    \"type\": \"SEPACT\",\n                    \"status\": \"REJECTED\",\n                    \"totalTransactionsCount\": 9208,\n                    \"totalInstructedAmount\": {\n                        \"amount\": \"50343009.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"account\": {\n                        \"name\": \"Main Account 8\",\n                        \"identification\": {\n                            \"identification\": \"NL18ABNA4956451237\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"requestedExecutionDate\": \"2019-09-15\",\n                    \"description\": \"Salary Sep 2019\",\n                    \"bankStatus\": \"UNPROCESSABLE\",\n                    \"reasonCode\": \"RJ08\",\n                    \"reasonText\": \"Insufficient funds\",\n                    \"errorDescription\": \"Target account has not enough funds to execute batch payments\",\n                    \"fileName\": \"salaries-2019-02.csv\",\n                    \"userFullName\": \"Davy Jones\",\n                    \"uploadCompletedAt\": \"2019-02-22T14:08:34Z\",\n                    \"canDelete\": false,\n                    \"canCancel\": false\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"2f4c4bb6-c107-473a-adbd-7343b8f0ea80\",\n                    \"name\": \"Salaries 2020-12\",\n                    \"type\": \"ACH_CREDIT\",\n                    \"status\": \"ACCEPTED\",\n                    \"totalTransactionsCount\": 401,\n                    \"totalInstructedAmount\": {\n                        \"amount\": \"650980.25\",\n                        \"currencyCode\": \"USD\"\n                    },\n                    \"account\": {\n                        \"name\": \"Current Account\",\n                        \"identification\": {\n                            \"identification\": \"7649373647\",\n                            \"schemeName\": \"BBAN\"\n                        }\n                    },\n                    \"bankBranchCode\": \"113105452\",\n                    \"companyId\": \"1800948594\",\n                    \"companyName\": \"Your Company\",\n                    \"requestedExecutionDate\": \"2020-12-18\",\n                    \"fileName\": \"salaries-2020-12.ach\",\n                    \"userFullName\": \"Ben Jones\",\n                    \"uploadCompletedAt\": \"2020-12-15T15:28:10Z\",\n                    \"canDelete\": false,\n                    \"canCancel\": false\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments/{batchPaymentId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"counterpartyName\": \"M. Frederiksen\",\n                    \"counterpartyAccountNumber\": \"DE49500105174361358418\",\n                    \"instructedAmount\": {\n                        \"amount\": \"5576.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"description\": \"Salary Feb 2019 empl.no:068572\",\n                    \"status\": \"REJECTED\",\n                    \"extendedDescription\": \"Addenda record for the credit payment \\nAddenda record for the credit payment\",\n                    \"bankStatus\": \"UNPROCESSABLE\",\n                    \"reasonCode\": \"RJ05\",\n                    \"reasonText\": \"Rejected by counterparty bank\",\n                    \"errorDescription\": \"Target account has been closed.\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"batchPayments\": [{\n                            \"counterpartyName\": \"A. Hamers\",\n                            \"counterpartyAccountNumber\": \"NL62ABNA0609476343\",\n                            \"instructedAmount\": {\n                                \"amount\": \"4102.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"description\": \"Salaray Feb 2019 empl.no:902713\",\n                            \"extendedDescriptionSize\": 99999\n                        }, {\n                            \"counterpartyName\": \"E. Gutierrez\",\n                            \"counterpartyAccountNumber\": \"NL50ABNA4418364501\",\n                            \"instructedAmount\": {\n                                \"amount\": \"5287.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"description\": \"Salaray Feb 2019 empl.no:256869\",\n                            \"extendedDescriptionSize\": 0\n                        }, {\n                            \"counterpartyName\": \"C.M. McAlister\",\n                            \"counterpartyAccountNumber\": \"BE98735114499693\",\n                            \"instructedAmount\": {\n                                \"amount\": \"3398.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"description\": \"Salaray Feb 2019 empl.no:100642\",\n                            \"extendedDescriptionSize\": 456768\n                        }, {\n                            \"counterpartyName\": \"K.C. Bennis\",\n                            \"counterpartyAccountNumber\": \"NL67ABNA5515439724\",\n                            \"instructedAmount\": {\n                                \"amount\": \"4334.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"description\": \"Salaray Feb 2019 empl.no:191872\",\n                            \"extendedDescriptionSize\": 0\n                        }, {\n                            \"counterpartyName\": \"M. Frederiksen\",\n                            \"counterpartyAccountNumber\": \"DE49500105174361358418\",\n                            \"instructedAmount\": {\n                                \"amount\": \"5576.00\",\n                                \"currencyCode\": \"EUR\"\n                            },\n                            \"description\": \"Salaray Feb 2019 empl.no:068572\",\n                            \"extendedDescriptionSize\": 123,\n                            \"status\": \"REJECTED\",\n                            \"bankStatus\": \"UNPROCESSABLE\",\n                            \"reasonCode\": \"RJ05\",\n                            \"reasonText\": \"Rejected by counterparty bank\",\n                            \"errorDescription\": \"Target account has been closed.\"\n                        }],\n                    \"totalBatchPayments\": 5,\n                    \"batchOrder\": {\n                        \"id\": \"2f3a6d96-f671-4f03-994d-8f6caaa53cab\",\n                        \"name\": \"Employee salaries\",\n                        \"type\": \"SEPACT\",\n                        \"status\": \"ACCEPTED\",\n                        \"totalTransactionsCount\": 5,\n                        \"totalInstructedAmount\": {\n                            \"amount\": \"2400123.00\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"account\": {\n                            \"name\": \"Main Current\",\n                            \"identification\": {\n                                \"identification\": \"CH8739215260566920524\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"requestedExecutionDate\": \"2019-02-18\",\n                        \"fileName\": \"salaries-2019-02.csv\",\n                        \"userFullName\": \"Davy Jones\",\n                        \"uploadCompletedAt\": \"2019-02-22T14:08:34Z\",\n                        \"confidentialType\": \"confidential type\"\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/batch-orders\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"c1263fd6-8bd3-4a0b-be02-5db5cb1d6d06\",\n                    \"status\": \"DRAFT\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"cad9e668-15a4-44bf-832d-67e7b41387ac\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch order not found\",\n                    \"errors\": []\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/approvals\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"batchOrder\": {\n                        \"id\": \"72d17d02-20a9-4f0b-b2b8-f83959eb187e\",\n                        \"name\": \"Salaries May 2019\",\n                        \"type\": \"SEPACT\",\n                        \"creditDebitMixedIndicator\": \"CREDIT\",\n                        \"status\": \"ENTERED\",\n                        \"totalTransactionsCount\": 6504,\n                        \"totalCreditTransactionsCount\": 6504,\n                        \"totalInstructedAmount\": {\n                            \"amount\": \"14009055.00\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"totalCreditInstructedAmount\": {\n                            \"amount\": \"14009055.00\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"account\": {\n                            \"name\": \"Salaries account\",\n                            \"identification\": {\n                                \"identification\": \"NL78ABNA3470416656\",\n                                \"schemeName\": \"IBAN\"\n                            }\n                        },\n                        \"requestedExecutionDate\": \"2019-05-26\",\n                        \"approval\": {\n                            \"id\": \"00b5ca29-eddd-49f4-a898-c3f185ab9a3a\",\n                            \"userId\": \"4840854b-0597-47a6-8984-87cb50f970eb\",\n                            \"externalUserId\": \"judi-miles\",\n                            \"userFullName\": \"Judi Miles\",\n                            \"serviceAgreementId\": \"ea7b3dfd-29b8-4559-872a-91f5576b56ef\",\n                            \"itemId\": \"72d17d02-20a9-4f0b-b2b8-f83959eb187e\",\n                            \"dataAccessItemId\": \"606c7afa-3c8a-4210-ad25-fc83893a4e49\",\n                            \"resource\": \"Batches\",\n                            \"function\": \"SEPACT\",\n                            \"status\": \"PENDING\",\n                            \"createdAt\": \"2019-08-10T18:09:21Z\",\n                            \"records\": [],\n                            \"canApprove\": true,\n                            \"canReject\": true,\n                            \"finalApprover\": false\n                        }\n                    },\n                    \"approvalStatus\": \"PENDING\"\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Limits has been breached, check the report for more details\",\n                    \"checkTime\": \"2019-10-31T12:12:12Z\",\n                    \"breachReport\": [{\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Service Agreement\",\n                                    \"description\": \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"user-BBID\": \"oleksii\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"THRESHOLD\",\n                                    \"breachedLimitType\": \"PERIODIC\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2019-10-31T00:00:00Z\",\n                                        \"endTime\": \"2019-10-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"250.0\",\n                                    \"currentThreshold\": \"499.9\"\n                                }, {\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"monthly\",\n                                        \"startTime\": \"2019-10-01T00:00:00Z\",\n                                        \"endTime\": \"2019-10-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"9950.0\",\n                                    \"currentThreshold\": \"10000.0\"\n                                }]\n                        }, {\n                            \"user-BBID\": \"oleksii\",\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2019-10-31T00:00:00Z\",\n                                        \"endTime\": \"2019-10-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"500.0\",\n                                    \"currentThreshold\": \"1000.0\"\n                                }]\n                        }, {\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Function Access Group\",\n                                    \"description\": \"Batches approvers\"\n                                }, {\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Function\",\n                                    \"description\": \"Domestic batches\"\n                                }, {\n                                    \"ref\": \"Approve\",\n                                    \"type\": \"Privilege\",\n                                    \"description\": \"Approve\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"THRESHOLD\",\n                                    \"timeframe\": {\n                                        \"period\": \"daily\",\n                                        \"startTime\": \"2019-10-31T00:00:00Z\",\n                                        \"endTime\": \"2019-10-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"250.0\",\n                                    \"currentThreshold\": \"499.9\"\n                                }]\n                        }, {\n                            \"limitedEntity\": [{\n                                    \"ref\": \"1234567-12312-123123\",\n                                    \"type\": \"Legal Entity\",\n                                    \"description\": \"Kuhic, Gislason and Kemmer\"\n                                }],\n                            \"shadow\": false,\n                            \"currency\": \"EUR\",\n                            \"breachInfo\": [{\n                                    \"breachType\": \"CONSUMPTION\",\n                                    \"timeframe\": {\n                                        \"period\": \"quarterly\",\n                                        \"startTime\": \"2019-10-01T00:00:00Z\",\n                                        \"endTime\": \"2019-12-31T23:59:59Z\"\n                                    },\n                                    \"currentConsumption\": \"99950.0\",\n                                    \"currentThreshold\": \"100000.0\"\n                                }]\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}/batch-payments/{batchPaymentId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"7dc95f0a-deba-47be-8f5d-6d0454ef271c\",\n                    \"counterpartyName\": \"Uriel Johnson\",\n                    \"counterpartyAccountNumber\": \"HU65109180019369738837536884\",\n                    \"instructedAmount\": {\n                        \"amount\": \"830.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"description\": \"Order 00023162\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch order not found\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch payment not found\",\n                    \"errors\": []\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/batch-orders/{batchOrderId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"f7e4f0bf-6080-46be-bd5d-7dad2b054495\",\n                    \"name\": \"Employee salaries\",\n                    \"type\": \"SEPACT\",\n                    \"creditDebitMixedIndicator\": \"CREDIT\",\n                    \"status\": \"CANCELLED\",\n                    \"totalTransactionsCount\": 120,\n                    \"totalCreditTransactionsCount\": 120,\n                    \"totalInstructedAmount\": {\n                        \"amount\": \"322038.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"totalCreditInstructedAmount\": {\n                        \"amount\": \"322038.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"account\": {\n                        \"name\": \"Main Current\",\n                        \"identification\": {\n                            \"identification\": \"NL54ABNA2366058993\",\n                            \"schemeName\": \"IBAN\"\n                        }\n                    },\n                    \"requestedExecutionDate\": \"2012-01-01\",\n                    \"fileName\": \"salaries-2020-01.csv\",\n                    \"userFullName\": \"John Davis\",\n                    \"uploadCompletedAt\": \"2019-12-31T23:55:31Z\",\n                    \"canDelete\": false,\n                    \"canCancel\": false,\n                    \"approval\": {\n                        \"id\": \"ac150312-1bec-4075-934f-23600886cb4e\",\n                        \"userId\": \"64350fcf-ddd1-4cdc-b725-f6c76f89f7c2\",\n                        \"externalUserId\": \"jdavis\",\n                        \"userFullName\": \"John Davis\",\n                        \"serviceAgreementId\": \"c94dc22f-381f-4127-a9f2-db2f5a314e41\",\n                        \"itemId\": \"f7e4f0bf-6080-46be-bd5d-7dad2b054495\",\n                        \"dataAccessItemId\": \"e8daae6b-0276-4533-b64d-e3c73afb47a0\",\n                        \"resource\": \"Batches\",\n                        \"function\": \"SEPACT\",\n                        \"status\": \"PENDING\",\n                        \"createdAt\": \"2019-12-31T23:56:08Z\",\n                        \"records\": [{\n                                \"id\": \"9e61d96d-fea3-44a4-8903-88d95eb266a8\",\n                                \"userId\": \"f34feccc-0d0d-4365-982b-d6d1779e5aaf\",\n                                \"externalUserId\": \"twilliams\",\n                                \"userFullName\": \"Tobi Williams\",\n                                \"approvalTypeId\": \"16f655f3-3abf-438d-8351-2c667d5a3c86\",\n                                \"status\": \"APPROVED\",\n                                \"createdAt\": \"2019-12-31T23:57:20Z\"\n                            }],\n                        \"canApprove\": false,\n                        \"canReject\": false,\n                        \"finalApprover\": false\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"The requested status ({{requestedStatus}}) is not valid. The status can be set to {{expectedStatus}}.\",\n                            \"key\": \"BatchOrderCannotBeUpdated\",\n                            \"context\": {\n                                \"requestedStatus\": \"READY\",\n                                \"expectedStatus\": \"CANCELLED\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict\",\n                    \"errors\": [{\n                            \"message\": \"The current status of the batch order ({{currentStatus}}) does not allow cancellation.\",\n                            \"key\": \"BatchOrderCannotBeCancelled\",\n                            \"context\": {\n                                \"currentStatus\": \"PROCESSED\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict\",\n                    \"errors\": [{\n                            \"message\": \"Only partially approved batch orders can be cancelled.\",\n                            \"key\": \"BatchOrderWithoutApprovalsCannotBeCancelled\"\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nclass BatchUploadsHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new PaymentBatchConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    canConsumeForm(consumes) {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    createBatchOrdersForId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchUploadId = requestParameters[\"batchUploadId\"];\n        if (_batchUploadId === null || _batchUploadId === undefined) {\n            throw new Error('Required parameter batchUploadId was null or undefined when calling createBatchOrdersForId.');\n        }\n        const _confidentialType = requestParameters[\"confidentialType\"];\n        const _file = requestParameters[\"file\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_confidentialType !== undefined && _confidentialType !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _confidentialType, 'confidentialType');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'multipart/form-data'\n        ];\n        const canConsumeForm = this.canConsumeForm(consumes);\n        let formParams;\n        let useForm = false;\n        let convertFormParamsToString = false;\n        useForm = canConsumeForm;\n        if (useForm) {\n            formParams = new FormData();\n        }\n        else {\n            formParams = new HttpParams({ encoder: this.encoder });\n        }\n        if (_file !== undefined) {\n            formParams = formParams.append('file', _file) || formParams;\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/batch-uploads/${encodeURIComponent(String(_batchUploadId))}/batch-orders`, convertFormParamsToString ? formParams.toString() : formParams, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    createBatchOrdersForIdUrl(requestParameters) {\n        const _batchUploadId = requestParameters[\"batchUploadId\"];\n        if (_batchUploadId === null || _batchUploadId === undefined) {\n            throw new Error('Required parameter batchUploadId was null or undefined when calling createBatchOrdersForId.');\n        }\n        const _confidentialType = requestParameters[\"confidentialType\"];\n        const _file = requestParameters[\"file\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_confidentialType !== undefined && _confidentialType !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _confidentialType, 'confidentialType');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/batch-uploads/${encodeURIComponent(String(_batchUploadId))}/batch-orders${queryString ? `?${queryString}` : ''}`;\n    }\n    deleteBatchUploadById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchUploadId = requestParameters[\"batchUploadId\"];\n        if (_batchUploadId === null || _batchUploadId === undefined) {\n            throw new Error('Required parameter batchUploadId was null or undefined when calling deleteBatchUploadById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/batch-uploads/${encodeURIComponent(String(_batchUploadId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deleteBatchUploadByIdUrl(requestParameters) {\n        const _batchUploadId = requestParameters[\"batchUploadId\"];\n        if (_batchUploadId === null || _batchUploadId === undefined) {\n            throw new Error('Required parameter batchUploadId was null or undefined when calling deleteBatchUploadById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/batch-uploads/${encodeURIComponent(String(_batchUploadId))}`;\n    }\n    getBatchUploadById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchUploadId = requestParameters[\"batchUploadId\"];\n        if (_batchUploadId === null || _batchUploadId === undefined) {\n            throw new Error('Required parameter batchUploadId was null or undefined when calling getBatchUploadById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/batch-uploads/${encodeURIComponent(String(_batchUploadId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getBatchUploadByIdUrl(requestParameters) {\n        const _batchUploadId = requestParameters[\"batchUploadId\"];\n        if (_batchUploadId === null || _batchUploadId === undefined) {\n            throw new Error('Required parameter batchUploadId was null or undefined when calling getBatchUploadById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/batch-uploads/${encodeURIComponent(String(_batchUploadId))}`;\n    }\n    getBatchUploads(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/batch-uploads`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getBatchUploadsUrl(requestParameters) {\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/batch-uploads${queryString ? `?${queryString}` : ''}`;\n    }\n    putBatchUploadIdByBatchUploadId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchUploadId = requestParameters[\"batchUploadId\"];\n        if (_batchUploadId === null || _batchUploadId === undefined) {\n            throw new Error('Required parameter batchUploadId was null or undefined when calling putBatchUploadIdByBatchUploadId.');\n        }\n        const _batchUploadPutRequest = requestParameters[\"batchUploadPutRequest\"];\n        if (_batchUploadPutRequest === null || _batchUploadPutRequest === undefined) {\n            throw new Error('Required parameter batchUploadPutRequest was null or undefined when calling putBatchUploadIdByBatchUploadId.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/batch-uploads/${encodeURIComponent(String(_batchUploadId))}`, _batchUploadPutRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putBatchUploadIdByBatchUploadIdUrl(requestParameters) {\n        const _batchUploadId = requestParameters[\"batchUploadId\"];\n        if (_batchUploadId === null || _batchUploadId === undefined) {\n            throw new Error('Required parameter batchUploadId was null or undefined when calling putBatchUploadIdByBatchUploadId.');\n        }\n        const _batchUploadPutRequest = requestParameters[\"batchUploadPutRequest\"];\n        if (_batchUploadPutRequest === null || _batchUploadPutRequest === undefined) {\n            throw new Error('Required parameter batchUploadPutRequest was null or undefined when calling putBatchUploadIdByBatchUploadId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/batch-uploads/${encodeURIComponent(String(_batchUploadId))}`;\n    }\n    startBatchUpload(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _startUploadBatchOrdersPostRequest = requestParameters[\"startUploadBatchOrdersPostRequest\"];\n        if (_startUploadBatchOrdersPostRequest === null || _startUploadBatchOrdersPostRequest === undefined) {\n            throw new Error('Required parameter startUploadBatchOrdersPostRequest was null or undefined when calling startBatchUpload.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/batch-uploads`, _startUploadBatchOrdersPostRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    startBatchUploadUrl(requestParameters) {\n        const _startUploadBatchOrdersPostRequest = requestParameters[\"startUploadBatchOrdersPostRequest\"];\n        if (_startUploadBatchOrdersPostRequest === null || _startUploadBatchOrdersPostRequest === undefined) {\n            throw new Error('Required parameter startUploadBatchOrdersPostRequest was null or undefined when calling startBatchUpload.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/batch-uploads`;\n    }\n}\nBatchUploadsHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BatchUploadsHttpService, deps: [{ token: i1.HttpClient }, { token: PAYMENT_BATCH_BASE_PATH, optional: true }, { token: PaymentBatchConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nBatchUploadsHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BatchUploadsHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BatchUploadsHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [PAYMENT_BATCH_BASE_PATH]\n                }] }, { type: PaymentBatchConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst BatchUploadsHttpServiceCreateBatchOrdersForIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/batch-uploads/{batchUploadId}/batch-orders\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 202,\n                body: {\n                    \"id\": \"b51c4261-54c9-42e5-b5ae-4c1390b890d8\",\n                    \"status\": \"DONE\",\n                    \"totalBatchOrdersCount\": 3,\n                    \"totalTransactionsCount\": 10211,\n                    \"size\": 94371840,\n                    \"uploadedSize\": 94371840\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"id\": \"0288dde3-9b89-4997-9e57-54684bf3c3c1\",\n                    \"status\": \"DUPLICATE\",\n                    \"totalBatchOrdersCount\": 3,\n                    \"totalTransactionsCount\": 10211,\n                    \"size\": 94371840,\n                    \"uploadedSize\": 94371840\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"The request was rejected because its size exceeds the configured maximum ({{maxSize}})\",\n                            \"key\": \"UploadExceedsMaxSize\",\n                            \"context\": {\n                                \"maxSize\": \"104857600\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"Total amount of batch ({{actual}}) does not match the expected amount ({{expected}})\",\n                            \"key\": \"TotalAmountMismatch\",\n                            \"context\": {\n                                \"actual\": \"2400123.00\",\n                                \"expected\": \"2398675.00\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"Total number of batches ({{actual}}) does not match the expected number ({{expected}})\",\n                            \"key\": \"TotalBatchMismatch\",\n                            \"context\": {\n                                \"actual\": \"3\",\n                                \"expected\": \"4\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"The integer part of '{{amount}}' for '{{fieldName}}' exceeds the maximum number of digits {{maximum}}\",\n                            \"key\": \"AmountContainsTooManyDigits\",\n                            \"context\": {\n                                \"amount\": \"1234567890123456789.123456\",\n                                \"fieldName\": \"batchTotalAmount\",\n                                \"maximum\": \"18\"\n                            }\n                        }, {\n                            \"message\": \"The fractional part of '{{amount}}' for '{{fieldName}}' exceeds the maximum number of decimal digits {{maximum}}\",\n                            \"key\": \"AmountContainsTooManyDecimalDigits\",\n                            \"context\": {\n                                \"amount\": \"1234567890123456789.123456\",\n                                \"fieldName\": \"batchTotalAmount\",\n                                \"maximum\": \"5\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchUploadsHttpServiceDeleteBatchUploadByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/batch-uploads/{batchUploadId}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict\",\n                    \"errors\": [{\n                            \"message\": \"The current status of the batch upload ({{currentStatus}}) does not allow deleting the batch upload.\",\n                            \"key\": \"BatchUploadCannotBeDeleted\",\n                            \"context\": {\n                                \"currentStatus\": \"OPEN\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchUploadsHttpServiceGetBatchUploadByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/batch-uploads/{batchUploadId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n                    \"status\": \"OPEN\",\n                    \"file\": {\n                        \"name\": \"salaries-2019-02.csv\",\n                        \"size\": 94371840,\n                        \"uploadedSize\": 18874368\n                    },\n                    \"batchFileType\": \"BB_SEPACT_CSV\",\n                    \"totalBatchOrdersCount\": 3,\n                    \"createdAt\": \"2019-02-22T13:44:02Z\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n                    \"status\": \"OPEN\",\n                    \"file\": {\n                        \"name\": \"salaries-2019-02.csv\",\n                        \"size\": 94371840,\n                        \"uploadedSize\": 42467328\n                    },\n                    \"batchFileType\": \"BB_SEPACT_CSV\",\n                    \"totalBatchOrdersCount\": 3,\n                    \"createdAt\": \"2019-02-22T13:44:02Z\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n                    \"status\": \"OPEN\",\n                    \"file\": {\n                        \"name\": \"salaries-2019-02.csv\",\n                        \"size\": 94371840,\n                        \"uploadedSize\": 70778880\n                    },\n                    \"batchFileType\": \"BB_SEPACT_CSV\",\n                    \"totalBatchOrdersCount\": 3,\n                    \"createdAt\": \"2019-02-22T13:44:02Z\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n                    \"status\": \"UPLOADED\",\n                    \"file\": {\n                        \"name\": \"salaries-2019-02.csv\",\n                        \"size\": 94371840,\n                        \"uploadedSize\": 94371840\n                    },\n                    \"batchFileType\": \"BB_SEPACT_CSV\",\n                    \"totalBatchOrdersCount\": 3,\n                    \"createdAt\": \"2019-02-22T13:44:02Z\",\n                    \"completedAt\": \"2019-02-22T14:08:34Z\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n                    \"status\": \"DONE\",\n                    \"file\": {\n                        \"name\": \"salaries-2019-12.csv\",\n                        \"size\": 54371840,\n                        \"uploadedSize\": 54371840,\n                        \"lastModified\": \"2019-12-22T08:06:00Z\"\n                    },\n                    \"digest\": {\n                        \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n                        \"algorithm\": \"SHA-256\"\n                    },\n                    \"batchFileType\": \"BB_SEPACT_CSV\",\n                    \"totalBatchOrdersCount\": 1,\n                    \"createdAt\": \"2019-12-24T07:09:33Z\",\n                    \"completedAt\": \"2019-12-24T07:11:09Z\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"3650f774-2a95-4bfb-9f00-1c58fc1af0c6\",\n                    \"status\": \"DUPLICATE\",\n                    \"file\": {\n                        \"name\": \"salaries-2019-12.csv\",\n                        \"size\": 54371840,\n                        \"uploadedSize\": 54371840,\n                        \"lastModified\": \"2019-12-22T08:06:00Z\"\n                    },\n                    \"digest\": {\n                        \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n                        \"algorithm\": \"SHA-256\"\n                    },\n                    \"batchFileType\": \"BB_SEPACT_CSV\",\n                    \"totalBatchOrdersCount\": 1,\n                    \"createdAt\": \"2019-12-28T09:11:13Z\",\n                    \"completedAt\": \"2019-12-28T09:13:23Z\",\n                    \"duplicates\": [{\n                            \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n                            \"status\": \"DONE\",\n                            \"file\": {\n                                \"name\": \"salaries-2019-12.csv\",\n                                \"size\": 54371840,\n                                \"uploadedSize\": 54371840,\n                                \"lastModified\": \"2019-12-22T08:06:00Z\"\n                            },\n                            \"digest\": {\n                                \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n                                \"algorithm\": \"SHA-256\"\n                            },\n                            \"batchFileType\": \"BB_SEPACT_CSV\",\n                            \"totalBatchOrdersCount\": 1,\n                            \"createdAt\": \"2019-12-24T07:09:33Z\",\n                            \"completedAt\": \"2019-12-24T07:11:09Z\"\n                        }],\n                    \"errors\": []\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"80467759-0178-4231-af61-003bf1bc842b\",\n                    \"totalBatchOrdersCount\": 3,\n                    \"size\": 94371840,\n                    \"uploadedSize\": 94371840,\n                    \"status\": \"FAILED\",\n                    \"errors\": [{\n                            \"message\": \"The actual total amount ({{totalAmount}}) does not match the expected total amount ({{headerTotalAmount}})\",\n                            \"key\": \"TotalAmountMismatch\",\n                            \"context\": {\n                                \"totalAmount\": \"2400123.00\",\n                                \"headerTotalAmount\": \"2398675.00\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"9151b4d0-f058-4b01-8bed-474dfc34831e\",\n                    \"totalBatchOrdersCount\": 4,\n                    \"size\": 94371840,\n                    \"uploadedSize\": 94371840,\n                    \"status\": \"FAILED\",\n                    \"errors\": [{\n                            \"message\": \"Total number of batches ({{actual}}) does not match the expected number ({{expected}})\",\n                            \"key\": \"TotalBatchMismatch\",\n                            \"context\": {\n                                \"actual\": \"3\",\n                                \"expected\": \"4\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchUploadsHttpServiceGetBatchUploadsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/batch-uploads\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"batchUploads\": [{\n                            \"id\": \"3d0e77b1-08fc-490d-898c-694169c76a2f\",\n                            \"status\": \"FAILED\",\n                            \"file\": {\n                                \"name\": \"salaries-2019-02.csv\",\n                                \"size\": 94370816\n                            },\n                            \"batchFileType\": \"BB_SEPACT_CSV\",\n                            \"totalBatchOrdersCount\": 3,\n                            \"createdAt\": \"2019-02-22T13:14:37Z\"\n                        }, {\n                            \"id\": \"82c85c38-35af-4fa8-87e5-d8374937cac2\",\n                            \"status\": \"DONE\",\n                            \"file\": {\n                                \"name\": \"salaries-2019-02.csv\",\n                                \"size\": 94371840,\n                                \"uploadedSize\": 94371840,\n                                \"lastModified\": \"2019-12-22T08:06:00Z\"\n                            },\n                            \"digest\": {\n                                \"value\": \"d6099d20c5866e317bebbc69cc0eb681\",\n                                \"algorithm\": \"MD5\"\n                            },\n                            \"batchFileType\": \"BB_SEPACT_CSV\",\n                            \"totalBatchOrdersCount\": 3,\n                            \"createdAt\": \"2019-02-22T13:44:02Z\",\n                            \"completedAt\": \"2019-02-22T14:08:34Z\"\n                        }, {\n                            \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n                            \"status\": \"DONE\",\n                            \"file\": {\n                                \"name\": \"salaries-2019-12.csv\",\n                                \"size\": 54371840,\n                                \"uploadedSize\": 54371840,\n                                \"lastModified\": \"2019-12-22T08:06:00Z\"\n                            },\n                            \"digest\": {\n                                \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n                                \"algorithm\": \"SHA-256\"\n                            },\n                            \"batchFileType\": \"BB_SEPACT_CSV\",\n                            \"totalBatchOrdersCount\": 1,\n                            \"createdAt\": \"2019-12-24T07:09:33Z\",\n                            \"completedAt\": \"2019-12-24T07:11:09Z\"\n                        }, {\n                            \"id\": \"3650f774-2a95-4bfb-9f00-1c58fc1af0c6\",\n                            \"status\": \"DUPLICATE\",\n                            \"file\": {\n                                \"name\": \"salaries-2019-12.csv\",\n                                \"size\": 54371840,\n                                \"uploadedSize\": 54371840,\n                                \"lastModified\": \"2019-12-22T08:06:00Z\"\n                            },\n                            \"digest\": {\n                                \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n                                \"algorithm\": \"SHA-256\"\n                            },\n                            \"batchFileType\": \"BB_SEPACT_CSV\",\n                            \"totalBatchOrdersCount\": 1,\n                            \"createdAt\": \"2019-12-28T09:11:13Z\",\n                            \"completedAt\": \"2019-12-28T09:13:23Z\"\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchUploadsHttpServicePutBatchUploadIdByBatchUploadIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/batch-uploads/{batchUploadId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"The requested status ({{requestedStatus}}) is not valid. The status can be set to {{expectedStatus}}.\",\n                            \"key\": \"BatchUploadCannotBeUpdated\",\n                            \"context\": {\n                                \"requestedStatus\": \"OPEN\",\n                                \"expectedStatus\": \"DONE\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict\",\n                    \"errors\": [{\n                            \"message\": \"The current status of the batch upload ({{currentStatus}}) does not allow updating the status.\",\n                            \"key\": \"BatchUploadCannotBeUpdated\",\n                            \"context\": {\n                                \"currentStatus\": \"OPEN\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchUploadsHttpServiceStartBatchUploadMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/batch-uploads\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 202,\n                body: {\n                    \"batchUploadId\": \"5490bc83-9ea1-4b28-a465-2bb541e7c90b\",\n                    \"status\": \"OPEN\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"File extension ({{actual}}) is not one of the supported ones {{expected}}\",\n                            \"key\": \"UploadFileExtensionInvalid\",\n                            \"context\": {\n                                \"actual\": \"xls\",\n                                \"expected\": \"{csv}\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"File size ({{actual}}) exceeds the configured maximum ({{expected}})\",\n                            \"key\": \"UploadMaxFileSize\",\n                            \"context\": {\n                                \"actual\": \"115343360\",\n                                \"expected\": \"104857600\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchUploadsHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/batch-uploads/{batchUploadId}/batch-orders\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 202,\n                body: {\n                    \"id\": \"b51c4261-54c9-42e5-b5ae-4c1390b890d8\",\n                    \"status\": \"DONE\",\n                    \"totalBatchOrdersCount\": 3,\n                    \"totalTransactionsCount\": 10211,\n                    \"size\": 94371840,\n                    \"uploadedSize\": 94371840\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"id\": \"0288dde3-9b89-4997-9e57-54684bf3c3c1\",\n                    \"status\": \"DUPLICATE\",\n                    \"totalBatchOrdersCount\": 3,\n                    \"totalTransactionsCount\": 10211,\n                    \"size\": 94371840,\n                    \"uploadedSize\": 94371840\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"The request was rejected because its size exceeds the configured maximum ({{maxSize}})\",\n                            \"key\": \"UploadExceedsMaxSize\",\n                            \"context\": {\n                                \"maxSize\": \"104857600\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"Total amount of batch ({{actual}}) does not match the expected amount ({{expected}})\",\n                            \"key\": \"TotalAmountMismatch\",\n                            \"context\": {\n                                \"actual\": \"2400123.00\",\n                                \"expected\": \"2398675.00\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"Total number of batches ({{actual}}) does not match the expected number ({{expected}})\",\n                            \"key\": \"TotalBatchMismatch\",\n                            \"context\": {\n                                \"actual\": \"3\",\n                                \"expected\": \"4\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"The integer part of '{{amount}}' for '{{fieldName}}' exceeds the maximum number of digits {{maximum}}\",\n                            \"key\": \"AmountContainsTooManyDigits\",\n                            \"context\": {\n                                \"amount\": \"1234567890123456789.123456\",\n                                \"fieldName\": \"batchTotalAmount\",\n                                \"maximum\": \"18\"\n                            }\n                        }, {\n                            \"message\": \"The fractional part of '{{amount}}' for '{{fieldName}}' exceeds the maximum number of decimal digits {{maximum}}\",\n                            \"key\": \"AmountContainsTooManyDecimalDigits\",\n                            \"context\": {\n                                \"amount\": \"1234567890123456789.123456\",\n                                \"fieldName\": \"batchTotalAmount\",\n                                \"maximum\": \"5\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/batch-uploads/{batchUploadId}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict\",\n                    \"errors\": [{\n                            \"message\": \"The current status of the batch upload ({{currentStatus}}) does not allow deleting the batch upload.\",\n                            \"key\": \"BatchUploadCannotBeDeleted\",\n                            \"context\": {\n                                \"currentStatus\": \"OPEN\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/batch-uploads/{batchUploadId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n                    \"status\": \"OPEN\",\n                    \"file\": {\n                        \"name\": \"salaries-2019-02.csv\",\n                        \"size\": 94371840,\n                        \"uploadedSize\": 18874368\n                    },\n                    \"batchFileType\": \"BB_SEPACT_CSV\",\n                    \"totalBatchOrdersCount\": 3,\n                    \"createdAt\": \"2019-02-22T13:44:02Z\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n                    \"status\": \"OPEN\",\n                    \"file\": {\n                        \"name\": \"salaries-2019-02.csv\",\n                        \"size\": 94371840,\n                        \"uploadedSize\": 42467328\n                    },\n                    \"batchFileType\": \"BB_SEPACT_CSV\",\n                    \"totalBatchOrdersCount\": 3,\n                    \"createdAt\": \"2019-02-22T13:44:02Z\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n                    \"status\": \"OPEN\",\n                    \"file\": {\n                        \"name\": \"salaries-2019-02.csv\",\n                        \"size\": 94371840,\n                        \"uploadedSize\": 70778880\n                    },\n                    \"batchFileType\": \"BB_SEPACT_CSV\",\n                    \"totalBatchOrdersCount\": 3,\n                    \"createdAt\": \"2019-02-22T13:44:02Z\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n                    \"status\": \"UPLOADED\",\n                    \"file\": {\n                        \"name\": \"salaries-2019-02.csv\",\n                        \"size\": 94371840,\n                        \"uploadedSize\": 94371840\n                    },\n                    \"batchFileType\": \"BB_SEPACT_CSV\",\n                    \"totalBatchOrdersCount\": 3,\n                    \"createdAt\": \"2019-02-22T13:44:02Z\",\n                    \"completedAt\": \"2019-02-22T14:08:34Z\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n                    \"status\": \"DONE\",\n                    \"file\": {\n                        \"name\": \"salaries-2019-12.csv\",\n                        \"size\": 54371840,\n                        \"uploadedSize\": 54371840,\n                        \"lastModified\": \"2019-12-22T08:06:00Z\"\n                    },\n                    \"digest\": {\n                        \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n                        \"algorithm\": \"SHA-256\"\n                    },\n                    \"batchFileType\": \"BB_SEPACT_CSV\",\n                    \"totalBatchOrdersCount\": 1,\n                    \"createdAt\": \"2019-12-24T07:09:33Z\",\n                    \"completedAt\": \"2019-12-24T07:11:09Z\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"3650f774-2a95-4bfb-9f00-1c58fc1af0c6\",\n                    \"status\": \"DUPLICATE\",\n                    \"file\": {\n                        \"name\": \"salaries-2019-12.csv\",\n                        \"size\": 54371840,\n                        \"uploadedSize\": 54371840,\n                        \"lastModified\": \"2019-12-22T08:06:00Z\"\n                    },\n                    \"digest\": {\n                        \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n                        \"algorithm\": \"SHA-256\"\n                    },\n                    \"batchFileType\": \"BB_SEPACT_CSV\",\n                    \"totalBatchOrdersCount\": 1,\n                    \"createdAt\": \"2019-12-28T09:11:13Z\",\n                    \"completedAt\": \"2019-12-28T09:13:23Z\",\n                    \"duplicates\": [{\n                            \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n                            \"status\": \"DONE\",\n                            \"file\": {\n                                \"name\": \"salaries-2019-12.csv\",\n                                \"size\": 54371840,\n                                \"uploadedSize\": 54371840,\n                                \"lastModified\": \"2019-12-22T08:06:00Z\"\n                            },\n                            \"digest\": {\n                                \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n                                \"algorithm\": \"SHA-256\"\n                            },\n                            \"batchFileType\": \"BB_SEPACT_CSV\",\n                            \"totalBatchOrdersCount\": 1,\n                            \"createdAt\": \"2019-12-24T07:09:33Z\",\n                            \"completedAt\": \"2019-12-24T07:11:09Z\"\n                        }],\n                    \"errors\": []\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"80467759-0178-4231-af61-003bf1bc842b\",\n                    \"totalBatchOrdersCount\": 3,\n                    \"size\": 94371840,\n                    \"uploadedSize\": 94371840,\n                    \"status\": \"FAILED\",\n                    \"errors\": [{\n                            \"message\": \"The actual total amount ({{totalAmount}}) does not match the expected total amount ({{headerTotalAmount}})\",\n                            \"key\": \"TotalAmountMismatch\",\n                            \"context\": {\n                                \"totalAmount\": \"2400123.00\",\n                                \"headerTotalAmount\": \"2398675.00\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"id\": \"9151b4d0-f058-4b01-8bed-474dfc34831e\",\n                    \"totalBatchOrdersCount\": 4,\n                    \"size\": 94371840,\n                    \"uploadedSize\": 94371840,\n                    \"status\": \"FAILED\",\n                    \"errors\": [{\n                            \"message\": \"Total number of batches ({{actual}}) does not match the expected number ({{expected}})\",\n                            \"key\": \"TotalBatchMismatch\",\n                            \"context\": {\n                                \"actual\": \"3\",\n                                \"expected\": \"4\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/batch-uploads\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"batchUploads\": [{\n                            \"id\": \"3d0e77b1-08fc-490d-898c-694169c76a2f\",\n                            \"status\": \"FAILED\",\n                            \"file\": {\n                                \"name\": \"salaries-2019-02.csv\",\n                                \"size\": 94370816\n                            },\n                            \"batchFileType\": \"BB_SEPACT_CSV\",\n                            \"totalBatchOrdersCount\": 3,\n                            \"createdAt\": \"2019-02-22T13:14:37Z\"\n                        }, {\n                            \"id\": \"82c85c38-35af-4fa8-87e5-d8374937cac2\",\n                            \"status\": \"DONE\",\n                            \"file\": {\n                                \"name\": \"salaries-2019-02.csv\",\n                                \"size\": 94371840,\n                                \"uploadedSize\": 94371840,\n                                \"lastModified\": \"2019-12-22T08:06:00Z\"\n                            },\n                            \"digest\": {\n                                \"value\": \"d6099d20c5866e317bebbc69cc0eb681\",\n                                \"algorithm\": \"MD5\"\n                            },\n                            \"batchFileType\": \"BB_SEPACT_CSV\",\n                            \"totalBatchOrdersCount\": 3,\n                            \"createdAt\": \"2019-02-22T13:44:02Z\",\n                            \"completedAt\": \"2019-02-22T14:08:34Z\"\n                        }, {\n                            \"id\": \"0e4e5d67-d7d8-4695-87ad-58746c94ec63\",\n                            \"status\": \"DONE\",\n                            \"file\": {\n                                \"name\": \"salaries-2019-12.csv\",\n                                \"size\": 54371840,\n                                \"uploadedSize\": 54371840,\n                                \"lastModified\": \"2019-12-22T08:06:00Z\"\n                            },\n                            \"digest\": {\n                                \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n                                \"algorithm\": \"SHA-256\"\n                            },\n                            \"batchFileType\": \"BB_SEPACT_CSV\",\n                            \"totalBatchOrdersCount\": 1,\n                            \"createdAt\": \"2019-12-24T07:09:33Z\",\n                            \"completedAt\": \"2019-12-24T07:11:09Z\"\n                        }, {\n                            \"id\": \"3650f774-2a95-4bfb-9f00-1c58fc1af0c6\",\n                            \"status\": \"DUPLICATE\",\n                            \"file\": {\n                                \"name\": \"salaries-2019-12.csv\",\n                                \"size\": 54371840,\n                                \"uploadedSize\": 54371840,\n                                \"lastModified\": \"2019-12-22T08:06:00Z\"\n                            },\n                            \"digest\": {\n                                \"value\": \"07c8445c33bba054e7abc463cd351db465e6b90f00d2e658d0250d13aba8fe4c\",\n                                \"algorithm\": \"SHA-256\"\n                            },\n                            \"batchFileType\": \"BB_SEPACT_CSV\",\n                            \"totalBatchOrdersCount\": 1,\n                            \"createdAt\": \"2019-12-28T09:11:13Z\",\n                            \"completedAt\": \"2019-12-28T09:13:23Z\"\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/batch-uploads/{batchUploadId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"The requested status ({{requestedStatus}}) is not valid. The status can be set to {{expectedStatus}}.\",\n                            \"key\": \"BatchUploadCannotBeUpdated\",\n                            \"context\": {\n                                \"requestedStatus\": \"OPEN\",\n                                \"expectedStatus\": \"DONE\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict\",\n                    \"errors\": [{\n                            \"message\": \"The current status of the batch upload ({{currentStatus}}) does not allow updating the status.\",\n                            \"key\": \"BatchUploadCannotBeUpdated\",\n                            \"context\": {\n                                \"currentStatus\": \"OPEN\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/batch-uploads\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 202,\n                body: {\n                    \"batchUploadId\": \"5490bc83-9ea1-4b28-a465-2bb541e7c90b\",\n                    \"status\": \"OPEN\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"File extension ({{actual}}) is not one of the supported ones {{expected}}\",\n                            \"key\": \"UploadFileExtensionInvalid\",\n                            \"context\": {\n                                \"actual\": \"xls\",\n                                \"expected\": \"{csv}\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad request\",\n                    \"errors\": [{\n                            \"message\": \"File size ({{actual}}) exceeds the configured maximum ({{expected}})\",\n                            \"key\": \"UploadMaxFileSize\",\n                            \"context\": {\n                                \"actual\": \"115343360\",\n                                \"expected\": \"104857600\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nexport { ApprovalStatus, BatchOrdersHttpService, BatchOrdersHttpServiceDeleteBatchOrderIdByBatchOrderIdMocksProvider, BatchOrdersHttpServiceDeleteBatchPaymentByIdMocksProvider, BatchOrdersHttpServiceGetBatchOrdersByIdMocksProvider, BatchOrdersHttpServiceGetBatchOrdersMocksProvider, BatchOrdersHttpServiceGetBatchPaymentByIdMocksProvider, BatchOrdersHttpServiceGetBatchPaymentsByIdMocksProvider, BatchOrdersHttpServiceMocksProvider, BatchOrdersHttpServicePostBatchOrdersMocksProvider, BatchOrdersHttpServicePostBatchPaymentsMocksProvider, BatchOrdersHttpServicePutApprovalsByIdMocksProvider, BatchOrdersHttpServicePutBatchPaymentByIdMocksProvider, BatchOrdersHttpServiceUpdateBatchOrderByIdMocksProvider, BatchPaymentStatus, BatchStatus, BatchUploadsHttpService, BatchUploadsHttpServiceCreateBatchOrdersForIdMocksProvider, BatchUploadsHttpServiceDeleteBatchUploadByIdMocksProvider, BatchUploadsHttpServiceGetBatchUploadByIdMocksProvider, BatchUploadsHttpServiceGetBatchUploadsMocksProvider, BatchUploadsHttpServiceMocksProvider, BatchUploadsHttpServicePutBatchUploadIdByBatchUploadIdMocksProvider, BatchUploadsHttpServiceStartBatchUploadMocksProvider, BreachInfo, COLLECTION_FORMATS, CONFIG_TOKEN, ChargeBearer, CreditDebitIndicator, CreditDebitMixedIndicator, ExchangeRateInformation, InstructionPriority, InvolvedPartyRole, PAYMENT_BATCH_BASE_PATH, PaymentAction, PaymentBatchApiModule, PaymentBatchConfiguration, PaymentMode, RecordStatus, RemittanceInformation, Schedule, SchemeNames, Status, UploadStatus };\n"]},"metadata":{},"sourceType":"module"}