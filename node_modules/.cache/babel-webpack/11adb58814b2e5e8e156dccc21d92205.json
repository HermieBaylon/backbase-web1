{"ast":null,"code":"import * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Optional, Host, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@backbase/ui-ang/collapsible-accordion';\nimport * as i2 from '@backbase/ui-ang/collapsible';\nimport { CollapsibleModule } from '@backbase/ui-ang/collapsible';\nimport * as i3 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i5 from '@backbase/ui-ang/keyboard-click-directive';\nimport { KeyboardClickModule } from '@backbase/ui-ang/keyboard-click-directive';\n/**\n * @name CollapsibleCardComponent\n *\n * @description\n * Provides an expandable details-summary/body-header view.\n * Uses bb-collapsible-ui for a predefined template\n *\n * @a11y ariaLabelForIcon is discernible text for chevron icon\n */\n\nfunction CollapsibleCardComponent_ng_template_1_bb_icon_ui_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-icon-ui\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate(\"name\", ctx_r3.isOpen ? \"expand-less\" : \"expand-more\");\n    i0.ɵɵproperty(\"aria-label\", ctx_r3.ariaLabelForIcon);\n  }\n}\n\nfunction CollapsibleCardComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"bbKeyboardClick\", function CollapsibleCardComponent_ng_template_1_Template_div_bbKeyboardClick_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const toggle_r2 = restoredCtx.toggle;\n      return toggle_r2();\n    });\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵelementStart(2, \"div\", 5);\n    i0.ɵɵprojection(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, CollapsibleCardComponent_ng_template_1_bb_icon_ui_4_Template, 1, 2, \"bb-icon-ui\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel)(\"aria-expanded\", ctx_r0.isOpen);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.hasChevron);\n  }\n}\n\nfunction CollapsibleCardComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = [[[\"\", \"bbCollapsibleTitle\", \"\"]], [[\"\", \"bbCollapsibleBody\", \"\"]]];\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"bb-card--highlight\": a0,\n    \"bb-card--shadowless\": a1\n  };\n};\n\nconst _c2 = [\"[bbCollapsibleTitle]\", \"[bbCollapsibleBody]\"];\n\nclass CollapsibleCardComponent {\n  constructor(bbCollapsibleAccordion) {\n    this.bbCollapsibleAccordion = bbCollapsibleAccordion;\n    this.open = false;\n    /**\n     * Accessible label for chevron icon.\n     */\n\n    this.ariaLabelForIcon = 'Chevron icon';\n    /**\n     * Accessible label for collapsible card\n     */\n\n    this.ariaLabel = 'toggle';\n    /**\n     * Whether chevron should be displayed.\n     *\n     * @default true\n     */\n\n    this.hasChevron = true;\n    /**\n     * Whether card should be highlighted.\n     *\n     * @default false\n     */\n\n    this.highlight = false;\n    /**\n     * Whether card should has shadow effect.\n     *\n     * @default true\n     */\n\n    this.shadow = true;\n    /**\n     * Card size\n     *\n     * @default 'md'\n     */\n\n    this.size = 'md';\n    this.isOpenChange = new EventEmitter();\n\n    if (this.bbCollapsibleAccordion) {\n      this.bbCollapsibleAccordion.registerNestedPanel(this);\n    }\n  }\n  /**\n   * Toggles the content.\n   */\n\n\n  set isOpen(v) {\n    this.open = v;\n    this.isOpenChange.emit(v);\n  }\n\n  get isOpen() {\n    return this.open;\n  }\n\n  ngOnDestroy() {\n    if (this.bbCollapsibleAccordion) {\n      this.bbCollapsibleAccordion.unregisterNestedPanel(this);\n    }\n  }\n\n  toggle() {\n    this.isOpen = !this.isOpen;\n  }\n\n}\n\nCollapsibleCardComponent.ɵfac = function CollapsibleCardComponent_Factory(t) {\n  return new (t || CollapsibleCardComponent)(i0.ɵɵdirectiveInject(i1.CollapsibleAccordionComponent, 9));\n};\n\nCollapsibleCardComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CollapsibleCardComponent,\n  selectors: [[\"bb-collapsible-card-ui\"]],\n  inputs: {\n    isOpen: \"isOpen\",\n    ariaLabelForIcon: \"ariaLabelForIcon\",\n    ariaLabel: [\"aria-label\", \"ariaLabel\"],\n    hasChevron: \"hasChevron\",\n    highlight: \"highlight\",\n    shadow: \"shadow\",\n    size: \"size\"\n  },\n  outputs: {\n    isOpenChange: \"isOpenChange\"\n  },\n  ngContentSelectors: _c2,\n  decls: 3,\n  vars: 8,\n  consts: [[3, \"isOpen\", \"ngClass\", \"isOpenChange\"], [\"bbCollapsibleHeader\", \"\"], [\"bbCollapsibleBody\", \"\"], [\"data-role\", \"bb-collapsible-card-header\", \"role\", \"button\", \"tabindex\", \"0\", 1, \"bb-card__header\", \"bb-card__header--only-child\", 3, \"bbKeyboardClick\"], [1, \"bb-stack\"], [1, \"bb-stack__item\", \"bb-stack__item--fill\"], [\"class\", \"bb-stack__item\", \"data-role\", \"bb-collapsible-card-header__icon\", 3, \"aria-label\", \"name\", 4, \"ngIf\"], [\"data-role\", \"bb-collapsible-card-header__icon\", 1, \"bb-stack__item\", 3, \"aria-label\", \"name\"], [\"data-role\", \"bb-collapsible-card-body\", 1, \"bb-card__body\"]],\n  template: function CollapsibleCardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵelementStart(0, \"bb-collapsible-ui\", 0);\n      i0.ɵɵlistener(\"isOpenChange\", function CollapsibleCardComponent_Template_bb_collapsible_ui_isOpenChange_0_listener($event) {\n        return ctx.isOpen = $event;\n      });\n      i0.ɵɵtemplate(1, CollapsibleCardComponent_ng_template_1_Template, 5, 3, \"ng-template\", 1);\n      i0.ɵɵtemplate(2, CollapsibleCardComponent_ng_template_2_Template, 2, 0, \"ng-template\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMapInterpolate1(\"bb-card bb-card--collapsible bb-card--\", ctx.size, \"\");\n      i0.ɵɵproperty(\"isOpen\", ctx.isOpen)(\"ngClass\", i0.ɵɵpureFunction2(5, _c1, ctx.highlight, !ctx.shadow));\n    }\n  },\n  directives: [i2.CollapsibleComponent, i4.NgClass, i2.CollapsibleHeaderDirective, i2.CollapsibleBodyDirective, i5.KeyboardClickDirective, i4.NgIf, i3.IconComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CollapsibleCardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-collapsible-card-ui',\n      templateUrl: 'collapsible-card.component.html'\n    }]\n  }], function () {\n    return [{\n      type: i1.CollapsibleAccordionComponent,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Host\n      }]\n    }];\n  }, {\n    isOpen: [{\n      type: Input\n    }],\n    ariaLabelForIcon: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    hasChevron: [{\n      type: Input\n    }],\n    highlight: [{\n      type: Input\n    }],\n    shadow: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    isOpenChange: [{\n      type: Output\n    }]\n  });\n})();\n\nclass CollapsibleCardModule {}\n\nCollapsibleCardModule.ɵfac = function CollapsibleCardModule_Factory(t) {\n  return new (t || CollapsibleCardModule)();\n};\n\nCollapsibleCardModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CollapsibleCardModule\n});\nCollapsibleCardModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CollapsibleModule, CommonModule, IconModule, KeyboardClickModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CollapsibleCardModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CollapsibleModule, CommonModule, IconModule, KeyboardClickModule],\n      declarations: [CollapsibleCardComponent],\n      exports: [CollapsibleCardComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CollapsibleCardComponent, CollapsibleCardModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-collapsible-card.js"],"names":["i4","CommonModule","i0","EventEmitter","Component","Optional","Host","Input","Output","NgModule","i1","i2","CollapsibleModule","i3","IconModule","i5","KeyboardClickModule","CollapsibleCardComponent","constructor","bbCollapsibleAccordion","open","ariaLabelForIcon","ariaLabel","hasChevron","highlight","shadow","size","isOpenChange","registerNestedPanel","isOpen","v","emit","ngOnDestroy","unregisterNestedPanel","toggle","ɵfac","CollapsibleAccordionComponent","ɵcmp","CollapsibleComponent","NgClass","CollapsibleHeaderDirective","CollapsibleBodyDirective","KeyboardClickDirective","NgIf","IconComponent","type","args","selector","templateUrl","decorators","CollapsibleCardModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Optional, Host, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@backbase/ui-ang/collapsible-accordion';\nimport * as i2 from '@backbase/ui-ang/collapsible';\nimport { CollapsibleModule } from '@backbase/ui-ang/collapsible';\nimport * as i3 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i5 from '@backbase/ui-ang/keyboard-click-directive';\nimport { KeyboardClickModule } from '@backbase/ui-ang/keyboard-click-directive';\n\n/**\n * @name CollapsibleCardComponent\n *\n * @description\n * Provides an expandable details-summary/body-header view.\n * Uses bb-collapsible-ui for a predefined template\n *\n * @a11y ariaLabelForIcon is discernible text for chevron icon\n */\nclass CollapsibleCardComponent {\n    constructor(bbCollapsibleAccordion) {\n        this.bbCollapsibleAccordion = bbCollapsibleAccordion;\n        this.open = false;\n        /**\n         * Accessible label for chevron icon.\n         */\n        this.ariaLabelForIcon = 'Chevron icon';\n        /**\n         * Accessible label for collapsible card\n         */\n        this.ariaLabel = 'toggle';\n        /**\n         * Whether chevron should be displayed.\n         *\n         * @default true\n         */\n        this.hasChevron = true;\n        /**\n         * Whether card should be highlighted.\n         *\n         * @default false\n         */\n        this.highlight = false;\n        /**\n         * Whether card should has shadow effect.\n         *\n         * @default true\n         */\n        this.shadow = true;\n        /**\n         * Card size\n         *\n         * @default 'md'\n         */\n        this.size = 'md';\n        this.isOpenChange = new EventEmitter();\n        if (this.bbCollapsibleAccordion) {\n            this.bbCollapsibleAccordion.registerNestedPanel(this);\n        }\n    }\n    /**\n     * Toggles the content.\n     */\n    set isOpen(v) {\n        this.open = v;\n        this.isOpenChange.emit(v);\n    }\n    get isOpen() {\n        return this.open;\n    }\n    ngOnDestroy() {\n        if (this.bbCollapsibleAccordion) {\n            this.bbCollapsibleAccordion.unregisterNestedPanel(this);\n        }\n    }\n    toggle() {\n        this.isOpen = !this.isOpen;\n    }\n}\nCollapsibleCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CollapsibleCardComponent, deps: [{ token: i1.CollapsibleAccordionComponent, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCollapsibleCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: CollapsibleCardComponent, selector: \"bb-collapsible-card-ui\", inputs: { isOpen: \"isOpen\", ariaLabelForIcon: \"ariaLabelForIcon\", ariaLabel: [\"aria-label\", \"ariaLabel\"], hasChevron: \"hasChevron\", highlight: \"highlight\", shadow: \"shadow\", size: \"size\" }, outputs: { isOpenChange: \"isOpenChange\" }, ngImport: i0, template: \"<bb-collapsible-ui\\n  [(isOpen)]=\\\"isOpen\\\"\\n  class=\\\"bb-card bb-card--collapsible bb-card--{{ size }}\\\"\\n  [ngClass]=\\\"{\\n    'bb-card--highlight': highlight,\\n    'bb-card--shadowless': !shadow\\n  }\\\"\\n>\\n  <ng-template bbCollapsibleHeader let-toggle=\\\"toggle\\\">\\n    <div\\n      data-role=\\\"bb-collapsible-card-header\\\"\\n      class=\\\"bb-card__header bb-card__header--only-child\\\"\\n      role=\\\"button\\\"\\n      [attr.aria-label]=\\\"ariaLabel\\\"\\n      [attr.aria-expanded]=\\\"isOpen\\\"\\n      tabindex=\\\"0\\\"\\n      (bbKeyboardClick)=\\\"toggle()\\\"\\n    >\\n      <div class=\\\"bb-stack\\\">\\n        <div class=\\\"bb-stack__item bb-stack__item--fill\\\"><ng-content select=\\\"[bbCollapsibleTitle]\\\"></ng-content></div>\\n        <bb-icon-ui\\n          [aria-label]=\\\"ariaLabelForIcon\\\"\\n          *ngIf=\\\"hasChevron\\\"\\n          class=\\\"bb-stack__item\\\"\\n          name=\\\"{{ isOpen ? 'expand-less' : 'expand-more' }}\\\"\\n          data-role=\\\"bb-collapsible-card-header__icon\\\"\\n        ></bb-icon-ui>\\n      </div>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template bbCollapsibleBody>\\n    <div class=\\\"bb-card__body\\\" data-role=\\\"bb-collapsible-card-body\\\">\\n      <ng-content select=\\\"[bbCollapsibleBody]\\\"></ng-content>\\n    </div>\\n  </ng-template>\\n</bb-collapsible-ui>\\n\", components: [{ type: i2.CollapsibleComponent, selector: \"bb-collapsible-ui\", inputs: [\"recreateBodyContent\", \"hasChevron\", \"isOpen\"], outputs: [\"isOpenChange\"] }, { type: i3.IconComponent, selector: \"bb-icon-ui\", inputs: [\"name\", \"inverse\", \"size\", \"color\", \"animate\", \"aria-label\", \"cropped\", \"backgroundType\"] }], directives: [{ type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.CollapsibleHeaderDirective, selector: \"ng-template[bbCollapsibleHeader]\" }, { type: i5.KeyboardClickDirective, selector: \"[bbKeyboardClick]\", outputs: [\"bbKeyboardClick\"] }, { type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.CollapsibleBodyDirective, selector: \"ng-template[bbCollapsibleBody]\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CollapsibleCardComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-collapsible-card-ui',\n                    templateUrl: 'collapsible-card.component.html',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.CollapsibleAccordionComponent, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }] }]; }, propDecorators: { isOpen: [{\n                type: Input\n            }], ariaLabelForIcon: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], hasChevron: [{\n                type: Input\n            }], highlight: [{\n                type: Input\n            }], shadow: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], isOpenChange: [{\n                type: Output\n            }] } });\n\nclass CollapsibleCardModule {\n}\nCollapsibleCardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CollapsibleCardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCollapsibleCardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CollapsibleCardModule, declarations: [CollapsibleCardComponent], imports: [CollapsibleModule, CommonModule, IconModule, KeyboardClickModule], exports: [CollapsibleCardComponent] });\nCollapsibleCardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CollapsibleCardModule, imports: [[CollapsibleModule, CommonModule, IconModule, KeyboardClickModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CollapsibleCardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CollapsibleModule, CommonModule, IconModule, KeyboardClickModule],\n                    declarations: [CollapsibleCardComponent],\n                    exports: [CollapsibleCardComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CollapsibleCardComponent, CollapsibleCardModule };\n"]},"metadata":{},"sourceType":"module"}