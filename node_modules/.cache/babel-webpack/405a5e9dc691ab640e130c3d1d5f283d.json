{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nconst DEFAULT_POSITIVE_CLASS = 'bb-amount--positive';\nconst DEFAULT_NEGATIVE_CLASS = 'bb-amount--negative';\n/**\n * @name HighlightDirective\n *\n * @description\n * Directive that encapsulate logic for highlighting positive/negative numbers.\n * Example usage with bb-amount-ui (AmountModule)\n */\n\nclass HighlightDirective {\n  constructor(renderer, elementRef) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    /**\n     * The class for positive value.\n     */\n\n    this.negativeClass = DEFAULT_NEGATIVE_CLASS;\n    /**\n     * The class for negative value.\n     */\n\n    this.positiveClass = DEFAULT_POSITIVE_CLASS;\n    this.amountValue = 0;\n    this.highlightValue = true;\n  }\n  /**\n   * Setter (Input) for value of highlighted number\n   *\n   * @param amount Value of highlighted number\n   */\n\n\n  set amount(amount) {\n    this.amountValue = typeof amount === 'number' ? amount : parseFloat(amount);\n  }\n  /**\n   * Setter (Input) that turn on/off highlight\n   *\n   * @param value Highlight flag\n   */\n\n\n  set bbHighlight(value) {\n    this.highlightValue = value === '' || value;\n  }\n\n  get isPositive() {\n    return this.amountValue >= 0;\n  }\n\n  ngOnChanges(change) {\n    if (change.negativeClass) {\n      this.renderer.removeClass(this.elementRef.nativeElement, change.negativeClass.previousValue);\n    }\n\n    if (change.positiveClass) {\n      this.renderer.removeClass(this.elementRef.nativeElement, change.positiveClass.previousValue);\n    }\n\n    if (change.amount || change.highlight || change.bbHighlight) {\n      this.renderer.removeClass(this.elementRef.nativeElement, this.negativeClass);\n      this.renderer.removeClass(this.elementRef.nativeElement, this.positiveClass);\n    }\n\n    if (this.highlightValue) {\n      const highlight = this.isPositive ? this.positiveClass : this.negativeClass;\n      this.renderer.addClass(this.elementRef.nativeElement, highlight);\n    }\n  }\n\n}\n\nHighlightDirective.ɵfac = function HighlightDirective_Factory(t) {\n  return new (t || HighlightDirective)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nHighlightDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: HighlightDirective,\n  selectors: [[\"\", \"bbHighlight\", \"\"]],\n  inputs: {\n    amount: \"amount\",\n    bbHighlight: \"bbHighlight\",\n    negativeClass: \"negativeClass\",\n    positiveClass: \"positiveClass\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HighlightDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbHighlight]'\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    amount: [{\n      type: Input\n    }],\n    bbHighlight: [{\n      type: Input\n    }],\n    negativeClass: [{\n      type: Input\n    }],\n    positiveClass: [{\n      type: Input\n    }]\n  });\n})();\n\nclass HighlightModule {}\n\nHighlightModule.ɵfac = function HighlightModule_Factory(t) {\n  return new (t || HighlightModule)();\n};\n\nHighlightModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: HighlightModule\n});\nHighlightModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HighlightModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [HighlightDirective],\n      exports: [HighlightDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { HighlightDirective, HighlightModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-highlight.js"],"names":["i0","Directive","Input","NgModule","CommonModule","DEFAULT_POSITIVE_CLASS","DEFAULT_NEGATIVE_CLASS","HighlightDirective","constructor","renderer","elementRef","negativeClass","positiveClass","amountValue","highlightValue","amount","parseFloat","bbHighlight","value","isPositive","ngOnChanges","change","removeClass","nativeElement","previousValue","highlight","addClass","ɵfac","Renderer2","ElementRef","ɵdir","type","args","selector","HighlightModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nconst DEFAULT_POSITIVE_CLASS = 'bb-amount--positive';\nconst DEFAULT_NEGATIVE_CLASS = 'bb-amount--negative';\n/**\n * @name HighlightDirective\n *\n * @description\n * Directive that encapsulate logic for highlighting positive/negative numbers.\n * Example usage with bb-amount-ui (AmountModule)\n */\nclass HighlightDirective {\n    constructor(renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        /**\n         * The class for positive value.\n         */\n        this.negativeClass = DEFAULT_NEGATIVE_CLASS;\n        /**\n         * The class for negative value.\n         */\n        this.positiveClass = DEFAULT_POSITIVE_CLASS;\n        this.amountValue = 0;\n        this.highlightValue = true;\n    }\n    /**\n     * Setter (Input) for value of highlighted number\n     *\n     * @param amount Value of highlighted number\n     */\n    set amount(amount) {\n        this.amountValue = typeof amount === 'number' ? amount : parseFloat(amount);\n    }\n    /**\n     * Setter (Input) that turn on/off highlight\n     *\n     * @param value Highlight flag\n     */\n    set bbHighlight(value) {\n        this.highlightValue = value === '' || value;\n    }\n    get isPositive() {\n        return this.amountValue >= 0;\n    }\n    ngOnChanges(change) {\n        if (change.negativeClass) {\n            this.renderer.removeClass(this.elementRef.nativeElement, change.negativeClass.previousValue);\n        }\n        if (change.positiveClass) {\n            this.renderer.removeClass(this.elementRef.nativeElement, change.positiveClass.previousValue);\n        }\n        if (change.amount || change.highlight || change.bbHighlight) {\n            this.renderer.removeClass(this.elementRef.nativeElement, this.negativeClass);\n            this.renderer.removeClass(this.elementRef.nativeElement, this.positiveClass);\n        }\n        if (this.highlightValue) {\n            const highlight = this.isPositive ? this.positiveClass : this.negativeClass;\n            this.renderer.addClass(this.elementRef.nativeElement, highlight);\n        }\n    }\n}\nHighlightDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HighlightDirective, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nHighlightDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: HighlightDirective, selector: \"[bbHighlight]\", inputs: { amount: \"amount\", bbHighlight: \"bbHighlight\", negativeClass: \"negativeClass\", positiveClass: \"positiveClass\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HighlightDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbHighlight]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { amount: [{\n                type: Input\n            }], bbHighlight: [{\n                type: Input\n            }], negativeClass: [{\n                type: Input\n            }], positiveClass: [{\n                type: Input\n            }] } });\n\nclass HighlightModule {\n}\nHighlightModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HighlightModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHighlightModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HighlightModule, declarations: [HighlightDirective], imports: [CommonModule], exports: [HighlightDirective] });\nHighlightModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HighlightModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HighlightModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [HighlightDirective],\n                    exports: [HighlightDirective],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HighlightDirective, HighlightModule };\n"]},"metadata":{},"sourceType":"module"}