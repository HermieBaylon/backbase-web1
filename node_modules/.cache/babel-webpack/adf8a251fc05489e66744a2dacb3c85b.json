{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\nconst Action = {\n  CREATE: 'CREATE',\n  VIEW: 'VIEW'\n};\nconst ChargeBearer = {\n  OUR: 'OUR',\n  BEN: 'BEN',\n  SHA: 'SHA'\n};\nconst InstructionPriority = {\n  NORM: 'NORM',\n  HIGH: 'HIGH'\n};\nconst InvolvedPartyRole = {\n  CREDITOR: 'CREDITOR',\n  DEBTOR: 'DEBTOR'\n};\nconst SchemeNames = {\n  IBAN: 'IBAN',\n  BBAN: 'BBAN',\n  ID: 'ID',\n  EXTERNALID: 'EXTERNAL_ID',\n  EMAIL: 'EMAIL',\n  MOBILE: 'MOBILE'\n};\nconst PAYMENT_TEMPLATE_BASE_PATH = new InjectionToken('PAYMENT_TEMPLATE_BASE_PATH');\nconst COLLECTION_FORMATS = {\n  'csv': ',',\n  'tsv': '   ',\n  'ssv': ' ',\n  'pipes': '|'\n};\n\nclass PaymentTemplateConfiguration {\n  constructor(configurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n    this.encoder = configurationParameters.encoder;\n\n    if (configurationParameters.credentials) {\n      this.credentials = configurationParameters.credentials;\n    } else {\n      this.credentials = {};\n    }\n  }\n\n  selectHeaderContentType(contentTypes) {\n    if (contentTypes.length === 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n\n    return type;\n  }\n\n  selectHeaderAccept(accepts) {\n    if (accepts.length === 0) {\n      return undefined;\n    }\n\n    const type = accepts.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return accepts[0];\n    }\n\n    return type;\n  }\n\n  isJsonMime(mime) {\n    const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n    return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n  }\n\n  lookupCredential(key) {\n    const value = this.credentials[key];\n    return typeof value === 'function' ? value() : value;\n  }\n\n}\n\nconst CONFIG_TOKEN = new InjectionToken('api-data-module PaymentTemplateConfiguration');\n\nclass PaymentTemplateApiModule {\n  constructor(parentModule, http, dataModulesManager, config) {\n    if (parentModule) {\n      throw new Error('PaymentTemplateApiModule is already loaded. Import in your base AppModule only.');\n    }\n\n    if (!http) {\n      throw new Error('You need to import the HttpClientModule in your AppModule! \\n' + 'See also https://github.com/angular/angular/issues/20575');\n    }\n\n    if (dataModulesManager) {\n      dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n        apiRoot: '',\n        servicePath: config.basePath || '',\n        headers: {}\n      });\n    }\n  }\n\n  static forRoot(configurationFactory) {\n    return {\n      ngModule: PaymentTemplateApiModule,\n      providers: [{\n        provide: PaymentTemplateConfiguration,\n        useFactory: configurationFactory\n      }]\n    };\n  }\n\n}\n\nPaymentTemplateApiModule.ɵfac = function PaymentTemplateApiModule_Factory(t) {\n  return new (t || PaymentTemplateApiModule)(i0.ɵɵinject(PaymentTemplateApiModule, 12), i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DataModulesManager, 8), i0.ɵɵinject(PaymentTemplateConfiguration));\n};\n\nPaymentTemplateApiModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PaymentTemplateApiModule\n});\nPaymentTemplateApiModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [],\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaymentTemplateApiModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [],\n      exports: [],\n      providers: []\n    }]\n  }], function () {\n    return [{\n      type: PaymentTemplateApiModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: i1.HttpClient,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2.DataModulesManager,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: PaymentTemplateConfiguration\n    }];\n  }, null);\n})();\n\nclass CustomHttpParameterCodec {\n  encodeKey(k) {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v) {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k) {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v) {\n    return decodeURIComponent(v);\n  }\n\n}\n\nclass PaymentTemplatesHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new PaymentTemplateConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  deletePaymentTemplateIdByPaymentTemplateId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _paymentTemplateId = requestParameters[\"paymentTemplateId\"];\n\n    if (_paymentTemplateId === null || _paymentTemplateId === undefined) {\n      throw new Error('Required parameter paymentTemplateId was null or undefined when calling deletePaymentTemplateIdByPaymentTemplateId.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/payment-templates/${encodeURIComponent(String(_paymentTemplateId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deletePaymentTemplateIdByPaymentTemplateIdUrl(requestParameters) {\n    const _paymentTemplateId = requestParameters[\"paymentTemplateId\"];\n\n    if (_paymentTemplateId === null || _paymentTemplateId === undefined) {\n      throw new Error('Required parameter paymentTemplateId was null or undefined when calling deletePaymentTemplateIdByPaymentTemplateId.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/payment-templates/${encodeURIComponent(String(_paymentTemplateId))}`;\n  }\n\n  getPaymentTemplates(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _query = requestParameters[\"query\"];\n    const _intendedAction = requestParameters[\"intendedAction\"];\n    const _paymentType = requestParameters[\"paymentType\"];\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_query !== undefined && _query !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n    }\n\n    if (_intendedAction !== undefined && _intendedAction !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedAction, 'intendedAction');\n    }\n\n    if (_paymentType !== undefined && _paymentType !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _paymentType, 'paymentType');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/payment-templates`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getPaymentTemplatesUrl(requestParameters) {\n    const _query = requestParameters[\"query\"];\n    const _intendedAction = requestParameters[\"intendedAction\"];\n    const _paymentType = requestParameters[\"paymentType\"];\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_query !== undefined && _query !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n    }\n\n    if (_intendedAction !== undefined && _intendedAction !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedAction, 'intendedAction');\n    }\n\n    if (_paymentType !== undefined && _paymentType !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _paymentType, 'paymentType');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/payment-templates${queryString ? `?${queryString}` : ''}`;\n  }\n\n  postPaymentTemplates(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _paymentTemplatesPostRequest = requestParameters[\"paymentTemplatesPostRequest\"];\n\n    if (_paymentTemplatesPostRequest === null || _paymentTemplatesPostRequest === undefined) {\n      throw new Error('Required parameter paymentTemplatesPostRequest was null or undefined when calling postPaymentTemplates.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/payment-templates`, _paymentTemplatesPostRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postPaymentTemplatesUrl(requestParameters) {\n    const _paymentTemplatesPostRequest = requestParameters[\"paymentTemplatesPostRequest\"];\n\n    if (_paymentTemplatesPostRequest === null || _paymentTemplatesPostRequest === undefined) {\n      throw new Error('Required parameter paymentTemplatesPostRequest was null or undefined when calling postPaymentTemplates.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/payment-templates`;\n  }\n\n  putPaymentTemplateById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _paymentTemplateId = requestParameters[\"paymentTemplateId\"];\n\n    if (_paymentTemplateId === null || _paymentTemplateId === undefined) {\n      throw new Error('Required parameter paymentTemplateId was null or undefined when calling putPaymentTemplateById.');\n    }\n\n    const _paymentTemplatesPutRequest = requestParameters[\"paymentTemplatesPutRequest\"];\n\n    if (_paymentTemplatesPutRequest === null || _paymentTemplatesPutRequest === undefined) {\n      throw new Error('Required parameter paymentTemplatesPutRequest was null or undefined when calling putPaymentTemplateById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/payment-templates/${encodeURIComponent(String(_paymentTemplateId))}`, _paymentTemplatesPutRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putPaymentTemplateByIdUrl(requestParameters) {\n    const _paymentTemplateId = requestParameters[\"paymentTemplateId\"];\n\n    if (_paymentTemplateId === null || _paymentTemplateId === undefined) {\n      throw new Error('Required parameter paymentTemplateId was null or undefined when calling putPaymentTemplateById.');\n    }\n\n    const _paymentTemplatesPutRequest = requestParameters[\"paymentTemplatesPutRequest\"];\n\n    if (_paymentTemplatesPutRequest === null || _paymentTemplatesPutRequest === undefined) {\n      throw new Error('Required parameter paymentTemplatesPutRequest was null or undefined when calling putPaymentTemplateById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/payment-templates/${encodeURIComponent(String(_paymentTemplateId))}`;\n  }\n\n}\n\nPaymentTemplatesHttpService.ɵfac = function PaymentTemplatesHttpService_Factory(t) {\n  return new (t || PaymentTemplatesHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(PAYMENT_TEMPLATE_BASE_PATH, 8), i0.ɵɵinject(PaymentTemplateConfiguration, 8));\n};\n\nPaymentTemplatesHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PaymentTemplatesHttpService,\n  factory: PaymentTemplatesHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaymentTemplatesHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [PAYMENT_TEMPLATE_BASE_PATH]\n      }]\n    }, {\n      type: PaymentTemplateConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst PaymentTemplatesHttpServiceDeletePaymentTemplateIdByPaymentTemplateIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-templates/{paymentTemplateId}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PaymentTemplatesHttpServiceGetPaymentTemplatesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-templates\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n      \"name\": \"Textile supplier invoice\",\n      \"createdAt\": \"2020-04-12T14:33:13.452Z\",\n      \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n      \"details\": {\n        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n        \"originatorAccount\": {\n          \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n          \"externalArrangementId\": \"729190421493794513132\",\n          \"identification\": {\n            \"identification\": \"NL53RABO0309349755\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"name\": \"Smith Bonus Savings\"\n        },\n        \"instructionPriority\": \"NORM\",\n        \"transferTransactionInformation\": {\n          \"counterparty\": {\n            \"name\": \"Backbase\",\n            \"postalAddress\": {\n              \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n              \"country\": \"NL\"\n            }\n          },\n          \"counterpartyAccount\": {\n            \"identification\": {\n              \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n              \"schemeName\": \"IBAN\"\n            },\n            \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n            \"externalArrangementId\": \"9669274787995385962\"\n          },\n          \"instructedAmount\": {\n            \"amount\": \"5000.55\",\n            \"currencyCode\": \"EUR\"\n          },\n          \"remittanceInformation\": \"Salary\"\n        }\n      }\n    }]\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PaymentTemplatesHttpServicePostPaymentTemplatesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-templates\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"template\": {\n        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"name\": \"Salary for John\",\n        \"createdAt\": \"2020-04-12T14:33:13.452Z\",\n        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n        \"details\": {\n          \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n          \"originatorAccount\": {\n            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n            \"externalArrangementId\": \"729190421493794513132\",\n            \"identification\": {\n              \"identification\": \"NL53RABO0309349755\",\n              \"schemeName\": \"IBAN\"\n            }\n          },\n          \"instructionPriority\": \"NORM\",\n          \"transferTransactionInformation\": {\n            \"counterparty\": {\n              \"name\": \"John Smith\",\n              \"postalAddress\": {\n                \"addressLine1\": \"Schippersstraat 15, 1011AZ, Amsterdam\",\n                \"country\": \"NL\"\n              }\n            },\n            \"counterpartyAccount\": {\n              \"identification\": {\n                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                \"schemeName\": \"IBAN\"\n              },\n              \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n              \"externalArrangementId\": \"9669274787995385962\"\n            },\n            \"instructedAmount\": {\n              \"amount\": \"5000.55\",\n              \"currencyCode\": \"EUR\"\n            },\n            \"remittanceInformation\": \"Salary\"\n          }\n        }\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PaymentTemplatesHttpServicePutPaymentTemplateByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-templates/{paymentTemplateId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 202,\n    body: {\n      \"template\": {\n        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"name\": \"Salary for John\",\n        \"createdAt\": \"2020-04-12T14:33:13.452Z\",\n        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n        \"details\": {\n          \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n          \"originatorAccount\": {\n            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n            \"externalArrangementId\": \"729190421493794513132\",\n            \"identification\": {\n              \"identification\": \"NL53RABO0309349755\",\n              \"schemeName\": \"IBAN\"\n            }\n          },\n          \"instructionPriority\": \"NORM\",\n          \"transferTransactionInformation\": {\n            \"counterparty\": {\n              \"name\": \"John Smith\",\n              \"postalAddress\": {\n                \"addressLine1\": \"Schippersstraat 15, 1011AZ, Amsterdam\",\n                \"country\": \"NL\"\n              }\n            },\n            \"counterpartyAccount\": {\n              \"identification\": {\n                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                \"schemeName\": \"IBAN\"\n              },\n              \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n              \"externalArrangementId\": \"9669274787995385962\"\n            },\n            \"instructedAmount\": {\n              \"amount\": \"5000.55\",\n              \"currencyCode\": \"EUR\"\n            },\n            \"remittanceInformation\": \"Salary\"\n          }\n        }\n      }\n    }\n  }, {\n    status: 202,\n    body: {\n      \"template\": {\n        \"createdAt\": \"2000-01-23T04:56:07.000+00:00\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"serviceAgreementId\": \"serviceAgreementId\",\n        \"name\": \"name\",\n        \"details\": {\n          \"transferTransactionInformation\": {\n            \"correspondentBank\": {\n              \"bankBranchCode\": \"bankBranchCode\",\n              \"postalAddress\": {\n                \"country\": \"country\",\n                \"streetName\": \"streetName\",\n                \"town\": \"town\",\n                \"countrySubDivision\": \"countrySubDivision\",\n                \"additions\": {\n                  \"key\": \"additions\"\n                },\n                \"addressLine1\": \"addressLine1\",\n                \"addressLine2\": \"addressLine2\",\n                \"postCode\": \"postCode\"\n              },\n              \"additions\": {\n                \"key\": \"additions\"\n              },\n              \"name\": \"name\",\n              \"bic\": \"bic\"\n            },\n            \"counterpartyBank\": {\n              \"bankBranchCode\": \"bankBranchCode\",\n              \"postalAddress\": {\n                \"country\": \"country\",\n                \"streetName\": \"streetName\",\n                \"town\": \"town\",\n                \"countrySubDivision\": \"countrySubDivision\",\n                \"additions\": {\n                  \"key\": \"additions\"\n                },\n                \"addressLine1\": \"addressLine1\",\n                \"addressLine2\": \"addressLine2\",\n                \"postCode\": \"postCode\"\n              },\n              \"additions\": {\n                \"key\": \"additions\"\n              },\n              \"name\": \"name\",\n              \"bic\": \"bic\"\n            },\n            \"targetCurrency\": \"targetCurrency\",\n            \"additions\": {\n              \"key\": \"additions\"\n            },\n            \"purposeOfPayment\": {\n              \"code\": \"code\",\n              \"additions\": {\n                \"key\": \"additions\"\n              },\n              \"freeText\": \"freeText\",\n              \"description\": \"description\"\n            },\n            \"counterpartyAccount\": {\n              \"accountType\": \"accountType\",\n              \"selectedContact\": {\n                \"accountId\": \"accountId\",\n                \"additions\": {\n                  \"key\": \"additions\"\n                },\n                \"contactId\": \"contactId\"\n              }\n            },\n            \"intermediaryBank\": {\n              \"bankBranchCode\": \"bankBranchCode\",\n              \"postalAddress\": {\n                \"country\": \"country\",\n                \"streetName\": \"streetName\",\n                \"town\": \"town\",\n                \"countrySubDivision\": \"countrySubDivision\",\n                \"additions\": {\n                  \"key\": \"additions\"\n                },\n                \"addressLine1\": \"addressLine1\",\n                \"addressLine2\": \"addressLine2\",\n                \"postCode\": \"postCode\"\n              },\n              \"additions\": {\n                \"key\": \"additions\"\n              },\n              \"name\": \"name\",\n              \"bic\": \"bic\"\n            },\n            \"mandateIdentifier\": \"mandateIdentifier\",\n            \"remittanceInformation\": \"remittanceInformation\",\n            \"messageToBank\": \"messageToBank\",\n            \"counterparty\": {\n              \"postalAddress\": {\n                \"country\": \"country\",\n                \"streetName\": \"streetName\",\n                \"town\": \"town\",\n                \"countrySubDivision\": \"countrySubDivision\",\n                \"additions\": {\n                  \"key\": \"additions\"\n                },\n                \"addressLine1\": \"addressLine1\",\n                \"addressLine2\": \"addressLine2\",\n                \"postCode\": \"postCode\"\n              },\n              \"additions\": {\n                \"key\": \"additions\"\n              },\n              \"name\": \"name\",\n              \"recipientId\": \"recipientId\"\n            },\n            \"instructedAmount\": {\n              \"amount\": \"amount\",\n              \"additions\": {\n                \"key\": \"additions\"\n              },\n              \"currencyCode\": \"currencyCode\"\n            },\n            \"endToEndIdentification\": \"endToEndIdentification\"\n          },\n          \"additions\": {\n            \"key\": \"additions\"\n          },\n          \"originatorAccount\": {\n            \"arrangementId\": \"arrangementId\",\n            \"identification\": {\n              \"identification\": \"identification\",\n              \"additions\": {\n                \"key\": \"additions\"\n              }\n            },\n            \"additions\": {\n              \"key\": \"additions\"\n            },\n            \"name\": \"name\",\n            \"externalArrangementId\": \"externalArrangementId\"\n          },\n          \"entryClass\": \"entryClass\",\n          \"paymentType\": \"paymentType\"\n        },\n        \"id\": \"id\",\n        \"actions\": [null, null]\n      },\n      \"additions\": {\n        \"key\": \"additions\"\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst PaymentTemplatesHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/payment-templates/{paymentTemplateId}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/payment-templates\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n      \"name\": \"Textile supplier invoice\",\n      \"createdAt\": \"2020-04-12T14:33:13.452Z\",\n      \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n      \"details\": {\n        \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n        \"originatorAccount\": {\n          \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n          \"externalArrangementId\": \"729190421493794513132\",\n          \"identification\": {\n            \"identification\": \"NL53RABO0309349755\",\n            \"schemeName\": \"IBAN\"\n          },\n          \"name\": \"Smith Bonus Savings\"\n        },\n        \"instructionPriority\": \"NORM\",\n        \"transferTransactionInformation\": {\n          \"counterparty\": {\n            \"name\": \"Backbase\",\n            \"postalAddress\": {\n              \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n              \"country\": \"NL\"\n            }\n          },\n          \"counterpartyAccount\": {\n            \"identification\": {\n              \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n              \"schemeName\": \"IBAN\"\n            },\n            \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n            \"externalArrangementId\": \"9669274787995385962\"\n          },\n          \"instructedAmount\": {\n            \"amount\": \"5000.55\",\n            \"currencyCode\": \"EUR\"\n          },\n          \"remittanceInformation\": \"Salary\"\n        }\n      }\n    }]\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/payment-templates\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"template\": {\n        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"name\": \"Salary for John\",\n        \"createdAt\": \"2020-04-12T14:33:13.452Z\",\n        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n        \"details\": {\n          \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n          \"originatorAccount\": {\n            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n            \"externalArrangementId\": \"729190421493794513132\",\n            \"identification\": {\n              \"identification\": \"NL53RABO0309349755\",\n              \"schemeName\": \"IBAN\"\n            }\n          },\n          \"instructionPriority\": \"NORM\",\n          \"transferTransactionInformation\": {\n            \"counterparty\": {\n              \"name\": \"John Smith\",\n              \"postalAddress\": {\n                \"addressLine1\": \"Schippersstraat 15, 1011AZ, Amsterdam\",\n                \"country\": \"NL\"\n              }\n            },\n            \"counterpartyAccount\": {\n              \"identification\": {\n                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                \"schemeName\": \"IBAN\"\n              },\n              \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n              \"externalArrangementId\": \"9669274787995385962\"\n            },\n            \"instructedAmount\": {\n              \"amount\": \"5000.55\",\n              \"currencyCode\": \"EUR\"\n            },\n            \"remittanceInformation\": \"Salary\"\n          }\n        }\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/payment-templates/{paymentTemplateId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 202,\n    body: {\n      \"template\": {\n        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"name\": \"Salary for John\",\n        \"createdAt\": \"2020-04-12T14:33:13.452Z\",\n        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n        \"details\": {\n          \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n          \"originatorAccount\": {\n            \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n            \"externalArrangementId\": \"729190421493794513132\",\n            \"identification\": {\n              \"identification\": \"NL53RABO0309349755\",\n              \"schemeName\": \"IBAN\"\n            }\n          },\n          \"instructionPriority\": \"NORM\",\n          \"transferTransactionInformation\": {\n            \"counterparty\": {\n              \"name\": \"John Smith\",\n              \"postalAddress\": {\n                \"addressLine1\": \"Schippersstraat 15, 1011AZ, Amsterdam\",\n                \"country\": \"NL\"\n              }\n            },\n            \"counterpartyAccount\": {\n              \"identification\": {\n                \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                \"schemeName\": \"IBAN\"\n              },\n              \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n              \"externalArrangementId\": \"9669274787995385962\"\n            },\n            \"instructedAmount\": {\n              \"amount\": \"5000.55\",\n              \"currencyCode\": \"EUR\"\n            },\n            \"remittanceInformation\": \"Salary\"\n          }\n        }\n      }\n    }\n  }, {\n    status: 202,\n    body: {\n      \"template\": {\n        \"createdAt\": \"2000-01-23T04:56:07.000+00:00\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"serviceAgreementId\": \"serviceAgreementId\",\n        \"name\": \"name\",\n        \"details\": {\n          \"transferTransactionInformation\": {\n            \"correspondentBank\": {\n              \"bankBranchCode\": \"bankBranchCode\",\n              \"postalAddress\": {\n                \"country\": \"country\",\n                \"streetName\": \"streetName\",\n                \"town\": \"town\",\n                \"countrySubDivision\": \"countrySubDivision\",\n                \"additions\": {\n                  \"key\": \"additions\"\n                },\n                \"addressLine1\": \"addressLine1\",\n                \"addressLine2\": \"addressLine2\",\n                \"postCode\": \"postCode\"\n              },\n              \"additions\": {\n                \"key\": \"additions\"\n              },\n              \"name\": \"name\",\n              \"bic\": \"bic\"\n            },\n            \"counterpartyBank\": {\n              \"bankBranchCode\": \"bankBranchCode\",\n              \"postalAddress\": {\n                \"country\": \"country\",\n                \"streetName\": \"streetName\",\n                \"town\": \"town\",\n                \"countrySubDivision\": \"countrySubDivision\",\n                \"additions\": {\n                  \"key\": \"additions\"\n                },\n                \"addressLine1\": \"addressLine1\",\n                \"addressLine2\": \"addressLine2\",\n                \"postCode\": \"postCode\"\n              },\n              \"additions\": {\n                \"key\": \"additions\"\n              },\n              \"name\": \"name\",\n              \"bic\": \"bic\"\n            },\n            \"targetCurrency\": \"targetCurrency\",\n            \"additions\": {\n              \"key\": \"additions\"\n            },\n            \"purposeOfPayment\": {\n              \"code\": \"code\",\n              \"additions\": {\n                \"key\": \"additions\"\n              },\n              \"freeText\": \"freeText\",\n              \"description\": \"description\"\n            },\n            \"counterpartyAccount\": {\n              \"accountType\": \"accountType\",\n              \"selectedContact\": {\n                \"accountId\": \"accountId\",\n                \"additions\": {\n                  \"key\": \"additions\"\n                },\n                \"contactId\": \"contactId\"\n              }\n            },\n            \"intermediaryBank\": {\n              \"bankBranchCode\": \"bankBranchCode\",\n              \"postalAddress\": {\n                \"country\": \"country\",\n                \"streetName\": \"streetName\",\n                \"town\": \"town\",\n                \"countrySubDivision\": \"countrySubDivision\",\n                \"additions\": {\n                  \"key\": \"additions\"\n                },\n                \"addressLine1\": \"addressLine1\",\n                \"addressLine2\": \"addressLine2\",\n                \"postCode\": \"postCode\"\n              },\n              \"additions\": {\n                \"key\": \"additions\"\n              },\n              \"name\": \"name\",\n              \"bic\": \"bic\"\n            },\n            \"mandateIdentifier\": \"mandateIdentifier\",\n            \"remittanceInformation\": \"remittanceInformation\",\n            \"messageToBank\": \"messageToBank\",\n            \"counterparty\": {\n              \"postalAddress\": {\n                \"country\": \"country\",\n                \"streetName\": \"streetName\",\n                \"town\": \"town\",\n                \"countrySubDivision\": \"countrySubDivision\",\n                \"additions\": {\n                  \"key\": \"additions\"\n                },\n                \"addressLine1\": \"addressLine1\",\n                \"addressLine2\": \"addressLine2\",\n                \"postCode\": \"postCode\"\n              },\n              \"additions\": {\n                \"key\": \"additions\"\n              },\n              \"name\": \"name\",\n              \"recipientId\": \"recipientId\"\n            },\n            \"instructedAmount\": {\n              \"amount\": \"amount\",\n              \"additions\": {\n                \"key\": \"additions\"\n              },\n              \"currencyCode\": \"currencyCode\"\n            },\n            \"endToEndIdentification\": \"endToEndIdentification\"\n          },\n          \"additions\": {\n            \"key\": \"additions\"\n          },\n          \"originatorAccount\": {\n            \"arrangementId\": \"arrangementId\",\n            \"identification\": {\n              \"identification\": \"identification\",\n              \"additions\": {\n                \"key\": \"additions\"\n              }\n            },\n            \"additions\": {\n              \"key\": \"additions\"\n            },\n            \"name\": \"name\",\n            \"externalArrangementId\": \"externalArrangementId\"\n          },\n          \"entryClass\": \"entryClass\",\n          \"paymentType\": \"paymentType\"\n        },\n        \"id\": \"id\",\n        \"actions\": [null, null]\n      },\n      \"additions\": {\n        \"key\": \"additions\"\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nexport { Action, COLLECTION_FORMATS, CONFIG_TOKEN, ChargeBearer, InstructionPriority, InvolvedPartyRole, PAYMENT_TEMPLATE_BASE_PATH, PaymentTemplateApiModule, PaymentTemplateConfiguration, PaymentTemplatesHttpService, PaymentTemplatesHttpServiceDeletePaymentTemplateIdByPaymentTemplateIdMocksProvider, PaymentTemplatesHttpServiceGetPaymentTemplatesMocksProvider, PaymentTemplatesHttpServiceMocksProvider, PaymentTemplatesHttpServicePostPaymentTemplatesMocksProvider, PaymentTemplatesHttpServicePutPaymentTemplateByIdMocksProvider, SchemeNames };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/payment-template-http-ang/fesm2015/backbase-payment-template-http-ang.js"],"names":["i0","InjectionToken","NgModule","Optional","SkipSelf","Injectable","Inject","i1","HttpHeaders","HttpParams","i2","createMocks","Action","CREATE","VIEW","ChargeBearer","OUR","BEN","SHA","InstructionPriority","NORM","HIGH","InvolvedPartyRole","CREDITOR","DEBTOR","SchemeNames","IBAN","BBAN","ID","EXTERNALID","EMAIL","MOBILE","PAYMENT_TEMPLATE_BASE_PATH","COLLECTION_FORMATS","PaymentTemplateConfiguration","constructor","configurationParameters","apiKeys","username","password","accessToken","basePath","withCredentials","encoder","credentials","selectHeaderContentType","contentTypes","length","undefined","type","find","x","isJsonMime","selectHeaderAccept","accepts","mime","jsonMime","RegExp","test","toLowerCase","lookupCredential","key","value","CONFIG_TOKEN","PaymentTemplateApiModule","parentModule","http","dataModulesManager","config","Error","setModuleConfig","apiRoot","servicePath","headers","forRoot","configurationFactory","ngModule","providers","provide","useFactory","ɵfac","HttpClient","DataModulesManager","ɵmod","ɵinj","args","imports","declarations","exports","decorators","CustomHttpParameterCodec","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeURIComponent","decodeValue","PaymentTemplatesHttpService","httpClient","configuration","defaultHeaders","addToHttpParams","httpParams","Date","addToHttpParamsRecursive","Array","isArray","forEach","elem","append","toISOString","substr","Object","keys","deletePaymentTemplateIdByPaymentTemplateId","requestParameters","observe","reportProgress","options","_paymentTemplateId","httpHeaderAcceptSelected","httpHeaderAccept","httpHeaderAccepts","set","responseType","startsWith","delete","String","deletePaymentTemplateIdByPaymentTemplateIdUrl","getPaymentTemplates","_query","_intendedAction","_paymentType","_from","_size","queryParameters","get","params","getPaymentTemplatesUrl","queryString","toString","postPaymentTemplates","_paymentTemplatesPostRequest","consumes","httpContentTypeSelected","post","postPaymentTemplatesUrl","putPaymentTemplateById","_paymentTemplatesPutRequest","put","putPaymentTemplateByIdUrl","ɵprov","providedIn","PaymentTemplatesHttpServiceDeletePaymentTemplateIdByPaymentTemplateIdMocksProvider","urlPattern","method","responses","status","body","PaymentTemplatesHttpServiceGetPaymentTemplatesMocksProvider","PaymentTemplatesHttpServicePostPaymentTemplatesMocksProvider","PaymentTemplatesHttpServicePutPaymentTemplateByIdMocksProvider","PaymentTemplatesHttpServiceMocksProvider"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\n\nconst Action = {\n    CREATE: 'CREATE',\n    VIEW: 'VIEW'\n};\n\nconst ChargeBearer = {\n    OUR: 'OUR',\n    BEN: 'BEN',\n    SHA: 'SHA'\n};\n\nconst InstructionPriority = {\n    NORM: 'NORM',\n    HIGH: 'HIGH'\n};\n\nconst InvolvedPartyRole = {\n    CREDITOR: 'CREDITOR',\n    DEBTOR: 'DEBTOR'\n};\n\nconst SchemeNames = {\n    IBAN: 'IBAN',\n    BBAN: 'BBAN',\n    ID: 'ID',\n    EXTERNALID: 'EXTERNAL_ID',\n    EMAIL: 'EMAIL',\n    MOBILE: 'MOBILE'\n};\n\nconst PAYMENT_TEMPLATE_BASE_PATH = new InjectionToken('PAYMENT_TEMPLATE_BASE_PATH');\nconst COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n};\n\nclass PaymentTemplateConfiguration {\n    constructor(configurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n    selectHeaderContentType(contentTypes) {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n        const type = contentTypes.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n    selectHeaderAccept(accepts) {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n        const type = accepts.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n    lookupCredential(key) {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\nconst CONFIG_TOKEN = new InjectionToken('api-data-module PaymentTemplateConfiguration');\n\nclass PaymentTemplateApiModule {\n    constructor(parentModule, http, dataModulesManager, config) {\n        if (parentModule) {\n            throw new Error('PaymentTemplateApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n                'See also https://github.com/angular/angular/issues/20575');\n        }\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n    static forRoot(configurationFactory) {\n        return {\n            ngModule: PaymentTemplateApiModule,\n            providers: [{ provide: PaymentTemplateConfiguration, useFactory: configurationFactory }]\n        };\n    }\n}\nPaymentTemplateApiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentTemplateApiModule, deps: [{ token: PaymentTemplateApiModule, optional: true, skipSelf: true }, { token: i1.HttpClient, optional: true }, { token: i2.DataModulesManager, optional: true }, { token: PaymentTemplateConfiguration }], target: i0.ɵɵFactoryTarget.NgModule });\nPaymentTemplateApiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentTemplateApiModule });\nPaymentTemplateApiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentTemplateApiModule, providers: [], imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentTemplateApiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [],\n                    exports: [],\n                    providers: []\n                }]\n        }], ctorParameters: function () { return [{ type: PaymentTemplateApiModule, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DataModulesManager, decorators: [{\n                    type: Optional\n                }] }, { type: PaymentTemplateConfiguration }]; } });\n\nclass CustomHttpParameterCodec {\n    encodeKey(k) {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v) {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k) {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v) {\n        return decodeURIComponent(v);\n    }\n}\n\nclass PaymentTemplatesHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new PaymentTemplateConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    deletePaymentTemplateIdByPaymentTemplateId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _paymentTemplateId = requestParameters[\"paymentTemplateId\"];\n        if (_paymentTemplateId === null || _paymentTemplateId === undefined) {\n            throw new Error('Required parameter paymentTemplateId was null or undefined when calling deletePaymentTemplateIdByPaymentTemplateId.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/payment-templates/${encodeURIComponent(String(_paymentTemplateId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deletePaymentTemplateIdByPaymentTemplateIdUrl(requestParameters) {\n        const _paymentTemplateId = requestParameters[\"paymentTemplateId\"];\n        if (_paymentTemplateId === null || _paymentTemplateId === undefined) {\n            throw new Error('Required parameter paymentTemplateId was null or undefined when calling deletePaymentTemplateIdByPaymentTemplateId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/payment-templates/${encodeURIComponent(String(_paymentTemplateId))}`;\n    }\n    getPaymentTemplates(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _query = requestParameters[\"query\"];\n        const _intendedAction = requestParameters[\"intendedAction\"];\n        const _paymentType = requestParameters[\"paymentType\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_query !== undefined && _query !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n        }\n        if (_intendedAction !== undefined && _intendedAction !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedAction, 'intendedAction');\n        }\n        if (_paymentType !== undefined && _paymentType !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _paymentType, 'paymentType');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/payment-templates`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getPaymentTemplatesUrl(requestParameters) {\n        const _query = requestParameters[\"query\"];\n        const _intendedAction = requestParameters[\"intendedAction\"];\n        const _paymentType = requestParameters[\"paymentType\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_query !== undefined && _query !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n        }\n        if (_intendedAction !== undefined && _intendedAction !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedAction, 'intendedAction');\n        }\n        if (_paymentType !== undefined && _paymentType !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _paymentType, 'paymentType');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/payment-templates${queryString ? `?${queryString}` : ''}`;\n    }\n    postPaymentTemplates(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _paymentTemplatesPostRequest = requestParameters[\"paymentTemplatesPostRequest\"];\n        if (_paymentTemplatesPostRequest === null || _paymentTemplatesPostRequest === undefined) {\n            throw new Error('Required parameter paymentTemplatesPostRequest was null or undefined when calling postPaymentTemplates.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/payment-templates`, _paymentTemplatesPostRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postPaymentTemplatesUrl(requestParameters) {\n        const _paymentTemplatesPostRequest = requestParameters[\"paymentTemplatesPostRequest\"];\n        if (_paymentTemplatesPostRequest === null || _paymentTemplatesPostRequest === undefined) {\n            throw new Error('Required parameter paymentTemplatesPostRequest was null or undefined when calling postPaymentTemplates.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/payment-templates`;\n    }\n    putPaymentTemplateById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _paymentTemplateId = requestParameters[\"paymentTemplateId\"];\n        if (_paymentTemplateId === null || _paymentTemplateId === undefined) {\n            throw new Error('Required parameter paymentTemplateId was null or undefined when calling putPaymentTemplateById.');\n        }\n        const _paymentTemplatesPutRequest = requestParameters[\"paymentTemplatesPutRequest\"];\n        if (_paymentTemplatesPutRequest === null || _paymentTemplatesPutRequest === undefined) {\n            throw new Error('Required parameter paymentTemplatesPutRequest was null or undefined when calling putPaymentTemplateById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/payment-templates/${encodeURIComponent(String(_paymentTemplateId))}`, _paymentTemplatesPutRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putPaymentTemplateByIdUrl(requestParameters) {\n        const _paymentTemplateId = requestParameters[\"paymentTemplateId\"];\n        if (_paymentTemplateId === null || _paymentTemplateId === undefined) {\n            throw new Error('Required parameter paymentTemplateId was null or undefined when calling putPaymentTemplateById.');\n        }\n        const _paymentTemplatesPutRequest = requestParameters[\"paymentTemplatesPutRequest\"];\n        if (_paymentTemplatesPutRequest === null || _paymentTemplatesPutRequest === undefined) {\n            throw new Error('Required parameter paymentTemplatesPutRequest was null or undefined when calling putPaymentTemplateById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/payment-templates/${encodeURIComponent(String(_paymentTemplateId))}`;\n    }\n}\nPaymentTemplatesHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentTemplatesHttpService, deps: [{ token: i1.HttpClient }, { token: PAYMENT_TEMPLATE_BASE_PATH, optional: true }, { token: PaymentTemplateConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nPaymentTemplatesHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentTemplatesHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentTemplatesHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [PAYMENT_TEMPLATE_BASE_PATH]\n                }] }, { type: PaymentTemplateConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst PaymentTemplatesHttpServiceDeletePaymentTemplateIdByPaymentTemplateIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-templates/{paymentTemplateId}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PaymentTemplatesHttpServiceGetPaymentTemplatesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-templates\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"name\": \"Textile supplier invoice\",\n                        \"createdAt\": \"2020-04-12T14:33:13.452Z\",\n                        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                        \"details\": {\n                            \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                            \"originatorAccount\": {\n                                \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                                \"externalArrangementId\": \"729190421493794513132\",\n                                \"identification\": {\n                                    \"identification\": \"NL53RABO0309349755\",\n                                    \"schemeName\": \"IBAN\"\n                                },\n                                \"name\": \"Smith Bonus Savings\"\n                            },\n                            \"instructionPriority\": \"NORM\",\n                            \"transferTransactionInformation\": {\n                                \"counterparty\": {\n                                    \"name\": \"Backbase\",\n                                    \"postalAddress\": {\n                                        \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                        \"country\": \"NL\"\n                                    }\n                                },\n                                \"counterpartyAccount\": {\n                                    \"identification\": {\n                                        \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                        \"schemeName\": \"IBAN\"\n                                    },\n                                    \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                    \"externalArrangementId\": \"9669274787995385962\"\n                                },\n                                \"instructedAmount\": {\n                                    \"amount\": \"5000.55\",\n                                    \"currencyCode\": \"EUR\"\n                                },\n                                \"remittanceInformation\": \"Salary\"\n                            }\n                        }\n                    }]\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PaymentTemplatesHttpServicePostPaymentTemplatesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-templates\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"template\": {\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"name\": \"Salary for John\",\n                        \"createdAt\": \"2020-04-12T14:33:13.452Z\",\n                        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                        \"details\": {\n                            \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                            \"originatorAccount\": {\n                                \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                                \"externalArrangementId\": \"729190421493794513132\",\n                                \"identification\": {\n                                    \"identification\": \"NL53RABO0309349755\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"instructionPriority\": \"NORM\",\n                            \"transferTransactionInformation\": {\n                                \"counterparty\": {\n                                    \"name\": \"John Smith\",\n                                    \"postalAddress\": {\n                                        \"addressLine1\": \"Schippersstraat 15, 1011AZ, Amsterdam\",\n                                        \"country\": \"NL\"\n                                    }\n                                },\n                                \"counterpartyAccount\": {\n                                    \"identification\": {\n                                        \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                        \"schemeName\": \"IBAN\"\n                                    },\n                                    \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                    \"externalArrangementId\": \"9669274787995385962\"\n                                },\n                                \"instructedAmount\": {\n                                    \"amount\": \"5000.55\",\n                                    \"currencyCode\": \"EUR\"\n                                },\n                                \"remittanceInformation\": \"Salary\"\n                            }\n                        }\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PaymentTemplatesHttpServicePutPaymentTemplateByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/payment-templates/{paymentTemplateId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 202,\n                body: {\n                    \"template\": {\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"name\": \"Salary for John\",\n                        \"createdAt\": \"2020-04-12T14:33:13.452Z\",\n                        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                        \"details\": {\n                            \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                            \"originatorAccount\": {\n                                \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                                \"externalArrangementId\": \"729190421493794513132\",\n                                \"identification\": {\n                                    \"identification\": \"NL53RABO0309349755\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"instructionPriority\": \"NORM\",\n                            \"transferTransactionInformation\": {\n                                \"counterparty\": {\n                                    \"name\": \"John Smith\",\n                                    \"postalAddress\": {\n                                        \"addressLine1\": \"Schippersstraat 15, 1011AZ, Amsterdam\",\n                                        \"country\": \"NL\"\n                                    }\n                                },\n                                \"counterpartyAccount\": {\n                                    \"identification\": {\n                                        \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                        \"schemeName\": \"IBAN\"\n                                    },\n                                    \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                    \"externalArrangementId\": \"9669274787995385962\"\n                                },\n                                \"instructedAmount\": {\n                                    \"amount\": \"5000.55\",\n                                    \"currencyCode\": \"EUR\"\n                                },\n                                \"remittanceInformation\": \"Salary\"\n                            }\n                        }\n                    }\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"template\": {\n                        \"createdAt\": \"2000-01-23T04:56:07.000+00:00\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"serviceAgreementId\": \"serviceAgreementId\",\n                        \"name\": \"name\",\n                        \"details\": {\n                            \"transferTransactionInformation\": {\n                                \"correspondentBank\": {\n                                    \"bankBranchCode\": \"bankBranchCode\",\n                                    \"postalAddress\": {\n                                        \"country\": \"country\",\n                                        \"streetName\": \"streetName\",\n                                        \"town\": \"town\",\n                                        \"countrySubDivision\": \"countrySubDivision\",\n                                        \"additions\": {\n                                            \"key\": \"additions\"\n                                        },\n                                        \"addressLine1\": \"addressLine1\",\n                                        \"addressLine2\": \"addressLine2\",\n                                        \"postCode\": \"postCode\"\n                                    },\n                                    \"additions\": {\n                                        \"key\": \"additions\"\n                                    },\n                                    \"name\": \"name\",\n                                    \"bic\": \"bic\"\n                                },\n                                \"counterpartyBank\": {\n                                    \"bankBranchCode\": \"bankBranchCode\",\n                                    \"postalAddress\": {\n                                        \"country\": \"country\",\n                                        \"streetName\": \"streetName\",\n                                        \"town\": \"town\",\n                                        \"countrySubDivision\": \"countrySubDivision\",\n                                        \"additions\": {\n                                            \"key\": \"additions\"\n                                        },\n                                        \"addressLine1\": \"addressLine1\",\n                                        \"addressLine2\": \"addressLine2\",\n                                        \"postCode\": \"postCode\"\n                                    },\n                                    \"additions\": {\n                                        \"key\": \"additions\"\n                                    },\n                                    \"name\": \"name\",\n                                    \"bic\": \"bic\"\n                                },\n                                \"targetCurrency\": \"targetCurrency\",\n                                \"additions\": {\n                                    \"key\": \"additions\"\n                                },\n                                \"purposeOfPayment\": {\n                                    \"code\": \"code\",\n                                    \"additions\": {\n                                        \"key\": \"additions\"\n                                    },\n                                    \"freeText\": \"freeText\",\n                                    \"description\": \"description\"\n                                },\n                                \"counterpartyAccount\": {\n                                    \"accountType\": \"accountType\",\n                                    \"selectedContact\": {\n                                        \"accountId\": \"accountId\",\n                                        \"additions\": {\n                                            \"key\": \"additions\"\n                                        },\n                                        \"contactId\": \"contactId\"\n                                    }\n                                },\n                                \"intermediaryBank\": {\n                                    \"bankBranchCode\": \"bankBranchCode\",\n                                    \"postalAddress\": {\n                                        \"country\": \"country\",\n                                        \"streetName\": \"streetName\",\n                                        \"town\": \"town\",\n                                        \"countrySubDivision\": \"countrySubDivision\",\n                                        \"additions\": {\n                                            \"key\": \"additions\"\n                                        },\n                                        \"addressLine1\": \"addressLine1\",\n                                        \"addressLine2\": \"addressLine2\",\n                                        \"postCode\": \"postCode\"\n                                    },\n                                    \"additions\": {\n                                        \"key\": \"additions\"\n                                    },\n                                    \"name\": \"name\",\n                                    \"bic\": \"bic\"\n                                },\n                                \"mandateIdentifier\": \"mandateIdentifier\",\n                                \"remittanceInformation\": \"remittanceInformation\",\n                                \"messageToBank\": \"messageToBank\",\n                                \"counterparty\": {\n                                    \"postalAddress\": {\n                                        \"country\": \"country\",\n                                        \"streetName\": \"streetName\",\n                                        \"town\": \"town\",\n                                        \"countrySubDivision\": \"countrySubDivision\",\n                                        \"additions\": {\n                                            \"key\": \"additions\"\n                                        },\n                                        \"addressLine1\": \"addressLine1\",\n                                        \"addressLine2\": \"addressLine2\",\n                                        \"postCode\": \"postCode\"\n                                    },\n                                    \"additions\": {\n                                        \"key\": \"additions\"\n                                    },\n                                    \"name\": \"name\",\n                                    \"recipientId\": \"recipientId\"\n                                },\n                                \"instructedAmount\": {\n                                    \"amount\": \"amount\",\n                                    \"additions\": {\n                                        \"key\": \"additions\"\n                                    },\n                                    \"currencyCode\": \"currencyCode\"\n                                },\n                                \"endToEndIdentification\": \"endToEndIdentification\"\n                            },\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"originatorAccount\": {\n                                \"arrangementId\": \"arrangementId\",\n                                \"identification\": {\n                                    \"identification\": \"identification\",\n                                    \"additions\": {\n                                        \"key\": \"additions\"\n                                    }\n                                },\n                                \"additions\": {\n                                    \"key\": \"additions\"\n                                },\n                                \"name\": \"name\",\n                                \"externalArrangementId\": \"externalArrangementId\"\n                            },\n                            \"entryClass\": \"entryClass\",\n                            \"paymentType\": \"paymentType\"\n                        },\n                        \"id\": \"id\",\n                        \"actions\": [null, null]\n                    },\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst PaymentTemplatesHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/payment-templates/{paymentTemplateId}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/payment-templates\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"name\": \"Textile supplier invoice\",\n                        \"createdAt\": \"2020-04-12T14:33:13.452Z\",\n                        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                        \"details\": {\n                            \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                            \"originatorAccount\": {\n                                \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                                \"externalArrangementId\": \"729190421493794513132\",\n                                \"identification\": {\n                                    \"identification\": \"NL53RABO0309349755\",\n                                    \"schemeName\": \"IBAN\"\n                                },\n                                \"name\": \"Smith Bonus Savings\"\n                            },\n                            \"instructionPriority\": \"NORM\",\n                            \"transferTransactionInformation\": {\n                                \"counterparty\": {\n                                    \"name\": \"Backbase\",\n                                    \"postalAddress\": {\n                                        \"addressLine1\": \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\",\n                                        \"country\": \"NL\"\n                                    }\n                                },\n                                \"counterpartyAccount\": {\n                                    \"identification\": {\n                                        \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                        \"schemeName\": \"IBAN\"\n                                    },\n                                    \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                    \"externalArrangementId\": \"9669274787995385962\"\n                                },\n                                \"instructedAmount\": {\n                                    \"amount\": \"5000.55\",\n                                    \"currencyCode\": \"EUR\"\n                                },\n                                \"remittanceInformation\": \"Salary\"\n                            }\n                        }\n                    }]\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/payment-templates\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"template\": {\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"name\": \"Salary for John\",\n                        \"createdAt\": \"2020-04-12T14:33:13.452Z\",\n                        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                        \"details\": {\n                            \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                            \"originatorAccount\": {\n                                \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                                \"externalArrangementId\": \"729190421493794513132\",\n                                \"identification\": {\n                                    \"identification\": \"NL53RABO0309349755\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"instructionPriority\": \"NORM\",\n                            \"transferTransactionInformation\": {\n                                \"counterparty\": {\n                                    \"name\": \"John Smith\",\n                                    \"postalAddress\": {\n                                        \"addressLine1\": \"Schippersstraat 15, 1011AZ, Amsterdam\",\n                                        \"country\": \"NL\"\n                                    }\n                                },\n                                \"counterpartyAccount\": {\n                                    \"identification\": {\n                                        \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                        \"schemeName\": \"IBAN\"\n                                    },\n                                    \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                    \"externalArrangementId\": \"9669274787995385962\"\n                                },\n                                \"instructedAmount\": {\n                                    \"amount\": \"5000.55\",\n                                    \"currencyCode\": \"EUR\"\n                                },\n                                \"remittanceInformation\": \"Salary\"\n                            }\n                        }\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/payment-templates/{paymentTemplateId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 202,\n                body: {\n                    \"template\": {\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"name\": \"Salary for John\",\n                        \"createdAt\": \"2020-04-12T14:33:13.452Z\",\n                        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                        \"details\": {\n                            \"paymentType\": \"SEPA_CREDIT_TRANSFER\",\n                            \"originatorAccount\": {\n                                \"arrangementId\": \"729190df-a421-4937-94fd-5e1a3da132cc\",\n                                \"externalArrangementId\": \"729190421493794513132\",\n                                \"identification\": {\n                                    \"identification\": \"NL53RABO0309349755\",\n                                    \"schemeName\": \"IBAN\"\n                                }\n                            },\n                            \"instructionPriority\": \"NORM\",\n                            \"transferTransactionInformation\": {\n                                \"counterparty\": {\n                                    \"name\": \"John Smith\",\n                                    \"postalAddress\": {\n                                        \"addressLine1\": \"Schippersstraat 15, 1011AZ, Amsterdam\",\n                                        \"country\": \"NL\"\n                                    }\n                                },\n                                \"counterpartyAccount\": {\n                                    \"identification\": {\n                                        \"identification\": \"FR708933019952AUNHQNQ0KZ\",\n                                        \"schemeName\": \"IBAN\"\n                                    },\n                                    \"arrangementId\": \"fe9d66ae-b927-4ac7-8799-c5a38a596ff2\",\n                                    \"externalArrangementId\": \"9669274787995385962\"\n                                },\n                                \"instructedAmount\": {\n                                    \"amount\": \"5000.55\",\n                                    \"currencyCode\": \"EUR\"\n                                },\n                                \"remittanceInformation\": \"Salary\"\n                            }\n                        }\n                    }\n                }\n            },\n            {\n                status: 202,\n                body: {\n                    \"template\": {\n                        \"createdAt\": \"2000-01-23T04:56:07.000+00:00\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"serviceAgreementId\": \"serviceAgreementId\",\n                        \"name\": \"name\",\n                        \"details\": {\n                            \"transferTransactionInformation\": {\n                                \"correspondentBank\": {\n                                    \"bankBranchCode\": \"bankBranchCode\",\n                                    \"postalAddress\": {\n                                        \"country\": \"country\",\n                                        \"streetName\": \"streetName\",\n                                        \"town\": \"town\",\n                                        \"countrySubDivision\": \"countrySubDivision\",\n                                        \"additions\": {\n                                            \"key\": \"additions\"\n                                        },\n                                        \"addressLine1\": \"addressLine1\",\n                                        \"addressLine2\": \"addressLine2\",\n                                        \"postCode\": \"postCode\"\n                                    },\n                                    \"additions\": {\n                                        \"key\": \"additions\"\n                                    },\n                                    \"name\": \"name\",\n                                    \"bic\": \"bic\"\n                                },\n                                \"counterpartyBank\": {\n                                    \"bankBranchCode\": \"bankBranchCode\",\n                                    \"postalAddress\": {\n                                        \"country\": \"country\",\n                                        \"streetName\": \"streetName\",\n                                        \"town\": \"town\",\n                                        \"countrySubDivision\": \"countrySubDivision\",\n                                        \"additions\": {\n                                            \"key\": \"additions\"\n                                        },\n                                        \"addressLine1\": \"addressLine1\",\n                                        \"addressLine2\": \"addressLine2\",\n                                        \"postCode\": \"postCode\"\n                                    },\n                                    \"additions\": {\n                                        \"key\": \"additions\"\n                                    },\n                                    \"name\": \"name\",\n                                    \"bic\": \"bic\"\n                                },\n                                \"targetCurrency\": \"targetCurrency\",\n                                \"additions\": {\n                                    \"key\": \"additions\"\n                                },\n                                \"purposeOfPayment\": {\n                                    \"code\": \"code\",\n                                    \"additions\": {\n                                        \"key\": \"additions\"\n                                    },\n                                    \"freeText\": \"freeText\",\n                                    \"description\": \"description\"\n                                },\n                                \"counterpartyAccount\": {\n                                    \"accountType\": \"accountType\",\n                                    \"selectedContact\": {\n                                        \"accountId\": \"accountId\",\n                                        \"additions\": {\n                                            \"key\": \"additions\"\n                                        },\n                                        \"contactId\": \"contactId\"\n                                    }\n                                },\n                                \"intermediaryBank\": {\n                                    \"bankBranchCode\": \"bankBranchCode\",\n                                    \"postalAddress\": {\n                                        \"country\": \"country\",\n                                        \"streetName\": \"streetName\",\n                                        \"town\": \"town\",\n                                        \"countrySubDivision\": \"countrySubDivision\",\n                                        \"additions\": {\n                                            \"key\": \"additions\"\n                                        },\n                                        \"addressLine1\": \"addressLine1\",\n                                        \"addressLine2\": \"addressLine2\",\n                                        \"postCode\": \"postCode\"\n                                    },\n                                    \"additions\": {\n                                        \"key\": \"additions\"\n                                    },\n                                    \"name\": \"name\",\n                                    \"bic\": \"bic\"\n                                },\n                                \"mandateIdentifier\": \"mandateIdentifier\",\n                                \"remittanceInformation\": \"remittanceInformation\",\n                                \"messageToBank\": \"messageToBank\",\n                                \"counterparty\": {\n                                    \"postalAddress\": {\n                                        \"country\": \"country\",\n                                        \"streetName\": \"streetName\",\n                                        \"town\": \"town\",\n                                        \"countrySubDivision\": \"countrySubDivision\",\n                                        \"additions\": {\n                                            \"key\": \"additions\"\n                                        },\n                                        \"addressLine1\": \"addressLine1\",\n                                        \"addressLine2\": \"addressLine2\",\n                                        \"postCode\": \"postCode\"\n                                    },\n                                    \"additions\": {\n                                        \"key\": \"additions\"\n                                    },\n                                    \"name\": \"name\",\n                                    \"recipientId\": \"recipientId\"\n                                },\n                                \"instructedAmount\": {\n                                    \"amount\": \"amount\",\n                                    \"additions\": {\n                                        \"key\": \"additions\"\n                                    },\n                                    \"currencyCode\": \"currencyCode\"\n                                },\n                                \"endToEndIdentification\": \"endToEndIdentification\"\n                            },\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"originatorAccount\": {\n                                \"arrangementId\": \"arrangementId\",\n                                \"identification\": {\n                                    \"identification\": \"identification\",\n                                    \"additions\": {\n                                        \"key\": \"additions\"\n                                    }\n                                },\n                                \"additions\": {\n                                    \"key\": \"additions\"\n                                },\n                                \"name\": \"name\",\n                                \"externalArrangementId\": \"externalArrangementId\"\n                            },\n                            \"entryClass\": \"entryClass\",\n                            \"paymentType\": \"paymentType\"\n                        },\n                        \"id\": \"id\",\n                        \"actions\": [null, null]\n                    },\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nexport { Action, COLLECTION_FORMATS, CONFIG_TOKEN, ChargeBearer, InstructionPriority, InvolvedPartyRole, PAYMENT_TEMPLATE_BASE_PATH, PaymentTemplateApiModule, PaymentTemplateConfiguration, PaymentTemplatesHttpService, PaymentTemplatesHttpServiceDeletePaymentTemplateIdByPaymentTemplateIdMocksProvider, PaymentTemplatesHttpServiceGetPaymentTemplatesMocksProvider, PaymentTemplatesHttpServiceMocksProvider, PaymentTemplatesHttpServicePostPaymentTemplatesMocksProvider, PaymentTemplatesHttpServicePutPaymentTemplateByIdMocksProvider, SchemeNames };\n"]},"metadata":{},"sourceType":"module"}