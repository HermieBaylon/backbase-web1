{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\nconst SchemeName = {\n  IBAN: 'IBAN',\n  BBAN: 'BBAN',\n  ID: 'ID'\n};\nconst StopCheckStatus = {\n  PENDING: 'PENDING',\n  ACCEPTED: 'ACCEPTED',\n  REJECTED: 'REJECTED',\n  EXPIRED: 'EXPIRED'\n};\nconst STOP_CHECKS_BASE_PATH = new InjectionToken('STOP_CHECKS_BASE_PATH');\nconst COLLECTION_FORMATS = {\n  'csv': ',',\n  'tsv': '   ',\n  'ssv': ' ',\n  'pipes': '|'\n};\n\nclass StopChecksConfiguration {\n  constructor(configurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n    this.encoder = configurationParameters.encoder;\n\n    if (configurationParameters.credentials) {\n      this.credentials = configurationParameters.credentials;\n    } else {\n      this.credentials = {};\n    }\n  }\n\n  selectHeaderContentType(contentTypes) {\n    if (contentTypes.length === 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n\n    return type;\n  }\n\n  selectHeaderAccept(accepts) {\n    if (accepts.length === 0) {\n      return undefined;\n    }\n\n    const type = accepts.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return accepts[0];\n    }\n\n    return type;\n  }\n\n  isJsonMime(mime) {\n    const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n    return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n  }\n\n  lookupCredential(key) {\n    const value = this.credentials[key];\n    return typeof value === 'function' ? value() : value;\n  }\n\n}\n\nconst CONFIG_TOKEN = new InjectionToken('api-data-module StopChecksConfiguration');\n\nclass StopChecksApiModule {\n  constructor(parentModule, http, dataModulesManager, config) {\n    if (parentModule) {\n      throw new Error('StopChecksApiModule is already loaded. Import in your base AppModule only.');\n    }\n\n    if (!http) {\n      throw new Error('You need to import the HttpClientModule in your AppModule! \\n' + 'See also https://github.com/angular/angular/issues/20575');\n    }\n\n    if (dataModulesManager) {\n      dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n        apiRoot: '',\n        servicePath: config.basePath || '',\n        headers: {}\n      });\n    }\n  }\n\n  static forRoot(configurationFactory) {\n    return {\n      ngModule: StopChecksApiModule,\n      providers: [{\n        provide: StopChecksConfiguration,\n        useFactory: configurationFactory\n      }]\n    };\n  }\n\n}\n\nStopChecksApiModule.ɵfac = function StopChecksApiModule_Factory(t) {\n  return new (t || StopChecksApiModule)(i0.ɵɵinject(StopChecksApiModule, 12), i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DataModulesManager, 8), i0.ɵɵinject(StopChecksConfiguration));\n};\n\nStopChecksApiModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: StopChecksApiModule\n});\nStopChecksApiModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [],\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StopChecksApiModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [],\n      exports: [],\n      providers: []\n    }]\n  }], function () {\n    return [{\n      type: StopChecksApiModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: i1.HttpClient,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2.DataModulesManager,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: StopChecksConfiguration\n    }];\n  }, null);\n})();\n\nclass CustomHttpParameterCodec {\n  encodeKey(k) {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v) {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k) {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v) {\n    return decodeURIComponent(v);\n  }\n\n}\n\nclass StopChecksHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new StopChecksConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  getStopChecks(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _from = requestParameters[\"from\"];\n    const _cursor = requestParameters[\"cursor\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_cursor !== undefined && _cursor !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/stop-checks`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getStopChecksUrl(requestParameters) {\n    const _from = requestParameters[\"from\"];\n    const _cursor = requestParameters[\"cursor\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_cursor !== undefined && _cursor !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v1/stop-checks${queryString ? `?${queryString}` : ''}`;\n  }\n\n  postStopChecks(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _stopCheckPostRequest = requestParameters[\"stopCheckPostRequest\"];\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v1/stop-checks`, _stopCheckPostRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postStopChecksUrl(requestParameters) {\n    const _stopCheckPostRequest = requestParameters[\"stopCheckPostRequest\"];\n    return `${this.configuration.basePath}/client-api/v1/stop-checks`;\n  }\n\n}\n\nStopChecksHttpService.ɵfac = function StopChecksHttpService_Factory(t) {\n  return new (t || StopChecksHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(STOP_CHECKS_BASE_PATH, 8), i0.ɵɵinject(StopChecksConfiguration, 8));\n};\n\nStopChecksHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: StopChecksHttpService,\n  factory: StopChecksHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StopChecksHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [STOP_CHECKS_BASE_PATH]\n      }]\n    }, {\n      type: StopChecksConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst StopChecksHttpServiceGetStopChecksMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/stop-checks\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"stopChecks\": [{\n        \"id\": \"cb881630-0860-4d2b-b0e1-ff288c531b91\",\n        \"originatorAccount\": {\n          \"name\": \"Main Current\",\n          \"identification\": \"0256108927\",\n          \"schemeName\": \"BBAN\"\n        },\n        \"reason\": \"Invalid name\",\n        \"status\": \"REJECTED\",\n        \"check\": {\n          \"number\": \"10000001337900112340\"\n        },\n        \"dateOfRequest\": \"2019-09-24T12:00:00.000Z\",\n        \"expirationDate\": \"2019-09-30\"\n      }, {\n        \"id\": \"d201e455-d744-44e5-8fc6-458be1cc99e7\",\n        \"originatorAccount\": {\n          \"name\": \"Shared Current\",\n          \"identification\": \"0256108944\",\n          \"schemeName\": \"BBAN\"\n        },\n        \"reason\": \"Checks stolen\",\n        \"status\": \"ACCEPTED\",\n        \"checkNumberRange\": {\n          \"firstNumber\": \"10000001337900112345\",\n          \"lastNumber\": \"10000001337900112355\"\n        },\n        \"dateOfRequest\": \"2019-09-30T16:00:00.000Z\",\n        \"expirationDate\": \"2019-10-07\"\n      }, {\n        \"id\": \"b60a8955-1523-429d-bdbe-905d95225a9c\",\n        \"originatorAccount\": {\n          \"name\": \"Main Checking Current\",\n          \"identification\": \"0256108963\",\n          \"schemeName\": \"BBAN\"\n        },\n        \"reason\": \"Insufficient funds\",\n        \"status\": \"PENDING\",\n        \"check\": {\n          \"number\": \"10000001337900112344\",\n          \"amount\": {\n            \"currencyCode\": \"USD\",\n            \"amount\": \"913.32\"\n          },\n          \"payeeName\": \"Jack S. P. Arrow\",\n          \"dateIssued\": \"2018-10-18\"\n        },\n        \"dateOfRequest\": \"2019-10-24T12:00:00.000Z\",\n        \"expirationDate\": \"2019-10-30\"\n      }],\n      \"totalStopChecks\": 3\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst StopChecksHttpServicePostStopChecksMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/stop-checks\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"stopCheck\": {\n        \"id\": \"cb881630-0860-4d2b-b0e1-ff288c531b91\",\n        \"originatorAccount\": {\n          \"name\": \"Main Current\",\n          \"identification\": \"0256108927\",\n          \"schemeName\": \"BBAN\"\n        },\n        \"reason\": \"Invalid name\",\n        \"status\": \"REJECTED\",\n        \"check\": {\n          \"number\": \"10000001337900112340\"\n        },\n        \"dateOfRequest\": \"2019-09-24T12:00:00.000Z\",\n        \"expirationDate\": \"2019-09-30\"\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"stopCheck\": {\n        \"id\": \"b60a8955-1523-429d-bdbe-905d95225a9c\",\n        \"originatorAccount\": {\n          \"name\": \"Main Checking Current\",\n          \"identification\": \"0256108963\",\n          \"schemeName\": \"BBAN\"\n        },\n        \"reason\": \"Insufficient funds\",\n        \"status\": \"PENDING\",\n        \"check\": {\n          \"number\": \"10000001337900112344\",\n          \"amount\": {\n            \"currencyCode\": \"USD\",\n            \"amount\": \"913.32\"\n          },\n          \"payeeName\": \"Jack S. P. Arrow\",\n          \"dateIssued\": \"2018-10-18\"\n        },\n        \"dateOfRequest\": \"2019-10-24T12:00:00.000Z\",\n        \"expirationDate\": \"2019-10-30\"\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"stopCheck\": {\n        \"id\": \"d201e455-d744-44e5-8fc6-458be1cc99e7\",\n        \"originatorAccount\": {\n          \"name\": \"Shared Current\",\n          \"identification\": \"0256108944\",\n          \"schemeName\": \"BBAN\"\n        },\n        \"reason\": \"Checks stolen\",\n        \"status\": \"ACCEPTED\",\n        \"checkNumberRange\": {\n          \"firstNumber\": \"10000001337900112345\",\n          \"lastNumber\": \"10000001337900112355\"\n        },\n        \"dateOfRequest\": \"2019-09-30T16:00:00.000Z\",\n        \"expirationDate\": \"2019-10-07\"\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst StopChecksHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/stop-checks\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"stopChecks\": [{\n        \"id\": \"cb881630-0860-4d2b-b0e1-ff288c531b91\",\n        \"originatorAccount\": {\n          \"name\": \"Main Current\",\n          \"identification\": \"0256108927\",\n          \"schemeName\": \"BBAN\"\n        },\n        \"reason\": \"Invalid name\",\n        \"status\": \"REJECTED\",\n        \"check\": {\n          \"number\": \"10000001337900112340\"\n        },\n        \"dateOfRequest\": \"2019-09-24T12:00:00.000Z\",\n        \"expirationDate\": \"2019-09-30\"\n      }, {\n        \"id\": \"d201e455-d744-44e5-8fc6-458be1cc99e7\",\n        \"originatorAccount\": {\n          \"name\": \"Shared Current\",\n          \"identification\": \"0256108944\",\n          \"schemeName\": \"BBAN\"\n        },\n        \"reason\": \"Checks stolen\",\n        \"status\": \"ACCEPTED\",\n        \"checkNumberRange\": {\n          \"firstNumber\": \"10000001337900112345\",\n          \"lastNumber\": \"10000001337900112355\"\n        },\n        \"dateOfRequest\": \"2019-09-30T16:00:00.000Z\",\n        \"expirationDate\": \"2019-10-07\"\n      }, {\n        \"id\": \"b60a8955-1523-429d-bdbe-905d95225a9c\",\n        \"originatorAccount\": {\n          \"name\": \"Main Checking Current\",\n          \"identification\": \"0256108963\",\n          \"schemeName\": \"BBAN\"\n        },\n        \"reason\": \"Insufficient funds\",\n        \"status\": \"PENDING\",\n        \"check\": {\n          \"number\": \"10000001337900112344\",\n          \"amount\": {\n            \"currencyCode\": \"USD\",\n            \"amount\": \"913.32\"\n          },\n          \"payeeName\": \"Jack S. P. Arrow\",\n          \"dateIssued\": \"2018-10-18\"\n        },\n        \"dateOfRequest\": \"2019-10-24T12:00:00.000Z\",\n        \"expirationDate\": \"2019-10-30\"\n      }],\n      \"totalStopChecks\": 3\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/stop-checks\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"stopCheck\": {\n        \"id\": \"cb881630-0860-4d2b-b0e1-ff288c531b91\",\n        \"originatorAccount\": {\n          \"name\": \"Main Current\",\n          \"identification\": \"0256108927\",\n          \"schemeName\": \"BBAN\"\n        },\n        \"reason\": \"Invalid name\",\n        \"status\": \"REJECTED\",\n        \"check\": {\n          \"number\": \"10000001337900112340\"\n        },\n        \"dateOfRequest\": \"2019-09-24T12:00:00.000Z\",\n        \"expirationDate\": \"2019-09-30\"\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"stopCheck\": {\n        \"id\": \"b60a8955-1523-429d-bdbe-905d95225a9c\",\n        \"originatorAccount\": {\n          \"name\": \"Main Checking Current\",\n          \"identification\": \"0256108963\",\n          \"schemeName\": \"BBAN\"\n        },\n        \"reason\": \"Insufficient funds\",\n        \"status\": \"PENDING\",\n        \"check\": {\n          \"number\": \"10000001337900112344\",\n          \"amount\": {\n            \"currencyCode\": \"USD\",\n            \"amount\": \"913.32\"\n          },\n          \"payeeName\": \"Jack S. P. Arrow\",\n          \"dateIssued\": \"2018-10-18\"\n        },\n        \"dateOfRequest\": \"2019-10-24T12:00:00.000Z\",\n        \"expirationDate\": \"2019-10-30\"\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"stopCheck\": {\n        \"id\": \"d201e455-d744-44e5-8fc6-458be1cc99e7\",\n        \"originatorAccount\": {\n          \"name\": \"Shared Current\",\n          \"identification\": \"0256108944\",\n          \"schemeName\": \"BBAN\"\n        },\n        \"reason\": \"Checks stolen\",\n        \"status\": \"ACCEPTED\",\n        \"checkNumberRange\": {\n          \"firstNumber\": \"10000001337900112345\",\n          \"lastNumber\": \"10000001337900112355\"\n        },\n        \"dateOfRequest\": \"2019-09-30T16:00:00.000Z\",\n        \"expirationDate\": \"2019-10-07\"\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nexport { COLLECTION_FORMATS, CONFIG_TOKEN, STOP_CHECKS_BASE_PATH, SchemeName, StopCheckStatus, StopChecksApiModule, StopChecksConfiguration, StopChecksHttpService, StopChecksHttpServiceGetStopChecksMocksProvider, StopChecksHttpServiceMocksProvider, StopChecksHttpServicePostStopChecksMocksProvider };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/stop-checks-http-ang/fesm2015/backbase-stop-checks-http-ang.js"],"names":["i0","InjectionToken","NgModule","Optional","SkipSelf","Injectable","Inject","i1","HttpHeaders","HttpParams","i2","createMocks","SchemeName","IBAN","BBAN","ID","StopCheckStatus","PENDING","ACCEPTED","REJECTED","EXPIRED","STOP_CHECKS_BASE_PATH","COLLECTION_FORMATS","StopChecksConfiguration","constructor","configurationParameters","apiKeys","username","password","accessToken","basePath","withCredentials","encoder","credentials","selectHeaderContentType","contentTypes","length","undefined","type","find","x","isJsonMime","selectHeaderAccept","accepts","mime","jsonMime","RegExp","test","toLowerCase","lookupCredential","key","value","CONFIG_TOKEN","StopChecksApiModule","parentModule","http","dataModulesManager","config","Error","setModuleConfig","apiRoot","servicePath","headers","forRoot","configurationFactory","ngModule","providers","provide","useFactory","ɵfac","HttpClient","DataModulesManager","ɵmod","ɵinj","args","imports","declarations","exports","decorators","CustomHttpParameterCodec","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeURIComponent","decodeValue","StopChecksHttpService","httpClient","configuration","defaultHeaders","addToHttpParams","httpParams","Date","addToHttpParamsRecursive","Array","isArray","forEach","elem","append","toISOString","substr","Object","keys","getStopChecks","requestParameters","observe","reportProgress","options","_from","_cursor","_size","queryParameters","httpHeaderAcceptSelected","httpHeaderAccept","httpHeaderAccepts","set","responseType","startsWith","get","params","getStopChecksUrl","queryString","toString","postStopChecks","_stopCheckPostRequest","consumes","httpContentTypeSelected","post","postStopChecksUrl","ɵprov","providedIn","StopChecksHttpServiceGetStopChecksMocksProvider","urlPattern","method","responses","status","body","StopChecksHttpServicePostStopChecksMocksProvider","StopChecksHttpServiceMocksProvider"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\n\nconst SchemeName = {\n    IBAN: 'IBAN',\n    BBAN: 'BBAN',\n    ID: 'ID'\n};\n\nconst StopCheckStatus = {\n    PENDING: 'PENDING',\n    ACCEPTED: 'ACCEPTED',\n    REJECTED: 'REJECTED',\n    EXPIRED: 'EXPIRED'\n};\n\nconst STOP_CHECKS_BASE_PATH = new InjectionToken('STOP_CHECKS_BASE_PATH');\nconst COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n};\n\nclass StopChecksConfiguration {\n    constructor(configurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n    selectHeaderContentType(contentTypes) {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n        const type = contentTypes.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n    selectHeaderAccept(accepts) {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n        const type = accepts.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n    lookupCredential(key) {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\nconst CONFIG_TOKEN = new InjectionToken('api-data-module StopChecksConfiguration');\n\nclass StopChecksApiModule {\n    constructor(parentModule, http, dataModulesManager, config) {\n        if (parentModule) {\n            throw new Error('StopChecksApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n                'See also https://github.com/angular/angular/issues/20575');\n        }\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n    static forRoot(configurationFactory) {\n        return {\n            ngModule: StopChecksApiModule,\n            providers: [{ provide: StopChecksConfiguration, useFactory: configurationFactory }]\n        };\n    }\n}\nStopChecksApiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: StopChecksApiModule, deps: [{ token: StopChecksApiModule, optional: true, skipSelf: true }, { token: i1.HttpClient, optional: true }, { token: i2.DataModulesManager, optional: true }, { token: StopChecksConfiguration }], target: i0.ɵɵFactoryTarget.NgModule });\nStopChecksApiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: StopChecksApiModule });\nStopChecksApiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: StopChecksApiModule, providers: [], imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: StopChecksApiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [],\n                    exports: [],\n                    providers: []\n                }]\n        }], ctorParameters: function () { return [{ type: StopChecksApiModule, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DataModulesManager, decorators: [{\n                    type: Optional\n                }] }, { type: StopChecksConfiguration }]; } });\n\nclass CustomHttpParameterCodec {\n    encodeKey(k) {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v) {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k) {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v) {\n        return decodeURIComponent(v);\n    }\n}\n\nclass StopChecksHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new StopChecksConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    getStopChecks(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/stop-checks`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getStopChecksUrl(requestParameters) {\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/stop-checks${queryString ? `?${queryString}` : ''}`;\n    }\n    postStopChecks(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _stopCheckPostRequest = requestParameters[\"stopCheckPostRequest\"];\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v1/stop-checks`, _stopCheckPostRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postStopChecksUrl(requestParameters) {\n        const _stopCheckPostRequest = requestParameters[\"stopCheckPostRequest\"];\n        return `${this.configuration.basePath}/client-api/v1/stop-checks`;\n    }\n}\nStopChecksHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: StopChecksHttpService, deps: [{ token: i1.HttpClient }, { token: STOP_CHECKS_BASE_PATH, optional: true }, { token: StopChecksConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nStopChecksHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: StopChecksHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: StopChecksHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [STOP_CHECKS_BASE_PATH]\n                }] }, { type: StopChecksConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst StopChecksHttpServiceGetStopChecksMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/stop-checks\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"stopChecks\": [{\n                            \"id\": \"cb881630-0860-4d2b-b0e1-ff288c531b91\",\n                            \"originatorAccount\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": \"0256108927\",\n                                \"schemeName\": \"BBAN\"\n                            },\n                            \"reason\": \"Invalid name\",\n                            \"status\": \"REJECTED\",\n                            \"check\": {\n                                \"number\": \"10000001337900112340\"\n                            },\n                            \"dateOfRequest\": \"2019-09-24T12:00:00.000Z\",\n                            \"expirationDate\": \"2019-09-30\"\n                        }, {\n                            \"id\": \"d201e455-d744-44e5-8fc6-458be1cc99e7\",\n                            \"originatorAccount\": {\n                                \"name\": \"Shared Current\",\n                                \"identification\": \"0256108944\",\n                                \"schemeName\": \"BBAN\"\n                            },\n                            \"reason\": \"Checks stolen\",\n                            \"status\": \"ACCEPTED\",\n                            \"checkNumberRange\": {\n                                \"firstNumber\": \"10000001337900112345\",\n                                \"lastNumber\": \"10000001337900112355\"\n                            },\n                            \"dateOfRequest\": \"2019-09-30T16:00:00.000Z\",\n                            \"expirationDate\": \"2019-10-07\"\n                        }, {\n                            \"id\": \"b60a8955-1523-429d-bdbe-905d95225a9c\",\n                            \"originatorAccount\": {\n                                \"name\": \"Main Checking Current\",\n                                \"identification\": \"0256108963\",\n                                \"schemeName\": \"BBAN\"\n                            },\n                            \"reason\": \"Insufficient funds\",\n                            \"status\": \"PENDING\",\n                            \"check\": {\n                                \"number\": \"10000001337900112344\",\n                                \"amount\": {\n                                    \"currencyCode\": \"USD\",\n                                    \"amount\": \"913.32\"\n                                },\n                                \"payeeName\": \"Jack S. P. Arrow\",\n                                \"dateIssued\": \"2018-10-18\"\n                            },\n                            \"dateOfRequest\": \"2019-10-24T12:00:00.000Z\",\n                            \"expirationDate\": \"2019-10-30\"\n                        }],\n                    \"totalStopChecks\": 3\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst StopChecksHttpServicePostStopChecksMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/stop-checks\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"stopCheck\": {\n                        \"id\": \"cb881630-0860-4d2b-b0e1-ff288c531b91\",\n                        \"originatorAccount\": {\n                            \"name\": \"Main Current\",\n                            \"identification\": \"0256108927\",\n                            \"schemeName\": \"BBAN\"\n                        },\n                        \"reason\": \"Invalid name\",\n                        \"status\": \"REJECTED\",\n                        \"check\": {\n                            \"number\": \"10000001337900112340\"\n                        },\n                        \"dateOfRequest\": \"2019-09-24T12:00:00.000Z\",\n                        \"expirationDate\": \"2019-09-30\"\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"stopCheck\": {\n                        \"id\": \"b60a8955-1523-429d-bdbe-905d95225a9c\",\n                        \"originatorAccount\": {\n                            \"name\": \"Main Checking Current\",\n                            \"identification\": \"0256108963\",\n                            \"schemeName\": \"BBAN\"\n                        },\n                        \"reason\": \"Insufficient funds\",\n                        \"status\": \"PENDING\",\n                        \"check\": {\n                            \"number\": \"10000001337900112344\",\n                            \"amount\": {\n                                \"currencyCode\": \"USD\",\n                                \"amount\": \"913.32\"\n                            },\n                            \"payeeName\": \"Jack S. P. Arrow\",\n                            \"dateIssued\": \"2018-10-18\"\n                        },\n                        \"dateOfRequest\": \"2019-10-24T12:00:00.000Z\",\n                        \"expirationDate\": \"2019-10-30\"\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"stopCheck\": {\n                        \"id\": \"d201e455-d744-44e5-8fc6-458be1cc99e7\",\n                        \"originatorAccount\": {\n                            \"name\": \"Shared Current\",\n                            \"identification\": \"0256108944\",\n                            \"schemeName\": \"BBAN\"\n                        },\n                        \"reason\": \"Checks stolen\",\n                        \"status\": \"ACCEPTED\",\n                        \"checkNumberRange\": {\n                            \"firstNumber\": \"10000001337900112345\",\n                            \"lastNumber\": \"10000001337900112355\"\n                        },\n                        \"dateOfRequest\": \"2019-09-30T16:00:00.000Z\",\n                        \"expirationDate\": \"2019-10-07\"\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst StopChecksHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v1/stop-checks\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"stopChecks\": [{\n                            \"id\": \"cb881630-0860-4d2b-b0e1-ff288c531b91\",\n                            \"originatorAccount\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": \"0256108927\",\n                                \"schemeName\": \"BBAN\"\n                            },\n                            \"reason\": \"Invalid name\",\n                            \"status\": \"REJECTED\",\n                            \"check\": {\n                                \"number\": \"10000001337900112340\"\n                            },\n                            \"dateOfRequest\": \"2019-09-24T12:00:00.000Z\",\n                            \"expirationDate\": \"2019-09-30\"\n                        }, {\n                            \"id\": \"d201e455-d744-44e5-8fc6-458be1cc99e7\",\n                            \"originatorAccount\": {\n                                \"name\": \"Shared Current\",\n                                \"identification\": \"0256108944\",\n                                \"schemeName\": \"BBAN\"\n                            },\n                            \"reason\": \"Checks stolen\",\n                            \"status\": \"ACCEPTED\",\n                            \"checkNumberRange\": {\n                                \"firstNumber\": \"10000001337900112345\",\n                                \"lastNumber\": \"10000001337900112355\"\n                            },\n                            \"dateOfRequest\": \"2019-09-30T16:00:00.000Z\",\n                            \"expirationDate\": \"2019-10-07\"\n                        }, {\n                            \"id\": \"b60a8955-1523-429d-bdbe-905d95225a9c\",\n                            \"originatorAccount\": {\n                                \"name\": \"Main Checking Current\",\n                                \"identification\": \"0256108963\",\n                                \"schemeName\": \"BBAN\"\n                            },\n                            \"reason\": \"Insufficient funds\",\n                            \"status\": \"PENDING\",\n                            \"check\": {\n                                \"number\": \"10000001337900112344\",\n                                \"amount\": {\n                                    \"currencyCode\": \"USD\",\n                                    \"amount\": \"913.32\"\n                                },\n                                \"payeeName\": \"Jack S. P. Arrow\",\n                                \"dateIssued\": \"2018-10-18\"\n                            },\n                            \"dateOfRequest\": \"2019-10-24T12:00:00.000Z\",\n                            \"expirationDate\": \"2019-10-30\"\n                        }],\n                    \"totalStopChecks\": 3\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/stop-checks\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"stopCheck\": {\n                        \"id\": \"cb881630-0860-4d2b-b0e1-ff288c531b91\",\n                        \"originatorAccount\": {\n                            \"name\": \"Main Current\",\n                            \"identification\": \"0256108927\",\n                            \"schemeName\": \"BBAN\"\n                        },\n                        \"reason\": \"Invalid name\",\n                        \"status\": \"REJECTED\",\n                        \"check\": {\n                            \"number\": \"10000001337900112340\"\n                        },\n                        \"dateOfRequest\": \"2019-09-24T12:00:00.000Z\",\n                        \"expirationDate\": \"2019-09-30\"\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"stopCheck\": {\n                        \"id\": \"b60a8955-1523-429d-bdbe-905d95225a9c\",\n                        \"originatorAccount\": {\n                            \"name\": \"Main Checking Current\",\n                            \"identification\": \"0256108963\",\n                            \"schemeName\": \"BBAN\"\n                        },\n                        \"reason\": \"Insufficient funds\",\n                        \"status\": \"PENDING\",\n                        \"check\": {\n                            \"number\": \"10000001337900112344\",\n                            \"amount\": {\n                                \"currencyCode\": \"USD\",\n                                \"amount\": \"913.32\"\n                            },\n                            \"payeeName\": \"Jack S. P. Arrow\",\n                            \"dateIssued\": \"2018-10-18\"\n                        },\n                        \"dateOfRequest\": \"2019-10-24T12:00:00.000Z\",\n                        \"expirationDate\": \"2019-10-30\"\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"stopCheck\": {\n                        \"id\": \"d201e455-d744-44e5-8fc6-458be1cc99e7\",\n                        \"originatorAccount\": {\n                            \"name\": \"Shared Current\",\n                            \"identification\": \"0256108944\",\n                            \"schemeName\": \"BBAN\"\n                        },\n                        \"reason\": \"Checks stolen\",\n                        \"status\": \"ACCEPTED\",\n                        \"checkNumberRange\": {\n                            \"firstNumber\": \"10000001337900112345\",\n                            \"lastNumber\": \"10000001337900112355\"\n                        },\n                        \"dateOfRequest\": \"2019-09-30T16:00:00.000Z\",\n                        \"expirationDate\": \"2019-10-07\"\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nexport { COLLECTION_FORMATS, CONFIG_TOKEN, STOP_CHECKS_BASE_PATH, SchemeName, StopCheckStatus, StopChecksApiModule, StopChecksConfiguration, StopChecksHttpService, StopChecksHttpServiceGetStopChecksMocksProvider, StopChecksHttpServiceMocksProvider, StopChecksHttpServicePostStopChecksMocksProvider };\n"]},"metadata":{},"sourceType":"module"}