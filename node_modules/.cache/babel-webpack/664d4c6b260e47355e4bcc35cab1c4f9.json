{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, PLATFORM_ID, Inject, ViewChild, Directive, Injectable, Optional, NgModule } from '@angular/core';\nimport * as i1 from '@swimlane/ngx-charts';\nimport { formatLabel, BaseChartComponent, ScaleType, calculateViewDimensions, ColorHelper, PlacementTypes, StyleTypes, BarOrientation, LegendPosition, NgxChartsModule } from '@swimlane/ngx-charts';\nimport * as i1$1 from '@angular/common';\nimport { DatePipe, CommonModule, CurrencyPipe } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport * as i1$2 from '@backbase/foundation-ang/future';\nimport * as i1$4 from '@backbase/foundation-ang/core';\nimport { BbTemplate, BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport * as i2 from '@backbase/ui-ang/css-variables-lib';\nimport { CssVariablesService } from '@backbase/ui-ang/css-variables-lib';\nimport { combineLatest, from, BehaviorSubject, of } from 'rxjs';\nimport { map, tap, filter, switchMap, catchError, pluck } from 'rxjs/operators';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { scaleBand, scaleLinear } from 'd3-scale';\nimport * as i5 from '@backbase/ui-ang/amount';\nimport { FormatAmountModule } from '@backbase/ui-ang/amount';\nimport * as i1$3 from '@backbase/data-ang/transactions';\nimport * as i2$1 from '@angular/router';\nimport * as i5$1 from '@backbase/ui-ang/loading-indicator';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport * as i6 from '@backbase/ui-ang/empty-state';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport * as i8 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\n\nfunction BbTurnoversLegendComponent_header_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"header\", 5);\n    i0.ɵɵelementStart(1, \"span\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.title);\n  }\n}\n\nfunction BbTurnoversLegendComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 7);\n    i0.ɵɵelementStart(1, \"ngx-charts-legend-entry\", 8);\n    i0.ɵɵlistener(\"select\", function BbTurnoversLegendComponent_li_4_Template_ngx_charts_legend_entry_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.labelClick.emit($event);\n    })(\"activate\", function BbTurnoversLegendComponent_li_4_Template_ngx_charts_legend_entry_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.activate($event);\n    })(\"deactivate\", function BbTurnoversLegendComponent_li_4_Template_ngx_charts_legend_entry_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.deactivate($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const entry_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"label\", entry_r2.label)(\"formattedLabel\", entry_r2.formattedLabel)(\"color\", entry_r2.color)(\"isActive\", ctx_r1.isActive(entry_r2));\n  }\n}\n\nconst _c0 = [\"bb-charts-grid-panel-series\", \"\"];\n\nfunction BbGridPanelSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const gridPanel_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"grid-panel\", true)(\"forecast\", gridPanel_r1.class === \"forecast\");\n    i0.ɵɵproperty(\"height\", gridPanel_r1.height)(\"width\", gridPanel_r1.width)(\"x\", gridPanel_r1.x)(\"y\", gridPanel_r1.y);\n  }\n}\n\nconst _c1 = [\"bb-charts-series-vertical\", \"\"];\n\nfunction BbSeriesVerticalComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function BbSeriesVerticalComponent__svg_g_0_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onClick($event);\n    })(\"activate\", function BbSeriesVerticalComponent__svg_g_0_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.activate.emit($event);\n    })(\"deactivate\", function BbSeriesVerticalComponent__svg_g_0_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.deactivate.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const bar_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"@.disabled\", !ctx_r0.animations)(\"width\", bar_r2.width)(\"height\", bar_r2.height)(\"x\", bar_r2.x)(\"y\", bar_r2.y)(\"fill\", bar_r2.color)(\"stops\", bar_r2.gradientStops)(\"data\", bar_r2.graphData)(\"orientation\", ctx_r0.orientation)(\"roundEdges\", bar_r2.roundEdges)(\"gradient\", ctx_r0.gradient)(\"isActive\", ctx_r0.isActive(bar_r2))(\"tooltipCssClass\", \"chart-tooltip p-0 border-0\")(\"tooltipShowCaret\", ctx_r0.tooltipShowCaret)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.tooltipPlacement)(\"tooltipType\", ctx_r0.tooltipType)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : bar_r2.tooltipText)(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", bar_r2.data)(\"animations\", ctx_r0.animations);\n  }\n}\n\nfunction BbSeriesVerticalComponent__svg_g_1__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BbSeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const i_r9 = restoredCtx.index;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.dataLabelHeightChanged.emit({\n        size: $event,\n        index: i_r9\n      });\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const b_r8 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"barX\", b_r8.x)(\"barY\", b_r8.y)(\"barWidth\", b_r8.width)(\"barHeight\", b_r8.height)(\"value\", b_r8.total)(\"valueFormatting\", ctx_r7.dataLabelFormatting)(\"orientation\", ctx_r7.orientation);\n  }\n}\n\nfunction BbSeriesVerticalComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BbSeriesVerticalComponent__svg_g_1__svg_g_1_Template, 1, 7, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.barsForDataLabels)(\"ngForTrackBy\", ctx_r1.trackDataLabelBy);\n  }\n}\n\nfunction TurnoversVerticalGroupedBarChartComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function TurnoversVerticalGroupedBarChartComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.updateXAxisHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.groupScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"xAxisOffset\", ctx_r0.dataLabelMaxHeight.negative);\n  }\n}\n\nfunction TurnoversVerticalGroupedBarChartComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function TurnoversVerticalGroupedBarChartComponent__svg_g_4_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.updateYAxisWidth($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.valueScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"tickFormatting\", ctx_r1.yAxisTickFormatting);\n  }\n}\n\nfunction TurnoversVerticalGroupedBarChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function TurnoversVerticalGroupedBarChartComponent__svg_g_5_Template__svg_g_select_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const group_r7 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onClick($event, group_r7);\n    })(\"activate\", function TurnoversVerticalGroupedBarChartComponent__svg_g_5_Template__svg_g_activate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const group_r7 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onActivate($event, group_r7);\n    })(\"deactivate\", function TurnoversVerticalGroupedBarChartComponent__svg_g_5_Template__svg_g_deactivate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const group_r7 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onDeactivate($event, group_r7);\n    })(\"dataLabelHeightChanged\", function TurnoversVerticalGroupedBarChartComponent__svg_g_5_Template__svg_g_dataLabelHeightChanged_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const index_r8 = restoredCtx.index;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.onDataLabelMaxHeightChanged($event, index_r8);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const group_r7 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"activeEntries\", ctx_r2.activeEntries)(\"xScale\", ctx_r2.innerScale)(\"yScale\", ctx_r2.valueScale)(\"colors\", ctx_r2.colors)(\"series\", group_r7.series)(\"dims\", ctx_r2.dims)(\"gradient\", ctx_r2.gradient)(\"tooltipDisabled\", ctx_r2.tooltipDisabled)(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"showDataLabel\", ctx_r2.showDataLabel)(\"dataLabelFormatting\", ctx_r2.dataLabelFormatting)(\"seriesName\", group_r7.name)(\"groupData\", group_r7)(\"roundEdges\", ctx_r2.roundEdges)(\"animations\", ctx_r2.animations);\n    i0.ɵɵattribute(\"transform\", ctx_r2.groupTransform(group_r7))(\"opacity\", group_r7.badge ? 0.5 : 1);\n  }\n}\n\nconst _c2 = function (a0, a1) {\n  return [a0, a1];\n};\n\nconst _c3 = function (a0, a1, a2, a3, a4, a5) {\n  return {\n    legendOptions: a0,\n    activeEntries: a1,\n    height: a2,\n    onActivate: a3,\n    onDeactivate: a4,\n    onClick: a5\n  };\n};\n\nconst _c4 = [\"bbChartsBarVertical2d\"];\n\nconst _c5 = function (a0) {\n  return {\n    options: a0\n  };\n};\n\nfunction TurnoversBarChartComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementContainer(1, 8);\n    i0.ɵɵelementContainer(2, 9);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const options_r7 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"bbHostRef\", ctx_r0)(\"bbTemplateContext\", i0.ɵɵpureFunction1(4, _c5, options_r7));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"bbHostRef\", ctx_r0)(\"bbTemplateContext\", i0.ɵɵpureFunction1(6, _c5, options_r7));\n  }\n}\n\nconst _c6 = function (a0) {\n  return {\n    domain: a0\n  };\n};\n\nfunction TurnoversBarChartComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"bb-charts-bar-vertical-2d\", 11, 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const hostRef_r8 = ctx.$implicit;\n    const options_r9 = ctx.context.options;\n    const ctx_r1 = i0.ɵɵnextContext();\n\n    const _r3 = i0.ɵɵreference(6);\n\n    const _r5 = i0.ɵɵreference(8);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"scheme\", i0.ɵɵpureFunction1(15, _c6, options_r9.colors))(\"results\", hostRef_r8.chartSeriesData)(\"groupsData\", hostRef_r8.chartSeriesData)(\"xAxis\", options_r9.showXAxis)(\"yAxis\", options_r9.showYAxis)(\"showXAxisLabel\", options_r9.showXAxisLabel)(\"showYAxisLabel\", options_r9.showYAxisLabel)(\"legend\", options_r9.showLegend)(\"gradient\", options_r9.gradient)(\"barPadding\", 0)(\"groupPadding\", 6)(\"roundEdges\", true)(\"legendTemplate\", _r3)(\"tooltipTemplate\", _r5)(\"yAxisTickFormatting\", ctx_r1.yAxisTickFormatting.bind(ctx_r1));\n  }\n}\n\nfunction TurnoversBarChartComponent_ng_template_4_Template(rf, ctx) {}\n\nfunction TurnoversBarChartComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"bb-charts-legend\", 13);\n    i0.ɵɵlistener(\"labelClick\", function TurnoversBarChartComponent_ng_template_5_Template_bb_charts_legend_labelClick_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const onClick_r18 = restoredCtx.onClick;\n      return onClick_r18($event);\n    })(\"labelActivate\", function TurnoversBarChartComponent_ng_template_5_Template_bb_charts_legend_labelActivate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const onActivate_r16 = restoredCtx.onActivate;\n      return onActivate_r16($event);\n    })(\"labelDeactivate\", function TurnoversBarChartComponent_ng_template_5_Template_bb_charts_legend_labelDeactivate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const onDeactivate_r17 = restoredCtx.onDeactivate;\n      return onDeactivate_r17($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const legendOptions_r13 = ctx.legendOptions;\n    const activeEntries_r14 = ctx.activeEntries;\n    const height_r15 = ctx.height;\n    i0.ɵɵproperty(\"data\", legendOptions_r13.domain)(\"title\", legendOptions_r13.title)(\"colors\", legendOptions_r13.colors)(\"height\", height_r15)(\"activeEntries\", activeEntries_r14);\n  }\n}\n\nfunction TurnoversBarChartComponent_ng_template_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const model_r23 = i0.ɵɵnextContext().model;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", model_r23.badge, \" \");\n  }\n}\n\nconst _c9 = function (a0) {\n  return {\n    \"color\": a0\n  };\n};\n\nfunction TurnoversBarChartComponent_ng_template_7_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵelement(1, \"span\", 23);\n    i0.ɵɵelementStart(2, \"span\", 24);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 19);\n    i0.ɵɵelement(5, \"bb-amount-ui\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const bar_r27 = ctx.$implicit;\n    const i_r28 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(5, _c9, bar_r27.color));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(bar_r27.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"amount\", i_r28 === 0 ? bar_r27.value : -bar_r27.value)(\"currency\", bar_r27.currency)(\"showPlusSign\", i_r28 === 0 && bar_r27.value > 0);\n  }\n}\n\nfunction TurnoversBarChartComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, TurnoversBarChartComponent_ng_template_7_div_1_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtemplate(3, TurnoversBarChartComponent_ng_template_7_div_3_Template, 6, 7, \"div\", 16);\n    i0.ɵɵelementStart(4, \"div\", 17);\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵi18n(6, 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 19);\n    i0.ɵɵelement(8, \"bb-amount-ui\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const model_r23 = ctx.model;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", model_r23.badge);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", model_r23.series);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"amount\", model_r23.diff)(\"currency\", model_r23.currency)(\"showPlusSign\", model_r23.diff !== 0);\n  }\n}\n\nfunction TurnoversVerticalStackedBarChartComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function TurnoversVerticalStackedBarChartComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.updateXAxisHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"xAxisOffset\", ctx_r0.dataLabelMaxHeight.negative);\n  }\n}\n\nfunction TurnoversVerticalStackedBarChartComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function TurnoversVerticalStackedBarChartComponent__svg_g_4_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.updateYAxisWidth($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction TurnoversVerticalStackedBarChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function TurnoversVerticalStackedBarChartComponent__svg_g_5_Template__svg_g_select_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const group_r7 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onClick($event, group_r7);\n    })(\"activate\", function TurnoversVerticalStackedBarChartComponent__svg_g_5_Template__svg_g_activate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const group_r7 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onActivate($event, group_r7);\n    })(\"deactivate\", function TurnoversVerticalStackedBarChartComponent__svg_g_5_Template__svg_g_deactivate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const group_r7 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onDeactivate($event, group_r7);\n    })(\"dataLabelHeightChanged\", function TurnoversVerticalStackedBarChartComponent__svg_g_5_Template__svg_g_dataLabelHeightChanged_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const index_r8 = restoredCtx.index;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.onDataLabelMaxHeightChanged($event, index_r8);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const group_r7 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"type\", \"stacked\")(\"xScale\", ctx_r2.xScale)(\"yScale\", ctx_r2.yScale)(\"activeEntries\", ctx_r2.activeEntries)(\"colors\", ctx_r2.colors)(\"series\", group_r7.series)(\"dims\", ctx_r2.dims)(\"roundEdges\", ctx_r2.roundEdges)(\"gradient\", ctx_r2.gradient)(\"tooltipDisabled\", ctx_r2.tooltipDisabled)(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"showDataLabel\", ctx_r2.showDataLabel)(\"dataLabelFormatting\", ctx_r2.dataLabelFormatting)(\"seriesName\", group_r7.name)(\"animations\", ctx_r2.animations);\n    i0.ɵɵattribute(\"transform\", ctx_r2.groupTransform(group_r7))(\"opacity\", group_r7.badge ? 0.5 : 1);\n  }\n}\n\nconst _c10 = \".ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:normal}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}.gridline-path{stroke:#ccc}ngx-charts-legend{display:block;margin-top:1rem}\\n\";\nconst _c11 = [\"incomeLabel\"];\nconst _c12 = [\"spendingLabel\"];\nconst _c13 = [\"forecastLabel\"];\n\nfunction TurnoversComponent_ng_container_0_ng_container_1_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementContainer(1, 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const data_r14 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"bbHostRef\", ctx_r16.hostRef)(\"bbTemplateContext\", data_r14);\n  }\n}\n\nfunction TurnoversComponent_ng_container_0_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, TurnoversComponent_ng_container_0_ng_container_1_div_1_div_1_Template, 2, 2, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const data_r14 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵnextContext(2);\n\n    const _r5 = i0.ɵɵreference(7);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", data_r14.length)(\"ngIfElse\", _r5);\n  }\n}\n\nfunction TurnoversComponent_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TurnoversComponent_ng_container_0_ng_container_1_div_1_Template, 2, 2, \"div\", 0);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n\n    const _r8 = i0.ɵɵreference(10);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r13.error)(\"ngIfElse\", _r8);\n  }\n}\n\nfunction TurnoversComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TurnoversComponent_ng_container_0_ng_container_1_Template, 2, 2, \"ng-container\", 0);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n\n    const _r3 = i0.ɵɵreference(5);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 2, ctx_r0.chartSeriesData))(\"ngIfElse\", _r3);\n  }\n}\n\nfunction TurnoversComponent_ng_template_2_bb_turnovers_bar_chart_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-turnovers-bar-chart\", 17);\n  }\n\n  if (rf & 2) {\n    const chartSeriesData_r20 = i0.ɵɵnextContext().context;\n    const ctx_r21 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"chartSeriesData\", chartSeriesData_r20)(\"forecast\", ctx_r21.forecast);\n  }\n}\n\nfunction TurnoversComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 15);\n    i0.ɵɵtemplate(1, TurnoversComponent_ng_template_2_bb_turnovers_bar_chart_1_Template, 1, 2, \"bb-turnovers-bar-chart\", 16);\n    i0.ɵɵpipe(2, \"async\");\n  }\n\n  if (rf & 2) {\n    const hostRef_r19 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n\n    const _r3 = i0.ɵɵreference(5);\n\n    i0.ɵɵproperty(\"bbHostRef\", hostRef_r19);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 3, ctx_r1.isLoading) === false)(\"ngIfElse\", _r3);\n  }\n}\n\nfunction TurnoversComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelementStart(1, \"div\", 19);\n    i0.ɵɵelementStart(2, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function TurnoversComponent_ng_template_3_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const hostRef_r23 = restoredCtx.$implicit;\n      return hostRef_r23.onTabChange(6);\n    });\n    i0.ɵɵi18n(3, 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function TurnoversComponent_ng_template_3_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const hostRef_r23 = restoredCtx.$implicit;\n      return hostRef_r23.onTabChange(12);\n    });\n    i0.ɵɵi18n(5, 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const hostRef_r23 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", 6)(\"color\", hostRef_r23.selectedTab.duration === 6 ? \"primary\" : \"secondary\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", 12)(\"color\", hostRef_r23.selectedTab.duration === 12 ? \"primary\" : \"secondary\");\n  }\n}\n\nfunction TurnoversComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-loading-indicator-ui\", 24);\n  }\n}\n\nfunction TurnoversComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 25);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"bbHostRef\", ctx_r6.hostRef);\n  }\n}\n\nfunction TurnoversComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 15);\n    i0.ɵɵelement(1, \"bb-empty-state-ui\", 26);\n  }\n\n  if (rf & 2) {\n    const hostRef_r27 = ctx.$implicit;\n    i0.ɵɵproperty(\"bbHostRef\", hostRef_r27);\n  }\n}\n\nfunction TurnoversComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-empty-state-ui\", 27);\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"subtitle\", ctx_r9.error == null ? null : ctx_r9.error.message);\n  }\n}\n\nclass BbTurnoversLegendComponent {\n  constructor(cd) {\n    this.cd = cd;\n    /**\n     * The data for the chart legend.\n     */\n\n    this.data = [];\n    /**\n     * The active entries for the chart legend.\n     */\n\n    this.activeEntries = [];\n    /**\n     * EventEmitter for triggering a labelClick event.\n     */\n\n    this.labelClick = new EventEmitter();\n    /**\n     * EventEmitter for triggering a labelActivate event.\n     */\n\n    this.labelActivate = new EventEmitter();\n    /**\n     * EventEmitter for triggering a labelDeactivate event.\n     */\n\n    this.labelDeactivate = new EventEmitter();\n    this.legendEntries = [];\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.cd.markForCheck();\n    this.legendEntries = this.getLegendEntries();\n  }\n\n  getLegendEntries() {\n    var _a;\n\n    const items = [];\n\n    for (const label of this.data) {\n      const formattedLabel = formatLabel(label);\n      const idx = items.findIndex(i => {\n        return i.label === formattedLabel;\n      });\n\n      if (idx === -1) {\n        items.push({\n          label,\n          formattedLabel,\n          color: (_a = this.colors) === null || _a === void 0 ? void 0 : _a.getColor(label)\n        });\n      }\n    }\n\n    return items;\n  }\n\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.label === d.name;\n    });\n    return item !== undefined;\n  }\n\n  activate(item) {\n    this.labelActivate.emit(item);\n  }\n\n  deactivate(item) {\n    this.labelDeactivate.emit(item);\n  }\n\n  trackBy(index, item) {\n    return item.label;\n  }\n\n}\n\nBbTurnoversLegendComponent.ɵfac = function BbTurnoversLegendComponent_Factory(t) {\n  return new (t || BbTurnoversLegendComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nBbTurnoversLegendComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BbTurnoversLegendComponent,\n  selectors: [[\"bb-charts-legend\"]],\n  inputs: {\n    data: \"data\",\n    title: \"title\",\n    colors: \"colors\",\n    height: \"height\",\n    width: \"width\",\n    activeEntries: \"activeEntries\"\n  },\n  outputs: {\n    labelClick: \"labelClick\",\n    labelActivate: \"labelActivate\",\n    labelDeactivate: \"labelDeactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 5,\n  consts: [[1, \"row\"], [\"class\", \"legend-title\", 4, \"ngIf\"], [1, \"legend-wrap\"], [1, \"legend-labels\", \"d-flex\", \"px-5\", \"mb-3\"], [\"class\", \"legend-label text-dark text-capitalize\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"legend-title\"], [1, \"legend-title-text\"], [1, \"legend-label\", \"text-dark\", \"text-capitalize\"], [3, \"label\", \"formattedLabel\", \"color\", \"isActive\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BbTurnoversLegendComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, BbTurnoversLegendComponent_header_1_Template, 3, 1, \"header\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"ul\", 3);\n      i0.ɵɵtemplate(4, BbTurnoversLegendComponent_li_4_Template, 2, 4, \"li\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.title == null ? null : ctx.title.length) > 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵstyleProp(\"max-height\", ctx.height ? ctx.height - 45 : \"inherit\", \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.legendEntries)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  directives: [i1$1.NgIf, i1$1.NgForOf, i1.LegendEntryComponent],\n  styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:bold}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BbTurnoversLegendComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-charts-legend',\n      templateUrl: './bb-turnovers-legend.component.html',\n      styleUrls: ['./bb-turnovers-legend.component.scss'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    labelClick: [{\n      type: Output\n    }],\n    labelActivate: [{\n      type: Output\n    }],\n    labelDeactivate: [{\n      type: Output\n    }]\n  });\n})();\n\nclass BbGridPanelSeriesComponent {\n  constructor(deprecationService) {\n    this.deprecationService = deprecationService;\n    this.gridPanels = [];\n    /**\n     * Array of Chart data objects needed for the chart to be rendered.\n     */\n\n    this.data = [];\n    /**\n     * Dimensions of the chart.\n     */\n\n    this.dims = {\n      height: 0,\n      width: 0\n    };\n  }\n\n  set orient(val) {\n    this.deprecationService.logDeprecatedFeature('Removed #orient input from #BbGridPanelSeriesComponent');\n    this._orient = val;\n  }\n\n  get orient() {\n    return this._orient || 'vertical';\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.gridPanels = this.getChartDataLabels();\n  }\n\n  getChartDataLabels() {\n    return this.data.map(d => {\n      var _a;\n\n      const labelName = (_a = d.name) !== null && _a !== void 0 ? _a : '';\n      let width = 0;\n      let xValue = 0;\n\n      if (!!this.xScale) {\n        const offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n        width = this.xScale.bandwidth() + offset;\n        xValue = (this.xScale(labelName) || 0) - offset / 2;\n      }\n\n      return {\n        name: labelName,\n        class: d.badge === 'forecast' ? 'forecast' : '',\n        width: width,\n        height: this.dims.height,\n        x: xValue,\n        y: 0,\n        roundEdges: false\n      };\n    });\n  }\n\n  getGridPanels() {\n    this.deprecationService.logDeprecatedFeature('#getGridPanels deprecation in favor of private method #getChartDataLabels from #BbGridPanelSeriesComponent');\n    const localXScale = this.xScale;\n    const localYScale = this.yScale;\n    return this.data.map(d => {\n      let offset;\n      let width;\n      let height;\n      let x;\n      let y;\n\n      if (this.orient === 'vertical') {\n        offset = localXScale.bandwidth() * localXScale.paddingInner();\n        width = localXScale.bandwidth() + offset;\n        height = this.dims.height;\n        x = (localXScale(d.name) || 0) - offset / 2;\n        y = 0;\n      } else if (this.orient === 'horizontal') {\n        offset = localYScale.bandwidth() * localYScale.paddingInner();\n        width = this.dims.width;\n        height = localYScale.bandwidth() + offset;\n        x = 0;\n        y = localYScale(d.name) - offset / 2;\n      }\n\n      return {\n        name: d.name,\n        class: d.badge === 'forecast' ? 'forecast' : '',\n        height,\n        width,\n        x,\n        y\n      };\n    });\n  }\n\n}\n\nBbGridPanelSeriesComponent.ɵfac = function BbGridPanelSeriesComponent_Factory(t) {\n  return new (t || BbGridPanelSeriesComponent)(i0.ɵɵdirectiveInject(i1$2.DeprecationsService));\n};\n\nBbGridPanelSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BbGridPanelSeriesComponent,\n  selectors: [[\"g\", \"bb-charts-grid-panel-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    dims: \"dims\",\n    xScale: \"xScale\",\n    yScale: \"yScale\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c0,\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-grid-panel\", \"\", 3, \"height\", \"width\", \"x\", \"y\"]],\n  template: function BbGridPanelSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, BbGridPanelSeriesComponent__svg_g_0_Template, 2, 8, \"g\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.gridPanels);\n    }\n  },\n  directives: [i1$1.NgForOf, i1.GridPanelComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([Input()('orient')], BbGridPanelSeriesComponent.prototype, \"orient\", null);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BbGridPanelSeriesComponent, [{\n    type: Component,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/component-selector\n      selector: 'g[bb-charts-grid-panel-series]',\n      templateUrl: './bb-grid-panel-series.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i1$2.DeprecationsService\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }]\n  });\n})();\n\nconst PROPERTIES = {\n  FORECAST: {\n    name: 'showForecast',\n    value: true\n  }\n};\nconst PERIODS = [{\n  interval: 'MONTH',\n  duration: 6,\n  default: true\n}, {\n  interval: 'MONTH',\n  duration: 12\n}];\nconst INTERVAL = {\n  DAY: 'DAY',\n  WEEK: 'WEEK',\n  MONTH: 'MONTH',\n  YEAR: 'YEAR'\n};\nconst DEFAULT_INTERVAL = INTERVAL.MONTH;\nconst DEFAULT_DURATION = 6;\nconst DEFAULT_START_DAY = 1;\nconst BAR_COLORS_CSS_VAR = '--chart-group-bar-color';\nconst CHART_COLORS = ['#004285', '#107bb5'];\nconst MOBILE_WIDGET_WIDTH = 688;\n\nconst filterInputParameters = (input, prop) => combineLatest([input, prop]).pipe(map(([inputVal, propVal]) => inputVal !== undefined ? inputVal : propVal));\n\nclass TurnoversVerticalBarChartComponent extends BaseChartComponent {\n  constructor(chartElement, zone, cd, platformId) {\n    super(chartElement, zone, cd, platformId);\n    /**\n     * Enable/Disable chart legend.\n     */\n\n    this.legend = false;\n    /**\n     * The title for the chart legend.\n     */\n\n    this.legendTitle = '';\n    /**\n     * Hide/show the horizontal axis.\n     */\n\n    this.xAxis = true;\n    /**\n     * Hide/show the vertical axis.\n     */\n\n    this.yAxis = true;\n    /**\n     * Show the horizontal axis label.\n     */\n\n    this.showXAxisLabel = true;\n    /**\n     * Show the vertical axis label.\n     */\n\n    this.showYAxisLabel = true;\n    /**\n     * The label for the horizontal axis.\n     */\n\n    this.xAxisLabel = '';\n    /**\n     * The label for the vertical axis.\n     */\n\n    this.yAxisLabel = '';\n    /**\n     * Enable/Disable chart tooltip.\n     */\n\n    this.tooltipDisabled = false;\n    /**\n     * Enable/Disable chart gradient.\n     */\n\n    this.gradient = false;\n    /**\n     * Show/hide chart grid lines.\n     */\n\n    this.showGridLines = true;\n    /**\n     * The active entries for the chart legend.\n     */\n\n    this.activeEntries = [];\n    /**\n     * Sets the scheme type of the chart.\n     */\n\n    this.schemeType = ScaleType.Ordinal;\n    /**\n     * Padding of the chart bars.\n     */\n\n    this.barPadding = 8;\n    /**\n     * Enable/Disable rounded corners.\n     */\n\n    this.roundDomains = true;\n    /**\n     * Enable/disable rounded edges for the bars.\n     */\n\n    this.roundEdges = false;\n    /**\n     * Maximum vertical chart scale.\n     */\n\n    this.yScaleMax = 0;\n    /**\n     * Hide/show the data labels.\n     */\n\n    this.showDataLabel = false;\n    /**\n     * Array of Chart data objects needed for the chart to be rendered.\n     */\n\n    this.groupsData = [];\n    /**\n     * The chart legend template.\n     */\n\n    this.legendTemplate = null;\n    /**\n     * EventEmitter for triggering a activate event.\n     */\n\n    this.activate = new EventEmitter();\n    /**\n     * EventEmitter for triggering a deactivate event.\n     */\n\n    this.deactivate = new EventEmitter();\n    this.dims = {\n      width: 0,\n      height: 0,\n      xOffset: 0\n    };\n    this.groupDomain = [];\n    this.innerDomain = [];\n    this.valueDomain = [];\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxHeight = {\n      negative: 0,\n      positive: 0\n    };\n  }\n\n  update() {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {\n        negative: 0,\n        positive: 0\n      };\n    }\n\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType\n    });\n\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.setColors();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getXScale() {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n  }\n\n  getYScale() {\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  onDataLabelMaxHeightChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors() {\n    const domain = this.schemeType === ScaleType.Ordinal ? this.innerDomain : this.valueDomain;\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  updateYAxisWidth(axis) {\n    this.yAxisWidth = axis.width;\n    this.update();\n  }\n\n  updateXAxisHeight(axis) {\n    this.xAxisHeight = axis.height;\n    this.update();\n  }\n\n  onActivate(event, group) {\n    const item = Object.assign({}, event);\n\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(event, group) {\n    const item = Object.assign({}, event);\n\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries]; // NOSONAR false positive - https://github.com/SonarSource/SonarTS/issues/760\n\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n}\n\nTurnoversVerticalBarChartComponent.ɵfac = function TurnoversVerticalBarChartComponent_Factory(t) {\n  return new (t || TurnoversVerticalBarChartComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nTurnoversVerticalBarChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TurnoversVerticalBarChartComponent,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    yScaleMax: \"yScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    groupsData: \"groupsData\",\n    tooltipTemplate: \"tooltipTemplate\",\n    legendTemplate: \"legendTemplate\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function TurnoversVerticalBarChartComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TurnoversVerticalBarChartComponent, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    groupsData: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    legendTemplate: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\n\nvar D0Types;\n\n(function (D0Types) {\n  D0Types[\"positive\"] = \"positive\";\n  D0Types[\"negative\"] = \"negative\";\n})(D0Types || (D0Types = {}));\n\nclass BbSeriesVerticalComponent {\n  constructor(deprecationService) {\n    this.deprecationService = deprecationService;\n    /**\n     * The type of the chart bars.\n     */\n\n    this.type = 'standard';\n    /**\n     * Enable/disable bars gradient.\n     */\n\n    this.gradient = false;\n    /**\n     * The active entries for the chart bars.\n     */\n\n    this.activeEntries = [];\n    /**\n     * Name of the chart series.\n     */\n\n    this.seriesName = '';\n    /**\n     * Enabel/Disable bars tooltip.\n     */\n\n    this.tooltipDisabled = false;\n    /**\n     * Show/Hide tooltip caret.\n     */\n\n    this.tooltipShowCaret = false;\n    /**\n     * Enable/disable bars rounded edges.\n     */\n\n    this.roundEdges = false;\n    /**\n     * Enable/disable bars animation.\n     */\n\n    this.animations = true;\n    /**\n     * Show/hide bars label.\n     */\n\n    this.showDataLabel = false;\n    /**\n     * EventEmitter for triggering a select event.\n     */\n    // eslint-disable-next-line @angular-eslint/no-output-native\n\n    this.select = new EventEmitter();\n    /**\n     * EventEmitter for triggering a activate event.\n     */\n\n    this.activate = new EventEmitter();\n    /**\n     * EventEmitter for triggering a deactivate event.\n     */\n\n    this.deactivate = new EventEmitter();\n    /**\n     * EventEmitter for triggering a dataLabelHeightChanged event.\n     */\n\n    this.dataLabelHeightChanged = new EventEmitter();\n    this.tooltipPlacement = PlacementTypes.Top;\n    this.tooltipType = StyleTypes.tooltip;\n    this.orientation = BarOrientation.Vertical;\n    this.barsForDataLabels = [];\n  }\n\n  getColors(value, label, offset0, offset1) {\n    const bar = {};\n\n    if (this.colors) {\n      if (this.colors.scaleType === ScaleType.Ordinal) {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === 'standard') {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(offset1 || 0);\n          bar.gradientStops = this.colors.getLinearGradientStops(offset1 || 0, offset0);\n        }\n      }\n    }\n\n    return bar;\n  }\n\n  tooltipText(label, value) {\n    return this.tooltipDisabled ? undefined : `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${value}</span>\n    `;\n  }\n\n  ngOnChanges() {\n    if (!this.series) {\n      throw new Error('[series] should be provided to the component!');\n    }\n\n    this.update(this.series);\n  }\n\n  update(series) {\n    this.bars = this.formatChartData(series);\n    this.barsForDataLabels = this.updatedLabels(series);\n  }\n\n  updateDataLabels(series) {\n    this.deprecationService.logDeprecatedFeature('#updateDataLabels inside #BbSeriesVerticalComponent deprecated in favor of #updatedLabels, which returns the formatted object instead of assigning values within itself');\n    this.barsForDataLabels = this.updatedLabels(series);\n  }\n\n  updatedBars(series) {\n    var _a;\n\n    let d0Type = D0Types.positive;\n    const width = (_a = this.xScale) === null || _a === void 0 ? void 0 : _a.bandwidth();\n    const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    return series.map((d, index, group) => {\n      var _a, _b, _c;\n\n      const value = d.value || 0;\n      const label = d.name || '';\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n      const bar = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        width,\n        formattedLabel,\n        height: 0,\n        x: 0,\n        y: 0\n      }; // Use data of the group of bars for tooltips\n\n      if (this.groupData) {\n        bar.data = {\n          group: group.map(barEl => {\n            var _a;\n\n            return Object.assign(Object.assign({}, barEl), {\n              color: (_a = this.colors) === null || _a === void 0 ? void 0 : _a.getColor(barEl.name || '')\n            });\n          }),\n          diff: this.groupData.diff,\n          currency: this.groupData.currency,\n          value: d.value,\n          badge: this.groupData.badge\n        };\n      }\n\n      if (this.type === 'standard') {\n        bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n        bar.x = (_a = this.xScale) === null || _a === void 0 ? void 0 : _a.call(this, label);\n        bar.y = (_b = this.yScale) === null || _b === void 0 ? void 0 : _b.call(this, Math.max(0, value));\n      } else if (this.type === 'stacked') {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n        bar.height = Math.ceil(this.yScale(offset0) - this.yScale(offset1));\n        bar.x = 0;\n        bar.y = (_c = this.yScale) === null || _c === void 0 ? void 0 : _c.call(this, offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        bar.roundEdges = index === 1;\n      }\n\n      Object.assign(bar, this.getColors(value, label, bar.offset0, bar.offset1));\n      let tooltipLabel = formattedLabel;\n\n      if (this.seriesName) {\n        tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n      }\n\n      bar.tooltipText = this.tooltipText(tooltipLabel, value.toLocaleString());\n      return bar;\n    });\n  }\n\n  updatedLabels(series) {\n    return series.map(d => {\n      var _a, _b, _c;\n\n      return {\n        name: d.name,\n        series: this.seriesName ? this.seriesName : d.name,\n        total: d.value,\n        x: ((_a = this.xScale) === null || _a === void 0 ? void 0 : _a.call(this, d.name)) || 0,\n        y: ((_b = this.yScale) === null || _b === void 0 ? void 0 : _b.call(this, 0)) || 0,\n        height: this.yScale ? this.yScale(d.value) - this.yScale(0) : 0,\n        width: ((_c = this.xScale) === null || _c === void 0 ? void 0 : _c.bandwidth()) || 0,\n        roundEdges: this.roundEdges\n      };\n    });\n  }\n\n  formatChartData(series) {\n    const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    const formattedSeries = series.map((d, index, group) => {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n\n      const value = d.value || 0;\n      const label = d.name || '';\n      const d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n      const formattedLabel = formatLabel(label);\n      const tooltipLabel = this.seriesName ? `${this.seriesName} • ${formattedLabel}` : formattedLabel;\n      const data = {\n        name: this.seriesName || '',\n        group: group.map(barEl => {\n          var _a;\n\n          return Object.assign(Object.assign({}, barEl), {\n            color: (_a = this.colors) === null || _a === void 0 ? void 0 : _a.getColor(barEl.name || '')\n          });\n        }),\n        series: group.map(barEl => {\n          var _a;\n\n          return Object.assign(Object.assign({}, barEl), {\n            color: (_a = this.colors) === null || _a === void 0 ? void 0 : _a.getColor(barEl.name || '')\n          });\n        }),\n        diff: (_a = this.groupData) === null || _a === void 0 ? void 0 : _a.diff,\n        currency: (_b = this.groupData) === null || _b === void 0 ? void 0 : _b.currency,\n        value: d.value,\n        badge: (_c = this.groupData) === null || _c === void 0 ? void 0 : _c.badge\n      };\n      const graphData = {\n        name: this.seriesName || '',\n        value: d.value\n      };\n      const standardType = {\n        height: Math.abs(this.yScale(value) - this.yScale(yScaleMin)),\n        offset0: undefined,\n        offset1: undefined,\n        roundEdges: this.roundEdges,\n        x: ((_d = this.xScale) === null || _d === void 0 ? void 0 : _d.call(this, label)) || 0,\n        y: ((_e = this.yScale) === null || _e === void 0 ? void 0 : _e.call(this, Math.max(0, value))) || 0,\n        width: ((_f = this.xScale) === null || _f === void 0 ? void 0 : _f.bandwidth()) || 0\n      };\n      const stackedType = {\n        height: Math.ceil(this.yScale(d0[d0Type]) - this.yScale(d0[d0Type] + value)),\n        offset0: d0[d0Type],\n        offset1: d0[d0Type] + value,\n        roundEdges: index === 1,\n        x: 0,\n        y: ((_g = this.yScale) === null || _g === void 0 ? void 0 : _g.call(this, d0[d0Type] + value)) || 0,\n        width: ((_h = this.xScale) === null || _h === void 0 ? void 0 : _h.bandwidth()) || 0\n      };\n      const typeObject = this.type === 'stacked' ? stackedType : standardType;\n      const returnObject = Object.assign(Object.assign(Object.assign({}, typeObject), this.getColors(value, label, typeObject.offset0, typeObject.offset1)), {\n        data,\n        tooltipText: this.tooltipText(tooltipLabel, value.toLocaleString()),\n        formattedLabel,\n        value,\n        label,\n        graphData: Object.assign({}, graphData)\n      });\n      return returnObject;\n    });\n    return formattedSeries;\n  }\n\n  updateTooltipSettings() {\n    this.deprecationService.logDeprecatedFeature('Deprecated #updateTooltipSettings method inside #BbSeriesVerticalComponent in favor of assigning values during component creation');\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n    this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n  }\n\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  trackBy(index, bar) {\n    return bar.label;\n  }\n\n  trackDataLabelBy(index, barLabel) {\n    return `${index}#${barLabel.series}#${barLabel.total}`;\n  }\n\n}\n\nBbSeriesVerticalComponent.ɵfac = function BbSeriesVerticalComponent_Factory(t) {\n  return new (t || BbSeriesVerticalComponent)(i0.ɵɵdirectiveInject(i1$2.DeprecationsService));\n};\n\nBbSeriesVerticalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BbSeriesVerticalComponent,\n  selectors: [[\"g\", \"bb-charts-series-vertical\", \"\"]],\n  inputs: {\n    dims: \"dims\",\n    type: \"type\",\n    series: \"series\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    seriesName: \"seriesName\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipShowCaret: \"tooltipShowCaret\",\n    tooltipTemplate: \"tooltipTemplate\",\n    roundEdges: \"roundEdges\",\n    animations: \"animations\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    groupData: \"groupData\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dataLabelHeightChanged: \"dataLabelHeightChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c1,\n  decls: 2,\n  vars: 3,\n  consts: [[\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"isActive\", \"tooltipCssClass\", \"tooltipShowCaret\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"animations\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"isActive\", \"tooltipCssClass\", \"tooltipShowCaret\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"animations\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\"]],\n  template: function BbSeriesVerticalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, BbSeriesVerticalComponent__svg_g_0_Template, 1, 22, \"g\", 0);\n      i0.ɵɵtemplate(1, BbSeriesVerticalComponent__svg_g_1_Template, 2, 2, \"g\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.bars)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showDataLabel);\n    }\n  },\n  directives: [i1$1.NgForOf, i1$1.NgIf, i1.BarComponent, i1.TooltipDirective, i1.BarLabelComponent],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BbSeriesVerticalComponent, [{\n    type: Component,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/component-selector\n      selector: 'g[bb-charts-series-vertical]',\n      templateUrl: './bb-charts-series-vertical.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: i1$2.DeprecationsService\n    }];\n  }, {\n    dims: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    seriesName: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipShowCaret: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    groupData: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dataLabelHeightChanged: [{\n      type: Output\n    }]\n  });\n})();\n\nclass TurnoversVerticalGroupedBarChartComponent extends TurnoversVerticalBarChartComponent {\n  constructor(chartElement, zone, cd, platformId) {\n    super(chartElement, zone, cd, platformId);\n    /**\n     * Sets the scale type of the chart.\n     */\n\n    this.scaleType = ScaleType.Ordinal;\n    /**\n     * Sets the group padding.\n     */\n\n    this.groupPadding = 16;\n    /**\n     * Array of Chart data objects needed for the chart to be rendered.\n     */\n\n    this.results = [];\n    this.legendOptions = {\n      colors: undefined,\n      domain: [],\n      scaleType: this.schemeType,\n      title: '',\n      position: LegendPosition.Below\n    };\n  }\n\n  update() {\n    super.update();\n    this.valueDomain = this.getValueDomain();\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n    this.getLegendOptions();\n  }\n\n  getGroupScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).paddingOuter(spacing / 2).domain(this.groupDomain);\n  }\n\n  getInnerScale() {\n    const width = this.groupScale ? this.groupScale.bandwidth() : 1;\n    const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n    return scaleBand().rangeRound([0, width]).paddingInner(spacing).domain(this.innerDomain);\n  }\n\n  getValueScale() {\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getValueDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n    return [min, max];\n  }\n\n  groupTransform(group) {\n    var _a, _b;\n\n    const labelName = (_a = group.name) !== null && _a !== void 0 ? _a : '';\n    return `translate(${(_b = this.groupScale) === null || _b === void 0 ? void 0 : _b.call(this, labelName)}, 0)`;\n  }\n\n  getLegendOptions() {\n    if (!this.colors) {\n      return;\n    }\n\n    if (this.legendOptions.scaleType === ScaleType.Ordinal) {\n      this.legendOptions.domain = this.innerDomain;\n      this.legendOptions.colors = this.colors;\n      this.legendOptions.title = this.legendTitle || '';\n    } else {\n      this.legendOptions.domain = this.valueDomain;\n      this.legendOptions.colors = this.colors.scale;\n    }\n  }\n\n}\n\nTurnoversVerticalGroupedBarChartComponent.ɵfac = function TurnoversVerticalGroupedBarChartComponent_Factory(t) {\n  return new (t || TurnoversVerticalGroupedBarChartComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nTurnoversVerticalGroupedBarChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TurnoversVerticalGroupedBarChartComponent,\n  selectors: [[\"bb-charts-bar-vertical-2d\"]],\n  inputs: {\n    scaleType: \"scaleType\",\n    groupPadding: \"groupPadding\",\n    results: \"results\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 26,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"bb-charts-grid-panel-series\", \"\", 3, \"xScale\", \"yScale\", \"data\", \"dims\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"tickFormatting\", \"xAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"tickFormatting\", \"dimensionsChanged\", 4, \"ngIf\"], [\"bb-charts-series-vertical\", \"\", 3, \"activeEntries\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"groupData\", \"roundEdges\", \"animations\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"tickFormatting\", \"xAxisOffset\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"tickFormatting\", \"dimensionsChanged\"], [\"bb-charts-series-vertical\", \"\", 3, \"activeEntries\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"groupData\", \"roundEdges\", \"animations\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"]],\n  template: function TurnoversVerticalGroupedBarChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function TurnoversVerticalGroupedBarChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function TurnoversVerticalGroupedBarChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      })(\"legendLabelClick\", function TurnoversVerticalGroupedBarChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelement(2, \"g\", 2);\n      i0.ɵɵtemplate(3, TurnoversVerticalGroupedBarChartComponent__svg_g_3_Template, 1, 6, \"g\", 3);\n      i0.ɵɵtemplate(4, TurnoversVerticalGroupedBarChartComponent__svg_g_4_Template, 1, 6, \"g\", 4);\n      i0.ɵɵtemplate(5, TurnoversVerticalGroupedBarChartComponent__svg_g_5_Template, 1, 18, \"g\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementContainer(6, 6);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(16, _c2, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.groupScale)(\"yScale\", ctx.valueScale)(\"data\", ctx.groupsData)(\"dims\", ctx.dims);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.groupsData)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.legendTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction6(19, _c3, ctx.legendOptions, ctx.activeEntries, ctx.height, ctx.onActivate.bind(ctx), ctx.onDeactivate.bind(ctx), ctx.onClick.bind(ctx)));\n    }\n  },\n  directives: [i1.ChartComponent, BbGridPanelSeriesComponent, i1$1.NgIf, i1$1.NgForOf, i1$1.NgTemplateOutlet, i1.XAxisComponent, i1.YAxisComponent, BbSeriesVerticalComponent],\n  styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:normal}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}.gridline-path{stroke:#ccc}ngx-charts-legend{display:block;margin-top:1rem}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TurnoversVerticalGroupedBarChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-charts-bar-vertical-2d',\n      templateUrl: './turnovers-vertical-grouped-bar-chart.component.html',\n      styleUrls: ['../turnovers-vertical-stacked-bar-chart/turnovers-vertical-stacked-bar-chart.component.scss'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    scaleType: [{\n      type: Input\n    }],\n    groupPadding: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }]\n  });\n})();\n\nclass TurnoversBarChartComponent {\n  constructor(currencyPipe, cssVariableService) {\n    this.currencyPipe = currencyPipe;\n    this.cssVariableService = cssVariableService;\n    /**\n     * Array of Chart data objects needed for the chart to be rendered.\n     */\n\n    this.chartSeriesData = [];\n    /**\n     * Disable/enable the forecast option on the chart.\n     */\n\n    this.forecast = false; // bar chart\n    // options\n\n    this.chartOptions = from(this.cssVariableService.getCssVariable(BAR_COLORS_CSS_VAR)).pipe(map(cssVar => ({\n      colors: cssVar ? cssVar.split(',') : CHART_COLORS,\n      showXAxis: true,\n      showYAxis: true,\n      gradient: false,\n      showLegend: false,\n      showXAxisLabel: true,\n      showYAxisLabel: true\n    })));\n  }\n\n  yAxisTickFormatting(value) {\n    const currency = this.chartSeriesData[0].currency;\n\n    if (this.barChart2d && this.barChart2d.width < MOBILE_WIDGET_WIDTH) {\n      const amountVal = value / 1000;\n\n      if (amountVal <= 999) {\n        return `${this.currencyPipe.transform(amountVal, currency, 'symbol', '1.0')}k`;\n      }\n\n      return `${this.currencyPipe.transform(amountVal / 1000, currency, 'symbol', '1.0')}m`;\n    }\n\n    return this.currencyPipe.transform(value, currency, 'symbol', '1.0');\n  }\n\n}\n\nTurnoversBarChartComponent.ɵfac = function TurnoversBarChartComponent_Factory(t) {\n  return new (t || TurnoversBarChartComponent)(i0.ɵɵdirectiveInject(i1$1.CurrencyPipe), i0.ɵɵdirectiveInject(i2.CssVariablesService));\n};\n\nTurnoversBarChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TurnoversBarChartComponent,\n  selectors: [[\"bb-turnovers-bar-chart\"]],\n  viewQuery: function TurnoversBarChartComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c4, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.barChart2d = _t.first);\n    }\n  },\n  inputs: {\n    chartSeriesData: \"chartSeriesData\",\n    forecast: \"forecast\"\n  },\n  features: [i0.ɵɵProvidersFeature([CssVariablesService])],\n  decls: 9,\n  vars: 3,\n  consts: function () {\n    let i18n_7;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc tooltip difference label\n       * @meaning Difference\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_TURNOVERS_WIDGET_ANG_FESM2015_BACKBASE_TURNOVERS_WIDGET_ANG_JS__8 = goog.getMsg(\"Difference\");\n      i18n_7 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_TURNOVERS_WIDGET_ANG_FESM2015_BACKBASE_TURNOVERS_WIDGET_ANG_JS__8;\n    } else {\n      i18n_7 = $localize`:Difference|tooltip difference label@@turnovers.tooltip.diff:Difference`;\n    }\n\n    return [[1, \"position-relative\", \"pb-25p\", \"pb-md-50p\"], [4, \"ngIf\"], [\"bbTurnoversVerticalGroupedBarChartCustomizable\", \"\"], [\"bbTurnoversVerticalStackedBarChartCustomizable\", \"\"], [\"bbTurnoversChartLegendCustomizable\", \"\"], [\"legendTemplate\", \"\"], [\"bbTurnoversChartTooltipCustomizable\", \"\"], [\"tooltipTemplate\", \"\"], [\"bbTurnoversVerticalGroupedBarChartCustomizable\", \"\", 3, \"bbHostRef\", \"bbTemplateContext\"], [\"bbTurnoversVerticalStackedBarChartCustomizable\", \"\", 3, \"bbHostRef\", \"bbTemplateContext\"], [1, \"bb-turnovers-vertical-chart\"], [1, \"position-static\", \"transform-none\", 3, \"scheme\", \"results\", \"groupsData\", \"xAxis\", \"yAxis\", \"showXAxisLabel\", \"showYAxisLabel\", \"legend\", \"gradient\", \"barPadding\", \"groupPadding\", \"roundEdges\", \"legendTemplate\", \"tooltipTemplate\", \"yAxisTickFormatting\"], [\"bbChartsBarVertical2d\", \"\"], [1, \"chart-legend\", 3, \"data\", \"title\", \"colors\", \"height\", \"activeEntries\", \"labelClick\", \"labelActivate\", \"labelDeactivate\"], [1, \"chart-tooltip-default\", \"bb-arrow-bottom\", \"text-dark\"], [\"class\", \"pb-1 mb-2 font-weight-bold border-bottom border-dark text-capitalize text-left\", 4, \"ngIf\"], [\"class\", \"d-flex pb-1 align-items-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"d-flex\", \"pt-1\", \"pl-1\", \"align-items-center\"], i18n_7, [1, \"ml-auto\", \"font-weight-bold\"], [3, \"amount\", \"currency\", \"showPlusSign\"], [1, \"pb-1\", \"mb-2\", \"font-weight-bold\", \"border-bottom\", \"border-dark\", \"text-capitalize\", \"text-left\"], [1, \"d-flex\", \"pb-1\", \"align-items-center\"], [1, \"bicon\", \"bicon-circle\", 3, \"ngStyle\"], [1, \"text-capitalize\"]];\n  },\n  template: function TurnoversBarChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, TurnoversBarChartComponent_ng_container_1_Template, 3, 8, \"ng-container\", 1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, TurnoversBarChartComponent_ng_template_3_Template, 3, 17, \"ng-template\", 2);\n      i0.ɵɵtemplate(4, TurnoversBarChartComponent_ng_template_4_Template, 0, 0, \"ng-template\", 3);\n      i0.ɵɵtemplate(5, TurnoversBarChartComponent_ng_template_5_Template, 1, 5, \"ng-template\", 4, 5, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(7, TurnoversBarChartComponent_ng_template_7_Template, 9, 5, \"ng-template\", 6, 7, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx.chartOptions));\n    }\n  },\n  directives: function () {\n    return [i1$1.NgIf, TurnoversVerticalGroupedBarChartCustomizableDirective, TurnoversVerticalStackedBarChartCustomizableDirective, TurnoversChartLegendCustomizableDirective, TurnoversChartTooltipCustomizableDirective, TurnoversVerticalGroupedBarChartComponent, BbTurnoversLegendComponent, i1$1.NgForOf, i5.AmountComponent, i1$1.NgStyle];\n  },\n  pipes: function () {\n    return [i1$1.AsyncPipe];\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TurnoversBarChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-turnovers-bar-chart',\n      templateUrl: './turnovers-bar-chart.component.html',\n      providers: [CssVariablesService]\n    }]\n  }], function () {\n    return [{\n      type: i1$1.CurrencyPipe\n    }, {\n      type: i2.CssVariablesService\n    }];\n  }, {\n    barChart2d: [{\n      type: ViewChild,\n      args: ['bbChartsBarVertical2d']\n    }],\n    chartSeriesData: [{\n      type: Input\n    }],\n    forecast: [{\n      type: Input\n    }]\n  });\n})();\n\nclass TurnoversChartTooltipCustomizableDirective extends BbTemplate {}\n\nTurnoversChartTooltipCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTurnoversChartTooltipCustomizableDirective_BaseFactory;\n  return function TurnoversChartTooltipCustomizableDirective_Factory(t) {\n    return (ɵTurnoversChartTooltipCustomizableDirective_BaseFactory || (ɵTurnoversChartTooltipCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TurnoversChartTooltipCustomizableDirective)))(t || TurnoversChartTooltipCustomizableDirective);\n  };\n}();\n\nTurnoversChartTooltipCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TurnoversChartTooltipCustomizableDirective,\n  selectors: [[\"\", \"bbTurnoversChartTooltipCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TurnoversChartTooltipCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbTurnoversChartTooltipCustomizable]'\n    }]\n  }], null, null);\n})();\n\nclass TurnoversChartLegendCustomizableDirective extends BbTemplate {}\n\nTurnoversChartLegendCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTurnoversChartLegendCustomizableDirective_BaseFactory;\n  return function TurnoversChartLegendCustomizableDirective_Factory(t) {\n    return (ɵTurnoversChartLegendCustomizableDirective_BaseFactory || (ɵTurnoversChartLegendCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TurnoversChartLegendCustomizableDirective)))(t || TurnoversChartLegendCustomizableDirective);\n  };\n}();\n\nTurnoversChartLegendCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TurnoversChartLegendCustomizableDirective,\n  selectors: [[\"\", \"bbTurnoversChartLegendCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TurnoversChartLegendCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbTurnoversChartLegendCustomizable]'\n    }]\n  }], null, null);\n})();\n\nclass TurnoversVerticalGroupedBarChartCustomizableDirective extends BbTemplate {}\n\nTurnoversVerticalGroupedBarChartCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTurnoversVerticalGroupedBarChartCustomizableDirective_BaseFactory;\n  return function TurnoversVerticalGroupedBarChartCustomizableDirective_Factory(t) {\n    return (ɵTurnoversVerticalGroupedBarChartCustomizableDirective_BaseFactory || (ɵTurnoversVerticalGroupedBarChartCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TurnoversVerticalGroupedBarChartCustomizableDirective)))(t || TurnoversVerticalGroupedBarChartCustomizableDirective);\n  };\n}();\n\nTurnoversVerticalGroupedBarChartCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TurnoversVerticalGroupedBarChartCustomizableDirective,\n  selectors: [[\"\", \"bbTurnoversVerticalGroupedBarChartCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TurnoversVerticalGroupedBarChartCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbTurnoversVerticalGroupedBarChartCustomizable]'\n    }]\n  }], null, null);\n})();\n\nclass TurnoversVerticalStackedBarChartCustomizableDirective extends BbTemplate {}\n\nTurnoversVerticalStackedBarChartCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTurnoversVerticalStackedBarChartCustomizableDirective_BaseFactory;\n  return function TurnoversVerticalStackedBarChartCustomizableDirective_Factory(t) {\n    return (ɵTurnoversVerticalStackedBarChartCustomizableDirective_BaseFactory || (ɵTurnoversVerticalStackedBarChartCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TurnoversVerticalStackedBarChartCustomizableDirective)))(t || TurnoversVerticalStackedBarChartCustomizableDirective);\n  };\n}();\n\nTurnoversVerticalStackedBarChartCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TurnoversVerticalStackedBarChartCustomizableDirective,\n  selectors: [[\"\", \"bbTurnoversVerticalStackedBarChartCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TurnoversVerticalStackedBarChartCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbTurnoversVerticalStackedBarChartCustomizable]'\n    }]\n  }], null, null);\n})();\n\nclass TurnoversVerticalStackedBarChartComponent extends TurnoversVerticalBarChartComponent {\n  constructor(chartElement, zone, cd, platformId) {\n    super(chartElement, zone, cd, platformId);\n    /**\n     * An array of numbers to set the horizontal points on the chart.\n     */\n\n    this.xAxisTicks = [];\n    /**\n     * An array of numbers to set the vertical points on the chart.\n     */\n\n    this.yAxisTicks = [];\n  }\n\n  update() {\n    super.update();\n    this.valueDomain = this.getValueDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.legendOptions = this.getLegendOptions();\n  }\n\n  getValueDomain() {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n\n    domain.push(smallest);\n    domain.push(biggest);\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n    return [min, max];\n  }\n\n  groupTransform(group) {\n    var _a, _b;\n\n    const labelName = (_a = group.name) !== null && _a !== void 0 ? _a : '';\n    return `translate(${(_b = this.xScale) === null || _b === void 0 ? void 0 : _b.call(this, labelName)}, 0)`;\n  }\n\n  getLegendOptions() {\n    var _a;\n\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: '',\n      position: LegendPosition.Below\n    };\n\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = (_a = this.colors) === null || _a === void 0 ? void 0 : _a.scale;\n    }\n\n    return opts;\n  }\n\n}\n\nTurnoversVerticalStackedBarChartComponent.ɵfac = function TurnoversVerticalStackedBarChartComponent_Factory(t) {\n  return new (t || TurnoversVerticalStackedBarChartComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nTurnoversVerticalStackedBarChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TurnoversVerticalStackedBarChartComponent,\n  selectors: [[\"bb-charts-bar-vertical-stacked\"]],\n  inputs: {\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 26,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"bb-charts-grid-panel-series\", \"\", 3, \"xScale\", \"yScale\", \"data\", \"dims\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"bb-charts-series-vertical\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"roundEdges\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"animations\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"bb-charts-series-vertical\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"roundEdges\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"animations\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"]],\n  template: function TurnoversVerticalStackedBarChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function TurnoversVerticalStackedBarChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function TurnoversVerticalStackedBarChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      })(\"legendLabelClick\", function TurnoversVerticalStackedBarChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelement(2, \"g\", 2);\n      i0.ɵɵtemplate(3, TurnoversVerticalStackedBarChartComponent__svg_g_3_Template, 1, 7, \"g\", 3);\n      i0.ɵɵtemplate(4, TurnoversVerticalStackedBarChartComponent__svg_g_4_Template, 1, 7, \"g\", 4);\n      i0.ɵɵtemplate(5, TurnoversVerticalStackedBarChartComponent__svg_g_5_Template, 1, 18, \"g\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementContainer(6, 6);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(16, _c2, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"data\", ctx.groupsData)(\"dims\", ctx.dims);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.legendTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction6(19, _c3, ctx.legendOptions, ctx.activeEntries, ctx.height, ctx.onActivate.bind(ctx), ctx.onDeactivate.bind(ctx), ctx.onClick.bind(ctx)));\n    }\n  },\n  directives: [i1.ChartComponent, BbGridPanelSeriesComponent, i1$1.NgIf, i1$1.NgForOf, i1$1.NgTemplateOutlet, i1.XAxisComponent, i1.YAxisComponent, BbSeriesVerticalComponent],\n  styles: [_c10],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TurnoversVerticalStackedBarChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-charts-bar-vertical-stacked',\n      templateUrl: './turnovers-vertical-stacked-bar-chart.component.html',\n      styleUrls: ['turnovers-vertical-stacked-bar-chart.component.scss'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }]\n  });\n})();\n\nconst getMessageFromResponse = error => {\n  const responseBody = error.error;\n\n  if (responseBody && responseBody.errors && responseBody.errors[0] && responseBody.errors[0].message) {\n    return responseBody.errors[0].message;\n  } else {\n    return undefined;\n  }\n};\n\nconst parseError = error => {\n  // TODO: should have more user-friendly messages\n  if (error.error instanceof ErrorEvent) {\n    // Client-side or network error.\n    return {\n      message: 'An unexpected error occurred'\n    };\n  } else {\n    // Backend returns unsuccessful response code.  In case of 400, try to get a message from the\n    // response.\n    switch (error.status) {\n      case 400:\n        return {\n          message: getMessageFromResponse(error) || 'Error 400'\n        };\n\n      case 401:\n        return {\n          message: 'Error 401'\n        };\n\n      case 403:\n        return {\n          message: 'Error 403'\n        };\n\n      case 404:\n        return {\n          message: 'Error 404'\n        };\n\n      default:\n        return {\n          message: 'An unexpected error occurred'\n        };\n    }\n  }\n};\n\nclass TurnoversWidgetHelpersService {\n  constructor(datePipe) {\n    this.datePipe = datePipe;\n\n    this.extendTurnoverItem = barData => Object.assign(Object.assign({}, barData), {\n      intervalStartDate: this.datePipe.transform(barData.intervalStartDate.slice(0, 10), 'MMM') || ''\n    });\n  }\n\n  getChartData(turnovers, labels) {\n    return (turnovers || []).map(function (barData) {\n      return {\n        series: [{\n          name: labels.income,\n          value: Number(barData.creditAmount.amount),\n          currency: barData.creditAmount.currencyCode\n        }, {\n          name: labels.spending,\n          value: Number(barData.debitAmount.amount),\n          currency: barData.debitAmount.currencyCode\n        }],\n        currency: barData.balance.currencyCode,\n        diff: Number(barData.balance.amount),\n        badge: barData.forecast ? labels.forecast : '',\n        name: barData.intervalStartDate.slice(0, 10) + (barData.forecast ? ' ' : '')\n      };\n    });\n  }\n\n  periodToDate(period) {\n    const date = new Date(); // current date already covers one period\n\n    const intervalCount = period.duration;\n\n    switch (period.interval) {\n      case 'DAY':\n        date.setDate(date.getDate() - intervalCount);\n        break;\n\n      case 'WEEK':\n        date.setDate(date.getDate() - intervalCount * 7);\n        break;\n\n      case 'YEAR':\n        date.setFullYear(date.getFullYear() - intervalCount);\n        break;\n\n      case 'MONTH':\n      default:\n        date.setMonth(date.getMonth() - (intervalCount - 1));\n        date.setDate(DEFAULT_START_DAY);\n        break;\n    }\n\n    return date.toISOString().slice(0, 10);\n  }\n\n}\n\nTurnoversWidgetHelpersService.ɵfac = function TurnoversWidgetHelpersService_Factory(t) {\n  return new (t || TurnoversWidgetHelpersService)(i0.ɵɵinject(i1$1.DatePipe));\n};\n\nTurnoversWidgetHelpersService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TurnoversWidgetHelpersService,\n  factory: TurnoversWidgetHelpersService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TurnoversWidgetHelpersService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.DatePipe\n    }];\n  }, null);\n})();\n\nclass TurnoversService {\n  constructor(turnoversDataHttpService) {\n    this.turnoversDataHttpService = turnoversDataHttpService;\n  }\n\n  loadAnalysisData(params) {\n    return this.turnoversDataHttpService.getTurnovers(params).pipe(map(body => {\n      return {\n        turnovers: body.turnovers || [],\n        forecast: (body.forecast || []).map(item => Object.assign(Object.assign({}, item), {\n          forecast: true\n        }))\n      };\n    }), map(body => {\n      return (body.turnovers || []).concat(params.forecast && body.forecast ? body.forecast : []);\n    }));\n  }\n\n}\n\nTurnoversService.ɵfac = function TurnoversService_Factory(t) {\n  return new (t || TurnoversService)(i0.ɵɵinject(i1$3.TurnoversHttpService));\n};\n\nTurnoversService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TurnoversService,\n  factory: TurnoversService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TurnoversService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$3.TurnoversHttpService\n    }];\n  }, null);\n})();\n\nclass TurnoversComponent {\n  constructor(service, route, helpers) {\n    this.service = service;\n    this.route = route;\n    this.helpers = helpers;\n    /**\n     * Disable/enable the forecast option on the chart.\n     */\n\n    this.forecast = false;\n    this.hostRef = this;\n    this.selectedTab = PERIODS[Math.max(PERIODS.map(item => item.default).indexOf(true), 0)];\n    this.isLoading = new BehaviorSubject(false);\n    this.initialDateParams = {\n      periodStartDate: this.helpers.periodToDate(PERIODS[0]),\n      periodEndDate: new Date().toISOString().slice(0, 10),\n      intervalDuration: DEFAULT_INTERVAL,\n      intervalStartDay: DEFAULT_START_DAY\n    };\n    this.arrangementIds = this.getRouteParam(this.route, 'selectedAccount').pipe(map(selectedAccount => selectedAccount ? [selectedAccount] : []));\n    this.dateParams = new BehaviorSubject(this.initialDateParams);\n    this.chartSeriesData = combineLatest(this.arrangementIds, this.dateParams.asObservable()).pipe(tap(() => this.error = undefined), filter(([selectedAccounts]) => !!selectedAccounts.length), map(([selectedAccounts, dateParams]) => Object.assign(Object.assign({\n      arrangementIds: selectedAccounts\n    }, dateParams), {\n      forecast: this.forecast ? 'AVG' : undefined\n    })), switchMap(params => {\n      this.isLoading.next(true);\n      const data = this.service.loadAnalysisData(params);\n      data.subscribe({\n        complete: () => this.isLoading.next(false)\n      });\n      return data;\n    }), map(items => items.map(this.helpers.extendTurnoverItem)), map(items => this.helpers.getChartData(items, this.labels)), catchError(error => {\n      this.handleError(error);\n      return of([]);\n    }));\n\n    this.handleError = error => {\n      this.error = parseError(error);\n      return of([]);\n    };\n  }\n\n  get labels() {\n    return {\n      income: this.incomeRef.nativeElement.textContent,\n      spending: this.spendingRef.nativeElement.textContent,\n      forecast: this.forecastRef.nativeElement.textContent\n    };\n  }\n\n  getRouteParam(route, param) {\n    const paramValue = route.paramMap.pipe(pluck('params', param));\n\n    if (!route.parent) {\n      return paramValue;\n    } // ensure that level that has actual value keeps it from being cleared\n\n\n    return combineLatest(paramValue, this.getRouteParam(route.parent, param)).pipe(map(params => params[0] || params[1]));\n  }\n\n  onTabChange(num) {\n    this.selectedTab = PERIODS[Math.max(PERIODS.map(item => item.duration).indexOf(num), 0)];\n    this.dateParams.next(Object.assign(Object.assign({}, this.initialDateParams), {\n      periodStartDate: this.helpers.periodToDate(this.selectedTab),\n      periodEndDate: new Date().toISOString().slice(0, 10)\n    }));\n  }\n\n}\n\nTurnoversComponent.ɵfac = function TurnoversComponent_Factory(t) {\n  return new (t || TurnoversComponent)(i0.ɵɵdirectiveInject(TurnoversService), i0.ɵɵdirectiveInject(i2$1.ActivatedRoute), i0.ɵɵdirectiveInject(TurnoversWidgetHelpersService));\n};\n\nTurnoversComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TurnoversComponent,\n  selectors: [[\"bb-turnovers\"]],\n  viewQuery: function TurnoversComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c11, 7);\n      i0.ɵɵviewQuery(_c12, 7);\n      i0.ɵɵviewQuery(_c13, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.incomeRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.spendingRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.forecastRef = _t.first);\n    }\n  },\n  inputs: {\n    forecast: \"forecast\"\n  },\n  features: [i0.ɵɵProvidersFeature([TurnoversService, DatePipe, TurnoversWidgetHelpersService])],\n  decls: 20,\n  vars: 4,\n  consts: function () {\n    let i18n_14;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Label for income dataset on the chart\n       * @meaning Incoming\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_TURNOVERS_WIDGET_ANG_FESM2015_BACKBASE_TURNOVERS_WIDGET_ANG_JS_15 = goog.getMsg(\"Incoming\");\n      i18n_14 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_TURNOVERS_WIDGET_ANG_FESM2015_BACKBASE_TURNOVERS_WIDGET_ANG_JS_15;\n    } else {\n      i18n_14 = $localize`:Incoming|Label for income dataset on the chart@@turnovers.chart.income:Incoming`;\n    }\n\n    let i18n_16;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Label for spending dataset on the chart\n       * @meaning Outgoing\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_TURNOVERS_WIDGET_ANG_FESM2015_BACKBASE_TURNOVERS_WIDGET_ANG_JS_17 = goog.getMsg(\"Outgoing\");\n      i18n_16 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_TURNOVERS_WIDGET_ANG_FESM2015_BACKBASE_TURNOVERS_WIDGET_ANG_JS_17;\n    } else {\n      i18n_16 = $localize`:Outgoing|Label for spending dataset on the chart@@turnovers.chart.spending:Outgoing`;\n    }\n\n    let i18n_18;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Label for forecast data on the chart\n       * @meaning forecast\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_TURNOVERS_WIDGET_ANG_FESM2015_BACKBASE_TURNOVERS_WIDGET_ANG_JS_19 = goog.getMsg(\"Forecast\");\n      i18n_18 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_TURNOVERS_WIDGET_ANG_FESM2015_BACKBASE_TURNOVERS_WIDGET_ANG_JS_19;\n    } else {\n      i18n_18 = $localize`:forecast|Label for forecast data on the chart@@turnovers.chart.forecast:Forecast`;\n    }\n\n    let i18n_20;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Six month label\n       * @meaning Data period\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_TURNOVERS_WIDGET_ANG_FESM2015_BACKBASE_TURNOVERS_WIDGET_ANG_JS__21 = goog.getMsg(\" 6 Months \");\n      i18n_20 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_TURNOVERS_WIDGET_ANG_FESM2015_BACKBASE_TURNOVERS_WIDGET_ANG_JS__21;\n    } else {\n      i18n_20 = $localize`:Data period|Six month label@@turnovers.label.duration.month.six: 6 Months `;\n    }\n\n    let i18n_22;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Twelve month label\n       * @meaning Data period\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_TURNOVERS_WIDGET_ANG_FESM2015_BACKBASE_TURNOVERS_WIDGET_ANG_JS__23 = goog.getMsg(\" 12 Months \");\n      i18n_22 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_TURNOVERS_WIDGET_ANG_FESM2015_BACKBASE_TURNOVERS_WIDGET_ANG_JS__23;\n    } else {\n      i18n_22 = $localize`:Data period|Twelve month label@@turnovers.label.duration.month.twelve: 12 Months `;\n    }\n\n    let i18n_24;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Text to display while loading turnovers\n       * @meaning Loading turnovers data\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_TURNOVERS_WIDGET_ANG_FESM2015_BACKBASE_TURNOVERS_WIDGET_ANG_JS__25 = goog.getMsg(\"Loading transactions data...\");\n      i18n_24 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_TURNOVERS_WIDGET_ANG_FESM2015_BACKBASE_TURNOVERS_WIDGET_ANG_JS__25;\n    } else {\n      i18n_24 = $localize`:Loading turnovers data|Text to display while loading turnovers@@turnovers.state.loadingTurnovers:Loading transactions data...`;\n    }\n\n    let i18n_26;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Title of a message that is shown when there are no turnovers\n       * @meaning No data title\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_TURNOVERS_WIDGET_ANG_FESM2015_BACKBASE_TURNOVERS_WIDGET_ANG_JS__27 = goog.getMsg(\"No data found\");\n      i18n_26 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_TURNOVERS_WIDGET_ANG_FESM2015_BACKBASE_TURNOVERS_WIDGET_ANG_JS__27;\n    } else {\n      i18n_26 = $localize`:No data title|Title of a message that is shown when there are no turnovers@@turnovers.state.noResultsFound.title:No data found`;\n    }\n\n    let i18n_28;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Subtitle of a message that is shown when there are no turnovers\n       * @meaning No data subtitle\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_TURNOVERS_WIDGET_ANG_FESM2015_BACKBASE_TURNOVERS_WIDGET_ANG_JS__29 = goog.getMsg(\"You don't have any data to be displayed. Please try selecting a different period.\");\n      i18n_28 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_TURNOVERS_WIDGET_ANG_FESM2015_BACKBASE_TURNOVERS_WIDGET_ANG_JS__29;\n    } else {\n      i18n_28 = $localize`:No data subtitle|Subtitle of a message that is shown when there are no turnovers@@turnovers.state.noResultsFound.subtitle:You don't have any data to be displayed. Please try selecting a different period.`;\n    }\n\n    return [[4, \"ngIf\", \"ngIfElse\"], [\"bbTurnoversItemCustomizable\", \"\"], [\"bbTurnoversControlsCustomizable\", \"\"], [\"loadingState\", \"\"], [\"emptyState\", \"\"], [\"bbTurnoversEmptyStateCustomizable\", \"\"], [\"errorState\", \"\"], [1, \"ng-cloak\"], [\"incomeLabel\", \"\"], i18n_14, [\"spendingLabel\", \"\"], i18n_16, [\"forecastLabel\", \"\"], i18n_18, [\"bbTurnoversItemCustomizable\", \"\", 3, \"bbHostRef\", \"bbTemplateContext\"], [\"bbTurnoversControlsCustomizable\", \"\", 3, \"bbHostRef\"], [\"class\", \"bb-turnovers-bar-chart bb-chart\", 3, \"chartSeriesData\", \"forecast\", 4, \"ngIf\", \"ngIfElse\"], [1, \"bb-turnovers-bar-chart\", \"bb-chart\", 3, \"chartSeriesData\", \"forecast\"], [1, \"bb-turnovers-controls\"], [1, \"btn-group\", \"btn-group-sm\"], [\"bbButton\", \"\", \"data-role\", \"6-month-btn\", 3, \"value\", \"color\", \"click\"], i18n_20, [\"bbButton\", \"\", \"data-role\", \"12-month-btn\", 3, \"value\", \"color\", \"click\"], i18n_22, [\"text\", i18n_24], [\"bbTurnoversEmptyStateCustomizable\", \"\", 3, \"bbHostRef\"], [\"title\", i18n_26, \"subtitle\", i18n_28, \"iconSize\", \"xxl\", \"iconModifier\", \"bar-chart\"], [\"data-role\", \"errorState\", \"title\", \"\", \"iconModifier\", \"error\", \"iconSize\", \"xxl\", \"iconColor\", \"gray\", \"iconClasses\", \"text-muted\", 3, \"subtitle\"]];\n  },\n  template: function TurnoversComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TurnoversComponent_ng_container_0_Template, 3, 4, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, TurnoversComponent_ng_template_2_Template, 3, 5, \"ng-template\", 1);\n      i0.ɵɵtemplate(3, TurnoversComponent_ng_template_3_Template, 6, 4, \"ng-template\", 2);\n      i0.ɵɵtemplate(4, TurnoversComponent_ng_template_4_Template, 1, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(6, TurnoversComponent_ng_template_6_Template, 1, 1, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(8, TurnoversComponent_ng_template_8_Template, 2, 1, \"ng-template\", 5);\n      i0.ɵɵtemplate(9, TurnoversComponent_ng_template_9_Template, 1, 1, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(11, \"span\", 7, 8);\n      i0.ɵɵi18n(13, 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"span\", 7, 10);\n      i0.ɵɵi18n(16, 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"span\", 7, 12);\n      i0.ɵɵi18n(19, 13);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r5 = i0.ɵɵreference(7);\n\n      let tmp_0_0;\n      i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = i0.ɵɵpipeBind1(1, 2, ctx.arrangementIds)) == null ? null : tmp_0_0.length)(\"ngIfElse\", _r5);\n    }\n  },\n  directives: function () {\n    return [i1$1.NgIf, TurnoversItemCustomizableDirective, TurnoversControlsCustomizableDirective, TurnoversEmptyStateCustomizableDirective, TurnoversBarChartComponent, i8.ButtonDirective, i5$1.LoadingIndicatorComponent, i6.EmptyStateComponent];\n  },\n  pipes: function () {\n    return [i1$1.AsyncPipe];\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TurnoversComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-turnovers',\n      templateUrl: './turnovers.component.html',\n      providers: [TurnoversService, DatePipe, TurnoversWidgetHelpersService]\n    }]\n  }], function () {\n    return [{\n      type: TurnoversService\n    }, {\n      type: i2$1.ActivatedRoute\n    }, {\n      type: TurnoversWidgetHelpersService\n    }];\n  }, {\n    forecast: [{\n      type: Input\n    }],\n    incomeRef: [{\n      type: ViewChild,\n      args: ['incomeLabel', {\n        static: true\n      }]\n    }],\n    spendingRef: [{\n      type: ViewChild,\n      args: ['spendingLabel', {\n        static: true\n      }]\n    }],\n    forecastRef: [{\n      type: ViewChild,\n      args: ['forecastLabel', {\n        static: true\n      }]\n    }]\n  });\n})();\n\nclass TurnoversItemCustomizableDirective extends BbTemplate {}\n\nTurnoversItemCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTurnoversItemCustomizableDirective_BaseFactory;\n  return function TurnoversItemCustomizableDirective_Factory(t) {\n    return (ɵTurnoversItemCustomizableDirective_BaseFactory || (ɵTurnoversItemCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TurnoversItemCustomizableDirective)))(t || TurnoversItemCustomizableDirective);\n  };\n}();\n\nTurnoversItemCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TurnoversItemCustomizableDirective,\n  selectors: [[\"\", \"bbTurnoversItemCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TurnoversItemCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbTurnoversItemCustomizable]'\n    }]\n  }], null, null);\n})();\n\nclass TurnoversControlsCustomizableDirective extends BbTemplate {}\n\nTurnoversControlsCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTurnoversControlsCustomizableDirective_BaseFactory;\n  return function TurnoversControlsCustomizableDirective_Factory(t) {\n    return (ɵTurnoversControlsCustomizableDirective_BaseFactory || (ɵTurnoversControlsCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TurnoversControlsCustomizableDirective)))(t || TurnoversControlsCustomizableDirective);\n  };\n}();\n\nTurnoversControlsCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TurnoversControlsCustomizableDirective,\n  selectors: [[\"\", \"bbTurnoversControlsCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TurnoversControlsCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbTurnoversControlsCustomizable]'\n    }]\n  }], null, null);\n})();\n\nclass TurnoversEmptyStateCustomizableDirective extends BbTemplate {}\n\nTurnoversEmptyStateCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵTurnoversEmptyStateCustomizableDirective_BaseFactory;\n  return function TurnoversEmptyStateCustomizableDirective_Factory(t) {\n    return (ɵTurnoversEmptyStateCustomizableDirective_BaseFactory || (ɵTurnoversEmptyStateCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TurnoversEmptyStateCustomizableDirective)))(t || TurnoversEmptyStateCustomizableDirective);\n  };\n}();\n\nTurnoversEmptyStateCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TurnoversEmptyStateCustomizableDirective,\n  selectors: [[\"\", \"bbTurnoversEmptyStateCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TurnoversEmptyStateCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbTurnoversEmptyStateCustomizable]'\n    }]\n  }], null, null);\n})();\n\nclass TurnoversWidgetComponent {\n  constructor(itemModel) {\n    this.itemModel = itemModel;\n    this.forecast = this.getProperty(PROPERTIES.FORECAST).pipe(map(propertyValue => propertyValue === true));\n    this.forecastSubject = new BehaviorSubject(true);\n    this.forecast$ = filterInputParameters(this.forecastSubject.asObservable(), this.forecast);\n  } // eslint-disable-next-line\n\n\n  set forecastValue(value) {\n    this.forecastSubject.next(value);\n  }\n\n  getProperty(property) {\n    return this.itemModel ? this.itemModel.property(property.name, property.value) : of(property.value);\n  }\n\n}\n\nTurnoversWidgetComponent.ɵfac = function TurnoversWidgetComponent_Factory(t) {\n  return new (t || TurnoversWidgetComponent)(i0.ɵɵdirectiveInject(i1$4.ItemModel, 8));\n};\n\nTurnoversWidgetComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TurnoversWidgetComponent,\n  selectors: [[\"bb-turnovers-widget\"]],\n  inputs: {\n    forecastValue: [\"forecast\", \"forecastValue\"]\n  },\n  decls: 2,\n  vars: 3,\n  consts: [[3, \"forecast\"]],\n  template: function TurnoversWidgetComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"bb-turnovers\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"forecast\", i0.ɵɵpipeBind1(1, 1, ctx.forecast) || undefined);\n    }\n  },\n  directives: [TurnoversComponent],\n  pipes: [i1$1.AsyncPipe],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TurnoversWidgetComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-turnovers-widget',\n      templateUrl: './turnovers-widget.component.html'\n    }]\n  }], function () {\n    return [{\n      type: i1$4.ItemModel,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    forecastValue: [{\n      type: Input,\n      args: ['forecast']\n    }]\n  });\n})(); // General modules\n\n\nconst components = [TurnoversWidgetComponent, TurnoversComponent, TurnoversBarChartComponent, TurnoversVerticalBarChartComponent, TurnoversVerticalStackedBarChartComponent, TurnoversVerticalGroupedBarChartComponent, BbTurnoversLegendComponent, BbSeriesVerticalComponent, BbGridPanelSeriesComponent];\nconst customizables = [TurnoversItemCustomizableDirective, TurnoversControlsCustomizableDirective, TurnoversChartTooltipCustomizableDirective, TurnoversChartLegendCustomizableDirective, TurnoversVerticalStackedBarChartCustomizableDirective, TurnoversVerticalGroupedBarChartCustomizableDirective, TurnoversEmptyStateCustomizableDirective];\nconst modules = [FormatAmountModule, LoadingIndicatorModule, EmptyStateModule, ButtonModule];\n\nclass TurnoversWidgetModule {}\n\nTurnoversWidgetModule.ɵfac = function TurnoversWidgetModule_Factory(t) {\n  return new (t || TurnoversWidgetModule)();\n};\n\nTurnoversWidgetModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TurnoversWidgetModule\n});\nTurnoversWidgetModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [DatePipe, CurrencyPipe],\n  imports: [[CommonModule, BackbaseCoreModule.withConfig({\n    classMap: {\n      TurnoversWidgetComponent\n    }\n  }), NgxChartsModule, ...modules], FormatAmountModule, LoadingIndicatorModule, EmptyStateModule, ButtonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TurnoversWidgetModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, BackbaseCoreModule.withConfig({\n        classMap: {\n          TurnoversWidgetComponent\n        }\n      }), NgxChartsModule, ...modules],\n      providers: [DatePipe, CurrencyPipe],\n      entryComponents: [TurnoversComponent],\n      declarations: [...components, ...customizables],\n      exports: [...components, ...customizables, ...modules]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BbGridPanelSeriesComponent, BbSeriesVerticalComponent, BbTurnoversLegendComponent, TurnoversBarChartComponent, TurnoversChartLegendCustomizableDirective, TurnoversChartTooltipCustomizableDirective, TurnoversComponent, TurnoversControlsCustomizableDirective, TurnoversEmptyStateCustomizableDirective, TurnoversItemCustomizableDirective, TurnoversVerticalBarChartComponent, TurnoversVerticalGroupedBarChartComponent, TurnoversVerticalGroupedBarChartCustomizableDirective, TurnoversVerticalStackedBarChartComponent, TurnoversVerticalStackedBarChartCustomizableDirective, TurnoversWidgetComponent, TurnoversWidgetModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/turnovers-widget-ang/fesm2015/backbase-turnovers-widget-ang.js"],"names":["i0","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","Output","PLATFORM_ID","Inject","ViewChild","Directive","Injectable","Optional","NgModule","i1","formatLabel","BaseChartComponent","ScaleType","calculateViewDimensions","ColorHelper","PlacementTypes","StyleTypes","BarOrientation","LegendPosition","NgxChartsModule","i1$1","DatePipe","CommonModule","CurrencyPipe","__decorate","i1$2","i1$4","BbTemplate","BackbaseCoreModule","i2","CssVariablesService","combineLatest","from","BehaviorSubject","of","map","tap","filter","switchMap","catchError","pluck","trigger","transition","style","animate","scaleBand","scaleLinear","i5","FormatAmountModule","i1$3","i2$1","i5$1","LoadingIndicatorModule","i6","EmptyStateModule","i8","ButtonModule","BbTurnoversLegendComponent","constructor","cd","data","activeEntries","labelClick","labelActivate","labelDeactivate","legendEntries","ngOnChanges","update","markForCheck","getLegendEntries","_a","items","label","formattedLabel","idx","findIndex","i","push","color","colors","getColor","isActive","entry","item","find","d","name","undefined","activate","emit","deactivate","trackBy","index","ɵfac","ChangeDetectorRef","ɵcmp","NgIf","NgForOf","LegendEntryComponent","type","args","selector","templateUrl","styleUrls","encapsulation","None","changeDetection","OnPush","title","height","width","BbGridPanelSeriesComponent","deprecationService","gridPanels","dims","orient","val","logDeprecatedFeature","_orient","getChartDataLabels","labelName","xValue","xScale","offset","bandwidth","paddingInner","class","badge","x","y","roundEdges","getGridPanels","localXScale","localYScale","yScale","DeprecationsService","GridPanelComponent","prototype","PROPERTIES","FORECAST","value","PERIODS","interval","duration","default","INTERVAL","DAY","WEEK","MONTH","YEAR","DEFAULT_INTERVAL","DEFAULT_DURATION","DEFAULT_START_DAY","BAR_COLORS_CSS_VAR","CHART_COLORS","MOBILE_WIDGET_WIDTH","filterInputParameters","input","prop","pipe","inputVal","propVal","TurnoversVerticalBarChartComponent","chartElement","zone","platformId","legend","legendTitle","xAxis","yAxis","showXAxisLabel","showYAxisLabel","xAxisLabel","yAxisLabel","tooltipDisabled","gradient","showGridLines","schemeType","Ordinal","barPadding","roundDomains","yScaleMax","showDataLabel","groupsData","legendTemplate","xOffset","groupDomain","innerDomain","valueDomain","margin","xAxisHeight","yAxisWidth","dataLabelMaxHeight","negative","positive","margins","showXAxis","showYAxis","showXLabel","showYLabel","showLegend","legendType","formatDates","getGroupDomain","getInnerDomain","setColors","transform","domain","group","results","includes","series","getXScale","spacing","length","rangeRound","getYScale","scale","range","nice","onDataLabelMaxHeightChanged","event","groupIndex","size","Math","max","setTimeout","onClick","select","scheme","customColors","updateYAxisWidth","axis","updateXAxisHeight","onActivate","Object","assign","entries","onDeactivate","splice","ElementRef","NgZone","template","decorators","xAxisTickFormatting","yAxisTickFormatting","dataLabelFormatting","tooltipTemplate","D0Types","BbSeriesVerticalComponent","seriesName","tooltipShowCaret","animations","dataLabelHeightChanged","tooltipPlacement","Top","tooltipType","tooltip","orientation","Vertical","barsForDataLabels","getColors","offset0","offset1","bar","scaleType","gradientStops","getLinearGradientStops","tooltipText","Error","bars","formatChartData","updatedLabels","updateDataLabels","updatedBars","d0Type","yScaleMin","d0","_b","_c","groupData","barEl","diff","currency","abs","call","ceil","tooltipLabel","toLocaleString","total","formattedSeries","_d","_e","_f","_g","_h","graphData","standardType","stackedType","typeObject","returnObject","updateTooltipSettings","trackDataLabelBy","barLabel","BarComponent","TooltipDirective","BarLabelComponent","opacity","TurnoversVerticalGroupedBarChartComponent","groupPadding","legendOptions","position","Below","getValueDomain","groupScale","getGroupScale","innerScale","getInnerScale","valueScale","getValueScale","getLegendOptions","paddingOuter","min","groupTransform","ChartComponent","NgTemplateOutlet","XAxisComponent","YAxisComponent","TurnoversBarChartComponent","currencyPipe","cssVariableService","chartSeriesData","forecast","chartOptions","getCssVariable","cssVar","split","barChart2d","amountVal","TurnoversVerticalGroupedBarChartCustomizableDirective","TurnoversVerticalStackedBarChartCustomizableDirective","TurnoversChartLegendCustomizableDirective","TurnoversChartTooltipCustomizableDirective","AmountComponent","NgStyle","AsyncPipe","providers","ɵdir","TurnoversVerticalStackedBarChartComponent","xAxisTicks","yAxisTicks","smallest","biggest","smallestSum","biggestSum","opts","getMessageFromResponse","error","responseBody","errors","message","parseError","ErrorEvent","status","TurnoversWidgetHelpersService","datePipe","extendTurnoverItem","barData","intervalStartDate","slice","getChartData","turnovers","labels","income","Number","creditAmount","amount","currencyCode","spending","debitAmount","balance","periodToDate","period","date","Date","intervalCount","setDate","getDate","setFullYear","getFullYear","setMonth","getMonth","toISOString","ɵprov","TurnoversService","turnoversDataHttpService","loadAnalysisData","params","getTurnovers","body","concat","TurnoversHttpService","TurnoversComponent","service","route","helpers","hostRef","selectedTab","indexOf","isLoading","initialDateParams","periodStartDate","periodEndDate","intervalDuration","intervalStartDay","arrangementIds","getRouteParam","selectedAccount","dateParams","asObservable","selectedAccounts","next","subscribe","complete","handleError","incomeRef","nativeElement","textContent","spendingRef","forecastRef","param","paramValue","paramMap","parent","onTabChange","num","ActivatedRoute","TurnoversItemCustomizableDirective","TurnoversControlsCustomizableDirective","TurnoversEmptyStateCustomizableDirective","ButtonDirective","LoadingIndicatorComponent","EmptyStateComponent","static","TurnoversWidgetComponent","itemModel","getProperty","propertyValue","forecastSubject","forecast$","forecastValue","property","ItemModel","components","customizables","modules","TurnoversWidgetModule","ɵmod","ɵinj","withConfig","classMap","imports","entryComponents","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, PLATFORM_ID, Inject, ViewChild, Directive, Injectable, Optional, NgModule } from '@angular/core';\nimport * as i1 from '@swimlane/ngx-charts';\nimport { formatLabel, BaseChartComponent, ScaleType, calculateViewDimensions, ColorHelper, PlacementTypes, StyleTypes, BarOrientation, LegendPosition, NgxChartsModule } from '@swimlane/ngx-charts';\nimport * as i1$1 from '@angular/common';\nimport { DatePipe, CommonModule, CurrencyPipe } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport * as i1$2 from '@backbase/foundation-ang/future';\nimport * as i1$4 from '@backbase/foundation-ang/core';\nimport { BbTemplate, BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport * as i2 from '@backbase/ui-ang/css-variables-lib';\nimport { CssVariablesService } from '@backbase/ui-ang/css-variables-lib';\nimport { combineLatest, from, BehaviorSubject, of } from 'rxjs';\nimport { map, tap, filter, switchMap, catchError, pluck } from 'rxjs/operators';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { scaleBand, scaleLinear } from 'd3-scale';\nimport * as i5 from '@backbase/ui-ang/amount';\nimport { FormatAmountModule } from '@backbase/ui-ang/amount';\nimport * as i1$3 from '@backbase/data-ang/transactions';\nimport * as i2$1 from '@angular/router';\nimport * as i5$1 from '@backbase/ui-ang/loading-indicator';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport * as i6 from '@backbase/ui-ang/empty-state';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport * as i8 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\n\nclass BbTurnoversLegendComponent {\n    constructor(cd) {\n        this.cd = cd;\n        /**\n         * The data for the chart legend.\n         */\n        this.data = [];\n        /**\n         * The active entries for the chart legend.\n         */\n        this.activeEntries = [];\n        /**\n         * EventEmitter for triggering a labelClick event.\n         */\n        this.labelClick = new EventEmitter();\n        /**\n         * EventEmitter for triggering a labelActivate event.\n         */\n        this.labelActivate = new EventEmitter();\n        /**\n         * EventEmitter for triggering a labelDeactivate event.\n         */\n        this.labelDeactivate = new EventEmitter();\n        this.legendEntries = [];\n    }\n    ngOnChanges() {\n        this.update();\n    }\n    update() {\n        this.cd.markForCheck();\n        this.legendEntries = this.getLegendEntries();\n    }\n    getLegendEntries() {\n        var _a;\n        const items = [];\n        for (const label of this.data) {\n            const formattedLabel = formatLabel(label);\n            const idx = items.findIndex((i) => {\n                return i.label === formattedLabel;\n            });\n            if (idx === -1) {\n                items.push({\n                    label,\n                    formattedLabel,\n                    color: (_a = this.colors) === null || _a === void 0 ? void 0 : _a.getColor(label),\n                });\n            }\n        }\n        return items;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find((d) => {\n            return entry.label === d.name;\n        });\n        return item !== undefined;\n    }\n    activate(item) {\n        this.labelActivate.emit(item);\n    }\n    deactivate(item) {\n        this.labelDeactivate.emit(item);\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nBbTurnoversLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BbTurnoversLegendComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nBbTurnoversLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: BbTurnoversLegendComponent, selector: \"bb-charts-legend\", inputs: { data: \"data\", title: \"title\", colors: \"colors\", height: \"height\", width: \"width\", activeEntries: \"activeEntries\" }, outputs: { labelClick: \"labelClick\", labelActivate: \"labelActivate\", labelDeactivate: \"labelDeactivate\" }, usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"row\\\">\\n  <header class=\\\"legend-title\\\" *ngIf=\\\"title?.length > 0\\\">\\n    <span class=\\\"legend-title-text\\\">{{title}}</span>\\n  </header>\\n  <div class=\\\"legend-wrap\\\">\\n    <ul class=\\\"legend-labels d-flex px-5 mb-3\\\"\\n      [style.max-height.px]=\\\"height ? height - 45 : 'inherit'\\\">\\n      <li\\n        *ngFor=\\\"let entry of legendEntries; trackBy: trackBy\\\"\\n        class=\\\"legend-label text-dark text-capitalize\\\">\\n        <ngx-charts-legend-entry\\n          [label]=\\\"entry.label\\\"\\n          [formattedLabel]=\\\"entry.formattedLabel\\\"\\n          [color]=\\\"entry.color\\\"\\n          [isActive]=\\\"isActive(entry)\\\"\\n          (select)=\\\"labelClick.emit($event)\\\"\\n          (activate)=\\\"activate($event)\\\"\\n          (deactivate)=\\\"deactivate($event)\\\">\\n        </ngx-charts-legend-entry>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\", styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:bold}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"], components: [{ type: i1.LegendEntryComponent, selector: \"ngx-charts-legend-entry\", inputs: [\"isActive\", \"color\", \"label\", \"formattedLabel\"], outputs: [\"select\", \"activate\", \"deactivate\", \"toggle\"] }], directives: [{ type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BbTurnoversLegendComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-charts-legend',\n                    templateUrl: './bb-turnovers-legend.component.html',\n                    styleUrls: ['./bb-turnovers-legend.component.scss'],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], labelClick: [{\n                type: Output\n            }], labelActivate: [{\n                type: Output\n            }], labelDeactivate: [{\n                type: Output\n            }] } });\n\nclass BbGridPanelSeriesComponent {\n    constructor(deprecationService) {\n        this.deprecationService = deprecationService;\n        this.gridPanels = [];\n        /**\n         * Array of Chart data objects needed for the chart to be rendered.\n         */\n        this.data = [];\n        /**\n         * Dimensions of the chart.\n         */\n        this.dims = {\n            height: 0,\n            width: 0,\n        };\n    }\n    set orient(val) {\n        this.deprecationService.logDeprecatedFeature('Removed #orient input from #BbGridPanelSeriesComponent');\n        this._orient = val;\n    }\n    get orient() {\n        return this._orient || 'vertical';\n    }\n    ngOnChanges() {\n        this.update();\n    }\n    update() {\n        this.gridPanels = this.getChartDataLabels();\n    }\n    getChartDataLabels() {\n        return this.data.map((d) => {\n            var _a;\n            const labelName = (_a = d.name) !== null && _a !== void 0 ? _a : '';\n            let width = 0;\n            let xValue = 0;\n            if (!!this.xScale) {\n                const offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n                width = this.xScale.bandwidth() + offset;\n                xValue = (this.xScale(labelName) || 0) - offset / 2;\n            }\n            return {\n                name: labelName,\n                class: d.badge === 'forecast' ? 'forecast' : '',\n                width: width,\n                height: this.dims.height,\n                x: xValue,\n                y: 0,\n                roundEdges: false,\n            };\n        });\n    }\n    getGridPanels() {\n        this.deprecationService.logDeprecatedFeature('#getGridPanels deprecation in favor of private method #getChartDataLabels from #BbGridPanelSeriesComponent');\n        const localXScale = this.xScale;\n        const localYScale = this.yScale;\n        return this.data.map((d) => {\n            let offset;\n            let width;\n            let height;\n            let x;\n            let y;\n            if (this.orient === 'vertical') {\n                offset = localXScale.bandwidth() * localXScale.paddingInner();\n                width = localXScale.bandwidth() + offset;\n                height = this.dims.height;\n                x = (localXScale(d.name) || 0) - offset / 2;\n                y = 0;\n            }\n            else if (this.orient === 'horizontal') {\n                offset = localYScale.bandwidth() * localYScale.paddingInner();\n                width = this.dims.width;\n                height = localYScale.bandwidth() + offset;\n                x = 0;\n                y = localYScale(d.name) - offset / 2;\n            }\n            return {\n                name: d.name,\n                class: d.badge === 'forecast' ? 'forecast' : '',\n                height,\n                width,\n                x,\n                y,\n            };\n        });\n    }\n}\nBbGridPanelSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BbGridPanelSeriesComponent, deps: [{ token: i1$2.DeprecationsService }], target: i0.ɵɵFactoryTarget.Component });\nBbGridPanelSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: BbGridPanelSeriesComponent, selector: \"g[bb-charts-grid-panel-series]\", inputs: { data: \"data\", dims: \"dims\", xScale: \"xScale\", yScale: \"yScale\" }, usesOnChanges: true, ngImport: i0, template: \"<svg:g *ngFor=\\\"let gridPanel of gridPanels\\\">\\n  <svg:g ngx-charts-grid-panel\\n    [height]=\\\"gridPanel.height\\\"\\n    [width]=\\\"gridPanel.width\\\"\\n    [x]=\\\"gridPanel.x\\\"\\n    [y]=\\\"gridPanel.y\\\"\\n    [class.grid-panel]=\\\"true\\\"\\n    [class.forecast]=\\\"gridPanel.class === 'forecast'\\\">\\n  </svg:g>\\n</svg:g>\\n\", components: [{ type: i1.GridPanelComponent, selector: \"g[ngx-charts-grid-panel]\", inputs: [\"width\", \"height\", \"x\", \"y\"] }], directives: [{ type: i1$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\n__decorate([\n    Input()('orient')\n], BbGridPanelSeriesComponent.prototype, \"orient\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BbGridPanelSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/component-selector\n                    selector: 'g[bb-charts-grid-panel-series]',\n                    templateUrl: './bb-grid-panel-series.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: i1$2.DeprecationsService }]; }, propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }] } });\n\nconst PROPERTIES = {\n    FORECAST: {\n        name: 'showForecast',\n        value: true,\n    },\n};\nconst PERIODS = [\n    {\n        interval: 'MONTH',\n        duration: 6,\n        default: true,\n    },\n    {\n        interval: 'MONTH',\n        duration: 12,\n    },\n];\nconst INTERVAL = {\n    DAY: 'DAY',\n    WEEK: 'WEEK',\n    MONTH: 'MONTH',\n    YEAR: 'YEAR',\n};\nconst DEFAULT_INTERVAL = INTERVAL.MONTH;\nconst DEFAULT_DURATION = 6;\nconst DEFAULT_START_DAY = 1;\nconst BAR_COLORS_CSS_VAR = '--chart-group-bar-color';\nconst CHART_COLORS = ['#004285', '#107bb5'];\nconst MOBILE_WIDGET_WIDTH = 688;\nconst filterInputParameters = (input, prop) => combineLatest([input, prop]).pipe(map(([inputVal, propVal]) => (inputVal !== undefined ? inputVal : propVal)));\n\nclass TurnoversVerticalBarChartComponent extends BaseChartComponent {\n    constructor(chartElement, zone, cd, platformId) {\n        super(chartElement, zone, cd, platformId);\n        /**\n         * Enable/Disable chart legend.\n         */\n        this.legend = false;\n        /**\n         * The title for the chart legend.\n         */\n        this.legendTitle = '';\n        /**\n         * Hide/show the horizontal axis.\n         */\n        this.xAxis = true;\n        /**\n         * Hide/show the vertical axis.\n         */\n        this.yAxis = true;\n        /**\n         * Show the horizontal axis label.\n         */\n        this.showXAxisLabel = true;\n        /**\n         * Show the vertical axis label.\n         */\n        this.showYAxisLabel = true;\n        /**\n         * The label for the horizontal axis.\n         */\n        this.xAxisLabel = '';\n        /**\n         * The label for the vertical axis.\n         */\n        this.yAxisLabel = '';\n        /**\n         * Enable/Disable chart tooltip.\n         */\n        this.tooltipDisabled = false;\n        /**\n         * Enable/Disable chart gradient.\n         */\n        this.gradient = false;\n        /**\n         * Show/hide chart grid lines.\n         */\n        this.showGridLines = true;\n        /**\n         * The active entries for the chart legend.\n         */\n        this.activeEntries = [];\n        /**\n         * Sets the scheme type of the chart.\n         */\n        this.schemeType = ScaleType.Ordinal;\n        /**\n         * Padding of the chart bars.\n         */\n        this.barPadding = 8;\n        /**\n         * Enable/Disable rounded corners.\n         */\n        this.roundDomains = true;\n        /**\n         * Enable/disable rounded edges for the bars.\n         */\n        this.roundEdges = false;\n        /**\n         * Maximum vertical chart scale.\n         */\n        this.yScaleMax = 0;\n        /**\n         * Hide/show the data labels.\n         */\n        this.showDataLabel = false;\n        /**\n         * Array of Chart data objects needed for the chart to be rendered.\n         */\n        this.groupsData = [];\n        /**\n         * The chart legend template.\n         */\n        this.legendTemplate = null;\n        /**\n         * EventEmitter for triggering a activate event.\n         */\n        this.activate = new EventEmitter();\n        /**\n         * EventEmitter for triggering a deactivate event.\n         */\n        this.deactivate = new EventEmitter();\n        this.dims = { width: 0, height: 0, xOffset: 0 };\n        this.groupDomain = [];\n        this.innerDomain = [];\n        this.valueDomain = [];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n        });\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.setColors();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.name)) {\n                domain.push(group.name);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.name)) {\n                    domain.push(d.name);\n                }\n            }\n        }\n        return domain;\n    }\n    getXScale() {\n        const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getYScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    onDataLabelMaxHeightChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return item.name;\n    }\n    setColors() {\n        const domain = this.schemeType === ScaleType.Ordinal ? this.innerDomain : this.valueDomain;\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    updateYAxisWidth(axis) {\n        this.yAxisWidth = axis.width;\n        this.update();\n    }\n    updateXAxisHeight(axis) {\n        this.xAxisHeight = axis.height;\n        this.update();\n    }\n    onActivate(event, group) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const idx = this.activeEntries.findIndex((d) => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const idx = this.activeEntries.findIndex((d) => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries]; // NOSONAR false positive - https://github.com/SonarSource/SonarTS/issues/760\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nTurnoversVerticalBarChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversVerticalBarChartComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nTurnoversVerticalBarChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TurnoversVerticalBarChartComponent, selector: \"ng-component\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", yScaleMax: \"yScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", groupsData: \"groupsData\", tooltipTemplate: \"tooltipTemplate\", legendTemplate: \"legendTemplate\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, usesInheritance: true, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversVerticalBarChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    template: '',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], groupsData: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], legendTemplate: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nvar D0Types;\n(function (D0Types) {\n    D0Types[\"positive\"] = \"positive\";\n    D0Types[\"negative\"] = \"negative\";\n})(D0Types || (D0Types = {}));\nclass BbSeriesVerticalComponent {\n    constructor(deprecationService) {\n        this.deprecationService = deprecationService;\n        /**\n         * The type of the chart bars.\n         */\n        this.type = 'standard';\n        /**\n         * Enable/disable bars gradient.\n         */\n        this.gradient = false;\n        /**\n         * The active entries for the chart bars.\n         */\n        this.activeEntries = [];\n        /**\n         * Name of the chart series.\n         */\n        this.seriesName = '';\n        /**\n         * Enabel/Disable bars tooltip.\n         */\n        this.tooltipDisabled = false;\n        /**\n         * Show/Hide tooltip caret.\n         */\n        this.tooltipShowCaret = false;\n        /**\n         * Enable/disable bars rounded edges.\n         */\n        this.roundEdges = false;\n        /**\n         * Enable/disable bars animation.\n         */\n        this.animations = true;\n        /**\n         * Show/hide bars label.\n         */\n        this.showDataLabel = false;\n        /**\n         * EventEmitter for triggering a select event.\n         */\n        // eslint-disable-next-line @angular-eslint/no-output-native\n        this.select = new EventEmitter();\n        /**\n         * EventEmitter for triggering a activate event.\n         */\n        this.activate = new EventEmitter();\n        /**\n         * EventEmitter for triggering a deactivate event.\n         */\n        this.deactivate = new EventEmitter();\n        /**\n         * EventEmitter for triggering a dataLabelHeightChanged event.\n         */\n        this.dataLabelHeightChanged = new EventEmitter();\n        this.tooltipPlacement = PlacementTypes.Top;\n        this.tooltipType = StyleTypes.tooltip;\n        this.orientation = BarOrientation.Vertical;\n        this.barsForDataLabels = [];\n    }\n    getColors(value, label, offset0, offset1) {\n        const bar = {};\n        if (this.colors) {\n            if (this.colors.scaleType === ScaleType.Ordinal) {\n                bar.color = this.colors.getColor(label);\n            }\n            else {\n                if (this.type === 'standard') {\n                    bar.color = this.colors.getColor(value);\n                    bar.gradientStops = this.colors.getLinearGradientStops(value);\n                }\n                else {\n                    bar.color = this.colors.getColor(offset1 || 0);\n                    bar.gradientStops = this.colors.getLinearGradientStops(offset1 || 0, offset0);\n                }\n            }\n        }\n        return bar;\n    }\n    tooltipText(label, value) {\n        return this.tooltipDisabled\n            ? undefined\n            : `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${value}</span>\n    `;\n    }\n    ngOnChanges() {\n        if (!this.series) {\n            throw new Error('[series] should be provided to the component!');\n        }\n        this.update(this.series);\n    }\n    update(series) {\n        this.bars = this.formatChartData(series);\n        this.barsForDataLabels = this.updatedLabels(series);\n    }\n    updateDataLabels(series) {\n        this.deprecationService.logDeprecatedFeature('#updateDataLabels inside #BbSeriesVerticalComponent deprecated in favor of #updatedLabels, which returns the formatted object instead of assigning values within itself');\n        this.barsForDataLabels = this.updatedLabels(series);\n    }\n    updatedBars(series) {\n        var _a;\n        let d0Type = D0Types.positive;\n        const width = (_a = this.xScale) === null || _a === void 0 ? void 0 : _a.bandwidth();\n        const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n        const d0 = {\n            [D0Types.positive]: 0,\n            [D0Types.negative]: 0,\n        };\n        return series.map((d, index, group) => {\n            var _a, _b, _c;\n            const value = d.value || 0;\n            const label = d.name || '';\n            const formattedLabel = formatLabel(label);\n            const roundEdges = this.roundEdges;\n            d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n            const bar = {\n                value,\n                label,\n                roundEdges,\n                data: d,\n                width,\n                formattedLabel,\n                height: 0,\n                x: 0,\n                y: 0,\n            };\n            // Use data of the group of bars for tooltips\n            if (this.groupData) {\n                bar.data = {\n                    group: group.map((barEl) => { var _a; return (Object.assign(Object.assign({}, barEl), { color: (_a = this.colors) === null || _a === void 0 ? void 0 : _a.getColor(barEl.name || '') })); }),\n                    diff: this.groupData.diff,\n                    currency: this.groupData.currency,\n                    value: d.value,\n                    badge: this.groupData.badge,\n                };\n            }\n            if (this.type === 'standard') {\n                bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n                bar.x = (_a = this.xScale) === null || _a === void 0 ? void 0 : _a.call(this, label);\n                bar.y = (_b = this.yScale) === null || _b === void 0 ? void 0 : _b.call(this, Math.max(0, value));\n            }\n            else if (this.type === 'stacked') {\n                const offset0 = d0[d0Type];\n                const offset1 = offset0 + value;\n                d0[d0Type] += value;\n                bar.height = Math.ceil(this.yScale(offset0) - this.yScale(offset1));\n                bar.x = 0;\n                bar.y = (_c = this.yScale) === null || _c === void 0 ? void 0 : _c.call(this, offset1);\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n                bar.roundEdges = index === 1;\n            }\n            Object.assign(bar, this.getColors(value, label, bar.offset0, bar.offset1));\n            let tooltipLabel = formattedLabel;\n            if (this.seriesName) {\n                tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n                bar.data.series = this.seriesName;\n            }\n            bar.tooltipText = this.tooltipText(tooltipLabel, value.toLocaleString());\n            return bar;\n        });\n    }\n    updatedLabels(series) {\n        return series.map((d) => {\n            var _a, _b, _c;\n            return ({\n                name: d.name,\n                series: this.seriesName ? this.seriesName : d.name,\n                total: d.value,\n                x: ((_a = this.xScale) === null || _a === void 0 ? void 0 : _a.call(this, d.name)) || 0,\n                y: ((_b = this.yScale) === null || _b === void 0 ? void 0 : _b.call(this, 0)) || 0,\n                height: this.yScale ? this.yScale(d.value) - this.yScale(0) : 0,\n                width: ((_c = this.xScale) === null || _c === void 0 ? void 0 : _c.bandwidth()) || 0,\n                roundEdges: this.roundEdges,\n            });\n        });\n    }\n    formatChartData(series) {\n        const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n        const d0 = {\n            [D0Types.positive]: 0,\n            [D0Types.negative]: 0,\n        };\n        const formattedSeries = series.map((d, index, group) => {\n            var _a, _b, _c, _d, _e, _f, _g, _h;\n            const value = d.value || 0;\n            const label = d.name || '';\n            const d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n            const formattedLabel = formatLabel(label);\n            const tooltipLabel = this.seriesName ? `${this.seriesName} • ${formattedLabel}` : formattedLabel;\n            const data = {\n                name: this.seriesName || '',\n                group: group.map((barEl) => { var _a; return (Object.assign(Object.assign({}, barEl), { color: (_a = this.colors) === null || _a === void 0 ? void 0 : _a.getColor(barEl.name || '') })); }),\n                series: group.map((barEl) => { var _a; return (Object.assign(Object.assign({}, barEl), { color: (_a = this.colors) === null || _a === void 0 ? void 0 : _a.getColor(barEl.name || '') })); }),\n                diff: (_a = this.groupData) === null || _a === void 0 ? void 0 : _a.diff,\n                currency: (_b = this.groupData) === null || _b === void 0 ? void 0 : _b.currency,\n                value: d.value,\n                badge: (_c = this.groupData) === null || _c === void 0 ? void 0 : _c.badge,\n            };\n            const graphData = {\n                name: this.seriesName || '',\n                value: d.value,\n            };\n            const standardType = {\n                height: Math.abs(this.yScale(value) - this.yScale(yScaleMin)),\n                offset0: undefined,\n                offset1: undefined,\n                roundEdges: this.roundEdges,\n                x: ((_d = this.xScale) === null || _d === void 0 ? void 0 : _d.call(this, label)) || 0,\n                y: ((_e = this.yScale) === null || _e === void 0 ? void 0 : _e.call(this, Math.max(0, value))) || 0,\n                width: ((_f = this.xScale) === null || _f === void 0 ? void 0 : _f.bandwidth()) || 0,\n            };\n            const stackedType = {\n                height: Math.ceil(this.yScale(d0[d0Type]) - this.yScale(d0[d0Type] + value)),\n                offset0: d0[d0Type],\n                offset1: d0[d0Type] + value,\n                roundEdges: index === 1,\n                x: 0,\n                y: ((_g = this.yScale) === null || _g === void 0 ? void 0 : _g.call(this, d0[d0Type] + value)) || 0,\n                width: ((_h = this.xScale) === null || _h === void 0 ? void 0 : _h.bandwidth()) || 0,\n            };\n            const typeObject = this.type === 'stacked' ? stackedType : standardType;\n            const returnObject = Object.assign(Object.assign(Object.assign({}, typeObject), this.getColors(value, label, typeObject.offset0, typeObject.offset1)), { data, tooltipText: this.tooltipText(tooltipLabel, value.toLocaleString()), formattedLabel,\n                value,\n                label, graphData: Object.assign({}, graphData) });\n            return returnObject;\n        });\n        return formattedSeries;\n    }\n    updateTooltipSettings() {\n        this.deprecationService.logDeprecatedFeature('Deprecated #updateTooltipSettings method inside #BbSeriesVerticalComponent in favor of assigning values during component creation');\n        this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n        this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find((d) => {\n            return entry.name === d.name && entry.series === d.series;\n        });\n        return item !== undefined;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    trackBy(index, bar) {\n        return bar.label;\n    }\n    trackDataLabelBy(index, barLabel) {\n        return `${index}#${barLabel.series}#${barLabel.total}`;\n    }\n}\nBbSeriesVerticalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BbSeriesVerticalComponent, deps: [{ token: i1$2.DeprecationsService }], target: i0.ɵɵFactoryTarget.Component });\nBbSeriesVerticalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: BbSeriesVerticalComponent, selector: \"g[bb-charts-series-vertical]\", inputs: { dims: \"dims\", type: \"type\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", gradient: \"gradient\", activeEntries: \"activeEntries\", seriesName: \"seriesName\", tooltipDisabled: \"tooltipDisabled\", tooltipShowCaret: \"tooltipShowCaret\", tooltipTemplate: \"tooltipTemplate\", roundEdges: \"roundEdges\", animations: \"animations\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", groupData: \"groupData\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dataLabelHeightChanged: \"dataLabelHeightChanged\" }, usesOnChanges: true, ngImport: i0, template: \"<svg:g ngx-charts-bar\\n  *ngFor=\\\"let bar of bars; trackBy: trackBy\\\"\\n  [@animationState]=\\\"'active'\\\"\\n  [@.disabled]=\\\"!animations\\\"\\n  [width]=\\\"bar.width\\\"\\n  [height]=\\\"bar.height\\\"\\n  [x]=\\\"bar.x\\\"\\n  [y]=\\\"bar.y\\\"\\n  [fill]=\\\"bar.color\\\"\\n  [stops]=\\\"bar.gradientStops\\\"\\n  [data]=\\\"bar.graphData\\\"\\n  [orientation]=\\\"orientation\\\"\\n  [roundEdges]=\\\"bar.roundEdges\\\"\\n  [gradient]=\\\"gradient\\\"\\n  [isActive]=\\\"isActive(bar)\\\"\\n  (select)=\\\"onClick($event)\\\"\\n  (activate)=\\\"activate.emit($event)\\\"\\n  (deactivate)=\\\"deactivate.emit($event)\\\"\\n  ngx-tooltip\\n  [tooltipCssClass]=\\\"'chart-tooltip p-0 border-0'\\\"\\n  [tooltipShowCaret]=\\\"tooltipShowCaret\\\"\\n  [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n  [tooltipPlacement]=\\\"tooltipPlacement\\\"\\n  [tooltipType]=\\\"tooltipType\\\"\\n  [tooltipTitle]=\\\"tooltipTemplate ? undefined : bar.tooltipText\\\"\\n  [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n  [tooltipContext]=\\\"bar.data\\\"\\n  [animations]=\\\"animations\\\">\\n</svg:g>\\n<svg:g *ngIf=\\\"showDataLabel\\\">\\n  <svg:g ngx-charts-bar-label \\n    *ngFor=\\\"let b of barsForDataLabels; let i = index; trackBy:trackDataLabelBy\\\"\\n    [barX]=\\\"b.x\\\"\\n    [barY]=\\\"b.y\\\"\\n    [barWidth]=\\\"b.width\\\"\\n    [barHeight]=\\\"b.height\\\"\\n    [value]=\\\"b.total\\\"\\n    [valueFormatting]=\\\"dataLabelFormatting\\\"\\n    [orientation]=\\\"orientation\\\"\\n    (dimensionsChanged)=\\\"dataLabelHeightChanged.emit({size:$event, index:i})\\\"\\n  />\\n</svg:g>\\n\", components: [{ type: i1.BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"animations\", \"noBarWhenZero\", \"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"stops\", \"ariaLabel\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: i1.BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: [\"value\", \"valueFormatting\", \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"orientation\"], outputs: [\"dimensionsChanged\"] }], directives: [{ type: i1$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipShowEvent\", \"tooltipImmediateExit\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"], outputs: [\"show\", \"hide\"] }, { type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                }),\n                animate(500, style({ opacity: 0 })),\n            ]),\n        ]),\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BbSeriesVerticalComponent, decorators: [{\n            type: Component,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/component-selector\n                    selector: 'g[bb-charts-series-vertical]',\n                    templateUrl: './bb-charts-series-vertical.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                }),\n                                animate(500, style({ opacity: 0 })),\n                            ]),\n                        ]),\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i1$2.DeprecationsService }]; }, propDecorators: { dims: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], seriesName: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipShowCaret: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], groupData: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dataLabelHeightChanged: [{\n                type: Output\n            }] } });\n\nclass TurnoversVerticalGroupedBarChartComponent extends TurnoversVerticalBarChartComponent {\n    constructor(chartElement, zone, cd, platformId) {\n        super(chartElement, zone, cd, platformId);\n        /**\n         * Sets the scale type of the chart.\n         */\n        this.scaleType = ScaleType.Ordinal;\n        /**\n         * Sets the group padding.\n         */\n        this.groupPadding = 16;\n        /**\n         * Array of Chart data objects needed for the chart to be rendered.\n         */\n        this.results = [];\n        this.legendOptions = {\n            colors: undefined,\n            domain: [],\n            scaleType: this.schemeType,\n            title: '',\n            position: LegendPosition.Below,\n        };\n    }\n    update() {\n        super.update();\n        this.valueDomain = this.getValueDomain();\n        this.groupScale = this.getGroupScale();\n        this.innerScale = this.getInnerScale();\n        this.valueScale = this.getValueScale();\n        this.getLegendOptions();\n    }\n    getGroupScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.width])\n            .paddingInner(spacing)\n            .paddingOuter(spacing / 2)\n            .domain(this.groupDomain);\n    }\n    getInnerScale() {\n        const width = this.groupScale ? this.groupScale.bandwidth() : 1;\n        const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, width]).paddingInner(spacing).domain(this.innerDomain);\n    }\n    getValueScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const min = Math.min(0, ...domain);\n        const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n        return [min, max];\n    }\n    groupTransform(group) {\n        var _a, _b;\n        const labelName = (_a = group.name) !== null && _a !== void 0 ? _a : '';\n        return `translate(${(_b = this.groupScale) === null || _b === void 0 ? void 0 : _b.call(this, labelName)}, 0)`;\n    }\n    getLegendOptions() {\n        if (!this.colors) {\n            return;\n        }\n        if (this.legendOptions.scaleType === ScaleType.Ordinal) {\n            this.legendOptions.domain = this.innerDomain;\n            this.legendOptions.colors = this.colors;\n            this.legendOptions.title = this.legendTitle || '';\n        }\n        else {\n            this.legendOptions.domain = this.valueDomain;\n            this.legendOptions.colors = this.colors.scale;\n        }\n    }\n}\nTurnoversVerticalGroupedBarChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversVerticalGroupedBarChartComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nTurnoversVerticalGroupedBarChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TurnoversVerticalGroupedBarChartComponent, selector: \"bb-charts-bar-vertical-2d\", inputs: { scaleType: \"scaleType\", groupPadding: \"groupPadding\", results: \"results\" }, usesInheritance: true, ngImport: i0, template: \"<ngx-charts-chart\\n  [view]=\\\"[width, height]\\\"\\n  [showLegend]=\\\"legend\\\"\\n  [legendOptions]=\\\"legendOptions\\\"\\n  [activeEntries]=\\\"activeEntries\\\"\\n  [animations]=\\\"animations\\\"\\n  (legendLabelActivate)=\\\"onActivate($event)\\\"\\n  (legendLabelDeactivate)=\\\"onDeactivate($event)\\\"\\n  (legendLabelClick)=\\\"onClick($event)\\\">\\n  <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bar-chart chart\\\">\\n    <svg:g bb-charts-grid-panel-series\\n      [xScale]=\\\"groupScale\\\"\\n      [yScale]=\\\"valueScale\\\"\\n      [data]=\\\"groupsData\\\"\\n      [dims]=\\\"dims\\\"\\n    >\\n    </svg:g>\\n    <svg:g ngx-charts-x-axis\\n      *ngIf=\\\"xAxis\\\"\\n      [xScale]=\\\"groupScale\\\"\\n      [dims]=\\\"dims\\\"\\n      [showLabel]=\\\"showXAxisLabel\\\"\\n      [labelText]=\\\"xAxisLabel\\\"\\n      [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n      [xAxisOffset]=\\\"dataLabelMaxHeight.negative\\\"\\n      (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\">\\n    </svg:g>\\n    <svg:g ngx-charts-y-axis\\n      *ngIf=\\\"yAxis\\\"\\n      [yScale]=\\\"valueScale\\\"\\n      [dims]=\\\"dims\\\"\\n      [showGridLines]=\\\"showGridLines\\\"\\n      [showLabel]=\\\"showYAxisLabel\\\"\\n      [labelText]=\\\"yAxisLabel\\\"\\n      [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n      (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\">\\n    </svg:g>\\n    <svg:g bb-charts-series-vertical\\n      *ngFor=\\\"let group of groupsData; let index = index; trackBy:trackBy\\\"\\n      [@animationState]=\\\"'active'\\\"\\n      [attr.transform]=\\\"groupTransform(group)\\\"\\n      [attr.opacity]=\\\"(group.badge ? 0.5 : 1)\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [xScale]=\\\"innerScale\\\"\\n      [yScale]=\\\"valueScale\\\"\\n      [colors]=\\\"colors\\\"\\n      [series]=\\\"group.series\\\"\\n      [dims]=\\\"dims\\\"\\n      [gradient]=\\\"gradient\\\"\\n      [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n      [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n      [showDataLabel]=\\\"showDataLabel\\\"\\n      [dataLabelFormatting]=\\\"dataLabelFormatting\\\"\\n      [seriesName]=\\\"group.name\\\"\\n      [groupData]=\\\"group\\\"\\n      [roundEdges]=\\\"roundEdges\\\"\\n      [animations]=\\\"animations\\\"\\n      (select)=\\\"onClick($event, group)\\\"\\n      (activate)=\\\"onActivate($event, group)\\\"\\n      (deactivate)=\\\"onDeactivate($event, group)\\\"\\n      (dataLabelHeightChanged)=\\\"onDataLabelMaxHeightChanged($event, index)\\\"\\n    />\\n  </svg:g>\\n</ngx-charts-chart>\\n\\n<ng-container\\n  [ngTemplateOutlet]=\\\"legendTemplate\\\"\\n  [ngTemplateOutletContext]=\\\"{\\n    legendOptions: this.legendOptions,\\n    activeEntries: this.activeEntries,\\n    height: this.height,\\n    onActivate: this.onActivate.bind(this),\\n    onDeactivate: this.onDeactivate.bind(this),\\n    onClick: this.onClick.bind(this)\\n  }\\\"\\n></ng-container>\\n\", styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:normal}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}.gridline-path{stroke:#ccc}ngx-charts-legend{display:block;margin-top:1rem}\\n\"], components: [{ type: i1.ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"showLegend\", \"animations\", \"legendType\", \"view\", \"legendOptions\", \"activeEntries\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: BbGridPanelSeriesComponent, selector: \"g[bb-charts-grid-panel-series]\", inputs: [\"data\", \"dims\", \"xScale\", \"yScale\"] }, { type: i1.XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"rotateTicks\", \"showGridLines\", \"xOrient\", \"xAxisOffset\", \"xScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\"], outputs: [\"dimensionsChanged\"] }, { type: i1.YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"showGridLines\", \"yOrient\", \"yAxisOffset\", \"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"referenceLines\", \"showRefLines\", \"showRefLabels\"], outputs: [\"dimensionsChanged\"] }, { type: BbSeriesVerticalComponent, selector: \"g[bb-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"groupData\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*',\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' })),\n            ]),\n        ]),\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversVerticalGroupedBarChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-charts-bar-vertical-2d',\n                    templateUrl: './turnovers-vertical-grouped-bar-chart.component.html',\n                    styleUrls: ['../turnovers-vertical-stacked-bar-chart/turnovers-vertical-stacked-bar-chart.component.scss'],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*',\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' })),\n                            ]),\n                        ]),\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { scaleType: [{\n                type: Input\n            }], groupPadding: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }] } });\n\nclass TurnoversBarChartComponent {\n    constructor(currencyPipe, cssVariableService) {\n        this.currencyPipe = currencyPipe;\n        this.cssVariableService = cssVariableService;\n        /**\n         * Array of Chart data objects needed for the chart to be rendered.\n         */\n        this.chartSeriesData = [];\n        /**\n         * Disable/enable the forecast option on the chart.\n         */\n        this.forecast = false;\n        // bar chart\n        // options\n        this.chartOptions = from(this.cssVariableService.getCssVariable(BAR_COLORS_CSS_VAR)).pipe(map((cssVar) => ({\n            colors: cssVar ? cssVar.split(',') : CHART_COLORS,\n            showXAxis: true,\n            showYAxis: true,\n            gradient: false,\n            showLegend: false,\n            showXAxisLabel: true,\n            showYAxisLabel: true,\n        })));\n    }\n    yAxisTickFormatting(value) {\n        const currency = this.chartSeriesData[0].currency;\n        if (this.barChart2d && this.barChart2d.width < MOBILE_WIDGET_WIDTH) {\n            const amountVal = value / 1000;\n            if (amountVal <= 999) {\n                return `${this.currencyPipe.transform(amountVal, currency, 'symbol', '1.0')}k`;\n            }\n            return `${this.currencyPipe.transform(amountVal / 1000, currency, 'symbol', '1.0')}m`;\n        }\n        return this.currencyPipe.transform(value, currency, 'symbol', '1.0');\n    }\n}\nTurnoversBarChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversBarChartComponent, deps: [{ token: i1$1.CurrencyPipe }, { token: i2.CssVariablesService }], target: i0.ɵɵFactoryTarget.Component });\nTurnoversBarChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TurnoversBarChartComponent, selector: \"bb-turnovers-bar-chart\", inputs: { chartSeriesData: \"chartSeriesData\", forecast: \"forecast\" }, providers: [CssVariablesService], viewQueries: [{ propertyName: \"barChart2d\", first: true, predicate: [\"bbChartsBarVertical2d\"], descendants: true }], ngImport: i0, template: \"<div class=\\\"position-relative pb-25p pb-md-50p\\\">\\n  <ng-container *ngIf=\\\"this.chartOptions | async as options\\\">\\n    <ng-container\\n      bbTurnoversVerticalGroupedBarChartCustomizable\\n      [bbHostRef]=\\\"this\\\"\\n      [bbTemplateContext]=\\\"{options: options}\\\"\\n    ></ng-container>\\n    <ng-container\\n      bbTurnoversVerticalStackedBarChartCustomizable\\n      [bbHostRef]=\\\"this\\\"\\n      [bbTemplateContext]=\\\"{options: options}\\\"\\n    ></ng-container>\\n  </ng-container>\\n</div>\\n\\n<ng-template bbTurnoversVerticalGroupedBarChartCustomizable let-hostRef let-options=\\\"context.options\\\">\\n  <div class=\\\"bb-turnovers-vertical-chart\\\">\\n    <bb-charts-bar-vertical-2d\\n      #bbChartsBarVertical2d\\n      class=\\\"position-static transform-none\\\"\\n      [scheme]=\\\"{ domain: options.colors }\\\"\\n      [results]=\\\"hostRef.chartSeriesData\\\"\\n      [groupsData]=\\\"hostRef.chartSeriesData\\\"\\n      [xAxis]=\\\"options.showXAxis\\\"\\n      [yAxis]=\\\"options.showYAxis\\\"\\n      [showXAxisLabel]=\\\"options.showXAxisLabel\\\"\\n      [showYAxisLabel]=\\\"options.showYAxisLabel\\\"\\n      [legend]=\\\"options.showLegend\\\"\\n      [gradient]=\\\"options.gradient\\\"\\n      [barPadding]=\\\"0\\\"\\n      [groupPadding]=\\\"6\\\"\\n      [roundEdges]=\\\"true\\\"\\n      [legendTemplate]=\\\"legendTemplate\\\"\\n      [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n      [yAxisTickFormatting]=\\\"yAxisTickFormatting.bind(this)\\\">\\n    </bb-charts-bar-vertical-2d>\\n  </div>\\n</ng-template>\\n\\n<ng-template bbTurnoversVerticalStackedBarChartCustomizable let-hostRef let-options=\\\"context.options\\\">\\n</ng-template>\\n\\n<ng-template bbTurnoversChartLegendCustomizable #legendTemplate\\n  let-legendOptions=\\\"legendOptions\\\"\\n  let-activeEntries=\\\"activeEntries\\\"\\n  let-height=\\\"height\\\"\\n  let-onActivate=\\\"onActivate\\\"\\n  let-onDeactivate=\\\"onDeactivate\\\"\\n  let-onClick=\\\"onClick\\\">\\n  <bb-charts-legend\\n    class=\\\"chart-legend\\\"\\n    [data]=\\\"legendOptions.domain\\\"\\n    [title]=\\\"legendOptions.title\\\"\\n    [colors]=\\\"legendOptions.colors\\\"\\n    [height]=\\\"height\\\"\\n    [activeEntries]=\\\"activeEntries\\\"\\n    (labelClick)=\\\"onClick($event)\\\"\\n    (labelActivate)=\\\"onActivate($event)\\\"\\n    (labelDeactivate)=\\\"onDeactivate($event)\\\">\\n  </bb-charts-legend>\\n</ng-template>\\n\\n<ng-template bbTurnoversChartTooltipCustomizable #tooltipTemplate let-model=\\\"model\\\">\\n  <div class=\\\"chart-tooltip-default bb-arrow-bottom text-dark\\\">\\n    <div\\n      *ngIf=\\\"model.badge\\\"\\n      class=\\\"pb-1 mb-2 font-weight-bold border-bottom border-dark text-capitalize text-left\\\">\\n      {{model.badge}}\\n    </div>\\n    <div>\\n      <div class=\\\"d-flex pb-1 align-items-center\\\" *ngFor=\\\"let bar of model.series; let i = index\\\">\\n        <span [ngStyle]=\\\"{'color': bar.color}\\\" class=\\\"bicon bicon-circle\\\"></span>\\n        <span class=\\\"text-capitalize\\\">{{bar.name}}</span>\\n        <span class=\\\"ml-auto font-weight-bold\\\">\\n          <bb-amount-ui\\n            [amount]=\\\"i === 0 ? bar.value : (-bar.value)\\\"\\n            [currency]=\\\"bar.currency\\\"\\n            [showPlusSign]=\\\"i === 0 && bar.value > 0\\\"\\n          ></bb-amount-ui>\\n        </span>\\n      </div>\\n      <div class=\\\"d-flex pt-1 pl-1 align-items-center\\\">\\n        <span i18n=\\\"Difference|tooltip difference label@@turnovers.tooltip.diff\\\">Difference</span>\\n        <span class=\\\"ml-auto font-weight-bold\\\">\\n          <bb-amount-ui\\n            [amount]=\\\"model.diff\\\"\\n            [currency]=\\\"model.currency\\\"\\n            [showPlusSign]=\\\"model.diff !== 0\\\"\\n          ></bb-amount-ui>\\n        </span>\\n      </div>\\n    </div>\\n  </div>\\n</ng-template>\\n\", components: [{ type: i0.forwardRef(function () { return TurnoversVerticalGroupedBarChartComponent; }), selector: \"bb-charts-bar-vertical-2d\", inputs: [\"scaleType\", \"groupPadding\", \"results\"] }, { type: i0.forwardRef(function () { return BbTurnoversLegendComponent; }), selector: \"bb-charts-legend\", inputs: [\"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\"], outputs: [\"labelClick\", \"labelActivate\", \"labelDeactivate\"] }, { type: i0.forwardRef(function () { return i5.AmountComponent; }), selector: \"bb-amount-ui\", inputs: [\"currency\", \"showPlusSign\", \"mapCurrency\", \"showPercent\", \"abbreviate\", \"decimalPlaces\", \"trailingZeroes\", \"amount\"] }], directives: [{ type: i0.forwardRef(function () { return i1$1.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i0.forwardRef(function () { return TurnoversVerticalGroupedBarChartCustomizableDirective; }), selector: \"[bbTurnoversVerticalGroupedBarChartCustomizable]\" }, { type: i0.forwardRef(function () { return TurnoversVerticalStackedBarChartCustomizableDirective; }), selector: \"[bbTurnoversVerticalStackedBarChartCustomizable]\" }, { type: i0.forwardRef(function () { return TurnoversChartLegendCustomizableDirective; }), selector: \"[bbTurnoversChartLegendCustomizable]\" }, { type: i0.forwardRef(function () { return TurnoversChartTooltipCustomizableDirective; }), selector: \"[bbTurnoversChartTooltipCustomizable]\" }, { type: i0.forwardRef(function () { return i1$1.NgForOf; }), selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i0.forwardRef(function () { return i1$1.NgStyle; }), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], pipes: { \"async\": i0.forwardRef(function () { return i1$1.AsyncPipe; }) } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversBarChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-turnovers-bar-chart',\n                    templateUrl: './turnovers-bar-chart.component.html',\n                    providers: [CssVariablesService],\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.CurrencyPipe }, { type: i2.CssVariablesService }]; }, propDecorators: { barChart2d: [{\n                type: ViewChild,\n                args: ['bbChartsBarVertical2d']\n            }], chartSeriesData: [{\n                type: Input\n            }], forecast: [{\n                type: Input\n            }] } });\nclass TurnoversChartTooltipCustomizableDirective extends BbTemplate {\n}\nTurnoversChartTooltipCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversChartTooltipCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTurnoversChartTooltipCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TurnoversChartTooltipCustomizableDirective, selector: \"[bbTurnoversChartTooltipCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversChartTooltipCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbTurnoversChartTooltipCustomizable]',\n                }]\n        }] });\nclass TurnoversChartLegendCustomizableDirective extends BbTemplate {\n}\nTurnoversChartLegendCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversChartLegendCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTurnoversChartLegendCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TurnoversChartLegendCustomizableDirective, selector: \"[bbTurnoversChartLegendCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversChartLegendCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbTurnoversChartLegendCustomizable]',\n                }]\n        }] });\nclass TurnoversVerticalGroupedBarChartCustomizableDirective extends BbTemplate {\n}\nTurnoversVerticalGroupedBarChartCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversVerticalGroupedBarChartCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTurnoversVerticalGroupedBarChartCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TurnoversVerticalGroupedBarChartCustomizableDirective, selector: \"[bbTurnoversVerticalGroupedBarChartCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversVerticalGroupedBarChartCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbTurnoversVerticalGroupedBarChartCustomizable]',\n                }]\n        }] });\nclass TurnoversVerticalStackedBarChartCustomizableDirective extends BbTemplate {\n}\nTurnoversVerticalStackedBarChartCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversVerticalStackedBarChartCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTurnoversVerticalStackedBarChartCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TurnoversVerticalStackedBarChartCustomizableDirective, selector: \"[bbTurnoversVerticalStackedBarChartCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversVerticalStackedBarChartCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbTurnoversVerticalStackedBarChartCustomizable]',\n                }]\n        }] });\n\nclass TurnoversVerticalStackedBarChartComponent extends TurnoversVerticalBarChartComponent {\n    constructor(chartElement, zone, cd, platformId) {\n        super(chartElement, zone, cd, platformId);\n        /**\n         * An array of numbers to set the horizontal points on the chart.\n         */\n        this.xAxisTicks = [];\n        /**\n         * An array of numbers to set the vertical points on the chart.\n         */\n        this.yAxisTicks = [];\n    }\n    update() {\n        super.update();\n        this.valueDomain = this.getValueDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.legendOptions = this.getLegendOptions();\n    }\n    getValueDomain() {\n        const domain = [];\n        let smallest = 0;\n        let biggest = 0;\n        for (const group of this.results) {\n            let smallestSum = 0;\n            let biggestSum = 0;\n            for (const d of group.series) {\n                if (d.value < 0) {\n                    smallestSum += d.value;\n                }\n                else {\n                    biggestSum += d.value;\n                }\n                smallest = d.value < smallest ? d.value : smallest;\n                biggest = d.value > biggest ? d.value : biggest;\n            }\n            domain.push(smallestSum);\n            domain.push(biggestSum);\n        }\n        domain.push(smallest);\n        domain.push(biggest);\n        const min = Math.min(0, ...domain);\n        const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n        return [min, max];\n    }\n    groupTransform(group) {\n        var _a, _b;\n        const labelName = (_a = group.name) !== null && _a !== void 0 ? _a : '';\n        return `translate(${(_b = this.xScale) === null || _b === void 0 ? void 0 : _b.call(this, labelName)}, 0)`;\n    }\n    getLegendOptions() {\n        var _a;\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: '',\n            position: LegendPosition.Below,\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = (_a = this.colors) === null || _a === void 0 ? void 0 : _a.scale;\n        }\n        return opts;\n    }\n}\nTurnoversVerticalStackedBarChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversVerticalStackedBarChartComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nTurnoversVerticalStackedBarChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TurnoversVerticalStackedBarChartComponent, selector: \"bb-charts-bar-vertical-stacked\", inputs: { xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\" }, usesInheritance: true, ngImport: i0, template: \"<ngx-charts-chart\\n  [view]=\\\"[width, height]\\\"\\n  [showLegend]=\\\"legend\\\"\\n  [legendOptions]=\\\"legendOptions\\\"\\n  [activeEntries]=\\\"activeEntries\\\"\\n  [animations]=\\\"animations\\\"\\n  (legendLabelActivate)=\\\"onActivate($event)\\\"\\n  (legendLabelDeactivate)=\\\"onDeactivate($event)\\\"\\n  (legendLabelClick)=\\\"onClick($event)\\\">\\n  <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bar-chart chart\\\">\\n    <svg:g bb-charts-grid-panel-series\\n      [xScale]=\\\"xScale\\\"\\n      [yScale]=\\\"yScale\\\"\\n      [data]=\\\"groupsData\\\"\\n      [dims]=\\\"dims\\\"\\n    >\\n    </svg:g>\\n    <svg:g ngx-charts-x-axis\\n      *ngIf=\\\"xAxis\\\"\\n      [xScale]=\\\"xScale\\\"\\n      [dims]=\\\"dims\\\"\\n      [showLabel]=\\\"showXAxisLabel\\\"\\n      [labelText]=\\\"xAxisLabel\\\"\\n      [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n      [ticks]=\\\"xAxisTicks\\\"\\n      [xAxisOffset]=\\\"dataLabelMaxHeight.negative\\\"\\n      (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\">\\n    </svg:g>\\n    <svg:g ngx-charts-y-axis\\n      *ngIf=\\\"yAxis\\\"\\n      [yScale]=\\\"yScale\\\"\\n      [dims]=\\\"dims\\\"\\n      [showGridLines]=\\\"showGridLines\\\"\\n      [showLabel]=\\\"showYAxisLabel\\\"\\n      [labelText]=\\\"yAxisLabel\\\"\\n      [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n      [ticks]=\\\"yAxisTicks\\\"\\n      (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\">\\n    </svg:g>\\n    <svg:g bb-charts-series-vertical\\n      *ngFor=\\\"let group of results; let index = index; trackBy:trackBy\\\"\\n      [@animationState]=\\\"'active'\\\"\\n      [attr.transform]=\\\"groupTransform(group)\\\"\\n      [attr.opacity]=\\\"(group.badge ? 0.5 : 1)\\\"\\n      [type]=\\\"'stacked'\\\"\\n      [xScale]=\\\"xScale\\\"\\n      [yScale]=\\\"yScale\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [colors]=\\\"colors\\\"\\n      [series]=\\\"group.series\\\"\\n      [dims]=\\\"dims\\\"\\n      [roundEdges]=\\\"roundEdges\\\"\\n      [gradient]=\\\"gradient\\\"\\n      [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n      [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n      [showDataLabel]=\\\"showDataLabel\\\"\\n      [dataLabelFormatting]=\\\"dataLabelFormatting\\\"\\n      [seriesName]=\\\"group.name\\\"\\n      [animations]=\\\"animations\\\"\\n      (select)=\\\"onClick($event, group)\\\"\\n      (activate)=\\\"onActivate($event, group)\\\"\\n      (deactivate)=\\\"onDeactivate($event, group)\\\"\\n      (dataLabelHeightChanged)=\\\"onDataLabelMaxHeightChanged($event, index)\\\"\\n    />\\n  </svg:g>\\n</ngx-charts-chart>\\n\\n<ng-container\\n  [ngTemplateOutlet]=\\\"legendTemplate\\\"\\n  [ngTemplateOutletContext]=\\\"{\\n    legendOptions: this.legendOptions,\\n    activeEntries: this.activeEntries,\\n    height: this.height,\\n    onActivate: this.onActivate.bind(this),\\n    onDeactivate: this.onDeactivate.bind(this),\\n    onClick: this.onClick.bind(this)\\n  }\\\"\\n></ng-container>\\n\", styles: [\".ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:normal}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}.gridline-path{stroke:#ccc}ngx-charts-legend{display:block;margin-top:1rem}\\n\"], components: [{ type: i1.ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"showLegend\", \"animations\", \"legendType\", \"view\", \"legendOptions\", \"activeEntries\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: BbGridPanelSeriesComponent, selector: \"g[bb-charts-grid-panel-series]\", inputs: [\"data\", \"dims\", \"xScale\", \"yScale\"] }, { type: i1.XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"rotateTicks\", \"showGridLines\", \"xOrient\", \"xAxisOffset\", \"xScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\"], outputs: [\"dimensionsChanged\"] }, { type: i1.YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"showGridLines\", \"yOrient\", \"yAxisOffset\", \"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"referenceLines\", \"showRefLines\", \"showRefLabels\"], outputs: [\"dimensionsChanged\"] }, { type: BbSeriesVerticalComponent, selector: \"g[bb-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"groupData\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*',\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' })),\n            ]),\n        ]),\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversVerticalStackedBarChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-charts-bar-vertical-stacked',\n                    templateUrl: './turnovers-vertical-stacked-bar-chart.component.html',\n                    styleUrls: ['turnovers-vertical-stacked-bar-chart.component.scss'],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*',\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' })),\n                            ]),\n                        ]),\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }] } });\n\nconst getMessageFromResponse = (error) => {\n    const responseBody = error.error;\n    if (responseBody && responseBody.errors && responseBody.errors[0] && responseBody.errors[0].message) {\n        return responseBody.errors[0].message;\n    }\n    else {\n        return undefined;\n    }\n};\nconst parseError = (error) => {\n    // TODO: should have more user-friendly messages\n    if (error.error instanceof ErrorEvent) {\n        // Client-side or network error.\n        return {\n            message: 'An unexpected error occurred',\n        };\n    }\n    else {\n        // Backend returns unsuccessful response code.  In case of 400, try to get a message from the\n        // response.\n        switch (error.status) {\n            case 400:\n                return {\n                    message: getMessageFromResponse(error) || 'Error 400',\n                };\n            case 401:\n                return {\n                    message: 'Error 401',\n                };\n            case 403:\n                return {\n                    message: 'Error 403',\n                };\n            case 404:\n                return {\n                    message: 'Error 404',\n                };\n            default:\n                return {\n                    message: 'An unexpected error occurred',\n                };\n        }\n    }\n};\n\nclass TurnoversWidgetHelpersService {\n    constructor(datePipe) {\n        this.datePipe = datePipe;\n        this.extendTurnoverItem = (barData) => (Object.assign(Object.assign({}, barData), { intervalStartDate: this.datePipe.transform(barData.intervalStartDate.slice(0, 10), 'MMM') || '' }));\n    }\n    getChartData(turnovers, labels) {\n        return (turnovers || []).map(function (barData) {\n            return {\n                series: [\n                    {\n                        name: labels.income,\n                        value: Number(barData.creditAmount.amount),\n                        currency: barData.creditAmount.currencyCode,\n                    },\n                    {\n                        name: labels.spending,\n                        value: Number(barData.debitAmount.amount),\n                        currency: barData.debitAmount.currencyCode,\n                    },\n                ],\n                currency: barData.balance.currencyCode,\n                diff: Number(barData.balance.amount),\n                badge: barData.forecast ? labels.forecast : '',\n                name: barData.intervalStartDate.slice(0, 10) + (barData.forecast ? ' ' : ''),\n            };\n        });\n    }\n    periodToDate(period) {\n        const date = new Date();\n        // current date already covers one period\n        const intervalCount = period.duration;\n        switch (period.interval) {\n            case 'DAY':\n                date.setDate(date.getDate() - intervalCount);\n                break;\n            case 'WEEK':\n                date.setDate(date.getDate() - intervalCount * 7);\n                break;\n            case 'YEAR':\n                date.setFullYear(date.getFullYear() - intervalCount);\n                break;\n            case 'MONTH':\n            default:\n                date.setMonth(date.getMonth() - (intervalCount - 1));\n                date.setDate(DEFAULT_START_DAY);\n                break;\n        }\n        return date.toISOString().slice(0, 10);\n    }\n}\nTurnoversWidgetHelpersService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversWidgetHelpersService, deps: [{ token: i1$1.DatePipe }], target: i0.ɵɵFactoryTarget.Injectable });\nTurnoversWidgetHelpersService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversWidgetHelpersService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversWidgetHelpersService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.DatePipe }]; } });\n\nclass TurnoversService {\n    constructor(turnoversDataHttpService) {\n        this.turnoversDataHttpService = turnoversDataHttpService;\n    }\n    loadAnalysisData(params) {\n        return this.turnoversDataHttpService.getTurnovers(params).pipe(map((body) => {\n            return {\n                turnovers: body.turnovers || [],\n                forecast: (body.forecast || []).map((item) => (Object.assign(Object.assign({}, item), { forecast: true }))),\n            };\n        }), map((body) => {\n            return (body.turnovers || []).concat(params.forecast && body.forecast ? body.forecast : []);\n        }));\n    }\n}\nTurnoversService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversService, deps: [{ token: i1$3.TurnoversHttpService }], target: i0.ɵɵFactoryTarget.Injectable });\nTurnoversService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$3.TurnoversHttpService }]; } });\n\nclass TurnoversComponent {\n    constructor(service, route, helpers) {\n        this.service = service;\n        this.route = route;\n        this.helpers = helpers;\n        /**\n         * Disable/enable the forecast option on the chart.\n         */\n        this.forecast = false;\n        this.hostRef = this;\n        this.selectedTab = PERIODS[Math.max(PERIODS.map((item) => item.default).indexOf(true), 0)];\n        this.isLoading = new BehaviorSubject(false);\n        this.initialDateParams = {\n            periodStartDate: this.helpers.periodToDate(PERIODS[0]),\n            periodEndDate: new Date().toISOString().slice(0, 10),\n            intervalDuration: DEFAULT_INTERVAL,\n            intervalStartDay: DEFAULT_START_DAY,\n        };\n        this.arrangementIds = this.getRouteParam(this.route, 'selectedAccount').pipe(map((selectedAccount) => (selectedAccount ? [selectedAccount] : [])));\n        this.dateParams = new BehaviorSubject(this.initialDateParams);\n        this.chartSeriesData = combineLatest(this.arrangementIds, this.dateParams.asObservable()).pipe(tap(() => (this.error = undefined)), filter(([selectedAccounts]) => !!selectedAccounts.length), map(([selectedAccounts, dateParams]) => (Object.assign(Object.assign({ arrangementIds: selectedAccounts }, dateParams), { forecast: this.forecast ? 'AVG' : undefined }))), switchMap((params) => {\n            this.isLoading.next(true);\n            const data = this.service.loadAnalysisData(params);\n            data.subscribe({ complete: () => this.isLoading.next(false) });\n            return data;\n        }), map((items) => items.map(this.helpers.extendTurnoverItem)), map((items) => this.helpers.getChartData(items, this.labels)), catchError((error) => {\n            this.handleError(error);\n            return of([]);\n        }));\n        this.handleError = (error) => {\n            this.error = parseError(error);\n            return of([]);\n        };\n    }\n    get labels() {\n        return {\n            income: this.incomeRef.nativeElement.textContent,\n            spending: this.spendingRef.nativeElement.textContent,\n            forecast: this.forecastRef.nativeElement.textContent,\n        };\n    }\n    getRouteParam(route, param) {\n        const paramValue = route.paramMap.pipe(pluck('params', param));\n        if (!route.parent) {\n            return paramValue;\n        }\n        // ensure that level that has actual value keeps it from being cleared\n        return combineLatest(paramValue, this.getRouteParam(route.parent, param)).pipe(map((params) => params[0] || params[1]));\n    }\n    onTabChange(num) {\n        this.selectedTab = PERIODS[Math.max(PERIODS.map((item) => item.duration).indexOf(num), 0)];\n        this.dateParams.next(Object.assign(Object.assign({}, this.initialDateParams), { periodStartDate: this.helpers.periodToDate(this.selectedTab), periodEndDate: new Date().toISOString().slice(0, 10) }));\n    }\n}\nTurnoversComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversComponent, deps: [{ token: TurnoversService }, { token: i2$1.ActivatedRoute }, { token: TurnoversWidgetHelpersService }], target: i0.ɵɵFactoryTarget.Component });\nTurnoversComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TurnoversComponent, selector: \"bb-turnovers\", inputs: { forecast: \"forecast\" }, providers: [TurnoversService, DatePipe, TurnoversWidgetHelpersService], viewQueries: [{ propertyName: \"incomeRef\", first: true, predicate: [\"incomeLabel\"], descendants: true, static: true }, { propertyName: \"spendingRef\", first: true, predicate: [\"spendingLabel\"], descendants: true, static: true }, { propertyName: \"forecastRef\", first: true, predicate: [\"forecastLabel\"], descendants: true, static: true }], ngImport: i0, template: \"<ng-container *ngIf=\\\"(arrangementIds | async)?.length; else emptyState\\\">\\n  <ng-container *ngIf=\\\"chartSeriesData | async; let data; else loadingState\\\">\\n    <div *ngIf=\\\"!error; else errorState\\\">\\n      <div *ngIf=\\\"data.length; else emptyState\\\">\\n        <ng-container \\n          bbTurnoversItemCustomizable \\n          [bbHostRef]=\\\"hostRef\\\" \\n          [bbTemplateContext]=\\\"data\\\"\\n        ></ng-container>\\n      </div>\\n    </div>\\n  </ng-container>\\n</ng-container>\\n\\n<ng-template bbTurnoversItemCustomizable let-hostRef let-chartSeriesData=\\\"context\\\">\\n  <ng-container bbTurnoversControlsCustomizable [bbHostRef]=\\\"hostRef\\\"></ng-container>\\n  <bb-turnovers-bar-chart\\n    *ngIf=\\\"(isLoading | async) === false; else loadingState\\\"\\n    class=\\\"bb-turnovers-bar-chart bb-chart\\\"\\n    [chartSeriesData]=\\\"chartSeriesData\\\"\\n    [forecast]=\\\"forecast\\\">\\n  </bb-turnovers-bar-chart>\\n</ng-template>\\n<ng-template bbTurnoversControlsCustomizable let-hostRef>\\n  <div class=\\\"bb-turnovers-controls\\\">\\n    <div class=\\\"btn-group btn-group-sm\\\">\\n      <button\\n        bbButton\\n        data-role=\\\"6-month-btn\\\"\\n        [value]='6'\\n        (click)=\\\"hostRef.onTabChange(6)\\\"\\n        [color]=\\\"hostRef.selectedTab.duration === 6 ? 'primary' : 'secondary'\\\"\\n        i18n=\\\"Data period|Six month label@@turnovers.label.duration.month.six\\\"\\n      >\\n        6 Months\\n      </button>\\n      <button\\n        bbButton \\n        data-role=\\\"12-month-btn\\\"\\n        [value]='12'\\n        (click)=\\\"hostRef.onTabChange(12)\\\"\\n        [color]=\\\"hostRef.selectedTab.duration === 12 ? 'primary' : 'secondary'\\\"\\n        i18n=\\\"Data period|Twelve month label@@turnovers.label.duration.month.twelve\\\"\\n      >\\n        12 Months\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #loadingState>\\n  <bb-loading-indicator-ui\\n    i18n-text=\\\"Loading turnovers data|Text to display while loading turnovers@@turnovers.state.loadingTurnovers\\\"\\n    text=\\\"Loading transactions data...\\\"\\n  ></bb-loading-indicator-ui>\\n</ng-template>\\n\\n<ng-template #emptyState>\\n  <ng-container bbTurnoversEmptyStateCustomizable [bbHostRef]=\\\"hostRef\\\"></ng-container>\\n</ng-template>\\n\\n<ng-template bbTurnoversEmptyStateCustomizable let-hostRef>\\n  <ng-container bbTurnoversControlsCustomizable [bbHostRef]=\\\"hostRef\\\"></ng-container>\\n    <bb-empty-state-ui\\n      i18n-title=\\\"No data title|Title of a message that is shown when there are no turnovers@@turnovers.state.noResultsFound.title\\\"\\n      title=\\\"No data found\\\"\\n      i18n-subtitle=\\\"No data subtitle|Subtitle of a message that is shown when there are no turnovers@@turnovers.state.noResultsFound.subtitle\\\"\\n      subtitle=\\\"You don't have any data to be displayed. Please try selecting a different period.\\\"\\n      iconSize=\\\"xxl\\\"\\n      iconModifier=\\\"bar-chart\\\"\\n    ></bb-empty-state-ui>\\n</ng-template>\\n\\n<ng-template #errorState>\\n  <bb-empty-state-ui\\n    data-role=\\\"errorState\\\"\\n    title=\\\"\\\"\\n    [subtitle]=\\\"error?.message\\\"\\n    iconModifier=\\\"error\\\"\\n    iconSize=\\\"xxl\\\"\\n    iconColor=\\\"gray\\\"\\n    iconClasses=\\\"text-muted\\\"\\n  ></bb-empty-state-ui>\\n</ng-template>\\n\\n<span #incomeLabel class=\\\"ng-cloak\\\" i18n=\\\"Incoming|Label for income dataset on the chart@@turnovers.chart.income\\\">Incoming</span>\\n<span #spendingLabel class=\\\"ng-cloak\\\" i18n=\\\"Outgoing|Label for spending dataset on the chart@@turnovers.chart.spending\\\">Outgoing</span>\\n<span #forecastLabel class=\\\"ng-cloak\\\" i18n=\\\"forecast|Label for forecast data on the chart@@turnovers.chart.forecast\\\">Forecast</span>\\n\", components: [{ type: i0.forwardRef(function () { return TurnoversBarChartComponent; }), selector: \"bb-turnovers-bar-chart\", inputs: [\"chartSeriesData\", \"forecast\"] }, { type: i0.forwardRef(function () { return i5$1.LoadingIndicatorComponent; }), selector: \"bb-loading-indicator-ui\", inputs: [\"text\", \"loaderSize\", \"showDelay\", \"hasBackground\", \"inline\"] }, { type: i0.forwardRef(function () { return i6.EmptyStateComponent; }), selector: \"bb-empty-state-ui\", inputs: [\"title\", \"subtitle\", \"showIcon\", \"iconClasses\", \"iconModifier\", \"iconSize\", \"iconColor\"] }], directives: [{ type: i0.forwardRef(function () { return i1$1.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i0.forwardRef(function () { return TurnoversItemCustomizableDirective; }), selector: \"[bbTurnoversItemCustomizable]\" }, { type: i0.forwardRef(function () { return TurnoversControlsCustomizableDirective; }), selector: \"[bbTurnoversControlsCustomizable]\" }, { type: i0.forwardRef(function () { return i8.ButtonDirective; }), selector: \"button[bbButton]\", inputs: [\"type\", \"color\", \"buttonSize\", \"block\", \"circle\"] }, { type: i0.forwardRef(function () { return TurnoversEmptyStateCustomizableDirective; }), selector: \"[bbTurnoversEmptyStateCustomizable]\" }], pipes: { \"async\": i0.forwardRef(function () { return i1$1.AsyncPipe; }) } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-turnovers',\n                    templateUrl: './turnovers.component.html',\n                    providers: [TurnoversService, DatePipe, TurnoversWidgetHelpersService],\n                }]\n        }], ctorParameters: function () { return [{ type: TurnoversService }, { type: i2$1.ActivatedRoute }, { type: TurnoversWidgetHelpersService }]; }, propDecorators: { forecast: [{\n                type: Input\n            }], incomeRef: [{\n                type: ViewChild,\n                args: ['incomeLabel', { static: true }]\n            }], spendingRef: [{\n                type: ViewChild,\n                args: ['spendingLabel', { static: true }]\n            }], forecastRef: [{\n                type: ViewChild,\n                args: ['forecastLabel', { static: true }]\n            }] } });\nclass TurnoversItemCustomizableDirective extends BbTemplate {\n}\nTurnoversItemCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversItemCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTurnoversItemCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TurnoversItemCustomizableDirective, selector: \"[bbTurnoversItemCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversItemCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbTurnoversItemCustomizable]',\n                }]\n        }] });\nclass TurnoversControlsCustomizableDirective extends BbTemplate {\n}\nTurnoversControlsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversControlsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTurnoversControlsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TurnoversControlsCustomizableDirective, selector: \"[bbTurnoversControlsCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversControlsCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbTurnoversControlsCustomizable]',\n                }]\n        }] });\nclass TurnoversEmptyStateCustomizableDirective extends BbTemplate {\n}\nTurnoversEmptyStateCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversEmptyStateCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTurnoversEmptyStateCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TurnoversEmptyStateCustomizableDirective, selector: \"[bbTurnoversEmptyStateCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversEmptyStateCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbTurnoversEmptyStateCustomizable]',\n                }]\n        }] });\n\nclass TurnoversWidgetComponent {\n    constructor(itemModel) {\n        this.itemModel = itemModel;\n        this.forecast = this.getProperty(PROPERTIES.FORECAST).pipe(map((propertyValue) => propertyValue === true));\n        this.forecastSubject = new BehaviorSubject(true);\n        this.forecast$ = filterInputParameters(this.forecastSubject.asObservable(), this.forecast);\n    }\n    // eslint-disable-next-line\n    set forecastValue(value) {\n        this.forecastSubject.next(value);\n    }\n    getProperty(property) {\n        return this.itemModel ? this.itemModel.property(property.name, property.value) : of(property.value);\n    }\n}\nTurnoversWidgetComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversWidgetComponent, deps: [{ token: i1$4.ItemModel, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nTurnoversWidgetComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TurnoversWidgetComponent, selector: \"bb-turnovers-widget\", inputs: { forecastValue: [\"forecast\", \"forecastValue\"] }, ngImport: i0, template: \"<bb-turnovers\\n  [forecast]=\\\"(forecast | async) || undefined\\\"\\n></bb-turnovers>\", components: [{ type: TurnoversComponent, selector: \"bb-turnovers\", inputs: [\"forecast\"] }], pipes: { \"async\": i1$1.AsyncPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversWidgetComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-turnovers-widget',\n                    templateUrl: './turnovers-widget.component.html',\n                }]\n        }], ctorParameters: function () { return [{ type: i1$4.ItemModel, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { forecastValue: [{\n                type: Input,\n                args: ['forecast']\n            }] } });\n\n// General modules\nconst components = [\n    TurnoversWidgetComponent,\n    TurnoversComponent,\n    TurnoversBarChartComponent,\n    TurnoversVerticalBarChartComponent,\n    TurnoversVerticalStackedBarChartComponent,\n    TurnoversVerticalGroupedBarChartComponent,\n    BbTurnoversLegendComponent,\n    BbSeriesVerticalComponent,\n    BbGridPanelSeriesComponent,\n];\nconst customizables = [\n    TurnoversItemCustomizableDirective,\n    TurnoversControlsCustomizableDirective,\n    TurnoversChartTooltipCustomizableDirective,\n    TurnoversChartLegendCustomizableDirective,\n    TurnoversVerticalStackedBarChartCustomizableDirective,\n    TurnoversVerticalGroupedBarChartCustomizableDirective,\n    TurnoversEmptyStateCustomizableDirective,\n];\nconst modules = [FormatAmountModule, LoadingIndicatorModule, EmptyStateModule, ButtonModule];\nclass TurnoversWidgetModule {\n}\nTurnoversWidgetModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTurnoversWidgetModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversWidgetModule, declarations: [TurnoversWidgetComponent,\n        TurnoversComponent,\n        TurnoversBarChartComponent,\n        TurnoversVerticalBarChartComponent,\n        TurnoversVerticalStackedBarChartComponent,\n        TurnoversVerticalGroupedBarChartComponent,\n        BbTurnoversLegendComponent,\n        BbSeriesVerticalComponent,\n        BbGridPanelSeriesComponent, TurnoversItemCustomizableDirective,\n        TurnoversControlsCustomizableDirective,\n        TurnoversChartTooltipCustomizableDirective,\n        TurnoversChartLegendCustomizableDirective,\n        TurnoversVerticalStackedBarChartCustomizableDirective,\n        TurnoversVerticalGroupedBarChartCustomizableDirective,\n        TurnoversEmptyStateCustomizableDirective], imports: [CommonModule, i1$4.BackbaseCoreModule, NgxChartsModule, FormatAmountModule, LoadingIndicatorModule, EmptyStateModule, ButtonModule], exports: [TurnoversWidgetComponent,\n        TurnoversComponent,\n        TurnoversBarChartComponent,\n        TurnoversVerticalBarChartComponent,\n        TurnoversVerticalStackedBarChartComponent,\n        TurnoversVerticalGroupedBarChartComponent,\n        BbTurnoversLegendComponent,\n        BbSeriesVerticalComponent,\n        BbGridPanelSeriesComponent, TurnoversItemCustomizableDirective,\n        TurnoversControlsCustomizableDirective,\n        TurnoversChartTooltipCustomizableDirective,\n        TurnoversChartLegendCustomizableDirective,\n        TurnoversVerticalStackedBarChartCustomizableDirective,\n        TurnoversVerticalGroupedBarChartCustomizableDirective,\n        TurnoversEmptyStateCustomizableDirective, FormatAmountModule, LoadingIndicatorModule, EmptyStateModule, ButtonModule] });\nTurnoversWidgetModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversWidgetModule, providers: [DatePipe, CurrencyPipe], imports: [[\n            CommonModule,\n            BackbaseCoreModule.withConfig({\n                classMap: { TurnoversWidgetComponent },\n            }),\n            NgxChartsModule,\n            ...modules,\n        ], FormatAmountModule, LoadingIndicatorModule, EmptyStateModule, ButtonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TurnoversWidgetModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        BackbaseCoreModule.withConfig({\n                            classMap: { TurnoversWidgetComponent },\n                        }),\n                        NgxChartsModule,\n                        ...modules,\n                    ],\n                    providers: [DatePipe, CurrencyPipe],\n                    entryComponents: [TurnoversComponent],\n                    declarations: [...components, ...customizables],\n                    exports: [...components, ...customizables, ...modules],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BbGridPanelSeriesComponent, BbSeriesVerticalComponent, BbTurnoversLegendComponent, TurnoversBarChartComponent, TurnoversChartLegendCustomizableDirective, TurnoversChartTooltipCustomizableDirective, TurnoversComponent, TurnoversControlsCustomizableDirective, TurnoversEmptyStateCustomizableDirective, TurnoversItemCustomizableDirective, TurnoversVerticalBarChartComponent, TurnoversVerticalGroupedBarChartComponent, TurnoversVerticalGroupedBarChartCustomizableDirective, TurnoversVerticalStackedBarChartComponent, TurnoversVerticalStackedBarChartCustomizableDirective, TurnoversWidgetComponent, TurnoversWidgetModule };\n"]},"metadata":{},"sourceType":"module"}