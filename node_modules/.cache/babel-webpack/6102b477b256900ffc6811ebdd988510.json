{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\nvar GetIdentity;\n\n(function (GetIdentity) {\n  GetIdentity.StatusEnum = {\n    ENABLED: 'ENABLED',\n    DISABLED: 'DISABLED',\n    TEMPORARILYLOCKED: 'TEMPORARILY_LOCKED',\n    DORMANT: 'DORMANT',\n    INACTIVE: 'INACTIVE',\n    ACCESSREVOKED: 'ACCESS_REVOKED'\n  };\n})(GetIdentity || (GetIdentity = {}));\n\nvar GetPendingApproval;\n\n(function (GetPendingApproval) {\n  GetPendingApproval.TypeEnum = {\n    UNLOCK: 'UNLOCK'\n  };\n})(GetPendingApproval || (GetPendingApproval = {}));\n\nconst USER_BASE_PATH = new InjectionToken('USER_BASE_PATH');\nconst COLLECTION_FORMATS = {\n  'csv': ',',\n  'tsv': '   ',\n  'ssv': ' ',\n  'pipes': '|'\n};\n\nclass UserConfiguration {\n  constructor(configurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n    this.encoder = configurationParameters.encoder;\n\n    if (configurationParameters.credentials) {\n      this.credentials = configurationParameters.credentials;\n    } else {\n      this.credentials = {};\n    }\n  }\n\n  selectHeaderContentType(contentTypes) {\n    if (contentTypes.length === 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n\n    return type;\n  }\n\n  selectHeaderAccept(accepts) {\n    if (accepts.length === 0) {\n      return undefined;\n    }\n\n    const type = accepts.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return accepts[0];\n    }\n\n    return type;\n  }\n\n  isJsonMime(mime) {\n    const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n    return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n  }\n\n  lookupCredential(key) {\n    const value = this.credentials[key];\n    return typeof value === 'function' ? value() : value;\n  }\n\n}\n\nconst CONFIG_TOKEN = new InjectionToken('api-data-module UserConfiguration');\n\nclass UserApiModule {\n  constructor(parentModule, http, dataModulesManager, config) {\n    if (parentModule) {\n      throw new Error('UserApiModule is already loaded. Import in your base AppModule only.');\n    }\n\n    if (!http) {\n      throw new Error('You need to import the HttpClientModule in your AppModule! \\n' + 'See also https://github.com/angular/angular/issues/20575');\n    }\n\n    if (dataModulesManager) {\n      dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n        apiRoot: '',\n        servicePath: config.basePath || '',\n        headers: {}\n      });\n    }\n  }\n\n  static forRoot(configurationFactory) {\n    return {\n      ngModule: UserApiModule,\n      providers: [{\n        provide: UserConfiguration,\n        useFactory: configurationFactory\n      }]\n    };\n  }\n\n}\n\nUserApiModule.ɵfac = function UserApiModule_Factory(t) {\n  return new (t || UserApiModule)(i0.ɵɵinject(UserApiModule, 12), i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DataModulesManager, 8), i0.ɵɵinject(UserConfiguration));\n};\n\nUserApiModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: UserApiModule\n});\nUserApiModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [],\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserApiModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [],\n      exports: [],\n      providers: []\n    }]\n  }], function () {\n    return [{\n      type: UserApiModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: i1.HttpClient,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2.DataModulesManager,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: UserConfiguration\n    }];\n  }, null);\n})();\n\nclass CustomHttpParameterCodec {\n  encodeKey(k) {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v) {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k) {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v) {\n    return decodeURIComponent(v);\n  }\n\n}\n\nclass IdentityManagementService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new UserConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  changePassword(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _changePasswordRequest = requestParameters[\"changePasswordRequest\"];\n\n    if (_changePasswordRequest === null || _changePasswordRequest === undefined) {\n      throw new Error('Required parameter changePasswordRequest was null or undefined when calling changePassword.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/identities/password`, _changePasswordRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  changePasswordUrl(requestParameters) {\n    const _changePasswordRequest = requestParameters[\"changePasswordRequest\"];\n\n    if (_changePasswordRequest === null || _changePasswordRequest === undefined) {\n      throw new Error('Required parameter changePasswordRequest was null or undefined when calling changePassword.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/identities/password`;\n  }\n\n  createIdentity(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _createIdentityRequest = requestParameters[\"createIdentityRequest\"];\n\n    if (_createIdentityRequest === null || _createIdentityRequest === undefined) {\n      throw new Error('Required parameter createIdentityRequest was null or undefined when calling createIdentity.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/identities`, _createIdentityRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  createIdentityUrl(requestParameters) {\n    const _createIdentityRequest = requestParameters[\"createIdentityRequest\"];\n\n    if (_createIdentityRequest === null || _createIdentityRequest === undefined) {\n      throw new Error('Required parameter createIdentityRequest was null or undefined when calling createIdentity.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/identities`;\n  }\n\n  getIdentities(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _externalId = requestParameters[\"externalId\"];\n    const _from = requestParameters[\"from\"];\n    const _cursor = requestParameters[\"cursor\"];\n    const _size = requestParameters[\"size\"];\n    const _legalEntityName = requestParameters[\"legalEntityName\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_externalId !== undefined && _externalId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _externalId, 'externalId');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_cursor !== undefined && _cursor !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    if (_legalEntityName !== undefined && _legalEntityName !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _legalEntityName, 'legalEntityName');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/identities`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getIdentitiesUrl(requestParameters) {\n    const _externalId = requestParameters[\"externalId\"];\n    const _from = requestParameters[\"from\"];\n    const _cursor = requestParameters[\"cursor\"];\n    const _size = requestParameters[\"size\"];\n    const _legalEntityName = requestParameters[\"legalEntityName\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_externalId !== undefined && _externalId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _externalId, 'externalId');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_cursor !== undefined && _cursor !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    if (_legalEntityName !== undefined && _legalEntityName !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _legalEntityName, 'legalEntityName');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/users/identities${queryString ? `?${queryString}` : ''}`;\n  }\n\n  getIdentity(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getIdentity.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getIdentityUrl(requestParameters) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getIdentity.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}`;\n  }\n\n  getIdentityPendingApprovals(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getIdentityPendingApprovals.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/approvals`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getIdentityPendingApprovalsUrl(requestParameters) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getIdentityPendingApprovals.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/approvals`;\n  }\n\n  getSessions(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getSessions.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/sessions`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getSessionsUrl(requestParameters) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getSessions.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/sessions`;\n  }\n\n  logoutSessions(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling logoutSessions.');\n    }\n\n    const _identityLogoutRequest = requestParameters[\"identityLogoutRequest\"];\n\n    if (_identityLogoutRequest === null || _identityLogoutRequest === undefined) {\n      throw new Error('Required parameter identityLogoutRequest was null or undefined when calling logoutSessions.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/sessions/logout`, _identityLogoutRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  logoutSessionsUrl(requestParameters) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling logoutSessions.');\n    }\n\n    const _identityLogoutRequest = requestParameters[\"identityLogoutRequest\"];\n\n    if (_identityLogoutRequest === null || _identityLogoutRequest === undefined) {\n      throw new Error('Required parameter identityLogoutRequest was null or undefined when calling logoutSessions.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/sessions/logout`;\n  }\n\n  revokeIdentityAccess(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling revokeIdentityAccess.');\n    }\n\n    const _revokeIdentityAccessRequest = requestParameters[\"revokeIdentityAccessRequest\"];\n\n    if (_revokeIdentityAccessRequest === null || _revokeIdentityAccessRequest === undefined) {\n      throw new Error('Required parameter revokeIdentityAccessRequest was null or undefined when calling revokeIdentityAccess.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/access`, _revokeIdentityAccessRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  revokeIdentityAccessUrl(requestParameters) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling revokeIdentityAccess.');\n    }\n\n    const _revokeIdentityAccessRequest = requestParameters[\"revokeIdentityAccessRequest\"];\n\n    if (_revokeIdentityAccessRequest === null || _revokeIdentityAccessRequest === undefined) {\n      throw new Error('Required parameter revokeIdentityAccessRequest was null or undefined when calling revokeIdentityAccess.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/access`;\n  }\n\n  sendRequiredActions(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling sendRequiredActions.');\n    }\n\n    const _identityRequiredActionsRequest = requestParameters[\"identityRequiredActionsRequest\"];\n\n    if (_identityRequiredActionsRequest === null || _identityRequiredActionsRequest === undefined) {\n      throw new Error('Required parameter identityRequiredActionsRequest was null or undefined when calling sendRequiredActions.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/actions`, _identityRequiredActionsRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  sendRequiredActionsUrl(requestParameters) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling sendRequiredActions.');\n    }\n\n    const _identityRequiredActionsRequest = requestParameters[\"identityRequiredActionsRequest\"];\n\n    if (_identityRequiredActionsRequest === null || _identityRequiredActionsRequest === undefined) {\n      throw new Error('Required parameter identityRequiredActionsRequest was null or undefined when calling sendRequiredActions.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/actions`;\n  }\n\n  updateIdentity(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling updateIdentity.');\n    }\n\n    const _updateIdentityRequest = requestParameters[\"updateIdentityRequest\"];\n\n    if (_updateIdentityRequest === null || _updateIdentityRequest === undefined) {\n      throw new Error('Required parameter updateIdentityRequest was null or undefined when calling updateIdentity.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}`, _updateIdentityRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  updateIdentityUrl(requestParameters) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling updateIdentity.');\n    }\n\n    const _updateIdentityRequest = requestParameters[\"updateIdentityRequest\"];\n\n    if (_updateIdentityRequest === null || _updateIdentityRequest === undefined) {\n      throw new Error('Required parameter updateIdentityRequest was null or undefined when calling updateIdentity.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}`;\n  }\n\n  updateIdentityStatus(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling updateIdentityStatus.');\n    }\n\n    const _updateIdentityStatusRequest = requestParameters[\"updateIdentityStatusRequest\"];\n\n    if (_updateIdentityStatusRequest === null || _updateIdentityStatusRequest === undefined) {\n      throw new Error('Required parameter updateIdentityStatusRequest was null or undefined when calling updateIdentityStatus.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/status`, _updateIdentityStatusRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  updateIdentityStatusUrl(requestParameters) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling updateIdentityStatus.');\n    }\n\n    const _updateIdentityStatusRequest = requestParameters[\"updateIdentityStatusRequest\"];\n\n    if (_updateIdentityStatusRequest === null || _updateIdentityStatusRequest === undefined) {\n      throw new Error('Required parameter updateIdentityStatusRequest was null or undefined when calling updateIdentityStatus.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/status`;\n  }\n\n}\n\nIdentityManagementService.ɵfac = function IdentityManagementService_Factory(t) {\n  return new (t || IdentityManagementService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(USER_BASE_PATH, 8), i0.ɵɵinject(UserConfiguration, 8));\n};\n\nIdentityManagementService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: IdentityManagementService,\n  factory: IdentityManagementService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IdentityManagementService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [USER_BASE_PATH]\n      }]\n    }, {\n      type: UserConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst IdentityManagementServiceChangePasswordMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/identities/password\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst IdentityManagementServiceCreateIdentityMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/identities\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"internalId\": \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n      \"externalId\": \"admin\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict error\",\n      \"errors\": [{\n        \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n        \"key\": \"transactions.api.billingstatus.transaction\",\n        \"context\": {\n          \"billingStatus\": \"BILLED\"\n        }\n      }]\n    }\n  }]\n}]);\nconst IdentityManagementServiceGetIdentitiesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/identities\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"identities\": [{\n        \"id\": \"eadaca0b-0b9d-4244-8922-1dead62d00e4\",\n        \"externalId\": \"U0000010\",\n        \"legalEntityId\": \"48b711b8-5adb-4826-a9cc-141b386f8930\",\n        \"fullName\": \"Hasnain Boyd\",\n        \"legalEntityName\": \"Backbase\"\n      }, {\n        \"id\": \"177296ae-3ebb-42f4-80fe-2d79d81cc469\",\n        \"externalId\": \"U0000011\",\n        \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n        \"fullName\": \"Caroline Smyth\",\n        \"legalEntityName\": \"Backbase Cardiff\"\n      }, {\n        \"id\": \"66569096-df06-46b1-9dbb-3e0e73912e5d\",\n        \"externalId\": \"U0000012\",\n        \"legalEntityId\": \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n        \"fullName\": \"Amin Fowler\",\n        \"legalEntityName\": \"Backbase Amsterdam\"\n      }, {\n        \"id\": \"1117a81d-86e2-4a5a-9f79-eafbaa2bcddd\",\n        \"externalId\": \"U0000013\",\n        \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n        \"fullName\": \"Amelia Slater\",\n        \"legalEntityName\": \"Backbase Cardiff\"\n      }, {\n        \"id\": \"55e27e95-216c-40fd-be2e-dd5a100ddcfc\",\n        \"externalId\": \"U0000014\",\n        \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n        \"fullName\": \"Bradlee Lister\",\n        \"legalEntityName\": \"Backbase Cardiff\"\n      }, {\n        \"id\": \"59721bc0-da2d-42f8-9b14-a391d52e039e\",\n        \"externalId\": \"U0000015\",\n        \"legalEntityId\": \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n        \"fullName\": \"Khalil Freeman\",\n        \"legalEntityName\": \"Backbase Amsterdam\"\n      }, {\n        \"id\": \"d5ff6ff6-7d39-430c-a787-75321d2f986e\",\n        \"externalId\": \"U0000016\",\n        \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n        \"fullName\": \"Safwan Archer\",\n        \"legalEntityName\": \"Backbase Cardiff\"\n      }, {\n        \"id\": \"5e41de27-cc3c-4277-9e4f-e9fb6f1da067\",\n        \"externalId\": \"U0000017\",\n        \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n        \"fullName\": \"Miranda Goldsmith\",\n        \"legalEntityName\": \"Backbase Cardiff\"\n      }, {\n        \"id\": \"34be7792-d4a6-44de-bef7-1d051a33dd08\",\n        \"externalId\": \"U0000018\",\n        \"legalEntityId\": \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n        \"fullName\": \"Willard Pham\",\n        \"legalEntityName\": \"Backbase Amsterdam\"\n      }, {\n        \"id\": \"721b5973-543a-4a36-b739-352259486ac5\",\n        \"externalId\": \"U0000019\",\n        \"legalEntityId\": \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n        \"fullName\": \"Braiden Calhoun\",\n        \"legalEntityName\": \"Backbase Amsterdam\"\n      }],\n      \"totalElements\": 10\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst IdentityManagementServiceGetIdentityMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/identities/{internalId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"externalId\": \"admin\",\n      \"legalEntityInternalId\": \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n      \"fullName\": \"Mila Example\",\n      \"preferredLanguage\": \"EN\",\n      \"emailAddress\": \"mila@example.com\",\n      \"mobileNumber\": \"07700 900000\",\n      \"status\": \"ENABLED\",\n      \"emailVerified\": true,\n      \"createdDate\": \"2018-02-04T06:35:41.000Z\",\n      \"requiredActions\": [\"VERIFY_EMAIL\", \"UPDATE_PASSWORD\", \"ACCEPT_TERMS_AND_CONDITIONS\"],\n      \"givenName\": \"Mila\",\n      \"familyName\": \"Example\",\n      \"attributes\": {\n        \"bank-id\": \"BANK0001\",\n        \"core-id\": \"milaexample\"\n      }\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst IdentityManagementServiceGetIdentityPendingApprovalsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/identities/{internalId}/approvals\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"approvalId\": \"37507cbc-3e81-4cc3-a0f6-78ed53d2db22\",\n      \"type\": \"UNLOCK\"\n    }]\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst IdentityManagementServiceGetSessionsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/identities/{internalId}/sessions\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"sessions\": [{\n        \"id\": \"9136e697-6c2f-49f6-9ef7-c67c89e8b825\",\n        \"ipAddress\": \"198.51.100.103\",\n        \"start\": \"2018-07-26T15:21:23.000Z\",\n        \"lastAccess\": \"2018-07-26T15:21:23.000Z\",\n        \"client\": \"web\"\n      }, {\n        \"id\": \"d04ba3e2-9dd5-484d-b756-e6a86562743a\",\n        \"ipAddress\": \"198.51.100.212\",\n        \"start\": \"2018-07-26T15:23:33.000Z\",\n        \"lastAccess\": \"2018-07-26T15:24:12.000Z\",\n        \"client\": \"mobile\"\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst IdentityManagementServiceLogoutSessionsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/identities/{internalId}/sessions/logout\",\n  method: \"POST\",\n  responses: [{\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst IdentityManagementServiceRevokeIdentityAccessMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/identities/{internalId}/access\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst IdentityManagementServiceSendRequiredActionsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/identities/{internalId}/actions\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst IdentityManagementServiceUpdateIdentityMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/identities/{internalId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst IdentityManagementServiceUpdateIdentityStatusMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/identities/{internalId}/status\",\n  method: \"PUT\",\n  responses: [{\n    status: 202,\n    body: {\n      \"approvalId\": \"37507cbc-3e81-4cc3-a0f6-78ed53d2db22\"\n    }\n  }, {\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst IdentityManagementServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/identities/password\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/identities\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"internalId\": \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n      \"externalId\": \"admin\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict error\",\n      \"errors\": [{\n        \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n        \"key\": \"transactions.api.billingstatus.transaction\",\n        \"context\": {\n          \"billingStatus\": \"BILLED\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/identities\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"identities\": [{\n        \"id\": \"eadaca0b-0b9d-4244-8922-1dead62d00e4\",\n        \"externalId\": \"U0000010\",\n        \"legalEntityId\": \"48b711b8-5adb-4826-a9cc-141b386f8930\",\n        \"fullName\": \"Hasnain Boyd\",\n        \"legalEntityName\": \"Backbase\"\n      }, {\n        \"id\": \"177296ae-3ebb-42f4-80fe-2d79d81cc469\",\n        \"externalId\": \"U0000011\",\n        \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n        \"fullName\": \"Caroline Smyth\",\n        \"legalEntityName\": \"Backbase Cardiff\"\n      }, {\n        \"id\": \"66569096-df06-46b1-9dbb-3e0e73912e5d\",\n        \"externalId\": \"U0000012\",\n        \"legalEntityId\": \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n        \"fullName\": \"Amin Fowler\",\n        \"legalEntityName\": \"Backbase Amsterdam\"\n      }, {\n        \"id\": \"1117a81d-86e2-4a5a-9f79-eafbaa2bcddd\",\n        \"externalId\": \"U0000013\",\n        \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n        \"fullName\": \"Amelia Slater\",\n        \"legalEntityName\": \"Backbase Cardiff\"\n      }, {\n        \"id\": \"55e27e95-216c-40fd-be2e-dd5a100ddcfc\",\n        \"externalId\": \"U0000014\",\n        \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n        \"fullName\": \"Bradlee Lister\",\n        \"legalEntityName\": \"Backbase Cardiff\"\n      }, {\n        \"id\": \"59721bc0-da2d-42f8-9b14-a391d52e039e\",\n        \"externalId\": \"U0000015\",\n        \"legalEntityId\": \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n        \"fullName\": \"Khalil Freeman\",\n        \"legalEntityName\": \"Backbase Amsterdam\"\n      }, {\n        \"id\": \"d5ff6ff6-7d39-430c-a787-75321d2f986e\",\n        \"externalId\": \"U0000016\",\n        \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n        \"fullName\": \"Safwan Archer\",\n        \"legalEntityName\": \"Backbase Cardiff\"\n      }, {\n        \"id\": \"5e41de27-cc3c-4277-9e4f-e9fb6f1da067\",\n        \"externalId\": \"U0000017\",\n        \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n        \"fullName\": \"Miranda Goldsmith\",\n        \"legalEntityName\": \"Backbase Cardiff\"\n      }, {\n        \"id\": \"34be7792-d4a6-44de-bef7-1d051a33dd08\",\n        \"externalId\": \"U0000018\",\n        \"legalEntityId\": \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n        \"fullName\": \"Willard Pham\",\n        \"legalEntityName\": \"Backbase Amsterdam\"\n      }, {\n        \"id\": \"721b5973-543a-4a36-b739-352259486ac5\",\n        \"externalId\": \"U0000019\",\n        \"legalEntityId\": \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n        \"fullName\": \"Braiden Calhoun\",\n        \"legalEntityName\": \"Backbase Amsterdam\"\n      }],\n      \"totalElements\": 10\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/identities/{internalId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"externalId\": \"admin\",\n      \"legalEntityInternalId\": \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n      \"fullName\": \"Mila Example\",\n      \"preferredLanguage\": \"EN\",\n      \"emailAddress\": \"mila@example.com\",\n      \"mobileNumber\": \"07700 900000\",\n      \"status\": \"ENABLED\",\n      \"emailVerified\": true,\n      \"createdDate\": \"2018-02-04T06:35:41.000Z\",\n      \"requiredActions\": [\"VERIFY_EMAIL\", \"UPDATE_PASSWORD\", \"ACCEPT_TERMS_AND_CONDITIONS\"],\n      \"givenName\": \"Mila\",\n      \"familyName\": \"Example\",\n      \"attributes\": {\n        \"bank-id\": \"BANK0001\",\n        \"core-id\": \"milaexample\"\n      }\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/identities/{internalId}/approvals\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"approvalId\": \"37507cbc-3e81-4cc3-a0f6-78ed53d2db22\",\n      \"type\": \"UNLOCK\"\n    }]\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/identities/{internalId}/sessions\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"sessions\": [{\n        \"id\": \"9136e697-6c2f-49f6-9ef7-c67c89e8b825\",\n        \"ipAddress\": \"198.51.100.103\",\n        \"start\": \"2018-07-26T15:21:23.000Z\",\n        \"lastAccess\": \"2018-07-26T15:21:23.000Z\",\n        \"client\": \"web\"\n      }, {\n        \"id\": \"d04ba3e2-9dd5-484d-b756-e6a86562743a\",\n        \"ipAddress\": \"198.51.100.212\",\n        \"start\": \"2018-07-26T15:23:33.000Z\",\n        \"lastAccess\": \"2018-07-26T15:24:12.000Z\",\n        \"client\": \"mobile\"\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/identities/{internalId}/sessions/logout\",\n  method: \"POST\",\n  responses: [{\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/identities/{internalId}/access\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/identities/{internalId}/actions\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/identities/{internalId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/identities/{internalId}/status\",\n  method: \"PUT\",\n  responses: [{\n    status: 202,\n    body: {\n      \"approvalId\": \"37507cbc-3e81-4cc3-a0f6-78ed53d2db22\"\n    }\n  }, {\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\n\nclass UserApprovalsService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new UserConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  approveApproval(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _approvalId = requestParameters[\"approvalId\"];\n\n    if (_approvalId === null || _approvalId === undefined) {\n      throw new Error('Required parameter approvalId was null or undefined when calling approveApproval.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/approvals/${encodeURIComponent(String(_approvalId))}/approve`, null, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  approveApprovalUrl(requestParameters) {\n    const _approvalId = requestParameters[\"approvalId\"];\n\n    if (_approvalId === null || _approvalId === undefined) {\n      throw new Error('Required parameter approvalId was null or undefined when calling approveApproval.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/approvals/${encodeURIComponent(String(_approvalId))}/approve`;\n  }\n\n  getApprovalDetails(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _approvalId = requestParameters[\"approvalId\"];\n\n    if (_approvalId === null || _approvalId === undefined) {\n      throw new Error('Required parameter approvalId was null or undefined when calling getApprovalDetails.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/approvals/${encodeURIComponent(String(_approvalId))}/details`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getApprovalDetailsUrl(requestParameters) {\n    const _approvalId = requestParameters[\"approvalId\"];\n\n    if (_approvalId === null || _approvalId === undefined) {\n      throw new Error('Required parameter approvalId was null or undefined when calling getApprovalDetails.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/approvals/${encodeURIComponent(String(_approvalId))}/details`;\n  }\n\n  rejectApproval(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _approvalId = requestParameters[\"approvalId\"];\n\n    if (_approvalId === null || _approvalId === undefined) {\n      throw new Error('Required parameter approvalId was null or undefined when calling rejectApproval.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/approvals/${encodeURIComponent(String(_approvalId))}/reject`, null, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  rejectApprovalUrl(requestParameters) {\n    const _approvalId = requestParameters[\"approvalId\"];\n\n    if (_approvalId === null || _approvalId === undefined) {\n      throw new Error('Required parameter approvalId was null or undefined when calling rejectApproval.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/approvals/${encodeURIComponent(String(_approvalId))}/reject`;\n  }\n\n}\n\nUserApprovalsService.ɵfac = function UserApprovalsService_Factory(t) {\n  return new (t || UserApprovalsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(USER_BASE_PATH, 8), i0.ɵɵinject(UserConfiguration, 8));\n};\n\nUserApprovalsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: UserApprovalsService,\n  factory: UserApprovalsService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserApprovalsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [USER_BASE_PATH]\n      }]\n    }, {\n      type: UserConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst UserApprovalsServiceApproveApprovalMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/approvals/{approvalId}/approve\",\n  method: \"POST\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserApprovalsServiceGetApprovalDetailsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/approvals/{approvalId}/details\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"changelogDetails\": [{\n        \"type\": \"LOCK_USER\",\n        \"key\": \"User Status\",\n        \"from\": \"Locked\",\n        \"to\": \"Enabled\"\n      }],\n      \"userDetails\": {\n        \"username\": \"john.doe\",\n        \"legalEntityName\": \"Bank 001\",\n        \"fullName\": \"John Doe\",\n        \"emailAddress\": \"john.doe@example.test\",\n        \"mobileNumber\": \"012345 67890\",\n        \"dateCreated\": \"2019-07-11T11:11:11.000Z\"\n      }\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserApprovalsServiceRejectApprovalMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/approvals/{approvalId}/reject\",\n  method: \"POST\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserApprovalsServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/approvals/{approvalId}/approve\",\n  method: \"POST\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/approvals/{approvalId}/details\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"changelogDetails\": [{\n        \"type\": \"LOCK_USER\",\n        \"key\": \"User Status\",\n        \"from\": \"Locked\",\n        \"to\": \"Enabled\"\n      }],\n      \"userDetails\": {\n        \"username\": \"john.doe\",\n        \"legalEntityName\": \"Bank 001\",\n        \"fullName\": \"John Doe\",\n        \"emailAddress\": \"john.doe@example.test\",\n        \"mobileNumber\": \"012345 67890\",\n        \"dateCreated\": \"2019-07-11T11:11:11.000Z\"\n      }\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/approvals/{approvalId}/reject\",\n  method: \"POST\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\n\nclass UserManagementService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new UserConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  checkUserExists(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _externalId = requestParameters[\"externalId\"];\n\n    if (_externalId === null || _externalId === undefined) {\n      throw new Error('Required parameter externalId was null or undefined when calling checkUserExists.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/existing/externalids/${encodeURIComponent(String(_externalId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  checkUserExistsUrl(requestParameters) {\n    const _externalId = requestParameters[\"externalId\"];\n\n    if (_externalId === null || _externalId === undefined) {\n      throw new Error('Required parameter externalId was null or undefined when calling checkUserExists.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/existing/externalids/${encodeURIComponent(String(_externalId))}`;\n  }\n\n  getLegalEntityByExternalId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _externalId = requestParameters[\"externalId\"];\n\n    if (_externalId === null || _externalId === undefined) {\n      throw new Error('Required parameter externalId was null or undefined when calling getLegalEntityByExternalId.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/externalids/${encodeURIComponent(String(_externalId))}/legalentities`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getLegalEntityByExternalIdUrl(requestParameters) {\n    const _externalId = requestParameters[\"externalId\"];\n\n    if (_externalId === null || _externalId === undefined) {\n      throw new Error('Required parameter externalId was null or undefined when calling getLegalEntityByExternalId.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/externalids/${encodeURIComponent(String(_externalId))}/legalentities`;\n  }\n\n  getOwnUser(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/me`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getOwnUserUrl() {\n    return `${this.configuration.basePath}/client-api/v2/users/me`;\n  }\n\n  getUserByExternalId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _externalId = requestParameters[\"externalId\"];\n\n    if (_externalId === null || _externalId === undefined) {\n      throw new Error('Required parameter externalId was null or undefined when calling getUserByExternalId.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/externalids/${encodeURIComponent(String(_externalId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getUserByExternalIdUrl(requestParameters) {\n    const _externalId = requestParameters[\"externalId\"];\n\n    if (_externalId === null || _externalId === undefined) {\n      throw new Error('Required parameter externalId was null or undefined when calling getUserByExternalId.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/externalids/${encodeURIComponent(String(_externalId))}`;\n  }\n\n  getUserById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getUserById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getUserByIdUrl(requestParameters) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getUserById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}`;\n  }\n\n  getUsers(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _entityId = requestParameters[\"entityId\"];\n\n    if (_entityId === null || _entityId === undefined) {\n      throw new Error('Required parameter entityId was null or undefined when calling getUsers.');\n    }\n\n    const _query = requestParameters[\"query\"];\n    const _from = requestParameters[\"from\"];\n    const _cursor = requestParameters[\"cursor\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_entityId !== undefined && _entityId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _entityId, 'entityId');\n    }\n\n    if (_query !== undefined && _query !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_cursor !== undefined && _cursor !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getUsersUrl(requestParameters) {\n    const _entityId = requestParameters[\"entityId\"];\n\n    if (_entityId === null || _entityId === undefined) {\n      throw new Error('Required parameter entityId was null or undefined when calling getUsers.');\n    }\n\n    const _query = requestParameters[\"query\"];\n    const _from = requestParameters[\"from\"];\n    const _cursor = requestParameters[\"cursor\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_entityId !== undefined && _entityId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _entityId, 'entityId');\n    }\n\n    if (_query !== undefined && _query !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_cursor !== undefined && _cursor !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/users${queryString ? `?${queryString}` : ''}`;\n  }\n\n  getUsersByLegalEntityIds(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _getUsersByLegalEntityIdsRequest = requestParameters[\"getUsersByLegalEntityIdsRequest\"];\n\n    if (_getUsersByLegalEntityIdsRequest === null || _getUsersByLegalEntityIdsRequest === undefined) {\n      throw new Error('Required parameter getUsersByLegalEntityIdsRequest was null or undefined when calling getUsersByLegalEntityIds.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/legalentityids`, _getUsersByLegalEntityIdsRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getUsersByLegalEntityIdsUrl(requestParameters) {\n    const _getUsersByLegalEntityIdsRequest = requestParameters[\"getUsersByLegalEntityIdsRequest\"];\n\n    if (_getUsersByLegalEntityIdsRequest === null || _getUsersByLegalEntityIdsRequest === undefined) {\n      throw new Error('Required parameter getUsersByLegalEntityIdsRequest was null or undefined when calling getUsersByLegalEntityIds.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/legalentityids`;\n  }\n\n  updateOwnLanguage(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _updatePreferredLanguage = requestParameters[\"updatePreferredLanguage\"];\n\n    if (_updatePreferredLanguage === null || _updatePreferredLanguage === undefined) {\n      throw new Error('Required parameter updatePreferredLanguage was null or undefined when calling updateOwnLanguage.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/me/preferred-language`, _updatePreferredLanguage, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  updateOwnLanguageUrl(requestParameters) {\n    const _updatePreferredLanguage = requestParameters[\"updatePreferredLanguage\"];\n\n    if (_updatePreferredLanguage === null || _updatePreferredLanguage === undefined) {\n      throw new Error('Required parameter updatePreferredLanguage was null or undefined when calling updateOwnLanguage.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/me/preferred-language`;\n  }\n\n}\n\nUserManagementService.ɵfac = function UserManagementService_Factory(t) {\n  return new (t || UserManagementService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(USER_BASE_PATH, 8), i0.ɵɵinject(UserConfiguration, 8));\n};\n\nUserManagementService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: UserManagementService,\n  factory: UserManagementService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserManagementService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [USER_BASE_PATH]\n      }]\n    }, {\n      type: UserConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst UserManagementServiceCheckUserExistsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/existing/externalids/{externalId}\",\n  method: \"GET\",\n  responses: [{\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserManagementServiceGetLegalEntityByExternalIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/externalids/{externalId}/legalentities\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"a154ebc2-3116-450e-9e26-1612d7cb48fb\",\n      \"externalId\": \"a00f4955-c920-4604-9ec8-4e2cddd447d6\",\n      \"name\": \"Bank Corp.\",\n      \"parentId\": \"8cc493bb-ffca-4b47-ae2f-594cd7282d30\",\n      \"isParent\": true\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserManagementServiceGetOwnUserMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/me\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"externalId\": \"externalBankId1\",\n      \"preferredLanguage\": \"fr-FR\",\n      \"legalEntityId\": \"c2185f7d-a1e8-4f97-990d-cb1cfd0d8f53\",\n      \"legalEntityName\": \"BANK A\",\n      \"id\": \"3da7e7fb-857f-44c2-92aa-80572f6394e2\",\n      \"fullName\": \"Henry Duncan\"\n    }\n  }]\n}]);\nconst UserManagementServiceGetUserByExternalIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/externalids/{externalId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"externalId\": \"U0000010\",\n      \"legalEntityId\": \"c7a382786d514262b75ab9531b749a2b\",\n      \"id\": \"d100c54f79784731843f0db89a2d2957\",\n      \"fullName\": \"David Flores\",\n      \"preferredLanguage\": \"fr-FR\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"preferredLanguage\": \"preferredLanguage\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"legalEntityId\": \"legalEntityId\",\n      \"externalId\": \"externalId\",\n      \"fullName\": \"fullName\",\n      \"id\": \"id\"\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserManagementServiceGetUserByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/{internalId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"externalId\": \"U0000010\",\n      \"legalEntityId\": \"c7a382786d514262b75ab9531b749a2b\",\n      \"id\": \"d100c54f79784731843f0db89a2d2957\",\n      \"fullName\": \"David Flores\",\n      \"preferredLanguage\": \"fr-FR\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"preferredLanguage\": \"preferredLanguage\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"legalEntityId\": \"legalEntityId\",\n      \"externalId\": \"externalId\",\n      \"fullName\": \"fullName\",\n      \"id\": \"id\"\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserManagementServiceGetUsersMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"externalId\": \"U0000010\",\n      \"legalEntityId\": \"c7a382786d514262b75ab9531b749a2b\",\n      \"id\": \"d100c54f79784731843f0db89a2d2957\",\n      \"fullName\": \"David Flores\",\n      \"preferredLanguage\": \"fr-FR\"\n    }, {\n      \"externalId\": \"U0000011\",\n      \"legalEntityId\": \"dbc9e566d44f4cd9a1f09ad3f6729f15\",\n      \"id\": \"fafd8fd6b661402b8411a48050bdc9ad\",\n      \"fullName\": \"Sofia Duncan\"\n    }, {\n      \"externalId\": \"U0000012\",\n      \"legalEntityId\": \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n      \"id\": \"bc9a83bf025449dea4ecc05ce816aebd\",\n      \"fullName\": \"Henry Duncan\"\n    }, {\n      \"externalId\": \"U0000013\",\n      \"legalEntityId\": \"34\",\n      \"id\": \"5360dbba1a254889ba94c22ff01b1c37\",\n      \"fullName\": \"Bart Nyman\"\n    }, {\n      \"externalId\": \"U0000014\",\n      \"legalEntityId\": \"c9fc30f4e5fb492c97ed0a05f926aecc\",\n      \"id\": \"37c1b6b531a34259b4c518eebc0b34a2\",\n      \"fullName\": \"Peter\"\n    }, {\n      \"externalId\": \"U0000015\",\n      \"legalEntityId\": \"0f6d14f40e064deeaee351befd53d3e7\",\n      \"id\": \"b5f499e8f3c94cf39997957ce4cbec59\",\n      \"fullName\": \"Sandra\"\n    }, {\n      \"externalId\": \"U0000016\",\n      \"legalEntityId\": \"6e83bf0d-0d77-4320-b854-4a704e1d50c3\",\n      \"id\": \"b5f499e8f3c94cf39997957ce4cbei84\",\n      \"fullName\": \"Marko Ilievski\",\n      \"preferredLanguage\": \"en-GB\"\n    }, {\n      \"externalId\": \"U0000017\",\n      \"legalEntityId\": \"6e83bf0d-0d77-4320-b854-4a704e1d50c3\",\n      \"id\": \"b5f499e8f3c94cf39997957ce4cbec59t97\",\n      \"fullName\": \"Daniela Petkovska\"\n    }]\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserManagementServiceGetUsersByLegalEntityIdsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/legalentityids\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"users\": [{\n        \"id\": \"001\",\n        \"externalId\": \"U0000010\",\n        \"legalEntityId\": \"012\",\n        \"fullName\": \"Mila\"\n      }, {\n        \"id\": \"002\",\n        \"externalId\": \"U0000011\",\n        \"legalEntityId\": \"023\",\n        \"fullName\": \"Kjiro\"\n      }, {\n        \"id\": \"003\",\n        \"externalId\": \"U0000012\",\n        \"legalEntityId\": \"034\",\n        \"fullName\": \"Daniel\"\n      }],\n      \"totalElements\": 1000\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserManagementServiceUpdateOwnLanguageMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/me/preferred-language\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserManagementServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/existing/externalids/{externalId}\",\n  method: \"GET\",\n  responses: [{\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/externalids/{externalId}/legalentities\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"a154ebc2-3116-450e-9e26-1612d7cb48fb\",\n      \"externalId\": \"a00f4955-c920-4604-9ec8-4e2cddd447d6\",\n      \"name\": \"Bank Corp.\",\n      \"parentId\": \"8cc493bb-ffca-4b47-ae2f-594cd7282d30\",\n      \"isParent\": true\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/me\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"externalId\": \"externalBankId1\",\n      \"preferredLanguage\": \"fr-FR\",\n      \"legalEntityId\": \"c2185f7d-a1e8-4f97-990d-cb1cfd0d8f53\",\n      \"legalEntityName\": \"BANK A\",\n      \"id\": \"3da7e7fb-857f-44c2-92aa-80572f6394e2\",\n      \"fullName\": \"Henry Duncan\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/externalids/{externalId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"externalId\": \"U0000010\",\n      \"legalEntityId\": \"c7a382786d514262b75ab9531b749a2b\",\n      \"id\": \"d100c54f79784731843f0db89a2d2957\",\n      \"fullName\": \"David Flores\",\n      \"preferredLanguage\": \"fr-FR\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"preferredLanguage\": \"preferredLanguage\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"legalEntityId\": \"legalEntityId\",\n      \"externalId\": \"externalId\",\n      \"fullName\": \"fullName\",\n      \"id\": \"id\"\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/{internalId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"externalId\": \"U0000010\",\n      \"legalEntityId\": \"c7a382786d514262b75ab9531b749a2b\",\n      \"id\": \"d100c54f79784731843f0db89a2d2957\",\n      \"fullName\": \"David Flores\",\n      \"preferredLanguage\": \"fr-FR\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"preferredLanguage\": \"preferredLanguage\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"legalEntityId\": \"legalEntityId\",\n      \"externalId\": \"externalId\",\n      \"fullName\": \"fullName\",\n      \"id\": \"id\"\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"externalId\": \"U0000010\",\n      \"legalEntityId\": \"c7a382786d514262b75ab9531b749a2b\",\n      \"id\": \"d100c54f79784731843f0db89a2d2957\",\n      \"fullName\": \"David Flores\",\n      \"preferredLanguage\": \"fr-FR\"\n    }, {\n      \"externalId\": \"U0000011\",\n      \"legalEntityId\": \"dbc9e566d44f4cd9a1f09ad3f6729f15\",\n      \"id\": \"fafd8fd6b661402b8411a48050bdc9ad\",\n      \"fullName\": \"Sofia Duncan\"\n    }, {\n      \"externalId\": \"U0000012\",\n      \"legalEntityId\": \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n      \"id\": \"bc9a83bf025449dea4ecc05ce816aebd\",\n      \"fullName\": \"Henry Duncan\"\n    }, {\n      \"externalId\": \"U0000013\",\n      \"legalEntityId\": \"34\",\n      \"id\": \"5360dbba1a254889ba94c22ff01b1c37\",\n      \"fullName\": \"Bart Nyman\"\n    }, {\n      \"externalId\": \"U0000014\",\n      \"legalEntityId\": \"c9fc30f4e5fb492c97ed0a05f926aecc\",\n      \"id\": \"37c1b6b531a34259b4c518eebc0b34a2\",\n      \"fullName\": \"Peter\"\n    }, {\n      \"externalId\": \"U0000015\",\n      \"legalEntityId\": \"0f6d14f40e064deeaee351befd53d3e7\",\n      \"id\": \"b5f499e8f3c94cf39997957ce4cbec59\",\n      \"fullName\": \"Sandra\"\n    }, {\n      \"externalId\": \"U0000016\",\n      \"legalEntityId\": \"6e83bf0d-0d77-4320-b854-4a704e1d50c3\",\n      \"id\": \"b5f499e8f3c94cf39997957ce4cbei84\",\n      \"fullName\": \"Marko Ilievski\",\n      \"preferredLanguage\": \"en-GB\"\n    }, {\n      \"externalId\": \"U0000017\",\n      \"legalEntityId\": \"6e83bf0d-0d77-4320-b854-4a704e1d50c3\",\n      \"id\": \"b5f499e8f3c94cf39997957ce4cbec59t97\",\n      \"fullName\": \"Daniela Petkovska\"\n    }]\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/legalentityids\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"users\": [{\n        \"id\": \"001\",\n        \"externalId\": \"U0000010\",\n        \"legalEntityId\": \"012\",\n        \"fullName\": \"Mila\"\n      }, {\n        \"id\": \"002\",\n        \"externalId\": \"U0000011\",\n        \"legalEntityId\": \"023\",\n        \"fullName\": \"Kjiro\"\n      }, {\n        \"id\": \"003\",\n        \"externalId\": \"U0000012\",\n        \"legalEntityId\": \"034\",\n        \"fullName\": \"Daniel\"\n      }],\n      \"totalElements\": 1000\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/me/preferred-language\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\n\nclass UserProfileManagementService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new UserConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  addElectronicAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling addElectronicAddress.');\n    }\n\n    const _electronicAddress = requestParameters[\"electronicAddress\"];\n\n    if (_electronicAddress === null || _electronicAddress === undefined) {\n      throw new Error('Required parameter electronicAddress was null or undefined when calling addElectronicAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses`, _electronicAddress, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  addElectronicAddressUrl(requestParameters) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling addElectronicAddress.');\n    }\n\n    const _electronicAddress = requestParameters[\"electronicAddress\"];\n\n    if (_electronicAddress === null || _electronicAddress === undefined) {\n      throw new Error('Required parameter electronicAddress was null or undefined when calling addElectronicAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses`;\n  }\n\n  addOwnElectronicAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _electronicAddress = requestParameters[\"electronicAddress\"];\n\n    if (_electronicAddress === null || _electronicAddress === undefined) {\n      throw new Error('Required parameter electronicAddress was null or undefined when calling addOwnElectronicAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses`, _electronicAddress, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  addOwnElectronicAddressUrl(requestParameters) {\n    const _electronicAddress = requestParameters[\"electronicAddress\"];\n\n    if (_electronicAddress === null || _electronicAddress === undefined) {\n      throw new Error('Required parameter electronicAddress was null or undefined when calling addOwnElectronicAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses`;\n  }\n\n  addOwnPhoneAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _phoneAddress = requestParameters[\"phoneAddress\"];\n\n    if (_phoneAddress === null || _phoneAddress === undefined) {\n      throw new Error('Required parameter phoneAddress was null or undefined when calling addOwnPhoneAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses`, _phoneAddress, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  addOwnPhoneAddressUrl(requestParameters) {\n    const _phoneAddress = requestParameters[\"phoneAddress\"];\n\n    if (_phoneAddress === null || _phoneAddress === undefined) {\n      throw new Error('Required parameter phoneAddress was null or undefined when calling addOwnPhoneAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses`;\n  }\n\n  addOwnPostalAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _postalAddress = requestParameters[\"postalAddress\"];\n\n    if (_postalAddress === null || _postalAddress === undefined) {\n      throw new Error('Required parameter postalAddress was null or undefined when calling addOwnPostalAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses`, _postalAddress, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  addOwnPostalAddressUrl(requestParameters) {\n    const _postalAddress = requestParameters[\"postalAddress\"];\n\n    if (_postalAddress === null || _postalAddress === undefined) {\n      throw new Error('Required parameter postalAddress was null or undefined when calling addOwnPostalAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses`;\n  }\n\n  addPhoneAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling addPhoneAddress.');\n    }\n\n    const _phoneAddress = requestParameters[\"phoneAddress\"];\n\n    if (_phoneAddress === null || _phoneAddress === undefined) {\n      throw new Error('Required parameter phoneAddress was null or undefined when calling addPhoneAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses`, _phoneAddress, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  addPhoneAddressUrl(requestParameters) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling addPhoneAddress.');\n    }\n\n    const _phoneAddress = requestParameters[\"phoneAddress\"];\n\n    if (_phoneAddress === null || _phoneAddress === undefined) {\n      throw new Error('Required parameter phoneAddress was null or undefined when calling addPhoneAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses`;\n  }\n\n  addPostalAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling addPostalAddress.');\n    }\n\n    const _postalAddress = requestParameters[\"postalAddress\"];\n\n    if (_postalAddress === null || _postalAddress === undefined) {\n      throw new Error('Required parameter postalAddress was null or undefined when calling addPostalAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses`, _postalAddress, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  addPostalAddressUrl(requestParameters) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling addPostalAddress.');\n    }\n\n    const _postalAddress = requestParameters[\"postalAddress\"];\n\n    if (_postalAddress === null || _postalAddress === undefined) {\n      throw new Error('Required parameter postalAddress was null or undefined when calling addPostalAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses`;\n  }\n\n  deleteElectronicAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n\n    if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n      throw new Error('Required parameter electronicAddressKey was null or undefined when calling deleteElectronicAddress.');\n    }\n\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling deleteElectronicAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deleteElectronicAddressUrl(requestParameters) {\n    const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n\n    if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n      throw new Error('Required parameter electronicAddressKey was null or undefined when calling deleteElectronicAddress.');\n    }\n\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling deleteElectronicAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`;\n  }\n\n  deleteOwnElectronicAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n\n    if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n      throw new Error('Required parameter electronicAddressKey was null or undefined when calling deleteOwnElectronicAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deleteOwnElectronicAddressUrl(requestParameters) {\n    const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n\n    if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n      throw new Error('Required parameter electronicAddressKey was null or undefined when calling deleteOwnElectronicAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`;\n  }\n\n  deleteOwnPhoneAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n\n    if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n      throw new Error('Required parameter phoneAddressKey was null or undefined when calling deleteOwnPhoneAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deleteOwnPhoneAddressUrl(requestParameters) {\n    const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n\n    if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n      throw new Error('Required parameter phoneAddressKey was null or undefined when calling deleteOwnPhoneAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`;\n  }\n\n  deleteOwnPostalAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n\n    if (_postalAddressKey === null || _postalAddressKey === undefined) {\n      throw new Error('Required parameter postalAddressKey was null or undefined when calling deleteOwnPostalAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deleteOwnPostalAddressUrl(requestParameters) {\n    const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n\n    if (_postalAddressKey === null || _postalAddressKey === undefined) {\n      throw new Error('Required parameter postalAddressKey was null or undefined when calling deleteOwnPostalAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`;\n  }\n\n  deletePhoneAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n\n    if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n      throw new Error('Required parameter phoneAddressKey was null or undefined when calling deletePhoneAddress.');\n    }\n\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling deletePhoneAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deletePhoneAddressUrl(requestParameters) {\n    const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n\n    if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n      throw new Error('Required parameter phoneAddressKey was null or undefined when calling deletePhoneAddress.');\n    }\n\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling deletePhoneAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`;\n  }\n\n  deletePostalAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n\n    if (_postalAddressKey === null || _postalAddressKey === undefined) {\n      throw new Error('Required parameter postalAddressKey was null or undefined when calling deletePostalAddress.');\n    }\n\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling deletePostalAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deletePostalAddressUrl(requestParameters) {\n    const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n\n    if (_postalAddressKey === null || _postalAddressKey === undefined) {\n      throw new Error('Required parameter postalAddressKey was null or undefined when calling deletePostalAddress.');\n    }\n\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling deletePostalAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`;\n  }\n\n  getElectronicAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n\n    if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n      throw new Error('Required parameter electronicAddressKey was null or undefined when calling getElectronicAddress.');\n    }\n\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getElectronicAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getElectronicAddressUrl(requestParameters) {\n    const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n\n    if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n      throw new Error('Required parameter electronicAddressKey was null or undefined when calling getElectronicAddress.');\n    }\n\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getElectronicAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`;\n  }\n\n  getElectronicAddresses(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getElectronicAddresses.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getElectronicAddressesUrl(requestParameters) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getElectronicAddresses.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses`;\n  }\n\n  getOwnElectronicAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n\n    if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n      throw new Error('Required parameter electronicAddressKey was null or undefined when calling getOwnElectronicAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getOwnElectronicAddressUrl(requestParameters) {\n    const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n\n    if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n      throw new Error('Required parameter electronicAddressKey was null or undefined when calling getOwnElectronicAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`;\n  }\n\n  getOwnElectronicAddresses(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getOwnElectronicAddressesUrl() {\n    return `${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses`;\n  }\n\n  getOwnPhoneAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n\n    if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n      throw new Error('Required parameter phoneAddressKey was null or undefined when calling getOwnPhoneAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getOwnPhoneAddressUrl(requestParameters) {\n    const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n\n    if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n      throw new Error('Required parameter phoneAddressKey was null or undefined when calling getOwnPhoneAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`;\n  }\n\n  getOwnPhoneAddresses(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getOwnPhoneAddressesUrl() {\n    return `${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses`;\n  }\n\n  getOwnPostalAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n\n    if (_postalAddressKey === null || _postalAddressKey === undefined) {\n      throw new Error('Required parameter postalAddressKey was null or undefined when calling getOwnPostalAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getOwnPostalAddressUrl(requestParameters) {\n    const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n\n    if (_postalAddressKey === null || _postalAddressKey === undefined) {\n      throw new Error('Required parameter postalAddressKey was null or undefined when calling getOwnPostalAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`;\n  }\n\n  getOwnPostalAddresses(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getOwnPostalAddressesUrl() {\n    return `${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses`;\n  }\n\n  getOwnUserProfile(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/me/profile`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getOwnUserProfileUrl() {\n    return `${this.configuration.basePath}/client-api/v2/users/me/profile`;\n  }\n\n  getPhoneAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n\n    if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n      throw new Error('Required parameter phoneAddressKey was null or undefined when calling getPhoneAddress.');\n    }\n\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getPhoneAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getPhoneAddressUrl(requestParameters) {\n    const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n\n    if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n      throw new Error('Required parameter phoneAddressKey was null or undefined when calling getPhoneAddress.');\n    }\n\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getPhoneAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`;\n  }\n\n  getPhoneAddresses(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getPhoneAddresses.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getPhoneAddressesUrl(requestParameters) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getPhoneAddresses.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses`;\n  }\n\n  getPostalAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n\n    if (_postalAddressKey === null || _postalAddressKey === undefined) {\n      throw new Error('Required parameter postalAddressKey was null or undefined when calling getPostalAddress.');\n    }\n\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getPostalAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getPostalAddressUrl(requestParameters) {\n    const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n\n    if (_postalAddressKey === null || _postalAddressKey === undefined) {\n      throw new Error('Required parameter postalAddressKey was null or undefined when calling getPostalAddress.');\n    }\n\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getPostalAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`;\n  }\n\n  getPostalAddresses(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getPostalAddresses.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getPostalAddressesUrl(requestParameters) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getPostalAddresses.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses`;\n  }\n\n  getUserProfile(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getUserProfile.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getUserProfileUrl(requestParameters) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling getUserProfile.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile`;\n  }\n\n  replaceOwnUserProfileAttributes(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _replaceUserProfileAttributes = requestParameters[\"replaceUserProfileAttributes\"];\n\n    if (_replaceUserProfileAttributes === null || _replaceUserProfileAttributes === undefined) {\n      throw new Error('Required parameter replaceUserProfileAttributes was null or undefined when calling replaceOwnUserProfileAttributes.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/me/profile`, _replaceUserProfileAttributes, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  replaceOwnUserProfileAttributesUrl(requestParameters) {\n    const _replaceUserProfileAttributes = requestParameters[\"replaceUserProfileAttributes\"];\n\n    if (_replaceUserProfileAttributes === null || _replaceUserProfileAttributes === undefined) {\n      throw new Error('Required parameter replaceUserProfileAttributes was null or undefined when calling replaceOwnUserProfileAttributes.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/me/profile`;\n  }\n\n  replaceUserProfileAttributes(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling replaceUserProfileAttributes.');\n    }\n\n    const _replaceUserProfileAttributes = requestParameters[\"replaceUserProfileAttributes\"];\n\n    if (_replaceUserProfileAttributes === null || _replaceUserProfileAttributes === undefined) {\n      throw new Error('Required parameter replaceUserProfileAttributes was null or undefined when calling replaceUserProfileAttributes.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile`, _replaceUserProfileAttributes, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  replaceUserProfileAttributesUrl(requestParameters) {\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling replaceUserProfileAttributes.');\n    }\n\n    const _replaceUserProfileAttributes = requestParameters[\"replaceUserProfileAttributes\"];\n\n    if (_replaceUserProfileAttributes === null || _replaceUserProfileAttributes === undefined) {\n      throw new Error('Required parameter replaceUserProfileAttributes was null or undefined when calling replaceUserProfileAttributes.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile`;\n  }\n\n  updateElectronicAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n\n    if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n      throw new Error('Required parameter electronicAddressKey was null or undefined when calling updateElectronicAddress.');\n    }\n\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling updateElectronicAddress.');\n    }\n\n    const _electronicAddress = requestParameters[\"electronicAddress\"];\n\n    if (_electronicAddress === null || _electronicAddress === undefined) {\n      throw new Error('Required parameter electronicAddress was null or undefined when calling updateElectronicAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`, _electronicAddress, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  updateElectronicAddressUrl(requestParameters) {\n    const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n\n    if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n      throw new Error('Required parameter electronicAddressKey was null or undefined when calling updateElectronicAddress.');\n    }\n\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling updateElectronicAddress.');\n    }\n\n    const _electronicAddress = requestParameters[\"electronicAddress\"];\n\n    if (_electronicAddress === null || _electronicAddress === undefined) {\n      throw new Error('Required parameter electronicAddress was null or undefined when calling updateElectronicAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`;\n  }\n\n  updateOwnElectronicAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n\n    if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n      throw new Error('Required parameter electronicAddressKey was null or undefined when calling updateOwnElectronicAddress.');\n    }\n\n    const _electronicAddress = requestParameters[\"electronicAddress\"];\n\n    if (_electronicAddress === null || _electronicAddress === undefined) {\n      throw new Error('Required parameter electronicAddress was null or undefined when calling updateOwnElectronicAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`, _electronicAddress, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  updateOwnElectronicAddressUrl(requestParameters) {\n    const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n\n    if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n      throw new Error('Required parameter electronicAddressKey was null or undefined when calling updateOwnElectronicAddress.');\n    }\n\n    const _electronicAddress = requestParameters[\"electronicAddress\"];\n\n    if (_electronicAddress === null || _electronicAddress === undefined) {\n      throw new Error('Required parameter electronicAddress was null or undefined when calling updateOwnElectronicAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`;\n  }\n\n  updateOwnPhoneAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n\n    if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n      throw new Error('Required parameter phoneAddressKey was null or undefined when calling updateOwnPhoneAddress.');\n    }\n\n    const _phoneAddress = requestParameters[\"phoneAddress\"];\n\n    if (_phoneAddress === null || _phoneAddress === undefined) {\n      throw new Error('Required parameter phoneAddress was null or undefined when calling updateOwnPhoneAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`, _phoneAddress, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  updateOwnPhoneAddressUrl(requestParameters) {\n    const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n\n    if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n      throw new Error('Required parameter phoneAddressKey was null or undefined when calling updateOwnPhoneAddress.');\n    }\n\n    const _phoneAddress = requestParameters[\"phoneAddress\"];\n\n    if (_phoneAddress === null || _phoneAddress === undefined) {\n      throw new Error('Required parameter phoneAddress was null or undefined when calling updateOwnPhoneAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`;\n  }\n\n  updateOwnPostalAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n\n    if (_postalAddressKey === null || _postalAddressKey === undefined) {\n      throw new Error('Required parameter postalAddressKey was null or undefined when calling updateOwnPostalAddress.');\n    }\n\n    const _postalAddress = requestParameters[\"postalAddress\"];\n\n    if (_postalAddress === null || _postalAddress === undefined) {\n      throw new Error('Required parameter postalAddress was null or undefined when calling updateOwnPostalAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`, _postalAddress, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  updateOwnPostalAddressUrl(requestParameters) {\n    const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n\n    if (_postalAddressKey === null || _postalAddressKey === undefined) {\n      throw new Error('Required parameter postalAddressKey was null or undefined when calling updateOwnPostalAddress.');\n    }\n\n    const _postalAddress = requestParameters[\"postalAddress\"];\n\n    if (_postalAddress === null || _postalAddress === undefined) {\n      throw new Error('Required parameter postalAddress was null or undefined when calling updateOwnPostalAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`;\n  }\n\n  updatePhoneAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n\n    if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n      throw new Error('Required parameter phoneAddressKey was null or undefined when calling updatePhoneAddress.');\n    }\n\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling updatePhoneAddress.');\n    }\n\n    const _phoneAddress = requestParameters[\"phoneAddress\"];\n\n    if (_phoneAddress === null || _phoneAddress === undefined) {\n      throw new Error('Required parameter phoneAddress was null or undefined when calling updatePhoneAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`, _phoneAddress, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  updatePhoneAddressUrl(requestParameters) {\n    const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n\n    if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n      throw new Error('Required parameter phoneAddressKey was null or undefined when calling updatePhoneAddress.');\n    }\n\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling updatePhoneAddress.');\n    }\n\n    const _phoneAddress = requestParameters[\"phoneAddress\"];\n\n    if (_phoneAddress === null || _phoneAddress === undefined) {\n      throw new Error('Required parameter phoneAddress was null or undefined when calling updatePhoneAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`;\n  }\n\n  updatePostalAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n\n    if (_postalAddressKey === null || _postalAddressKey === undefined) {\n      throw new Error('Required parameter postalAddressKey was null or undefined when calling updatePostalAddress.');\n    }\n\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling updatePostalAddress.');\n    }\n\n    const _postalAddress = requestParameters[\"postalAddress\"];\n\n    if (_postalAddress === null || _postalAddress === undefined) {\n      throw new Error('Required parameter postalAddress was null or undefined when calling updatePostalAddress.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`, _postalAddress, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  updatePostalAddressUrl(requestParameters) {\n    const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n\n    if (_postalAddressKey === null || _postalAddressKey === undefined) {\n      throw new Error('Required parameter postalAddressKey was null or undefined when calling updatePostalAddress.');\n    }\n\n    const _internalId = requestParameters[\"internalId\"];\n\n    if (_internalId === null || _internalId === undefined) {\n      throw new Error('Required parameter internalId was null or undefined when calling updatePostalAddress.');\n    }\n\n    const _postalAddress = requestParameters[\"postalAddress\"];\n\n    if (_postalAddress === null || _postalAddress === undefined) {\n      throw new Error('Required parameter postalAddress was null or undefined when calling updatePostalAddress.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`;\n  }\n\n}\n\nUserProfileManagementService.ɵfac = function UserProfileManagementService_Factory(t) {\n  return new (t || UserProfileManagementService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(USER_BASE_PATH, 8), i0.ɵɵinject(UserConfiguration, 8));\n};\n\nUserProfileManagementService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: UserProfileManagementService,\n  factory: UserProfileManagementService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserProfileManagementService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [USER_BASE_PATH]\n      }]\n    }, {\n      type: UserConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst UserProfileManagementServiceAddElectronicAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceAddOwnElectronicAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceAddOwnPhoneAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/me/profile/phone-addresses\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceAddOwnPostalAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/me/profile/postal-addresses\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceAddPhoneAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceAddPostalAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceDeleteElectronicAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceDeleteOwnElectronicAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceDeleteOwnPhoneAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceDeleteOwnPostalAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceDeletePhoneAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceDeletePostalAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceGetElectronicAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n      \"type\": \"E_MAIL\",\n      \"primary\": true,\n      \"address\": \"test@tester.com\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"address\": \"address\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"type\": \"type\",\n      \"key\": \"key\",\n      \"primary\": true\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceGetElectronicAddressesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"electronic-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"E_MAIL\",\n        \"primary\": true,\n        \"address\": \"test@tester.com\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"PERSONAL\",\n        \"primary\": false,\n        \"address\": \"test_personal@tester.com\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceGetOwnElectronicAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n      \"type\": \"E_MAIL\",\n      \"primary\": true,\n      \"address\": \"test@tester.com\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"address\": \"address\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"type\": \"type\",\n      \"key\": \"key\",\n      \"primary\": true\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceGetOwnElectronicAddressesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"electronic-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"E_MAIL\",\n        \"primary\": true,\n        \"address\": \"test@tester.com\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"PERSONAL\",\n        \"primary\": false,\n        \"address\": \"test_personal@tester.com\"\n      }]\n    }\n  }, {\n    status: 200,\n    body: {\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"electronic-addresses\": [{\n        \"address\": \"address\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"type\": \"type\",\n        \"key\": \"key\",\n        \"primary\": true\n      }, {\n        \"address\": \"address\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"type\": \"type\",\n        \"key\": \"key\",\n        \"primary\": true\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceGetOwnPhoneAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n      \"type\": \"LAND_LINE\",\n      \"primary\": false,\n      \"number\": \"02920 671937\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"number\": \"number\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"type\": \"type\",\n      \"key\": \"key\",\n      \"primary\": true\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceGetOwnPhoneAddressesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/me/profile/phone-addresses\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"phone-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"MOBILE\",\n        \"primary\": true,\n        \"number\": \"07717 371949\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"LAND_LINE\",\n        \"primary\": false,\n        \"number\": \"02920 671937\"\n      }]\n    }\n  }, {\n    status: 200,\n    body: {\n      \"phone-addresses\": [{\n        \"number\": \"number\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"type\": \"type\",\n        \"key\": \"key\",\n        \"primary\": true\n      }, {\n        \"number\": \"number\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"type\": \"type\",\n        \"key\": \"key\",\n        \"primary\": true\n      }],\n      \"additions\": {\n        \"key\": \"additions\"\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceGetOwnPostalAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n      \"type\": \"HOME\",\n      \"primary\": true,\n      \"addressLine\": \"2 Hertsmere Rd\",\n      \"streetName\": \"Canary Wharf\",\n      \"townName\": \"London\",\n      \"postalCode\": \"E14 4AB\",\n      \"country\": \"GB\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"country\": \"country\",\n      \"townName\": \"townName\",\n      \"countrySubDivision\": \"countrySubDivision\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"postalCode\": \"postalCode\",\n      \"subDepartment\": \"subDepartment\",\n      \"type\": \"type\",\n      \"addressLine\": \"addressLine\",\n      \"streetName\": \"streetName\",\n      \"buildingNumber\": \"buildingNumber\",\n      \"department\": \"department\",\n      \"key\": \"key\",\n      \"primary\": true\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceGetOwnPostalAddressesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/me/profile/postal-addresses\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"postal-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"BUSINESS\",\n        \"primary\": false,\n        \"addressLine\": \"The Bonded Warehouse\",\n        \"streetName\": \"Atlantic Wharf\",\n        \"townName\": \"Cardiff\",\n        \"postalCode\": \"CF10 4HE\",\n        \"country\": \"GB\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"HOME\",\n        \"primary\": true,\n        \"addressLine\": \"2 Hertsmere Rd\",\n        \"streetName\": \"Canary Wharf\",\n        \"townName\": \"London\",\n        \"postalCode\": \"E14 4AB\"\n      }],\n      \"country\": \"GB\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"postal-addresses\": [{\n        \"country\": \"country\",\n        \"townName\": \"townName\",\n        \"countrySubDivision\": \"countrySubDivision\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"postalCode\": \"postalCode\",\n        \"subDepartment\": \"subDepartment\",\n        \"type\": \"type\",\n        \"addressLine\": \"addressLine\",\n        \"streetName\": \"streetName\",\n        \"buildingNumber\": \"buildingNumber\",\n        \"department\": \"department\",\n        \"key\": \"key\",\n        \"primary\": true\n      }, {\n        \"country\": \"country\",\n        \"townName\": \"townName\",\n        \"countrySubDivision\": \"countrySubDivision\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"postalCode\": \"postalCode\",\n        \"subDepartment\": \"subDepartment\",\n        \"type\": \"type\",\n        \"addressLine\": \"addressLine\",\n        \"streetName\": \"streetName\",\n        \"buildingNumber\": \"buildingNumber\",\n        \"department\": \"department\",\n        \"key\": \"key\",\n        \"primary\": true\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceGetOwnUserProfileMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/me/profile\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"fullName\": \"John Doe\",\n      \"phone-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"MOBILE\",\n        \"primary\": true,\n        \"number\": \"07717 371949\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"LAND_LINE\",\n        \"primary\": false,\n        \"number\": \"02920 671937\"\n      }],\n      \"electronic-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"E_MAIL\",\n        \"primary\": true,\n        \"address\": \"test@tester.com\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"PERSONAL\",\n        \"primary\": false,\n        \"address\": \"test_personal@tester.com\"\n      }],\n      \"postal-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"BUSINESS\",\n        \"primary\": false,\n        \"addressLine\": \"The Bonded Warehouse\",\n        \"streetName\": \"Atlantic Wharf\",\n        \"townName\": \"Cardiff\",\n        \"postalCode\": \"CF10 4HE\",\n        \"country\": \"GB\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"HOME\",\n        \"primary\": true,\n        \"addressLine\": \"2 Hertsmere Rd\",\n        \"streetName\": \"Canary Wharf\",\n        \"townName\": \"London\",\n        \"postalCode\": \"E14 4AB\",\n        \"country\": \"GB\"\n      }]\n    }\n  }, {\n    status: 200,\n    body: {\n      \"phone-addresses\": [{\n        \"number\": \"number\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"type\": \"type\",\n        \"key\": \"key\",\n        \"primary\": true\n      }, {\n        \"number\": \"number\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"type\": \"type\",\n        \"key\": \"key\",\n        \"primary\": true\n      }],\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"electronic-addresses\": [{\n        \"address\": \"address\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"type\": \"type\",\n        \"key\": \"key\",\n        \"primary\": true\n      }, {\n        \"address\": \"address\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"type\": \"type\",\n        \"key\": \"key\",\n        \"primary\": true\n      }],\n      \"fullName\": \"fullName\",\n      \"postal-addresses\": [{\n        \"country\": \"country\",\n        \"townName\": \"townName\",\n        \"countrySubDivision\": \"countrySubDivision\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"postalCode\": \"postalCode\",\n        \"subDepartment\": \"subDepartment\",\n        \"type\": \"type\",\n        \"addressLine\": \"addressLine\",\n        \"streetName\": \"streetName\",\n        \"buildingNumber\": \"buildingNumber\",\n        \"department\": \"department\",\n        \"key\": \"key\",\n        \"primary\": true\n      }, {\n        \"country\": \"country\",\n        \"townName\": \"townName\",\n        \"countrySubDivision\": \"countrySubDivision\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"postalCode\": \"postalCode\",\n        \"subDepartment\": \"subDepartment\",\n        \"type\": \"type\",\n        \"addressLine\": \"addressLine\",\n        \"streetName\": \"streetName\",\n        \"buildingNumber\": \"buildingNumber\",\n        \"department\": \"department\",\n        \"key\": \"key\",\n        \"primary\": true\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceGetPhoneAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n      \"type\": \"LAND_LINE\",\n      \"primary\": false,\n      \"number\": \"02920 671937\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"number\": \"number\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"type\": \"type\",\n      \"key\": \"key\",\n      \"primary\": true\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceGetPhoneAddressesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"phone-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"MOBILE\",\n        \"primary\": true,\n        \"number\": \"07717 371949\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"LAND_LINE\",\n        \"primary\": false,\n        \"number\": \"02920 671937\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceGetPostalAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n      \"type\": \"HOME\",\n      \"primary\": true,\n      \"addressLine\": \"2 Hertsmere Rd\",\n      \"streetName\": \"Canary Wharf\",\n      \"townName\": \"London\",\n      \"postalCode\": \"E14 4AB\",\n      \"country\": \"GB\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"country\": \"country\",\n      \"townName\": \"townName\",\n      \"countrySubDivision\": \"countrySubDivision\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"postalCode\": \"postalCode\",\n      \"subDepartment\": \"subDepartment\",\n      \"type\": \"type\",\n      \"addressLine\": \"addressLine\",\n      \"streetName\": \"streetName\",\n      \"buildingNumber\": \"buildingNumber\",\n      \"department\": \"department\",\n      \"key\": \"key\",\n      \"primary\": true\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceGetPostalAddressesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"postal-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"BUSINESS\",\n        \"primary\": false,\n        \"addressLine\": \"The Bonded Warehouse\",\n        \"streetName\": \"Atlantic Wharf\",\n        \"townName\": \"Cardiff\",\n        \"postalCode\": \"CF10 4HE\",\n        \"country\": \"GB\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"HOME\",\n        \"primary\": true,\n        \"addressLine\": \"2 Hertsmere Rd\",\n        \"streetName\": \"Canary Wharf\",\n        \"townName\": \"London\",\n        \"postalCode\": \"E14 4AB\"\n      }],\n      \"country\": \"GB\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceGetUserProfileMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/{internalId}/profile\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"fullName\": \"John Doe\",\n      \"phone-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"MOBILE\",\n        \"primary\": true,\n        \"number\": \"07717 371949\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"LAND_LINE\",\n        \"primary\": false,\n        \"number\": \"02920 671937\"\n      }],\n      \"electronic-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"E_MAIL\",\n        \"primary\": true,\n        \"address\": \"test@tester.com\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"PERSONAL\",\n        \"primary\": false,\n        \"address\": \"test_personal@tester.com\"\n      }],\n      \"postal-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"BUSINESS\",\n        \"primary\": false,\n        \"addressLine\": \"The Bonded Warehouse\",\n        \"streetName\": \"Atlantic Wharf\",\n        \"townName\": \"Cardiff\",\n        \"postalCode\": \"CF10 4HE\",\n        \"country\": \"GB\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"HOME\",\n        \"primary\": true,\n        \"addressLine\": \"2 Hertsmere Rd\",\n        \"streetName\": \"Canary Wharf\",\n        \"townName\": \"London\",\n        \"postalCode\": \"E14 4AB\",\n        \"country\": \"GB\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceReplaceOwnUserProfileAttributesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/me/profile\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceReplaceUserProfileAttributesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/{internalId}/profile\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceUpdateElectronicAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceUpdateOwnElectronicAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceUpdateOwnPhoneAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceUpdateOwnPostalAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceUpdatePhoneAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceUpdatePostalAddressMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst UserProfileManagementServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/me/profile/phone-addresses\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/me/profile/postal-addresses\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n      \"type\": \"E_MAIL\",\n      \"primary\": true,\n      \"address\": \"test@tester.com\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"address\": \"address\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"type\": \"type\",\n      \"key\": \"key\",\n      \"primary\": true\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"electronic-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"E_MAIL\",\n        \"primary\": true,\n        \"address\": \"test@tester.com\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"PERSONAL\",\n        \"primary\": false,\n        \"address\": \"test_personal@tester.com\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n      \"type\": \"E_MAIL\",\n      \"primary\": true,\n      \"address\": \"test@tester.com\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"address\": \"address\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"type\": \"type\",\n      \"key\": \"key\",\n      \"primary\": true\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"electronic-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"E_MAIL\",\n        \"primary\": true,\n        \"address\": \"test@tester.com\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"PERSONAL\",\n        \"primary\": false,\n        \"address\": \"test_personal@tester.com\"\n      }]\n    }\n  }, {\n    status: 200,\n    body: {\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"electronic-addresses\": [{\n        \"address\": \"address\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"type\": \"type\",\n        \"key\": \"key\",\n        \"primary\": true\n      }, {\n        \"address\": \"address\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"type\": \"type\",\n        \"key\": \"key\",\n        \"primary\": true\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n      \"type\": \"LAND_LINE\",\n      \"primary\": false,\n      \"number\": \"02920 671937\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"number\": \"number\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"type\": \"type\",\n      \"key\": \"key\",\n      \"primary\": true\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/me/profile/phone-addresses\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"phone-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"MOBILE\",\n        \"primary\": true,\n        \"number\": \"07717 371949\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"LAND_LINE\",\n        \"primary\": false,\n        \"number\": \"02920 671937\"\n      }]\n    }\n  }, {\n    status: 200,\n    body: {\n      \"phone-addresses\": [{\n        \"number\": \"number\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"type\": \"type\",\n        \"key\": \"key\",\n        \"primary\": true\n      }, {\n        \"number\": \"number\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"type\": \"type\",\n        \"key\": \"key\",\n        \"primary\": true\n      }],\n      \"additions\": {\n        \"key\": \"additions\"\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n      \"type\": \"HOME\",\n      \"primary\": true,\n      \"addressLine\": \"2 Hertsmere Rd\",\n      \"streetName\": \"Canary Wharf\",\n      \"townName\": \"London\",\n      \"postalCode\": \"E14 4AB\",\n      \"country\": \"GB\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"country\": \"country\",\n      \"townName\": \"townName\",\n      \"countrySubDivision\": \"countrySubDivision\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"postalCode\": \"postalCode\",\n      \"subDepartment\": \"subDepartment\",\n      \"type\": \"type\",\n      \"addressLine\": \"addressLine\",\n      \"streetName\": \"streetName\",\n      \"buildingNumber\": \"buildingNumber\",\n      \"department\": \"department\",\n      \"key\": \"key\",\n      \"primary\": true\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/me/profile/postal-addresses\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"postal-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"BUSINESS\",\n        \"primary\": false,\n        \"addressLine\": \"The Bonded Warehouse\",\n        \"streetName\": \"Atlantic Wharf\",\n        \"townName\": \"Cardiff\",\n        \"postalCode\": \"CF10 4HE\",\n        \"country\": \"GB\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"HOME\",\n        \"primary\": true,\n        \"addressLine\": \"2 Hertsmere Rd\",\n        \"streetName\": \"Canary Wharf\",\n        \"townName\": \"London\",\n        \"postalCode\": \"E14 4AB\"\n      }],\n      \"country\": \"GB\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"postal-addresses\": [{\n        \"country\": \"country\",\n        \"townName\": \"townName\",\n        \"countrySubDivision\": \"countrySubDivision\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"postalCode\": \"postalCode\",\n        \"subDepartment\": \"subDepartment\",\n        \"type\": \"type\",\n        \"addressLine\": \"addressLine\",\n        \"streetName\": \"streetName\",\n        \"buildingNumber\": \"buildingNumber\",\n        \"department\": \"department\",\n        \"key\": \"key\",\n        \"primary\": true\n      }, {\n        \"country\": \"country\",\n        \"townName\": \"townName\",\n        \"countrySubDivision\": \"countrySubDivision\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"postalCode\": \"postalCode\",\n        \"subDepartment\": \"subDepartment\",\n        \"type\": \"type\",\n        \"addressLine\": \"addressLine\",\n        \"streetName\": \"streetName\",\n        \"buildingNumber\": \"buildingNumber\",\n        \"department\": \"department\",\n        \"key\": \"key\",\n        \"primary\": true\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/me/profile\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"fullName\": \"John Doe\",\n      \"phone-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"MOBILE\",\n        \"primary\": true,\n        \"number\": \"07717 371949\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"LAND_LINE\",\n        \"primary\": false,\n        \"number\": \"02920 671937\"\n      }],\n      \"electronic-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"E_MAIL\",\n        \"primary\": true,\n        \"address\": \"test@tester.com\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"PERSONAL\",\n        \"primary\": false,\n        \"address\": \"test_personal@tester.com\"\n      }],\n      \"postal-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"BUSINESS\",\n        \"primary\": false,\n        \"addressLine\": \"The Bonded Warehouse\",\n        \"streetName\": \"Atlantic Wharf\",\n        \"townName\": \"Cardiff\",\n        \"postalCode\": \"CF10 4HE\",\n        \"country\": \"GB\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"HOME\",\n        \"primary\": true,\n        \"addressLine\": \"2 Hertsmere Rd\",\n        \"streetName\": \"Canary Wharf\",\n        \"townName\": \"London\",\n        \"postalCode\": \"E14 4AB\",\n        \"country\": \"GB\"\n      }]\n    }\n  }, {\n    status: 200,\n    body: {\n      \"phone-addresses\": [{\n        \"number\": \"number\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"type\": \"type\",\n        \"key\": \"key\",\n        \"primary\": true\n      }, {\n        \"number\": \"number\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"type\": \"type\",\n        \"key\": \"key\",\n        \"primary\": true\n      }],\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"electronic-addresses\": [{\n        \"address\": \"address\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"type\": \"type\",\n        \"key\": \"key\",\n        \"primary\": true\n      }, {\n        \"address\": \"address\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"type\": \"type\",\n        \"key\": \"key\",\n        \"primary\": true\n      }],\n      \"fullName\": \"fullName\",\n      \"postal-addresses\": [{\n        \"country\": \"country\",\n        \"townName\": \"townName\",\n        \"countrySubDivision\": \"countrySubDivision\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"postalCode\": \"postalCode\",\n        \"subDepartment\": \"subDepartment\",\n        \"type\": \"type\",\n        \"addressLine\": \"addressLine\",\n        \"streetName\": \"streetName\",\n        \"buildingNumber\": \"buildingNumber\",\n        \"department\": \"department\",\n        \"key\": \"key\",\n        \"primary\": true\n      }, {\n        \"country\": \"country\",\n        \"townName\": \"townName\",\n        \"countrySubDivision\": \"countrySubDivision\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"postalCode\": \"postalCode\",\n        \"subDepartment\": \"subDepartment\",\n        \"type\": \"type\",\n        \"addressLine\": \"addressLine\",\n        \"streetName\": \"streetName\",\n        \"buildingNumber\": \"buildingNumber\",\n        \"department\": \"department\",\n        \"key\": \"key\",\n        \"primary\": true\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n      \"type\": \"LAND_LINE\",\n      \"primary\": false,\n      \"number\": \"02920 671937\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"number\": \"number\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"type\": \"type\",\n      \"key\": \"key\",\n      \"primary\": true\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"phone-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"MOBILE\",\n        \"primary\": true,\n        \"number\": \"07717 371949\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"LAND_LINE\",\n        \"primary\": false,\n        \"number\": \"02920 671937\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n      \"type\": \"HOME\",\n      \"primary\": true,\n      \"addressLine\": \"2 Hertsmere Rd\",\n      \"streetName\": \"Canary Wharf\",\n      \"townName\": \"London\",\n      \"postalCode\": \"E14 4AB\",\n      \"country\": \"GB\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"country\": \"country\",\n      \"townName\": \"townName\",\n      \"countrySubDivision\": \"countrySubDivision\",\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"postalCode\": \"postalCode\",\n      \"subDepartment\": \"subDepartment\",\n      \"type\": \"type\",\n      \"addressLine\": \"addressLine\",\n      \"streetName\": \"streetName\",\n      \"buildingNumber\": \"buildingNumber\",\n      \"department\": \"department\",\n      \"key\": \"key\",\n      \"primary\": true\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"postal-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"BUSINESS\",\n        \"primary\": false,\n        \"addressLine\": \"The Bonded Warehouse\",\n        \"streetName\": \"Atlantic Wharf\",\n        \"townName\": \"Cardiff\",\n        \"postalCode\": \"CF10 4HE\",\n        \"country\": \"GB\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"HOME\",\n        \"primary\": true,\n        \"addressLine\": \"2 Hertsmere Rd\",\n        \"streetName\": \"Canary Wharf\",\n        \"townName\": \"London\",\n        \"postalCode\": \"E14 4AB\"\n      }],\n      \"country\": \"GB\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/{internalId}/profile\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"fullName\": \"John Doe\",\n      \"phone-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"MOBILE\",\n        \"primary\": true,\n        \"number\": \"07717 371949\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"LAND_LINE\",\n        \"primary\": false,\n        \"number\": \"02920 671937\"\n      }],\n      \"electronic-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"E_MAIL\",\n        \"primary\": true,\n        \"address\": \"test@tester.com\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"PERSONAL\",\n        \"primary\": false,\n        \"address\": \"test_personal@tester.com\"\n      }],\n      \"postal-addresses\": [{\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n        \"type\": \"BUSINESS\",\n        \"primary\": false,\n        \"addressLine\": \"The Bonded Warehouse\",\n        \"streetName\": \"Atlantic Wharf\",\n        \"townName\": \"Cardiff\",\n        \"postalCode\": \"CF10 4HE\",\n        \"country\": \"GB\"\n      }, {\n        \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n        \"type\": \"HOME\",\n        \"primary\": true,\n        \"addressLine\": \"2 Hertsmere Rd\",\n        \"streetName\": \"Canary Wharf\",\n        \"townName\": \"London\",\n        \"postalCode\": \"E14 4AB\",\n        \"country\": \"GB\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/me/profile\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/{internalId}/profile\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nexport { COLLECTION_FORMATS, CONFIG_TOKEN, GetIdentity, GetPendingApproval, IdentityManagementService, IdentityManagementServiceChangePasswordMocksProvider, IdentityManagementServiceCreateIdentityMocksProvider, IdentityManagementServiceGetIdentitiesMocksProvider, IdentityManagementServiceGetIdentityMocksProvider, IdentityManagementServiceGetIdentityPendingApprovalsMocksProvider, IdentityManagementServiceGetSessionsMocksProvider, IdentityManagementServiceLogoutSessionsMocksProvider, IdentityManagementServiceMocksProvider, IdentityManagementServiceRevokeIdentityAccessMocksProvider, IdentityManagementServiceSendRequiredActionsMocksProvider, IdentityManagementServiceUpdateIdentityMocksProvider, IdentityManagementServiceUpdateIdentityStatusMocksProvider, USER_BASE_PATH, UserApiModule, UserApprovalsService, UserApprovalsServiceApproveApprovalMocksProvider, UserApprovalsServiceGetApprovalDetailsMocksProvider, UserApprovalsServiceMocksProvider, UserApprovalsServiceRejectApprovalMocksProvider, UserConfiguration, UserManagementService, UserManagementServiceCheckUserExistsMocksProvider, UserManagementServiceGetLegalEntityByExternalIdMocksProvider, UserManagementServiceGetOwnUserMocksProvider, UserManagementServiceGetUserByExternalIdMocksProvider, UserManagementServiceGetUserByIdMocksProvider, UserManagementServiceGetUsersByLegalEntityIdsMocksProvider, UserManagementServiceGetUsersMocksProvider, UserManagementServiceMocksProvider, UserManagementServiceUpdateOwnLanguageMocksProvider, UserProfileManagementService, UserProfileManagementServiceAddElectronicAddressMocksProvider, UserProfileManagementServiceAddOwnElectronicAddressMocksProvider, UserProfileManagementServiceAddOwnPhoneAddressMocksProvider, UserProfileManagementServiceAddOwnPostalAddressMocksProvider, UserProfileManagementServiceAddPhoneAddressMocksProvider, UserProfileManagementServiceAddPostalAddressMocksProvider, UserProfileManagementServiceDeleteElectronicAddressMocksProvider, UserProfileManagementServiceDeleteOwnElectronicAddressMocksProvider, UserProfileManagementServiceDeleteOwnPhoneAddressMocksProvider, UserProfileManagementServiceDeleteOwnPostalAddressMocksProvider, UserProfileManagementServiceDeletePhoneAddressMocksProvider, UserProfileManagementServiceDeletePostalAddressMocksProvider, UserProfileManagementServiceGetElectronicAddressMocksProvider, UserProfileManagementServiceGetElectronicAddressesMocksProvider, UserProfileManagementServiceGetOwnElectronicAddressMocksProvider, UserProfileManagementServiceGetOwnElectronicAddressesMocksProvider, UserProfileManagementServiceGetOwnPhoneAddressMocksProvider, UserProfileManagementServiceGetOwnPhoneAddressesMocksProvider, UserProfileManagementServiceGetOwnPostalAddressMocksProvider, UserProfileManagementServiceGetOwnPostalAddressesMocksProvider, UserProfileManagementServiceGetOwnUserProfileMocksProvider, UserProfileManagementServiceGetPhoneAddressMocksProvider, UserProfileManagementServiceGetPhoneAddressesMocksProvider, UserProfileManagementServiceGetPostalAddressMocksProvider, UserProfileManagementServiceGetPostalAddressesMocksProvider, UserProfileManagementServiceGetUserProfileMocksProvider, UserProfileManagementServiceMocksProvider, UserProfileManagementServiceReplaceOwnUserProfileAttributesMocksProvider, UserProfileManagementServiceReplaceUserProfileAttributesMocksProvider, UserProfileManagementServiceUpdateElectronicAddressMocksProvider, UserProfileManagementServiceUpdateOwnElectronicAddressMocksProvider, UserProfileManagementServiceUpdateOwnPhoneAddressMocksProvider, UserProfileManagementServiceUpdateOwnPostalAddressMocksProvider, UserProfileManagementServiceUpdatePhoneAddressMocksProvider, UserProfileManagementServiceUpdatePostalAddressMocksProvider };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/user-http-ang/fesm2015/backbase-user-http-ang.js"],"names":["i0","InjectionToken","NgModule","Optional","SkipSelf","Injectable","Inject","i1","HttpHeaders","HttpParams","i2","createMocks","GetIdentity","StatusEnum","ENABLED","DISABLED","TEMPORARILYLOCKED","DORMANT","INACTIVE","ACCESSREVOKED","GetPendingApproval","TypeEnum","UNLOCK","USER_BASE_PATH","COLLECTION_FORMATS","UserConfiguration","constructor","configurationParameters","apiKeys","username","password","accessToken","basePath","withCredentials","encoder","credentials","selectHeaderContentType","contentTypes","length","undefined","type","find","x","isJsonMime","selectHeaderAccept","accepts","mime","jsonMime","RegExp","test","toLowerCase","lookupCredential","key","value","CONFIG_TOKEN","UserApiModule","parentModule","http","dataModulesManager","config","Error","setModuleConfig","apiRoot","servicePath","headers","forRoot","configurationFactory","ngModule","providers","provide","useFactory","ɵfac","HttpClient","DataModulesManager","ɵmod","ɵinj","args","imports","declarations","exports","decorators","CustomHttpParameterCodec","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeURIComponent","decodeValue","IdentityManagementService","httpClient","configuration","defaultHeaders","addToHttpParams","httpParams","Date","addToHttpParamsRecursive","Array","isArray","forEach","elem","append","toISOString","substr","Object","keys","changePassword","requestParameters","observe","reportProgress","options","_changePasswordRequest","httpHeaderAcceptSelected","httpHeaderAccept","httpHeaderAccepts","set","consumes","httpContentTypeSelected","responseType","startsWith","post","changePasswordUrl","createIdentity","_createIdentityRequest","createIdentityUrl","getIdentities","_externalId","_from","_cursor","_size","_legalEntityName","queryParameters","get","params","getIdentitiesUrl","queryString","toString","getIdentity","_internalId","String","getIdentityUrl","getIdentityPendingApprovals","getIdentityPendingApprovalsUrl","getSessions","getSessionsUrl","logoutSessions","_identityLogoutRequest","logoutSessionsUrl","revokeIdentityAccess","_revokeIdentityAccessRequest","put","revokeIdentityAccessUrl","sendRequiredActions","_identityRequiredActionsRequest","sendRequiredActionsUrl","updateIdentity","_updateIdentityRequest","updateIdentityUrl","updateIdentityStatus","_updateIdentityStatusRequest","updateIdentityStatusUrl","ɵprov","providedIn","IdentityManagementServiceChangePasswordMocksProvider","urlPattern","method","responses","status","body","IdentityManagementServiceCreateIdentityMocksProvider","IdentityManagementServiceGetIdentitiesMocksProvider","IdentityManagementServiceGetIdentityMocksProvider","IdentityManagementServiceGetIdentityPendingApprovalsMocksProvider","IdentityManagementServiceGetSessionsMocksProvider","IdentityManagementServiceLogoutSessionsMocksProvider","IdentityManagementServiceRevokeIdentityAccessMocksProvider","IdentityManagementServiceSendRequiredActionsMocksProvider","IdentityManagementServiceUpdateIdentityMocksProvider","IdentityManagementServiceUpdateIdentityStatusMocksProvider","IdentityManagementServiceMocksProvider","UserApprovalsService","approveApproval","_approvalId","approveApprovalUrl","getApprovalDetails","getApprovalDetailsUrl","rejectApproval","rejectApprovalUrl","UserApprovalsServiceApproveApprovalMocksProvider","UserApprovalsServiceGetApprovalDetailsMocksProvider","UserApprovalsServiceRejectApprovalMocksProvider","UserApprovalsServiceMocksProvider","UserManagementService","checkUserExists","checkUserExistsUrl","getLegalEntityByExternalId","getLegalEntityByExternalIdUrl","getOwnUser","getOwnUserUrl","getUserByExternalId","getUserByExternalIdUrl","getUserById","getUserByIdUrl","getUsers","_entityId","_query","getUsersUrl","getUsersByLegalEntityIds","_getUsersByLegalEntityIdsRequest","getUsersByLegalEntityIdsUrl","updateOwnLanguage","_updatePreferredLanguage","updateOwnLanguageUrl","UserManagementServiceCheckUserExistsMocksProvider","UserManagementServiceGetLegalEntityByExternalIdMocksProvider","UserManagementServiceGetOwnUserMocksProvider","UserManagementServiceGetUserByExternalIdMocksProvider","UserManagementServiceGetUserByIdMocksProvider","UserManagementServiceGetUsersMocksProvider","UserManagementServiceGetUsersByLegalEntityIdsMocksProvider","UserManagementServiceUpdateOwnLanguageMocksProvider","UserManagementServiceMocksProvider","UserProfileManagementService","addElectronicAddress","_electronicAddress","addElectronicAddressUrl","addOwnElectronicAddress","addOwnElectronicAddressUrl","addOwnPhoneAddress","_phoneAddress","addOwnPhoneAddressUrl","addOwnPostalAddress","_postalAddress","addOwnPostalAddressUrl","addPhoneAddress","addPhoneAddressUrl","addPostalAddress","addPostalAddressUrl","deleteElectronicAddress","_electronicAddressKey","delete","deleteElectronicAddressUrl","deleteOwnElectronicAddress","deleteOwnElectronicAddressUrl","deleteOwnPhoneAddress","_phoneAddressKey","deleteOwnPhoneAddressUrl","deleteOwnPostalAddress","_postalAddressKey","deleteOwnPostalAddressUrl","deletePhoneAddress","deletePhoneAddressUrl","deletePostalAddress","deletePostalAddressUrl","getElectronicAddress","getElectronicAddressUrl","getElectronicAddresses","getElectronicAddressesUrl","getOwnElectronicAddress","getOwnElectronicAddressUrl","getOwnElectronicAddresses","getOwnElectronicAddressesUrl","getOwnPhoneAddress","getOwnPhoneAddressUrl","getOwnPhoneAddresses","getOwnPhoneAddressesUrl","getOwnPostalAddress","getOwnPostalAddressUrl","getOwnPostalAddresses","getOwnPostalAddressesUrl","getOwnUserProfile","getOwnUserProfileUrl","getPhoneAddress","getPhoneAddressUrl","getPhoneAddresses","getPhoneAddressesUrl","getPostalAddress","getPostalAddressUrl","getPostalAddresses","getPostalAddressesUrl","getUserProfile","getUserProfileUrl","replaceOwnUserProfileAttributes","_replaceUserProfileAttributes","replaceOwnUserProfileAttributesUrl","replaceUserProfileAttributes","replaceUserProfileAttributesUrl","updateElectronicAddress","updateElectronicAddressUrl","updateOwnElectronicAddress","updateOwnElectronicAddressUrl","updateOwnPhoneAddress","updateOwnPhoneAddressUrl","updateOwnPostalAddress","updateOwnPostalAddressUrl","updatePhoneAddress","updatePhoneAddressUrl","updatePostalAddress","updatePostalAddressUrl","UserProfileManagementServiceAddElectronicAddressMocksProvider","UserProfileManagementServiceAddOwnElectronicAddressMocksProvider","UserProfileManagementServiceAddOwnPhoneAddressMocksProvider","UserProfileManagementServiceAddOwnPostalAddressMocksProvider","UserProfileManagementServiceAddPhoneAddressMocksProvider","UserProfileManagementServiceAddPostalAddressMocksProvider","UserProfileManagementServiceDeleteElectronicAddressMocksProvider","UserProfileManagementServiceDeleteOwnElectronicAddressMocksProvider","UserProfileManagementServiceDeleteOwnPhoneAddressMocksProvider","UserProfileManagementServiceDeleteOwnPostalAddressMocksProvider","UserProfileManagementServiceDeletePhoneAddressMocksProvider","UserProfileManagementServiceDeletePostalAddressMocksProvider","UserProfileManagementServiceGetElectronicAddressMocksProvider","UserProfileManagementServiceGetElectronicAddressesMocksProvider","UserProfileManagementServiceGetOwnElectronicAddressMocksProvider","UserProfileManagementServiceGetOwnElectronicAddressesMocksProvider","UserProfileManagementServiceGetOwnPhoneAddressMocksProvider","UserProfileManagementServiceGetOwnPhoneAddressesMocksProvider","UserProfileManagementServiceGetOwnPostalAddressMocksProvider","UserProfileManagementServiceGetOwnPostalAddressesMocksProvider","UserProfileManagementServiceGetOwnUserProfileMocksProvider","UserProfileManagementServiceGetPhoneAddressMocksProvider","UserProfileManagementServiceGetPhoneAddressesMocksProvider","UserProfileManagementServiceGetPostalAddressMocksProvider","UserProfileManagementServiceGetPostalAddressesMocksProvider","UserProfileManagementServiceGetUserProfileMocksProvider","UserProfileManagementServiceReplaceOwnUserProfileAttributesMocksProvider","UserProfileManagementServiceReplaceUserProfileAttributesMocksProvider","UserProfileManagementServiceUpdateElectronicAddressMocksProvider","UserProfileManagementServiceUpdateOwnElectronicAddressMocksProvider","UserProfileManagementServiceUpdateOwnPhoneAddressMocksProvider","UserProfileManagementServiceUpdateOwnPostalAddressMocksProvider","UserProfileManagementServiceUpdatePhoneAddressMocksProvider","UserProfileManagementServiceUpdatePostalAddressMocksProvider","UserProfileManagementServiceMocksProvider"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\n\nvar GetIdentity;\n(function (GetIdentity) {\n    GetIdentity.StatusEnum = {\n        ENABLED: 'ENABLED',\n        DISABLED: 'DISABLED',\n        TEMPORARILYLOCKED: 'TEMPORARILY_LOCKED',\n        DORMANT: 'DORMANT',\n        INACTIVE: 'INACTIVE',\n        ACCESSREVOKED: 'ACCESS_REVOKED'\n    };\n})(GetIdentity || (GetIdentity = {}));\n\nvar GetPendingApproval;\n(function (GetPendingApproval) {\n    GetPendingApproval.TypeEnum = {\n        UNLOCK: 'UNLOCK'\n    };\n})(GetPendingApproval || (GetPendingApproval = {}));\n\nconst USER_BASE_PATH = new InjectionToken('USER_BASE_PATH');\nconst COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n};\n\nclass UserConfiguration {\n    constructor(configurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n    selectHeaderContentType(contentTypes) {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n        const type = contentTypes.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n    selectHeaderAccept(accepts) {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n        const type = accepts.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n    lookupCredential(key) {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\nconst CONFIG_TOKEN = new InjectionToken('api-data-module UserConfiguration');\n\nclass UserApiModule {\n    constructor(parentModule, http, dataModulesManager, config) {\n        if (parentModule) {\n            throw new Error('UserApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n                'See also https://github.com/angular/angular/issues/20575');\n        }\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n    static forRoot(configurationFactory) {\n        return {\n            ngModule: UserApiModule,\n            providers: [{ provide: UserConfiguration, useFactory: configurationFactory }]\n        };\n    }\n}\nUserApiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: UserApiModule, deps: [{ token: UserApiModule, optional: true, skipSelf: true }, { token: i1.HttpClient, optional: true }, { token: i2.DataModulesManager, optional: true }, { token: UserConfiguration }], target: i0.ɵɵFactoryTarget.NgModule });\nUserApiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: UserApiModule });\nUserApiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: UserApiModule, providers: [], imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: UserApiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [],\n                    exports: [],\n                    providers: []\n                }]\n        }], ctorParameters: function () { return [{ type: UserApiModule, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DataModulesManager, decorators: [{\n                    type: Optional\n                }] }, { type: UserConfiguration }]; } });\n\nclass CustomHttpParameterCodec {\n    encodeKey(k) {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v) {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k) {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v) {\n        return decodeURIComponent(v);\n    }\n}\n\nclass IdentityManagementService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new UserConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    changePassword(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _changePasswordRequest = requestParameters[\"changePasswordRequest\"];\n        if (_changePasswordRequest === null || _changePasswordRequest === undefined) {\n            throw new Error('Required parameter changePasswordRequest was null or undefined when calling changePassword.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/identities/password`, _changePasswordRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    changePasswordUrl(requestParameters) {\n        const _changePasswordRequest = requestParameters[\"changePasswordRequest\"];\n        if (_changePasswordRequest === null || _changePasswordRequest === undefined) {\n            throw new Error('Required parameter changePasswordRequest was null or undefined when calling changePassword.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities/password`;\n    }\n    createIdentity(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _createIdentityRequest = requestParameters[\"createIdentityRequest\"];\n        if (_createIdentityRequest === null || _createIdentityRequest === undefined) {\n            throw new Error('Required parameter createIdentityRequest was null or undefined when calling createIdentity.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/identities`, _createIdentityRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    createIdentityUrl(requestParameters) {\n        const _createIdentityRequest = requestParameters[\"createIdentityRequest\"];\n        if (_createIdentityRequest === null || _createIdentityRequest === undefined) {\n            throw new Error('Required parameter createIdentityRequest was null or undefined when calling createIdentity.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities`;\n    }\n    getIdentities(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _externalId = requestParameters[\"externalId\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        const _legalEntityName = requestParameters[\"legalEntityName\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_externalId !== undefined && _externalId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _externalId, 'externalId');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        if (_legalEntityName !== undefined && _legalEntityName !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _legalEntityName, 'legalEntityName');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/identities`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getIdentitiesUrl(requestParameters) {\n        const _externalId = requestParameters[\"externalId\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        const _legalEntityName = requestParameters[\"legalEntityName\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_externalId !== undefined && _externalId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _externalId, 'externalId');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        if (_legalEntityName !== undefined && _legalEntityName !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _legalEntityName, 'legalEntityName');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/users/identities${queryString ? `?${queryString}` : ''}`;\n    }\n    getIdentity(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getIdentity.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getIdentityUrl(requestParameters) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getIdentity.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}`;\n    }\n    getIdentityPendingApprovals(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getIdentityPendingApprovals.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/approvals`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getIdentityPendingApprovalsUrl(requestParameters) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getIdentityPendingApprovals.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/approvals`;\n    }\n    getSessions(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getSessions.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/sessions`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getSessionsUrl(requestParameters) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getSessions.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/sessions`;\n    }\n    logoutSessions(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling logoutSessions.');\n        }\n        const _identityLogoutRequest = requestParameters[\"identityLogoutRequest\"];\n        if (_identityLogoutRequest === null || _identityLogoutRequest === undefined) {\n            throw new Error('Required parameter identityLogoutRequest was null or undefined when calling logoutSessions.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/sessions/logout`, _identityLogoutRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    logoutSessionsUrl(requestParameters) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling logoutSessions.');\n        }\n        const _identityLogoutRequest = requestParameters[\"identityLogoutRequest\"];\n        if (_identityLogoutRequest === null || _identityLogoutRequest === undefined) {\n            throw new Error('Required parameter identityLogoutRequest was null or undefined when calling logoutSessions.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/sessions/logout`;\n    }\n    revokeIdentityAccess(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling revokeIdentityAccess.');\n        }\n        const _revokeIdentityAccessRequest = requestParameters[\"revokeIdentityAccessRequest\"];\n        if (_revokeIdentityAccessRequest === null || _revokeIdentityAccessRequest === undefined) {\n            throw new Error('Required parameter revokeIdentityAccessRequest was null or undefined when calling revokeIdentityAccess.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/access`, _revokeIdentityAccessRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    revokeIdentityAccessUrl(requestParameters) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling revokeIdentityAccess.');\n        }\n        const _revokeIdentityAccessRequest = requestParameters[\"revokeIdentityAccessRequest\"];\n        if (_revokeIdentityAccessRequest === null || _revokeIdentityAccessRequest === undefined) {\n            throw new Error('Required parameter revokeIdentityAccessRequest was null or undefined when calling revokeIdentityAccess.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/access`;\n    }\n    sendRequiredActions(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling sendRequiredActions.');\n        }\n        const _identityRequiredActionsRequest = requestParameters[\"identityRequiredActionsRequest\"];\n        if (_identityRequiredActionsRequest === null || _identityRequiredActionsRequest === undefined) {\n            throw new Error('Required parameter identityRequiredActionsRequest was null or undefined when calling sendRequiredActions.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/actions`, _identityRequiredActionsRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    sendRequiredActionsUrl(requestParameters) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling sendRequiredActions.');\n        }\n        const _identityRequiredActionsRequest = requestParameters[\"identityRequiredActionsRequest\"];\n        if (_identityRequiredActionsRequest === null || _identityRequiredActionsRequest === undefined) {\n            throw new Error('Required parameter identityRequiredActionsRequest was null or undefined when calling sendRequiredActions.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/actions`;\n    }\n    updateIdentity(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updateIdentity.');\n        }\n        const _updateIdentityRequest = requestParameters[\"updateIdentityRequest\"];\n        if (_updateIdentityRequest === null || _updateIdentityRequest === undefined) {\n            throw new Error('Required parameter updateIdentityRequest was null or undefined when calling updateIdentity.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}`, _updateIdentityRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    updateIdentityUrl(requestParameters) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updateIdentity.');\n        }\n        const _updateIdentityRequest = requestParameters[\"updateIdentityRequest\"];\n        if (_updateIdentityRequest === null || _updateIdentityRequest === undefined) {\n            throw new Error('Required parameter updateIdentityRequest was null or undefined when calling updateIdentity.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}`;\n    }\n    updateIdentityStatus(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updateIdentityStatus.');\n        }\n        const _updateIdentityStatusRequest = requestParameters[\"updateIdentityStatusRequest\"];\n        if (_updateIdentityStatusRequest === null || _updateIdentityStatusRequest === undefined) {\n            throw new Error('Required parameter updateIdentityStatusRequest was null or undefined when calling updateIdentityStatus.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/status`, _updateIdentityStatusRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    updateIdentityStatusUrl(requestParameters) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updateIdentityStatus.');\n        }\n        const _updateIdentityStatusRequest = requestParameters[\"updateIdentityStatusRequest\"];\n        if (_updateIdentityStatusRequest === null || _updateIdentityStatusRequest === undefined) {\n            throw new Error('Required parameter updateIdentityStatusRequest was null or undefined when calling updateIdentityStatus.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/status`;\n    }\n}\nIdentityManagementService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: IdentityManagementService, deps: [{ token: i1.HttpClient }, { token: USER_BASE_PATH, optional: true }, { token: UserConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nIdentityManagementService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: IdentityManagementService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: IdentityManagementService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USER_BASE_PATH]\n                }] }, { type: UserConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst IdentityManagementServiceChangePasswordMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities/password\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst IdentityManagementServiceCreateIdentityMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"internalId\": \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n                    \"externalId\": \"admin\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict error\",\n                    \"errors\": [{\n                            \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n                            \"key\": \"transactions.api.billingstatus.transaction\",\n                            \"context\": {\n                                \"billingStatus\": \"BILLED\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst IdentityManagementServiceGetIdentitiesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"identities\": [{\n                            \"id\": \"eadaca0b-0b9d-4244-8922-1dead62d00e4\",\n                            \"externalId\": \"U0000010\",\n                            \"legalEntityId\": \"48b711b8-5adb-4826-a9cc-141b386f8930\",\n                            \"fullName\": \"Hasnain Boyd\",\n                            \"legalEntityName\": \"Backbase\"\n                        }, {\n                            \"id\": \"177296ae-3ebb-42f4-80fe-2d79d81cc469\",\n                            \"externalId\": \"U0000011\",\n                            \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n                            \"fullName\": \"Caroline Smyth\",\n                            \"legalEntityName\": \"Backbase Cardiff\"\n                        }, {\n                            \"id\": \"66569096-df06-46b1-9dbb-3e0e73912e5d\",\n                            \"externalId\": \"U0000012\",\n                            \"legalEntityId\": \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n                            \"fullName\": \"Amin Fowler\",\n                            \"legalEntityName\": \"Backbase Amsterdam\"\n                        }, {\n                            \"id\": \"1117a81d-86e2-4a5a-9f79-eafbaa2bcddd\",\n                            \"externalId\": \"U0000013\",\n                            \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n                            \"fullName\": \"Amelia Slater\",\n                            \"legalEntityName\": \"Backbase Cardiff\"\n                        }, {\n                            \"id\": \"55e27e95-216c-40fd-be2e-dd5a100ddcfc\",\n                            \"externalId\": \"U0000014\",\n                            \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n                            \"fullName\": \"Bradlee Lister\",\n                            \"legalEntityName\": \"Backbase Cardiff\"\n                        }, {\n                            \"id\": \"59721bc0-da2d-42f8-9b14-a391d52e039e\",\n                            \"externalId\": \"U0000015\",\n                            \"legalEntityId\": \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n                            \"fullName\": \"Khalil Freeman\",\n                            \"legalEntityName\": \"Backbase Amsterdam\"\n                        }, {\n                            \"id\": \"d5ff6ff6-7d39-430c-a787-75321d2f986e\",\n                            \"externalId\": \"U0000016\",\n                            \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n                            \"fullName\": \"Safwan Archer\",\n                            \"legalEntityName\": \"Backbase Cardiff\"\n                        }, {\n                            \"id\": \"5e41de27-cc3c-4277-9e4f-e9fb6f1da067\",\n                            \"externalId\": \"U0000017\",\n                            \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n                            \"fullName\": \"Miranda Goldsmith\",\n                            \"legalEntityName\": \"Backbase Cardiff\"\n                        }, {\n                            \"id\": \"34be7792-d4a6-44de-bef7-1d051a33dd08\",\n                            \"externalId\": \"U0000018\",\n                            \"legalEntityId\": \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n                            \"fullName\": \"Willard Pham\",\n                            \"legalEntityName\": \"Backbase Amsterdam\"\n                        }, {\n                            \"id\": \"721b5973-543a-4a36-b739-352259486ac5\",\n                            \"externalId\": \"U0000019\",\n                            \"legalEntityId\": \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n                            \"fullName\": \"Braiden Calhoun\",\n                            \"legalEntityName\": \"Backbase Amsterdam\"\n                        }],\n                    \"totalElements\": 10\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst IdentityManagementServiceGetIdentityMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities/{internalId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"externalId\": \"admin\",\n                    \"legalEntityInternalId\": \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n                    \"fullName\": \"Mila Example\",\n                    \"preferredLanguage\": \"EN\",\n                    \"emailAddress\": \"mila@example.com\",\n                    \"mobileNumber\": \"07700 900000\",\n                    \"status\": \"ENABLED\",\n                    \"emailVerified\": true,\n                    \"createdDate\": \"2018-02-04T06:35:41.000Z\",\n                    \"requiredActions\": [\"VERIFY_EMAIL\", \"UPDATE_PASSWORD\", \"ACCEPT_TERMS_AND_CONDITIONS\"],\n                    \"givenName\": \"Mila\",\n                    \"familyName\": \"Example\",\n                    \"attributes\": {\n                        \"bank-id\": \"BANK0001\",\n                        \"core-id\": \"milaexample\"\n                    }\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst IdentityManagementServiceGetIdentityPendingApprovalsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/approvals\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"approvalId\": \"37507cbc-3e81-4cc3-a0f6-78ed53d2db22\",\n                        \"type\": \"UNLOCK\"\n                    }]\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst IdentityManagementServiceGetSessionsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/sessions\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"sessions\": [{\n                            \"id\": \"9136e697-6c2f-49f6-9ef7-c67c89e8b825\",\n                            \"ipAddress\": \"198.51.100.103\",\n                            \"start\": \"2018-07-26T15:21:23.000Z\",\n                            \"lastAccess\": \"2018-07-26T15:21:23.000Z\",\n                            \"client\": \"web\"\n                        }, {\n                            \"id\": \"d04ba3e2-9dd5-484d-b756-e6a86562743a\",\n                            \"ipAddress\": \"198.51.100.212\",\n                            \"start\": \"2018-07-26T15:23:33.000Z\",\n                            \"lastAccess\": \"2018-07-26T15:24:12.000Z\",\n                            \"client\": \"mobile\"\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst IdentityManagementServiceLogoutSessionsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/sessions/logout\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst IdentityManagementServiceRevokeIdentityAccessMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/access\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst IdentityManagementServiceSendRequiredActionsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/actions\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst IdentityManagementServiceUpdateIdentityMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities/{internalId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst IdentityManagementServiceUpdateIdentityStatusMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/status\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 202,\n                body: {\n                    \"approvalId\": \"37507cbc-3e81-4cc3-a0f6-78ed53d2db22\"\n                }\n            },\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst IdentityManagementServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/users/identities/password\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/identities\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"internalId\": \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n                    \"externalId\": \"admin\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict error\",\n                    \"errors\": [{\n                            \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n                            \"key\": \"transactions.api.billingstatus.transaction\",\n                            \"context\": {\n                                \"billingStatus\": \"BILLED\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/identities\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"identities\": [{\n                            \"id\": \"eadaca0b-0b9d-4244-8922-1dead62d00e4\",\n                            \"externalId\": \"U0000010\",\n                            \"legalEntityId\": \"48b711b8-5adb-4826-a9cc-141b386f8930\",\n                            \"fullName\": \"Hasnain Boyd\",\n                            \"legalEntityName\": \"Backbase\"\n                        }, {\n                            \"id\": \"177296ae-3ebb-42f4-80fe-2d79d81cc469\",\n                            \"externalId\": \"U0000011\",\n                            \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n                            \"fullName\": \"Caroline Smyth\",\n                            \"legalEntityName\": \"Backbase Cardiff\"\n                        }, {\n                            \"id\": \"66569096-df06-46b1-9dbb-3e0e73912e5d\",\n                            \"externalId\": \"U0000012\",\n                            \"legalEntityId\": \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n                            \"fullName\": \"Amin Fowler\",\n                            \"legalEntityName\": \"Backbase Amsterdam\"\n                        }, {\n                            \"id\": \"1117a81d-86e2-4a5a-9f79-eafbaa2bcddd\",\n                            \"externalId\": \"U0000013\",\n                            \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n                            \"fullName\": \"Amelia Slater\",\n                            \"legalEntityName\": \"Backbase Cardiff\"\n                        }, {\n                            \"id\": \"55e27e95-216c-40fd-be2e-dd5a100ddcfc\",\n                            \"externalId\": \"U0000014\",\n                            \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n                            \"fullName\": \"Bradlee Lister\",\n                            \"legalEntityName\": \"Backbase Cardiff\"\n                        }, {\n                            \"id\": \"59721bc0-da2d-42f8-9b14-a391d52e039e\",\n                            \"externalId\": \"U0000015\",\n                            \"legalEntityId\": \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n                            \"fullName\": \"Khalil Freeman\",\n                            \"legalEntityName\": \"Backbase Amsterdam\"\n                        }, {\n                            \"id\": \"d5ff6ff6-7d39-430c-a787-75321d2f986e\",\n                            \"externalId\": \"U0000016\",\n                            \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n                            \"fullName\": \"Safwan Archer\",\n                            \"legalEntityName\": \"Backbase Cardiff\"\n                        }, {\n                            \"id\": \"5e41de27-cc3c-4277-9e4f-e9fb6f1da067\",\n                            \"externalId\": \"U0000017\",\n                            \"legalEntityId\": \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n                            \"fullName\": \"Miranda Goldsmith\",\n                            \"legalEntityName\": \"Backbase Cardiff\"\n                        }, {\n                            \"id\": \"34be7792-d4a6-44de-bef7-1d051a33dd08\",\n                            \"externalId\": \"U0000018\",\n                            \"legalEntityId\": \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n                            \"fullName\": \"Willard Pham\",\n                            \"legalEntityName\": \"Backbase Amsterdam\"\n                        }, {\n                            \"id\": \"721b5973-543a-4a36-b739-352259486ac5\",\n                            \"externalId\": \"U0000019\",\n                            \"legalEntityId\": \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n                            \"fullName\": \"Braiden Calhoun\",\n                            \"legalEntityName\": \"Backbase Amsterdam\"\n                        }],\n                    \"totalElements\": 10\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/identities/{internalId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"externalId\": \"admin\",\n                    \"legalEntityInternalId\": \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n                    \"fullName\": \"Mila Example\",\n                    \"preferredLanguage\": \"EN\",\n                    \"emailAddress\": \"mila@example.com\",\n                    \"mobileNumber\": \"07700 900000\",\n                    \"status\": \"ENABLED\",\n                    \"emailVerified\": true,\n                    \"createdDate\": \"2018-02-04T06:35:41.000Z\",\n                    \"requiredActions\": [\"VERIFY_EMAIL\", \"UPDATE_PASSWORD\", \"ACCEPT_TERMS_AND_CONDITIONS\"],\n                    \"givenName\": \"Mila\",\n                    \"familyName\": \"Example\",\n                    \"attributes\": {\n                        \"bank-id\": \"BANK0001\",\n                        \"core-id\": \"milaexample\"\n                    }\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/approvals\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"approvalId\": \"37507cbc-3e81-4cc3-a0f6-78ed53d2db22\",\n                        \"type\": \"UNLOCK\"\n                    }]\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/sessions\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"sessions\": [{\n                            \"id\": \"9136e697-6c2f-49f6-9ef7-c67c89e8b825\",\n                            \"ipAddress\": \"198.51.100.103\",\n                            \"start\": \"2018-07-26T15:21:23.000Z\",\n                            \"lastAccess\": \"2018-07-26T15:21:23.000Z\",\n                            \"client\": \"web\"\n                        }, {\n                            \"id\": \"d04ba3e2-9dd5-484d-b756-e6a86562743a\",\n                            \"ipAddress\": \"198.51.100.212\",\n                            \"start\": \"2018-07-26T15:23:33.000Z\",\n                            \"lastAccess\": \"2018-07-26T15:24:12.000Z\",\n                            \"client\": \"mobile\"\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/sessions/logout\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/access\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/actions\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/identities/{internalId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/status\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 202,\n                body: {\n                    \"approvalId\": \"37507cbc-3e81-4cc3-a0f6-78ed53d2db22\"\n                }\n            },\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nclass UserApprovalsService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new UserConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    approveApproval(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling approveApproval.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/approvals/${encodeURIComponent(String(_approvalId))}/approve`, null, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    approveApprovalUrl(requestParameters) {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling approveApproval.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/approvals/${encodeURIComponent(String(_approvalId))}/approve`;\n    }\n    getApprovalDetails(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getApprovalDetails.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/approvals/${encodeURIComponent(String(_approvalId))}/details`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getApprovalDetailsUrl(requestParameters) {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getApprovalDetails.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/approvals/${encodeURIComponent(String(_approvalId))}/details`;\n    }\n    rejectApproval(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling rejectApproval.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/approvals/${encodeURIComponent(String(_approvalId))}/reject`, null, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    rejectApprovalUrl(requestParameters) {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling rejectApproval.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/approvals/${encodeURIComponent(String(_approvalId))}/reject`;\n    }\n}\nUserApprovalsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: UserApprovalsService, deps: [{ token: i1.HttpClient }, { token: USER_BASE_PATH, optional: true }, { token: UserConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nUserApprovalsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: UserApprovalsService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: UserApprovalsService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USER_BASE_PATH]\n                }] }, { type: UserConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst UserApprovalsServiceApproveApprovalMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/approvals/{approvalId}/approve\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserApprovalsServiceGetApprovalDetailsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/approvals/{approvalId}/details\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"changelogDetails\": [{\n                            \"type\": \"LOCK_USER\",\n                            \"key\": \"User Status\",\n                            \"from\": \"Locked\",\n                            \"to\": \"Enabled\"\n                        }],\n                    \"userDetails\": {\n                        \"username\": \"john.doe\",\n                        \"legalEntityName\": \"Bank 001\",\n                        \"fullName\": \"John Doe\",\n                        \"emailAddress\": \"john.doe@example.test\",\n                        \"mobileNumber\": \"012345 67890\",\n                        \"dateCreated\": \"2019-07-11T11:11:11.000Z\"\n                    }\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserApprovalsServiceRejectApprovalMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/approvals/{approvalId}/reject\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserApprovalsServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/users/approvals/{approvalId}/approve\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/approvals/{approvalId}/details\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"changelogDetails\": [{\n                            \"type\": \"LOCK_USER\",\n                            \"key\": \"User Status\",\n                            \"from\": \"Locked\",\n                            \"to\": \"Enabled\"\n                        }],\n                    \"userDetails\": {\n                        \"username\": \"john.doe\",\n                        \"legalEntityName\": \"Bank 001\",\n                        \"fullName\": \"John Doe\",\n                        \"emailAddress\": \"john.doe@example.test\",\n                        \"mobileNumber\": \"012345 67890\",\n                        \"dateCreated\": \"2019-07-11T11:11:11.000Z\"\n                    }\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/approvals/{approvalId}/reject\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nclass UserManagementService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new UserConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    checkUserExists(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _externalId = requestParameters[\"externalId\"];\n        if (_externalId === null || _externalId === undefined) {\n            throw new Error('Required parameter externalId was null or undefined when calling checkUserExists.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/existing/externalids/${encodeURIComponent(String(_externalId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    checkUserExistsUrl(requestParameters) {\n        const _externalId = requestParameters[\"externalId\"];\n        if (_externalId === null || _externalId === undefined) {\n            throw new Error('Required parameter externalId was null or undefined when calling checkUserExists.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/existing/externalids/${encodeURIComponent(String(_externalId))}`;\n    }\n    getLegalEntityByExternalId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _externalId = requestParameters[\"externalId\"];\n        if (_externalId === null || _externalId === undefined) {\n            throw new Error('Required parameter externalId was null or undefined when calling getLegalEntityByExternalId.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/externalids/${encodeURIComponent(String(_externalId))}/legalentities`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getLegalEntityByExternalIdUrl(requestParameters) {\n        const _externalId = requestParameters[\"externalId\"];\n        if (_externalId === null || _externalId === undefined) {\n            throw new Error('Required parameter externalId was null or undefined when calling getLegalEntityByExternalId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/externalids/${encodeURIComponent(String(_externalId))}/legalentities`;\n    }\n    getOwnUser(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/me`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getOwnUserUrl() {\n        return `${this.configuration.basePath}/client-api/v2/users/me`;\n    }\n    getUserByExternalId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _externalId = requestParameters[\"externalId\"];\n        if (_externalId === null || _externalId === undefined) {\n            throw new Error('Required parameter externalId was null or undefined when calling getUserByExternalId.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/externalids/${encodeURIComponent(String(_externalId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getUserByExternalIdUrl(requestParameters) {\n        const _externalId = requestParameters[\"externalId\"];\n        if (_externalId === null || _externalId === undefined) {\n            throw new Error('Required parameter externalId was null or undefined when calling getUserByExternalId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/externalids/${encodeURIComponent(String(_externalId))}`;\n    }\n    getUserById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getUserById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getUserByIdUrl(requestParameters) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getUserById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}`;\n    }\n    getUsers(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _entityId = requestParameters[\"entityId\"];\n        if (_entityId === null || _entityId === undefined) {\n            throw new Error('Required parameter entityId was null or undefined when calling getUsers.');\n        }\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_entityId !== undefined && _entityId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _entityId, 'entityId');\n        }\n        if (_query !== undefined && _query !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getUsersUrl(requestParameters) {\n        const _entityId = requestParameters[\"entityId\"];\n        if (_entityId === null || _entityId === undefined) {\n            throw new Error('Required parameter entityId was null or undefined when calling getUsers.');\n        }\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_entityId !== undefined && _entityId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _entityId, 'entityId');\n        }\n        if (_query !== undefined && _query !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/users${queryString ? `?${queryString}` : ''}`;\n    }\n    getUsersByLegalEntityIds(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _getUsersByLegalEntityIdsRequest = requestParameters[\"getUsersByLegalEntityIdsRequest\"];\n        if (_getUsersByLegalEntityIdsRequest === null || _getUsersByLegalEntityIdsRequest === undefined) {\n            throw new Error('Required parameter getUsersByLegalEntityIdsRequest was null or undefined when calling getUsersByLegalEntityIds.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/legalentityids`, _getUsersByLegalEntityIdsRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getUsersByLegalEntityIdsUrl(requestParameters) {\n        const _getUsersByLegalEntityIdsRequest = requestParameters[\"getUsersByLegalEntityIdsRequest\"];\n        if (_getUsersByLegalEntityIdsRequest === null || _getUsersByLegalEntityIdsRequest === undefined) {\n            throw new Error('Required parameter getUsersByLegalEntityIdsRequest was null or undefined when calling getUsersByLegalEntityIds.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/legalentityids`;\n    }\n    updateOwnLanguage(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _updatePreferredLanguage = requestParameters[\"updatePreferredLanguage\"];\n        if (_updatePreferredLanguage === null || _updatePreferredLanguage === undefined) {\n            throw new Error('Required parameter updatePreferredLanguage was null or undefined when calling updateOwnLanguage.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/me/preferred-language`, _updatePreferredLanguage, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    updateOwnLanguageUrl(requestParameters) {\n        const _updatePreferredLanguage = requestParameters[\"updatePreferredLanguage\"];\n        if (_updatePreferredLanguage === null || _updatePreferredLanguage === undefined) {\n            throw new Error('Required parameter updatePreferredLanguage was null or undefined when calling updateOwnLanguage.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/preferred-language`;\n    }\n}\nUserManagementService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: UserManagementService, deps: [{ token: i1.HttpClient }, { token: USER_BASE_PATH, optional: true }, { token: UserConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nUserManagementService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: UserManagementService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: UserManagementService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USER_BASE_PATH]\n                }] }, { type: UserConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst UserManagementServiceCheckUserExistsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/existing/externalids/{externalId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserManagementServiceGetLegalEntityByExternalIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/externalids/{externalId}/legalentities\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"a154ebc2-3116-450e-9e26-1612d7cb48fb\",\n                    \"externalId\": \"a00f4955-c920-4604-9ec8-4e2cddd447d6\",\n                    \"name\": \"Bank Corp.\",\n                    \"parentId\": \"8cc493bb-ffca-4b47-ae2f-594cd7282d30\",\n                    \"isParent\": true\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserManagementServiceGetOwnUserMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"externalId\": \"externalBankId1\",\n                    \"preferredLanguage\": \"fr-FR\",\n                    \"legalEntityId\": \"c2185f7d-a1e8-4f97-990d-cb1cfd0d8f53\",\n                    \"legalEntityName\": \"BANK A\",\n                    \"id\": \"3da7e7fb-857f-44c2-92aa-80572f6394e2\",\n                    \"fullName\": \"Henry Duncan\"\n                }\n            },\n        ]\n    }]);\nconst UserManagementServiceGetUserByExternalIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/externalids/{externalId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"externalId\": \"U0000010\",\n                    \"legalEntityId\": \"c7a382786d514262b75ab9531b749a2b\",\n                    \"id\": \"d100c54f79784731843f0db89a2d2957\",\n                    \"fullName\": \"David Flores\",\n                    \"preferredLanguage\": \"fr-FR\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"preferredLanguage\": \"preferredLanguage\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"legalEntityId\": \"legalEntityId\",\n                    \"externalId\": \"externalId\",\n                    \"fullName\": \"fullName\",\n                    \"id\": \"id\"\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserManagementServiceGetUserByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"externalId\": \"U0000010\",\n                    \"legalEntityId\": \"c7a382786d514262b75ab9531b749a2b\",\n                    \"id\": \"d100c54f79784731843f0db89a2d2957\",\n                    \"fullName\": \"David Flores\",\n                    \"preferredLanguage\": \"fr-FR\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"preferredLanguage\": \"preferredLanguage\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"legalEntityId\": \"legalEntityId\",\n                    \"externalId\": \"externalId\",\n                    \"fullName\": \"fullName\",\n                    \"id\": \"id\"\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserManagementServiceGetUsersMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"externalId\": \"U0000010\",\n                        \"legalEntityId\": \"c7a382786d514262b75ab9531b749a2b\",\n                        \"id\": \"d100c54f79784731843f0db89a2d2957\",\n                        \"fullName\": \"David Flores\",\n                        \"preferredLanguage\": \"fr-FR\"\n                    }, {\n                        \"externalId\": \"U0000011\",\n                        \"legalEntityId\": \"dbc9e566d44f4cd9a1f09ad3f6729f15\",\n                        \"id\": \"fafd8fd6b661402b8411a48050bdc9ad\",\n                        \"fullName\": \"Sofia Duncan\"\n                    }, {\n                        \"externalId\": \"U0000012\",\n                        \"legalEntityId\": \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n                        \"id\": \"bc9a83bf025449dea4ecc05ce816aebd\",\n                        \"fullName\": \"Henry Duncan\"\n                    }, {\n                        \"externalId\": \"U0000013\",\n                        \"legalEntityId\": \"34\",\n                        \"id\": \"5360dbba1a254889ba94c22ff01b1c37\",\n                        \"fullName\": \"Bart Nyman\"\n                    }, {\n                        \"externalId\": \"U0000014\",\n                        \"legalEntityId\": \"c9fc30f4e5fb492c97ed0a05f926aecc\",\n                        \"id\": \"37c1b6b531a34259b4c518eebc0b34a2\",\n                        \"fullName\": \"Peter\"\n                    }, {\n                        \"externalId\": \"U0000015\",\n                        \"legalEntityId\": \"0f6d14f40e064deeaee351befd53d3e7\",\n                        \"id\": \"b5f499e8f3c94cf39997957ce4cbec59\",\n                        \"fullName\": \"Sandra\"\n                    }, {\n                        \"externalId\": \"U0000016\",\n                        \"legalEntityId\": \"6e83bf0d-0d77-4320-b854-4a704e1d50c3\",\n                        \"id\": \"b5f499e8f3c94cf39997957ce4cbei84\",\n                        \"fullName\": \"Marko Ilievski\",\n                        \"preferredLanguage\": \"en-GB\"\n                    }, {\n                        \"externalId\": \"U0000017\",\n                        \"legalEntityId\": \"6e83bf0d-0d77-4320-b854-4a704e1d50c3\",\n                        \"id\": \"b5f499e8f3c94cf39997957ce4cbec59t97\",\n                        \"fullName\": \"Daniela Petkovska\"\n                    }]\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserManagementServiceGetUsersByLegalEntityIdsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/legalentityids\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"users\": [{\n                            \"id\": \"001\",\n                            \"externalId\": \"U0000010\",\n                            \"legalEntityId\": \"012\",\n                            \"fullName\": \"Mila\"\n                        }, {\n                            \"id\": \"002\",\n                            \"externalId\": \"U0000011\",\n                            \"legalEntityId\": \"023\",\n                            \"fullName\": \"Kjiro\"\n                        }, {\n                            \"id\": \"003\",\n                            \"externalId\": \"U0000012\",\n                            \"legalEntityId\": \"034\",\n                            \"fullName\": \"Daniel\"\n                        }],\n                    \"totalElements\": 1000\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserManagementServiceUpdateOwnLanguageMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/preferred-language\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserManagementServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/users/existing/externalids/{externalId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/externalids/{externalId}/legalentities\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"a154ebc2-3116-450e-9e26-1612d7cb48fb\",\n                    \"externalId\": \"a00f4955-c920-4604-9ec8-4e2cddd447d6\",\n                    \"name\": \"Bank Corp.\",\n                    \"parentId\": \"8cc493bb-ffca-4b47-ae2f-594cd7282d30\",\n                    \"isParent\": true\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/me\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"externalId\": \"externalBankId1\",\n                    \"preferredLanguage\": \"fr-FR\",\n                    \"legalEntityId\": \"c2185f7d-a1e8-4f97-990d-cb1cfd0d8f53\",\n                    \"legalEntityName\": \"BANK A\",\n                    \"id\": \"3da7e7fb-857f-44c2-92aa-80572f6394e2\",\n                    \"fullName\": \"Henry Duncan\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/externalids/{externalId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"externalId\": \"U0000010\",\n                    \"legalEntityId\": \"c7a382786d514262b75ab9531b749a2b\",\n                    \"id\": \"d100c54f79784731843f0db89a2d2957\",\n                    \"fullName\": \"David Flores\",\n                    \"preferredLanguage\": \"fr-FR\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"preferredLanguage\": \"preferredLanguage\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"legalEntityId\": \"legalEntityId\",\n                    \"externalId\": \"externalId\",\n                    \"fullName\": \"fullName\",\n                    \"id\": \"id\"\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"externalId\": \"U0000010\",\n                    \"legalEntityId\": \"c7a382786d514262b75ab9531b749a2b\",\n                    \"id\": \"d100c54f79784731843f0db89a2d2957\",\n                    \"fullName\": \"David Flores\",\n                    \"preferredLanguage\": \"fr-FR\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"preferredLanguage\": \"preferredLanguage\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"legalEntityId\": \"legalEntityId\",\n                    \"externalId\": \"externalId\",\n                    \"fullName\": \"fullName\",\n                    \"id\": \"id\"\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"externalId\": \"U0000010\",\n                        \"legalEntityId\": \"c7a382786d514262b75ab9531b749a2b\",\n                        \"id\": \"d100c54f79784731843f0db89a2d2957\",\n                        \"fullName\": \"David Flores\",\n                        \"preferredLanguage\": \"fr-FR\"\n                    }, {\n                        \"externalId\": \"U0000011\",\n                        \"legalEntityId\": \"dbc9e566d44f4cd9a1f09ad3f6729f15\",\n                        \"id\": \"fafd8fd6b661402b8411a48050bdc9ad\",\n                        \"fullName\": \"Sofia Duncan\"\n                    }, {\n                        \"externalId\": \"U0000012\",\n                        \"legalEntityId\": \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n                        \"id\": \"bc9a83bf025449dea4ecc05ce816aebd\",\n                        \"fullName\": \"Henry Duncan\"\n                    }, {\n                        \"externalId\": \"U0000013\",\n                        \"legalEntityId\": \"34\",\n                        \"id\": \"5360dbba1a254889ba94c22ff01b1c37\",\n                        \"fullName\": \"Bart Nyman\"\n                    }, {\n                        \"externalId\": \"U0000014\",\n                        \"legalEntityId\": \"c9fc30f4e5fb492c97ed0a05f926aecc\",\n                        \"id\": \"37c1b6b531a34259b4c518eebc0b34a2\",\n                        \"fullName\": \"Peter\"\n                    }, {\n                        \"externalId\": \"U0000015\",\n                        \"legalEntityId\": \"0f6d14f40e064deeaee351befd53d3e7\",\n                        \"id\": \"b5f499e8f3c94cf39997957ce4cbec59\",\n                        \"fullName\": \"Sandra\"\n                    }, {\n                        \"externalId\": \"U0000016\",\n                        \"legalEntityId\": \"6e83bf0d-0d77-4320-b854-4a704e1d50c3\",\n                        \"id\": \"b5f499e8f3c94cf39997957ce4cbei84\",\n                        \"fullName\": \"Marko Ilievski\",\n                        \"preferredLanguage\": \"en-GB\"\n                    }, {\n                        \"externalId\": \"U0000017\",\n                        \"legalEntityId\": \"6e83bf0d-0d77-4320-b854-4a704e1d50c3\",\n                        \"id\": \"b5f499e8f3c94cf39997957ce4cbec59t97\",\n                        \"fullName\": \"Daniela Petkovska\"\n                    }]\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/legalentityids\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"users\": [{\n                            \"id\": \"001\",\n                            \"externalId\": \"U0000010\",\n                            \"legalEntityId\": \"012\",\n                            \"fullName\": \"Mila\"\n                        }, {\n                            \"id\": \"002\",\n                            \"externalId\": \"U0000011\",\n                            \"legalEntityId\": \"023\",\n                            \"fullName\": \"Kjiro\"\n                        }, {\n                            \"id\": \"003\",\n                            \"externalId\": \"U0000012\",\n                            \"legalEntityId\": \"034\",\n                            \"fullName\": \"Daniel\"\n                        }],\n                    \"totalElements\": 1000\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/me/preferred-language\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nclass UserProfileManagementService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new UserConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    addElectronicAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling addElectronicAddress.');\n        }\n        const _electronicAddress = requestParameters[\"electronicAddress\"];\n        if (_electronicAddress === null || _electronicAddress === undefined) {\n            throw new Error('Required parameter electronicAddress was null or undefined when calling addElectronicAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses`, _electronicAddress, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    addElectronicAddressUrl(requestParameters) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling addElectronicAddress.');\n        }\n        const _electronicAddress = requestParameters[\"electronicAddress\"];\n        if (_electronicAddress === null || _electronicAddress === undefined) {\n            throw new Error('Required parameter electronicAddress was null or undefined when calling addElectronicAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses`;\n    }\n    addOwnElectronicAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _electronicAddress = requestParameters[\"electronicAddress\"];\n        if (_electronicAddress === null || _electronicAddress === undefined) {\n            throw new Error('Required parameter electronicAddress was null or undefined when calling addOwnElectronicAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses`, _electronicAddress, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    addOwnElectronicAddressUrl(requestParameters) {\n        const _electronicAddress = requestParameters[\"electronicAddress\"];\n        if (_electronicAddress === null || _electronicAddress === undefined) {\n            throw new Error('Required parameter electronicAddress was null or undefined when calling addOwnElectronicAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses`;\n    }\n    addOwnPhoneAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _phoneAddress = requestParameters[\"phoneAddress\"];\n        if (_phoneAddress === null || _phoneAddress === undefined) {\n            throw new Error('Required parameter phoneAddress was null or undefined when calling addOwnPhoneAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses`, _phoneAddress, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    addOwnPhoneAddressUrl(requestParameters) {\n        const _phoneAddress = requestParameters[\"phoneAddress\"];\n        if (_phoneAddress === null || _phoneAddress === undefined) {\n            throw new Error('Required parameter phoneAddress was null or undefined when calling addOwnPhoneAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses`;\n    }\n    addOwnPostalAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _postalAddress = requestParameters[\"postalAddress\"];\n        if (_postalAddress === null || _postalAddress === undefined) {\n            throw new Error('Required parameter postalAddress was null or undefined when calling addOwnPostalAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses`, _postalAddress, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    addOwnPostalAddressUrl(requestParameters) {\n        const _postalAddress = requestParameters[\"postalAddress\"];\n        if (_postalAddress === null || _postalAddress === undefined) {\n            throw new Error('Required parameter postalAddress was null or undefined when calling addOwnPostalAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses`;\n    }\n    addPhoneAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling addPhoneAddress.');\n        }\n        const _phoneAddress = requestParameters[\"phoneAddress\"];\n        if (_phoneAddress === null || _phoneAddress === undefined) {\n            throw new Error('Required parameter phoneAddress was null or undefined when calling addPhoneAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses`, _phoneAddress, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    addPhoneAddressUrl(requestParameters) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling addPhoneAddress.');\n        }\n        const _phoneAddress = requestParameters[\"phoneAddress\"];\n        if (_phoneAddress === null || _phoneAddress === undefined) {\n            throw new Error('Required parameter phoneAddress was null or undefined when calling addPhoneAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses`;\n    }\n    addPostalAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling addPostalAddress.');\n        }\n        const _postalAddress = requestParameters[\"postalAddress\"];\n        if (_postalAddress === null || _postalAddress === undefined) {\n            throw new Error('Required parameter postalAddress was null or undefined when calling addPostalAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses`, _postalAddress, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    addPostalAddressUrl(requestParameters) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling addPostalAddress.');\n        }\n        const _postalAddress = requestParameters[\"postalAddress\"];\n        if (_postalAddress === null || _postalAddress === undefined) {\n            throw new Error('Required parameter postalAddress was null or undefined when calling addPostalAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses`;\n    }\n    deleteElectronicAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling deleteElectronicAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling deleteElectronicAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deleteElectronicAddressUrl(requestParameters) {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling deleteElectronicAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling deleteElectronicAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`;\n    }\n    deleteOwnElectronicAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling deleteOwnElectronicAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deleteOwnElectronicAddressUrl(requestParameters) {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling deleteOwnElectronicAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`;\n    }\n    deleteOwnPhoneAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling deleteOwnPhoneAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deleteOwnPhoneAddressUrl(requestParameters) {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling deleteOwnPhoneAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`;\n    }\n    deleteOwnPostalAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling deleteOwnPostalAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deleteOwnPostalAddressUrl(requestParameters) {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling deleteOwnPostalAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`;\n    }\n    deletePhoneAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling deletePhoneAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling deletePhoneAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deletePhoneAddressUrl(requestParameters) {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling deletePhoneAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling deletePhoneAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`;\n    }\n    deletePostalAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling deletePostalAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling deletePostalAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deletePostalAddressUrl(requestParameters) {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling deletePostalAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling deletePostalAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`;\n    }\n    getElectronicAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling getElectronicAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getElectronicAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getElectronicAddressUrl(requestParameters) {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling getElectronicAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getElectronicAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`;\n    }\n    getElectronicAddresses(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getElectronicAddresses.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getElectronicAddressesUrl(requestParameters) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getElectronicAddresses.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses`;\n    }\n    getOwnElectronicAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling getOwnElectronicAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getOwnElectronicAddressUrl(requestParameters) {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling getOwnElectronicAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`;\n    }\n    getOwnElectronicAddresses(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getOwnElectronicAddressesUrl() {\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses`;\n    }\n    getOwnPhoneAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling getOwnPhoneAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getOwnPhoneAddressUrl(requestParameters) {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling getOwnPhoneAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`;\n    }\n    getOwnPhoneAddresses(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getOwnPhoneAddressesUrl() {\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses`;\n    }\n    getOwnPostalAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling getOwnPostalAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getOwnPostalAddressUrl(requestParameters) {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling getOwnPostalAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`;\n    }\n    getOwnPostalAddresses(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getOwnPostalAddressesUrl() {\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses`;\n    }\n    getOwnUserProfile(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/me/profile`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getOwnUserProfileUrl() {\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile`;\n    }\n    getPhoneAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling getPhoneAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getPhoneAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getPhoneAddressUrl(requestParameters) {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling getPhoneAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getPhoneAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`;\n    }\n    getPhoneAddresses(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getPhoneAddresses.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getPhoneAddressesUrl(requestParameters) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getPhoneAddresses.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses`;\n    }\n    getPostalAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling getPostalAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getPostalAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getPostalAddressUrl(requestParameters) {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling getPostalAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getPostalAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`;\n    }\n    getPostalAddresses(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getPostalAddresses.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getPostalAddressesUrl(requestParameters) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getPostalAddresses.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses`;\n    }\n    getUserProfile(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getUserProfile.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getUserProfileUrl(requestParameters) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getUserProfile.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile`;\n    }\n    replaceOwnUserProfileAttributes(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _replaceUserProfileAttributes = requestParameters[\"replaceUserProfileAttributes\"];\n        if (_replaceUserProfileAttributes === null || _replaceUserProfileAttributes === undefined) {\n            throw new Error('Required parameter replaceUserProfileAttributes was null or undefined when calling replaceOwnUserProfileAttributes.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/me/profile`, _replaceUserProfileAttributes, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    replaceOwnUserProfileAttributesUrl(requestParameters) {\n        const _replaceUserProfileAttributes = requestParameters[\"replaceUserProfileAttributes\"];\n        if (_replaceUserProfileAttributes === null || _replaceUserProfileAttributes === undefined) {\n            throw new Error('Required parameter replaceUserProfileAttributes was null or undefined when calling replaceOwnUserProfileAttributes.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile`;\n    }\n    replaceUserProfileAttributes(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling replaceUserProfileAttributes.');\n        }\n        const _replaceUserProfileAttributes = requestParameters[\"replaceUserProfileAttributes\"];\n        if (_replaceUserProfileAttributes === null || _replaceUserProfileAttributes === undefined) {\n            throw new Error('Required parameter replaceUserProfileAttributes was null or undefined when calling replaceUserProfileAttributes.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile`, _replaceUserProfileAttributes, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    replaceUserProfileAttributesUrl(requestParameters) {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling replaceUserProfileAttributes.');\n        }\n        const _replaceUserProfileAttributes = requestParameters[\"replaceUserProfileAttributes\"];\n        if (_replaceUserProfileAttributes === null || _replaceUserProfileAttributes === undefined) {\n            throw new Error('Required parameter replaceUserProfileAttributes was null or undefined when calling replaceUserProfileAttributes.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile`;\n    }\n    updateElectronicAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling updateElectronicAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updateElectronicAddress.');\n        }\n        const _electronicAddress = requestParameters[\"electronicAddress\"];\n        if (_electronicAddress === null || _electronicAddress === undefined) {\n            throw new Error('Required parameter electronicAddress was null or undefined when calling updateElectronicAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`, _electronicAddress, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    updateElectronicAddressUrl(requestParameters) {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling updateElectronicAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updateElectronicAddress.');\n        }\n        const _electronicAddress = requestParameters[\"electronicAddress\"];\n        if (_electronicAddress === null || _electronicAddress === undefined) {\n            throw new Error('Required parameter electronicAddress was null or undefined when calling updateElectronicAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`;\n    }\n    updateOwnElectronicAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling updateOwnElectronicAddress.');\n        }\n        const _electronicAddress = requestParameters[\"electronicAddress\"];\n        if (_electronicAddress === null || _electronicAddress === undefined) {\n            throw new Error('Required parameter electronicAddress was null or undefined when calling updateOwnElectronicAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`, _electronicAddress, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    updateOwnElectronicAddressUrl(requestParameters) {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling updateOwnElectronicAddress.');\n        }\n        const _electronicAddress = requestParameters[\"electronicAddress\"];\n        if (_electronicAddress === null || _electronicAddress === undefined) {\n            throw new Error('Required parameter electronicAddress was null or undefined when calling updateOwnElectronicAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`;\n    }\n    updateOwnPhoneAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling updateOwnPhoneAddress.');\n        }\n        const _phoneAddress = requestParameters[\"phoneAddress\"];\n        if (_phoneAddress === null || _phoneAddress === undefined) {\n            throw new Error('Required parameter phoneAddress was null or undefined when calling updateOwnPhoneAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`, _phoneAddress, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    updateOwnPhoneAddressUrl(requestParameters) {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling updateOwnPhoneAddress.');\n        }\n        const _phoneAddress = requestParameters[\"phoneAddress\"];\n        if (_phoneAddress === null || _phoneAddress === undefined) {\n            throw new Error('Required parameter phoneAddress was null or undefined when calling updateOwnPhoneAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`;\n    }\n    updateOwnPostalAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling updateOwnPostalAddress.');\n        }\n        const _postalAddress = requestParameters[\"postalAddress\"];\n        if (_postalAddress === null || _postalAddress === undefined) {\n            throw new Error('Required parameter postalAddress was null or undefined when calling updateOwnPostalAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`, _postalAddress, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    updateOwnPostalAddressUrl(requestParameters) {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling updateOwnPostalAddress.');\n        }\n        const _postalAddress = requestParameters[\"postalAddress\"];\n        if (_postalAddress === null || _postalAddress === undefined) {\n            throw new Error('Required parameter postalAddress was null or undefined when calling updateOwnPostalAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`;\n    }\n    updatePhoneAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling updatePhoneAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updatePhoneAddress.');\n        }\n        const _phoneAddress = requestParameters[\"phoneAddress\"];\n        if (_phoneAddress === null || _phoneAddress === undefined) {\n            throw new Error('Required parameter phoneAddress was null or undefined when calling updatePhoneAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`, _phoneAddress, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    updatePhoneAddressUrl(requestParameters) {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling updatePhoneAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updatePhoneAddress.');\n        }\n        const _phoneAddress = requestParameters[\"phoneAddress\"];\n        if (_phoneAddress === null || _phoneAddress === undefined) {\n            throw new Error('Required parameter phoneAddress was null or undefined when calling updatePhoneAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`;\n    }\n    updatePostalAddress(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling updatePostalAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updatePostalAddress.');\n        }\n        const _postalAddress = requestParameters[\"postalAddress\"];\n        if (_postalAddress === null || _postalAddress === undefined) {\n            throw new Error('Required parameter postalAddress was null or undefined when calling updatePostalAddress.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`, _postalAddress, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    updatePostalAddressUrl(requestParameters) {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling updatePostalAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updatePostalAddress.');\n        }\n        const _postalAddress = requestParameters[\"postalAddress\"];\n        if (_postalAddress === null || _postalAddress === undefined) {\n            throw new Error('Required parameter postalAddress was null or undefined when calling updatePostalAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`;\n    }\n}\nUserProfileManagementService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: UserProfileManagementService, deps: [{ token: i1.HttpClient }, { token: USER_BASE_PATH, optional: true }, { token: UserConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nUserProfileManagementService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: UserProfileManagementService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: UserProfileManagementService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USER_BASE_PATH]\n                }] }, { type: UserConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst UserProfileManagementServiceAddElectronicAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceAddOwnElectronicAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceAddOwnPhoneAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceAddOwnPostalAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceAddPhoneAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceAddPostalAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceDeleteElectronicAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceDeleteOwnElectronicAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceDeleteOwnPhoneAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceDeleteOwnPostalAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceDeletePhoneAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceDeletePostalAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceGetElectronicAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                    \"type\": \"E_MAIL\",\n                    \"primary\": true,\n                    \"address\": \"test@tester.com\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"address\": \"address\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"type\": \"type\",\n                    \"key\": \"key\",\n                    \"primary\": true\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceGetElectronicAddressesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"electronic-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"E_MAIL\",\n                            \"primary\": true,\n                            \"address\": \"test@tester.com\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"PERSONAL\",\n                            \"primary\": false,\n                            \"address\": \"test_personal@tester.com\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceGetOwnElectronicAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                    \"type\": \"E_MAIL\",\n                    \"primary\": true,\n                    \"address\": \"test@tester.com\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"address\": \"address\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"type\": \"type\",\n                    \"key\": \"key\",\n                    \"primary\": true\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceGetOwnElectronicAddressesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"electronic-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"E_MAIL\",\n                            \"primary\": true,\n                            \"address\": \"test@tester.com\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"PERSONAL\",\n                            \"primary\": false,\n                            \"address\": \"test_personal@tester.com\"\n                        }]\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"electronic-addresses\": [{\n                            \"address\": \"address\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"type\": \"type\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }, {\n                            \"address\": \"address\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"type\": \"type\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceGetOwnPhoneAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                    \"type\": \"LAND_LINE\",\n                    \"primary\": false,\n                    \"number\": \"02920 671937\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"number\": \"number\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"type\": \"type\",\n                    \"key\": \"key\",\n                    \"primary\": true\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceGetOwnPhoneAddressesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"phone-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"MOBILE\",\n                            \"primary\": true,\n                            \"number\": \"07717 371949\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"LAND_LINE\",\n                            \"primary\": false,\n                            \"number\": \"02920 671937\"\n                        }]\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"phone-addresses\": [{\n                            \"number\": \"number\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"type\": \"type\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }, {\n                            \"number\": \"number\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"type\": \"type\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }],\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceGetOwnPostalAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                    \"type\": \"HOME\",\n                    \"primary\": true,\n                    \"addressLine\": \"2 Hertsmere Rd\",\n                    \"streetName\": \"Canary Wharf\",\n                    \"townName\": \"London\",\n                    \"postalCode\": \"E14 4AB\",\n                    \"country\": \"GB\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"country\": \"country\",\n                    \"townName\": \"townName\",\n                    \"countrySubDivision\": \"countrySubDivision\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"postalCode\": \"postalCode\",\n                    \"subDepartment\": \"subDepartment\",\n                    \"type\": \"type\",\n                    \"addressLine\": \"addressLine\",\n                    \"streetName\": \"streetName\",\n                    \"buildingNumber\": \"buildingNumber\",\n                    \"department\": \"department\",\n                    \"key\": \"key\",\n                    \"primary\": true\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceGetOwnPostalAddressesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"postal-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"BUSINESS\",\n                            \"primary\": false,\n                            \"addressLine\": \"The Bonded Warehouse\",\n                            \"streetName\": \"Atlantic Wharf\",\n                            \"townName\": \"Cardiff\",\n                            \"postalCode\": \"CF10 4HE\",\n                            \"country\": \"GB\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"HOME\",\n                            \"primary\": true,\n                            \"addressLine\": \"2 Hertsmere Rd\",\n                            \"streetName\": \"Canary Wharf\",\n                            \"townName\": \"London\",\n                            \"postalCode\": \"E14 4AB\"\n                        }],\n                    \"country\": \"GB\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"postal-addresses\": [{\n                            \"country\": \"country\",\n                            \"townName\": \"townName\",\n                            \"countrySubDivision\": \"countrySubDivision\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"postalCode\": \"postalCode\",\n                            \"subDepartment\": \"subDepartment\",\n                            \"type\": \"type\",\n                            \"addressLine\": \"addressLine\",\n                            \"streetName\": \"streetName\",\n                            \"buildingNumber\": \"buildingNumber\",\n                            \"department\": \"department\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }, {\n                            \"country\": \"country\",\n                            \"townName\": \"townName\",\n                            \"countrySubDivision\": \"countrySubDivision\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"postalCode\": \"postalCode\",\n                            \"subDepartment\": \"subDepartment\",\n                            \"type\": \"type\",\n                            \"addressLine\": \"addressLine\",\n                            \"streetName\": \"streetName\",\n                            \"buildingNumber\": \"buildingNumber\",\n                            \"department\": \"department\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceGetOwnUserProfileMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"fullName\": \"John Doe\",\n                    \"phone-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"MOBILE\",\n                            \"primary\": true,\n                            \"number\": \"07717 371949\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"LAND_LINE\",\n                            \"primary\": false,\n                            \"number\": \"02920 671937\"\n                        }],\n                    \"electronic-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"E_MAIL\",\n                            \"primary\": true,\n                            \"address\": \"test@tester.com\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"PERSONAL\",\n                            \"primary\": false,\n                            \"address\": \"test_personal@tester.com\"\n                        }],\n                    \"postal-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"BUSINESS\",\n                            \"primary\": false,\n                            \"addressLine\": \"The Bonded Warehouse\",\n                            \"streetName\": \"Atlantic Wharf\",\n                            \"townName\": \"Cardiff\",\n                            \"postalCode\": \"CF10 4HE\",\n                            \"country\": \"GB\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"HOME\",\n                            \"primary\": true,\n                            \"addressLine\": \"2 Hertsmere Rd\",\n                            \"streetName\": \"Canary Wharf\",\n                            \"townName\": \"London\",\n                            \"postalCode\": \"E14 4AB\",\n                            \"country\": \"GB\"\n                        }]\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"phone-addresses\": [{\n                            \"number\": \"number\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"type\": \"type\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }, {\n                            \"number\": \"number\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"type\": \"type\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }],\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"electronic-addresses\": [{\n                            \"address\": \"address\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"type\": \"type\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }, {\n                            \"address\": \"address\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"type\": \"type\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }],\n                    \"fullName\": \"fullName\",\n                    \"postal-addresses\": [{\n                            \"country\": \"country\",\n                            \"townName\": \"townName\",\n                            \"countrySubDivision\": \"countrySubDivision\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"postalCode\": \"postalCode\",\n                            \"subDepartment\": \"subDepartment\",\n                            \"type\": \"type\",\n                            \"addressLine\": \"addressLine\",\n                            \"streetName\": \"streetName\",\n                            \"buildingNumber\": \"buildingNumber\",\n                            \"department\": \"department\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }, {\n                            \"country\": \"country\",\n                            \"townName\": \"townName\",\n                            \"countrySubDivision\": \"countrySubDivision\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"postalCode\": \"postalCode\",\n                            \"subDepartment\": \"subDepartment\",\n                            \"type\": \"type\",\n                            \"addressLine\": \"addressLine\",\n                            \"streetName\": \"streetName\",\n                            \"buildingNumber\": \"buildingNumber\",\n                            \"department\": \"department\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceGetPhoneAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                    \"type\": \"LAND_LINE\",\n                    \"primary\": false,\n                    \"number\": \"02920 671937\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"number\": \"number\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"type\": \"type\",\n                    \"key\": \"key\",\n                    \"primary\": true\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceGetPhoneAddressesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"phone-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"MOBILE\",\n                            \"primary\": true,\n                            \"number\": \"07717 371949\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"LAND_LINE\",\n                            \"primary\": false,\n                            \"number\": \"02920 671937\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceGetPostalAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                    \"type\": \"HOME\",\n                    \"primary\": true,\n                    \"addressLine\": \"2 Hertsmere Rd\",\n                    \"streetName\": \"Canary Wharf\",\n                    \"townName\": \"London\",\n                    \"postalCode\": \"E14 4AB\",\n                    \"country\": \"GB\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"country\": \"country\",\n                    \"townName\": \"townName\",\n                    \"countrySubDivision\": \"countrySubDivision\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"postalCode\": \"postalCode\",\n                    \"subDepartment\": \"subDepartment\",\n                    \"type\": \"type\",\n                    \"addressLine\": \"addressLine\",\n                    \"streetName\": \"streetName\",\n                    \"buildingNumber\": \"buildingNumber\",\n                    \"department\": \"department\",\n                    \"key\": \"key\",\n                    \"primary\": true\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceGetPostalAddressesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"postal-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"BUSINESS\",\n                            \"primary\": false,\n                            \"addressLine\": \"The Bonded Warehouse\",\n                            \"streetName\": \"Atlantic Wharf\",\n                            \"townName\": \"Cardiff\",\n                            \"postalCode\": \"CF10 4HE\",\n                            \"country\": \"GB\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"HOME\",\n                            \"primary\": true,\n                            \"addressLine\": \"2 Hertsmere Rd\",\n                            \"streetName\": \"Canary Wharf\",\n                            \"townName\": \"London\",\n                            \"postalCode\": \"E14 4AB\"\n                        }],\n                    \"country\": \"GB\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceGetUserProfileMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"fullName\": \"John Doe\",\n                    \"phone-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"MOBILE\",\n                            \"primary\": true,\n                            \"number\": \"07717 371949\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"LAND_LINE\",\n                            \"primary\": false,\n                            \"number\": \"02920 671937\"\n                        }],\n                    \"electronic-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"E_MAIL\",\n                            \"primary\": true,\n                            \"address\": \"test@tester.com\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"PERSONAL\",\n                            \"primary\": false,\n                            \"address\": \"test_personal@tester.com\"\n                        }],\n                    \"postal-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"BUSINESS\",\n                            \"primary\": false,\n                            \"addressLine\": \"The Bonded Warehouse\",\n                            \"streetName\": \"Atlantic Wharf\",\n                            \"townName\": \"Cardiff\",\n                            \"postalCode\": \"CF10 4HE\",\n                            \"country\": \"GB\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"HOME\",\n                            \"primary\": true,\n                            \"addressLine\": \"2 Hertsmere Rd\",\n                            \"streetName\": \"Canary Wharf\",\n                            \"townName\": \"London\",\n                            \"postalCode\": \"E14 4AB\",\n                            \"country\": \"GB\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceReplaceOwnUserProfileAttributesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceReplaceUserProfileAttributesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceUpdateElectronicAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceUpdateOwnElectronicAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceUpdateOwnPhoneAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceUpdateOwnPostalAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceUpdatePhoneAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceUpdatePostalAddressMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst UserProfileManagementServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                    \"type\": \"E_MAIL\",\n                    \"primary\": true,\n                    \"address\": \"test@tester.com\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"address\": \"address\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"type\": \"type\",\n                    \"key\": \"key\",\n                    \"primary\": true\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"electronic-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"E_MAIL\",\n                            \"primary\": true,\n                            \"address\": \"test@tester.com\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"PERSONAL\",\n                            \"primary\": false,\n                            \"address\": \"test_personal@tester.com\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                    \"type\": \"E_MAIL\",\n                    \"primary\": true,\n                    \"address\": \"test@tester.com\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"address\": \"address\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"type\": \"type\",\n                    \"key\": \"key\",\n                    \"primary\": true\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"electronic-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"E_MAIL\",\n                            \"primary\": true,\n                            \"address\": \"test@tester.com\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"PERSONAL\",\n                            \"primary\": false,\n                            \"address\": \"test_personal@tester.com\"\n                        }]\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"electronic-addresses\": [{\n                            \"address\": \"address\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"type\": \"type\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }, {\n                            \"address\": \"address\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"type\": \"type\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                    \"type\": \"LAND_LINE\",\n                    \"primary\": false,\n                    \"number\": \"02920 671937\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"number\": \"number\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"type\": \"type\",\n                    \"key\": \"key\",\n                    \"primary\": true\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"phone-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"MOBILE\",\n                            \"primary\": true,\n                            \"number\": \"07717 371949\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"LAND_LINE\",\n                            \"primary\": false,\n                            \"number\": \"02920 671937\"\n                        }]\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"phone-addresses\": [{\n                            \"number\": \"number\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"type\": \"type\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }, {\n                            \"number\": \"number\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"type\": \"type\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }],\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                    \"type\": \"HOME\",\n                    \"primary\": true,\n                    \"addressLine\": \"2 Hertsmere Rd\",\n                    \"streetName\": \"Canary Wharf\",\n                    \"townName\": \"London\",\n                    \"postalCode\": \"E14 4AB\",\n                    \"country\": \"GB\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"country\": \"country\",\n                    \"townName\": \"townName\",\n                    \"countrySubDivision\": \"countrySubDivision\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"postalCode\": \"postalCode\",\n                    \"subDepartment\": \"subDepartment\",\n                    \"type\": \"type\",\n                    \"addressLine\": \"addressLine\",\n                    \"streetName\": \"streetName\",\n                    \"buildingNumber\": \"buildingNumber\",\n                    \"department\": \"department\",\n                    \"key\": \"key\",\n                    \"primary\": true\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"postal-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"BUSINESS\",\n                            \"primary\": false,\n                            \"addressLine\": \"The Bonded Warehouse\",\n                            \"streetName\": \"Atlantic Wharf\",\n                            \"townName\": \"Cardiff\",\n                            \"postalCode\": \"CF10 4HE\",\n                            \"country\": \"GB\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"HOME\",\n                            \"primary\": true,\n                            \"addressLine\": \"2 Hertsmere Rd\",\n                            \"streetName\": \"Canary Wharf\",\n                            \"townName\": \"London\",\n                            \"postalCode\": \"E14 4AB\"\n                        }],\n                    \"country\": \"GB\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"postal-addresses\": [{\n                            \"country\": \"country\",\n                            \"townName\": \"townName\",\n                            \"countrySubDivision\": \"countrySubDivision\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"postalCode\": \"postalCode\",\n                            \"subDepartment\": \"subDepartment\",\n                            \"type\": \"type\",\n                            \"addressLine\": \"addressLine\",\n                            \"streetName\": \"streetName\",\n                            \"buildingNumber\": \"buildingNumber\",\n                            \"department\": \"department\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }, {\n                            \"country\": \"country\",\n                            \"townName\": \"townName\",\n                            \"countrySubDivision\": \"countrySubDivision\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"postalCode\": \"postalCode\",\n                            \"subDepartment\": \"subDepartment\",\n                            \"type\": \"type\",\n                            \"addressLine\": \"addressLine\",\n                            \"streetName\": \"streetName\",\n                            \"buildingNumber\": \"buildingNumber\",\n                            \"department\": \"department\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/me/profile\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"fullName\": \"John Doe\",\n                    \"phone-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"MOBILE\",\n                            \"primary\": true,\n                            \"number\": \"07717 371949\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"LAND_LINE\",\n                            \"primary\": false,\n                            \"number\": \"02920 671937\"\n                        }],\n                    \"electronic-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"E_MAIL\",\n                            \"primary\": true,\n                            \"address\": \"test@tester.com\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"PERSONAL\",\n                            \"primary\": false,\n                            \"address\": \"test_personal@tester.com\"\n                        }],\n                    \"postal-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"BUSINESS\",\n                            \"primary\": false,\n                            \"addressLine\": \"The Bonded Warehouse\",\n                            \"streetName\": \"Atlantic Wharf\",\n                            \"townName\": \"Cardiff\",\n                            \"postalCode\": \"CF10 4HE\",\n                            \"country\": \"GB\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"HOME\",\n                            \"primary\": true,\n                            \"addressLine\": \"2 Hertsmere Rd\",\n                            \"streetName\": \"Canary Wharf\",\n                            \"townName\": \"London\",\n                            \"postalCode\": \"E14 4AB\",\n                            \"country\": \"GB\"\n                        }]\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"phone-addresses\": [{\n                            \"number\": \"number\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"type\": \"type\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }, {\n                            \"number\": \"number\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"type\": \"type\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }],\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"electronic-addresses\": [{\n                            \"address\": \"address\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"type\": \"type\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }, {\n                            \"address\": \"address\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"type\": \"type\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }],\n                    \"fullName\": \"fullName\",\n                    \"postal-addresses\": [{\n                            \"country\": \"country\",\n                            \"townName\": \"townName\",\n                            \"countrySubDivision\": \"countrySubDivision\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"postalCode\": \"postalCode\",\n                            \"subDepartment\": \"subDepartment\",\n                            \"type\": \"type\",\n                            \"addressLine\": \"addressLine\",\n                            \"streetName\": \"streetName\",\n                            \"buildingNumber\": \"buildingNumber\",\n                            \"department\": \"department\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }, {\n                            \"country\": \"country\",\n                            \"townName\": \"townName\",\n                            \"countrySubDivision\": \"countrySubDivision\",\n                            \"additions\": {\n                                \"key\": \"additions\"\n                            },\n                            \"postalCode\": \"postalCode\",\n                            \"subDepartment\": \"subDepartment\",\n                            \"type\": \"type\",\n                            \"addressLine\": \"addressLine\",\n                            \"streetName\": \"streetName\",\n                            \"buildingNumber\": \"buildingNumber\",\n                            \"department\": \"department\",\n                            \"key\": \"key\",\n                            \"primary\": true\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                    \"type\": \"LAND_LINE\",\n                    \"primary\": false,\n                    \"number\": \"02920 671937\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"number\": \"number\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"type\": \"type\",\n                    \"key\": \"key\",\n                    \"primary\": true\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"phone-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"MOBILE\",\n                            \"primary\": true,\n                            \"number\": \"07717 371949\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"LAND_LINE\",\n                            \"primary\": false,\n                            \"number\": \"02920 671937\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                    \"type\": \"HOME\",\n                    \"primary\": true,\n                    \"addressLine\": \"2 Hertsmere Rd\",\n                    \"streetName\": \"Canary Wharf\",\n                    \"townName\": \"London\",\n                    \"postalCode\": \"E14 4AB\",\n                    \"country\": \"GB\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"country\": \"country\",\n                    \"townName\": \"townName\",\n                    \"countrySubDivision\": \"countrySubDivision\",\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"postalCode\": \"postalCode\",\n                    \"subDepartment\": \"subDepartment\",\n                    \"type\": \"type\",\n                    \"addressLine\": \"addressLine\",\n                    \"streetName\": \"streetName\",\n                    \"buildingNumber\": \"buildingNumber\",\n                    \"department\": \"department\",\n                    \"key\": \"key\",\n                    \"primary\": true\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"postal-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"BUSINESS\",\n                            \"primary\": false,\n                            \"addressLine\": \"The Bonded Warehouse\",\n                            \"streetName\": \"Atlantic Wharf\",\n                            \"townName\": \"Cardiff\",\n                            \"postalCode\": \"CF10 4HE\",\n                            \"country\": \"GB\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"HOME\",\n                            \"primary\": true,\n                            \"addressLine\": \"2 Hertsmere Rd\",\n                            \"streetName\": \"Canary Wharf\",\n                            \"townName\": \"London\",\n                            \"postalCode\": \"E14 4AB\"\n                        }],\n                    \"country\": \"GB\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"fullName\": \"John Doe\",\n                    \"phone-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"MOBILE\",\n                            \"primary\": true,\n                            \"number\": \"07717 371949\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"LAND_LINE\",\n                            \"primary\": false,\n                            \"number\": \"02920 671937\"\n                        }],\n                    \"electronic-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"E_MAIL\",\n                            \"primary\": true,\n                            \"address\": \"test@tester.com\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"PERSONAL\",\n                            \"primary\": false,\n                            \"address\": \"test_personal@tester.com\"\n                        }],\n                    \"postal-addresses\": [{\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n                            \"type\": \"BUSINESS\",\n                            \"primary\": false,\n                            \"addressLine\": \"The Bonded Warehouse\",\n                            \"streetName\": \"Atlantic Wharf\",\n                            \"townName\": \"Cardiff\",\n                            \"postalCode\": \"CF10 4HE\",\n                            \"country\": \"GB\"\n                        }, {\n                            \"key\": \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n                            \"type\": \"HOME\",\n                            \"primary\": true,\n                            \"addressLine\": \"2 Hertsmere Rd\",\n                            \"streetName\": \"Canary Wharf\",\n                            \"townName\": \"London\",\n                            \"postalCode\": \"E14 4AB\",\n                            \"country\": \"GB\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/me/profile\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nexport { COLLECTION_FORMATS, CONFIG_TOKEN, GetIdentity, GetPendingApproval, IdentityManagementService, IdentityManagementServiceChangePasswordMocksProvider, IdentityManagementServiceCreateIdentityMocksProvider, IdentityManagementServiceGetIdentitiesMocksProvider, IdentityManagementServiceGetIdentityMocksProvider, IdentityManagementServiceGetIdentityPendingApprovalsMocksProvider, IdentityManagementServiceGetSessionsMocksProvider, IdentityManagementServiceLogoutSessionsMocksProvider, IdentityManagementServiceMocksProvider, IdentityManagementServiceRevokeIdentityAccessMocksProvider, IdentityManagementServiceSendRequiredActionsMocksProvider, IdentityManagementServiceUpdateIdentityMocksProvider, IdentityManagementServiceUpdateIdentityStatusMocksProvider, USER_BASE_PATH, UserApiModule, UserApprovalsService, UserApprovalsServiceApproveApprovalMocksProvider, UserApprovalsServiceGetApprovalDetailsMocksProvider, UserApprovalsServiceMocksProvider, UserApprovalsServiceRejectApprovalMocksProvider, UserConfiguration, UserManagementService, UserManagementServiceCheckUserExistsMocksProvider, UserManagementServiceGetLegalEntityByExternalIdMocksProvider, UserManagementServiceGetOwnUserMocksProvider, UserManagementServiceGetUserByExternalIdMocksProvider, UserManagementServiceGetUserByIdMocksProvider, UserManagementServiceGetUsersByLegalEntityIdsMocksProvider, UserManagementServiceGetUsersMocksProvider, UserManagementServiceMocksProvider, UserManagementServiceUpdateOwnLanguageMocksProvider, UserProfileManagementService, UserProfileManagementServiceAddElectronicAddressMocksProvider, UserProfileManagementServiceAddOwnElectronicAddressMocksProvider, UserProfileManagementServiceAddOwnPhoneAddressMocksProvider, UserProfileManagementServiceAddOwnPostalAddressMocksProvider, UserProfileManagementServiceAddPhoneAddressMocksProvider, UserProfileManagementServiceAddPostalAddressMocksProvider, UserProfileManagementServiceDeleteElectronicAddressMocksProvider, UserProfileManagementServiceDeleteOwnElectronicAddressMocksProvider, UserProfileManagementServiceDeleteOwnPhoneAddressMocksProvider, UserProfileManagementServiceDeleteOwnPostalAddressMocksProvider, UserProfileManagementServiceDeletePhoneAddressMocksProvider, UserProfileManagementServiceDeletePostalAddressMocksProvider, UserProfileManagementServiceGetElectronicAddressMocksProvider, UserProfileManagementServiceGetElectronicAddressesMocksProvider, UserProfileManagementServiceGetOwnElectronicAddressMocksProvider, UserProfileManagementServiceGetOwnElectronicAddressesMocksProvider, UserProfileManagementServiceGetOwnPhoneAddressMocksProvider, UserProfileManagementServiceGetOwnPhoneAddressesMocksProvider, UserProfileManagementServiceGetOwnPostalAddressMocksProvider, UserProfileManagementServiceGetOwnPostalAddressesMocksProvider, UserProfileManagementServiceGetOwnUserProfileMocksProvider, UserProfileManagementServiceGetPhoneAddressMocksProvider, UserProfileManagementServiceGetPhoneAddressesMocksProvider, UserProfileManagementServiceGetPostalAddressMocksProvider, UserProfileManagementServiceGetPostalAddressesMocksProvider, UserProfileManagementServiceGetUserProfileMocksProvider, UserProfileManagementServiceMocksProvider, UserProfileManagementServiceReplaceOwnUserProfileAttributesMocksProvider, UserProfileManagementServiceReplaceUserProfileAttributesMocksProvider, UserProfileManagementServiceUpdateElectronicAddressMocksProvider, UserProfileManagementServiceUpdateOwnElectronicAddressMocksProvider, UserProfileManagementServiceUpdateOwnPhoneAddressMocksProvider, UserProfileManagementServiceUpdateOwnPostalAddressMocksProvider, UserProfileManagementServiceUpdatePhoneAddressMocksProvider, UserProfileManagementServiceUpdatePostalAddressMocksProvider };\n"]},"metadata":{},"sourceType":"module"}