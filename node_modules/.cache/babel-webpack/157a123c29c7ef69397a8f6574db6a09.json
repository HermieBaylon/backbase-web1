{"ast":null,"code":"import * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, Inject, Input, forwardRef, ChangeDetectorRef, ContentChildren, NgModule } from '@angular/core';\nimport * as i2 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i4 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { InputBaseComponent, BaseClassesModule } from '@backbase/ui-ang/base-classes';\nimport * as i5 from '@backbase/ui-ang/focus';\nimport { FocusModule } from '@backbase/ui-ang/focus';\nimport * as i1 from '@backbase/foundation-ang/future';\n\nfunction DropdownSingleSelectComponent_label_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"for\", ctx_r0.id);\n    i0.ɵɵattribute(\"data-role\", \"label\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.label);\n  }\n}\n\nfunction DropdownSingleSelectComponent_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.placeholder, \" \");\n  }\n}\n\nfunction DropdownSingleSelectComponent_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.placeholder, \" \");\n  }\n}\n\nfunction DropdownSingleSelectComponent_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r5 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngValue\", option_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.getOptionDisplayText(option_r5), \" \");\n  }\n}\n\nfunction DropdownSingleSelectComponent_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", option_r6.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r6.label, \" \");\n  }\n}\n\nconst BB_DROPDOWN_CHANGE_DETECTION_REF_TOKEN = new InjectionToken('BB_DROPDOWN_SINGLE_SELECT');\n/**\n * @name DropdownSingleSelectOption\n *\n * @description\n * Component that represents a single option that is part of the dropdown single select component.\n */\n\nclass DropdownSingleSelectOptionComponent {\n  constructor(dropdownCDRef) {\n    this.dropdownCDRef = dropdownCDRef;\n  } // NOTES: trigger of detectChanges is needed\n  // because DropdownSingleSelectComponent has changeDetection\n  // strategy onPush, hence it reacts only to changes\n  // of its own @Inputs, but not @Inputs() of options component\n\n\n  ngOnChanges({\n    value = {},\n    label = {}\n  }) {\n    const {\n      firstChange: firstChangeValue\n    } = value;\n    const {\n      firstChange: firstChangeLabel\n    } = label;\n\n    if (firstChangeLabel && firstChangeValue) {\n      return;\n    }\n\n    this.dropdownCDRef.detectChanges();\n  }\n\n}\n\nDropdownSingleSelectOptionComponent.ɵfac = function DropdownSingleSelectOptionComponent_Factory(t) {\n  return new (t || DropdownSingleSelectOptionComponent)(i0.ɵɵdirectiveInject(BB_DROPDOWN_CHANGE_DETECTION_REF_TOKEN));\n};\n\nDropdownSingleSelectOptionComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DropdownSingleSelectOptionComponent,\n  selectors: [[\"bb-dropdown-single-select-option-ui\"]],\n  inputs: {\n    value: \"value\",\n    label: \"label\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function DropdownSingleSelectOptionComponent_Template(rf, ctx) {},\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownSingleSelectOptionComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-dropdown-single-select-option-ui',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: ''\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [BB_DROPDOWN_CHANGE_DETECTION_REF_TOKEN]\n      }]\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @name DropdownSingleSelectComponent\n *\n * @description\n * Component that displays a dropdown with a single select option.\n *\n * @a11y Current component provides option to pass needed accessibility\n * attributes. You need to take care of properties that are required in your case :\n *  - aria-label will be linked to the single select dropdown with label\n *  - set aria-labelledby with ID of another element in the DOM as dropdown's label.\n *  - set aria-describedby with ID of another element in the DOM with descriptive text about the dropdown\n *  - set aria-expanded with a boolean value based on the listbox display.\n *  - set aria-invalid to true when a selected option is not valid ans vice versa\n *  - aria-owns handles contextual relationship between a parent and its child elements,\n *    in this case between dropdown menu and dropdown items, use the id from the input binding.\n *\n */\n\n\nclass DropdownSingleSelectComponent extends InputBaseComponent {\n  constructor(cd, deprecationsService) {\n    super(cd, deprecationsService);\n    this.cd = cd;\n    this.deprecationsService = deprecationsService;\n    /**\n     * The placeholder for the select. Defaults to an empty string;\n     */\n\n    this.placeholder = '';\n    /**\n     * This Boolean attribute determine if default option as placeholder is displayed. Defaults to false.\n     */\n\n    this.defaultOptionAsPlaceholder = false;\n    /**\n     * The value for the input field. It can be a list of strings or list of objects.\n     * If the value is a list of objects, you have to provide the `displayAttributePath` property.\n     */\n\n    this.options = []; // TODO: after backbase-theme-v2 released. Change default value to 'corner-down'.\n\n    /**\n     * Right corner icon name.\n     * Default name 'toggle-down'\n     */\n\n    this.iconName = 'toggle-down';\n    /**\n     * Allowing override the option comparison algorithm for tracking identities when\n     * checking for change\n     */\n\n    this.compareWithFn = (a, b) => a === b;\n  }\n\n  getOptionDisplayText(option) {\n    return this.displayAttributePath && typeof option === 'object' && option !== null ? this.resolvePath(this.displayAttributePath, option) : option;\n  }\n\n  resolvePath(path, object) {\n    if (!object && !path) {\n      return '';\n    }\n\n    let paths;\n    let propName;\n\n    if (path.match(/^\\[\\d\\]/) !== null) {\n      paths = path.replace(/^[\\[\\]]/g, '').split(/\\./);\n      propName = paths[0].replace(/\\]/, '')[0];\n    } else {\n      paths = path.split(/[\\.\\[]/);\n      propName = paths[0];\n    }\n\n    const remainingPath = paths.slice(1).reduce((result, item) => {\n      if (item) {\n        if (item.match(/^\\d\\]/)) {\n          item = '[' + item;\n        }\n\n        result.push(item);\n      }\n\n      return result;\n    }, []).join('.');\n\n    if (!remainingPath) {\n      const propValue = object[propName];\n      return typeof propValue === 'string' ? propValue : propValue ? String(propValue) : '';\n    } else if (object.hasOwnProperty(propName)) {\n      return this.resolvePath(remainingPath, object[propName]);\n    } else {\n      return '';\n    }\n  }\n\n  trackByFn(index, item) {\n    return item.value;\n  }\n\n}\n\nDropdownSingleSelectComponent.ɵfac = function DropdownSingleSelectComponent_Factory(t) {\n  return new (t || DropdownSingleSelectComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.DeprecationsService));\n};\n\nDropdownSingleSelectComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DropdownSingleSelectComponent,\n  selectors: [[\"bb-dropdown-single-select-ui\"]],\n  contentQueries: function DropdownSingleSelectComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, DropdownSingleSelectOptionComponent, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentOptions = _t);\n    }\n  },\n  inputs: {\n    placeholder: \"placeholder\",\n    defaultOptionAsPlaceholder: \"defaultOptionAsPlaceholder\",\n    options: \"options\",\n    displayAttributePath: \"displayAttributePath\",\n    iconName: \"iconName\",\n    compareWithFn: \"compareWithFn\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DropdownSingleSelectComponent),\n    multi: true\n  }, {\n    provide: BB_DROPDOWN_CHANGE_DETECTION_REF_TOKEN,\n    useExisting: ChangeDetectorRef\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 8,\n  vars: 21,\n  consts: [[\"class\", \"bb-dropdown-single-select__label\", 3, \"for\", 4, \"ngIf\"], [1, \"form-control\", \"bb-dropdown__select\", 3, \"ngModel\", \"compareWith\", \"disabled\", \"required\", \"id\", \"bbFocus\", \"ngModelChange\", \"blur\", \"change\", \"focus\"], [\"value\", \"\", 4, \"ngIf\"], [\"class\", \"bb-dropdown-single-select__option-hidden\", \"value\", \"\", \"disabled\", \"\", \"hidden\", \"\", 4, \"ngIf\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"bb-dropdown__icon\"], [\"color\", \"muted\", \"size\", \"md\", 3, \"name\"], [1, \"bb-dropdown-single-select__label\", 3, \"for\"], [\"value\", \"\"], [\"value\", \"\", \"disabled\", \"\", \"hidden\", \"\", 1, \"bb-dropdown-single-select__option-hidden\"], [3, \"ngValue\"]],\n  template: function DropdownSingleSelectComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DropdownSingleSelectComponent_label_0_Template, 2, 3, \"label\", 0);\n      i0.ɵɵelementStart(1, \"select\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function DropdownSingleSelectComponent_Template_select_ngModelChange_1_listener($event) {\n        return ctx.value = $event;\n      })(\"blur\", function DropdownSingleSelectComponent_Template_select_blur_1_listener() {\n        return ctx.onBlur();\n      })(\"change\", function DropdownSingleSelectComponent_Template_select_change_1_listener() {\n        return ctx.onValueChange();\n      })(\"focus\", function DropdownSingleSelectComponent_Template_select_focus_1_listener() {\n        return ctx.onFocus();\n      });\n      i0.ɵɵtemplate(2, DropdownSingleSelectComponent_option_2_Template, 2, 1, \"option\", 2);\n      i0.ɵɵtemplate(3, DropdownSingleSelectComponent_option_3_Template, 2, 1, \"option\", 3);\n      i0.ɵɵtemplate(4, DropdownSingleSelectComponent_option_4_Template, 2, 2, \"option\", 4);\n      i0.ɵɵtemplate(5, DropdownSingleSelectComponent_option_5_Template, 2, 2, \"option\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 6);\n      i0.ɵɵelement(7, \"bb-icon-ui\", 7);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"id\", ctx.id);\n      i0.ɵɵproperty(\"ngModel\", ctx.value)(\"compareWith\", ctx.compareWithFn)(\"disabled\", ctx.disabled)(\"required\", ctx.required)(\"bbFocus\", ctx.autofocus);\n      i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby)(\"aria-expanded\", ctx.ariaExpanded)(\"role\", ctx.role)(\"aria-invalid\", ctx.ariaInvalid)(\"aria-owns\", ctx.ariaOwns)(\"data-role\", \"dropdown\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.defaultOptionAsPlaceholder && ctx.placeholder);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.defaultOptionAsPlaceholder && ctx.placeholder);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.options);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.contentOptions)(\"ngForTrackBy\", ctx.trackByFn);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"name\", ctx.iconName);\n    }\n  },\n  directives: [i3.NgIf, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel, i4.RequiredValidator, i5.FocusDirective, i3.NgForOf, i2.IconComponent, i4.NgSelectOption, i4.ɵNgSelectMultipleOption],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownSingleSelectComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-dropdown-single-select-ui',\n      templateUrl: './dropdown-single-select.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => DropdownSingleSelectComponent),\n        multi: true\n      }, {\n        provide: BB_DROPDOWN_CHANGE_DETECTION_REF_TOKEN,\n        useExisting: ChangeDetectorRef\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.DeprecationsService\n    }];\n  }, {\n    placeholder: [{\n      type: Input\n    }],\n    defaultOptionAsPlaceholder: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    contentOptions: [{\n      type: ContentChildren,\n      args: [DropdownSingleSelectOptionComponent]\n    }],\n    displayAttributePath: [{\n      type: Input\n    }],\n    iconName: [{\n      type: Input\n    }],\n    compareWithFn: [{\n      type: Input\n    }]\n  });\n})();\n\nclass DropdownSingleSelectModule {}\n\nDropdownSingleSelectModule.ɵfac = function DropdownSingleSelectModule_Factory(t) {\n  return new (t || DropdownSingleSelectModule)();\n};\n\nDropdownSingleSelectModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DropdownSingleSelectModule\n});\nDropdownSingleSelectModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, IconModule, FormsModule, BaseClassesModule, FocusModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownSingleSelectModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, IconModule, FormsModule, BaseClassesModule, FocusModule],\n      declarations: [DropdownSingleSelectComponent, DropdownSingleSelectOptionComponent],\n      exports: [DropdownSingleSelectComponent, DropdownSingleSelectOptionComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DropdownSingleSelectComponent, DropdownSingleSelectModule, DropdownSingleSelectOptionComponent };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-dropdown-single-select.js"],"names":["i3","CommonModule","i0","InjectionToken","Component","ChangeDetectionStrategy","Inject","Input","forwardRef","ChangeDetectorRef","ContentChildren","NgModule","i2","IconModule","i4","NG_VALUE_ACCESSOR","FormsModule","InputBaseComponent","BaseClassesModule","i5","FocusModule","i1","BB_DROPDOWN_CHANGE_DETECTION_REF_TOKEN","DropdownSingleSelectOptionComponent","constructor","dropdownCDRef","ngOnChanges","value","label","firstChange","firstChangeValue","firstChangeLabel","detectChanges","ɵfac","ɵcmp","type","args","selector","changeDetection","OnPush","template","decorators","DropdownSingleSelectComponent","cd","deprecationsService","placeholder","defaultOptionAsPlaceholder","options","iconName","compareWithFn","a","b","getOptionDisplayText","option","displayAttributePath","resolvePath","path","object","paths","propName","match","replace","split","remainingPath","slice","reduce","result","item","push","join","propValue","String","hasOwnProperty","trackByFn","index","DeprecationsService","provide","useExisting","multi","NgIf","SelectControlValueAccessor","NgControlStatus","NgModel","RequiredValidator","FocusDirective","NgForOf","IconComponent","NgSelectOption","ɵNgSelectMultipleOption","templateUrl","providers","contentOptions","DropdownSingleSelectModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, Inject, Input, forwardRef, ChangeDetectorRef, ContentChildren, NgModule } from '@angular/core';\nimport * as i2 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i4 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { InputBaseComponent, BaseClassesModule } from '@backbase/ui-ang/base-classes';\nimport * as i5 from '@backbase/ui-ang/focus';\nimport { FocusModule } from '@backbase/ui-ang/focus';\nimport * as i1 from '@backbase/foundation-ang/future';\n\nconst BB_DROPDOWN_CHANGE_DETECTION_REF_TOKEN = new InjectionToken('BB_DROPDOWN_SINGLE_SELECT');\n/**\n * @name DropdownSingleSelectOption\n *\n * @description\n * Component that represents a single option that is part of the dropdown single select component.\n */\nclass DropdownSingleSelectOptionComponent {\n    constructor(dropdownCDRef) {\n        this.dropdownCDRef = dropdownCDRef;\n    }\n    // NOTES: trigger of detectChanges is needed\n    // because DropdownSingleSelectComponent has changeDetection\n    // strategy onPush, hence it reacts only to changes\n    // of its own @Inputs, but not @Inputs() of options component\n    ngOnChanges({ value = {}, label = {} }) {\n        const { firstChange: firstChangeValue } = value;\n        const { firstChange: firstChangeLabel } = label;\n        if (firstChangeLabel && firstChangeValue) {\n            return;\n        }\n        this.dropdownCDRef.detectChanges();\n    }\n}\nDropdownSingleSelectOptionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownSingleSelectOptionComponent, deps: [{ token: BB_DROPDOWN_CHANGE_DETECTION_REF_TOKEN }], target: i0.ɵɵFactoryTarget.Component });\nDropdownSingleSelectOptionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DropdownSingleSelectOptionComponent, selector: \"bb-dropdown-single-select-option-ui\", inputs: { value: \"value\", label: \"label\" }, usesOnChanges: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownSingleSelectOptionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-dropdown-single-select-option-ui',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef, decorators: [{\n                    type: Inject,\n                    args: [BB_DROPDOWN_CHANGE_DETECTION_REF_TOKEN]\n                }] }]; }, propDecorators: { value: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }] } });\n\n/**\n * @name DropdownSingleSelectComponent\n *\n * @description\n * Component that displays a dropdown with a single select option.\n *\n * @a11y Current component provides option to pass needed accessibility\n * attributes. You need to take care of properties that are required in your case :\n *  - aria-label will be linked to the single select dropdown with label\n *  - set aria-labelledby with ID of another element in the DOM as dropdown's label.\n *  - set aria-describedby with ID of another element in the DOM with descriptive text about the dropdown\n *  - set aria-expanded with a boolean value based on the listbox display.\n *  - set aria-invalid to true when a selected option is not valid ans vice versa\n *  - aria-owns handles contextual relationship between a parent and its child elements,\n *    in this case between dropdown menu and dropdown items, use the id from the input binding.\n *\n */\nclass DropdownSingleSelectComponent extends InputBaseComponent {\n    constructor(cd, deprecationsService) {\n        super(cd, deprecationsService);\n        this.cd = cd;\n        this.deprecationsService = deprecationsService;\n        /**\n         * The placeholder for the select. Defaults to an empty string;\n         */\n        this.placeholder = '';\n        /**\n         * This Boolean attribute determine if default option as placeholder is displayed. Defaults to false.\n         */\n        this.defaultOptionAsPlaceholder = false;\n        /**\n         * The value for the input field. It can be a list of strings or list of objects.\n         * If the value is a list of objects, you have to provide the `displayAttributePath` property.\n         */\n        this.options = [];\n        // TODO: after backbase-theme-v2 released. Change default value to 'corner-down'.\n        /**\n         * Right corner icon name.\n         * Default name 'toggle-down'\n         */\n        this.iconName = 'toggle-down';\n        /**\n         * Allowing override the option comparison algorithm for tracking identities when\n         * checking for change\n         */\n        this.compareWithFn = (a, b) => a === b;\n    }\n    getOptionDisplayText(option) {\n        return this.displayAttributePath && typeof option === 'object' && option !== null\n            ? this.resolvePath(this.displayAttributePath, option)\n            : option;\n    }\n    resolvePath(path, object) {\n        if (!object && !path) {\n            return '';\n        }\n        let paths;\n        let propName;\n        if (path.match(/^\\[\\d\\]/) !== null) {\n            paths = path.replace(/^[\\[\\]]/g, '').split(/\\./);\n            propName = paths[0].replace(/\\]/, '')[0];\n        }\n        else {\n            paths = path.split(/[\\.\\[]/);\n            propName = paths[0];\n        }\n        const remainingPath = paths\n            .slice(1)\n            .reduce((result, item) => {\n            if (item) {\n                if (item.match(/^\\d\\]/)) {\n                    item = '[' + item;\n                }\n                result.push(item);\n            }\n            return result;\n        }, [])\n            .join('.');\n        if (!remainingPath) {\n            const propValue = object[propName];\n            return typeof propValue === 'string' ? propValue : propValue ? String(propValue) : '';\n        }\n        else if (object.hasOwnProperty(propName)) {\n            return this.resolvePath(remainingPath, object[propName]);\n        }\n        else {\n            return '';\n        }\n    }\n    trackByFn(index, item) {\n        return item.value;\n    }\n}\nDropdownSingleSelectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownSingleSelectComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DeprecationsService }], target: i0.ɵɵFactoryTarget.Component });\nDropdownSingleSelectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DropdownSingleSelectComponent, selector: \"bb-dropdown-single-select-ui\", inputs: { placeholder: \"placeholder\", defaultOptionAsPlaceholder: \"defaultOptionAsPlaceholder\", options: \"options\", displayAttributePath: \"displayAttributePath\", iconName: \"iconName\", compareWithFn: \"compareWithFn\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DropdownSingleSelectComponent),\n            multi: true,\n        },\n        {\n            provide: BB_DROPDOWN_CHANGE_DETECTION_REF_TOKEN,\n            useExisting: ChangeDetectorRef,\n        },\n    ], queries: [{ propertyName: \"contentOptions\", predicate: DropdownSingleSelectOptionComponent }], usesInheritance: true, ngImport: i0, template: \"<label *ngIf=\\\"label\\\" class=\\\"bb-dropdown-single-select__label\\\" for=\\\"{{ id }}\\\" [attr.data-role]=\\\"'label'\\\">{{\\n  label\\n}}</label>\\n<!-- Note: in HTML readonly is not supported for <select> like it is for <input> elements -->\\n<select\\n  [(ngModel)]=\\\"value\\\"\\n  class=\\\"form-control bb-dropdown__select\\\"\\n  (blur)=\\\"onBlur()\\\"\\n  (change)=\\\"onValueChange()\\\"\\n  (focus)=\\\"onFocus()\\\"\\n  [compareWith]=\\\"compareWithFn\\\"\\n  [attr.aria-label]=\\\"ariaLabel\\\"\\n  [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n  [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n  [attr.aria-expanded]=\\\"ariaExpanded\\\"\\n  [attr.role]=\\\"role\\\"\\n  [attr.aria-invalid]=\\\"ariaInvalid\\\"\\n  [attr.aria-owns]=\\\"ariaOwns\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [required]=\\\"required\\\"\\n  id=\\\"{{ id }}\\\"\\n  [bbFocus]=\\\"autofocus\\\"\\n  [attr.data-role]=\\\"'dropdown'\\\"\\n>\\n  <option *ngIf=\\\"defaultOptionAsPlaceholder && placeholder\\\" value=\\\"\\\">\\n    {{ placeholder }}\\n  </option>\\n  <option\\n    class=\\\"bb-dropdown-single-select__option-hidden\\\"\\n    *ngIf=\\\"!defaultOptionAsPlaceholder && placeholder\\\"\\n    value=\\\"\\\"\\n    disabled\\n    hidden\\n  >\\n    {{ placeholder }}\\n  </option>\\n  <option *ngFor=\\\"let option of options\\\" [ngValue]=\\\"option\\\">\\n    {{ getOptionDisplayText(option) }}\\n  </option>\\n  <option *ngFor=\\\"let option of contentOptions; trackBy: trackByFn\\\" [ngValue]=\\\"option.value\\\">\\n    {{ option.label }}\\n  </option>\\n</select>\\n<div class=\\\"bb-dropdown__icon\\\">\\n  <bb-icon-ui color=\\\"muted\\\" [name]=\\\"iconName\\\" size=\\\"md\\\"></bb-icon-ui>\\n</div>\\n\", components: [{ type: i2.IconComponent, selector: \"bb-icon-ui\", inputs: [\"name\", \"inverse\", \"size\", \"color\", \"animate\", \"aria-label\", \"cropped\", \"backgroundType\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i4.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { type: i5.FocusDirective, selector: \"[bbFocus]\", inputs: [\"bbFocus\"], exportAs: [\"bbFocus\"] }, { type: i4.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i4.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownSingleSelectComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-dropdown-single-select-ui',\n                    templateUrl: './dropdown-single-select.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => DropdownSingleSelectComponent),\n                            multi: true,\n                        },\n                        {\n                            provide: BB_DROPDOWN_CHANGE_DETECTION_REF_TOKEN,\n                            useExisting: ChangeDetectorRef,\n                        },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DeprecationsService }]; }, propDecorators: { placeholder: [{\n                type: Input\n            }], defaultOptionAsPlaceholder: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], contentOptions: [{\n                type: ContentChildren,\n                args: [DropdownSingleSelectOptionComponent]\n            }], displayAttributePath: [{\n                type: Input\n            }], iconName: [{\n                type: Input\n            }], compareWithFn: [{\n                type: Input\n            }] } });\n\nclass DropdownSingleSelectModule {\n}\nDropdownSingleSelectModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownSingleSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDropdownSingleSelectModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownSingleSelectModule, declarations: [DropdownSingleSelectComponent, DropdownSingleSelectOptionComponent], imports: [CommonModule, IconModule, FormsModule, BaseClassesModule, FocusModule], exports: [DropdownSingleSelectComponent, DropdownSingleSelectOptionComponent] });\nDropdownSingleSelectModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownSingleSelectModule, imports: [[CommonModule, IconModule, FormsModule, BaseClassesModule, FocusModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropdownSingleSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, IconModule, FormsModule, BaseClassesModule, FocusModule],\n                    declarations: [DropdownSingleSelectComponent, DropdownSingleSelectOptionComponent],\n                    exports: [DropdownSingleSelectComponent, DropdownSingleSelectOptionComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DropdownSingleSelectComponent, DropdownSingleSelectModule, DropdownSingleSelectOptionComponent };\n"]},"metadata":{},"sourceType":"module"}