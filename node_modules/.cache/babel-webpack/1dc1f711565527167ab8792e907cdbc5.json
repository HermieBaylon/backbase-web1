{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, HostBinding, HostListener, ContentChild, ContentChildren, ElementRef, NgModule } from '@angular/core';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { merge, Subject } from 'rxjs';\nimport { DropdownMenuToken, DropdownMenuOptionToken } from '@backbase/ui-ang/dropdown-menu';\nimport { getKeyCode, KEY_CODES } from '@backbase/ui-ang/util';\n/**\n * @name TableDirective\n *\n * @description\n * Directive that displays a table.\n *\n * @a11y\n * The table directive doesn't provide any specific properties for accessibility.\n * But aria-sort tag can be set on the sortable header cells with ascending and descending values.\n *\n */\n\nclass TableDirective {\n  constructor() {\n    /**\n     * An event emitter for on select row action.\n     */\n    this.selectRow = new EventEmitter();\n    /**\n     * An event emitter for on row click action.\n     */\n\n    this.rowClick = new EventEmitter();\n    /**\n     * An event emitter for on column sort action.\n     */\n\n    this.sort = new EventEmitter();\n    this.selectedRows = new Set();\n    this.headers = new Set();\n  }\n\n  registerHeader(header) {\n    this.headers.add(header);\n  }\n\n  unRegisterHeader(header) {\n    this.headers.delete(header);\n  }\n\n  onRowClick(rowItem) {\n    this.rowClick.emit(rowItem);\n  }\n\n  isSelected(row) {\n    return this.selectedRows.has(row);\n  }\n\n  toggleItem(row, isChecked) {\n    if (isChecked) {\n      this.selectedRows.add(row);\n    } else {\n      this.selectedRows.delete(row);\n    }\n\n    this.selectRow.emit(this.selectedRows);\n  }\n\n  toggleAllItems() {\n    if (this.isSelectedAll()) {\n      this.selectedRows = new Set();\n    } else {\n      this.selectedRows = new Set(this.dataSource);\n    }\n\n    this.selectRow.emit(this.selectedRows);\n  }\n\n  isSelectedAll() {\n    if (this.dataSource) {\n      const matches = this.dataSource.filter(item => this.selectedRows.has(item));\n      return matches.length === this.dataSource.length;\n    }\n\n    return false;\n  }\n\n  isSelectedPart() {\n    if (this.dataSource) {\n      return this.selectedRows.size > 0 && this.selectedRows.size < this.dataSource.length;\n    }\n\n    return false;\n  }\n\n  onSort(sortEvent) {\n    this.headers.forEach(header => {\n      if (header.bbSortable !== sortEvent.column) {\n        header.direction = '';\n        header.markAllMenuOptionAsInactive();\n      }\n    });\n    this.sort.emit(sortEvent);\n  }\n\n}\n\nTableDirective.ɵfac = function TableDirective_Factory(t) {\n  return new (t || TableDirective)();\n};\n\nTableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TableDirective,\n  selectors: [[\"table\", \"bbTable\", \"\"]],\n  inputs: {\n    dataSource: [\"bbTable\", \"dataSource\"]\n  },\n  outputs: {\n    selectRow: \"selectRow\",\n    rowClick: \"rowClick\",\n    sort: \"sort\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'table[bbTable]'\n    }]\n  }], null, {\n    dataSource: [{\n      type: Input,\n      args: ['bbTable']\n    }],\n    selectRow: [{\n      type: Output\n    }],\n    rowClick: [{\n      type: Output\n    }],\n    sort: [{\n      type: Output\n    }]\n  });\n})();\n\nclass TableRowDirective {\n  constructor(parentTable) {\n    this.parentTable = parentTable;\n  }\n\n  get selected() {\n    return this.parentTable.isSelected(this.bbRow);\n  }\n\n  onRowClick() {\n    this.parentTable.onRowClick(this.bbRow);\n  }\n\n}\n\nTableRowDirective.ɵfac = function TableRowDirective_Factory(t) {\n  return new (t || TableRowDirective)(i0.ɵɵdirectiveInject(TableDirective));\n};\n\nTableRowDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TableRowDirective,\n  selectors: [[\"tr\", \"bbRow\", \"\"]],\n  hostVars: 2,\n  hostBindings: function TableRowDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function TableRowDirective_click_HostBindingHandler() {\n        return ctx.onRowClick();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"selected\", ctx.selected);\n    }\n  },\n  inputs: {\n    bbRow: \"bbRow\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableRowDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'tr[bbRow]'\n    }]\n  }], function () {\n    return [{\n      type: TableDirective\n    }];\n  }, {\n    bbRow: [{\n      type: Input\n    }],\n    selected: [{\n      type: HostBinding,\n      args: ['class.selected']\n    }],\n    onRowClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\n\nconst rotate = {\n  asc: 'desc',\n  desc: '',\n  '': 'asc'\n};\n\nclass TableSortableDirective {\n  constructor(parentTable, renderer) {\n    this.parentTable = parentTable;\n    this.renderer = renderer;\n    /**\n     * The current sort direction. Accepts one of the values of 'asc', 'desc' or ''\n     */\n\n    this.direction = '';\n    /**\n     * An event emitter for on sort actions.\n     */\n\n    this.sort = new EventEmitter();\n    this.sortable = true;\n    this.parentTable.registerHeader(this);\n  }\n\n  get asc() {\n    return this.direction === 'asc';\n  }\n\n  get desc() {\n    return this.direction === 'desc';\n  }\n\n  rotate() {\n    if (this.dropdown) {\n      return;\n    }\n\n    this.emitSortEvent();\n  }\n\n  ngAfterViewInit() {\n    if (this.dropdown) {\n      this.presetDropdown(this.dropdown);\n    }\n\n    this.getMenuOptionSelectionChanges(this.bbMenuOptions).subscribe(menuOption => this.onMenuOptionSelect(menuOption));\n  }\n\n  onMenuOptionSelect(menuOption) {\n    var _a;\n\n    const columnValue = menuOption.bbDropdownMenuOption;\n    const activeMenuOption = (_a = this.bbMenuOptions) === null || _a === void 0 ? void 0 : _a.find(option => option.active); // Reset currently active item\n\n    if (activeMenuOption) {\n      activeMenuOption.active = false;\n    } // If same menu item is not clicked, then reset the direction for new menuitem\n\n\n    if (activeMenuOption && columnValue !== activeMenuOption.bbDropdownMenuOption) {\n      this.direction = '';\n    }\n\n    this.bbSortable = menuOption.bbDropdownMenuOption;\n    this.emitSortEvent();\n    this.markMenuOptionAsActive(menuOption);\n    this.updateAriaSortAttribute();\n  }\n  /** Notify table with new sorting params */\n\n\n  emitSortEvent() {\n    if (this.bbSortable) {\n      this.direction = rotate[this.direction];\n      this.parentTable.onSort({\n        column: this.bbSortable,\n        direction: this.direction\n      });\n    }\n  }\n  /** Combined stream of all of the bbTableMenuitem selectionChange events. */\n\n\n  getMenuOptionSelectionChanges(menuOptions) {\n    return menuOptions.changes.pipe(switchMap(_ => merge(...menuOptions.map(menuOption => menuOption.selectionChange))));\n  }\n  /** mark the new menuitem as active only if sorting order is asc/desc */\n\n\n  markMenuOptionAsActive(menuOption) {\n    if (this.direction !== '') {\n      menuOption.active = true;\n    }\n  }\n\n  markAllMenuOptionAsInactive() {\n    if (this.bbMenuOptions.length) {\n      this.bbMenuOptions.forEach(menuOption => menuOption.active = false);\n    }\n  }\n\n  updateAriaSortAttribute() {\n    var _a;\n\n    if (this.dropdown) {\n      const buttonEl = (_a = this.dropdown.buttonEl) === null || _a === void 0 ? void 0 : _a.nativeElement;\n\n      if (!this.direction) {\n        this.renderer.removeAttribute(buttonEl, 'aria-sort');\n      } else {\n        this.renderer.setAttribute(buttonEl, 'aria-sort', this.getAriaSortAttribute(this.direction));\n      }\n    }\n  }\n\n  getAriaSortAttribute(direction) {\n    return direction === 'asc' ? 'ascending' : 'descending';\n  }\n  /** Preset bb-dropdown button to add role for a11y and set full height and width of table column */\n\n\n  presetDropdown(dropdown) {\n    var _a;\n\n    const buttonEl = (_a = dropdown.buttonEl) === null || _a === void 0 ? void 0 : _a.nativeElement;\n    this.renderer.setAttribute(buttonEl, 'role', 'columnheader');\n    this.renderer.setStyle(buttonEl, 'height', '100%');\n    this.renderer.setStyle(buttonEl, 'width', '100%');\n  }\n\n  ngOnDestroy() {\n    this.parentTable.unRegisterHeader(this);\n  }\n\n}\n\nTableSortableDirective.ɵfac = function TableSortableDirective_Factory(t) {\n  return new (t || TableSortableDirective)(i0.ɵɵdirectiveInject(TableDirective), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nTableSortableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TableSortableDirective,\n  selectors: [[\"th\", \"bbSortable\", \"\"]],\n  contentQueries: function TableSortableDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, DropdownMenuToken, 5);\n      i0.ɵɵcontentQuery(dirIndex, DropdownMenuOptionToken, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdown = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.bbMenuOptions = _t);\n    }\n  },\n  hostVars: 6,\n  hostBindings: function TableSortableDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function TableSortableDirective_click_HostBindingHandler() {\n        return ctx.rotate();\n      })(\"keyup.enter\", function TableSortableDirective_keyup_enter_HostBindingHandler() {\n        return ctx.rotate();\n      })(\"keyup.space\", function TableSortableDirective_keyup_space_HostBindingHandler() {\n        return ctx.rotate();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"sortable\", ctx.sortable)(\"asc\", ctx.asc)(\"desc\", ctx.desc);\n    }\n  },\n  inputs: {\n    bbSortable: \"bbSortable\",\n    direction: \"direction\"\n  },\n  outputs: {\n    sort: \"sort\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableSortableDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'th[bbSortable]'\n    }]\n  }], function () {\n    return [{\n      type: TableDirective\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    bbSortable: [{\n      type: Input\n    }],\n    direction: [{\n      type: Input\n    }],\n    sort: [{\n      type: Output\n    }],\n    dropdown: [{\n      type: ContentChild,\n      args: [DropdownMenuToken]\n    }],\n    bbMenuOptions: [{\n      type: ContentChildren,\n      args: [DropdownMenuOptionToken, {\n        descendants: true\n      }]\n    }],\n    sortable: [{\n      type: HostBinding,\n      args: ['class.sortable']\n    }],\n    asc: [{\n      type: HostBinding,\n      args: ['class.asc']\n    }],\n    desc: [{\n      type: HostBinding,\n      args: ['class.desc']\n    }],\n    rotate: [{\n      type: HostListener,\n      args: ['click']\n    }, {\n      type: HostListener,\n      args: ['keyup.enter']\n    }, {\n      type: HostListener,\n      args: ['keyup.space']\n    }]\n  });\n})();\n\nclass TableFocusDirective {\n  constructor(renderer) {\n    this.renderer = renderer;\n    this.focusedItemIndex = -1;\n    this.focusFirstRowOnChanges = false;\n    this.destroy$ = new Subject();\n  }\n\n  onKeyEvent(event) {\n    switch (getKeyCode(event)) {\n      case KEY_CODES.DOWN:\n        this.focusedItemIndex = Math.min(this.focusedItemIndex + 1, this.listItems.length - 1);\n        this.focusItem();\n        event.preventDefault();\n        break;\n\n      case KEY_CODES.UP:\n        this.focusedItemIndex = Math.max(this.focusedItemIndex - 1, 0);\n        this.focusItem();\n        event.preventDefault();\n        break;\n\n      case KEY_CODES.ENTER:\n        const currentActiveItem = this.listItems.find((item, index) => index === this.focusedItemIndex);\n\n        if (currentActiveItem) {\n          currentActiveItem.nativeElement.click();\n          event.preventDefault();\n        }\n\n        break;\n    }\n  }\n\n  focusItem(focusNativeElement = true) {\n    this.listItems.forEach((el, index) => {\n      if (index === this.focusedItemIndex) {\n        this.renderer.addClass(el.nativeElement, 'active');\n        this.renderer.setAttribute(el.nativeElement, 'tabIndex', '0');\n\n        if (focusNativeElement) {\n          el.nativeElement.focus();\n        }\n      } else {\n        this.renderer.removeClass(el.nativeElement, 'active');\n        this.renderer.setAttribute(el.nativeElement, 'tabIndex', '-1');\n      }\n    });\n  }\n  /**\n   * @internal\n   */\n\n\n  ngAfterViewInit() {\n    // make first row in a table focusable\n    this.listItems.changes.pipe(takeUntil(this.destroy$)).subscribe(items => {\n      var _a;\n\n      if ((_a = items.first) === null || _a === void 0 ? void 0 : _a.nativeElement) {\n        this.focusedItemIndex = 0;\n        this.focusItem(this.focusFirstRowOnChanges);\n      }\n    });\n  }\n  /**\n   * @internal\n   */\n\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nTableFocusDirective.ɵfac = function TableFocusDirective_Factory(t) {\n  return new (t || TableFocusDirective)(i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nTableFocusDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TableFocusDirective,\n  selectors: [[\"\", \"bbTableFocus\", \"\"]],\n  contentQueries: function TableFocusDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, TableRowDirective, 1, ElementRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listItems = _t);\n    }\n  },\n  hostBindings: function TableFocusDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function TableFocusDirective_keydown_HostBindingHandler($event) {\n        return ctx.onKeyEvent($event);\n      });\n    }\n  },\n  inputs: {\n    focusFirstRowOnChanges: \"focusFirstRowOnChanges\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableFocusDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbTableFocus]'\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }];\n  }, {\n    listItems: [{\n      type: ContentChildren,\n      args: [TableRowDirective, {\n        read: ElementRef,\n        descendants: true,\n        emitDistinctChangesOnly: false\n      }]\n    }],\n    focusFirstRowOnChanges: [{\n      type: Input\n    }],\n    onKeyEvent: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }]\n  });\n})();\n\nconst directives = [TableRowDirective, TableDirective, TableSortableDirective, TableFocusDirective];\n\nclass TableModule {}\n\nTableModule.ɵfac = function TableModule_Factory(t) {\n  return new (t || TableModule)();\n};\n\nTableModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TableModule\n});\nTableModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [...directives],\n      exports: [...directives]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TableDirective, TableFocusDirective, TableModule, TableRowDirective, TableSortableDirective };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-table.js"],"names":["CommonModule","i0","EventEmitter","Directive","Input","Output","HostBinding","HostListener","ContentChild","ContentChildren","ElementRef","NgModule","switchMap","takeUntil","merge","Subject","DropdownMenuToken","DropdownMenuOptionToken","getKeyCode","KEY_CODES","TableDirective","constructor","selectRow","rowClick","sort","selectedRows","Set","headers","registerHeader","header","add","unRegisterHeader","delete","onRowClick","rowItem","emit","isSelected","row","has","toggleItem","isChecked","toggleAllItems","isSelectedAll","dataSource","matches","filter","item","length","isSelectedPart","size","onSort","sortEvent","forEach","bbSortable","column","direction","markAllMenuOptionAsInactive","ɵfac","ɵdir","type","args","selector","TableRowDirective","parentTable","selected","bbRow","rotate","asc","desc","TableSortableDirective","renderer","sortable","dropdown","emitSortEvent","ngAfterViewInit","presetDropdown","getMenuOptionSelectionChanges","bbMenuOptions","subscribe","menuOption","onMenuOptionSelect","_a","columnValue","bbDropdownMenuOption","activeMenuOption","find","option","active","markMenuOptionAsActive","updateAriaSortAttribute","menuOptions","changes","pipe","_","map","selectionChange","buttonEl","nativeElement","removeAttribute","setAttribute","getAriaSortAttribute","setStyle","ngOnDestroy","Renderer2","descendants","TableFocusDirective","focusedItemIndex","focusFirstRowOnChanges","destroy$","onKeyEvent","event","DOWN","Math","min","listItems","focusItem","preventDefault","UP","max","ENTER","currentActiveItem","index","click","focusNativeElement","el","addClass","focus","removeClass","items","first","next","complete","read","emitDistinctChangesOnly","directives","TableModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, HostBinding, HostListener, ContentChild, ContentChildren, ElementRef, NgModule } from '@angular/core';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { merge, Subject } from 'rxjs';\nimport { DropdownMenuToken, DropdownMenuOptionToken } from '@backbase/ui-ang/dropdown-menu';\nimport { getKeyCode, KEY_CODES } from '@backbase/ui-ang/util';\n\n/**\n * @name TableDirective\n *\n * @description\n * Directive that displays a table.\n *\n * @a11y\n * The table directive doesn't provide any specific properties for accessibility.\n * But aria-sort tag can be set on the sortable header cells with ascending and descending values.\n *\n */\nclass TableDirective {\n    constructor() {\n        /**\n         * An event emitter for on select row action.\n         */\n        this.selectRow = new EventEmitter();\n        /**\n         * An event emitter for on row click action.\n         */\n        this.rowClick = new EventEmitter();\n        /**\n         * An event emitter for on column sort action.\n         */\n        this.sort = new EventEmitter();\n        this.selectedRows = new Set();\n        this.headers = new Set();\n    }\n    registerHeader(header) {\n        this.headers.add(header);\n    }\n    unRegisterHeader(header) {\n        this.headers.delete(header);\n    }\n    onRowClick(rowItem) {\n        this.rowClick.emit(rowItem);\n    }\n    isSelected(row) {\n        return this.selectedRows.has(row);\n    }\n    toggleItem(row, isChecked) {\n        if (isChecked) {\n            this.selectedRows.add(row);\n        }\n        else {\n            this.selectedRows.delete(row);\n        }\n        this.selectRow.emit(this.selectedRows);\n    }\n    toggleAllItems() {\n        if (this.isSelectedAll()) {\n            this.selectedRows = new Set();\n        }\n        else {\n            this.selectedRows = new Set(this.dataSource);\n        }\n        this.selectRow.emit(this.selectedRows);\n    }\n    isSelectedAll() {\n        if (this.dataSource) {\n            const matches = this.dataSource.filter((item) => this.selectedRows.has(item));\n            return matches.length === this.dataSource.length;\n        }\n        return false;\n    }\n    isSelectedPart() {\n        if (this.dataSource) {\n            return this.selectedRows.size > 0 && this.selectedRows.size < this.dataSource.length;\n        }\n        return false;\n    }\n    onSort(sortEvent) {\n        this.headers.forEach((header) => {\n            if (header.bbSortable !== sortEvent.column) {\n                header.direction = '';\n                header.markAllMenuOptionAsInactive();\n            }\n        });\n        this.sort.emit(sortEvent);\n    }\n}\nTableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TableDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nTableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TableDirective, selector: \"table[bbTable]\", inputs: { dataSource: [\"bbTable\", \"dataSource\"] }, outputs: { selectRow: \"selectRow\", rowClick: \"rowClick\", sort: \"sort\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'table[bbTable]',\n                }]\n        }], propDecorators: { dataSource: [{\n                type: Input,\n                args: ['bbTable']\n            }], selectRow: [{\n                type: Output\n            }], rowClick: [{\n                type: Output\n            }], sort: [{\n                type: Output\n            }] } });\n\nclass TableRowDirective {\n    constructor(parentTable) {\n        this.parentTable = parentTable;\n    }\n    get selected() {\n        return this.parentTable.isSelected(this.bbRow);\n    }\n    onRowClick() {\n        this.parentTable.onRowClick(this.bbRow);\n    }\n}\nTableRowDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TableRowDirective, deps: [{ token: TableDirective }], target: i0.ɵɵFactoryTarget.Directive });\nTableRowDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TableRowDirective, selector: \"tr[bbRow]\", inputs: { bbRow: \"bbRow\" }, host: { listeners: { \"click\": \"onRowClick()\" }, properties: { \"class.selected\": \"this.selected\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TableRowDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'tr[bbRow]',\n                }]\n        }], ctorParameters: function () { return [{ type: TableDirective }]; }, propDecorators: { bbRow: [{\n                type: Input\n            }], selected: [{\n                type: HostBinding,\n                args: ['class.selected']\n            }], onRowClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\n\nconst rotate = { asc: 'desc', desc: '', '': 'asc' };\nclass TableSortableDirective {\n    constructor(parentTable, renderer) {\n        this.parentTable = parentTable;\n        this.renderer = renderer;\n        /**\n         * The current sort direction. Accepts one of the values of 'asc', 'desc' or ''\n         */\n        this.direction = '';\n        /**\n         * An event emitter for on sort actions.\n         */\n        this.sort = new EventEmitter();\n        this.sortable = true;\n        this.parentTable.registerHeader(this);\n    }\n    get asc() {\n        return this.direction === 'asc';\n    }\n    get desc() {\n        return this.direction === 'desc';\n    }\n    rotate() {\n        if (this.dropdown) {\n            return;\n        }\n        this.emitSortEvent();\n    }\n    ngAfterViewInit() {\n        if (this.dropdown) {\n            this.presetDropdown(this.dropdown);\n        }\n        this.getMenuOptionSelectionChanges(this.bbMenuOptions).subscribe((menuOption) => this.onMenuOptionSelect(menuOption));\n    }\n    onMenuOptionSelect(menuOption) {\n        var _a;\n        const columnValue = menuOption.bbDropdownMenuOption;\n        const activeMenuOption = (_a = this.bbMenuOptions) === null || _a === void 0 ? void 0 : _a.find((option) => option.active);\n        // Reset currently active item\n        if (activeMenuOption) {\n            activeMenuOption.active = false;\n        }\n        // If same menu item is not clicked, then reset the direction for new menuitem\n        if (activeMenuOption && columnValue !== activeMenuOption.bbDropdownMenuOption) {\n            this.direction = '';\n        }\n        this.bbSortable = menuOption.bbDropdownMenuOption;\n        this.emitSortEvent();\n        this.markMenuOptionAsActive(menuOption);\n        this.updateAriaSortAttribute();\n    }\n    /** Notify table with new sorting params */\n    emitSortEvent() {\n        if (this.bbSortable) {\n            this.direction = rotate[this.direction];\n            this.parentTable.onSort({ column: this.bbSortable, direction: this.direction });\n        }\n    }\n    /** Combined stream of all of the bbTableMenuitem selectionChange events. */\n    getMenuOptionSelectionChanges(menuOptions) {\n        return menuOptions.changes.pipe(switchMap((_) => merge(...menuOptions.map((menuOption) => menuOption.selectionChange))));\n    }\n    /** mark the new menuitem as active only if sorting order is asc/desc */\n    markMenuOptionAsActive(menuOption) {\n        if (this.direction !== '') {\n            menuOption.active = true;\n        }\n    }\n    markAllMenuOptionAsInactive() {\n        if (this.bbMenuOptions.length) {\n            this.bbMenuOptions.forEach((menuOption) => (menuOption.active = false));\n        }\n    }\n    updateAriaSortAttribute() {\n        var _a;\n        if (this.dropdown) {\n            const buttonEl = (_a = this.dropdown.buttonEl) === null || _a === void 0 ? void 0 : _a.nativeElement;\n            if (!this.direction) {\n                this.renderer.removeAttribute(buttonEl, 'aria-sort');\n            }\n            else {\n                this.renderer.setAttribute(buttonEl, 'aria-sort', this.getAriaSortAttribute(this.direction));\n            }\n        }\n    }\n    getAriaSortAttribute(direction) {\n        return direction === 'asc' ? 'ascending' : 'descending';\n    }\n    /** Preset bb-dropdown button to add role for a11y and set full height and width of table column */\n    presetDropdown(dropdown) {\n        var _a;\n        const buttonEl = (_a = dropdown.buttonEl) === null || _a === void 0 ? void 0 : _a.nativeElement;\n        this.renderer.setAttribute(buttonEl, 'role', 'columnheader');\n        this.renderer.setStyle(buttonEl, 'height', '100%');\n        this.renderer.setStyle(buttonEl, 'width', '100%');\n    }\n    ngOnDestroy() {\n        this.parentTable.unRegisterHeader(this);\n    }\n}\nTableSortableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TableSortableDirective, deps: [{ token: TableDirective }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nTableSortableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TableSortableDirective, selector: \"th[bbSortable]\", inputs: { bbSortable: \"bbSortable\", direction: \"direction\" }, outputs: { sort: \"sort\" }, host: { listeners: { \"click\": \"rotate()\", \"keyup.enter\": \"rotate()\", \"keyup.space\": \"rotate()\" }, properties: { \"class.sortable\": \"this.sortable\", \"class.asc\": \"this.asc\", \"class.desc\": \"this.desc\" } }, queries: [{ propertyName: \"dropdown\", first: true, predicate: DropdownMenuToken, descendants: true }, { propertyName: \"bbMenuOptions\", predicate: DropdownMenuOptionToken, descendants: true }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TableSortableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'th[bbSortable]',\n                }]\n        }], ctorParameters: function () { return [{ type: TableDirective }, { type: i0.Renderer2 }]; }, propDecorators: { bbSortable: [{\n                type: Input\n            }], direction: [{\n                type: Input\n            }], sort: [{\n                type: Output\n            }], dropdown: [{\n                type: ContentChild,\n                args: [DropdownMenuToken]\n            }], bbMenuOptions: [{\n                type: ContentChildren,\n                args: [DropdownMenuOptionToken, { descendants: true }]\n            }], sortable: [{\n                type: HostBinding,\n                args: ['class.sortable']\n            }], asc: [{\n                type: HostBinding,\n                args: ['class.asc']\n            }], desc: [{\n                type: HostBinding,\n                args: ['class.desc']\n            }], rotate: [{\n                type: HostListener,\n                args: ['click']\n            }, {\n                type: HostListener,\n                args: ['keyup.enter']\n            }, {\n                type: HostListener,\n                args: ['keyup.space']\n            }] } });\n\nclass TableFocusDirective {\n    constructor(renderer) {\n        this.renderer = renderer;\n        this.focusedItemIndex = -1;\n        this.focusFirstRowOnChanges = false;\n        this.destroy$ = new Subject();\n    }\n    onKeyEvent(event) {\n        switch (getKeyCode(event)) {\n            case KEY_CODES.DOWN:\n                this.focusedItemIndex = Math.min(this.focusedItemIndex + 1, this.listItems.length - 1);\n                this.focusItem();\n                event.preventDefault();\n                break;\n            case KEY_CODES.UP:\n                this.focusedItemIndex = Math.max(this.focusedItemIndex - 1, 0);\n                this.focusItem();\n                event.preventDefault();\n                break;\n            case KEY_CODES.ENTER:\n                const currentActiveItem = this.listItems.find((item, index) => index === this.focusedItemIndex);\n                if (currentActiveItem) {\n                    currentActiveItem.nativeElement.click();\n                    event.preventDefault();\n                }\n                break;\n        }\n    }\n    focusItem(focusNativeElement = true) {\n        this.listItems.forEach((el, index) => {\n            if (index === this.focusedItemIndex) {\n                this.renderer.addClass(el.nativeElement, 'active');\n                this.renderer.setAttribute(el.nativeElement, 'tabIndex', '0');\n                if (focusNativeElement) {\n                    el.nativeElement.focus();\n                }\n            }\n            else {\n                this.renderer.removeClass(el.nativeElement, 'active');\n                this.renderer.setAttribute(el.nativeElement, 'tabIndex', '-1');\n            }\n        });\n    }\n    /**\n     * @internal\n     */\n    ngAfterViewInit() {\n        // make first row in a table focusable\n        this.listItems.changes.pipe(takeUntil(this.destroy$)).subscribe((items) => {\n            var _a;\n            if ((_a = items.first) === null || _a === void 0 ? void 0 : _a.nativeElement) {\n                this.focusedItemIndex = 0;\n                this.focusItem(this.focusFirstRowOnChanges);\n            }\n        });\n    }\n    /**\n     * @internal\n     */\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nTableFocusDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TableFocusDirective, deps: [{ token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nTableFocusDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TableFocusDirective, selector: \"[bbTableFocus]\", inputs: { focusFirstRowOnChanges: \"focusFirstRowOnChanges\" }, host: { listeners: { \"keydown\": \"onKeyEvent($event)\" } }, queries: [{ propertyName: \"listItems\", predicate: TableRowDirective, emitDistinctChangesOnly: false, descendants: true, read: ElementRef }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TableFocusDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbTableFocus]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }]; }, propDecorators: { listItems: [{\n                type: ContentChildren,\n                args: [TableRowDirective, { read: ElementRef, descendants: true, emitDistinctChangesOnly: false }]\n            }], focusFirstRowOnChanges: [{\n                type: Input\n            }], onKeyEvent: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\n\nconst directives = [TableRowDirective, TableDirective, TableSortableDirective, TableFocusDirective];\nclass TableModule {\n}\nTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TableModule, declarations: [TableRowDirective, TableDirective, TableSortableDirective, TableFocusDirective], imports: [CommonModule], exports: [TableRowDirective, TableDirective, TableSortableDirective, TableFocusDirective] });\nTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TableModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [...directives],\n                    exports: [...directives],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TableDirective, TableFocusDirective, TableModule, TableRowDirective, TableSortableDirective };\n"]},"metadata":{},"sourceType":"module"}