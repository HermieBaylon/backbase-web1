{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport { Subject, ReplaySubject, from } from 'rxjs';\nimport * as i1 from 'angular-oauth2-oidc';\nimport { OAuthStorage, AuthConfig } from 'angular-oauth2-oidc';\nimport { map, filter, mapTo, take } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nconst ACTIVITY_MONITOR_CONFIG = new InjectionToken('activity-monitor-config');\nconst WINDOW = new InjectionToken('Window');\n/**\n * Service for monitoring user activity\n */\n\nclass ActivityMonitorService {\n  // https://angular.io/guide/aot-metadata-errors#could-not-resolve-type\n  constructor(_window, _config) {\n    this.events$ = new Subject();\n    this.isActive = false;\n    this.lastActiveEpoch = 0;\n    this.config = {\n      maxInactivityDuration: 180,\n      countdownDuration: 30\n    };\n    this.listenerCallback = this.setLastActiveEpoch.bind(this);\n    this.countdownActive = false;\n    this.events = this.events$.asObservable();\n    this.window = _window;\n    Object.assign(this.config, _config || {});\n  }\n  /**\n   * Starts activity monitoring.\n   */\n\n\n  start(_config = {}) {\n    Object.assign(this.config, _config);\n\n    if (this.isActive) {\n      this.stop();\n    }\n\n    this.listen(true, {\n      passive: true,\n      capture: true\n    });\n  } // Stops activity monitoring.\n\n\n  stop() {\n    if (this.isActive) {\n      this.listen(false, true);\n    }\n  }\n\n  getInactivityDuration() {\n    const now = Math.floor(Date.now() / 1000);\n    const last = Math.floor(this.lastActiveEpoch / 1000);\n    return Math.floor(now - last);\n  }\n\n  setLastActiveEpoch() {\n    this.lastActiveEpoch = Date.now();\n  }\n\n  listen(activate, options) {\n    this.isActive = activate;\n    const func = activate ? this.window.document.addEventListener : this.window.document.removeEventListener;\n    this.setLastActiveEpoch();\n    func('mousemove', this.listenerCallback, options);\n    func('mousedown', this.listenerCallback, options);\n    func('keydown', this.listenerCallback, options);\n    func('mousewheel', this.listenerCallback, options);\n    func('touchmove', this.listenerCallback, options);\n\n    if (activate) {\n      this.intervalId = this.window.setInterval(this.onEverySecond.bind(this), 1000);\n    } else {\n      this.window.clearInterval(this.intervalId);\n\n      if (this.countdownActive) {\n        this.countdownActive = false;\n        this.events$.next({\n          type: 'reset'\n        });\n      }\n    }\n  }\n\n  onEverySecond() {\n    const ttl = this.config.maxInactivityDuration - this.getInactivityDuration();\n\n    if (ttl > -1 && ttl <= this.config.countdownDuration) {\n      if (!this.countdownActive) {\n        this.countdownActive = true;\n        this.events$.next({\n          type: 'start'\n        });\n        this.events$.next({\n          type: 'tick',\n          remaining: ttl\n        });\n        return;\n      }\n\n      if (ttl > 0) {\n        this.events$.next({\n          type: 'tick',\n          remaining: ttl\n        });\n      } else {\n        this.countdownActive = false;\n        this.events$.next({\n          type: 'end'\n        });\n        this.stop();\n      }\n    } else if (this.countdownActive) {\n      this.countdownActive = false;\n      this.events$.next({\n        type: 'reset'\n      });\n    }\n  }\n\n}\n/** @nocollapse */\n\n\nActivityMonitorService.ɵfac = function ActivityMonitorService_Factory(t) {\n  return new (t || ActivityMonitorService)(i0.ɵɵinject(WINDOW), i0.ɵɵinject(ACTIVITY_MONITOR_CONFIG, 8));\n};\n/** @nocollapse */\n\n\nActivityMonitorService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ActivityMonitorService,\n  factory: ActivityMonitorService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActivityMonitorService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [WINDOW]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ACTIVITY_MONITOR_CONFIG]\n      }]\n    }];\n  }, null);\n})();\n/** @internal */\n\n\nclass ɵɵOidcAuthService {\n  // https://angular.io/guide/aot-metadata-errors#could-not-resolve-type\n  constructor(oAuthService, oAuthStorage, oAuthConfig, _window) {\n    var _a;\n\n    this.oAuthService = oAuthService;\n    this.oAuthStorage = oAuthStorage;\n    this.oAuthConfig = oAuthConfig;\n    this._window = _window;\n    this.authenticated$$ = new ReplaySubject();\n    this.storage = this.oAuthStorage;\n    this.authConfig = this.oAuthConfig;\n    this.events$ = (_a = this.oAuthService) === null || _a === void 0 ? void 0 : _a.events;\n    this.isAuthenticated$ = this.authenticated$$.pipe(map(() => this.oAuthService.hasValidAccessToken()));\n    this.accessToken$ = this.isAuthenticated$.pipe(filter(loaded => loaded), map(() => {\n      const raw = this.oAuthService.getAccessToken();\n      return {\n        raw,\n        parsed: this.parseJwt(raw)\n      };\n    }));\n\n    if (!oAuthService) {\n      throw new Error(`In order to use ɵɵOidcAuthService, please include OAuthModule.forRoot() to your application module`);\n    }\n\n    this.window = this._window;\n    this.oAuthService.events.subscribe(event => {\n      switch (event.type) {\n        case 'discovery_document_loaded':\n        case 'token_received':\n        case 'logout':\n          this.authenticated$$.next();\n          break;\n\n        default:\n          break;\n      }\n    });\n  }\n\n  logout(redirectUri) {\n    if (redirectUri) {\n      this.oAuthService.postLogoutRedirectUri = redirectUri;\n    }\n\n    this.oAuthService.logOut();\n    return this.oAuthService.events.pipe(filter(event => event.type === 'logout'), mapTo(undefined), take(1)).toPromise();\n  }\n\n  timeToLive() {\n    const expiration = this.oAuthService.getAccessTokenExpiration();\n\n    if (expiration) {\n      return expiration - Math.ceil(new Date().getTime() / 1000) + (this.oAuthService.clockSkewInSec || 0);\n    }\n\n    return -1;\n  }\n\n  refresh() {\n    this.oAuthService.refreshToken();\n    return this.oAuthService.events.pipe(filter(event => event.type === 'token_refreshed'), mapTo(undefined), take(1)).toPromise();\n  }\n\n  loadDiscoveryDocument() {\n    return this.oAuthService.loadDiscoveryDocument();\n  }\n\n  authorizationHeader() {\n    return this.oAuthService.authorizationHeader();\n  }\n\n  createReauthLoginUrl(scope, acr_values) {\n    return from(this.oAuthService.createLoginUrl('', // state\n    '', // login hint\n    location.href, // custom redirect uri\n    false, // no prompt\n    {\n      acr_values,\n      response_mode: 'fragment'\n    })).pipe(map(preUrl => {\n      const urlParsed = new URL(preUrl);\n      urlParsed.searchParams.set('scope', `${urlParsed.searchParams.get('scope')} ${scope}`);\n      return urlParsed.href;\n    }));\n  }\n\n  parseJwt(token) {\n    try {\n      const base64Url = token.split('.')[1];\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      return JSON.parse(this.window.atob(base64));\n    } catch (e) {\n      return undefined;\n    }\n  }\n\n}\n/** @nocollapse */\n\n\nɵɵOidcAuthService.ɵfac = function ɵɵOidcAuthService_Factory(t) {\n  return new (t || ɵɵOidcAuthService)(i0.ɵɵinject(i1.OAuthService, 8), i0.ɵɵinject(OAuthStorage), i0.ɵɵinject(AuthConfig), i0.ɵɵinject(WINDOW));\n};\n/** @nocollapse */\n\n\nɵɵOidcAuthService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ɵɵOidcAuthService,\n  factory: ɵɵOidcAuthService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ɵɵOidcAuthService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.OAuthService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i1.OAuthStorage,\n      decorators: [{\n        type: Inject,\n        args: [OAuthStorage]\n      }]\n    }, {\n      type: i1.AuthConfig,\n      decorators: [{\n        type: Inject,\n        args: [AuthConfig]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [WINDOW]\n      }]\n    }];\n  }, null);\n})();\n\nclass AuthService {\n  constructor(oidcAuthService) {\n    this.oidcAuthService = oidcAuthService;\n    this.isAuthenticated$ = this.oidcAuthService.isAuthenticated$;\n  }\n\n}\n/** @nocollapse */\n\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(ɵɵOidcAuthService));\n};\n/** @nocollapse */\n\n\nAuthService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AuthService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵɵOidcAuthService\n    }];\n  }, null);\n})();\n\nfunction _window() {\n  return window;\n}\n\nclass IdentityAuthModule {}\n/** @nocollapse */\n\n\nIdentityAuthModule.ɵfac = function IdentityAuthModule_Factory(t) {\n  return new (t || IdentityAuthModule)();\n};\n/** @nocollapse */\n\n\nIdentityAuthModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: IdentityAuthModule\n});\n/** @nocollapse */\n\nIdentityAuthModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: WINDOW,\n    useValue: _window\n  }, AuthService, ɵɵOidcAuthService, ActivityMonitorService],\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IdentityAuthModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      providers: [{\n        provide: WINDOW,\n        useValue: _window\n      }, AuthService, ɵɵOidcAuthService, ActivityMonitorService]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ACTIVITY_MONITOR_CONFIG, ActivityMonitorService, AuthService, IdentityAuthModule, ɵɵOidcAuthService };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/identity-auth/fesm2015/backbase-identity-auth.js"],"names":["i0","InjectionToken","Injectable","Inject","Optional","NgModule","Subject","ReplaySubject","from","i1","OAuthStorage","AuthConfig","map","filter","mapTo","take","CommonModule","ACTIVITY_MONITOR_CONFIG","WINDOW","ActivityMonitorService","constructor","_window","_config","events$","isActive","lastActiveEpoch","config","maxInactivityDuration","countdownDuration","listenerCallback","setLastActiveEpoch","bind","countdownActive","events","asObservable","window","Object","assign","start","stop","listen","passive","capture","getInactivityDuration","now","Math","floor","Date","last","activate","options","func","document","addEventListener","removeEventListener","intervalId","setInterval","onEverySecond","clearInterval","next","type","ttl","remaining","ɵfac","ɵprov","undefined","decorators","args","ɵɵOidcAuthService","oAuthService","oAuthStorage","oAuthConfig","_a","authenticated$$","storage","authConfig","isAuthenticated$","pipe","hasValidAccessToken","accessToken$","loaded","raw","getAccessToken","parsed","parseJwt","Error","subscribe","event","logout","redirectUri","postLogoutRedirectUri","logOut","toPromise","timeToLive","expiration","getAccessTokenExpiration","ceil","getTime","clockSkewInSec","refresh","refreshToken","loadDiscoveryDocument","authorizationHeader","createReauthLoginUrl","scope","acr_values","createLoginUrl","location","href","response_mode","preUrl","urlParsed","URL","searchParams","set","get","token","base64Url","split","base64","replace","JSON","parse","atob","e","OAuthService","AuthService","oidcAuthService","IdentityAuthModule","ɵmod","ɵinj","provide","useValue","imports","providers"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport { Subject, ReplaySubject, from } from 'rxjs';\nimport * as i1 from 'angular-oauth2-oidc';\nimport { OAuthStorage, AuthConfig } from 'angular-oauth2-oidc';\nimport { map, filter, mapTo, take } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\n\nconst ACTIVITY_MONITOR_CONFIG = new InjectionToken('activity-monitor-config');\n\nconst WINDOW = new InjectionToken('Window');\n\n/**\n * Service for monitoring user activity\n */\nclass ActivityMonitorService {\n    // https://angular.io/guide/aot-metadata-errors#could-not-resolve-type\n    constructor(_window, _config) {\n        this.events$ = new Subject();\n        this.isActive = false;\n        this.lastActiveEpoch = 0;\n        this.config = {\n            maxInactivityDuration: 180,\n            countdownDuration: 30,\n        };\n        this.listenerCallback = this.setLastActiveEpoch.bind(this);\n        this.countdownActive = false;\n        this.events = this.events$.asObservable();\n        this.window = _window;\n        Object.assign(this.config, _config || {});\n    }\n    /**\n     * Starts activity monitoring.\n     */\n    start(_config = {}) {\n        Object.assign(this.config, _config);\n        if (this.isActive) {\n            this.stop();\n        }\n        this.listen(true, { passive: true, capture: true });\n    }\n    // Stops activity monitoring.\n    stop() {\n        if (this.isActive) {\n            this.listen(false, true);\n        }\n    }\n    getInactivityDuration() {\n        const now = Math.floor(Date.now() / 1000);\n        const last = Math.floor(this.lastActiveEpoch / 1000);\n        return Math.floor(now - last);\n    }\n    setLastActiveEpoch() {\n        this.lastActiveEpoch = Date.now();\n    }\n    listen(activate, options) {\n        this.isActive = activate;\n        const func = activate ? this.window.document.addEventListener : this.window.document.removeEventListener;\n        this.setLastActiveEpoch();\n        func('mousemove', this.listenerCallback, options);\n        func('mousedown', this.listenerCallback, options);\n        func('keydown', this.listenerCallback, options);\n        func('mousewheel', this.listenerCallback, options);\n        func('touchmove', this.listenerCallback, options);\n        if (activate) {\n            this.intervalId = this.window.setInterval(this.onEverySecond.bind(this), 1000);\n        }\n        else {\n            this.window.clearInterval(this.intervalId);\n            if (this.countdownActive) {\n                this.countdownActive = false;\n                this.events$.next({ type: 'reset' });\n            }\n        }\n    }\n    onEverySecond() {\n        const ttl = this.config.maxInactivityDuration - this.getInactivityDuration();\n        if (ttl > -1 && ttl <= this.config.countdownDuration) {\n            if (!this.countdownActive) {\n                this.countdownActive = true;\n                this.events$.next({ type: 'start' });\n                this.events$.next({ type: 'tick', remaining: ttl });\n                return;\n            }\n            if (ttl > 0) {\n                this.events$.next({ type: 'tick', remaining: ttl });\n            }\n            else {\n                this.countdownActive = false;\n                this.events$.next({ type: 'end' });\n                this.stop();\n            }\n        }\n        else if (this.countdownActive) {\n            this.countdownActive = false;\n            this.events$.next({ type: 'reset' });\n        }\n    }\n}\n/** @nocollapse */ ActivityMonitorService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ActivityMonitorService, deps: [{ token: WINDOW }, { token: ACTIVITY_MONITOR_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ ActivityMonitorService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ActivityMonitorService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ActivityMonitorService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [WINDOW]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ACTIVITY_MONITOR_CONFIG]\n                }] }]; } });\n\n/** @internal */\nclass ɵɵOidcAuthService {\n    // https://angular.io/guide/aot-metadata-errors#could-not-resolve-type\n    constructor(oAuthService, oAuthStorage, oAuthConfig, _window) {\n        var _a;\n        this.oAuthService = oAuthService;\n        this.oAuthStorage = oAuthStorage;\n        this.oAuthConfig = oAuthConfig;\n        this._window = _window;\n        this.authenticated$$ = new ReplaySubject();\n        this.storage = this.oAuthStorage;\n        this.authConfig = this.oAuthConfig;\n        this.events$ = (_a = this.oAuthService) === null || _a === void 0 ? void 0 : _a.events;\n        this.isAuthenticated$ = this.authenticated$$.pipe(map(() => this.oAuthService.hasValidAccessToken()));\n        this.accessToken$ = this.isAuthenticated$.pipe(filter((loaded) => loaded), map(() => {\n            const raw = this.oAuthService.getAccessToken();\n            return {\n                raw,\n                parsed: this.parseJwt(raw),\n            };\n        }));\n        if (!oAuthService) {\n            throw new Error(`In order to use ɵɵOidcAuthService, please include OAuthModule.forRoot() to your application module`);\n        }\n        this.window = this._window;\n        this.oAuthService.events.subscribe((event) => {\n            switch (event.type) {\n                case 'discovery_document_loaded':\n                case 'token_received':\n                case 'logout':\n                    this.authenticated$$.next();\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n    logout(redirectUri) {\n        if (redirectUri) {\n            this.oAuthService.postLogoutRedirectUri = redirectUri;\n        }\n        this.oAuthService.logOut();\n        return this.oAuthService.events\n            .pipe(filter((event) => event.type === 'logout'), mapTo(undefined), take(1))\n            .toPromise();\n    }\n    timeToLive() {\n        const expiration = this.oAuthService.getAccessTokenExpiration();\n        if (expiration) {\n            return expiration - Math.ceil(new Date().getTime() / 1000) + (this.oAuthService.clockSkewInSec || 0);\n        }\n        return -1;\n    }\n    refresh() {\n        this.oAuthService.refreshToken();\n        return this.oAuthService.events\n            .pipe(filter((event) => event.type === 'token_refreshed'), mapTo(undefined), take(1))\n            .toPromise();\n    }\n    loadDiscoveryDocument() {\n        return this.oAuthService.loadDiscoveryDocument();\n    }\n    authorizationHeader() {\n        return this.oAuthService.authorizationHeader();\n    }\n    createReauthLoginUrl(scope, acr_values) {\n        return from(this.oAuthService.createLoginUrl('', // state\n        '', // login hint\n        location.href, // custom redirect uri\n        false, // no prompt\n        {\n            acr_values,\n            response_mode: 'fragment',\n        })).pipe(map((preUrl) => {\n            const urlParsed = new URL(preUrl);\n            urlParsed.searchParams.set('scope', `${urlParsed.searchParams.get('scope')} ${scope}`);\n            return urlParsed.href;\n        }));\n    }\n    parseJwt(token) {\n        try {\n            const base64Url = token.split('.')[1];\n            const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n            return JSON.parse(this.window.atob(base64));\n        }\n        catch (e) {\n            return undefined;\n        }\n    }\n}\n/** @nocollapse */ ɵɵOidcAuthService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ɵɵOidcAuthService, deps: [{ token: i1.OAuthService, optional: true }, { token: OAuthStorage }, { token: AuthConfig }, { token: WINDOW }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ ɵɵOidcAuthService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ɵɵOidcAuthService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: ɵɵOidcAuthService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.OAuthService, decorators: [{\n                    type: Optional\n                }] }, { type: i1.OAuthStorage, decorators: [{\n                    type: Inject,\n                    args: [OAuthStorage]\n                }] }, { type: i1.AuthConfig, decorators: [{\n                    type: Inject,\n                    args: [AuthConfig]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [WINDOW]\n                }] }]; } });\n\nclass AuthService {\n    constructor(oidcAuthService) {\n        this.oidcAuthService = oidcAuthService;\n        this.isAuthenticated$ = this.oidcAuthService.isAuthenticated$;\n    }\n}\n/** @nocollapse */ AuthService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: AuthService, deps: [{ token: ɵɵOidcAuthService }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ AuthService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: AuthService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: AuthService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: ɵɵOidcAuthService }]; } });\n\nfunction _window() {\n    return window;\n}\nclass IdentityAuthModule {\n}\n/** @nocollapse */ IdentityAuthModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: IdentityAuthModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ IdentityAuthModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: IdentityAuthModule, imports: [CommonModule] });\n/** @nocollapse */ IdentityAuthModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: IdentityAuthModule, providers: [\n        {\n            provide: WINDOW,\n            useValue: _window,\n        },\n        AuthService,\n        ɵɵOidcAuthService,\n        ActivityMonitorService,\n    ], imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: IdentityAuthModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    providers: [\n                        {\n                            provide: WINDOW,\n                            useValue: _window,\n                        },\n                        AuthService,\n                        ɵɵOidcAuthService,\n                        ActivityMonitorService,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ACTIVITY_MONITOR_CONFIG, ActivityMonitorService, AuthService, IdentityAuthModule, ɵɵOidcAuthService };\n"]},"metadata":{},"sourceType":"module"}