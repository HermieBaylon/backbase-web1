{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@ng-bootstrap/ng-bootstrap';\nimport { NgbProgressbarModule } from '@ng-bootstrap/ng-bootstrap';\n/**\n * @name ProgressbarComponent\n *\n * @description\n * Component that represents the progress of a task.\n */\n\nconst _c0 = [\"*\"];\n\nclass ProgressbarComponent {\n  constructor() {\n    /**\n     * Maximum value of the progressbar. Defaults to 100\n     */\n    this.max = 100;\n    /**\n     * A flag indicating if the current value should be displayed within the progressbar. Defaults to false\n     */\n\n    this.showValue = false;\n    /**\n     * A flag indicating if the progress bar should be striped. Defaults to false\n     */\n\n    this.striped = false;\n    /**\n     * A flag indicating if the stripes of the progress bar should be animated. Defaults to false\n     */\n\n    this.animated = false;\n    /**\n     * Current value of the progressbar. Defaults to 0 and should be less than max\n     */\n\n    this.value = 0;\n  }\n\n}\n\nProgressbarComponent.ɵfac = function ProgressbarComponent_Factory(t) {\n  return new (t || ProgressbarComponent)();\n};\n\nProgressbarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ProgressbarComponent,\n  selectors: [[\"bb-progressbar-ui\"]],\n  inputs: {\n    height: \"height\",\n    max: \"max\",\n    showValue: \"showValue\",\n    striped: \"striped\",\n    animated: \"animated\",\n    type: \"type\",\n    value: \"value\"\n  },\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 7,\n  consts: [[1, \"bb-progress-bar\", 3, \"type\", \"max\", \"value\", \"showValue\", \"striped\", \"animated\", \"height\"]],\n  template: function ProgressbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"ngb-progressbar\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"type\", ctx.type)(\"max\", ctx.max)(\"value\", ctx.value)(\"showValue\", ctx.showValue)(\"striped\", ctx.striped)(\"animated\", ctx.animated)(\"height\", ctx.height);\n    }\n  },\n  directives: [i1.NgbProgressbar],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressbarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-progressbar-ui',\n      templateUrl: './progressbar.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    height: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    showValue: [{\n      type: Input\n    }],\n    striped: [{\n      type: Input\n    }],\n    animated: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\n\nclass ProgressbarModule {}\n\nProgressbarModule.ɵfac = function ProgressbarModule_Factory(t) {\n  return new (t || ProgressbarModule)();\n};\n\nProgressbarModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ProgressbarModule\n});\nProgressbarModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, NgbProgressbarModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressbarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, NgbProgressbarModule],\n      declarations: [ProgressbarComponent],\n      exports: [ProgressbarComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ProgressbarComponent, ProgressbarModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-progressbar.js"],"names":["i0","Component","ChangeDetectionStrategy","Input","NgModule","CommonModule","i1","NgbProgressbarModule","ProgressbarComponent","constructor","max","showValue","striped","animated","value","ɵfac","ɵcmp","NgbProgressbar","type","args","selector","templateUrl","changeDetection","OnPush","height","ProgressbarModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@ng-bootstrap/ng-bootstrap';\nimport { NgbProgressbarModule } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * @name ProgressbarComponent\n *\n * @description\n * Component that represents the progress of a task.\n */\nclass ProgressbarComponent {\n    constructor() {\n        /**\n         * Maximum value of the progressbar. Defaults to 100\n         */\n        this.max = 100;\n        /**\n         * A flag indicating if the current value should be displayed within the progressbar. Defaults to false\n         */\n        this.showValue = false;\n        /**\n         * A flag indicating if the progress bar should be striped. Defaults to false\n         */\n        this.striped = false;\n        /**\n         * A flag indicating if the stripes of the progress bar should be animated. Defaults to false\n         */\n        this.animated = false;\n        /**\n         * Current value of the progressbar. Defaults to 0 and should be less than max\n         */\n        this.value = 0;\n    }\n}\nProgressbarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProgressbarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nProgressbarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ProgressbarComponent, selector: \"bb-progressbar-ui\", inputs: { height: \"height\", max: \"max\", showValue: \"showValue\", striped: \"striped\", animated: \"animated\", type: \"type\", value: \"value\" }, ngImport: i0, template: \"<ngb-progressbar\\n  class=\\\"bb-progress-bar\\\"\\n  [type]=\\\"type\\\"\\n  [max]=\\\"max\\\"\\n  [value]=\\\"value\\\"\\n  [showValue]=\\\"showValue\\\"\\n  [striped]=\\\"striped\\\"\\n  [animated]=\\\"animated\\\"\\n  [height]=\\\"height\\\"\\n>\\n  <ng-content></ng-content>\\n</ngb-progressbar>\\n\", components: [{ type: i1.NgbProgressbar, selector: \"ngb-progressbar\", inputs: [\"value\", \"max\", \"animated\", \"striped\", \"textType\", \"type\", \"showValue\", \"height\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProgressbarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-progressbar-ui',\n                    templateUrl: './progressbar.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], propDecorators: { height: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], showValue: [{\n                type: Input\n            }], striped: [{\n                type: Input\n            }], animated: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }] } });\n\nclass ProgressbarModule {\n}\nProgressbarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProgressbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nProgressbarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProgressbarModule, declarations: [ProgressbarComponent], imports: [CommonModule, NgbProgressbarModule], exports: [ProgressbarComponent] });\nProgressbarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProgressbarModule, imports: [[CommonModule, NgbProgressbarModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProgressbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, NgbProgressbarModule],\n                    declarations: [ProgressbarComponent],\n                    exports: [ProgressbarComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ProgressbarComponent, ProgressbarModule };\n"]},"metadata":{},"sourceType":"module"}