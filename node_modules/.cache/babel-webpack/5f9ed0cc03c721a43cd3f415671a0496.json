{"ast":null,"code":"import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\n/**\n * @name LoadingIndicatorComponent\n *\n * @description\n * Component that displays a loading spinner and message.\n */\n\nfunction LoadingIndicatorComponent_ng_container_0_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    jumbotron: a0\n  };\n};\n\nfunction LoadingIndicatorComponent_ng_container_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, LoadingIndicatorComponent_ng_container_0_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n\n    const _r3 = i0.ɵɵreference(4);\n\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, ctx_r5.hasBackground));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r3);\n  }\n}\n\nfunction LoadingIndicatorComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, LoadingIndicatorComponent_ng_container_0_div_1_Template, 2, 4, \"div\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showLoadingState);\n  }\n}\n\nfunction LoadingIndicatorComponent_ng_template_1_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction LoadingIndicatorComponent_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, LoadingIndicatorComponent_ng_template_1_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r3 = i0.ɵɵreference(4);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r3);\n  }\n}\n\nfunction LoadingIndicatorComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, LoadingIndicatorComponent_ng_template_1_ng_container_0_Template, 2, 1, \"ng-container\", 6);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showLoadingState);\n  }\n}\n\nfunction LoadingIndicatorComponent_ng_template_3_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r9.text);\n  }\n}\n\nconst _c3 = function (a0) {\n  return {\n    \"bb-loading-indicator--inline\": a0\n  };\n};\n\nfunction LoadingIndicatorComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 8);\n    i0.ɵɵelement(2, \"circle\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, LoadingIndicatorComponent_ng_template_3_div_3_Template, 2, 1, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"bb-loading-indicator bb-loading-indicator--\", ctx_r4.loaderSize, \"\");\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c3, ctx_r4.inline));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.text);\n  }\n}\n\nclass LoadingIndicatorComponent {\n  constructor(ref) {\n    this.ref = ref;\n    /**\n     * The size of the loading indicator.\n     * Defaults to 'md'.\n     */\n\n    this.loaderSize = 'md';\n    /**\n     * Delay in milliseconds before the loading indicator display.\n     * Default to 0.\n     */\n\n    this.showDelay = 0;\n    /**\n     * Defines whether gray background should be displayed.\n     * Default to false (background hidden).\n     */\n\n    this.hasBackground = false;\n    /**\n     * Define if spinner should be shown inline without any default padding and margin.\n     * Default to false (show default padding and margin).\n     */\n\n    this.inline = false;\n    this.showLoadingState = false;\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.showLoadingState = true;\n      this.ref.markForCheck();\n    }, this.showDelay);\n  }\n\n}\n\nLoadingIndicatorComponent.ɵfac = function LoadingIndicatorComponent_Factory(t) {\n  return new (t || LoadingIndicatorComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nLoadingIndicatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LoadingIndicatorComponent,\n  selectors: [[\"bb-loading-indicator-ui\"]],\n  inputs: {\n    text: \"text\",\n    loaderSize: \"loaderSize\",\n    showDelay: \"showDelay\",\n    hasBackground: \"hasBackground\",\n    inline: \"inline\"\n  },\n  decls: 5,\n  vars: 2,\n  consts: function () {\n    let i18n_1;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Label for the loading indicator \n       * @meaning Loading indicator\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_LOADING_INDICATOR_JS__2 = goog.getMsg(\"Loading indicator\");\n      i18n_1 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_LOADING_INDICATOR_JS__2;\n    } else {\n      i18n_1 = $localize`:Loading indicator| Label for the loading indicator @@bb-loading-indicator-ui.indicator:Loading indicator`;\n    }\n\n    return [[4, \"ngIf\", \"ngIfElse\"], [\"inlineLoading\", \"\"], [\"loadingIndicator\", \"\"], [\"data-role\", \"loading-indicator\", \"class\", \"bb-state-container\", 3, \"ngClass\", 4, \"ngIf\"], [\"data-role\", \"loading-indicator\", 1, \"bb-state-container\", 3, \"ngClass\"], [4, \"ngTemplateOutlet\"], [4, \"ngIf\"], [\"data-role\", \"loading-indicator-wrapper\", 3, \"ngClass\"], [\"aria-label\", i18n_1, \"preserveAspectRatio\", \"xMinYMin meet\", 1, \"bb-loading-indicator__circle\"], [\"r\", \"40%\", \"cx\", \"50%\", \"cy\", \"50%\", \"fill\", \"none\", \"stroke\", \"currentColor\", 1, \"bb-loading-indicator__path\"], [\"data-role\", \"loading-indicator-text\", \"class\", \"bb-loading-indicator__text\", 4, \"ngIf\"], [\"data-role\", \"loading-indicator-text\", 1, \"bb-loading-indicator__text\"]];\n  },\n  template: function LoadingIndicatorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LoadingIndicatorComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, LoadingIndicatorComponent_ng_template_1_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(3, LoadingIndicatorComponent_ng_template_3_Template, 4, 7, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"ngIf\", !ctx.inline)(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i1.NgIf, i1.NgClass, i1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoadingIndicatorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-loading-indicator-ui',\n      templateUrl: './loading-indicator.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    text: [{\n      type: Input\n    }],\n    loaderSize: [{\n      type: Input\n    }],\n    showDelay: [{\n      type: Input\n    }],\n    hasBackground: [{\n      type: Input\n    }],\n    inline: [{\n      type: Input\n    }]\n  });\n})();\n\nclass LoadingIndicatorModule {}\n\nLoadingIndicatorModule.ɵfac = function LoadingIndicatorModule_Factory(t) {\n  return new (t || LoadingIndicatorModule)();\n};\n\nLoadingIndicatorModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LoadingIndicatorModule\n});\nLoadingIndicatorModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoadingIndicatorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [LoadingIndicatorComponent],\n      exports: [LoadingIndicatorComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { LoadingIndicatorComponent, LoadingIndicatorModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-loading-indicator.js"],"names":["i1","CommonModule","i0","Component","ChangeDetectionStrategy","Input","NgModule","LoadingIndicatorComponent","constructor","ref","loaderSize","showDelay","hasBackground","inline","showLoadingState","ngOnInit","setTimeout","markForCheck","ɵfac","ChangeDetectorRef","ɵcmp","NgIf","NgClass","NgTemplateOutlet","type","args","selector","templateUrl","changeDetection","OnPush","text","LoadingIndicatorModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\n\n/**\n * @name LoadingIndicatorComponent\n *\n * @description\n * Component that displays a loading spinner and message.\n */\nclass LoadingIndicatorComponent {\n    constructor(ref) {\n        this.ref = ref;\n        /**\n         * The size of the loading indicator.\n         * Defaults to 'md'.\n         */\n        this.loaderSize = 'md';\n        /**\n         * Delay in milliseconds before the loading indicator display.\n         * Default to 0.\n         */\n        this.showDelay = 0;\n        /**\n         * Defines whether gray background should be displayed.\n         * Default to false (background hidden).\n         */\n        this.hasBackground = false;\n        /**\n         * Define if spinner should be shown inline without any default padding and margin.\n         * Default to false (show default padding and margin).\n         */\n        this.inline = false;\n        this.showLoadingState = false;\n    }\n    ngOnInit() {\n        setTimeout(() => {\n            this.showLoadingState = true;\n            this.ref.markForCheck();\n        }, this.showDelay);\n    }\n}\nLoadingIndicatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LoadingIndicatorComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nLoadingIndicatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LoadingIndicatorComponent, selector: \"bb-loading-indicator-ui\", inputs: { text: \"text\", loaderSize: \"loaderSize\", showDelay: \"showDelay\", hasBackground: \"hasBackground\", inline: \"inline\" }, ngImport: i0, template: \"<ng-container *ngIf=\\\"!inline; else inlineLoading\\\">\\n  <div\\n    *ngIf=\\\"showLoadingState\\\"\\n    [ngClass]=\\\"{ jumbotron: hasBackground }\\\"\\n    data-role=\\\"loading-indicator\\\"\\n    class=\\\"bb-state-container\\\"\\n  >\\n    <ng-container *ngTemplateOutlet=\\\"loadingIndicator\\\"></ng-container>\\n  </div>\\n</ng-container>\\n\\n<ng-template #inlineLoading>\\n  <ng-container *ngIf=\\\"showLoadingState\\\">\\n    <ng-container *ngTemplateOutlet=\\\"loadingIndicator\\\"></ng-container>\\n  </ng-container>\\n</ng-template>\\n\\n<ng-template #loadingIndicator>\\n  <div\\n    data-role=\\\"loading-indicator-wrapper\\\"\\n    class=\\\"bb-loading-indicator bb-loading-indicator--{{ loaderSize }}\\\"\\n    [ngClass]=\\\"{ 'bb-loading-indicator--inline': inline }\\\"\\n  >\\n    <svg\\n      aria-label=\\\"Loading indicator\\\"\\n      i18n-aria-label=\\\"Loading indicator| Label for the loading indicator @@bb-loading-indicator-ui.indicator\\\"\\n      class=\\\"bb-loading-indicator__circle\\\"\\n      preserveAspectRatio=\\\"xMinYMin meet\\\"\\n    >\\n      <circle class=\\\"bb-loading-indicator__path\\\" r=\\\"40%\\\" cx=\\\"50%\\\" cy=\\\"50%\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\"></circle>\\n    </svg>\\n    <div *ngIf=\\\"text\\\" data-role=\\\"loading-indicator-text\\\" class=\\\"bb-loading-indicator__text\\\">{{ text }}</div>\\n  </div>\\n</ng-template>\\n\", directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LoadingIndicatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-loading-indicator-ui',\n                    templateUrl: './loading-indicator.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { text: [{\n                type: Input\n            }], loaderSize: [{\n                type: Input\n            }], showDelay: [{\n                type: Input\n            }], hasBackground: [{\n                type: Input\n            }], inline: [{\n                type: Input\n            }] } });\n\nclass LoadingIndicatorModule {\n}\nLoadingIndicatorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LoadingIndicatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLoadingIndicatorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LoadingIndicatorModule, declarations: [LoadingIndicatorComponent], imports: [CommonModule], exports: [LoadingIndicatorComponent] });\nLoadingIndicatorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LoadingIndicatorModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LoadingIndicatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [LoadingIndicatorComponent],\n                    exports: [LoadingIndicatorComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LoadingIndicatorComponent, LoadingIndicatorModule };\n"]},"metadata":{},"sourceType":"module"}