{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, Component, ChangeDetectionStrategy, Input, ViewChild, NgModule } from '@angular/core';\nimport { InputBaseComponent, BaseClassesModule } from '@backbase/ui-ang/base-classes';\nimport * as i4 from '@angular/forms';\nimport { Validators, NG_VALUE_ACCESSOR, NG_VALIDATORS, FormsModule } from '@angular/forms';\nimport * as i1 from '@backbase/ui-ang/services';\nimport * as i2 from '@backbase/foundation-ang/future';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i5 from '@backbase/ui-ang/focus';\nimport { FocusModule } from '@backbase/ui-ang/focus';\nimport { IconModule } from '@backbase/ui-ang/icon';\n/**\n * @name InputEmailComponent\n *\n * @a11y Current component provide option to pass needed accessibility\n * attributes. You need to take care of properties that are required in your case :\n *  - role\n *  - aria-activedescendant\n *  - aria-describedby\n *  - aria-expanded\n *  - aria-invalid\n *  - aria-label\n *  - aria-labelledby\n *  - aria-owns\n *\n * @description\n * Component that displays a email input.\n */\n\nconst _c0 = [\"inputEmail\"];\n\nfunction InputEmailComponent_label_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"for\", ctx_r0.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.label);\n  }\n}\n\nclass InputEmailComponent extends InputBaseComponent {\n  constructor(domAttrService, elem, renderer2, cd, deprecationsService) {\n    super(cd, deprecationsService);\n    this.domAttrService = domAttrService;\n    this.elem = elem;\n    this.renderer2 = renderer2;\n    this.cd = cd;\n    this.deprecationsService = deprecationsService;\n    /**\n     * The placeholder for the email input. Defaults to an empty string;\n     */\n\n    this.placeholder = '';\n    /**\n     * Whether the email input is readonly.\n     */\n\n    this.readonly = false;\n  }\n\n  validate(control) {\n    return Validators.email(control);\n  }\n\n  ngAfterViewInit() {\n    if (!this.ariaLabel) {\n      this.domAttrService.moveAriaAttributes(this.elem.nativeElement, this.inputEl && this.inputEl.nativeElement, this.renderer2);\n    }\n  }\n\n}\n\nInputEmailComponent.ɵfac = function InputEmailComponent_Factory(t) {\n  return new (t || InputEmailComponent)(i0.ɵɵdirectiveInject(i1.DomAttributesService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.DeprecationsService));\n};\n\nInputEmailComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: InputEmailComponent,\n  selectors: [[\"bb-input-email-ui\"]],\n  viewQuery: function InputEmailComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputEl = _t.first);\n    }\n  },\n  inputs: {\n    placeholder: \"placeholder\",\n    maxLength: \"maxLength\",\n    minLength: \"minLength\",\n    readonly: \"readonly\",\n    autocomplete: \"autocomplete\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => InputEmailComponent),\n    multi: true\n  }, {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => InputEmailComponent),\n    multi: true\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 21,\n  consts: [[3, \"for\", 4, \"ngIf\"], [\"type\", \"email\", 1, \"form-control\", 3, \"id\", \"ngModel\", \"disabled\", \"readOnly\", \"placeholder\", \"required\", \"bbFocus\", \"ngModelChange\", \"blur\", \"focus\"], [\"inputEmail\", \"\"], [3, \"for\"]],\n  template: function InputEmailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, InputEmailComponent_label_0_Template, 2, 2, \"label\", 0);\n      i0.ɵɵelementStart(1, \"input\", 1, 2);\n      i0.ɵɵlistener(\"ngModelChange\", function InputEmailComponent_Template_input_ngModelChange_1_listener($event) {\n        return ctx.onValueChange($event);\n      })(\"blur\", function InputEmailComponent_Template_input_blur_1_listener() {\n        return ctx.onBlur();\n      })(\"focus\", function InputEmailComponent_Template_input_focus_1_listener() {\n        return ctx.onFocus();\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"id\", ctx.id);\n      i0.ɵɵproperty(\"ngModel\", ctx.value)(\"disabled\", ctx.disabled)(\"readOnly\", ctx.readonly)(\"placeholder\", ctx.placeholder)(\"required\", ctx.required)(\"bbFocus\", ctx.autofocus);\n      i0.ɵɵattribute(\"aria-autocomplete\", ctx.ariaAutocomplete)(\"aria-controls\", ctx.ariaControls)(\"aria-label\", !ctx.label && ctx.ariaLabel || null)(\"aria-describedby\", ctx.ariaDescribedby)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-expanded\", ctx.ariaExpanded)(\"aria-activedescendant\", ctx.ariaActivedescendant)(\"role\", ctx.role)(\"aria-invalid\", ctx.ariaInvalid)(\"aria-owns\", ctx.ariaOwns)(\"maxlength\", ctx.maxLength)(\"minlength\", ctx.minLength)(\"autocomplete\", ctx.autocomplete);\n    }\n  },\n  directives: [i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i4.RequiredValidator, i5.FocusDirective, i4.MaxLengthValidator, i4.MinLengthValidator],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputEmailComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-input-email-ui',\n      templateUrl: './input-email.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => InputEmailComponent),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => InputEmailComponent),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i1.DomAttributesService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.DeprecationsService\n    }];\n  }, {\n    placeholder: [{\n      type: Input\n    }],\n    maxLength: [{\n      type: Input\n    }],\n    minLength: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    autocomplete: [{\n      type: Input\n    }],\n    inputEl: [{\n      type: ViewChild,\n      args: ['inputEmail']\n    }]\n  });\n})();\n\nclass InputEmailModule {}\n\nInputEmailModule.ɵfac = function InputEmailModule_Factory(t) {\n  return new (t || InputEmailModule)();\n};\n\nInputEmailModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: InputEmailModule\n});\nInputEmailModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, IconModule, FormsModule, BaseClassesModule, FocusModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputEmailModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, IconModule, FormsModule, BaseClassesModule, FocusModule],\n      declarations: [InputEmailComponent],\n      exports: [InputEmailComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { InputEmailComponent, InputEmailModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-input-email.js"],"names":["i0","forwardRef","Component","ChangeDetectionStrategy","Input","ViewChild","NgModule","InputBaseComponent","BaseClassesModule","i4","Validators","NG_VALUE_ACCESSOR","NG_VALIDATORS","FormsModule","i1","i2","i3","CommonModule","i5","FocusModule","IconModule","InputEmailComponent","constructor","domAttrService","elem","renderer2","cd","deprecationsService","placeholder","readonly","validate","control","email","ngAfterViewInit","ariaLabel","moveAriaAttributes","nativeElement","inputEl","ɵfac","DomAttributesService","ElementRef","Renderer2","ChangeDetectorRef","DeprecationsService","ɵcmp","provide","useExisting","multi","NgIf","DefaultValueAccessor","NgControlStatus","NgModel","RequiredValidator","FocusDirective","MaxLengthValidator","MinLengthValidator","type","args","selector","templateUrl","changeDetection","OnPush","providers","maxLength","minLength","autocomplete","InputEmailModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, Component, ChangeDetectionStrategy, Input, ViewChild, NgModule } from '@angular/core';\nimport { InputBaseComponent, BaseClassesModule } from '@backbase/ui-ang/base-classes';\nimport * as i4 from '@angular/forms';\nimport { Validators, NG_VALUE_ACCESSOR, NG_VALIDATORS, FormsModule } from '@angular/forms';\nimport * as i1 from '@backbase/ui-ang/services';\nimport * as i2 from '@backbase/foundation-ang/future';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i5 from '@backbase/ui-ang/focus';\nimport { FocusModule } from '@backbase/ui-ang/focus';\nimport { IconModule } from '@backbase/ui-ang/icon';\n\n/**\n * @name InputEmailComponent\n *\n * @a11y Current component provide option to pass needed accessibility\n * attributes. You need to take care of properties that are required in your case :\n *  - role\n *  - aria-activedescendant\n *  - aria-describedby\n *  - aria-expanded\n *  - aria-invalid\n *  - aria-label\n *  - aria-labelledby\n *  - aria-owns\n *\n * @description\n * Component that displays a email input.\n */\nclass InputEmailComponent extends InputBaseComponent {\n    constructor(domAttrService, elem, renderer2, cd, deprecationsService) {\n        super(cd, deprecationsService);\n        this.domAttrService = domAttrService;\n        this.elem = elem;\n        this.renderer2 = renderer2;\n        this.cd = cd;\n        this.deprecationsService = deprecationsService;\n        /**\n         * The placeholder for the email input. Defaults to an empty string;\n         */\n        this.placeholder = '';\n        /**\n         * Whether the email input is readonly.\n         */\n        this.readonly = false;\n    }\n    validate(control) {\n        return Validators.email(control);\n    }\n    ngAfterViewInit() {\n        if (!this.ariaLabel) {\n            this.domAttrService.moveAriaAttributes(this.elem.nativeElement, this.inputEl && this.inputEl.nativeElement, this.renderer2);\n        }\n    }\n}\nInputEmailComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputEmailComponent, deps: [{ token: i1.DomAttributesService }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i2.DeprecationsService }], target: i0.ɵɵFactoryTarget.Component });\nInputEmailComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: InputEmailComponent, selector: \"bb-input-email-ui\", inputs: { placeholder: \"placeholder\", maxLength: \"maxLength\", minLength: \"minLength\", readonly: \"readonly\", autocomplete: \"autocomplete\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => InputEmailComponent),\n            multi: true,\n        },\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => InputEmailComponent),\n            multi: true,\n        },\n    ], viewQueries: [{ propertyName: \"inputEl\", first: true, predicate: [\"inputEmail\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<label *ngIf=\\\"label\\\" for=\\\"{{ id }}\\\">{{ label }}</label>\\n<input\\n  id=\\\"{{ id }}\\\"\\n  #inputEmail\\n  [attr.aria-autocomplete]=\\\"ariaAutocomplete\\\"\\n  [attr.aria-controls]=\\\"ariaControls\\\"\\n  [attr.aria-label]=\\\"(!label && ariaLabel) || null\\\"\\n  [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n  [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n  [attr.aria-expanded]=\\\"ariaExpanded\\\"\\n  [attr.aria-activedescendant]=\\\"ariaActivedescendant\\\"\\n  [attr.role]=\\\"role\\\"\\n  [attr.aria-invalid]=\\\"ariaInvalid\\\"\\n  [attr.aria-owns]=\\\"ariaOwns\\\"\\n  [ngModel]=\\\"value\\\"\\n  (ngModelChange)=\\\"onValueChange($event)\\\"\\n  (blur)=\\\"onBlur()\\\"\\n  type=\\\"email\\\"\\n  class=\\\"form-control\\\"\\n  (focus)=\\\"onFocus()\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [readOnly]=\\\"readonly\\\"\\n  [placeholder]=\\\"placeholder\\\"\\n  [required]=\\\"required\\\"\\n  [bbFocus]=\\\"autofocus\\\"\\n  [attr.maxlength]=\\\"maxLength\\\"\\n  [attr.minlength]=\\\"minLength\\\"\\n  [attr.autocomplete]=\\\"autocomplete\\\"\\n/>\\n\", directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i4.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { type: i5.FocusDirective, selector: \"[bbFocus]\", inputs: [\"bbFocus\"], exportAs: [\"bbFocus\"] }, { type: i4.MaxLengthValidator, selector: \"[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]\", inputs: [\"maxlength\"] }, { type: i4.MinLengthValidator, selector: \"[minlength][formControlName],[minlength][formControl],[minlength][ngModel]\", inputs: [\"minlength\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputEmailComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-input-email-ui',\n                    templateUrl: './input-email.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => InputEmailComponent),\n                            multi: true,\n                        },\n                        {\n                            provide: NG_VALIDATORS,\n                            useExisting: forwardRef(() => InputEmailComponent),\n                            multi: true,\n                        },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i1.DomAttributesService }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i2.DeprecationsService }]; }, propDecorators: { placeholder: [{\n                type: Input\n            }], maxLength: [{\n                type: Input\n            }], minLength: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], autocomplete: [{\n                type: Input\n            }], inputEl: [{\n                type: ViewChild,\n                args: ['inputEmail']\n            }] } });\n\nclass InputEmailModule {\n}\nInputEmailModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputEmailModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nInputEmailModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputEmailModule, declarations: [InputEmailComponent], imports: [CommonModule, IconModule, FormsModule, BaseClassesModule, FocusModule], exports: [InputEmailComponent] });\nInputEmailModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputEmailModule, imports: [[CommonModule, IconModule, FormsModule, BaseClassesModule, FocusModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputEmailModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, IconModule, FormsModule, BaseClassesModule, FocusModule],\n                    declarations: [InputEmailComponent],\n                    exports: [InputEmailComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InputEmailComponent, InputEmailModule };\n"]},"metadata":{},"sourceType":"module"}