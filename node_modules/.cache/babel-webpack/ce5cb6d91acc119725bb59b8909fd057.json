{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Pipe, Injectable, Component, ChangeDetectionStrategy, Input, Directive, EventEmitter, Output, forwardRef, NgModule } from '@angular/core';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormControl, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { __rest } from 'tslib';\nimport { of, throwError, Subject, BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, switchMap, takeUntil, filter, tap, distinctUntilChanged, withLatestFrom } from 'rxjs/operators';\nimport * as i1$1 from '@backbase/data-ang/actions';\nimport * as i6$1 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport * as i2$1 from '@backbase/ui-ang/collapsible';\nimport { CollapsibleModule } from '@backbase/ui-ang/collapsible';\nimport * as i3$1 from '@backbase/ui-ang/header';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport * as i2 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i3 from '@backbase/ui-ang/input-checkbox';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport * as i6 from '@backbase/ui-ang/input-inline-edit';\nimport { InputInlineEditModule } from '@backbase/ui-ang/input-inline-edit';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport * as i1$2 from '@backbase/ui-ang/switch';\nimport { SwitchModule } from '@backbase/ui-ang/switch';\nimport * as i5$1 from '@backbase/ui-ang/tooltip-directive';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport * as i5$2 from '@backbase/ui-ang/amount';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport * as i2$2 from '@backbase/ui-ang/dropdown-single-select';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport * as i1$3 from '@backbase/data-ang/engagement';\n\nfunction ActionsNotificationChannelsComponent_ng_template_1_label_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 5);\n    i0.ɵɵelementStart(1, \"span\", 6);\n    i0.ɵɵi18n(2, 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"bb-icon-ui\", 8);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ActionsNotificationChannelsComponent_ng_template_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelement(1, \"bb-input-checkbox-ui\", 10);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ActionsNotificationChannelsComponent_ng_template_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelement(1, \"bb-input-checkbox-ui\", 11);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ActionsNotificationChannelsComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ActionsNotificationChannelsComponent_ng_template_1_label_0_Template, 4, 0, \"label\", 2);\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵtemplate(2, ActionsNotificationChannelsComponent_ng_template_1_div_2_Template, 2, 0, \"div\", 4);\n    i0.ɵɵtemplate(3, ActionsNotificationChannelsComponent_ng_template_1_div_3_Template, 2, 0, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const hostRef_r1 = ctx.$implicit;\n    const actionsMap_r2 = ctx.context.actionsMap;\n    i0.ɵɵproperty(\"ngIf\", actionsMap_r2.has(\"sms\") || actionsMap_r2.has(\"email\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", hostRef_r1.formGroup);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", actionsMap_r2.has(\"sms\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", actionsMap_r2.has(\"email\"));\n  }\n}\n\nconst _c10 = function (a0) {\n  return {\n    actionsMap: a0\n  };\n};\n\nfunction SwitchWithLoadingComponent_bb_switch_ui_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"bb-switch-ui\", 2);\n    i0.ɵɵlistener(\"ngModelChange\", function SwitchWithLoadingComponent_bb_switch_ui_0_Template_bb_switch_ui_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.value = $event;\n    })(\"blur\", function SwitchWithLoadingComponent_bb_switch_ui_0_Template_bb_switch_ui_blur_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onTouch();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"aria-label\", ctx_r0.ariaLabel)(\"ngModel\", ctx_r0.value);\n  }\n}\n\nfunction SwitchWithLoadingComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 4);\n    i0.ɵɵelement(2, \"circle\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ActionsAccountBalanceRecipeFormComponent_ng_template_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵelement(2, \"bb-header-ui\", 8);\n    i0.ɵɵelementStart(3, \"bb-switch-with-loading\", 9);\n    i0.ɵɵlistener(\"change\", function ActionsAccountBalanceRecipeFormComponent_ng_template_1_ng_template_2_Template_bb_switch_with_loading_change_3_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const hostRef_r1 = i0.ɵɵnextContext().$implicit;\n      return hostRef_r1.onActiveLoadingChange();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 10);\n    i0.ɵɵi18n(5, 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    const hostRef_r1 = ctx_r9.$implicit;\n    const isLoading_r3 = ctx_r9.context.isLoading;\n    i0.ɵɵproperty(\"ngClass\", hostRef_r1.isCardExpanded ? \"card-header\" : \"card-body\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"isLoading\", isLoading_r3);\n  }\n}\n\nfunction ActionsAccountBalanceRecipeFormComponent_ng_template_1_ng_template_3_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-amount-ui\", 20);\n  }\n\n  if (rf & 2) {\n    const formGroup_r2 = i0.ɵɵnextContext(2).context.formGroup;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"amount\", formGroup_r2.get(\"amount\").value.amount)(\"currency\", ctx_r11.account == null ? null : ctx_r11.account.currency);\n  }\n}\n\nfunction ActionsAccountBalanceRecipeFormComponent_ng_template_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelementStart(1, \"label\", 13);\n    i0.ɵɵi18n(2, 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 15);\n    i0.ɵɵelementStart(4, \"div\", 16);\n    i0.ɵɵtemplate(5, ActionsAccountBalanceRecipeFormComponent_ng_template_1_ng_template_3_ng_template_5_Template, 1, 2, \"ng-template\", null, 17, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(7, \"bb-input-inline-edit-ui\", 18);\n    i0.ɵɵlistener(\"accept\", function ActionsAccountBalanceRecipeFormComponent_ng_template_1_ng_template_3_Template_bb_input_inline_edit_ui_accept_7_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const hostRef_r1 = i0.ɵɵnextContext().$implicit;\n      return hostRef_r1.onInlineEditAccept($event);\n    });\n    i0.ɵɵpipe(8, \"noFractionDigits\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"bb-actions-notification-channels\", 19);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r10 = i0.ɵɵreference(6);\n\n    const ctx_r16 = i0.ɵɵnextContext();\n    const formGroup_r2 = ctx_r16.context.formGroup;\n    const hostRef_r1 = ctx_r16.$implicit;\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"inputText\", i0.ɵɵpipeBind1(8, 3, formGroup_r2.get(\"amount\").value.amount))(\"inputInlineTemplate\", _r10);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"actions\", hostRef_r1.specificationActions);\n  }\n}\n\nfunction ActionsAccountBalanceRecipeFormComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\", 2);\n    i0.ɵɵelementStart(1, \"bb-collapsible-ui\", 3);\n    i0.ɵɵtemplate(2, ActionsAccountBalanceRecipeFormComponent_ng_template_1_ng_template_2_Template, 6, 2, \"ng-template\", 4);\n    i0.ɵɵtemplate(3, ActionsAccountBalanceRecipeFormComponent_ng_template_1_ng_template_3_Template, 10, 5, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const hostRef_r1 = ctx.$implicit;\n    const formGroup_r2 = ctx.context.formGroup;\n    i0.ɵɵproperty(\"formGroup\", formGroup_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"isOpen\", hostRef_r1.isCardExpanded);\n  }\n}\n\nconst _c21 = function (a0, a1) {\n  return {\n    formGroup: a0,\n    isLoading: a1\n  };\n};\n\nfunction ActionsTransactionsRecipeFormComponent_ng_template_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵelement(2, \"bb-header-ui\", 8);\n    i0.ɵɵelementStart(3, \"bb-switch-with-loading\", 9);\n    i0.ɵɵlistener(\"change\", function ActionsTransactionsRecipeFormComponent_ng_template_1_ng_template_2_Template_bb_switch_with_loading_change_3_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const hostRef_r1 = i0.ɵɵnextContext().$implicit;\n      return hostRef_r1.onActiveLoadingChange();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 10);\n    i0.ɵɵi18n(5, 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    const hostRef_r1 = ctx_r9.$implicit;\n    const isLoading_r3 = ctx_r9.context.isLoading;\n    i0.ɵɵproperty(\"ngClass\", hostRef_r1.isCardExpanded ? \"card-header\" : \"card-body\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"isLoading\", isLoading_r3);\n  }\n}\n\nfunction ActionsTransactionsRecipeFormComponent_ng_template_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelement(1, \"bb-actions-notification-channels\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const hostRef_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"actions\", hostRef_r1.specificationActions);\n  }\n}\n\nfunction ActionsTransactionsRecipeFormComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\", 2);\n    i0.ɵɵelementStart(1, \"bb-collapsible-ui\", 3);\n    i0.ɵɵtemplate(2, ActionsTransactionsRecipeFormComponent_ng_template_1_ng_template_2_Template, 6, 2, \"ng-template\", 4);\n    i0.ɵɵtemplate(3, ActionsTransactionsRecipeFormComponent_ng_template_1_ng_template_3_Template, 2, 1, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const hostRef_r1 = ctx.$implicit;\n    const formGroup_r2 = ctx.context.formGroup;\n    i0.ɵɵproperty(\"formGroup\", formGroup_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"isOpen\", hostRef_r1.isCardExpanded);\n  }\n}\n\nfunction ActionsScheduleNotificationsComponent_ng_template_1_div_8_div_4_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function ActionsScheduleNotificationsComponent_ng_template_1_div_8_div_4_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const i_r6 = i0.ɵɵnextContext().index;\n      const hostRef_r1 = i0.ɵɵnextContext(2).$implicit;\n      return hostRef_r1.deleteTimeOption(i_r6);\n    });\n    i0.ɵɵelement(1, \"bb-icon-ui\", 21);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ActionsScheduleNotificationsComponent_ng_template_1_div_8_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelementStart(1, \"bb-time-picker\", 18);\n    i0.ɵɵlistener(\"change\", function ActionsScheduleNotificationsComponent_ng_template_1_div_8_div_4_Template_bb_time_picker_change_1_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const hostRef_r1 = i0.ɵɵnextContext(2).$implicit;\n      return hostRef_r1.timeControlChange();\n    });\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ActionsScheduleNotificationsComponent_ng_template_1_div_8_div_4_button_3_Template, 2, 0, \"button\", 19);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ref_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    const last_r7 = ctx.last;\n    const hostRef_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", i_r6)(\"excludedOptions\", i0.ɵɵpipeBind1(2, 5, hostRef_r1.selectedTimeOptions$))(\"controlRef\", ref_r5)(\"minutesStep\", hostRef_r1.minutesStep);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", last_r7 && i_r6 !== 0);\n  }\n}\n\nfunction ActionsScheduleNotificationsComponent_ng_template_1_div_8_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function ActionsScheduleNotificationsComponent_ng_template_1_div_8_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const hostRef_r1 = i0.ɵɵnextContext(2).$implicit;\n      return hostRef_r1.addTimeOption();\n    });\n    i0.ɵɵelement(1, \"bb-icon-ui\", 23);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ActionsScheduleNotificationsComponent_ng_template_1_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelementStart(1, \"span\", 12);\n    i0.ɵɵi18n(2, 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 14);\n    i0.ɵɵtemplate(4, ActionsScheduleNotificationsComponent_ng_template_1_div_8_div_4_Template, 4, 7, \"div\", 15);\n    i0.ɵɵtemplate(5, ActionsScheduleNotificationsComponent_ng_template_1_div_8_button_5_Template, 2, 0, \"button\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const hostRef_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", hostRef_r1.scheduleForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", hostRef_r1.scheduleTime.controls);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", hostRef_r1.scheduleTime.controls.length < hostRef_r1.MaxOptionsQuantity);\n  }\n}\n\nfunction ActionsScheduleNotificationsComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵi18n(3, 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 3);\n    i0.ɵɵelementStart(5, \"bb-dropdown-single-select-ui\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function ActionsScheduleNotificationsComponent_ng_template_1_Template_bb_dropdown_single_select_ui_ngModelChange_5_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const hostRef_r1 = restoredCtx.$implicit;\n      return hostRef_r1.scheduleType = $event;\n    })(\"change\", function ActionsScheduleNotificationsComponent_ng_template_1_Template_bb_dropdown_single_select_ui_change_5_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const hostRef_r1 = restoredCtx.$implicit;\n      return hostRef_r1.onScheduleTypeChange($event);\n    });\n    i0.ɵɵelement(6, \"bb-dropdown-single-select-option-ui\", 6);\n    i0.ɵɵelement(7, \"bb-dropdown-single-select-option-ui\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, ActionsScheduleNotificationsComponent_ng_template_1_div_8_Template, 6, 3, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 9);\n    i0.ɵɵelementStart(10, \"em\");\n    i0.ɵɵi18n(11, 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"hr\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const hostRef_r1 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"required\", true)(\"ngModel\", hostRef_r1.scheduleType);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", hostRef_r1.ScheduleType.RightAway);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", hostRef_r1.ScheduleType.Custom);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", hostRef_r1.scheduleType === hostRef_r1.ScheduleType.Custom);\n    i0.ɵɵadvance(3);\n    i0.ɵɵi18nExp(hostRef_r1.scheduleType);\n    i0.ɵɵi18nApply(11);\n  }\n}\n\nfunction ActionsToggleRecipeFormComponent_ng_template_1_ng_container_0_bb_actions_schedule_notifications_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"bb-actions-schedule-notifications\", 9);\n    i0.ɵɵlistener(\"submit\", function ActionsToggleRecipeFormComponent_ng_template_1_ng_container_0_bb_actions_schedule_notifications_7_Template_bb_actions_schedule_notifications_submit_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const hostRef_r1 = i0.ɵɵnextContext(2).$implicit;\n      return hostRef_r1.onScheduleChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const hostRef_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"scheduleForm\", hostRef_r1.formGroup.get(\"recurrence\"))(\"actionRecipe\", hostRef_r1.actionRecipe);\n  }\n}\n\nfunction ActionsToggleRecipeFormComponent_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"form\", 3);\n    i0.ɵɵelementStart(2, \"div\", 4);\n    i0.ɵɵelementStart(3, \"div\", 5);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"bb-switch-with-loading\", 6);\n    i0.ɵɵi18nAttributes(6, 7);\n    i0.ɵɵlistener(\"change\", function ActionsToggleRecipeFormComponent_ng_template_1_ng_container_0_Template_bb_switch_with_loading_change_5_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const hostRef_r1 = i0.ɵɵnextContext().$implicit;\n      return hostRef_r1.onSubmit(hostRef_r1.formGroup.value);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, ActionsToggleRecipeFormComponent_ng_template_1_ng_container_0_bb_actions_schedule_notifications_7_Template, 1, 2, \"bb-actions-schedule-notifications\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const hostRef_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", hostRef_r1.formGroup);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"data-role\", \"toggle-recipe-label-\" + hostRef_r1.specification.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", hostRef_r1.label, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵi18nExp(\"Switch on/off \" + hostRef_r1.label);\n    i0.ɵɵi18nApply(6);\n    i0.ɵɵproperty(\"isLoading\", hostRef_r1.isLoading);\n    i0.ɵɵattribute(\"data-role\", \"toggle-recipe-\" + hostRef_r1.specification.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", hostRef_r1.scheduleEnabled && (hostRef_r1.formGroup.value == null ? null : hostRef_r1.formGroup.value.active) && hostRef_r1.actionRecipe);\n  }\n}\n\nfunction ActionsToggleRecipeFormComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ActionsToggleRecipeFormComponent_ng_template_1_ng_container_0_Template, 8, 7, \"ng-container\", 2);\n  }\n\n  if (rf & 2) {\n    const hostRef_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", hostRef_r1.formGroup);\n  }\n}\n\nclass NoFractionDigitsPipe {\n  transform(val) {\n    return val ? val.replace(/\\..*/, '') : '';\n  }\n\n}\n\nNoFractionDigitsPipe.ɵfac = function NoFractionDigitsPipe_Factory(t) {\n  return new (t || NoFractionDigitsPipe)();\n};\n\nNoFractionDigitsPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"noFractionDigits\",\n  type: NoFractionDigitsPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NoFractionDigitsPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'noFractionDigits',\n      pure: true\n    }]\n  }], null, null);\n})();\n\nconst AM_PM = ['AM', 'PM'];\nconst DAYS_OF_WEEK = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];\n\nfunction getTimeOptions(startTime, minutesStep, excludedOptions, amPmFormat) {\n  const timeOptions = [];\n  let index = 0;\n\n  while (startTime < 24 * 60) {\n    const hh = Math.floor(startTime / 60);\n    const mm = startTime % 60;\n\n    if (!excludedOptions.includes(startTime)) {\n      timeOptions[index] = {\n        label: getOptionLabel(hh, mm, amPmFormat),\n        time: startTime\n      };\n      index++;\n    }\n\n    startTime = startTime + minutesStep;\n  }\n\n  return timeOptions;\n}\n\nfunction getHoursOfDay(scheduleTime = []) {\n  const list = scheduleTime.map(time => String(time / 60));\n\n  if (!list.length) {\n    for (let i = 0; i < 24; i++) {\n      list.push(`${i}`);\n    }\n  }\n\n  return list;\n}\n\nfunction hoursToMinutesArray(hours) {\n  return (hours === null || hours === void 0 ? void 0 : hours.map(hour => Number(hour) * 60)) || [];\n}\n\nfunction getOptionLabel(hh, mm, amPmFormat) {\n  const getFormattedTime = (hours = hh, suffix = '') => ('0' + hours).slice(-2) + '.' + ('0' + mm).slice(-2) + suffix;\n\n  return amPmFormat ? getFormattedTime(hh % 12, AM_PM[Math.floor(hh / 12)]) : getFormattedTime();\n}\n\nconst firstNonEmptyString = (...args) => args.find(item => !!item) || '';\n\nconst filterObjectByPropNames = (obj, keysToExclude) => {\n  const resultObj = Object.assign({}, obj);\n  keysToExclude.forEach(id => delete resultObj[id]);\n  return resultObj;\n};\n\nconst isEqualNumberArrays = (arr1, arr2) => {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  const sortedArr1 = sortNumberArray(arr1);\n  const sortedArr2 = sortNumberArray(arr2);\n  return sortedArr1.every((v, i) => v === sortedArr2[i]);\n};\n\nconst sortNumberArray = (arr, asc = true) => arr.slice(0).sort((a, b) => asc ? a - b : b - a);\n\nconst fromHttpResponse = body => {\n  if (body === null) {\n    throw new Error('Response body not set');\n  }\n\n  return body;\n};\n\nconst secondsToMilliseconds = seconds => seconds * 1000;\n\nconst actionRecipeFormItemToRequest = _a => {\n  var {\n    id,\n    name,\n    amount,\n    actions,\n    recurrence\n  } = _a,\n      restActionRecipe = __rest(_a, [\"id\", \"name\", \"amount\", \"actions\", \"recurrence\"]);\n\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, restActionRecipe), id && {\n    id\n  }), name && {\n    name\n  }), {\n    amount: (amount === null || amount === void 0 ? void 0 : amount.amount) || '0'\n  }), Object.keys(notificationRecurrenceFormValueToRequest(recurrence)).length && {\n    recurrence: notificationRecurrenceFormValueToRequest(recurrence)\n  }), {\n    actions: notificationChannelsFormValueToRequest(actions)\n  });\n};\n\nconst parseActionRecipeFormItem = _a => {\n  var {\n    id,\n    name,\n    amount,\n    actions,\n    recurrence\n  } = _a,\n      restActionRecipe = __rest(_a, [\"id\", \"name\", \"amount\", \"actions\", \"recurrence\"]);\n\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, restActionRecipe), id && {\n    id\n  }), name && {\n    name\n  }), {\n    amount: amount.amount || '0',\n    actions: parseNotificationChannelsFormValue(actions)\n  }), Object.keys(notificationRecurrenceFormValueToRequest(recurrence)).length && {\n    recurrence: notificationRecurrenceFormValueToRequest(recurrence)\n  });\n};\n\nconst arrangementActionRecipeToRequest = arrangementId => actionRecipeFormItemValue => Object.assign({\n  arrangementId\n}, actionRecipeFormItemToRequest(actionRecipeFormItemValue));\n\nconst mergeNotificationChannels = (channels, defaultChannels) => channels ? channels.map(channel => Object.assign(Object.assign({}, channel), {\n  enabled: defaultChannels.some(({\n    type\n  }) => type === channel.type)\n})) : [];\n\nconst mergeSpecificationsWithActionRecipes = (specs, recipes) => specs.reduce((prev, specification) => Object.assign(Object.assign({}, prev), {\n  [specification.id]: {\n    specification,\n    actionRecipe: recipes.find(({\n      specificationId\n    }) => specificationId === specification.id)\n  }\n}), {});\n\nconst getMappedRecurrenceResponse = (responseRecurrence, {\n  recurrence: cachedRecurrence\n}) => Object.assign(Object.assign({}, responseRecurrence), {\n  hoursOfDay: getCachedHoursOfDay(responseRecurrence, cachedRecurrence)\n});\n\nconst notificationChannelsFormValueToRequest = channels => Object.keys(channels).filter(key => channels[key]).map(type => ({\n  type\n}));\n\nconst notificationRecurrenceFormValueToRequest = rec => Object.assign(Object.assign({}, ((rec === null || rec === void 0 ? void 0 : rec.scheduleTime.length) || 0) !== 0 && {\n  hoursOfDay: getHoursOfDay(rec === null || rec === void 0 ? void 0 : rec.scheduleTime)\n}), ((rec === null || rec === void 0 ? void 0 : rec.scheduleTime.length) || 0) !== 0 && {\n  daysOfWeek: (rec === null || rec === void 0 ? void 0 : rec.daysOfWeek) || DAYS_OF_WEEK\n});\n\nconst parseNotificationChannelsFormValue = channels => Object.keys(channels).map(type => ({\n  type,\n  enabled: channels[type]\n}));\n\nconst getCachedHoursOfDay = (responseRecurrence, cachedRecurrence) => {\n  if (!(cachedRecurrence === null || cachedRecurrence === void 0 ? void 0 : cachedRecurrence.scheduleTime)) {\n    return responseRecurrence.hoursOfDay;\n  }\n\n  if (!isEqualNumberArrays(cachedRecurrence.scheduleTime.slice(0), hoursToMinutesArray(responseRecurrence.hoursOfDay))) {\n    return responseRecurrence.hoursOfDay;\n  }\n\n  return cachedRecurrence.scheduleTime.map(minutes => String(minutes / 60));\n};\n\nclass ActionsFormBuilderService {\n  constructor(fb) {\n    this.fb = fb;\n  }\n  /**\n   * Method to build action recipe form group.\n   *\n   * @param specification - acton recipe specification\n   * @param actionRecipe - action recipe\n   * @param account - account data\n   * @returns prefilled form object\n   */\n\n\n  buildActionRecipeFormGroup(specification, actionRecipe, account) {\n    const actionRecipeFormValue = this.buildActionRecipeFormValue(specification, actionRecipe, account);\n    return this.fb.group(Object.assign(Object.assign({}, actionRecipeFormValue), {\n      actions: this.fb.group(actionRecipeFormValue.actions),\n      recurrence: this.buildScheduleNotificationsFormGroup(actionRecipe)\n    }));\n  }\n  /**\n   * Method to build action recipe form value.\n   *\n   * @param specification - acton recipe specification\n   * @param actionRecipe - action recipe\n   * @param account - account data\n   * @returns action recipe form value object\n   */\n\n\n  buildActionRecipeFormValue(specification, actionRecipe, account) {\n    var _a, _b;\n\n    const {\n      actions,\n      amount,\n      active,\n      recurrence,\n      id,\n      specificationId,\n      name\n    } = actionRecipe || this.getDefaultActionRecipe(specification);\n    return Object.assign({\n      id,\n      // tslint:disable-next-line:no-null-keyword\n      name: name || null,\n      specificationId,\n      active,\n      recurrence: this.buildRecurrenceFormItem(recurrence),\n      amount: {\n        amount,\n        currency: account ? account.currency : {}\n      },\n      actions: this.buildChannelsFormValue(actions)\n    }, ((_a = specification.recipeDefaults) === null || _a === void 0 ? void 0 : _a.additions) && {\n      additions: Object.assign({}, (_b = specification.recipeDefaults) === null || _b === void 0 ? void 0 : _b.additions)\n    });\n  }\n  /**\n   * Method to build schedule notificatons form group.\n   *\n   * @param actionRecipe - action recipe\n   * @returns prefilled form object\n   */\n\n\n  buildScheduleNotificationsFormGroup(actionRecipe) {\n    return this.fb.group({\n      scheduleTime: this.getTimeOptions(actionRecipe)\n    });\n  }\n\n  getDefaultActionRecipe(specification) {\n    return {\n      // tslint:disable-next-line:no-null-keyword\n      id: null,\n      // tslint:disable-next-line:no-null-keyword\n      name: specification.name || null,\n      specificationId: specification.id,\n      amount: specification.recipeDefaults && specification.recipeDefaults.amount || '0',\n      active: false,\n      actions: mergeNotificationChannels(specification.actions, specification.recipeDefaults && specification.recipeDefaults.actions || [])\n    };\n  }\n\n  buildChannelsFormValue(channels) {\n    return channels.reduce((previous, current) => Object.assign(Object.assign({}, previous), {\n      [current.type]: current.enabled\n    }), {});\n  }\n\n  buildRecurrenceFormItem(recurrence) {\n    return Object.assign({\n      scheduleTime: hoursToMinutesArray(recurrence === null || recurrence === void 0 ? void 0 : recurrence.hoursOfDay)\n    }, (recurrence === null || recurrence === void 0 ? void 0 : recurrence.daysOfWeek) && {\n      daysOfWeek: recurrence === null || recurrence === void 0 ? void 0 : recurrence.daysOfWeek\n    });\n  }\n\n  getTimeOptions(recipe) {\n    var _a, _b;\n\n    const mappedHours = ((_b = (_a = recipe === null || recipe === void 0 ? void 0 : recipe.recurrence) === null || _a === void 0 ? void 0 : _a.hoursOfDay) === null || _b === void 0 ? void 0 : _b.map(option => this.fb.control(Number(option) * 60))) || [];\n    return this.fb.array((mappedHours === null || mappedHours === void 0 ? void 0 : mappedHours.length) !== 24 ? mappedHours : []);\n  }\n\n}\n\nActionsFormBuilderService.ɵfac = function ActionsFormBuilderService_Factory(t) {\n  return new (t || ActionsFormBuilderService)(i0.ɵɵinject(i1.FormBuilder));\n};\n\nActionsFormBuilderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ActionsFormBuilderService,\n  factory: ActionsFormBuilderService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsFormBuilderService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.FormBuilder\n    }];\n  }, null);\n})();\n\nconst EMPTY_RESPONSE_ERROR = new Error('Response data is empty');\nconst ACTION_RECIPES_LIMIT = 999999;\n\nclass ActionsNotificationsSettingsDataService {\n  constructor(dataHttpService, actionSpecificationsService) {\n    this.dataHttpService = dataHttpService;\n    this.actionSpecificationsService = actionSpecificationsService;\n  }\n  /**\n   * Method to get action recipes.\n   *\n   * @param params - params object\n   * @returns action recipe array\n   */\n\n\n  getActionRecipes(params = {}) {\n    const requestParams = Object.assign({\n      limit: ACTION_RECIPES_LIMIT\n    }, params);\n    return this.dataHttpService.getActionRecipes(requestParams).pipe(map(fromHttpResponse), map(response => response.actionRecipes));\n  }\n  /**\n   * Method to get action recipe specifications.\n   *\n   * @returns action recipe specifications\n   */\n\n\n  getSpecifications() {\n    return this.actionSpecificationsService.getActionRecipeSpecifications({}).pipe(map(fromHttpResponse), map(response => response.actionRecipeSpecifications || []));\n  }\n  /**\n   * Method to save action recipe.\n   *\n   * @param action - recipe form value\n   * @param arrangementId - arrangement ID\n   * @returns batch processing response\n   */\n\n\n  saveActionRecipe(actionRecipeFormItem, arrangementId) {\n    const recipeToRequest = arrangementId ? arrangementActionRecipeToRequest(arrangementId) : actionRecipeFormItemToRequest;\n    const batchProcessingPutRequestBody = {\n      actionRecipes: [recipeToRequest(actionRecipeFormItem)]\n    };\n    return this.dataHttpService.putBatchProcessing({\n      batchProcessingPutRequestBody\n    }).pipe(switchMap(body => body ? of(body) : throwError(EMPTY_RESPONSE_ERROR)));\n  }\n\n}\n\nActionsNotificationsSettingsDataService.ɵfac = function ActionsNotificationsSettingsDataService_Factory(t) {\n  return new (t || ActionsNotificationsSettingsDataService)(i0.ɵɵinject(i1$1.ActionRecipesHttpService), i0.ɵɵinject(i1$1.ActionRecipeSpecificationsHttpService));\n};\n\nActionsNotificationsSettingsDataService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ActionsNotificationsSettingsDataService,\n  factory: ActionsNotificationsSettingsDataService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsNotificationsSettingsDataService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.ActionRecipesHttpService\n    }, {\n      type: i1$1.ActionRecipeSpecificationsHttpService\n    }];\n  }, null);\n})();\n\nclass ActionsNotificationChannelsComponent {\n  constructor(controlContainer) {\n    this.controlContainer = controlContainer;\n    /**\n     * Action notification channels IDs.\n     */\n\n    this.id = `bb-actions-notification-channels-${ActionsNotificationChannelsComponent.idCounter++}`;\n    /**\n     * Actions map.\n     */\n\n    this.actionsMap = new Map();\n  }\n  /**\n   * Actions map setter.\n   */\n\n\n  set actions(value) {\n    this.actionsMap = new Map(value.map(action => [action.type, action]));\n  }\n\n  ngAfterContentInit() {\n    this.formGroup = this.controlContainer.control;\n  }\n\n}\n\nActionsNotificationChannelsComponent.idCounter = 0;\n\nActionsNotificationChannelsComponent.ɵfac = function ActionsNotificationChannelsComponent_Factory(t) {\n  return new (t || ActionsNotificationChannelsComponent)(i0.ɵɵdirectiveInject(i1.ControlContainer));\n};\n\nActionsNotificationChannelsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ActionsNotificationChannelsComponent,\n  selectors: [[\"bb-actions-notification-channels\"]],\n  inputs: {\n    actions: \"actions\"\n  },\n  decls: 2,\n  vars: 4,\n  consts: function () {\n    let i18n_0;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Title for notification channels\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___1 = goog.getMsg(\"Additional channels\");\n      i18n_0 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___1;\n    } else {\n      i18n_0 = $localize`:Title for notification channels@@actions-common.notification-channels.title:Additional channels`;\n    }\n\n    let i18n_2;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Channels that you would like to receive notifications through\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___3 = goog.getMsg(\"Other channels that you would like to receive notifications through, additionally to the ones in-app\");\n      i18n_2 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___3;\n    } else {\n      i18n_2 = $localize`:Channels that you would like to receive notifications through@@actions-common.notification-channels.others:Other channels that you would like to receive notifications through, additionally to the ones in-app`;\n    }\n\n    let i18n_4;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___5 = goog.getMsg(\"Other channels that you would like to receive notifications through, additionally to the ones in-app\");\n      i18n_4 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___5;\n    } else {\n      i18n_4 = $localize`:@@actions-common.notification-channels.others:Other channels that you would like to receive notifications through, additionally to the ones in-app`;\n    }\n\n    let i18n_6;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Label for sms channel checkbox\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___7 = goog.getMsg(\"SMS\");\n      i18n_6 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___7;\n    } else {\n      i18n_6 = $localize`:Label for sms channel checkbox@@actions-common.notification-channels.sms.label:SMS`;\n    }\n\n    let i18n_8;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Label for email channel checkbox\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___9 = goog.getMsg(\"Email\");\n      i18n_8 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___9;\n    } else {\n      i18n_8 = $localize`:Label for email channel checkbox@@actions-common.notification-channels.email.label:Email`;\n    }\n\n    return [[\"bbActionsNotificationChannelsCustomizableDirective\", \"\", 3, \"bbHostRef\", \"bbTemplateContext\"], [\"bbActionsNotificationChannelsCustomizableDirective\", \"\"], [\"class\", \"bb-label bb-stack\", 4, \"ngIf\"], [3, \"formGroup\"], [\"class\", \"bb-block bb-block--sm\", 4, \"ngIf\"], [1, \"bb-label\", \"bb-stack\"], [\"data-role\", \"channel-title\", 1, \"bb-stack__item\", \"bb-stack__item--spacing-sm\"], i18n_0, [\"tabindex\", \"0\", \"name\", \"info\", \"size\", \"sm\", \"data-role\", \"channel-title-icon\", \"triggers\", \"hover focus\", \"aria-label\", i18n_2, \"bbTooltip\", i18n_4, 1, \"bb-stack__item\"], [1, \"bb-block\", \"bb-block--sm\"], [\"label\", i18n_6, \"formControlName\", \"sms\", \"data-role\", \"sms-checkbox\"], [\"label\", i18n_8, \"formControlName\", \"email\", \"data-role\", \"email-checkbox\"]];\n  },\n  template: function ActionsNotificationChannelsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵtemplate(1, ActionsNotificationChannelsComponent_ng_template_1_Template, 4, 4, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"bbHostRef\", ctx)(\"bbTemplateContext\", i0.ɵɵpureFunction1(2, _c10, ctx.actionsMap));\n    }\n  },\n  directives: function () {\n    return [ActionsNotificationChannelsCustomizableDirective, i5.NgIf, i1.NgControlStatusGroup, i1.FormGroupDirective, i2.IconComponent, i5$1.TooltipDirective, i3.InputCheckboxComponent, i1.NgControlStatus, i1.FormControlName];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsNotificationChannelsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-actions-notification-channels',\n      templateUrl: './actions-notification-channels.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i1.ControlContainer\n    }];\n  }, {\n    actions: [{\n      type: Input\n    }]\n  });\n})();\n\nclass ActionsNotificationChannelsCustomizableDirective extends BbTemplate {}\n\nActionsNotificationChannelsCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵActionsNotificationChannelsCustomizableDirective_BaseFactory;\n  return function ActionsNotificationChannelsCustomizableDirective_Factory(t) {\n    return (ɵActionsNotificationChannelsCustomizableDirective_BaseFactory || (ɵActionsNotificationChannelsCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ActionsNotificationChannelsCustomizableDirective)))(t || ActionsNotificationChannelsCustomizableDirective);\n  };\n}();\n\nActionsNotificationChannelsCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ActionsNotificationChannelsCustomizableDirective,\n  selectors: [[\"\", \"bbActionsNotificationChannelsCustomizableDirective\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsNotificationChannelsCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbActionsNotificationChannelsCustomizableDirective]'\n    }]\n  }], null, null);\n})(); // tslint:disable-next-line:directive-class-suffix\n\n\nclass ArrangementBasedRecipeModel {\n  constructor(actionsFormBuilderService) {\n    this.actionsFormBuilderService = actionsFormBuilderService;\n    /**\n     * On submit event emitter.\n     */\n\n    this.submit = new EventEmitter();\n    /**\n     * Specifications with actions.\n     */\n\n    this.specificationActions = [];\n    /**\n     * Loading flag.\n     */\n\n    this.isLoading = false;\n    this.destroy$ = new Subject();\n  }\n  /**\n   * Specification setter.\n   */\n\n\n  set specification(specification) {\n    this.specificationValue = specification;\n    this.specificationActions = specification.actions || [];\n  }\n  /**\n   * Specification getter.\n   */\n\n\n  get specification() {\n    return this.specificationValue;\n  }\n  /**\n   * Method to check if card form control is expanded.\n   *\n   * @returns boolean value\n   */\n\n\n  get isCardExpanded() {\n    const activeControl = this.formGroup && this.formGroup.get('active');\n    return activeControl && activeControl.value && !this.isLoading;\n  }\n\n  ngOnInit() {\n    this.formGroup = this.actionsFormBuilderService.buildActionRecipeFormGroup(this.specification, this.actionRecipe, this.account);\n    this.formGroup.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {\n      this.onSubmit(value);\n    });\n  }\n\n  ngOnChanges(changes) {\n    const {\n      actionRecipe\n    } = changes;\n\n    if (this.formGroup && actionRecipe && actionRecipe.previousValue !== actionRecipe.currentValue) {\n      this.formGroup.patchValue(this.actionsFormBuilderService.buildActionRecipeFormValue(this.specification, this.actionRecipe, this.account), {\n        emitEvent: false\n      });\n      this.isLoading = false;\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  /**\n   * Method to submit action recipe form.\n   *\n   * @param formValue - action recipe form value\n   */\n\n\n  onSubmit(formValue) {\n    this.submit.emit(formValue);\n  }\n  /**\n   * Method to set loading flag to true.\n   */\n\n\n  onActiveLoadingChange() {\n    this.isLoading = true;\n  }\n\n}\n\nArrangementBasedRecipeModel.ɵfac = function ArrangementBasedRecipeModel_Factory(t) {\n  return new (t || ArrangementBasedRecipeModel)(i0.ɵɵdirectiveInject(ActionsFormBuilderService));\n};\n\nArrangementBasedRecipeModel.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ArrangementBasedRecipeModel,\n  inputs: {\n    account: \"account\",\n    actionRecipe: \"actionRecipe\",\n    specification: \"specification\"\n  },\n  outputs: {\n    submit: \"submit\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ArrangementBasedRecipeModel, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ActionsFormBuilderService\n    }];\n  }, {\n    account: [{\n      type: Input\n    }],\n    actionRecipe: [{\n      type: Input\n    }],\n    specification: [{\n      type: Input\n    }],\n    submit: [{\n      type: Output\n    }]\n  });\n})();\n\nclass SwitchWithLoadingComponent {\n  constructor() {\n    /**\n     * Loading indicator presentation marker.\n     */\n    this.isLoading = false;\n    /**\n     * ControlValueAccessor on change handler.\n     */\n\n    this.onChange = () => {};\n    /**\n     * ControlValueAccessor on touch handler.\n     */\n\n\n    this.onTouch = () => {};\n  }\n  /**\n   * ControlValueAccessor value setter.\n   */\n\n\n  set value(val) {\n    this._value = val;\n    this.onChange(val);\n    this.onTouch(val);\n  }\n  /**\n   * ControlValueAccessor value getter.\n   */\n\n\n  get value() {\n    return this._value;\n  }\n  /**\n   * Method from ControlValueAccessor to write a new value to the element.\n   *\n   * @param value - new value\n   */\n\n\n  writeValue(value) {\n    this._value = value;\n  }\n  /**\n   * Method from ControlValueAccessor to register on change handler.\n   *\n   * @param fn - on change handler function\n   */\n\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  /**\n   * Method from ControlValueAccessor to register on touched handler.\n   *\n   * @param fn - on touched handler function\n   */\n\n\n  registerOnTouched(fn) {\n    this.onTouch = fn;\n  }\n\n}\n\nSwitchWithLoadingComponent.ɵfac = function SwitchWithLoadingComponent_Factory(t) {\n  return new (t || SwitchWithLoadingComponent)();\n};\n\nSwitchWithLoadingComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SwitchWithLoadingComponent,\n  selectors: [[\"bb-switch-with-loading\"]],\n  inputs: {\n    isLoading: \"isLoading\",\n    ariaLabel: [\"aria-label\", \"ariaLabel\"]\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SwitchWithLoadingComponent),\n    multi: true\n  }])],\n  decls: 3,\n  vars: 2,\n  consts: [[3, \"aria-label\", \"ngModel\", \"ngModelChange\", \"blur\", 4, \"ngIf\", \"ngIfElse\"], [\"loadingIndicator\", \"\"], [3, \"aria-label\", \"ngModel\", \"ngModelChange\", \"blur\"], [\"data-role\", \"loading-indicator\", 1, \"bb-loading-indicator\", \"bb-loading-indicator--sm\"], [\"aria-label\", \"Loading indicator\", \"preserveAspectRatio\", \"xMinYMin meet\", 1, \"bb-loading-indicator__circle\"], [\"cx\", \"50%\", \"cy\", \"50%\", \"fill\", \"none\", \"r\", \"40%\", \"stroke\", \"currentColor\", 1, \"bb-loading-indicator__path\"]],\n  template: function SwitchWithLoadingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SwitchWithLoadingComponent_bb_switch_ui_0_Template, 1, 2, \"bb-switch-ui\", 0);\n      i0.ɵɵtemplate(1, SwitchWithLoadingComponent_ng_template_1_Template, 3, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading)(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i5.NgIf, i1$2.SwitchComponent, i1.NgControlStatus, i1.NgModel],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SwitchWithLoadingComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-switch-with-loading',\n      templateUrl: './switch-with-loading.component.html',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => SwitchWithLoadingComponent),\n        multi: true\n      }]\n    }]\n  }], null, {\n    isLoading: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }]\n  });\n})();\n\nclass ActionsAccountBalanceRecipeFormComponent extends ArrangementBasedRecipeModel {\n  constructor(actionsFormBuilderService) {\n    super(actionsFormBuilderService);\n    /**\n     * Account balance action recipe ID.\n     */\n\n    this.id = `bb-actions-account-balance-recipe-form-${ActionsAccountBalanceRecipeFormComponent.idCounter++}`;\n  }\n  /**\n   * Method to patch the form with the amount and currency.\n   *\n   * @param amount - amount input value\n   */\n\n\n  onInlineEditAccept(amount) {\n    if (this.formGroup) {\n      const amountControl = this.formGroup.get('amount');\n\n      if (amountControl) {\n        amountControl.patchValue({\n          amount: amount || '0',\n          currency: amountControl.value.currency\n        });\n      }\n    }\n  }\n\n}\n\nActionsAccountBalanceRecipeFormComponent.idCounter = 0;\n\nActionsAccountBalanceRecipeFormComponent.ɵfac = function ActionsAccountBalanceRecipeFormComponent_Factory(t) {\n  return new (t || ActionsAccountBalanceRecipeFormComponent)(i0.ɵɵdirectiveInject(ActionsFormBuilderService));\n};\n\nActionsAccountBalanceRecipeFormComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ActionsAccountBalanceRecipeFormComponent,\n  selectors: [[\"bb-actions-account-balance-recipe-form\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 5,\n  consts: function () {\n    let i18n_11;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Account balance recipe heading\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___12 = goog.getMsg(\"Balance\");\n      i18n_11 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___12;\n    } else {\n      i18n_11 = $localize`:Account balance recipe heading@@actions-common.account-balance-recipe.heading:Balance`;\n    }\n\n    let i18n_13;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Account balance switcher aria label\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___14 = goog.getMsg(\"Enable and expand account balance notifications\");\n      i18n_13 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___14;\n    } else {\n      i18n_13 = $localize`:Account balance switcher aria label@@actions-common.account-balance-recipe.switcher.aria-label:Enable and expand account balance notifications`;\n    }\n\n    let i18n_15;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Account balance subheading\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___16 = goog.getMsg(\" Receive notifications when your balance is lower than a selected amount \");\n      i18n_15 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___16;\n    } else {\n      i18n_15 = $localize`:Account balance subheading@@actions-common.account-balance-recipe.subheading: Receive notifications when your balance is lower than a selected amount `;\n    }\n\n    let i18n_17;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Lower than input label\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___18 = goog.getMsg(\"Lower than \");\n      i18n_17 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___18;\n    } else {\n      i18n_17 = $localize`:Lower than input label@@actions-common.account-balance-recipe.lower-than-input:Lower than `;\n    }\n\n    let i18n_19;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Edit amount without\n       *                   fractions\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___20 = goog.getMsg(\"Edit amount without fractions\");\n      i18n_19 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___20;\n    } else {\n      i18n_19 = $localize`:Edit amount without\n                  fractions@@actions-common.account-balance-recipe.edit-amount-without-fractions-button:Edit amount without fractions`;\n    }\n\n    return [[\"bbActionsAccountBalanceRecipeCustomizableDirective\", \"\", 3, \"bbHostRef\", \"bbTemplateContext\"], [\"bbActionsAccountBalanceRecipeCustomizableDirective\", \"\"], [3, \"formGroup\"], [1, \"card\", 3, \"isOpen\"], [\"bbCollapsibleHeader\", \"\"], [\"bbCollapsibleBody\", \"\"], [3, \"ngClass\"], [1, \"bb-stack\"], [\"headingType\", \"h5\", \"heading\", i18n_11, \"data-role\", \"balance-header\", 1, \"bb-stack__item\"], [\"formControlName\", \"active\", \"aria-label\", i18n_13, \"data-role\", \"balance-switcher\", 1, \"bb-stack__item\", \"bb-stack__item--push-right\", 3, \"isLoading\", \"change\"], [\"data-role\", \"balance-sub-header\", 1, \"bb-text-support\"], i18n_15, [1, \"card-body\"], [\"id\", \"currency-input-label\", 1, \"bb-label\"], i18n_17, [1, \"row\"], [1, \"col-sm-6\", \"col-12\", \"bb-block\", \"bb-block--md\"], [\"amountTemplate\", \"\"], [\"pattern\", \"-?\\\\d{1,18}\", \"data-role\", \"balance-input\", \"ariaLabelEdit\", i18n_19, 3, \"inputText\", \"inputInlineTemplate\", \"accept\"], [\"formGroupName\", \"actions\", 3, \"actions\"], [1, \"bb-highlight\", 3, \"amount\", \"currency\"]];\n  },\n  template: function ActionsAccountBalanceRecipeFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵtemplate(1, ActionsAccountBalanceRecipeFormComponent_ng_template_1_Template, 4, 2, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"bbHostRef\", ctx)(\"bbTemplateContext\", i0.ɵɵpureFunction2(2, _c21, ctx.formGroup, ctx.isLoading));\n    }\n  },\n  directives: function () {\n    return [ActionsAccountBalanceRecipeCustomizableDirective, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i2$1.CollapsibleComponent, i2$1.CollapsibleHeaderDirective, i2$1.CollapsibleBodyDirective, i5.NgClass, i3$1.HeaderComponent, SwitchWithLoadingComponent, i1.NgControlStatus, i1.FormControlName, i6.InputInlineEditComponent, ActionsNotificationChannelsComponent, i1.FormGroupName, i5$2.AmountComponent];\n  },\n  pipes: function () {\n    return [NoFractionDigitsPipe];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsAccountBalanceRecipeFormComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-actions-account-balance-recipe-form',\n      templateUrl: './actions-account-balance-recipe-form.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ActionsFormBuilderService\n    }];\n  }, null);\n})();\n\nclass ActionsAccountBalanceRecipeCustomizableDirective extends BbTemplate {}\n\nActionsAccountBalanceRecipeCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵActionsAccountBalanceRecipeCustomizableDirective_BaseFactory;\n  return function ActionsAccountBalanceRecipeCustomizableDirective_Factory(t) {\n    return (ɵActionsAccountBalanceRecipeCustomizableDirective_BaseFactory || (ɵActionsAccountBalanceRecipeCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ActionsAccountBalanceRecipeCustomizableDirective)))(t || ActionsAccountBalanceRecipeCustomizableDirective);\n  };\n}();\n\nActionsAccountBalanceRecipeCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ActionsAccountBalanceRecipeCustomizableDirective,\n  selectors: [[\"\", \"bbActionsAccountBalanceRecipeCustomizableDirective\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsAccountBalanceRecipeCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbActionsAccountBalanceRecipeCustomizableDirective]'\n    }]\n  }], null, null);\n})();\n\nclass ActionsTransactionsRecipeFormComponent extends ArrangementBasedRecipeModel {\n  constructor(actionsFormBuilderService) {\n    super(actionsFormBuilderService);\n  }\n\n}\n\nActionsTransactionsRecipeFormComponent.ɵfac = function ActionsTransactionsRecipeFormComponent_Factory(t) {\n  return new (t || ActionsTransactionsRecipeFormComponent)(i0.ɵɵdirectiveInject(ActionsFormBuilderService));\n};\n\nActionsTransactionsRecipeFormComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ActionsTransactionsRecipeFormComponent,\n  selectors: [[\"bb-actions-transactions-recipe-form\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 5,\n  consts: function () {\n    let i18n_22;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Debits and credits recipe heading\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___23 = goog.getMsg(\"Debits and credits\");\n      i18n_22 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___23;\n    } else {\n      i18n_22 = $localize`:Debits and credits recipe heading@@actions-common.transactions-recipe.heading:Debits and credits`;\n    }\n\n    let i18n_24;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Debits and credits switcher aria label\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___25 = goog.getMsg(\"Enable and expand debits and credits notifications\");\n      i18n_24 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___25;\n    } else {\n      i18n_24 = $localize`:Debits and credits switcher aria label@@actions-common.transactions-recipe.switcher.aria-label:Enable and expand debits and credits notifications`;\n    }\n\n    let i18n_26;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Debits and credits subheading\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___27 = goog.getMsg(\" Receive notification when an amount is debited or credited from your account \");\n      i18n_26 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___27;\n    } else {\n      i18n_26 = $localize`:Debits and credits subheading@@actions-common.transactions-recipe.subheading: Receive notification when an amount is debited or credited from your account `;\n    }\n\n    return [[\"bbActionsTransactionsRecipeCustomizableDirective\", \"\", 3, \"bbHostRef\", \"bbTemplateContext\"], [\"bbActionsTransactionsRecipeCustomizableDirective\", \"\"], [3, \"formGroup\"], [1, \"card\", 3, \"isOpen\"], [\"bbCollapsibleHeader\", \"\"], [\"bbCollapsibleBody\", \"\"], [\"data-role\", \"collapsible-header\", 3, \"ngClass\"], [1, \"bb-stack\"], [\"headingType\", \"h5\", \"heading\", i18n_22, \"data-role\", \"transactions-recipe-header\", 1, \"bb-stack__item\"], [\"formControlName\", \"active\", \"aria-label\", i18n_24, \"data-role\", \"transactions-recipe-switcher\", 1, \"bb-stack__item\", \"bb-stack__item--push-right\", 3, \"isLoading\", \"change\"], [\"data-role\", \"transactions-recipe-sub-header\", 1, \"bb-text-support\"], i18n_26, [1, \"card-body\"], [\"formGroupName\", \"actions\", 3, \"actions\"]];\n  },\n  template: function ActionsTransactionsRecipeFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵtemplate(1, ActionsTransactionsRecipeFormComponent_ng_template_1_Template, 4, 2, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"bbHostRef\", ctx)(\"bbTemplateContext\", i0.ɵɵpureFunction2(2, _c21, ctx.formGroup, ctx.isLoading));\n    }\n  },\n  directives: function () {\n    return [ActionsTransactionsRecipeCustomizableDirective, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i2$1.CollapsibleComponent, i2$1.CollapsibleHeaderDirective, i2$1.CollapsibleBodyDirective, i5.NgClass, i3$1.HeaderComponent, SwitchWithLoadingComponent, i1.NgControlStatus, i1.FormControlName, ActionsNotificationChannelsComponent, i1.FormGroupName];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsTransactionsRecipeFormComponent, [{\n    type: Component,\n    args: [{\n      //TODO: remove first selector in 3.8.0\n      selector: 'bb-actions-transactions-recipe-form',\n      templateUrl: './actions-transactions-recipe-form.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ActionsFormBuilderService\n    }];\n  }, null);\n})();\n\nclass ActionsTransactionsRecipeCustomizableDirective extends BbTemplate {}\n\nActionsTransactionsRecipeCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵActionsTransactionsRecipeCustomizableDirective_BaseFactory;\n  return function ActionsTransactionsRecipeCustomizableDirective_Factory(t) {\n    return (ɵActionsTransactionsRecipeCustomizableDirective_BaseFactory || (ɵActionsTransactionsRecipeCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ActionsTransactionsRecipeCustomizableDirective)))(t || ActionsTransactionsRecipeCustomizableDirective);\n  };\n}();\n\nActionsTransactionsRecipeCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ActionsTransactionsRecipeCustomizableDirective,\n  selectors: [[\"\", \"bbActionsTransactionsRecipeCustomizableDirective\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsTransactionsRecipeCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbActionsTransactionsRecipeCustomizableDirective]'\n    }]\n  }], null, null);\n})();\n\nconst MinutesInDay = 1440;\nvar ScheduleType;\n\n(function (ScheduleType) {\n  ScheduleType[\"RightAway\"] = \"RightAway\";\n  ScheduleType[\"Custom\"] = \"Custom\";\n})(ScheduleType || (ScheduleType = {}));\n\nconst ScheduleDescriptionText = {\n  // TODO: use in component template once localize pipe will be available\n  RightAway: 'Notifications will be sent immediately.',\n  Custom: 'Notifications will be grouped and sent at specified time.'\n};\nconst DefaultTime = 480;\nconst MaxOptionsQuantity = 4;\n\nclass TimePickerComponent {\n  constructor() {\n    this.timeOptions = [];\n    this.excludedOptions$$ = new BehaviorSubject([]);\n    this.componentDestroyed$ = new Subject();\n    /**\n     * Start time\n     */\n\n    this.startTime = 0;\n    /**\n     * Step on minutes for time options\n     */\n\n    this.minutesStep = 60;\n    /**\n     * Time form control\n     */\n\n    this.timeControl = new FormControl();\n    /**\n     * Change event handler\n     */\n\n    this.onChange = _time => {}; // NOSONAR\n\n    /**\n     * Touched event handler\n     */\n\n\n    this.onTouched = () => {}; // NOSONAR\n\n  }\n  /**\n   * Options to exclude\n   */\n\n\n  set excludedOptions(options) {\n    this.excludedOptions$$.next(options || []);\n  }\n\n  ngOnInit() {\n    this.onExcludedOptionsChange();\n    this.onFormValueChange();\n  }\n\n  onExcludedOptionsChange() {\n    this.excludedOptions$$.pipe(takeUntil(this.componentDestroyed$)).subscribe(options => {\n      var _a, _b;\n\n      const timeControlValue = ((_a = this.timeControl.value) === null || _a === void 0 ? void 0 : _a.time) || ((_b = this.controlRef) === null || _b === void 0 ? void 0 : _b.value);\n      const excludedOptions = timeControlValue || timeControlValue === 0 ? options.filter(option => option !== timeControlValue) : [];\n      this.timeOptions = getTimeOptions(this.startTime, this.minutesStep, excludedOptions, this.amPmFormat);\n      const selection = this.timeOptions.find(option => option.time === timeControlValue);\n      this.timeControl.setValue(selection);\n    });\n  }\n\n  onFormValueChange() {\n    this.timeControl.valueChanges.pipe(takeUntil(this.componentDestroyed$)).subscribe(value => {\n      if (value) {\n        this.onChange(value.time);\n      }\n    });\n  }\n  /**\n   * Method to register change event handler\n   *\n   * @param fn\n   */\n\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  /**\n   * Method to register touched event handler\n   *\n   * @param fn\n   */\n\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * Method to write initial value to the input\n   *\n   * @param time\n   */\n\n\n  writeValue(time) {\n    this.timeControl.setValue(this.timeOptions.find(ts => ts.time === time));\n  }\n\n  markAsTouched(event) {\n    const target = event.target;\n    target.blur();\n    this.onTouched();\n  }\n\n  ngOnDestroy() {\n    this.componentDestroyed$.next(true);\n  }\n\n}\n\nTimePickerComponent.ɵfac = function TimePickerComponent_Factory(t) {\n  return new (t || TimePickerComponent)();\n};\n\nTimePickerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TimePickerComponent,\n  selectors: [[\"bb-time-picker\"]],\n  inputs: {\n    startTime: \"startTime\",\n    minutesStep: \"minutesStep\",\n    amPmFormat: \"amPmFormat\",\n    excludedOptions: \"excludedOptions\",\n    controlRef: \"controlRef\",\n    label: \"label\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TimePickerComponent),\n    multi: true\n  }])],\n  decls: 1,\n  vars: 3,\n  consts: [[\"iconName\", \"caret-down\", \"displayAttributePath\", \"label\", \"data-role\", \"time-picker-dropdown\", 3, \"options\", \"label\", \"formControl\", \"change\"]],\n  template: function TimePickerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"bb-dropdown-single-select-ui\", 0);\n      i0.ɵɵlistener(\"change\", function TimePickerComponent_Template_bb_dropdown_single_select_ui_change_0_listener($event) {\n        return ctx.markAsTouched($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"options\", ctx.timeOptions)(\"label\", ctx.label)(\"formControl\", ctx.timeControl);\n    }\n  },\n  directives: [i2$2.DropdownSingleSelectComponent, i1.NgControlStatus, i1.FormControlDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimePickerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-time-picker',\n      templateUrl: './time-picker.component.html',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => TimePickerComponent),\n        multi: true\n      }],\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    startTime: [{\n      type: Input\n    }],\n    minutesStep: [{\n      type: Input\n    }],\n    amPmFormat: [{\n      type: Input\n    }],\n    excludedOptions: [{\n      type: Input\n    }],\n    controlRef: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }]\n  });\n})();\n\nclass ActionsScheduleNotificationsComponent {\n  constructor(fb) {\n    this.fb = fb;\n    /**\n     * Schedule type enum\n     */\n\n    this.ScheduleType = ScheduleType;\n    /**\n     * Maximum options quantity\n     */\n\n    this.MaxOptionsQuantity = MaxOptionsQuantity;\n    /**\n     * Stream of selected options\n     */\n\n    this.selectedTimeOptions$ = of([]);\n    this.selectedTimeOptions = [];\n    this.destroy$ = new Subject();\n    /**\n     * Minutes step in time options list.\n     */\n\n    this.minutesStep = 60;\n    /**\n     * Schedule form submit output.\n     */\n\n    this.submit = new EventEmitter();\n  }\n\n  ngOnInit() {\n    this.scheduleType = this.getScheduleType(this.actionRecipe);\n    this.onScheduleFormChange();\n  }\n\n  onScheduleTypeChange(event) {\n    const target = event.target;\n\n    if (this.scheduleType === this.ScheduleType.RightAway) {\n      this.resetScheduleForm();\n    } else if (this.scheduleType === this.ScheduleType.Custom) {\n      this.addTimeOption();\n    }\n\n    target.blur();\n  }\n\n  addTimeOption() {\n    this.scheduleTime.push(this.fb.control(this.defaultTime));\n    this.submitScheduleForm();\n  }\n\n  deleteTimeOption(index) {\n    this.scheduleTime.removeAt(index);\n    this.submitScheduleForm();\n  }\n\n  timeControlChange() {\n    this.submitScheduleForm();\n  }\n\n  onScheduleFormChange() {\n    this.selectedTimeOptions$ = this.scheduleForm.controls.scheduleTime.valueChanges.pipe(filter(val => val), tap(val => this.selectedTimeOptions = val), distinctUntilChanged(), takeUntil(this.destroy$));\n  }\n\n  submitScheduleForm() {\n    this.submit.emit(this.scheduleForm);\n  }\n\n  getScheduleType(recipe) {\n    var _a, _b;\n\n    const hoursOfDayQuantity = ((_b = (_a = recipe.recurrence) === null || _a === void 0 ? void 0 : _a.hoursOfDay) === null || _b === void 0 ? void 0 : _b.length) || 0;\n    const hoursScheduleApplied = hoursOfDayQuantity !== 0 && hoursOfDayQuantity !== 24;\n\n    if (!hoursScheduleApplied) {\n      return ScheduleType.RightAway;\n    }\n\n    return ScheduleType.Custom;\n  }\n\n  resetScheduleForm() {\n    this.scheduleTime.clear();\n    this.submitScheduleForm();\n  }\n  /**\n   * Getter for repeat count control\n   */\n\n\n  get scheduleTime() {\n    return this.scheduleForm.get('scheduleTime');\n  }\n  /**\n   * Getter for default time which returns 08:00 for the first option and +1 hour for subsequent\n   */\n\n\n  get defaultTime() {\n    const lastSelectedTimeOption = this.lastSelectedTimeOption;\n    let defaultTime = lastSelectedTimeOption + this.minutesStep;\n\n    if (!lastSelectedTimeOption && lastSelectedTimeOption !== 0) {\n      return DefaultTime;\n    }\n\n    if (defaultTime === MinutesInDay) {\n      defaultTime = 0;\n    }\n\n    while (this.selectedTimeOptions.includes(defaultTime)) {\n      if (defaultTime === MinutesInDay) {\n        defaultTime = 0;\n      } else {\n        defaultTime = defaultTime + 60;\n      }\n    }\n\n    return defaultTime;\n  }\n  /**\n   * Getter for last added time option\n   */\n\n\n  get lastSelectedTimeOption() {\n    var _a;\n\n    return (_a = this.scheduleTime.controls[this.scheduleTime.controls.length - 1]) === null || _a === void 0 ? void 0 : _a.value;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nActionsScheduleNotificationsComponent.ɵfac = function ActionsScheduleNotificationsComponent_Factory(t) {\n  return new (t || ActionsScheduleNotificationsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\n\nActionsScheduleNotificationsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ActionsScheduleNotificationsComponent,\n  selectors: [[\"bb-actions-schedule-notifications\"]],\n  inputs: {\n    actionRecipe: \"actionRecipe\",\n    scheduleForm: \"scheduleForm\",\n    minutesStep: \"minutesStep\"\n  },\n  outputs: {\n    submit: \"submit\"\n  },\n  decls: 2,\n  vars: 1,\n  consts: function () {\n    let i18n_28;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Notify me label\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS__29 = goog.getMsg(\" Notify me \");\n      i18n_28 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS__29;\n    } else {\n      i18n_28 = $localize`:Notify me label@@actions-common.actions-schedule-notifications.title: Notify me `;\n    }\n\n    let i18n_30;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Schedule type dropdown\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS__31 = goog.getMsg(\"Schedule type\");\n      i18n_30 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS__31;\n    } else {\n      i18n_30 = $localize`:Schedule type dropdown@@actions-common.actions-schedule-notifications.schedule-type-dropdown.aria-label:Schedule type`;\n    }\n\n    let i18n_32;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Schedule type dropdown right away\n       *             option\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS__33 = goog.getMsg(\"Right away\");\n      i18n_32 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS__33;\n    } else {\n      i18n_32 = $localize`:Schedule type dropdown right away\n            option@@actions-common.actions-schedule-notifications.schedule-type-right-away-option.label:Right away`;\n    }\n\n    let i18n_34;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Schedule type dropdown custom\n       *             option\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS__35 = goog.getMsg(\"Custom\");\n      i18n_34 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS__35;\n    } else {\n      i18n_34 = $localize`:Schedule type dropdown custom\n            option@@actions-common.actions-schedule-notifications.schedule-type-custom-option.label:Custom`;\n    }\n\n    let i18n_37;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS__38 = goog.getMsg(\"{VAR_SELECT, select, Custom {grouped and sent at specified time.} RightAway {sent\\n      immediately.}}\");\n      i18n_37 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS__38;\n    } else {\n      i18n_37 = $localize`{VAR_SELECT, select, Custom {grouped and sent at specified time.} RightAway {sent\n      immediately.}}`;\n    }\n\n    i18n_37 = i0.ɵɵi18nPostprocess(i18n_37, {\n      \"VAR_SELECT\": \"\\uFFFD0\\uFFFD\"\n    });\n    let i18n_36;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Schedule description\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS__39 = goog.getMsg(\" Notifications will be {$icu} \", {\n        \"icu\": i18n_37\n      });\n      i18n_36 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS__39;\n    } else {\n      i18n_36 = $localize`:Schedule description@@actions-common.actions-schedule-notifications.schedule-description: Notifications will be ${i18n_37}:ICU: `;\n    }\n\n    let i18n_40;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Schedule time picker title \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___41 = goog.getMsg(\"At\");\n      i18n_40 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___41;\n    } else {\n      i18n_40 = $localize`:Schedule time picker title @@actions-common.actions-schedule-notifications.schedule-time-picker.title:At`;\n    }\n\n    let i18n_42;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Schedule add time option \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___43 = goog.getMsg(\"Add time option\");\n      i18n_42 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___43;\n    } else {\n      i18n_42 = $localize`:Schedule add time option @@actions-common.actions-schedule-notifications.schedule-time-add-option.aria-label:Add time option`;\n    }\n\n    let i18n_44;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Schedule time picker label \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS____45 = goog.getMsg(\"actions-schedule-notifications-time-picker\");\n      i18n_44 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS____45;\n    } else {\n      i18n_44 = $localize`:Schedule time picker label @@actions-common.actions-schedule-notifications.schedule-time-picker.aria-label:actions-schedule-notifications-time-picker`;\n    }\n\n    let i18n_46;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Schedule delete time option\n       *               \n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS____47 = goog.getMsg(\"Delete time option\");\n      i18n_46 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS____47;\n    } else {\n      i18n_46 = $localize`:Schedule delete time option\n              @@actions-common.actions-schedule-notifications.schedule-delete-time-option.aria-label:Delete time option`;\n    }\n\n    return [[\"bbActionsScheduleNotificationsComponentCustomizableDirective\", \"\", 3, \"bbHostRef\"], [\"bbActionsScheduleNotificationsComponentCustomizableDirective\", \"\"], [1, \"row\", \"bb-block\", \"bb-block--md\", \"bb-stack\", \"bb-stack--align-baseline\"], [1, \"col-3\"], i18n_28, [\"iconName\", \"caret-down\", \"aria-label\", i18n_30, \"data-role\", \"notifications-schedule-type\", 3, \"required\", \"ngModel\", \"ngModelChange\", \"change\"], [\"label\", i18n_32, 3, \"value\"], [\"label\", i18n_34, 3, \"value\"], [\"class\", \"col-6 row bb-stack bb-stack--align-baseline no-gutters\", 4, \"ngIf\"], [\"data-role\", \"schedule-description\", 1, \"bb-block\", \"bb-block--md\", \"text-center\", \"bb-text-support\"], i18n_36, [1, \"col-6\", \"row\", \"bb-stack\", \"bb-stack--align-baseline\", \"no-gutters\"], [1, \"col-1\"], i18n_40, [1, \"col-11\", 3, \"formGroup\"], [\"class\", \"row no-gutters bb-block bb-block--md\", \"formArrayName\", \"scheduleTime\", 4, \"ngFor\", \"ngForOf\"], [\"bbButton\", \"\", \"class\", \"bb-stack__item\", \"color\", \"primary\", \"circle\", \"true\", \"buttonSize\", \"sm\", \"type\", \"button\", \"aria-label\", i18n_42, \"data-role\", \"add-time-option\", 3, \"click\", 4, \"ngIf\"], [\"formArrayName\", \"scheduleTime\", 1, \"row\", \"no-gutters\", \"bb-block\", \"bb-block--md\"], [\"data-role\", \"schedule-time-picker\", \"aria-label\", i18n_44, 1, \"col-6\", \"actions-schedule-time-picker__dropdown\", 3, \"formControlName\", \"excludedOptions\", \"controlRef\", \"minutesStep\", \"change\"], [\"bbButton\", \"\", \"circle\", \"true\", \"color\", \"link\", \"aria-label\", i18n_46, \"data-role\", \"delete-time-option\", 3, \"click\", 4, \"ngIf\"], [\"bbButton\", \"\", \"circle\", \"true\", \"color\", \"link\", \"aria-label\", i18n_46, \"data-role\", \"delete-time-option\", 3, \"click\"], [\"name\", \"delete\", 1, \"text-muted\"], [\"bbButton\", \"\", \"color\", \"primary\", \"circle\", \"true\", \"buttonSize\", \"sm\", \"type\", \"button\", \"aria-label\", i18n_42, \"data-role\", \"add-time-option\", 1, \"bb-stack__item\", 3, \"click\"], [\"name\", \"add\", \"size\", \"sm\"]];\n  },\n  template: function ActionsScheduleNotificationsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵtemplate(1, ActionsScheduleNotificationsComponent_ng_template_1_Template, 13, 6, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"bbHostRef\", ctx);\n    }\n  },\n  directives: function () {\n    return [ActionsScheduleNotificationsComponentCustomizableDirective, i2$2.DropdownSingleSelectComponent, i1.RequiredValidator, i1.NgControlStatus, i1.NgModel, i2$2.DropdownSingleSelectOptionComponent, i5.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i5.NgForOf, i1.FormArrayName, TimePickerComponent, i1.FormControlName, i6$1.ButtonDirective, i2.IconComponent];\n  },\n  pipes: function () {\n    return [i5.AsyncPipe];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsScheduleNotificationsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-actions-schedule-notifications',\n      templateUrl: './actions-schedule-notifications.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i1.FormBuilder\n    }];\n  }, {\n    actionRecipe: [{\n      type: Input\n    }],\n    scheduleForm: [{\n      type: Input\n    }],\n    minutesStep: [{\n      type: Input\n    }],\n    submit: [{\n      type: Output\n    }]\n  });\n})();\n\nclass ActionsScheduleNotificationsComponentCustomizableDirective extends BbTemplate {}\n\nActionsScheduleNotificationsComponentCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵActionsScheduleNotificationsComponentCustomizableDirective_BaseFactory;\n  return function ActionsScheduleNotificationsComponentCustomizableDirective_Factory(t) {\n    return (ɵActionsScheduleNotificationsComponentCustomizableDirective_BaseFactory || (ɵActionsScheduleNotificationsComponentCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ActionsScheduleNotificationsComponentCustomizableDirective)))(t || ActionsScheduleNotificationsComponentCustomizableDirective);\n  };\n}();\n\nActionsScheduleNotificationsComponentCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ActionsScheduleNotificationsComponentCustomizableDirective,\n  selectors: [[\"\", \"bbActionsScheduleNotificationsComponentCustomizableDirective\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsScheduleNotificationsComponentCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbActionsScheduleNotificationsComponentCustomizableDirective]'\n    }]\n  }], null, null);\n})();\n\nclass ActionsToggleRecipeFormComponent {\n  constructor(actionsFormBuilderService) {\n    this.actionsFormBuilderService = actionsFormBuilderService;\n    /**\n     * Flag to control if schedule notifications is enabled\n     */\n\n    this.scheduleEnabled = false;\n    /**\n     * On form submit output.\n     */\n\n    this.submit = new EventEmitter();\n    /**\n     * Loading state flag.\n     */\n\n    this.isLoading = false;\n  }\n\n  ngOnInit() {\n    this.formGroup = this.actionsFormBuilderService.buildActionRecipeFormGroup(this.specification, this.actionRecipe);\n  }\n\n  ngOnChanges(changes) {\n    const {\n      actionRecipe\n    } = changes;\n\n    if (this.formGroup && actionRecipe && actionRecipe.previousValue !== actionRecipe.currentValue) {\n      this.isLoading = false;\n      this.formGroup.patchValue(this.actionsFormBuilderService.buildActionRecipeFormValue(this.specification, this.actionRecipe));\n    }\n  }\n  /**\n   * Method to handle schedule form change and trigger submit action.\n   *\n   * @param value - action recipe form value\n   */\n\n\n  onScheduleChange(value) {\n    var _a, _b;\n\n    (_a = this.formGroup) === null || _a === void 0 ? void 0 : _a.patchValue(value);\n    this.submit.emit((_b = this.formGroup) === null || _b === void 0 ? void 0 : _b.value);\n  }\n  /**\n   * Method to submit action recipe form.\n   *\n   * @param formValue - action recipe form value\n   */\n\n\n  onSubmit(formValue) {\n    this.isLoading = true;\n    this.submit.emit(formValue);\n  }\n\n}\n\nActionsToggleRecipeFormComponent.ɵfac = function ActionsToggleRecipeFormComponent_Factory(t) {\n  return new (t || ActionsToggleRecipeFormComponent)(i0.ɵɵdirectiveInject(ActionsFormBuilderService));\n};\n\nActionsToggleRecipeFormComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ActionsToggleRecipeFormComponent,\n  selectors: [[\"bb-actions-toggle-recipe-form\"]],\n  inputs: {\n    actionRecipe: \"actionRecipe\",\n    specification: \"specification\",\n    label: \"label\",\n    scheduleEnabled: \"scheduleEnabled\"\n  },\n  outputs: {\n    submit: \"submit\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 1,\n  consts: function () {\n    let i18n_48;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Toggle recipe aria label\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___49 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_48 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_ACTIONS_COMMON_ANG_FESM2015_BACKBASE_ACTIONS_COMMON_ANG_JS___49;\n    } else {\n      i18n_48 = $localize`:Toggle recipe aria label@@actions-common.actions-toggle-recipe-form.switcher.aria-label:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n    }\n\n    return [[\"bbActionsToggleRecipeFormCustomizableDirective\", \"\", 3, \"bbHostRef\"], [\"bbActionsToggleRecipeFormCustomizableDirective\", \"\"], [4, \"ngIf\"], [3, \"formGroup\"], [1, \"bb-block\", \"bb-block--md\", \"bb-stack\"], [1, \"bb-stack__item\", \"bb-text-support\", \"bb-text-bold\"], [\"formControlName\", \"active\", 1, \"bb-stack__item\", \"bb-stack__item--push-right\", 3, \"isLoading\", \"change\", 6, \"aria-label\"], [\"aria-label\", i18n_48], [\"class\", \"bb-stack__item\", 3, \"scheduleForm\", \"actionRecipe\", \"submit\", 4, \"ngIf\"], [1, \"bb-stack__item\", 3, \"scheduleForm\", \"actionRecipe\", \"submit\"]];\n  },\n  template: function ActionsToggleRecipeFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵtemplate(1, ActionsToggleRecipeFormComponent_ng_template_1_Template, 1, 1, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"bbHostRef\", ctx);\n    }\n  },\n  directives: function () {\n    return [ActionsToggleRecipeFormCustomizableDirective, i5.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, SwitchWithLoadingComponent, i1.NgControlStatus, i1.FormControlName, ActionsScheduleNotificationsComponent];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsToggleRecipeFormComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-actions-toggle-recipe-form',\n      templateUrl: './actions-toggle-recipe-form.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ActionsFormBuilderService\n    }];\n  }, {\n    actionRecipe: [{\n      type: Input\n    }],\n    specification: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    scheduleEnabled: [{\n      type: Input\n    }],\n    submit: [{\n      type: Output\n    }]\n  });\n})();\n\nclass ActionsToggleRecipeFormCustomizableDirective extends BbTemplate {}\n\nActionsToggleRecipeFormCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵActionsToggleRecipeFormCustomizableDirective_BaseFactory;\n  return function ActionsToggleRecipeFormCustomizableDirective_Factory(t) {\n    return (ɵActionsToggleRecipeFormCustomizableDirective_BaseFactory || (ɵActionsToggleRecipeFormCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ActionsToggleRecipeFormCustomizableDirective)))(t || ActionsToggleRecipeFormCustomizableDirective);\n  };\n}();\n\nActionsToggleRecipeFormCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ActionsToggleRecipeFormCustomizableDirective,\n  selectors: [[\"\", \"bbActionsToggleRecipeFormCustomizableDirective\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsToggleRecipeFormCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbActionsToggleRecipeFormCustomizableDirective]'\n    }]\n  }], null, null);\n})();\n\nclass TimePickerModule {}\n\nTimePickerModule.ɵfac = function TimePickerModule_Factory(t) {\n  return new (t || TimePickerModule)();\n};\n\nTimePickerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TimePickerModule\n});\nTimePickerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, DropdownSingleSelectModule, ReactiveFormsModule], DropdownSingleSelectModule, ReactiveFormsModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimePickerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, DropdownSingleSelectModule, ReactiveFormsModule],\n      declarations: [TimePickerComponent],\n      exports: [TimePickerComponent, DropdownSingleSelectModule, ReactiveFormsModule]\n    }]\n  }], null, null);\n})();\n\nconst PreferenceDataMap = {\n  '1': {\n    generalNotificationId: 'new-transaction-occurred',\n    preferenceName: 'Transactions',\n    preferenceLabel: 'Transactions',\n    specificationId: '1'\n  },\n  '4': {\n    generalNotificationId: 'account-balance-low',\n    preferenceName: 'AccountBalance',\n    preferenceLabel: 'Account Balance',\n    specificationId: '4'\n  }\n};\n\nclass ActionsNotificationsPreferencesDataService {\n  constructor(dataHttpService) {\n    this.dataHttpService = dataHttpService;\n    this.cachedNotificationPreferences$$ = new BehaviorSubject([]);\n\n    this.mapSavePreferenceResponce = () => preference => preference.pipe(withLatestFrom(this.cachedNotificationPreferences$$), switchMap(([pref, preferences]) => {\n      this.updatePreferencesCache(preferences, pref);\n      return of({\n        actionRecipes: [this.preferenceToRecipe(pref)]\n      });\n    }));\n\n    this.preferenceToSpecification = ({\n      userConditions,\n      channels,\n      generalNotificationId\n    }) => {\n      var _a, _b, _c;\n\n      return {\n        actions: channels.map(channel => ({\n          type: channel.channel\n        })),\n        recipeDefaults: Object.assign({}, ((_a = userConditions === null || userConditions === void 0 ? void 0 : userConditions.conditions) === null || _a === void 0 ? void 0 : _a.hasOwnProperty('amount')) && {\n          amount: `${(_b = userConditions === null || userConditions === void 0 ? void 0 : userConditions.conditions) === null || _b === void 0 ? void 0 : _b.amount}`\n        }),\n        id: (_c = Object.values(PreferenceDataMap).find(pref => pref.generalNotificationId === generalNotificationId)) === null || _c === void 0 ? void 0 : _c.specificationId\n      };\n    };\n\n    this.preferenceToRecipe = ({\n      channels,\n      userConditions,\n      createdOn,\n      generalNotificationId,\n      active,\n      id\n    }) => {\n      var _a, _b, _c;\n\n      return Object.assign(Object.assign({\n        specificationId: (_a = Object.values(PreferenceDataMap).find(pref => pref.generalNotificationId === generalNotificationId)) === null || _a === void 0 ? void 0 : _a.specificationId,\n        active,\n        actions: channels.map(channel => ({\n          type: channel.channel,\n          enabled: channel.enabled\n        })),\n        createdOn\n      }, ((_b = userConditions === null || userConditions === void 0 ? void 0 : userConditions.conditions) === null || _b === void 0 ? void 0 : _b.hasOwnProperty('amount')) && {\n        amount: `${(_c = userConditions === null || userConditions === void 0 ? void 0 : userConditions.conditions) === null || _c === void 0 ? void 0 : _c.amount}`\n      }), {\n        id: id || ''\n      });\n    };\n  }\n  /**\n   * Method to get action recipes.\n   *\n   * @param arrangementId\n   * @returns action recipe array\n   */\n\n\n  getActionRecipes(arrangementId) {\n    const requestParams = {\n      entityId: arrangementId,\n      entityType: 'arrangement'\n    };\n    return this.dataHttpService.getNotificationPreferences(requestParams).pipe(map(fromHttpResponse), map(({\n      notificationPreferences\n    }) => {\n      this.cachedNotificationPreferences$$.next(notificationPreferences);\n      return notificationPreferences.map(pref => this.preferenceToRecipe(pref));\n    }));\n  }\n  /**\n   * Method to get action recipe specifications.\n   *\n   * @returns action recipe specifications\n   */\n\n\n  getSpecifications() {\n    return this.cachedNotificationPreferences$$.pipe(map(fromHttpResponse), map(notificationPreferences => notificationPreferences.map(pref => this.preferenceToSpecification(pref))));\n  }\n  /**\n   * Method to save action recipe.\n   *\n   * @param action - recipe form value\n   * @param arrangementId - arrangement ID\n   * @returns batch processing response\n   */\n\n\n  saveActionRecipe(actionRecipeFormItem, arrangementId) {\n    const notificationPreferences = this.cachedNotificationPreferences$$.getValue();\n    const preferenceToUpdate = notificationPreferences.find(pref => pref.generalNotificationId === PreferenceDataMap[actionRecipeFormItem.specificationId].generalNotificationId);\n\n    if (preferenceToUpdate.id) {\n      return this.updateNotificationPreference(preferenceToUpdate, actionRecipeFormItem);\n    } else {\n      return this.createNotificationPreference(preferenceToUpdate, actionRecipeFormItem, arrangementId);\n    }\n  }\n\n  updateNotificationPreference(preferenceToUpdate, actionRecipeFormItem) {\n    const notificationPreferencePutRequest = this.getNotificationPreferencePutRequest(preferenceToUpdate, actionRecipeFormItem);\n    return this.dataHttpService.updateNotificationPreference({\n      id: preferenceToUpdate.id || '',\n      notificationPreferencePutRequest\n    }).pipe(this.mapSavePreferenceResponce());\n  }\n\n  createNotificationPreference(preferenceToUpdate, actionRecipeFormItem, arrangementId) {\n    const notificationPreferencePostRequest = this.getNotificationPreferencePostRequest(preferenceToUpdate, actionRecipeFormItem, arrangementId);\n    return this.dataHttpService.createNotificationPreference({\n      notificationPreferencePostRequest\n    }).pipe(this.mapSavePreferenceResponce());\n  }\n\n  getNotificationPreferencePutRequest(preference, actionRecipeFormItem) {\n    return {\n      active: actionRecipeFormItem.active,\n      channels: preference.channels.map(channel => Object.assign(Object.assign({}, channel), {\n        enabled: !!actionRecipeFormItem.actions[channel.channel]\n      })),\n      conditions: Object.assign({}, actionRecipeFormItem.amount.amount !== undefined && {\n        amount: `${actionRecipeFormItem.amount.amount}`\n      })\n    };\n  }\n\n  getNotificationPreferencePostRequest(preference, actionRecipeFormItem, arrangementId) {\n    var _a;\n\n    return {\n      generalNotificationId: preference.generalNotificationId,\n      active: actionRecipeFormItem.active,\n      eRef: arrangementId,\n      channels: preference.channels.map(channel => Object.assign(Object.assign({}, channel), {\n        enabled: !!actionRecipeFormItem.actions[channel.channel]\n      })),\n      conditions: Object.assign({}, (_a = preference.userConditions) === null || _a === void 0 ? void 0 : _a.conditions)\n    };\n  }\n\n  updatePreferencesCache(preferences, updatedPreference) {\n    const updatedPreferences = preferences.map(pref => pref.generalNotificationId === updatedPreference.generalNotificationId ? updatedPreference : pref);\n    this.cachedNotificationPreferences$$.next(updatedPreferences);\n  }\n\n}\n\nActionsNotificationsPreferencesDataService.ɵfac = function ActionsNotificationsPreferencesDataService_Factory(t) {\n  return new (t || ActionsNotificationsPreferencesDataService)(i0.ɵɵinject(i1$3.NotificationPreferenceService));\n};\n\nActionsNotificationsPreferencesDataService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ActionsNotificationsPreferencesDataService,\n  factory: ActionsNotificationsPreferencesDataService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsNotificationsPreferencesDataService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$3.NotificationPreferenceService\n    }];\n  }, null);\n})();\n\nconst components = [ActionsNotificationChannelsComponent, ActionsAccountBalanceRecipeFormComponent, ActionsTransactionsRecipeFormComponent, ActionsToggleRecipeFormComponent, SwitchWithLoadingComponent, ActionsScheduleNotificationsComponent];\nconst directives = [ActionsNotificationChannelsCustomizableDirective, ActionsAccountBalanceRecipeCustomizableDirective, ActionsTransactionsRecipeCustomizableDirective, ActionsToggleRecipeFormCustomizableDirective, ActionsScheduleNotificationsComponentCustomizableDirective];\nconst pipes = [NoFractionDigitsPipe];\nconst uiModules = [AmountModule, ModalModule, ButtonModule, InputCheckboxModule, SwitchModule, HeaderModule, CollapsibleModule, IconModule, TooltipModule, InputInlineEditModule];\n\nclass ActionsCommonModule {}\n\nActionsCommonModule.ɵfac = function ActionsCommonModule_Factory(t) {\n  return new (t || ActionsCommonModule)();\n};\n\nActionsCommonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ActionsCommonModule\n});\nActionsCommonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [ActionsFormBuilderService, ActionsNotificationsSettingsDataService, ActionsNotificationsPreferencesDataService],\n  imports: [[CommonModule, FormsModule, ReactiveFormsModule, TimePickerModule, ...uiModules], AmountModule, ModalModule, ButtonModule, InputCheckboxModule, SwitchModule, HeaderModule, CollapsibleModule, IconModule, TooltipModule, InputInlineEditModule, TimePickerModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, ReactiveFormsModule, TimePickerModule, ...uiModules],\n      providers: [ActionsFormBuilderService, ActionsNotificationsSettingsDataService, ActionsNotificationsPreferencesDataService],\n      declarations: [...components, ...directives, ...pipes],\n      exports: [...components, ...uiModules, ...directives, ...pipes, TimePickerModule]\n    }]\n  }], null, null);\n})();\n\nclass NotificationsPreferencesBaseDataService {}\n\nconst getPropertyValue = (input, prop) => combineLatest([input, prop]).pipe(map(([inputVal, propVal]) => inputVal !== undefined ? inputVal : propVal));\n\nvar SpecificationIds;\n\n(function (SpecificationIds) {\n  SpecificationIds[\"Transactions\"] = \"1\";\n  SpecificationIds[\"AccountBalance\"] = \"4\";\n  SpecificationIds[\"Payments\"] = \"5\";\n  SpecificationIds[\"Contacts\"] = \"6\";\n  SpecificationIds[\"PaymentsToApprove\"] = \"13\";\n  SpecificationIds[\"ContactsToApprove\"] = \"14\";\n})(SpecificationIds || (SpecificationIds = {}));\n\nconst DEFAULT_NOTIFICATION_DISMISS_TIME = 5;\nconst DEFAULT_SPECIFICATION_IDS = '5, 6, 13, 14';\nconst DEFAULT_API_MODE = 'actions';\n\nclass ActionsBasePropertiesService {\n  /**\n   * Method to get notification dismiss time preference value.\n   *\n   * @returns notification dismiss time in seconds\n   */\n  getNotificationDismissTimeProperty() {\n    return of(DEFAULT_NOTIFICATION_DISMISS_TIME).pipe(map(secondsToMilliseconds));\n  }\n  /**\n   * Method to get specification IDs.\n   *\n   * @returns specification IDs array\n   */\n\n\n  getSpecificationIDs() {\n    return of(DEFAULT_SPECIFICATION_IDS).pipe(map(data => data.replace(/\\s/g, '').split(',')));\n  }\n\n  getApiMode() {\n    return DEFAULT_API_MODE;\n  }\n\n}\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ActionsBasePropertiesService, ActionsCommonModule, ActionsNotificationsPreferencesDataService, ActionsNotificationsSettingsDataService, DAYS_OF_WEEK, DEFAULT_API_MODE, DEFAULT_NOTIFICATION_DISMISS_TIME, DEFAULT_SPECIFICATION_IDS, DefaultTime, EMPTY_RESPONSE_ERROR, MaxOptionsQuantity, MinutesInDay, NotificationsPreferencesBaseDataService, ScheduleDescriptionText, ScheduleType, SpecificationIds, actionRecipeFormItemToRequest, arrangementActionRecipeToRequest, filterObjectByPropNames, firstNonEmptyString, fromHttpResponse, getHoursOfDay, getMappedRecurrenceResponse, getPropertyValue, getTimeOptions, hoursToMinutesArray, isEqualNumberArrays, mergeNotificationChannels, mergeSpecificationsWithActionRecipes, parseActionRecipeFormItem, secondsToMilliseconds, sortNumberArray, ActionsAccountBalanceRecipeCustomizableDirective as ӨActionsAccountBalanceRecipeCustomizableDirective, ActionsAccountBalanceRecipeFormComponent as ӨActionsAccountBalanceRecipeFormComponent, ActionsNotificationChannelsComponent as ӨActionsNotificationChannelsComponent, ActionsNotificationChannelsCustomizableDirective as ӨActionsNotificationChannelsCustomizableDirective, ActionsScheduleNotificationsComponent as ӨActionsScheduleNotificationsComponent, ActionsScheduleNotificationsComponentCustomizableDirective as ӨActionsScheduleNotificationsComponentCustomizableDirective, ActionsToggleRecipeFormComponent as ӨActionsToggleRecipeFormComponent, ActionsToggleRecipeFormCustomizableDirective as ӨActionsToggleRecipeFormCustomizableDirective, ActionsTransactionsRecipeCustomizableDirective as ӨActionsTransactionsRecipeCustomizableDirective, ActionsTransactionsRecipeFormComponent as ӨActionsTransactionsRecipeFormComponent, NoFractionDigitsPipe as ӨNoFractionDigitsPipe, SwitchWithLoadingComponent as ӨSwitchWithLoadingComponent, TimePickerComponent as ӨTimePickerComponent, TimePickerModule as ӨTimePickerModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/actions-common-ang/fesm2015/backbase-actions-common-ang.js"],"names":["i0","Pipe","Injectable","Component","ChangeDetectionStrategy","Input","Directive","EventEmitter","Output","forwardRef","NgModule","i5","CommonModule","i1","NG_VALUE_ACCESSOR","FormControl","ReactiveFormsModule","FormsModule","__rest","of","throwError","Subject","BehaviorSubject","combineLatest","map","switchMap","takeUntil","filter","tap","distinctUntilChanged","withLatestFrom","i1$1","i6$1","ButtonModule","i2$1","CollapsibleModule","i3$1","HeaderModule","i2","IconModule","i3","InputCheckboxModule","i6","InputInlineEditModule","ModalModule","i1$2","SwitchModule","i5$1","TooltipModule","i5$2","AmountModule","BbTemplate","i2$2","DropdownSingleSelectModule","i1$3","NoFractionDigitsPipe","transform","val","replace","ɵfac","ɵpipe","type","args","name","pure","AM_PM","DAYS_OF_WEEK","getTimeOptions","startTime","minutesStep","excludedOptions","amPmFormat","timeOptions","index","hh","Math","floor","mm","includes","label","getOptionLabel","time","getHoursOfDay","scheduleTime","list","String","length","i","push","hoursToMinutesArray","hours","hour","Number","getFormattedTime","suffix","slice","firstNonEmptyString","find","item","filterObjectByPropNames","obj","keysToExclude","resultObj","Object","assign","forEach","id","isEqualNumberArrays","arr1","arr2","sortedArr1","sortNumberArray","sortedArr2","every","v","arr","asc","sort","a","b","fromHttpResponse","body","Error","secondsToMilliseconds","seconds","actionRecipeFormItemToRequest","_a","amount","actions","recurrence","restActionRecipe","keys","notificationRecurrenceFormValueToRequest","notificationChannelsFormValueToRequest","parseActionRecipeFormItem","parseNotificationChannelsFormValue","arrangementActionRecipeToRequest","arrangementId","actionRecipeFormItemValue","mergeNotificationChannels","channels","defaultChannels","channel","enabled","some","mergeSpecificationsWithActionRecipes","specs","recipes","reduce","prev","specification","actionRecipe","specificationId","getMappedRecurrenceResponse","responseRecurrence","cachedRecurrence","hoursOfDay","getCachedHoursOfDay","key","rec","daysOfWeek","minutes","ActionsFormBuilderService","constructor","fb","buildActionRecipeFormGroup","account","actionRecipeFormValue","buildActionRecipeFormValue","group","buildScheduleNotificationsFormGroup","_b","active","getDefaultActionRecipe","buildRecurrenceFormItem","currency","buildChannelsFormValue","recipeDefaults","additions","previous","current","recipe","mappedHours","option","control","array","FormBuilder","ɵprov","EMPTY_RESPONSE_ERROR","ACTION_RECIPES_LIMIT","ActionsNotificationsSettingsDataService","dataHttpService","actionSpecificationsService","getActionRecipes","params","requestParams","limit","pipe","response","actionRecipes","getSpecifications","getActionRecipeSpecifications","actionRecipeSpecifications","saveActionRecipe","actionRecipeFormItem","recipeToRequest","batchProcessingPutRequestBody","putBatchProcessing","ActionRecipesHttpService","ActionRecipeSpecificationsHttpService","ActionsNotificationChannelsComponent","controlContainer","idCounter","actionsMap","Map","value","action","ngAfterContentInit","formGroup","ControlContainer","ɵcmp","ActionsNotificationChannelsCustomizableDirective","NgIf","NgControlStatusGroup","FormGroupDirective","IconComponent","TooltipDirective","InputCheckboxComponent","NgControlStatus","FormControlName","selector","templateUrl","changeDetection","OnPush","ɵdir","ArrangementBasedRecipeModel","actionsFormBuilderService","submit","specificationActions","isLoading","destroy$","specificationValue","isCardExpanded","activeControl","get","ngOnInit","valueChanges","subscribe","onSubmit","ngOnChanges","changes","previousValue","currentValue","patchValue","emitEvent","ngOnDestroy","next","complete","formValue","emit","onActiveLoadingChange","SwitchWithLoadingComponent","onChange","onTouch","_value","writeValue","registerOnChange","fn","registerOnTouched","provide","useExisting","multi","SwitchComponent","NgModel","providers","ariaLabel","ActionsAccountBalanceRecipeFormComponent","onInlineEditAccept","amountControl","ActionsAccountBalanceRecipeCustomizableDirective","ɵNgNoValidate","CollapsibleComponent","CollapsibleHeaderDirective","CollapsibleBodyDirective","NgClass","HeaderComponent","InputInlineEditComponent","FormGroupName","AmountComponent","ActionsTransactionsRecipeFormComponent","ActionsTransactionsRecipeCustomizableDirective","MinutesInDay","ScheduleType","ScheduleDescriptionText","RightAway","Custom","DefaultTime","MaxOptionsQuantity","TimePickerComponent","excludedOptions$$","componentDestroyed$","timeControl","_time","onTouched","options","onExcludedOptionsChange","onFormValueChange","timeControlValue","controlRef","selection","setValue","ts","markAsTouched","event","target","blur","DropdownSingleSelectComponent","FormControlDirective","ActionsScheduleNotificationsComponent","selectedTimeOptions$","selectedTimeOptions","scheduleType","getScheduleType","onScheduleFormChange","onScheduleTypeChange","resetScheduleForm","addTimeOption","defaultTime","submitScheduleForm","deleteTimeOption","removeAt","timeControlChange","scheduleForm","controls","hoursOfDayQuantity","hoursScheduleApplied","clear","lastSelectedTimeOption","ActionsScheduleNotificationsComponentCustomizableDirective","RequiredValidator","DropdownSingleSelectOptionComponent","NgForOf","FormArrayName","ButtonDirective","AsyncPipe","ActionsToggleRecipeFormComponent","scheduleEnabled","onScheduleChange","ActionsToggleRecipeFormCustomizableDirective","TimePickerModule","ɵmod","ɵinj","imports","declarations","exports","PreferenceDataMap","generalNotificationId","preferenceName","preferenceLabel","ActionsNotificationsPreferencesDataService","cachedNotificationPreferences$$","mapSavePreferenceResponce","preference","pref","preferences","updatePreferencesCache","preferenceToRecipe","preferenceToSpecification","userConditions","_c","conditions","hasOwnProperty","values","createdOn","entityId","entityType","getNotificationPreferences","notificationPreferences","getValue","preferenceToUpdate","updateNotificationPreference","createNotificationPreference","notificationPreferencePutRequest","getNotificationPreferencePutRequest","notificationPreferencePostRequest","getNotificationPreferencePostRequest","undefined","eRef","updatedPreference","updatedPreferences","NotificationPreferenceService","components","directives","pipes","uiModules","ActionsCommonModule","NotificationsPreferencesBaseDataService","getPropertyValue","input","prop","inputVal","propVal","SpecificationIds","DEFAULT_NOTIFICATION_DISMISS_TIME","DEFAULT_SPECIFICATION_IDS","DEFAULT_API_MODE","ActionsBasePropertiesService","getNotificationDismissTimeProperty","getSpecificationIDs","data","split","getApiMode","ӨActionsAccountBalanceRecipeCustomizableDirective","ӨActionsAccountBalanceRecipeFormComponent","ӨActionsNotificationChannelsComponent","ӨActionsNotificationChannelsCustomizableDirective","ӨActionsScheduleNotificationsComponent","ӨActionsScheduleNotificationsComponentCustomizableDirective","ӨActionsToggleRecipeFormComponent","ӨActionsToggleRecipeFormCustomizableDirective","ӨActionsTransactionsRecipeCustomizableDirective","ӨActionsTransactionsRecipeFormComponent","ӨNoFractionDigitsPipe","ӨSwitchWithLoadingComponent","ӨTimePickerComponent","ӨTimePickerModule"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Pipe, Injectable, Component, ChangeDetectionStrategy, Input, Directive, EventEmitter, Output, forwardRef, NgModule } from '@angular/core';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormControl, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { __rest } from 'tslib';\nimport { of, throwError, Subject, BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, switchMap, takeUntil, filter, tap, distinctUntilChanged, withLatestFrom } from 'rxjs/operators';\nimport * as i1$1 from '@backbase/data-ang/actions';\nimport * as i6$1 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport * as i2$1 from '@backbase/ui-ang/collapsible';\nimport { CollapsibleModule } from '@backbase/ui-ang/collapsible';\nimport * as i3$1 from '@backbase/ui-ang/header';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport * as i2 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i3 from '@backbase/ui-ang/input-checkbox';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport * as i6 from '@backbase/ui-ang/input-inline-edit';\nimport { InputInlineEditModule } from '@backbase/ui-ang/input-inline-edit';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport * as i1$2 from '@backbase/ui-ang/switch';\nimport { SwitchModule } from '@backbase/ui-ang/switch';\nimport * as i5$1 from '@backbase/ui-ang/tooltip-directive';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport * as i5$2 from '@backbase/ui-ang/amount';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport * as i2$2 from '@backbase/ui-ang/dropdown-single-select';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport * as i1$3 from '@backbase/data-ang/engagement';\n\nclass NoFractionDigitsPipe {\n    transform(val) {\n        return val ? val.replace(/\\..*/, '') : '';\n    }\n}\nNoFractionDigitsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: NoFractionDigitsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nNoFractionDigitsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: NoFractionDigitsPipe, name: \"noFractionDigits\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: NoFractionDigitsPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'noFractionDigits',\n                    pure: true,\n                }]\n        }] });\n\nconst AM_PM = ['AM', 'PM'];\nconst DAYS_OF_WEEK = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];\nfunction getTimeOptions(startTime, minutesStep, excludedOptions, amPmFormat) {\n    const timeOptions = [];\n    let index = 0;\n    while (startTime < 24 * 60) {\n        const hh = Math.floor(startTime / 60);\n        const mm = startTime % 60;\n        if (!excludedOptions.includes(startTime)) {\n            timeOptions[index] = {\n                label: getOptionLabel(hh, mm, amPmFormat),\n                time: startTime,\n            };\n            index++;\n        }\n        startTime = startTime + minutesStep;\n    }\n    return timeOptions;\n}\nfunction getHoursOfDay(scheduleTime = []) {\n    const list = scheduleTime.map(time => String(time / 60));\n    if (!list.length) {\n        for (let i = 0; i < 24; i++) {\n            list.push(`${i}`);\n        }\n    }\n    return list;\n}\nfunction hoursToMinutesArray(hours) {\n    return (hours === null || hours === void 0 ? void 0 : hours.map(hour => Number(hour) * 60)) || [];\n}\nfunction getOptionLabel(hh, mm, amPmFormat) {\n    const getFormattedTime = (hours = hh, suffix = '') => ('0' + hours).slice(-2) + '.' + ('0' + mm).slice(-2) + suffix;\n    return amPmFormat ? getFormattedTime(hh % 12, AM_PM[Math.floor(hh / 12)]) : getFormattedTime();\n}\n\nconst firstNonEmptyString = (...args) => args.find(item => !!item) || '';\nconst filterObjectByPropNames = (obj, keysToExclude) => {\n    const resultObj = Object.assign({}, obj);\n    keysToExclude.forEach((id) => delete resultObj[id]);\n    return resultObj;\n};\nconst isEqualNumberArrays = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    const sortedArr1 = sortNumberArray(arr1);\n    const sortedArr2 = sortNumberArray(arr2);\n    return sortedArr1.every((v, i) => v === sortedArr2[i]);\n};\nconst sortNumberArray = (arr, asc = true) => arr.slice(0).sort((a, b) => (asc ? a - b : b - a));\n\nconst fromHttpResponse = (body) => {\n    if (body === null) {\n        throw new Error('Response body not set');\n    }\n    return body;\n};\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst actionRecipeFormItemToRequest = (_a) => {\n    var { id, name, amount, actions, recurrence } = _a, restActionRecipe = __rest(_a, [\"id\", \"name\", \"amount\", \"actions\", \"recurrence\"]);\n    return (Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, restActionRecipe), (id && { id })), (name && { name })), { amount: (amount === null || amount === void 0 ? void 0 : amount.amount) || '0' }), (Object.keys(notificationRecurrenceFormValueToRequest(recurrence)).length && {\n        recurrence: notificationRecurrenceFormValueToRequest(recurrence),\n    })), { actions: notificationChannelsFormValueToRequest(actions) }));\n};\nconst parseActionRecipeFormItem = (_a) => {\n    var { id, name, amount, actions, recurrence } = _a, restActionRecipe = __rest(_a, [\"id\", \"name\", \"amount\", \"actions\", \"recurrence\"]);\n    return (Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, restActionRecipe), (id && { id })), (name && { name })), { amount: amount.amount || '0', actions: parseNotificationChannelsFormValue(actions) }), (Object.keys(notificationRecurrenceFormValueToRequest(recurrence)).length && {\n        recurrence: notificationRecurrenceFormValueToRequest(recurrence),\n    })));\n};\nconst arrangementActionRecipeToRequest = (arrangementId) => (actionRecipeFormItemValue) => (Object.assign({ arrangementId }, actionRecipeFormItemToRequest(actionRecipeFormItemValue)));\nconst mergeNotificationChannels = (channels, defaultChannels) => channels\n    ? channels.map(channel => (Object.assign(Object.assign({}, channel), { enabled: defaultChannels.some(({ type }) => type === channel.type) })))\n    : [];\nconst mergeSpecificationsWithActionRecipes = (specs, recipes) => specs.reduce((prev, specification) => (Object.assign(Object.assign({}, prev), { [specification.id]: {\n        specification,\n        actionRecipe: recipes.find(({ specificationId }) => specificationId === specification.id),\n    } })), {});\nconst getMappedRecurrenceResponse = (responseRecurrence, { recurrence: cachedRecurrence }) => (Object.assign(Object.assign({}, responseRecurrence), { hoursOfDay: getCachedHoursOfDay(responseRecurrence, cachedRecurrence) }));\nconst notificationChannelsFormValueToRequest = (channels) => Object.keys(channels)\n    .filter(key => channels[key])\n    .map(type => ({ type }));\nconst notificationRecurrenceFormValueToRequest = (rec) => (Object.assign(Object.assign({}, (((rec === null || rec === void 0 ? void 0 : rec.scheduleTime.length) || 0) !== 0 && { hoursOfDay: getHoursOfDay(rec === null || rec === void 0 ? void 0 : rec.scheduleTime) })), (((rec === null || rec === void 0 ? void 0 : rec.scheduleTime.length) || 0) !== 0 && { daysOfWeek: (rec === null || rec === void 0 ? void 0 : rec.daysOfWeek) || DAYS_OF_WEEK })));\nconst parseNotificationChannelsFormValue = (channels) => Object.keys(channels).map(type => ({\n    type,\n    enabled: channels[type],\n}));\nconst getCachedHoursOfDay = (responseRecurrence, cachedRecurrence) => {\n    if (!(cachedRecurrence === null || cachedRecurrence === void 0 ? void 0 : cachedRecurrence.scheduleTime)) {\n        return responseRecurrence.hoursOfDay;\n    }\n    if (!isEqualNumberArrays(cachedRecurrence.scheduleTime.slice(0), hoursToMinutesArray(responseRecurrence.hoursOfDay))) {\n        return responseRecurrence.hoursOfDay;\n    }\n    return cachedRecurrence.scheduleTime.map(minutes => String(minutes / 60));\n};\n\nclass ActionsFormBuilderService {\n    constructor(fb) {\n        this.fb = fb;\n    }\n    /**\n     * Method to build action recipe form group.\n     *\n     * @param specification - acton recipe specification\n     * @param actionRecipe - action recipe\n     * @param account - account data\n     * @returns prefilled form object\n     */\n    buildActionRecipeFormGroup(specification, actionRecipe, account) {\n        const actionRecipeFormValue = this.buildActionRecipeFormValue(specification, actionRecipe, account);\n        return this.fb.group(Object.assign(Object.assign({}, actionRecipeFormValue), { actions: this.fb.group(actionRecipeFormValue.actions), recurrence: this.buildScheduleNotificationsFormGroup(actionRecipe) }));\n    }\n    /**\n     * Method to build action recipe form value.\n     *\n     * @param specification - acton recipe specification\n     * @param actionRecipe - action recipe\n     * @param account - account data\n     * @returns action recipe form value object\n     */\n    buildActionRecipeFormValue(specification, actionRecipe, account) {\n        var _a, _b;\n        const { actions, amount, active, recurrence, id, specificationId, name } = actionRecipe || this.getDefaultActionRecipe(specification);\n        return Object.assign({ id, \n            // tslint:disable-next-line:no-null-keyword\n            name: name || null, specificationId,\n            active, recurrence: this.buildRecurrenceFormItem(recurrence), amount: {\n                amount,\n                currency: account ? account.currency : {},\n            }, actions: this.buildChannelsFormValue(actions) }, (((_a = specification.recipeDefaults) === null || _a === void 0 ? void 0 : _a.additions) && { additions: Object.assign({}, (_b = specification.recipeDefaults) === null || _b === void 0 ? void 0 : _b.additions) }));\n    }\n    /**\n     * Method to build schedule notificatons form group.\n     *\n     * @param actionRecipe - action recipe\n     * @returns prefilled form object\n     */\n    buildScheduleNotificationsFormGroup(actionRecipe) {\n        return this.fb.group({\n            scheduleTime: this.getTimeOptions(actionRecipe),\n        });\n    }\n    getDefaultActionRecipe(specification) {\n        return {\n            // tslint:disable-next-line:no-null-keyword\n            id: null,\n            // tslint:disable-next-line:no-null-keyword\n            name: specification.name || null,\n            specificationId: specification.id,\n            amount: (specification.recipeDefaults && specification.recipeDefaults.amount) || '0',\n            active: false,\n            actions: mergeNotificationChannels(specification.actions, (specification.recipeDefaults && specification.recipeDefaults.actions) || []),\n        };\n    }\n    buildChannelsFormValue(channels) {\n        return channels.reduce((previous, current) => (Object.assign(Object.assign({}, previous), { [current.type]: current.enabled })), {});\n    }\n    buildRecurrenceFormItem(recurrence) {\n        return Object.assign({ scheduleTime: hoursToMinutesArray(recurrence === null || recurrence === void 0 ? void 0 : recurrence.hoursOfDay) }, ((recurrence === null || recurrence === void 0 ? void 0 : recurrence.daysOfWeek) && { daysOfWeek: recurrence === null || recurrence === void 0 ? void 0 : recurrence.daysOfWeek }));\n    }\n    getTimeOptions(recipe) {\n        var _a, _b;\n        const mappedHours = ((_b = (_a = recipe === null || recipe === void 0 ? void 0 : recipe.recurrence) === null || _a === void 0 ? void 0 : _a.hoursOfDay) === null || _b === void 0 ? void 0 : _b.map(option => this.fb.control(Number(option) * 60))) || [];\n        return this.fb.array((mappedHours === null || mappedHours === void 0 ? void 0 : mappedHours.length) !== 24 ? mappedHours : []);\n    }\n}\nActionsFormBuilderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsFormBuilderService, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Injectable });\nActionsFormBuilderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsFormBuilderService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsFormBuilderService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.FormBuilder }]; } });\n\nconst EMPTY_RESPONSE_ERROR = new Error('Response data is empty');\n\nconst ACTION_RECIPES_LIMIT = 999999;\nclass ActionsNotificationsSettingsDataService {\n    constructor(dataHttpService, actionSpecificationsService) {\n        this.dataHttpService = dataHttpService;\n        this.actionSpecificationsService = actionSpecificationsService;\n    }\n    /**\n     * Method to get action recipes.\n     *\n     * @param params - params object\n     * @returns action recipe array\n     */\n    getActionRecipes(params = {}) {\n        const requestParams = Object.assign({ limit: ACTION_RECIPES_LIMIT }, params);\n        return this.dataHttpService.getActionRecipes(requestParams).pipe(map(fromHttpResponse), map(response => response.actionRecipes));\n    }\n    /**\n     * Method to get action recipe specifications.\n     *\n     * @returns action recipe specifications\n     */\n    getSpecifications() {\n        return this.actionSpecificationsService.getActionRecipeSpecifications({}).pipe(map(fromHttpResponse), map(response => response.actionRecipeSpecifications || []));\n    }\n    /**\n     * Method to save action recipe.\n     *\n     * @param action - recipe form value\n     * @param arrangementId - arrangement ID\n     * @returns batch processing response\n     */\n    saveActionRecipe(actionRecipeFormItem, arrangementId) {\n        const recipeToRequest = arrangementId\n            ? arrangementActionRecipeToRequest(arrangementId)\n            : actionRecipeFormItemToRequest;\n        const batchProcessingPutRequestBody = { actionRecipes: [recipeToRequest(actionRecipeFormItem)] };\n        return this.dataHttpService\n            .putBatchProcessing({ batchProcessingPutRequestBody })\n            .pipe(switchMap(body => (body ? of(body) : throwError(EMPTY_RESPONSE_ERROR))));\n    }\n}\nActionsNotificationsSettingsDataService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsNotificationsSettingsDataService, deps: [{ token: i1$1.ActionRecipesHttpService }, { token: i1$1.ActionRecipeSpecificationsHttpService }], target: i0.ɵɵFactoryTarget.Injectable });\nActionsNotificationsSettingsDataService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsNotificationsSettingsDataService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsNotificationsSettingsDataService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.ActionRecipesHttpService }, { type: i1$1.ActionRecipeSpecificationsHttpService }]; } });\n\nclass ActionsNotificationChannelsComponent {\n    constructor(controlContainer) {\n        this.controlContainer = controlContainer;\n        /**\n         * Action notification channels IDs.\n         */\n        this.id = `bb-actions-notification-channels-${ActionsNotificationChannelsComponent.idCounter++}`;\n        /**\n         * Actions map.\n         */\n        this.actionsMap = new Map();\n    }\n    /**\n     * Actions map setter.\n     */\n    set actions(value) {\n        this.actionsMap = new Map(value.map(action => [action.type, action]));\n    }\n    ngAfterContentInit() {\n        this.formGroup = this.controlContainer.control;\n    }\n}\nActionsNotificationChannelsComponent.idCounter = 0;\nActionsNotificationChannelsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsNotificationChannelsComponent, deps: [{ token: i1.ControlContainer }], target: i0.ɵɵFactoryTarget.Component });\nActionsNotificationChannelsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.14\", type: ActionsNotificationChannelsComponent, selector: \"bb-actions-notification-channels\", inputs: { actions: \"actions\" }, ngImport: i0, template: \"<ng-container\\n  bbActionsNotificationChannelsCustomizableDirective\\n  [bbHostRef]=\\\"this\\\"\\n  [bbTemplateContext]=\\\"{\\n    actionsMap: actionsMap\\n  }\\\"\\n></ng-container>\\n\\n<ng-template bbActionsNotificationChannelsCustomizableDirective let-hostRef let-actionsMap=\\\"context.actionsMap\\\">\\n  <label class=\\\"bb-label bb-stack\\\" *ngIf=\\\"actionsMap.has('sms') || actionsMap.has('email')\\\">\\n    <span\\n      class=\\\"bb-stack__item bb-stack__item--spacing-sm\\\"\\n      i18n=\\\"Title for notification channels@@actions-common.notification-channels.title\\\"\\n      data-role=\\\"channel-title\\\"\\n      >Additional channels</span\\n    >\\n    <bb-icon-ui\\n      class=\\\"bb-stack__item\\\"\\n      tabindex=\\\"0\\\"\\n      name=\\\"info\\\"\\n      size=\\\"sm\\\"\\n      data-role=\\\"channel-title-icon\\\"\\n      triggers=\\\"hover focus\\\"\\n      aria-label=\\\"Other channels that you would like to receive notifications through, additionally to the ones in-app\\\"\\n      i18n-aria-label=\\\"\\n        Channels that you would like to receive notifications through@@actions-common.notification-channels.others\\\"\\n      bbTooltip=\\\"Other channels that you would like to receive notifications through, additionally to the ones in-app\\\"\\n      i18n-bbTooltip=\\\"@@actions-common.notification-channels.others\\\"\\n    ></bb-icon-ui>\\n  </label>\\n  <div [formGroup]=\\\"hostRef.formGroup\\\">\\n    <div *ngIf=\\\"actionsMap.has('sms')\\\" class=\\\"bb-block bb-block--sm\\\">\\n      <bb-input-checkbox-ui\\n        label=\\\"SMS\\\"\\n        i18n-label=\\\"Label for sms channel checkbox@@actions-common.notification-channels.sms.label\\\"\\n        formControlName=\\\"sms\\\"\\n        data-role=\\\"sms-checkbox\\\"\\n      ></bb-input-checkbox-ui>\\n    </div>\\n\\n    <div *ngIf=\\\"actionsMap.has('email')\\\" class=\\\"bb-block bb-block--sm\\\">\\n      <bb-input-checkbox-ui\\n        label=\\\"Email\\\"\\n        i18n-label=\\\"Label for email channel checkbox@@actions-common.notification-channels.email.label\\\"\\n        formControlName=\\\"email\\\"\\n        data-role=\\\"email-checkbox\\\"\\n      ></bb-input-checkbox-ui>\\n    </div>\\n  </div>\\n</ng-template>\\n\", components: [{ type: i0.forwardRef(function () { return i2.IconComponent; }), selector: \"bb-icon-ui\", inputs: [\"name\", \"inverse\", \"size\", \"color\", \"animate\", \"aria-label\", \"cropped\", \"backgroundType\"] }, { type: i0.forwardRef(function () { return i3.InputCheckboxComponent; }), selector: \"bb-input-checkbox-ui\", inputs: [\"indeterminate\"], outputs: [\"indeterminateChange\"] }], directives: [{ type: i0.forwardRef(function () { return ActionsNotificationChannelsCustomizableDirective; }), selector: \"[bbActionsNotificationChannelsCustomizableDirective]\" }, { type: i0.forwardRef(function () { return i5.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i0.forwardRef(function () { return i5$1.TooltipDirective; }), selector: \"[bbTooltip]\", inputs: [\"bbTooltip\", \"triggers\"] }, { type: i0.forwardRef(function () { return i1.NgControlStatusGroup; }), selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i0.forwardRef(function () { return i1.FormGroupDirective; }), selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i0.forwardRef(function () { return i1.NgControlStatus; }), selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i0.forwardRef(function () { return i1.FormControlName; }), selector: \"[formControlName]\", inputs: [\"disabled\", \"formControlName\", \"ngModel\"], outputs: [\"ngModelChange\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsNotificationChannelsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-actions-notification-channels',\n                    templateUrl: './actions-notification-channels.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: i1.ControlContainer }]; }, propDecorators: { actions: [{\n                type: Input\n            }] } });\nclass ActionsNotificationChannelsCustomizableDirective extends BbTemplate {\n}\nActionsNotificationChannelsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsNotificationChannelsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nActionsNotificationChannelsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.14\", type: ActionsNotificationChannelsCustomizableDirective, selector: \"[bbActionsNotificationChannelsCustomizableDirective]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsNotificationChannelsCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbActionsNotificationChannelsCustomizableDirective]',\n                }]\n        }] });\n\n// tslint:disable-next-line:directive-class-suffix\nclass ArrangementBasedRecipeModel {\n    constructor(actionsFormBuilderService) {\n        this.actionsFormBuilderService = actionsFormBuilderService;\n        /**\n         * On submit event emitter.\n         */\n        this.submit = new EventEmitter();\n        /**\n         * Specifications with actions.\n         */\n        this.specificationActions = [];\n        /**\n         * Loading flag.\n         */\n        this.isLoading = false;\n        this.destroy$ = new Subject();\n    }\n    /**\n     * Specification setter.\n     */\n    set specification(specification) {\n        this.specificationValue = specification;\n        this.specificationActions = specification.actions || [];\n    }\n    /**\n     * Specification getter.\n     */\n    get specification() {\n        return this.specificationValue;\n    }\n    /**\n     * Method to check if card form control is expanded.\n     *\n     * @returns boolean value\n     */\n    get isCardExpanded() {\n        const activeControl = this.formGroup && this.formGroup.get('active');\n        return activeControl && activeControl.value && !this.isLoading;\n    }\n    ngOnInit() {\n        this.formGroup = this.actionsFormBuilderService.buildActionRecipeFormGroup(this.specification, this.actionRecipe, this.account);\n        this.formGroup.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {\n            this.onSubmit(value);\n        });\n    }\n    ngOnChanges(changes) {\n        const { actionRecipe } = changes;\n        if (this.formGroup && actionRecipe && actionRecipe.previousValue !== actionRecipe.currentValue) {\n            this.formGroup.patchValue(this.actionsFormBuilderService.buildActionRecipeFormValue(this.specification, this.actionRecipe, this.account), {\n                emitEvent: false,\n            });\n            this.isLoading = false;\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    /**\n     * Method to submit action recipe form.\n     *\n     * @param formValue - action recipe form value\n     */\n    onSubmit(formValue) {\n        this.submit.emit(formValue);\n    }\n    /**\n     * Method to set loading flag to true.\n     */\n    onActiveLoadingChange() {\n        this.isLoading = true;\n    }\n}\nArrangementBasedRecipeModel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ArrangementBasedRecipeModel, deps: [{ token: ActionsFormBuilderService }], target: i0.ɵɵFactoryTarget.Directive });\nArrangementBasedRecipeModel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.14\", type: ArrangementBasedRecipeModel, inputs: { account: \"account\", actionRecipe: \"actionRecipe\", specification: \"specification\" }, outputs: { submit: \"submit\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ArrangementBasedRecipeModel, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: ActionsFormBuilderService }]; }, propDecorators: { account: [{\n                type: Input\n            }], actionRecipe: [{\n                type: Input\n            }], specification: [{\n                type: Input\n            }], submit: [{\n                type: Output\n            }] } });\n\nclass SwitchWithLoadingComponent {\n    constructor() {\n        /**\n         * Loading indicator presentation marker.\n         */\n        this.isLoading = false;\n        /**\n         * ControlValueAccessor on change handler.\n         */\n        this.onChange = () => { };\n        /**\n         * ControlValueAccessor on touch handler.\n         */\n        this.onTouch = () => { };\n    }\n    /**\n     * ControlValueAccessor value setter.\n     */\n    set value(val) {\n        this._value = val;\n        this.onChange(val);\n        this.onTouch(val);\n    }\n    /**\n     * ControlValueAccessor value getter.\n     */\n    get value() {\n        return this._value;\n    }\n    /**\n     * Method from ControlValueAccessor to write a new value to the element.\n     *\n     * @param value - new value\n     */\n    writeValue(value) {\n        this._value = value;\n    }\n    /**\n     * Method from ControlValueAccessor to register on change handler.\n     *\n     * @param fn - on change handler function\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * Method from ControlValueAccessor to register on touched handler.\n     *\n     * @param fn - on touched handler function\n     */\n    registerOnTouched(fn) {\n        this.onTouch = fn;\n    }\n}\nSwitchWithLoadingComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: SwitchWithLoadingComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSwitchWithLoadingComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.14\", type: SwitchWithLoadingComponent, selector: \"bb-switch-with-loading\", inputs: { isLoading: \"isLoading\", ariaLabel: [\"aria-label\", \"ariaLabel\"] }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SwitchWithLoadingComponent),\n            multi: true,\n        },\n    ], ngImport: i0, template: \"<bb-switch-ui\\n  [aria-label]=\\\"ariaLabel\\\"\\n  [(ngModel)]=\\\"value\\\"\\n  (blur)=\\\"onTouch()\\\"\\n  *ngIf=\\\"!isLoading; else loadingIndicator\\\"\\n></bb-switch-ui>\\n<ng-template #loadingIndicator>\\n  <div class=\\\"bb-loading-indicator bb-loading-indicator--sm\\\" data-role=\\\"loading-indicator\\\">\\n    <svg aria-label=\\\"Loading indicator\\\" class=\\\"bb-loading-indicator__circle\\\" preserveAspectRatio=\\\"xMinYMin meet\\\">\\n      <circle class=\\\"bb-loading-indicator__path\\\" cx=\\\"50%\\\" cy=\\\"50%\\\" fill=\\\"none\\\" r=\\\"40%\\\" stroke=\\\"currentColor\\\"></circle>\\n    </svg>\\n  </div>\\n</ng-template>\\n\", components: [{ type: i1$2.SwitchComponent, selector: \"bb-switch-ui\", inputs: [\"labelPosition\"] }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: SwitchWithLoadingComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-switch-with-loading',\n                    templateUrl: './switch-with-loading.component.html',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => SwitchWithLoadingComponent),\n                            multi: true,\n                        },\n                    ],\n                }]\n        }], propDecorators: { isLoading: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }] } });\n\nclass ActionsAccountBalanceRecipeFormComponent extends ArrangementBasedRecipeModel {\n    constructor(actionsFormBuilderService) {\n        super(actionsFormBuilderService);\n        /**\n         * Account balance action recipe ID.\n         */\n        this.id = `bb-actions-account-balance-recipe-form-${ActionsAccountBalanceRecipeFormComponent.idCounter++}`;\n    }\n    /**\n     * Method to patch the form with the amount and currency.\n     *\n     * @param amount - amount input value\n     */\n    onInlineEditAccept(amount) {\n        if (this.formGroup) {\n            const amountControl = this.formGroup.get('amount');\n            if (amountControl) {\n                amountControl.patchValue({\n                    amount: amount || '0',\n                    currency: amountControl.value.currency,\n                });\n            }\n        }\n    }\n}\nActionsAccountBalanceRecipeFormComponent.idCounter = 0;\nActionsAccountBalanceRecipeFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsAccountBalanceRecipeFormComponent, deps: [{ token: ActionsFormBuilderService }], target: i0.ɵɵFactoryTarget.Component });\nActionsAccountBalanceRecipeFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.14\", type: ActionsAccountBalanceRecipeFormComponent, selector: \"bb-actions-account-balance-recipe-form\", usesInheritance: true, ngImport: i0, template: \"<ng-container\\n  bbActionsAccountBalanceRecipeCustomizableDirective\\n  [bbHostRef]=\\\"this\\\"\\n  [bbTemplateContext]=\\\"{\\n    formGroup: formGroup,\\n    isLoading: isLoading\\n  }\\\"\\n></ng-container>\\n\\n<ng-template\\n  bbActionsAccountBalanceRecipeCustomizableDirective\\n  let-hostRef\\n  let-formGroup=\\\"context.formGroup\\\"\\n  let-isLoading=\\\"context.isLoading\\\"\\n>\\n  <form [formGroup]=\\\"formGroup\\\">\\n    <bb-collapsible-ui class=\\\"card\\\" [isOpen]=\\\"hostRef.isCardExpanded\\\">\\n      <ng-template bbCollapsibleHeader>\\n        <div [ngClass]=\\\"hostRef.isCardExpanded ? 'card-header' : 'card-body'\\\">\\n          <div class=\\\"bb-stack\\\">\\n            <bb-header-ui\\n              class=\\\"bb-stack__item\\\"\\n              headingType=\\\"h5\\\"\\n              heading=\\\"Balance\\\"\\n              i18n-heading=\\\"Account balance recipe heading@@actions-common.account-balance-recipe.heading\\\"\\n              data-role=\\\"balance-header\\\"\\n            ></bb-header-ui>\\n            <bb-switch-with-loading\\n              [isLoading]=\\\"isLoading\\\"\\n              (change)=\\\"hostRef.onActiveLoadingChange()\\\"\\n              formControlName=\\\"active\\\"\\n              class=\\\"bb-stack__item bb-stack__item--push-right\\\"\\n              aria-label=\\\"Enable and expand account balance notifications\\\"\\n              i18n-aria-label=\\\"\\n                Account balance switcher aria label@@actions-common.account-balance-recipe.switcher.aria-label\\\"\\n              data-role=\\\"balance-switcher\\\"\\n            ></bb-switch-with-loading>\\n          </div>\\n          <div\\n            class=\\\"bb-text-support\\\"\\n            i18n=\\\"Account balance subheading@@actions-common.account-balance-recipe.subheading\\\"\\n            data-role=\\\"balance-sub-header\\\"\\n          >\\n            Receive notifications when your balance is lower than a selected amount\\n          </div>\\n        </div>\\n      </ng-template>\\n      <ng-template bbCollapsibleBody>\\n        <div class=\\\"card-body\\\">\\n          <label\\n            id=\\\"currency-input-label\\\"\\n            class=\\\"bb-label\\\"\\n            i18n=\\\"Lower than input label@@actions-common.account-balance-recipe.lower-than-input\\\"\\n            >Lower than\\n          </label>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-6 col-12 bb-block bb-block--md\\\">\\n              <ng-template #amountTemplate>\\n                <bb-amount-ui\\n                  class=\\\"bb-highlight\\\"\\n                  [amount]=\\\"formGroup.get('amount').value.amount\\\"\\n                  [currency]=\\\"account?.currency\\\"\\n                ></bb-amount-ui>\\n              </ng-template>\\n              <bb-input-inline-edit-ui\\n                pattern=\\\"-?\\\\d{1,18}\\\"\\n                (accept)=\\\"hostRef.onInlineEditAccept($event)\\\"\\n                [inputText]=\\\"formGroup.get('amount').value.amount | noFractionDigits\\\"\\n                [inputInlineTemplate]=\\\"amountTemplate\\\"\\n                data-role=\\\"balance-input\\\"\\n                i18n-ariaLabelEdit=\\\"\\n                  Edit amount without\\n                  fractions@@actions-common.account-balance-recipe.edit-amount-without-fractions-button\\\"\\n                ariaLabelEdit=\\\"Edit amount without fractions\\\"\\n              ></bb-input-inline-edit-ui>\\n            </div>\\n          </div>\\n          <bb-actions-notification-channels\\n            formGroupName=\\\"actions\\\"\\n            [actions]=\\\"hostRef.specificationActions\\\"\\n          ></bb-actions-notification-channels>\\n        </div>\\n      </ng-template>\\n    </bb-collapsible-ui>\\n  </form>\\n</ng-template>\\n\", components: [{ type: i0.forwardRef(function () { return i2$1.CollapsibleComponent; }), selector: \"bb-collapsible-ui\", inputs: [\"recreateBodyContent\", \"hasChevron\", \"isOpen\"], outputs: [\"isOpenChange\"] }, { type: i0.forwardRef(function () { return i3$1.HeaderComponent; }), selector: \"bb-header-ui\", inputs: [\"headingClasses\", \"headingType\", \"heading\"] }, { type: i0.forwardRef(function () { return SwitchWithLoadingComponent; }), selector: \"bb-switch-with-loading\", inputs: [\"isLoading\", \"aria-label\"] }, { type: i0.forwardRef(function () { return i5$2.AmountComponent; }), selector: \"bb-amount-ui\", inputs: [\"currency\", \"showPlusSign\", \"mapCurrency\", \"showPercent\", \"abbreviate\", \"decimalPlaces\", \"trailingZeroes\", \"amount\"] }, { type: i0.forwardRef(function () { return i6.InputInlineEditComponent; }), selector: \"bb-input-inline-edit-ui\", inputs: [\"state\", \"canEdit\", \"hasLoadingState\", \"inputInlineTemplate\", \"inputText\", \"maxLength\", \"minLength\", \"maxValue\", \"minValue\", \"autofocus\", \"ariaLabelAccept\", \"ariaLabelCancel\", \"ariaLabelEdit\", \"tooltipAccept\", \"tooltipCancel\", \"tooltipEdit\", \"autocomplete\", \"pattern\", \"hint\"], outputs: [\"stateChange\", \"cancel\", \"accept\"] }, { type: i0.forwardRef(function () { return ActionsNotificationChannelsComponent; }), selector: \"bb-actions-notification-channels\", inputs: [\"actions\"] }], directives: [{ type: i0.forwardRef(function () { return ActionsAccountBalanceRecipeCustomizableDirective; }), selector: \"[bbActionsAccountBalanceRecipeCustomizableDirective]\" }, { type: i0.forwardRef(function () { return i1.ɵNgNoValidate; }), selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i0.forwardRef(function () { return i1.NgControlStatusGroup; }), selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i0.forwardRef(function () { return i1.FormGroupDirective; }), selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i0.forwardRef(function () { return i2$1.CollapsibleHeaderDirective; }), selector: \"ng-template[bbCollapsibleHeader]\" }, { type: i0.forwardRef(function () { return i5.NgClass; }), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i0.forwardRef(function () { return i1.NgControlStatus; }), selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i0.forwardRef(function () { return i1.FormControlName; }), selector: \"[formControlName]\", inputs: [\"disabled\", \"formControlName\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { type: i0.forwardRef(function () { return i2$1.CollapsibleBodyDirective; }), selector: \"ng-template[bbCollapsibleBody]\" }, { type: i0.forwardRef(function () { return i1.FormGroupName; }), selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }], pipes: { \"noFractionDigits\": i0.forwardRef(function () { return NoFractionDigitsPipe; }) }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsAccountBalanceRecipeFormComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-actions-account-balance-recipe-form',\n                    templateUrl: './actions-account-balance-recipe-form.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: ActionsFormBuilderService }]; } });\nclass ActionsAccountBalanceRecipeCustomizableDirective extends BbTemplate {\n}\nActionsAccountBalanceRecipeCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsAccountBalanceRecipeCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nActionsAccountBalanceRecipeCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.14\", type: ActionsAccountBalanceRecipeCustomizableDirective, selector: \"[bbActionsAccountBalanceRecipeCustomizableDirective]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsAccountBalanceRecipeCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbActionsAccountBalanceRecipeCustomizableDirective]',\n                }]\n        }] });\n\nclass ActionsTransactionsRecipeFormComponent extends ArrangementBasedRecipeModel {\n    constructor(actionsFormBuilderService) {\n        super(actionsFormBuilderService);\n    }\n}\nActionsTransactionsRecipeFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsTransactionsRecipeFormComponent, deps: [{ token: ActionsFormBuilderService }], target: i0.ɵɵFactoryTarget.Component });\nActionsTransactionsRecipeFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.14\", type: ActionsTransactionsRecipeFormComponent, selector: \"bb-actions-transactions-recipe-form\", usesInheritance: true, ngImport: i0, template: \"<ng-container\\n  bbActionsTransactionsRecipeCustomizableDirective\\n  [bbHostRef]=\\\"this\\\"\\n  [bbTemplateContext]=\\\"{\\n    formGroup: formGroup,\\n    isLoading: isLoading\\n  }\\\"\\n></ng-container>\\n\\n<ng-template\\n  bbActionsTransactionsRecipeCustomizableDirective\\n  let-hostRef\\n  let-formGroup=\\\"context.formGroup\\\"\\n  let-isLoading=\\\"context.isLoading\\\"\\n>\\n  <form [formGroup]=\\\"formGroup\\\">\\n    <bb-collapsible-ui class=\\\"card\\\" [isOpen]=\\\"hostRef.isCardExpanded\\\">\\n      <ng-template bbCollapsibleHeader>\\n        <div [ngClass]=\\\"hostRef.isCardExpanded ? 'card-header' : 'card-body'\\\" data-role=\\\"collapsible-header\\\">\\n          <div class=\\\"bb-stack\\\">\\n            <bb-header-ui\\n              class=\\\"bb-stack__item\\\"\\n              headingType=\\\"h5\\\"\\n              heading=\\\"Debits and credits\\\"\\n              i18n-heading=\\\"Debits and credits recipe heading@@actions-common.transactions-recipe.heading\\\"\\n              data-role=\\\"transactions-recipe-header\\\"\\n            ></bb-header-ui>\\n            <bb-switch-with-loading\\n              [isLoading]=\\\"isLoading\\\"\\n              (change)=\\\"hostRef.onActiveLoadingChange()\\\"\\n              formControlName=\\\"active\\\"\\n              class=\\\"bb-stack__item bb-stack__item--push-right\\\"\\n              aria-label=\\\"Enable and expand debits and credits notifications\\\"\\n              i18n-aria-label=\\\"\\n                Debits and credits switcher aria label@@actions-common.transactions-recipe.switcher.aria-label\\\"\\n              data-role=\\\"transactions-recipe-switcher\\\"\\n            ></bb-switch-with-loading>\\n          </div>\\n          <div\\n            class=\\\"bb-text-support\\\"\\n            i18n=\\\"Debits and credits subheading@@actions-common.transactions-recipe.subheading\\\"\\n            data-role=\\\"transactions-recipe-sub-header\\\"\\n          >\\n            Receive notification when an amount is debited or credited from your account\\n          </div>\\n        </div>\\n      </ng-template>\\n      <ng-template bbCollapsibleBody>\\n        <div class=\\\"card-body\\\">\\n          <bb-actions-notification-channels\\n            formGroupName=\\\"actions\\\"\\n            [actions]=\\\"hostRef.specificationActions\\\"\\n          ></bb-actions-notification-channels>\\n        </div>\\n      </ng-template>\\n    </bb-collapsible-ui>\\n  </form>\\n</ng-template>\\n\", components: [{ type: i0.forwardRef(function () { return i2$1.CollapsibleComponent; }), selector: \"bb-collapsible-ui\", inputs: [\"recreateBodyContent\", \"hasChevron\", \"isOpen\"], outputs: [\"isOpenChange\"] }, { type: i0.forwardRef(function () { return i3$1.HeaderComponent; }), selector: \"bb-header-ui\", inputs: [\"headingClasses\", \"headingType\", \"heading\"] }, { type: i0.forwardRef(function () { return SwitchWithLoadingComponent; }), selector: \"bb-switch-with-loading\", inputs: [\"isLoading\", \"aria-label\"] }, { type: i0.forwardRef(function () { return ActionsNotificationChannelsComponent; }), selector: \"bb-actions-notification-channels\", inputs: [\"actions\"] }], directives: [{ type: i0.forwardRef(function () { return ActionsTransactionsRecipeCustomizableDirective; }), selector: \"[bbActionsTransactionsRecipeCustomizableDirective]\" }, { type: i0.forwardRef(function () { return i1.ɵNgNoValidate; }), selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i0.forwardRef(function () { return i1.NgControlStatusGroup; }), selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i0.forwardRef(function () { return i1.FormGroupDirective; }), selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i0.forwardRef(function () { return i2$1.CollapsibleHeaderDirective; }), selector: \"ng-template[bbCollapsibleHeader]\" }, { type: i0.forwardRef(function () { return i5.NgClass; }), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i0.forwardRef(function () { return i1.NgControlStatus; }), selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i0.forwardRef(function () { return i1.FormControlName; }), selector: \"[formControlName]\", inputs: [\"disabled\", \"formControlName\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { type: i0.forwardRef(function () { return i2$1.CollapsibleBodyDirective; }), selector: \"ng-template[bbCollapsibleBody]\" }, { type: i0.forwardRef(function () { return i1.FormGroupName; }), selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsTransactionsRecipeFormComponent, decorators: [{\n            type: Component,\n            args: [{\n                    //TODO: remove first selector in 3.8.0\n                    selector: 'bb-actions-transactions-recipe-form',\n                    templateUrl: './actions-transactions-recipe-form.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: ActionsFormBuilderService }]; } });\nclass ActionsTransactionsRecipeCustomizableDirective extends BbTemplate {\n}\nActionsTransactionsRecipeCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsTransactionsRecipeCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nActionsTransactionsRecipeCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.14\", type: ActionsTransactionsRecipeCustomizableDirective, selector: \"[bbActionsTransactionsRecipeCustomizableDirective]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsTransactionsRecipeCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbActionsTransactionsRecipeCustomizableDirective]',\n                }]\n        }] });\n\nconst MinutesInDay = 1440;\nvar ScheduleType;\n(function (ScheduleType) {\n    ScheduleType[\"RightAway\"] = \"RightAway\";\n    ScheduleType[\"Custom\"] = \"Custom\";\n})(ScheduleType || (ScheduleType = {}));\nconst ScheduleDescriptionText = {\n    // TODO: use in component template once localize pipe will be available\n    RightAway: 'Notifications will be sent immediately.',\n    Custom: 'Notifications will be grouped and sent at specified time.',\n};\nconst DefaultTime = 480;\nconst MaxOptionsQuantity = 4;\n\nclass TimePickerComponent {\n    constructor() {\n        this.timeOptions = [];\n        this.excludedOptions$$ = new BehaviorSubject([]);\n        this.componentDestroyed$ = new Subject();\n        /**\n         * Start time\n         */\n        this.startTime = 0;\n        /**\n         * Step on minutes for time options\n         */\n        this.minutesStep = 60;\n        /**\n         * Time form control\n         */\n        this.timeControl = new FormControl();\n        /**\n         * Change event handler\n         */\n        this.onChange = (_time) => { }; // NOSONAR\n        /**\n         * Touched event handler\n         */\n        this.onTouched = () => { }; // NOSONAR\n    }\n    /**\n     * Options to exclude\n     */\n    set excludedOptions(options) {\n        this.excludedOptions$$.next(options || []);\n    }\n    ngOnInit() {\n        this.onExcludedOptionsChange();\n        this.onFormValueChange();\n    }\n    onExcludedOptionsChange() {\n        this.excludedOptions$$.pipe(takeUntil(this.componentDestroyed$)).subscribe(options => {\n            var _a, _b;\n            const timeControlValue = ((_a = this.timeControl.value) === null || _a === void 0 ? void 0 : _a.time) || ((_b = this.controlRef) === null || _b === void 0 ? void 0 : _b.value);\n            const excludedOptions = timeControlValue || timeControlValue === 0 ? options.filter(option => option !== timeControlValue) : [];\n            this.timeOptions = getTimeOptions(this.startTime, this.minutesStep, excludedOptions, this.amPmFormat);\n            const selection = this.timeOptions.find(option => option.time === timeControlValue);\n            this.timeControl.setValue(selection);\n        });\n    }\n    onFormValueChange() {\n        this.timeControl.valueChanges.pipe(takeUntil(this.componentDestroyed$)).subscribe(value => {\n            if (value) {\n                this.onChange(value.time);\n            }\n        });\n    }\n    /**\n     * Method to register change event handler\n     *\n     * @param fn\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * Method to register touched event handler\n     *\n     * @param fn\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Method to write initial value to the input\n     *\n     * @param time\n     */\n    writeValue(time) {\n        this.timeControl.setValue(this.timeOptions.find(ts => ts.time === time));\n    }\n    markAsTouched(event) {\n        const target = event.target;\n        target.blur();\n        this.onTouched();\n    }\n    ngOnDestroy() {\n        this.componentDestroyed$.next(true);\n    }\n}\nTimePickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: TimePickerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTimePickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.14\", type: TimePickerComponent, selector: \"bb-time-picker\", inputs: { startTime: \"startTime\", minutesStep: \"minutesStep\", amPmFormat: \"amPmFormat\", excludedOptions: \"excludedOptions\", controlRef: \"controlRef\", label: \"label\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimePickerComponent),\n            multi: true,\n        },\n    ], ngImport: i0, template: \"<bb-dropdown-single-select-ui\\n  iconName=\\\"caret-down\\\"\\n  [options]=\\\"timeOptions\\\"\\n  [label]=\\\"label\\\"\\n  (change)=\\\"markAsTouched($event)\\\"\\n  [formControl]=\\\"timeControl\\\"\\n  displayAttributePath=\\\"label\\\"\\n  data-role=\\\"time-picker-dropdown\\\"\\n>\\n</bb-dropdown-single-select-ui>\\n\", components: [{ type: i2$2.DropdownSingleSelectComponent, selector: \"bb-dropdown-single-select-ui\", inputs: [\"placeholder\", \"defaultOptionAsPlaceholder\", \"options\", \"displayAttributePath\", \"iconName\", \"compareWithFn\"] }], directives: [{ type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.FormControlDirective, selector: \"[formControl]\", inputs: [\"disabled\", \"formControl\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: TimePickerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-time-picker',\n                    templateUrl: './time-picker.component.html',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => TimePickerComponent),\n                            multi: true,\n                        },\n                    ],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], propDecorators: { startTime: [{\n                type: Input\n            }], minutesStep: [{\n                type: Input\n            }], amPmFormat: [{\n                type: Input\n            }], excludedOptions: [{\n                type: Input\n            }], controlRef: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }] } });\n\nclass ActionsScheduleNotificationsComponent {\n    constructor(fb) {\n        this.fb = fb;\n        /**\n         * Schedule type enum\n         */\n        this.ScheduleType = ScheduleType;\n        /**\n         * Maximum options quantity\n         */\n        this.MaxOptionsQuantity = MaxOptionsQuantity;\n        /**\n         * Stream of selected options\n         */\n        this.selectedTimeOptions$ = of([]);\n        this.selectedTimeOptions = [];\n        this.destroy$ = new Subject();\n        /**\n         * Minutes step in time options list.\n         */\n        this.minutesStep = 60;\n        /**\n         * Schedule form submit output.\n         */\n        this.submit = new EventEmitter();\n    }\n    ngOnInit() {\n        this.scheduleType = this.getScheduleType(this.actionRecipe);\n        this.onScheduleFormChange();\n    }\n    onScheduleTypeChange(event) {\n        const target = event.target;\n        if (this.scheduleType === this.ScheduleType.RightAway) {\n            this.resetScheduleForm();\n        }\n        else if (this.scheduleType === this.ScheduleType.Custom) {\n            this.addTimeOption();\n        }\n        target.blur();\n    }\n    addTimeOption() {\n        this.scheduleTime.push(this.fb.control(this.defaultTime));\n        this.submitScheduleForm();\n    }\n    deleteTimeOption(index) {\n        this.scheduleTime.removeAt(index);\n        this.submitScheduleForm();\n    }\n    timeControlChange() {\n        this.submitScheduleForm();\n    }\n    onScheduleFormChange() {\n        this.selectedTimeOptions$ = this.scheduleForm.controls.scheduleTime.valueChanges.pipe(filter(val => val), tap(val => (this.selectedTimeOptions = val)), distinctUntilChanged(), takeUntil(this.destroy$));\n    }\n    submitScheduleForm() {\n        this.submit.emit(this.scheduleForm);\n    }\n    getScheduleType(recipe) {\n        var _a, _b;\n        const hoursOfDayQuantity = ((_b = (_a = recipe.recurrence) === null || _a === void 0 ? void 0 : _a.hoursOfDay) === null || _b === void 0 ? void 0 : _b.length) || 0;\n        const hoursScheduleApplied = hoursOfDayQuantity !== 0 && hoursOfDayQuantity !== 24;\n        if (!hoursScheduleApplied) {\n            return ScheduleType.RightAway;\n        }\n        return ScheduleType.Custom;\n    }\n    resetScheduleForm() {\n        this.scheduleTime.clear();\n        this.submitScheduleForm();\n    }\n    /**\n     * Getter for repeat count control\n     */\n    get scheduleTime() {\n        return this.scheduleForm.get('scheduleTime');\n    }\n    /**\n     * Getter for default time which returns 08:00 for the first option and +1 hour for subsequent\n     */\n    get defaultTime() {\n        const lastSelectedTimeOption = this.lastSelectedTimeOption;\n        let defaultTime = lastSelectedTimeOption + this.minutesStep;\n        if (!lastSelectedTimeOption && lastSelectedTimeOption !== 0) {\n            return DefaultTime;\n        }\n        if (defaultTime === MinutesInDay) {\n            defaultTime = 0;\n        }\n        while (this.selectedTimeOptions.includes(defaultTime)) {\n            if (defaultTime === MinutesInDay) {\n                defaultTime = 0;\n            }\n            else {\n                defaultTime = defaultTime + 60;\n            }\n        }\n        return defaultTime;\n    }\n    /**\n     * Getter for last added time option\n     */\n    get lastSelectedTimeOption() {\n        var _a;\n        return (_a = this.scheduleTime.controls[this.scheduleTime.controls.length - 1]) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nActionsScheduleNotificationsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsScheduleNotificationsComponent, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component });\nActionsScheduleNotificationsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.14\", type: ActionsScheduleNotificationsComponent, selector: \"bb-actions-schedule-notifications\", inputs: { actionRecipe: \"actionRecipe\", scheduleForm: \"scheduleForm\", minutesStep: \"minutesStep\" }, outputs: { submit: \"submit\" }, ngImport: i0, template: \"<ng-container bbActionsScheduleNotificationsComponentCustomizableDirective [bbHostRef]=\\\"this\\\"> </ng-container>\\n<ng-template bbActionsScheduleNotificationsComponentCustomizableDirective let-hostRef>\\n  <div class=\\\"row bb-block bb-block--md bb-stack bb-stack--align-baseline\\\">\\n    <div class=\\\"col-3\\\">\\n      <span i18n=\\\"Notify me label@@actions-common.actions-schedule-notifications.title\\\"> Notify me </span>\\n    </div>\\n    <div class=\\\"col-3\\\">\\n      <bb-dropdown-single-select-ui\\n        iconName=\\\"caret-down\\\"\\n        [required]=\\\"true\\\"\\n        [(ngModel)]=\\\"hostRef.scheduleType\\\"\\n        (change)=\\\"hostRef.onScheduleTypeChange($event)\\\"\\n        aria-label=\\\"Schedule type\\\"\\n        i18n-aria-label=\\\"\\n          Schedule type dropdown@@actions-common.actions-schedule-notifications.schedule-type-dropdown.aria-label\\\"\\n        data-role=\\\"notifications-schedule-type\\\"\\n      >\\n        <bb-dropdown-single-select-option-ui\\n          i18n-label=\\\"\\n            Schedule type dropdown right away\\n            option@@actions-common.actions-schedule-notifications.schedule-type-right-away-option.label\\\"\\n          label=\\\"Right away\\\"\\n          [value]=\\\"hostRef.ScheduleType.RightAway\\\"\\n        ></bb-dropdown-single-select-option-ui>\\n        <bb-dropdown-single-select-option-ui\\n          i18n-label=\\\"\\n            Schedule type dropdown custom\\n            option@@actions-common.actions-schedule-notifications.schedule-type-custom-option.label\\\"\\n          label=\\\"Custom\\\"\\n          [value]=\\\"hostRef.ScheduleType.Custom\\\"\\n        ></bb-dropdown-single-select-option-ui>\\n      </bb-dropdown-single-select-ui>\\n    </div>\\n    <div\\n      class=\\\"col-6 row bb-stack bb-stack--align-baseline no-gutters\\\"\\n      *ngIf=\\\"hostRef.scheduleType === hostRef.ScheduleType.Custom\\\"\\n    >\\n      <span\\n        class=\\\"col-1\\\"\\n        i18n=\\\"Schedule time picker title @@actions-common.actions-schedule-notifications.schedule-time-picker.title\\\"\\n        >At</span\\n      >\\n      <form class=\\\"col-11\\\" [formGroup]=\\\"hostRef.scheduleForm\\\">\\n        <div\\n          class=\\\"row no-gutters bb-block bb-block--md\\\"\\n          formArrayName=\\\"scheduleTime\\\"\\n          *ngFor=\\\"let ref of hostRef.scheduleTime.controls; let i = index; let last = last\\\"\\n        >\\n          <bb-time-picker\\n            class=\\\"col-6 actions-schedule-time-picker__dropdown\\\"\\n            [formControlName]=\\\"i\\\"\\n            [excludedOptions]=\\\"hostRef.selectedTimeOptions$ | async\\\"\\n            [controlRef]=\\\"ref\\\"\\n            [minutesStep]=\\\"hostRef.minutesStep\\\"\\n            (change)=\\\"hostRef.timeControlChange()\\\"\\n            data-role=\\\"schedule-time-picker\\\"\\n            i18n-aria-label=\\\"\\n              Schedule time picker label @@actions-common.actions-schedule-notifications.schedule-time-picker.aria-label\\\"\\n            aria-label=\\\"actions-schedule-notifications-time-picker\\\"\\n          ></bb-time-picker>\\n          <button\\n            bbButton\\n            circle=\\\"true\\\"\\n            *ngIf=\\\"last && i !== 0\\\"\\n            (click)=\\\"hostRef.deleteTimeOption(i)\\\"\\n            color=\\\"link\\\"\\n            aria-label=\\\"Delete time option\\\"\\n            i18n-aria-label=\\\"\\n              Schedule delete time option\\n              @@actions-common.actions-schedule-notifications.schedule-delete-time-option.aria-label\\\"\\n            data-role=\\\"delete-time-option\\\"\\n          >\\n            <bb-icon-ui name=\\\"delete\\\" class=\\\"text-muted\\\"></bb-icon-ui>\\n          </button>\\n        </div>\\n        <button\\n          bbButton\\n          class=\\\"bb-stack__item\\\"\\n          color=\\\"primary\\\"\\n          circle=\\\"true\\\"\\n          buttonSize=\\\"sm\\\"\\n          type=\\\"button\\\"\\n          *ngIf=\\\"hostRef.scheduleTime.controls.length < hostRef.MaxOptionsQuantity\\\"\\n          (click)=\\\"hostRef.addTimeOption()\\\"\\n          aria-label=\\\"Add time option\\\"\\n          i18n-aria-label=\\\"\\n            Schedule add time option @@actions-common.actions-schedule-notifications.schedule-time-add-option.aria-label\\\"\\n          data-role=\\\"add-time-option\\\"\\n        >\\n          <bb-icon-ui name=\\\"add\\\" size=\\\"sm\\\"></bb-icon-ui>\\n        </button>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"bb-block bb-block--md text-center bb-text-support\\\" data-role=\\\"schedule-description\\\">\\n    <em i18n=\\\"Schedule description@@actions-common.actions-schedule-notifications.schedule-description\\\">\\n      Notifications will be {hostRef.scheduleType, select, Custom {grouped and sent at specified time.} RightAway {sent\\n      immediately.}}\\n    </em>\\n    <hr />\\n  </div>\\n</ng-template>\\n\", components: [{ type: i0.forwardRef(function () { return i2$2.DropdownSingleSelectComponent; }), selector: \"bb-dropdown-single-select-ui\", inputs: [\"placeholder\", \"defaultOptionAsPlaceholder\", \"options\", \"displayAttributePath\", \"iconName\", \"compareWithFn\"] }, { type: i0.forwardRef(function () { return i2$2.DropdownSingleSelectOptionComponent; }), selector: \"bb-dropdown-single-select-option-ui\", inputs: [\"value\", \"label\"] }, { type: i0.forwardRef(function () { return TimePickerComponent; }), selector: \"bb-time-picker\", inputs: [\"startTime\", \"minutesStep\", \"amPmFormat\", \"excludedOptions\", \"controlRef\", \"label\"] }, { type: i0.forwardRef(function () { return i2.IconComponent; }), selector: \"bb-icon-ui\", inputs: [\"name\", \"inverse\", \"size\", \"color\", \"animate\", \"aria-label\", \"cropped\", \"backgroundType\"] }], directives: [{ type: i0.forwardRef(function () { return ActionsScheduleNotificationsComponentCustomizableDirective; }), selector: \"[bbActionsScheduleNotificationsComponentCustomizableDirective]\" }, { type: i0.forwardRef(function () { return i1.RequiredValidator; }), selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { type: i0.forwardRef(function () { return i1.NgControlStatus; }), selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i0.forwardRef(function () { return i1.NgModel; }), selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i0.forwardRef(function () { return i5.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i0.forwardRef(function () { return i1.ɵNgNoValidate; }), selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i0.forwardRef(function () { return i1.NgControlStatusGroup; }), selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i0.forwardRef(function () { return i1.FormGroupDirective; }), selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i0.forwardRef(function () { return i5.NgForOf; }), selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i0.forwardRef(function () { return i1.FormArrayName; }), selector: \"[formArrayName]\", inputs: [\"formArrayName\"] }, { type: i0.forwardRef(function () { return i1.FormControlName; }), selector: \"[formControlName]\", inputs: [\"disabled\", \"formControlName\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { type: i0.forwardRef(function () { return i6$1.ButtonDirective; }), selector: \"button[bbButton]\", inputs: [\"type\", \"color\", \"buttonSize\", \"block\", \"circle\"] }], pipes: { \"async\": i0.forwardRef(function () { return i5.AsyncPipe; }) }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsScheduleNotificationsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-actions-schedule-notifications',\n                    templateUrl: './actions-schedule-notifications.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: i1.FormBuilder }]; }, propDecorators: { actionRecipe: [{\n                type: Input\n            }], scheduleForm: [{\n                type: Input\n            }], minutesStep: [{\n                type: Input\n            }], submit: [{\n                type: Output\n            }] } });\nclass ActionsScheduleNotificationsComponentCustomizableDirective extends BbTemplate {\n}\nActionsScheduleNotificationsComponentCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsScheduleNotificationsComponentCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nActionsScheduleNotificationsComponentCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.14\", type: ActionsScheduleNotificationsComponentCustomizableDirective, selector: \"[bbActionsScheduleNotificationsComponentCustomizableDirective]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsScheduleNotificationsComponentCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbActionsScheduleNotificationsComponentCustomizableDirective]',\n                }]\n        }] });\n\nclass ActionsToggleRecipeFormComponent {\n    constructor(actionsFormBuilderService) {\n        this.actionsFormBuilderService = actionsFormBuilderService;\n        /**\n         * Flag to control if schedule notifications is enabled\n         */\n        this.scheduleEnabled = false;\n        /**\n         * On form submit output.\n         */\n        this.submit = new EventEmitter();\n        /**\n         * Loading state flag.\n         */\n        this.isLoading = false;\n    }\n    ngOnInit() {\n        this.formGroup = this.actionsFormBuilderService.buildActionRecipeFormGroup(this.specification, this.actionRecipe);\n    }\n    ngOnChanges(changes) {\n        const { actionRecipe } = changes;\n        if (this.formGroup && actionRecipe && actionRecipe.previousValue !== actionRecipe.currentValue) {\n            this.isLoading = false;\n            this.formGroup.patchValue(this.actionsFormBuilderService.buildActionRecipeFormValue(this.specification, this.actionRecipe));\n        }\n    }\n    /**\n     * Method to handle schedule form change and trigger submit action.\n     *\n     * @param value - action recipe form value\n     */\n    onScheduleChange(value) {\n        var _a, _b;\n        (_a = this.formGroup) === null || _a === void 0 ? void 0 : _a.patchValue(value);\n        this.submit.emit((_b = this.formGroup) === null || _b === void 0 ? void 0 : _b.value);\n    }\n    /**\n     * Method to submit action recipe form.\n     *\n     * @param formValue - action recipe form value\n     */\n    onSubmit(formValue) {\n        this.isLoading = true;\n        this.submit.emit(formValue);\n    }\n}\nActionsToggleRecipeFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsToggleRecipeFormComponent, deps: [{ token: ActionsFormBuilderService }], target: i0.ɵɵFactoryTarget.Component });\nActionsToggleRecipeFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.14\", type: ActionsToggleRecipeFormComponent, selector: \"bb-actions-toggle-recipe-form\", inputs: { actionRecipe: \"actionRecipe\", specification: \"specification\", label: \"label\", scheduleEnabled: \"scheduleEnabled\" }, outputs: { submit: \"submit\" }, usesOnChanges: true, ngImport: i0, template: \"<ng-container bbActionsToggleRecipeFormCustomizableDirective [bbHostRef]=\\\"this\\\"></ng-container>\\n\\n<ng-template bbActionsToggleRecipeFormCustomizableDirective let-hostRef>\\n  <ng-container *ngIf=\\\"hostRef.formGroup\\\">\\n    <form [formGroup]=\\\"hostRef.formGroup\\\">\\n      <div class=\\\"bb-block bb-block--md bb-stack\\\">\\n        <div\\n          class=\\\"bb-stack__item bb-text-support bb-text-bold\\\"\\n          [attr.data-role]=\\\"'toggle-recipe-label-' + hostRef.specification.id\\\"\\n        >\\n          {{ hostRef.label }}\\n        </div>\\n        <bb-switch-with-loading\\n          [isLoading]=\\\"hostRef.isLoading\\\"\\n          class=\\\"bb-stack__item bb-stack__item--push-right\\\"\\n          formControlName=\\\"active\\\"\\n          (change)=\\\"hostRef.onSubmit(hostRef.formGroup.value)\\\"\\n          aria-label=\\\"{{ 'Switch on/off ' + hostRef.label }}\\\"\\n          i18n-aria-label=\\\"Toggle recipe aria label@@actions-common.actions-toggle-recipe-form.switcher.aria-label\\\"\\n          [attr.data-role]=\\\"'toggle-recipe-' + hostRef.specification.id\\\"\\n        ></bb-switch-with-loading>\\n      </div>\\n      <bb-actions-schedule-notifications\\n        class=\\\"bb-stack__item\\\"\\n        *ngIf=\\\"hostRef.scheduleEnabled && hostRef.formGroup.value?.active && hostRef.actionRecipe\\\"\\n        [scheduleForm]=\\\"hostRef.formGroup.get('recurrence')\\\"\\n        [actionRecipe]=\\\"hostRef.actionRecipe\\\"\\n        (submit)=\\\"hostRef.onScheduleChange($event)\\\"\\n      ></bb-actions-schedule-notifications>\\n    </form>\\n  </ng-container>\\n</ng-template>\\n\", components: [{ type: i0.forwardRef(function () { return SwitchWithLoadingComponent; }), selector: \"bb-switch-with-loading\", inputs: [\"isLoading\", \"aria-label\"] }, { type: i0.forwardRef(function () { return ActionsScheduleNotificationsComponent; }), selector: \"bb-actions-schedule-notifications\", inputs: [\"actionRecipe\", \"scheduleForm\", \"minutesStep\"], outputs: [\"submit\"] }], directives: [{ type: i0.forwardRef(function () { return ActionsToggleRecipeFormCustomizableDirective; }), selector: \"[bbActionsToggleRecipeFormCustomizableDirective]\" }, { type: i0.forwardRef(function () { return i5.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i0.forwardRef(function () { return i1.ɵNgNoValidate; }), selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i0.forwardRef(function () { return i1.NgControlStatusGroup; }), selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i0.forwardRef(function () { return i1.FormGroupDirective; }), selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i0.forwardRef(function () { return i1.NgControlStatus; }), selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i0.forwardRef(function () { return i1.FormControlName; }), selector: \"[formControlName]\", inputs: [\"disabled\", \"formControlName\", \"ngModel\"], outputs: [\"ngModelChange\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsToggleRecipeFormComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-actions-toggle-recipe-form',\n                    templateUrl: './actions-toggle-recipe-form.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: ActionsFormBuilderService }]; }, propDecorators: { actionRecipe: [{\n                type: Input\n            }], specification: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], scheduleEnabled: [{\n                type: Input\n            }], submit: [{\n                type: Output\n            }] } });\nclass ActionsToggleRecipeFormCustomizableDirective extends BbTemplate {\n}\nActionsToggleRecipeFormCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsToggleRecipeFormCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nActionsToggleRecipeFormCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.14\", type: ActionsToggleRecipeFormCustomizableDirective, selector: \"[bbActionsToggleRecipeFormCustomizableDirective]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsToggleRecipeFormCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbActionsToggleRecipeFormCustomizableDirective]',\n                }]\n        }] });\n\nclass TimePickerModule {\n}\nTimePickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: TimePickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTimePickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: TimePickerModule, declarations: [TimePickerComponent], imports: [CommonModule, DropdownSingleSelectModule, ReactiveFormsModule], exports: [TimePickerComponent, DropdownSingleSelectModule, ReactiveFormsModule] });\nTimePickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: TimePickerModule, imports: [[CommonModule, DropdownSingleSelectModule, ReactiveFormsModule], DropdownSingleSelectModule, ReactiveFormsModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: TimePickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, DropdownSingleSelectModule, ReactiveFormsModule],\n                    declarations: [TimePickerComponent],\n                    exports: [TimePickerComponent, DropdownSingleSelectModule, ReactiveFormsModule],\n                }]\n        }] });\n\nconst PreferenceDataMap = {\n    '1': {\n        generalNotificationId: 'new-transaction-occurred',\n        preferenceName: 'Transactions',\n        preferenceLabel: 'Transactions',\n        specificationId: '1',\n    },\n    '4': {\n        generalNotificationId: 'account-balance-low',\n        preferenceName: 'AccountBalance',\n        preferenceLabel: 'Account Balance',\n        specificationId: '4',\n    },\n};\n\nclass ActionsNotificationsPreferencesDataService {\n    constructor(dataHttpService) {\n        this.dataHttpService = dataHttpService;\n        this.cachedNotificationPreferences$$ = new BehaviorSubject([]);\n        this.mapSavePreferenceResponce = () => (preference) => preference.pipe(withLatestFrom(this.cachedNotificationPreferences$$), switchMap(([pref, preferences]) => {\n            this.updatePreferencesCache(preferences, pref);\n            return of({\n                actionRecipes: [this.preferenceToRecipe(pref)],\n            });\n        }));\n        this.preferenceToSpecification = ({ userConditions, channels, generalNotificationId, }) => {\n            var _a, _b, _c;\n            return ({\n                actions: channels.map(channel => ({ type: channel.channel })),\n                recipeDefaults: Object.assign({}, (((_a = userConditions === null || userConditions === void 0 ? void 0 : userConditions.conditions) === null || _a === void 0 ? void 0 : _a.hasOwnProperty('amount')) && {\n                    amount: `${(_b = userConditions === null || userConditions === void 0 ? void 0 : userConditions.conditions) === null || _b === void 0 ? void 0 : _b.amount}`,\n                })),\n                id: (_c = Object.values(PreferenceDataMap).find(pref => pref.generalNotificationId === generalNotificationId)) === null || _c === void 0 ? void 0 : _c.specificationId,\n            });\n        };\n        this.preferenceToRecipe = ({ channels, userConditions, createdOn, generalNotificationId, active, id, }) => {\n            var _a, _b, _c;\n            return (Object.assign(Object.assign({ specificationId: (_a = Object.values(PreferenceDataMap).find(pref => pref.generalNotificationId === generalNotificationId)) === null || _a === void 0 ? void 0 : _a.specificationId, active, actions: channels.map(channel => ({\n                    type: channel.channel,\n                    enabled: channel.enabled,\n                })), createdOn }, (((_b = userConditions === null || userConditions === void 0 ? void 0 : userConditions.conditions) === null || _b === void 0 ? void 0 : _b.hasOwnProperty('amount')) && {\n                amount: `${(_c = userConditions === null || userConditions === void 0 ? void 0 : userConditions.conditions) === null || _c === void 0 ? void 0 : _c.amount}`,\n            })), { id: id || '' }));\n        };\n    }\n    /**\n     * Method to get action recipes.\n     *\n     * @param arrangementId\n     * @returns action recipe array\n     */\n    getActionRecipes(arrangementId) {\n        const requestParams = {\n            entityId: arrangementId,\n            entityType: 'arrangement',\n        };\n        return this.dataHttpService.getNotificationPreferences(requestParams).pipe(map(fromHttpResponse), map(({ notificationPreferences }) => {\n            this.cachedNotificationPreferences$$.next(notificationPreferences);\n            return notificationPreferences.map(pref => this.preferenceToRecipe(pref));\n        }));\n    }\n    /**\n     * Method to get action recipe specifications.\n     *\n     * @returns action recipe specifications\n     */\n    getSpecifications() {\n        return this.cachedNotificationPreferences$$.pipe(map(fromHttpResponse), map(notificationPreferences => notificationPreferences.map(pref => this.preferenceToSpecification(pref))));\n    }\n    /**\n     * Method to save action recipe.\n     *\n     * @param action - recipe form value\n     * @param arrangementId - arrangement ID\n     * @returns batch processing response\n     */\n    saveActionRecipe(actionRecipeFormItem, arrangementId) {\n        const notificationPreferences = this.cachedNotificationPreferences$$.getValue();\n        const preferenceToUpdate = notificationPreferences.find(pref => pref.generalNotificationId === PreferenceDataMap[actionRecipeFormItem.specificationId].generalNotificationId);\n        if (preferenceToUpdate.id) {\n            return this.updateNotificationPreference(preferenceToUpdate, actionRecipeFormItem);\n        }\n        else {\n            return this.createNotificationPreference(preferenceToUpdate, actionRecipeFormItem, arrangementId);\n        }\n    }\n    updateNotificationPreference(preferenceToUpdate, actionRecipeFormItem) {\n        const notificationPreferencePutRequest = this.getNotificationPreferencePutRequest(preferenceToUpdate, actionRecipeFormItem);\n        return this.dataHttpService\n            .updateNotificationPreference({ id: preferenceToUpdate.id || '', notificationPreferencePutRequest })\n            .pipe(this.mapSavePreferenceResponce());\n    }\n    createNotificationPreference(preferenceToUpdate, actionRecipeFormItem, arrangementId) {\n        const notificationPreferencePostRequest = this.getNotificationPreferencePostRequest(preferenceToUpdate, actionRecipeFormItem, arrangementId);\n        return this.dataHttpService\n            .createNotificationPreference({ notificationPreferencePostRequest })\n            .pipe(this.mapSavePreferenceResponce());\n    }\n    getNotificationPreferencePutRequest(preference, actionRecipeFormItem) {\n        return {\n            active: actionRecipeFormItem.active,\n            channels: preference.channels.map(channel => (Object.assign(Object.assign({}, channel), { enabled: !!actionRecipeFormItem.actions[channel.channel] }))),\n            conditions: Object.assign({}, (actionRecipeFormItem.amount.amount !== undefined && {\n                amount: `${actionRecipeFormItem.amount.amount}`,\n            })),\n        };\n    }\n    getNotificationPreferencePostRequest(preference, actionRecipeFormItem, arrangementId) {\n        var _a;\n        return {\n            generalNotificationId: preference.generalNotificationId,\n            active: actionRecipeFormItem.active,\n            eRef: arrangementId,\n            channels: preference.channels.map(channel => (Object.assign(Object.assign({}, channel), { enabled: !!actionRecipeFormItem.actions[channel.channel] }))),\n            conditions: Object.assign({}, (_a = preference.userConditions) === null || _a === void 0 ? void 0 : _a.conditions),\n        };\n    }\n    updatePreferencesCache(preferences, updatedPreference) {\n        const updatedPreferences = preferences.map(pref => pref.generalNotificationId === updatedPreference.generalNotificationId ? updatedPreference : pref);\n        this.cachedNotificationPreferences$$.next(updatedPreferences);\n    }\n}\nActionsNotificationsPreferencesDataService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsNotificationsPreferencesDataService, deps: [{ token: i1$3.NotificationPreferenceService }], target: i0.ɵɵFactoryTarget.Injectable });\nActionsNotificationsPreferencesDataService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsNotificationsPreferencesDataService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsNotificationsPreferencesDataService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$3.NotificationPreferenceService }]; } });\n\nconst components = [\n    ActionsNotificationChannelsComponent,\n    ActionsAccountBalanceRecipeFormComponent,\n    ActionsTransactionsRecipeFormComponent,\n    ActionsToggleRecipeFormComponent,\n    SwitchWithLoadingComponent,\n    ActionsScheduleNotificationsComponent,\n];\nconst directives = [\n    ActionsNotificationChannelsCustomizableDirective,\n    ActionsAccountBalanceRecipeCustomizableDirective,\n    ActionsTransactionsRecipeCustomizableDirective,\n    ActionsToggleRecipeFormCustomizableDirective,\n    ActionsScheduleNotificationsComponentCustomizableDirective,\n];\nconst pipes = [NoFractionDigitsPipe];\nconst uiModules = [\n    AmountModule,\n    ModalModule,\n    ButtonModule,\n    InputCheckboxModule,\n    SwitchModule,\n    HeaderModule,\n    CollapsibleModule,\n    IconModule,\n    TooltipModule,\n    InputInlineEditModule,\n];\nclass ActionsCommonModule {\n}\nActionsCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nActionsCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsCommonModule, declarations: [ActionsNotificationChannelsComponent,\n        ActionsAccountBalanceRecipeFormComponent,\n        ActionsTransactionsRecipeFormComponent,\n        ActionsToggleRecipeFormComponent,\n        SwitchWithLoadingComponent,\n        ActionsScheduleNotificationsComponent, ActionsNotificationChannelsCustomizableDirective,\n        ActionsAccountBalanceRecipeCustomizableDirective,\n        ActionsTransactionsRecipeCustomizableDirective,\n        ActionsToggleRecipeFormCustomizableDirective,\n        ActionsScheduleNotificationsComponentCustomizableDirective, NoFractionDigitsPipe], imports: [CommonModule, FormsModule, ReactiveFormsModule, TimePickerModule, AmountModule,\n        ModalModule,\n        ButtonModule,\n        InputCheckboxModule,\n        SwitchModule,\n        HeaderModule,\n        CollapsibleModule,\n        IconModule,\n        TooltipModule,\n        InputInlineEditModule], exports: [ActionsNotificationChannelsComponent,\n        ActionsAccountBalanceRecipeFormComponent,\n        ActionsTransactionsRecipeFormComponent,\n        ActionsToggleRecipeFormComponent,\n        SwitchWithLoadingComponent,\n        ActionsScheduleNotificationsComponent, AmountModule,\n        ModalModule,\n        ButtonModule,\n        InputCheckboxModule,\n        SwitchModule,\n        HeaderModule,\n        CollapsibleModule,\n        IconModule,\n        TooltipModule,\n        InputInlineEditModule, ActionsNotificationChannelsCustomizableDirective,\n        ActionsAccountBalanceRecipeCustomizableDirective,\n        ActionsTransactionsRecipeCustomizableDirective,\n        ActionsToggleRecipeFormCustomizableDirective,\n        ActionsScheduleNotificationsComponentCustomizableDirective, NoFractionDigitsPipe, TimePickerModule] });\nActionsCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsCommonModule, providers: [\n        ActionsFormBuilderService,\n        ActionsNotificationsSettingsDataService,\n        ActionsNotificationsPreferencesDataService,\n    ], imports: [[CommonModule, FormsModule, ReactiveFormsModule, TimePickerModule, ...uiModules], AmountModule,\n        ModalModule,\n        ButtonModule,\n        InputCheckboxModule,\n        SwitchModule,\n        HeaderModule,\n        CollapsibleModule,\n        IconModule,\n        TooltipModule,\n        InputInlineEditModule, TimePickerModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: ActionsCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, FormsModule, ReactiveFormsModule, TimePickerModule, ...uiModules],\n                    providers: [\n                        ActionsFormBuilderService,\n                        ActionsNotificationsSettingsDataService,\n                        ActionsNotificationsPreferencesDataService,\n                    ],\n                    declarations: [...components, ...directives, ...pipes],\n                    exports: [...components, ...uiModules, ...directives, ...pipes, TimePickerModule],\n                }]\n        }] });\n\nclass NotificationsPreferencesBaseDataService {\n}\n\nconst getPropertyValue = (input, prop) => combineLatest([input, prop]).pipe(map(([inputVal, propVal]) => (inputVal !== undefined ? inputVal : propVal)));\n\nvar SpecificationIds;\n(function (SpecificationIds) {\n    SpecificationIds[\"Transactions\"] = \"1\";\n    SpecificationIds[\"AccountBalance\"] = \"4\";\n    SpecificationIds[\"Payments\"] = \"5\";\n    SpecificationIds[\"Contacts\"] = \"6\";\n    SpecificationIds[\"PaymentsToApprove\"] = \"13\";\n    SpecificationIds[\"ContactsToApprove\"] = \"14\";\n})(SpecificationIds || (SpecificationIds = {}));\n\nconst DEFAULT_NOTIFICATION_DISMISS_TIME = 5;\nconst DEFAULT_SPECIFICATION_IDS = '5, 6, 13, 14';\nconst DEFAULT_API_MODE = 'actions';\nclass ActionsBasePropertiesService {\n    /**\n     * Method to get notification dismiss time preference value.\n     *\n     * @returns notification dismiss time in seconds\n     */\n    getNotificationDismissTimeProperty() {\n        return of(DEFAULT_NOTIFICATION_DISMISS_TIME).pipe(map(secondsToMilliseconds));\n    }\n    /**\n     * Method to get specification IDs.\n     *\n     * @returns specification IDs array\n     */\n    getSpecificationIDs() {\n        return of(DEFAULT_SPECIFICATION_IDS).pipe(map(data => data.replace(/\\s/g, '').split(',')));\n    }\n    getApiMode() {\n        return DEFAULT_API_MODE;\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ActionsBasePropertiesService, ActionsCommonModule, ActionsNotificationsPreferencesDataService, ActionsNotificationsSettingsDataService, DAYS_OF_WEEK, DEFAULT_API_MODE, DEFAULT_NOTIFICATION_DISMISS_TIME, DEFAULT_SPECIFICATION_IDS, DefaultTime, EMPTY_RESPONSE_ERROR, MaxOptionsQuantity, MinutesInDay, NotificationsPreferencesBaseDataService, ScheduleDescriptionText, ScheduleType, SpecificationIds, actionRecipeFormItemToRequest, arrangementActionRecipeToRequest, filterObjectByPropNames, firstNonEmptyString, fromHttpResponse, getHoursOfDay, getMappedRecurrenceResponse, getPropertyValue, getTimeOptions, hoursToMinutesArray, isEqualNumberArrays, mergeNotificationChannels, mergeSpecificationsWithActionRecipes, parseActionRecipeFormItem, secondsToMilliseconds, sortNumberArray, ActionsAccountBalanceRecipeCustomizableDirective as ӨActionsAccountBalanceRecipeCustomizableDirective, ActionsAccountBalanceRecipeFormComponent as ӨActionsAccountBalanceRecipeFormComponent, ActionsNotificationChannelsComponent as ӨActionsNotificationChannelsComponent, ActionsNotificationChannelsCustomizableDirective as ӨActionsNotificationChannelsCustomizableDirective, ActionsScheduleNotificationsComponent as ӨActionsScheduleNotificationsComponent, ActionsScheduleNotificationsComponentCustomizableDirective as ӨActionsScheduleNotificationsComponentCustomizableDirective, ActionsToggleRecipeFormComponent as ӨActionsToggleRecipeFormComponent, ActionsToggleRecipeFormCustomizableDirective as ӨActionsToggleRecipeFormCustomizableDirective, ActionsTransactionsRecipeCustomizableDirective as ӨActionsTransactionsRecipeCustomizableDirective, ActionsTransactionsRecipeFormComponent as ӨActionsTransactionsRecipeFormComponent, NoFractionDigitsPipe as ӨNoFractionDigitsPipe, SwitchWithLoadingComponent as ӨSwitchWithLoadingComponent, TimePickerComponent as ӨTimePickerComponent, TimePickerModule as ӨTimePickerModule };\n"]},"metadata":{},"sourceType":"module"}