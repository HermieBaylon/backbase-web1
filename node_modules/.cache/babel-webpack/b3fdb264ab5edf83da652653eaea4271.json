{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, TemplateRef, Component, Inject, Input, Output, ViewChild, HostBinding, HostListener, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { getBemModifiers, fadeSlideAnimation } from '@backbase/ui-ang/util';\nimport * as i2 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i4 from '@backbase/ui-ang/focus';\nimport { FocusModule } from '@backbase/ui-ang/focus';\nimport * as i5 from '@backbase/ui-ang/keyboard-click-directive';\nimport { KeyboardClickModule } from '@backbase/ui-ang/keyboard-click-directive';\nimport * as i6 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nconst _c0 = [\"notificationContent\"];\nconst _c1 = [\"defaultNotificationHeaderTemplate\"];\nconst _c2 = [\"defaultNotificationMessageTemplate\"];\nconst _c3 = [\"defaultPrimaryActionsTemplate\"];\nconst _c4 = [\"defaultSecondaryActionsTemplate\"];\n\nfunction NotificationComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction NotificationComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction NotificationComponent_div_8_button_2_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction NotificationComponent_div_8_button_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NotificationComponent_div_8_button_2_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r15.primaryActionTemplate)(\"ngTemplateOutletContext\", ctx_r15);\n  }\n}\n\nfunction NotificationComponent_div_8_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function NotificationComponent_div_8_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return ctx_r17.onPrimaryPress();\n    });\n    i0.ɵɵtemplate(1, NotificationComponent_div_8_button_2_ng_container_1_Template, 2, 2, \"ng-container\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n\n    const _r9 = i0.ɵɵreference(15);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.primaryActionTemplate)(\"ngIfElse\", _r9);\n  }\n}\n\nfunction NotificationComponent_div_8_button_3_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction NotificationComponent_div_8_button_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NotificationComponent_div_8_button_3_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r19.secondaryActionTemplate)(\"ngTemplateOutletContext\", ctx_r19);\n  }\n}\n\nfunction NotificationComponent_div_8_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function NotificationComponent_div_8_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return ctx_r21.onSecondaryPress();\n    });\n    i0.ɵɵtemplate(1, NotificationComponent_div_8_button_3_ng_container_1_Template, 2, 2, \"ng-container\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n\n    const _r11 = i0.ɵɵreference(17);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.secondaryActionTemplate)(\"ngIfElse\", _r11);\n  }\n}\n\nfunction NotificationComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelementStart(1, \"div\", 14);\n    i0.ɵɵtemplate(2, NotificationComponent_div_8_button_2_Template, 2, 2, \"button\", 15);\n    i0.ɵɵtemplate(3, NotificationComponent_div_8_button_3_Template, 2, 2, \"button\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.hasPrimaryAction());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.hasSecondaryAction());\n  }\n}\n\nfunction NotificationComponent_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function NotificationComponent_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.onNotificationClose();\n    });\n    i0.ɵɵelement(1, \"bb-icon-ui\", 21);\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c7 = function (a0) {\n  return {\n    \"bb-block bb-block--sm\": a0\n  };\n};\n\nfunction NotificationComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c7, !!ctx_r6.header));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.header, \" \");\n  }\n}\n\nfunction NotificationComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.message, \"\\n\");\n  }\n}\n\nfunction NotificationComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.primaryActionText, \"\\n\");\n  }\n}\n\nfunction NotificationComponent_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r12.secondaryActionText, \"\\n\");\n  }\n}\n\nclass AppendToDomService {\n  constructor(componentFactoryResolver, appRef, injector) {\n    this.componentFactoryResolver = componentFactoryResolver;\n    this.appRef = appRef;\n    this.injector = injector;\n  }\n\n  appendComponentToRoot(component, autofocus = true, projectables = [], root = document.body) {\n    var _a, _b; // 1. Create a component reference from the component\n\n\n    const componentRef = this.componentFactoryResolver.resolveComponentFactory(component).create(this.injector, [projectables]); // 2. Attach component to the appRef so that it's inside the ng component tree\n\n    this.appRef.attachView(componentRef.hostView); // 3. Get DOM element from component\n\n    const domElem = componentRef.hostView.rootNodes[0]; // 4. Append notification list if missing\n\n    const listElement = this.generateListElement(root); // 5. Add item class\n\n    domElem.setAttribute('class', 'bb-notification-list__item'); // 6. Set role='status' if autofocus is set to true and role='alert' if autofocus is set to false\n\n    if (autofocus) {\n      (_a = domElem === null || domElem === void 0 ? void 0 : domElem.firstElementChild) === null || _a === void 0 ? void 0 : _a.setAttribute('role', 'status');\n    } else {\n      componentRef.instance.autofocus = false; // For Firefox and NVDA role should be set to list element\n\n      if (navigator.userAgent.indexOf('Firefox') > -1) {\n        listElement.setAttribute('role', 'alert');\n      } else {\n        (_b = domElem === null || domElem === void 0 ? void 0 : domElem.firstElementChild) === null || _b === void 0 ? void 0 : _b.setAttribute('role', 'alert');\n      }\n    } // 7. Append new element to list of elements and push old ones down.\n\n\n    if (listElement) {\n      listElement.insertBefore(domElem, listElement.firstChild);\n    }\n\n    return {\n      componentInstance: componentRef.instance,\n      unmountComponent: () => {\n        this.destroyElement(componentRef);\n      }\n    };\n  }\n\n  generateListElement(root) {\n    let listElement = document.getElementsByClassName('bb-notification-list')[0];\n\n    if (!listElement) {\n      listElement = document.createElement('div');\n      listElement.setAttribute('class', 'bb-notification-list');\n      root.appendChild(listElement);\n    }\n\n    return listElement;\n  }\n  /*\n    This method is a hack to make notifications visible to screen readers\n    (NVDA and VoiceOver) when a modal window (role=\"dialog\") is opened.\n    aria-label=\"polite\" on the list element and role=\"status\" with\n    aria-atomic=\"true\" on notification element don't resolve the issue.\n    Any better ideas are welcome.\n   */\n\n\n  checkAndDestroyListElement() {\n    const listElement = document.getElementsByClassName('bb-notification-list')[0]; // don't remove list element if there are any remaining notifications\n\n    if (!listElement || listElement.childElementCount > 0) {\n      return;\n    }\n\n    listElement.remove();\n  }\n\n  destroyElement(componentRef) {\n    componentRef.instance.beforeDestroy();\n    this.appRef.detachView(componentRef.hostView);\n    componentRef.destroy(); // is required to make notifications visible to screen readers when any modal window is opened\n\n    this.checkAndDestroyListElement();\n  }\n\n}\n\nAppendToDomService.ɵfac = function AppendToDomService_Factory(t) {\n  return new (t || AppendToDomService)(i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i0.Injector));\n};\n\nAppendToDomService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AppendToDomService,\n  factory: AppendToDomService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AppendToDomService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.ApplicationRef\n    }, {\n      type: i0.Injector\n    }];\n  }, null);\n})();\n/**\n * A configuration service for the [NotificationComponent] component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\n\n\nclass BBNotificationConfig {\n  constructor() {\n    this.animation = true;\n  }\n\n}\n\nBBNotificationConfig.ɵfac = function BBNotificationConfig_Factory(t) {\n  return new (t || BBNotificationConfig)();\n};\n\nBBNotificationConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BBNotificationConfig,\n  factory: BBNotificationConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BBNotificationConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @name NotificationComponent\n *\n * @description\n * Component that displays a notification.\n */\n// @dynamic to suppress error with resolving Document type during compilation\n\n\nclass NotificationComponent {\n  constructor(document, elem, config) {\n    this.document = document;\n    this.elem = elem;\n    /**\n     * The message template for the notification. Defaults to an empty string\n     */\n\n    this.message = '';\n    /**\n     * The type modifier for the notification. Defaults to 'info'\n     *\n     * This property will be used to add additional class names to the wrapper div of the notification\n     * in the following format: `bb-notification--<<modifier>>`\n     *\n     */\n\n    this.modifier = 'info';\n    /**\n     * Whether the notification is dismissible. Defaults to `true`.\n     *\n     *\n     * If `true` then an additional class name is added to the wrapper div of the notification in the following format\n     * `bb-notification--dismissible`\n     */\n\n    this.dismissible = true;\n    /**\n     * The callback function for the manually close event.\n     */\n\n    this.closeAction = undefined;\n    /**\n     * The callback function for the host click event.\n     */\n\n    this.hostAction = undefined;\n    /**\n     * Notification manually close event stream.\n     */\n\n    this.close = new EventEmitter();\n    /**\n     * Autofocus will cause the component to be focused on the first rendering.\n     */\n\n    this.autofocus = true;\n    this.bemBlock = 'bb-notification';\n    this.bemModifiers = [() => this.dismissible ? 'dismissible' : '', () => this.modifier];\n    this.animation = config.animation;\n  }\n\n  get dynamicClassNames() {\n    return getBemModifiers(this.bemBlock, this.bemModifiers);\n  }\n\n  get noAnimation() {\n    return !this.animation;\n  }\n\n  get animated() {\n    return this.animation;\n  }\n\n  onKeyEvent(event) {\n    switch (event.key) {\n      case 'Escape':\n        this.onNotificationClose();\n        break;\n\n      default:\n        return;\n    }\n\n    event.preventDefault();\n  }\n\n  ngOnInit() {\n    if (this.hasPrimaryAction() && typeof this.primaryActionText === 'undefined') {\n      throw new Error(`\"primaryActionText\" input is required when a primaryAction is set in \"${this.constructor.name}\"`);\n    }\n\n    if (this.hasSecondaryAction() && typeof this.secondaryActionText === 'undefined') {\n      throw new Error(`\"secondaryActionText\" input is required when a secondaryAction is set in \"${this.constructor.name}\"`);\n    }\n\n    this.iconColor = this.modifier === 'error' ? 'danger' : this.modifier;\n  }\n\n  ngAfterViewInit() {\n    if (document.activeElement instanceof HTMLElement) {\n      this.previousFocusedElement = document.activeElement;\n    }\n  }\n\n  get hostTabIndex() {\n    return this.hostAction ? 0 : -1;\n  }\n\n  onNotificationClick() {\n    if (this.hostAction) {\n      this.hostAction();\n      this.close.emit();\n    }\n  }\n\n  onNotificationClose() {\n    if (this.closeAction) {\n      this.closeAction();\n    }\n\n    this.close.emit();\n  }\n\n  beforeDestroy() {\n    const notificationList = this.document.querySelector('.bb-notification-list');\n    const isNotificationListFocused = notificationList && notificationList.contains(this.document.activeElement);\n\n    if (notificationList && isNotificationListFocused) {\n      const notificationBtns = notificationList.querySelectorAll('.bb-notification__close');\n      const currentIndex = Array.from(notificationList.children).findIndex(listElement => listElement === this.elem.nativeElement);\n      const nextElementToFocus = notificationBtns[currentIndex + 1] || notificationBtns[currentIndex - 1] || this.previousFocusedElement;\n\n      if (nextElementToFocus) {\n        nextElementToFocus.focus();\n      }\n    }\n  }\n\n  onPrimaryPress() {\n    if (this.primaryAction) {\n      this.primaryAction();\n      this.onNotificationClose();\n    }\n  }\n\n  onSecondaryPress() {\n    if (this.secondaryAction) {\n      this.secondaryAction();\n      this.onNotificationClose();\n    }\n  }\n\n  getHeaderTemplate() {\n    if (this.header instanceof TemplateRef) {\n      return this.header;\n    }\n\n    return this.defaultHeaderTemplate;\n  }\n\n  getMessageTemplate() {\n    if (this.message instanceof TemplateRef) {\n      return this.message;\n    }\n\n    return this.defaultMessageTemplate;\n  }\n\n  hasButtonRow() {\n    return this.hasPrimaryAction() || this.hasSecondaryAction();\n  }\n\n  hasPrimaryAction() {\n    return this.primaryAction !== undefined;\n  }\n\n  hasSecondaryAction() {\n    return this.secondaryAction !== undefined;\n  }\n\n}\n\nNotificationComponent.ɵfac = function NotificationComponent_Factory(t) {\n  return new (t || NotificationComponent)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(BBNotificationConfig));\n};\n\nNotificationComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NotificationComponent,\n  selectors: [[\"bb-notification-ui\"]],\n  viewQuery: function NotificationComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 7);\n      i0.ɵɵviewQuery(_c2, 7);\n      i0.ɵɵviewQuery(_c3, 7);\n      i0.ɵɵviewQuery(_c4, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.notificationContent = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.defaultHeaderTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.defaultMessageTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.defaultPrimaryActionsTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.defaultSecondaryActionsTemplate = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NotificationComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function NotificationComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKeyEvent($event);\n      }, false, i0.ɵɵresolveWindow);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵsyntheticHostProperty(\"@.disabled\", ctx.noAnimation)(\"@fadeSlideInOut\", ctx.animated);\n    }\n  },\n  inputs: {\n    header: \"header\",\n    message: \"message\",\n    primaryActionTemplate: \"primaryActionTemplate\",\n    secondaryActionTemplate: \"secondaryActionTemplate\",\n    modifier: \"modifier\",\n    dismissible: \"dismissible\",\n    primaryActionText: \"primaryActionText\",\n    primaryAction: \"primaryAction\",\n    secondaryActionText: \"secondaryActionText\",\n    secondaryAction: \"secondaryAction\",\n    closeAction: \"closeAction\",\n    hostAction: \"hostAction\",\n    headerContext: \"headerContext\",\n    messageContext: \"messageContext\",\n    animation: \"animation\"\n  },\n  outputs: {\n    close: \"close\"\n  },\n  decls: 18,\n  vars: 12,\n  consts: function () {\n    let i18n_5;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc  Text for the close notification button \n       * @meaning Close notification button\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_NOTIFICATION_JS_6 = goog.getMsg(\"Close\");\n      i18n_5 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_NOTIFICATION_JS_6;\n    } else {\n      i18n_5 = $localize`:Close notification button| Text for the close notification button @@bb-notification-ui.close:Close`;\n    }\n\n    return [[\"data-role\", \"notification-alert\", 1, \"bb-notification\", 3, \"ngClass\", \"bbFocus\", \"bbKeyboardClick\"], [\"notificationContent\", \"\"], [1, \"bb-notification__icon\", 3, \"name\", \"color\"], [1, \"bb-notification__body\"], [\"data-role\", \"notification-heading\", 1, \"bb-notification__title\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"data-role\", \"notification-message\", 1, \"bb-text-support\"], [\"data-role\", \"notification-actions\", 4, \"ngIf\"], [\"type\", \"button\", \"data-role\", \"notification-close-button\", \"class\", \"bb-notification__close close\", \"aria-label\", i18n_5, 3, \"click\", 4, \"ngIf\"], [\"defaultNotificationHeaderTemplate\", \"\"], [\"defaultNotificationMessageTemplate\", \"\"], [\"defaultPrimaryActionsTemplate\", \"\"], [\"defaultSecondaryActionsTemplate\", \"\"], [\"data-role\", \"notification-actions\"], [1, \"bb-button-bar\"], [\"bbButton\", \"\", \"type\", \"button\", \"data-role\", \"notification-primary-button\", \"class\", \"bb-button-bar__button\", 3, \"click\", 4, \"ngIf\"], [\"bbButton\", \"\", \"color\", \"secondary\", \"data-role\", \"notification-secondary-button\", \"class\", \"bb-button-bar__button\", 3, \"click\", 4, \"ngIf\"], [\"bbButton\", \"\", \"type\", \"button\", \"data-role\", \"notification-primary-button\", 1, \"bb-button-bar__button\", 3, \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"bbButton\", \"\", \"color\", \"secondary\", \"data-role\", \"notification-secondary-button\", 1, \"bb-button-bar__button\", 3, \"click\"], [\"type\", \"button\", \"data-role\", \"notification-close-button\", \"aria-label\", i18n_5, 1, \"bb-notification__close\", \"close\", 3, \"click\"], [\"name\", \"times\"], [3, \"ngClass\"]];\n  },\n  template: function NotificationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵlistener(\"bbKeyboardClick\", function NotificationComponent_Template_div_bbKeyboardClick_0_listener() {\n        return ctx.onNotificationClick();\n      });\n      i0.ɵɵelement(2, \"bb-icon-ui\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵelementStart(4, \"div\", 4);\n      i0.ɵɵtemplate(5, NotificationComponent_ng_container_5_Template, 1, 0, \"ng-container\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 6);\n      i0.ɵɵtemplate(7, NotificationComponent_ng_container_7_Template, 1, 0, \"ng-container\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, NotificationComponent_div_8_Template, 4, 2, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, NotificationComponent_button_9_Template, 2, 0, \"button\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, NotificationComponent_ng_template_10_Template, 2, 4, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(12, NotificationComponent_ng_template_12_Template, 1, 1, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(14, NotificationComponent_ng_template_14_Template, 1, 1, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(16, NotificationComponent_ng_template_16_Template, 1, 1, \"ng-template\", null, 12, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.dynamicClassNames)(\"bbFocus\", ctx.autofocus);\n      i0.ɵɵattribute(\"tabindex\", ctx.hostTabIndex);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"name\", ctx.modifier)(\"color\", ctx.iconColor);\n      i0.ɵɵattribute(\"data-role\", \"notification-icon\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.getHeaderTemplate())(\"ngTemplateOutletContext\", ctx.headerContext);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.getMessageTemplate())(\"ngTemplateOutletContext\", ctx.messageContext);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.primaryActionTemplate || ctx.primaryActionText || ctx.secondaryActionTemplate || ctx.secondaryActionText);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dismissible);\n    }\n  },\n  directives: [i3.NgClass, i4.FocusDirective, i5.KeyboardClickDirective, i2.IconComponent, i3.NgTemplateOutlet, i3.NgIf, i6.ButtonDirective],\n  encapsulation: 2,\n  data: {\n    animation: [fadeSlideAnimation]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NotificationComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-notification-ui',\n      templateUrl: './notification.component.html',\n      animations: [fadeSlideAnimation]\n    }]\n  }], function () {\n    return [{\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: BBNotificationConfig\n    }];\n  }, {\n    header: [{\n      type: Input\n    }],\n    message: [{\n      type: Input\n    }],\n    primaryActionTemplate: [{\n      type: Input\n    }],\n    secondaryActionTemplate: [{\n      type: Input\n    }],\n    modifier: [{\n      type: Input\n    }],\n    dismissible: [{\n      type: Input\n    }],\n    primaryActionText: [{\n      type: Input\n    }],\n    primaryAction: [{\n      type: Input\n    }],\n    secondaryActionText: [{\n      type: Input\n    }],\n    secondaryAction: [{\n      type: Input\n    }],\n    closeAction: [{\n      type: Input\n    }],\n    hostAction: [{\n      type: Input\n    }],\n    headerContext: [{\n      type: Input\n    }],\n    messageContext: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }],\n    close: [{\n      type: Output\n    }],\n    notificationContent: [{\n      type: ViewChild,\n      args: ['notificationContent']\n    }],\n    defaultHeaderTemplate: [{\n      type: ViewChild,\n      args: ['defaultNotificationHeaderTemplate', {\n        static: true\n      }]\n    }],\n    defaultMessageTemplate: [{\n      type: ViewChild,\n      args: ['defaultNotificationMessageTemplate', {\n        static: true\n      }]\n    }],\n    defaultPrimaryActionsTemplate: [{\n      type: ViewChild,\n      args: ['defaultPrimaryActionsTemplate', {\n        static: true\n      }]\n    }],\n    defaultSecondaryActionsTemplate: [{\n      type: ViewChild,\n      args: ['defaultSecondaryActionsTemplate', {\n        static: true\n      }]\n    }],\n    noAnimation: [{\n      type: HostBinding,\n      args: ['@.disabled']\n    }],\n    animated: [{\n      type: HostBinding,\n      args: ['@fadeSlideInOut']\n    }],\n    onKeyEvent: [{\n      type: HostListener,\n      args: ['window:keydown', ['$event']]\n    }]\n  });\n})();\n\nclass NotificationService {\n  constructor(appendtoDomService) {\n    this.appendtoDomService = appendtoDomService;\n  }\n\n  showNotification({\n    header,\n    message,\n    dismissible = true,\n    ttl = 3000,\n    modifier = 'info',\n    headerContext = {},\n    messageContext = {},\n    primaryActionText,\n    primaryAction,\n    secondaryActionText,\n    secondaryAction,\n    closeAction,\n    hostAction,\n    primaryActionTemplate,\n    secondaryActionTemplate,\n    autofocus = true\n  }) {\n    const res = this.appendtoDomService.appendComponentToRoot(NotificationComponent, autofocus);\n    const componentInstance = res.componentInstance;\n    componentInstance.message = message;\n    componentInstance.modifier = modifier;\n    componentInstance.dismissible = dismissible;\n    componentInstance.header = header;\n    componentInstance.primaryActionText = primaryActionText;\n    componentInstance.primaryAction = primaryAction;\n    componentInstance.secondaryActionText = secondaryActionText;\n    componentInstance.secondaryAction = secondaryAction;\n    componentInstance.closeAction = closeAction;\n    componentInstance.hostAction = hostAction;\n    componentInstance.headerContext = headerContext;\n    componentInstance.messageContext = messageContext;\n    componentInstance.primaryActionTemplate = primaryActionTemplate;\n    componentInstance.secondaryActionTemplate = secondaryActionTemplate;\n    return this.createHideNotificationFunction(res.unmountComponent, ttl, componentInstance.close);\n  }\n\n  createHideNotificationFunction(hideFn, ttl = 0, closeStream) {\n    const hideSubject = new Subject();\n\n    const hideNotification = () => {\n      hideSubject.next();\n    };\n\n    const closeSubscription = closeStream.subscribe(hideNotification);\n    const hideSubscription = hideSubject.pipe(first()).subscribe(() => {\n      hideFn();\n      hideSubscription.unsubscribe();\n      closeSubscription.unsubscribe();\n    });\n\n    if (ttl > 0) {\n      setTimeout(hideNotification, ttl);\n    }\n\n    return hideNotification;\n  }\n\n}\n\nNotificationService.ɵfac = function NotificationService_Factory(t) {\n  return new (t || NotificationService)(i0.ɵɵinject(AppendToDomService));\n};\n\nNotificationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NotificationService,\n  factory: NotificationService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NotificationService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: AppendToDomService\n    }];\n  }, null);\n})();\n\nclass NotificationModule {}\n\nNotificationModule.ɵfac = function NotificationModule_Factory(t) {\n  return new (t || NotificationModule)();\n};\n\nNotificationModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NotificationModule\n});\nNotificationModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, NgbAlertModule, IconModule, ButtonModule, KeyboardClickModule, FocusModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NotificationModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, NgbAlertModule, IconModule, ButtonModule, KeyboardClickModule, FocusModule],\n      declarations: [NotificationComponent],\n      exports: [NotificationComponent],\n      entryComponents: [NotificationComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AppendToDomService, BBNotificationConfig, NotificationComponent, NotificationModule, NotificationService };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-notification.js"],"names":["i0","Injectable","EventEmitter","TemplateRef","Component","Inject","Input","Output","ViewChild","HostBinding","HostListener","NgModule","i3","DOCUMENT","CommonModule","getBemModifiers","fadeSlideAnimation","i2","IconModule","i4","FocusModule","i5","KeyboardClickModule","i6","ButtonModule","Subject","first","NgbAlertModule","AppendToDomService","constructor","componentFactoryResolver","appRef","injector","appendComponentToRoot","component","autofocus","projectables","root","document","body","_a","_b","componentRef","resolveComponentFactory","create","attachView","hostView","domElem","rootNodes","listElement","generateListElement","setAttribute","firstElementChild","instance","navigator","userAgent","indexOf","insertBefore","firstChild","componentInstance","unmountComponent","destroyElement","getElementsByClassName","createElement","appendChild","checkAndDestroyListElement","childElementCount","remove","beforeDestroy","detachView","destroy","ɵfac","ComponentFactoryResolver","ApplicationRef","Injector","ɵprov","type","args","providedIn","BBNotificationConfig","animation","NotificationComponent","elem","config","message","modifier","dismissible","closeAction","undefined","hostAction","close","bemBlock","bemModifiers","dynamicClassNames","noAnimation","animated","onKeyEvent","event","key","onNotificationClose","preventDefault","ngOnInit","hasPrimaryAction","primaryActionText","Error","name","hasSecondaryAction","secondaryActionText","iconColor","ngAfterViewInit","activeElement","HTMLElement","previousFocusedElement","hostTabIndex","onNotificationClick","emit","notificationList","querySelector","isNotificationListFocused","contains","notificationBtns","querySelectorAll","currentIndex","Array","from","children","findIndex","nativeElement","nextElementToFocus","focus","onPrimaryPress","primaryAction","onSecondaryPress","secondaryAction","getHeaderTemplate","header","defaultHeaderTemplate","getMessageTemplate","defaultMessageTemplate","hasButtonRow","ElementRef","ɵcmp","NgClass","FocusDirective","KeyboardClickDirective","IconComponent","NgTemplateOutlet","NgIf","ButtonDirective","selector","templateUrl","animations","Document","decorators","primaryActionTemplate","secondaryActionTemplate","headerContext","messageContext","notificationContent","static","defaultPrimaryActionsTemplate","defaultSecondaryActionsTemplate","NotificationService","appendtoDomService","showNotification","ttl","res","createHideNotificationFunction","hideFn","closeStream","hideSubject","hideNotification","next","closeSubscription","subscribe","hideSubscription","pipe","unsubscribe","setTimeout","NotificationModule","ɵmod","ɵinj","imports","declarations","exports","entryComponents"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, TemplateRef, Component, Inject, Input, Output, ViewChild, HostBinding, HostListener, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { getBemModifiers, fadeSlideAnimation } from '@backbase/ui-ang/util';\nimport * as i2 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i4 from '@backbase/ui-ang/focus';\nimport { FocusModule } from '@backbase/ui-ang/focus';\nimport * as i5 from '@backbase/ui-ang/keyboard-click-directive';\nimport { KeyboardClickModule } from '@backbase/ui-ang/keyboard-click-directive';\nimport * as i6 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\n\nclass AppendToDomService {\n    constructor(componentFactoryResolver, appRef, injector) {\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.appRef = appRef;\n        this.injector = injector;\n    }\n    appendComponentToRoot(component, autofocus = true, projectables = [], root = document.body) {\n        var _a, _b;\n        // 1. Create a component reference from the component\n        const componentRef = this.componentFactoryResolver\n            .resolveComponentFactory(component)\n            .create(this.injector, [projectables]);\n        // 2. Attach component to the appRef so that it's inside the ng component tree\n        this.appRef.attachView(componentRef.hostView);\n        // 3. Get DOM element from component\n        const domElem = componentRef.hostView.rootNodes[0];\n        // 4. Append notification list if missing\n        const listElement = this.generateListElement(root);\n        // 5. Add item class\n        domElem.setAttribute('class', 'bb-notification-list__item');\n        // 6. Set role='status' if autofocus is set to true and role='alert' if autofocus is set to false\n        if (autofocus) {\n            (_a = domElem === null || domElem === void 0 ? void 0 : domElem.firstElementChild) === null || _a === void 0 ? void 0 : _a.setAttribute('role', 'status');\n        }\n        else {\n            componentRef.instance.autofocus = false;\n            // For Firefox and NVDA role should be set to list element\n            if (navigator.userAgent.indexOf('Firefox') > -1) {\n                listElement.setAttribute('role', 'alert');\n            }\n            else {\n                (_b = domElem === null || domElem === void 0 ? void 0 : domElem.firstElementChild) === null || _b === void 0 ? void 0 : _b.setAttribute('role', 'alert');\n            }\n        }\n        // 7. Append new element to list of elements and push old ones down.\n        if (listElement) {\n            listElement.insertBefore(domElem, listElement.firstChild);\n        }\n        return {\n            componentInstance: componentRef.instance,\n            unmountComponent: () => {\n                this.destroyElement(componentRef);\n            },\n        };\n    }\n    generateListElement(root) {\n        let listElement = document.getElementsByClassName('bb-notification-list')[0];\n        if (!listElement) {\n            listElement = document.createElement('div');\n            listElement.setAttribute('class', 'bb-notification-list');\n            root.appendChild(listElement);\n        }\n        return listElement;\n    }\n    /*\n      This method is a hack to make notifications visible to screen readers\n      (NVDA and VoiceOver) when a modal window (role=\"dialog\") is opened.\n      aria-label=\"polite\" on the list element and role=\"status\" with\n      aria-atomic=\"true\" on notification element don't resolve the issue.\n      Any better ideas are welcome.\n     */\n    checkAndDestroyListElement() {\n        const listElement = document.getElementsByClassName('bb-notification-list')[0];\n        // don't remove list element if there are any remaining notifications\n        if (!listElement || listElement.childElementCount > 0) {\n            return;\n        }\n        listElement.remove();\n    }\n    destroyElement(componentRef) {\n        componentRef.instance.beforeDestroy();\n        this.appRef.detachView(componentRef.hostView);\n        componentRef.destroy();\n        // is required to make notifications visible to screen readers when any modal window is opened\n        this.checkAndDestroyListElement();\n    }\n}\nAppendToDomService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: AppendToDomService, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ApplicationRef }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nAppendToDomService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: AppendToDomService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: AppendToDomService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.ApplicationRef }, { type: i0.Injector }]; } });\n\n/**\n * A configuration service for the [NotificationComponent] component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\nclass BBNotificationConfig {\n    constructor() {\n        this.animation = true;\n    }\n}\nBBNotificationConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BBNotificationConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nBBNotificationConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BBNotificationConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BBNotificationConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @name NotificationComponent\n *\n * @description\n * Component that displays a notification.\n */\n// @dynamic to suppress error with resolving Document type during compilation\nclass NotificationComponent {\n    constructor(document, elem, config) {\n        this.document = document;\n        this.elem = elem;\n        /**\n         * The message template for the notification. Defaults to an empty string\n         */\n        this.message = '';\n        /**\n         * The type modifier for the notification. Defaults to 'info'\n         *\n         * This property will be used to add additional class names to the wrapper div of the notification\n         * in the following format: `bb-notification--<<modifier>>`\n         *\n         */\n        this.modifier = 'info';\n        /**\n         * Whether the notification is dismissible. Defaults to `true`.\n         *\n         *\n         * If `true` then an additional class name is added to the wrapper div of the notification in the following format\n         * `bb-notification--dismissible`\n         */\n        this.dismissible = true;\n        /**\n         * The callback function for the manually close event.\n         */\n        this.closeAction = undefined;\n        /**\n         * The callback function for the host click event.\n         */\n        this.hostAction = undefined;\n        /**\n         * Notification manually close event stream.\n         */\n        this.close = new EventEmitter();\n        /**\n         * Autofocus will cause the component to be focused on the first rendering.\n         */\n        this.autofocus = true;\n        this.bemBlock = 'bb-notification';\n        this.bemModifiers = [() => (this.dismissible ? 'dismissible' : ''), () => this.modifier];\n        this.animation = config.animation;\n    }\n    get dynamicClassNames() {\n        return getBemModifiers(this.bemBlock, this.bemModifiers);\n    }\n    get noAnimation() {\n        return !this.animation;\n    }\n    get animated() {\n        return this.animation;\n    }\n    onKeyEvent(event) {\n        switch (event.key) {\n            case 'Escape':\n                this.onNotificationClose();\n                break;\n            default:\n                return;\n        }\n        event.preventDefault();\n    }\n    ngOnInit() {\n        if (this.hasPrimaryAction() && typeof this.primaryActionText === 'undefined') {\n            throw new Error(`\"primaryActionText\" input is required when a primaryAction is set in \"${this.constructor.name}\"`);\n        }\n        if (this.hasSecondaryAction() && typeof this.secondaryActionText === 'undefined') {\n            throw new Error(`\"secondaryActionText\" input is required when a secondaryAction is set in \"${this.constructor.name}\"`);\n        }\n        this.iconColor = this.modifier === 'error' ? 'danger' : this.modifier;\n    }\n    ngAfterViewInit() {\n        if (document.activeElement instanceof HTMLElement) {\n            this.previousFocusedElement = document.activeElement;\n        }\n    }\n    get hostTabIndex() {\n        return this.hostAction ? 0 : -1;\n    }\n    onNotificationClick() {\n        if (this.hostAction) {\n            this.hostAction();\n            this.close.emit();\n        }\n    }\n    onNotificationClose() {\n        if (this.closeAction) {\n            this.closeAction();\n        }\n        this.close.emit();\n    }\n    beforeDestroy() {\n        const notificationList = this.document.querySelector('.bb-notification-list');\n        const isNotificationListFocused = notificationList && notificationList.contains(this.document.activeElement);\n        if (notificationList && isNotificationListFocused) {\n            const notificationBtns = notificationList.querySelectorAll('.bb-notification__close');\n            const currentIndex = Array.from(notificationList.children).findIndex((listElement) => listElement === this.elem.nativeElement);\n            const nextElementToFocus = notificationBtns[currentIndex + 1] || notificationBtns[currentIndex - 1] || this.previousFocusedElement;\n            if (nextElementToFocus) {\n                nextElementToFocus.focus();\n            }\n        }\n    }\n    onPrimaryPress() {\n        if (this.primaryAction) {\n            this.primaryAction();\n            this.onNotificationClose();\n        }\n    }\n    onSecondaryPress() {\n        if (this.secondaryAction) {\n            this.secondaryAction();\n            this.onNotificationClose();\n        }\n    }\n    getHeaderTemplate() {\n        if (this.header instanceof TemplateRef) {\n            return this.header;\n        }\n        return this.defaultHeaderTemplate;\n    }\n    getMessageTemplate() {\n        if (this.message instanceof TemplateRef) {\n            return this.message;\n        }\n        return this.defaultMessageTemplate;\n    }\n    hasButtonRow() {\n        return this.hasPrimaryAction() || this.hasSecondaryAction();\n    }\n    hasPrimaryAction() {\n        return this.primaryAction !== undefined;\n    }\n    hasSecondaryAction() {\n        return this.secondaryAction !== undefined;\n    }\n}\nNotificationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationComponent, deps: [{ token: DOCUMENT }, { token: i0.ElementRef }, { token: BBNotificationConfig }], target: i0.ɵɵFactoryTarget.Component });\nNotificationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: NotificationComponent, selector: \"bb-notification-ui\", inputs: { header: \"header\", message: \"message\", primaryActionTemplate: \"primaryActionTemplate\", secondaryActionTemplate: \"secondaryActionTemplate\", modifier: \"modifier\", dismissible: \"dismissible\", primaryActionText: \"primaryActionText\", primaryAction: \"primaryAction\", secondaryActionText: \"secondaryActionText\", secondaryAction: \"secondaryAction\", closeAction: \"closeAction\", hostAction: \"hostAction\", headerContext: \"headerContext\", messageContext: \"messageContext\", animation: \"animation\" }, outputs: { close: \"close\" }, host: { listeners: { \"window:keydown\": \"onKeyEvent($event)\" }, properties: { \"@.disabled\": \"this.noAnimation\", \"@fadeSlideInOut\": \"this.animated\" } }, viewQueries: [{ propertyName: \"notificationContent\", first: true, predicate: [\"notificationContent\"], descendants: true }, { propertyName: \"defaultHeaderTemplate\", first: true, predicate: [\"defaultNotificationHeaderTemplate\"], descendants: true, static: true }, { propertyName: \"defaultMessageTemplate\", first: true, predicate: [\"defaultNotificationMessageTemplate\"], descendants: true, static: true }, { propertyName: \"defaultPrimaryActionsTemplate\", first: true, predicate: [\"defaultPrimaryActionsTemplate\"], descendants: true, static: true }, { propertyName: \"defaultSecondaryActionsTemplate\", first: true, predicate: [\"defaultSecondaryActionsTemplate\"], descendants: true, static: true }], ngImport: i0, template: \"<div\\n  class=\\\"bb-notification\\\"\\n  [ngClass]=\\\"dynamicClassNames\\\"\\n  data-role=\\\"notification-alert\\\"\\n  #notificationContent\\n  [bbFocus]=\\\"autofocus\\\"\\n  [attr.tabindex]=\\\"hostTabIndex\\\"\\n  (bbKeyboardClick)=\\\"onNotificationClick()\\\"\\n>\\n  <bb-icon-ui\\n    [name]=\\\"modifier\\\"\\n    [color]=\\\"iconColor\\\"\\n    class=\\\"bb-notification__icon\\\"\\n    [attr.data-role]=\\\"'notification-icon'\\\"\\n  ></bb-icon-ui>\\n  <div class=\\\"bb-notification__body\\\">\\n    <div class=\\\"bb-notification__title\\\" data-role=\\\"notification-heading\\\">\\n      <ng-container *ngTemplateOutlet=\\\"getHeaderTemplate(); context: headerContext\\\"></ng-container>\\n    </div>\\n    <div data-role=\\\"notification-message\\\" class=\\\"bb-text-support\\\">\\n      <ng-container *ngTemplateOutlet=\\\"getMessageTemplate(); context: messageContext\\\"></ng-container>\\n    </div>\\n    <div\\n      data-role=\\\"notification-actions\\\"\\n      *ngIf=\\\"primaryActionTemplate || primaryActionText || secondaryActionTemplate || secondaryActionText\\\"\\n    >\\n      <div class=\\\"bb-button-bar\\\">\\n        <button\\n          *ngIf=\\\"hasPrimaryAction()\\\"\\n          bbButton\\n          type=\\\"button\\\"\\n          data-role=\\\"notification-primary-button\\\"\\n          class=\\\"bb-button-bar__button\\\"\\n          (click)=\\\"onPrimaryPress()\\\"\\n        >\\n          <ng-container *ngIf=\\\"primaryActionTemplate; else defaultPrimaryActionsTemplate\\\">\\n            <ng-container *ngTemplateOutlet=\\\"primaryActionTemplate; context: this\\\"></ng-container>\\n          </ng-container>\\n        </button>\\n        <button\\n          bbButton\\n          color=\\\"secondary\\\"\\n          *ngIf=\\\"hasSecondaryAction()\\\"\\n          data-role=\\\"notification-secondary-button\\\"\\n          class=\\\"bb-button-bar__button\\\"\\n          (click)=\\\"onSecondaryPress()\\\"\\n        >\\n          <ng-container *ngIf=\\\"secondaryActionTemplate; else defaultSecondaryActionsTemplate\\\">\\n            <ng-container *ngTemplateOutlet=\\\"secondaryActionTemplate; context: this\\\"></ng-container>\\n          </ng-container>\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n  <button\\n    *ngIf=\\\"dismissible\\\"\\n    (click)=\\\"onNotificationClose()\\\"\\n    type=\\\"button\\\"\\n    data-role=\\\"notification-close-button\\\"\\n    class=\\\"bb-notification__close close\\\"\\n    aria-label=\\\"Close\\\"\\n    i18n-aria-label=\\\"Close notification button| Text for the close notification button @@bb-notification-ui.close\\\"\\n  >\\n    <bb-icon-ui name=\\\"times\\\"></bb-icon-ui>\\n  </button>\\n</div>\\n\\n<ng-template #defaultNotificationHeaderTemplate>\\n  <div [ngClass]=\\\"{ 'bb-block bb-block--sm': !!header }\\\">\\n    {{ header }}\\n  </div>\\n</ng-template>\\n\\n<ng-template #defaultNotificationMessageTemplate>\\n  {{ message }}\\n</ng-template>\\n\\n<ng-template #defaultPrimaryActionsTemplate>\\n  {{ primaryActionText }}\\n</ng-template>\\n\\n<ng-template #defaultSecondaryActionsTemplate>\\n  {{ secondaryActionText }}\\n</ng-template>\\n\", components: [{ type: i2.IconComponent, selector: \"bb-icon-ui\", inputs: [\"name\", \"inverse\", \"size\", \"color\", \"animate\", \"aria-label\", \"cropped\", \"backgroundType\"] }], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i4.FocusDirective, selector: \"[bbFocus]\", inputs: [\"bbFocus\"], exportAs: [\"bbFocus\"] }, { type: i5.KeyboardClickDirective, selector: \"[bbKeyboardClick]\", outputs: [\"bbKeyboardClick\"] }, { type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i6.ButtonDirective, selector: \"button[bbButton]\", inputs: [\"type\", \"color\", \"buttonSize\", \"block\", \"circle\"] }], animations: [fadeSlideAnimation] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-notification-ui',\n                    templateUrl: './notification.component.html',\n                    animations: [fadeSlideAnimation],\n                }]\n        }], ctorParameters: function () { return [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ElementRef }, { type: BBNotificationConfig }]; }, propDecorators: { header: [{\n                type: Input\n            }], message: [{\n                type: Input\n            }], primaryActionTemplate: [{\n                type: Input\n            }], secondaryActionTemplate: [{\n                type: Input\n            }], modifier: [{\n                type: Input\n            }], dismissible: [{\n                type: Input\n            }], primaryActionText: [{\n                type: Input\n            }], primaryAction: [{\n                type: Input\n            }], secondaryActionText: [{\n                type: Input\n            }], secondaryAction: [{\n                type: Input\n            }], closeAction: [{\n                type: Input\n            }], hostAction: [{\n                type: Input\n            }], headerContext: [{\n                type: Input\n            }], messageContext: [{\n                type: Input\n            }], animation: [{\n                type: Input\n            }], close: [{\n                type: Output\n            }], notificationContent: [{\n                type: ViewChild,\n                args: ['notificationContent']\n            }], defaultHeaderTemplate: [{\n                type: ViewChild,\n                args: ['defaultNotificationHeaderTemplate', { static: true }]\n            }], defaultMessageTemplate: [{\n                type: ViewChild,\n                args: ['defaultNotificationMessageTemplate', { static: true }]\n            }], defaultPrimaryActionsTemplate: [{\n                type: ViewChild,\n                args: ['defaultPrimaryActionsTemplate', { static: true }]\n            }], defaultSecondaryActionsTemplate: [{\n                type: ViewChild,\n                args: ['defaultSecondaryActionsTemplate', { static: true }]\n            }], noAnimation: [{\n                type: HostBinding,\n                args: ['@.disabled']\n            }], animated: [{\n                type: HostBinding,\n                args: ['@fadeSlideInOut']\n            }], onKeyEvent: [{\n                type: HostListener,\n                args: ['window:keydown', ['$event']]\n            }] } });\n\nclass NotificationService {\n    constructor(appendtoDomService) {\n        this.appendtoDomService = appendtoDomService;\n    }\n    showNotification({ header, message, dismissible = true, ttl = 3000, modifier = 'info', headerContext = {}, messageContext = {}, primaryActionText, primaryAction, secondaryActionText, secondaryAction, closeAction, hostAction, primaryActionTemplate, secondaryActionTemplate, autofocus = true, }) {\n        const res = this.appendtoDomService.appendComponentToRoot(NotificationComponent, autofocus);\n        const componentInstance = res.componentInstance;\n        componentInstance.message = message;\n        componentInstance.modifier = modifier;\n        componentInstance.dismissible = dismissible;\n        componentInstance.header = header;\n        componentInstance.primaryActionText = primaryActionText;\n        componentInstance.primaryAction = primaryAction;\n        componentInstance.secondaryActionText = secondaryActionText;\n        componentInstance.secondaryAction = secondaryAction;\n        componentInstance.closeAction = closeAction;\n        componentInstance.hostAction = hostAction;\n        componentInstance.headerContext = headerContext;\n        componentInstance.messageContext = messageContext;\n        componentInstance.primaryActionTemplate = primaryActionTemplate;\n        componentInstance.secondaryActionTemplate = secondaryActionTemplate;\n        return this.createHideNotificationFunction(res.unmountComponent, ttl, componentInstance.close);\n    }\n    createHideNotificationFunction(hideFn, ttl = 0, closeStream) {\n        const hideSubject = new Subject();\n        const hideNotification = () => {\n            hideSubject.next();\n        };\n        const closeSubscription = closeStream.subscribe(hideNotification);\n        const hideSubscription = hideSubject.pipe(first()).subscribe(() => {\n            hideFn();\n            hideSubscription.unsubscribe();\n            closeSubscription.unsubscribe();\n        });\n        if (ttl > 0) {\n            setTimeout(hideNotification, ttl);\n        }\n        return hideNotification;\n    }\n}\nNotificationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationService, deps: [{ token: AppendToDomService }], target: i0.ɵɵFactoryTarget.Injectable });\nNotificationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: AppendToDomService }]; } });\n\nclass NotificationModule {\n}\nNotificationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNotificationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationModule, declarations: [NotificationComponent], imports: [CommonModule, NgbAlertModule, IconModule, ButtonModule, KeyboardClickModule, FocusModule], exports: [NotificationComponent] });\nNotificationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationModule, imports: [[CommonModule, NgbAlertModule, IconModule, ButtonModule, KeyboardClickModule, FocusModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, NgbAlertModule, IconModule, ButtonModule, KeyboardClickModule, FocusModule],\n                    declarations: [NotificationComponent],\n                    exports: [NotificationComponent],\n                    entryComponents: [NotificationComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AppendToDomService, BBNotificationConfig, NotificationComponent, NotificationModule, NotificationService };\n"]},"metadata":{},"sourceType":"module"}