{"ast":null,"code":"import { getLocaleDateTimeFormat, FormatWidth, formatDate, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { LOCALE_ID, Pipe, Inject, NgModule } from '@angular/core';\n/**\n * @name bbDate\n *\n * @description\n * Pipe for formatting dates\n */\n\nclass BbDatePipe {\n  constructor(locale) {\n    this.locale = locale;\n  }\n  /**\n   * @name BbDatePipe#transform\n   * @param value - the date that should be formatted\n   * @param format - the format type for the date to be formatted\n   * @param timezone - used for formatting the time\n   * @param locale - locale to use for formatting\n   *\n   *\n   * @description\n   * Depending on format type, formats a date\n   * Custom format is called with bbShort,\n   * and formats to 'MMMM d, y at HH:mm',\n   * otherwise uses the predifined angular formats\n   *\n   */\n\n\n  transform(value, format = 'mediumDate', timezone, locale) {\n    if (format === 'bbShort') {\n      const localeFormat = getLocaleDateTimeFormat(this.locale, FormatWidth.Long);\n      const dateFormatted = formatDate(value, 'MMMM d, y', this.locale, timezone);\n      const timeFormatted = formatDate(value, 'HH:mm', this.locale, timezone);\n      return localeFormat.replace(/'/g, '').replace('{1}', dateFormatted).replace('{0}', timeFormatted);\n    }\n\n    if (value == null || value === '' || value !== value) return null;\n\n    try {\n      return formatDate(value, format, locale || this.locale, timezone);\n    } catch (error) {\n      throw Error(`InvalidPipeArgument: '${error.message}' for pipe BbDatePipe`);\n    }\n  }\n\n}\n\nBbDatePipe.ɵfac = function BbDatePipe_Factory(t) {\n  return new (t || BbDatePipe)(i0.ɵɵdirectiveInject(LOCALE_ID, 16));\n};\n\nBbDatePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"bbDate\",\n  type: BbDatePipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BbDatePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'bbDate'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\n\nclass BbDatePipeModule {}\n\nBbDatePipeModule.ɵfac = function BbDatePipeModule_Factory(t) {\n  return new (t || BbDatePipeModule)();\n};\n\nBbDatePipeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BbDatePipeModule\n});\nBbDatePipeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BbDatePipeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [BbDatePipe],\n      exports: [BbDatePipe]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BbDatePipe, BbDatePipeModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-date-pipe.js"],"names":["getLocaleDateTimeFormat","FormatWidth","formatDate","CommonModule","i0","LOCALE_ID","Pipe","Inject","NgModule","BbDatePipe","constructor","locale","transform","value","format","timezone","localeFormat","Long","dateFormatted","timeFormatted","replace","error","Error","message","ɵfac","ɵpipe","type","args","name","undefined","decorators","BbDatePipeModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import { getLocaleDateTimeFormat, FormatWidth, formatDate, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { LOCALE_ID, Pipe, Inject, NgModule } from '@angular/core';\n\n/**\n * @name bbDate\n *\n * @description\n * Pipe for formatting dates\n */\nclass BbDatePipe {\n    constructor(locale) {\n        this.locale = locale;\n    }\n    /**\n     * @name BbDatePipe#transform\n     * @param value - the date that should be formatted\n     * @param format - the format type for the date to be formatted\n     * @param timezone - used for formatting the time\n     * @param locale - locale to use for formatting\n     *\n     *\n     * @description\n     * Depending on format type, formats a date\n     * Custom format is called with bbShort,\n     * and formats to 'MMMM d, y at HH:mm',\n     * otherwise uses the predifined angular formats\n     *\n     */\n    transform(value, format = 'mediumDate', timezone, locale) {\n        if (format === 'bbShort') {\n            const localeFormat = getLocaleDateTimeFormat(this.locale, FormatWidth.Long);\n            const dateFormatted = formatDate(value, 'MMMM d, y', this.locale, timezone);\n            const timeFormatted = formatDate(value, 'HH:mm', this.locale, timezone);\n            return localeFormat.replace(/'/g, '').replace('{1}', dateFormatted).replace('{0}', timeFormatted);\n        }\n        if (value == null || value === '' || value !== value)\n            return null;\n        try {\n            return formatDate(value, format, locale || this.locale, timezone);\n        }\n        catch (error) {\n            throw Error(`InvalidPipeArgument: '${error.message}' for pipe BbDatePipe`);\n        }\n    }\n}\nBbDatePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BbDatePipe, deps: [{ token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Pipe });\nBbDatePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BbDatePipe, name: \"bbDate\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BbDatePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'bbDate',\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LOCALE_ID]\n                }] }]; } });\n\nclass BbDatePipeModule {\n}\nBbDatePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BbDatePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBbDatePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BbDatePipeModule, declarations: [BbDatePipe], imports: [CommonModule], exports: [BbDatePipe] });\nBbDatePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BbDatePipeModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BbDatePipeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [BbDatePipe],\n                    exports: [BbDatePipe],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BbDatePipe, BbDatePipeModule };\n"]},"metadata":{},"sourceType":"module"}