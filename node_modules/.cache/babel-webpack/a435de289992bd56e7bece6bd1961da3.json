{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@backbase/ui-ang/button';\nimport { ButtonComponent, ButtonModule } from '@backbase/ui-ang/button';\nimport * as i1 from '@backbase/ui-ang/loading-indicator';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\n/**\n * @name LoadButtonComponent\n *\n * @description\n * Component that displays a button with integrated loading indicator.\n * The component counts the next page(from) param. Set enable/disable and loading's delay states\n * of component depend on incoming parametrs.\n */\n\nconst _c0 = [\"button\"];\n\nfunction LoadButtonComponent_bb_loading_indicator_ui_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-loading-indicator-ui\", 4);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    invisible: a0\n  };\n};\n\nconst _c2 = [\"*\"];\n\nclass LoadButtonComponent extends ButtonComponent {\n  constructor(elementRef, renderer) {\n    super(elementRef, renderer);\n    this.elementRef = elementRef;\n    /**\n     * This Boolean attribute indicates if loading indicator should be shown instead of button content\n     */\n\n    this.isLoading = false;\n    /**\n     * The page to list from\n     */\n\n    this.from = 0;\n    /**\n     * The number of results per page\n     */\n\n    this.size = 0;\n    /**\n     * The type of the button\n     */\n\n    this.circle = false;\n    /**\n     * The total item count\n     */\n\n    this.totalCount = 0;\n    /**\n     * This emits new load more params to parent component\n     */\n\n    this.paramChange = new EventEmitter();\n  }\n\n  ngAfterViewInit() {\n    this.moveAriaAttributes(this.elementRef.nativeElement, this.buttonComponent && this.buttonComponent.nativeElement);\n  }\n\n  isLoadMore() {\n    return this.size + this.totalCount + this.from > 0;\n  }\n\n  hasMore() {\n    return this.from * this.size + this.size < this.totalCount;\n  }\n\n  onLoadMore() {\n    if (this.hasMore() && !this.isLoading) {\n      this.paramChange.emit({\n        from: this.from + 1\n      });\n    }\n  }\n\n}\n\nLoadButtonComponent.ɵfac = function LoadButtonComponent_Factory(t) {\n  return new (t || LoadButtonComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nLoadButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LoadButtonComponent,\n  selectors: [[\"bb-load-button-ui\"]],\n  viewQuery: function LoadButtonComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.buttonComponent = _t.first);\n    }\n  },\n  inputs: {\n    isLoading: \"isLoading\",\n    from: \"from\",\n    size: \"size\",\n    circle: \"circle\",\n    totalCount: \"totalCount\"\n  },\n  outputs: {\n    paramChange: \"paramChange\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c2,\n  decls: 5,\n  vars: 11,\n  consts: [[\"bbButton\", \"\", 1, \"bb-load-button\", 3, \"color\", \"buttonSize\", \"autofocus\", \"type\", \"block\", \"disabled\", \"circle\", \"click\"], [\"button\", \"\"], [1, \"bb-load-button__content\", 3, \"ngClass\"], [\"class\", \"bb-load-button__loading-indicator\", \"loaderSize\", \"sm\", 4, \"ngIf\"], [\"loaderSize\", \"sm\", 1, \"bb-load-button__loading-indicator\"]],\n  template: function LoadButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"button\", 0, 1);\n      i0.ɵɵlistener(\"click\", function LoadButtonComponent_Template_button_click_0_listener() {\n        return ctx.isLoadMore() ? ctx.onLoadMore() : null;\n      });\n      i0.ɵɵelementStart(2, \"span\", 2);\n      i0.ɵɵprojection(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, LoadButtonComponent_bb_loading_indicator_ui_4_Template, 1, 0, \"bb-loading-indicator-ui\", 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"color\", ctx.color)(\"buttonSize\", ctx.buttonSize)(\"autofocus\", ctx.autofocus)(\"type\", ctx.type)(\"block\", ctx.block)(\"disabled\", ctx.disabled || (ctx.isLoadMore() && !ctx.isLoading ? !ctx.hasMore() : false))(\"circle\", ctx.circle);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c1, ctx.isLoading));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n    }\n  },\n  directives: [i2.ButtonDirective, i3.NgClass, i3.NgIf, i1.LoadingIndicatorComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoadButtonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-load-button-ui',\n      templateUrl: './load-button.component.html'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    isLoading: [{\n      type: Input\n    }],\n    from: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    circle: [{\n      type: Input\n    }],\n    totalCount: [{\n      type: Input\n    }],\n    paramChange: [{\n      type: Output\n    }],\n    buttonComponent: [{\n      type: ViewChild,\n      args: ['button', {\n        static: true\n      }]\n    }]\n  });\n})();\n\nclass LoadButtonModule {}\n\nLoadButtonModule.ɵfac = function LoadButtonModule_Factory(t) {\n  return new (t || LoadButtonModule)();\n};\n\nLoadButtonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LoadButtonModule\n});\nLoadButtonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ButtonModule, LoadingIndicatorModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoadButtonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ButtonModule, LoadingIndicatorModule],\n      declarations: [LoadButtonComponent],\n      exports: [LoadButtonComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { LoadButtonComponent, LoadButtonModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-load-button.js"],"names":["i0","EventEmitter","Component","Input","Output","ViewChild","NgModule","i3","CommonModule","i2","ButtonComponent","ButtonModule","i1","LoadingIndicatorModule","LoadButtonComponent","constructor","elementRef","renderer","isLoading","from","size","circle","totalCount","paramChange","ngAfterViewInit","moveAriaAttributes","nativeElement","buttonComponent","isLoadMore","hasMore","onLoadMore","emit","ɵfac","ElementRef","Renderer2","ɵcmp","ButtonDirective","NgClass","NgIf","LoadingIndicatorComponent","type","args","selector","templateUrl","static","LoadButtonModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@backbase/ui-ang/button';\nimport { ButtonComponent, ButtonModule } from '@backbase/ui-ang/button';\nimport * as i1 from '@backbase/ui-ang/loading-indicator';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\n\n/**\n * @name LoadButtonComponent\n *\n * @description\n * Component that displays a button with integrated loading indicator.\n * The component counts the next page(from) param. Set enable/disable and loading's delay states\n * of component depend on incoming parametrs.\n */\nclass LoadButtonComponent extends ButtonComponent {\n    constructor(elementRef, renderer) {\n        super(elementRef, renderer);\n        this.elementRef = elementRef;\n        /**\n         * This Boolean attribute indicates if loading indicator should be shown instead of button content\n         */\n        this.isLoading = false;\n        /**\n         * The page to list from\n         */\n        this.from = 0;\n        /**\n         * The number of results per page\n         */\n        this.size = 0;\n        /**\n         * The type of the button\n         */\n        this.circle = false;\n        /**\n         * The total item count\n         */\n        this.totalCount = 0;\n        /**\n         * This emits new load more params to parent component\n         */\n        this.paramChange = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        this.moveAriaAttributes(this.elementRef.nativeElement, this.buttonComponent && this.buttonComponent.nativeElement);\n    }\n    isLoadMore() {\n        return this.size + this.totalCount + this.from > 0;\n    }\n    hasMore() {\n        return this.from * this.size + this.size < this.totalCount;\n    }\n    onLoadMore() {\n        if (this.hasMore() && !this.isLoading) {\n            this.paramChange.emit({\n                from: this.from + 1,\n            });\n        }\n    }\n}\nLoadButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LoadButtonComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\nLoadButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LoadButtonComponent, selector: \"bb-load-button-ui\", inputs: { isLoading: \"isLoading\", from: \"from\", size: \"size\", circle: \"circle\", totalCount: \"totalCount\" }, outputs: { paramChange: \"paramChange\" }, viewQueries: [{ propertyName: \"buttonComponent\", first: true, predicate: [\"button\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<button\\n  class=\\\"bb-load-button\\\"\\n  #button\\n  bbButton\\n  [color]=\\\"color\\\"\\n  [buttonSize]=\\\"buttonSize\\\"\\n  [autofocus]=\\\"autofocus\\\"\\n  [type]=\\\"type\\\"\\n  [block]=\\\"block\\\"\\n  [disabled]=\\\"disabled || (isLoadMore() && !isLoading ? !hasMore() : false)\\\"\\n  (click)=\\\"isLoadMore() ? onLoadMore() : null\\\"\\n  [circle]=\\\"circle\\\"\\n>\\n  <span [ngClass]=\\\"{ invisible: isLoading }\\\" class=\\\"bb-load-button__content\\\">\\n    <ng-content></ng-content>\\n  </span>\\n  <bb-loading-indicator-ui\\n    *ngIf=\\\"isLoading\\\"\\n    class=\\\"bb-load-button__loading-indicator\\\"\\n    loaderSize=\\\"sm\\\"\\n  ></bb-loading-indicator-ui>\\n</button>\\n\", components: [{ type: i1.LoadingIndicatorComponent, selector: \"bb-loading-indicator-ui\", inputs: [\"text\", \"loaderSize\", \"showDelay\", \"hasBackground\", \"inline\"] }], directives: [{ type: i2.ButtonDirective, selector: \"button[bbButton]\", inputs: [\"type\", \"color\", \"buttonSize\", \"block\", \"circle\"] }, { type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LoadButtonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-load-button-ui',\n                    templateUrl: './load-button.component.html',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { isLoading: [{\n                type: Input\n            }], from: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], circle: [{\n                type: Input\n            }], totalCount: [{\n                type: Input\n            }], paramChange: [{\n                type: Output\n            }], buttonComponent: [{\n                type: ViewChild,\n                args: ['button', { static: true }]\n            }] } });\n\nclass LoadButtonModule {\n}\nLoadButtonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LoadButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLoadButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LoadButtonModule, declarations: [LoadButtonComponent], imports: [CommonModule, ButtonModule, LoadingIndicatorModule], exports: [LoadButtonComponent] });\nLoadButtonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LoadButtonModule, imports: [[CommonModule, ButtonModule, LoadingIndicatorModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LoadButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, ButtonModule, LoadingIndicatorModule],\n                    declarations: [LoadButtonComponent],\n                    exports: [LoadButtonComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LoadButtonComponent, LoadButtonModule };\n"]},"metadata":{},"sourceType":"module"}