{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, Input, Directive, NgModule } from '@angular/core';\nimport * as i1 from '@backbase/ui-ang/services';\nimport { BrowserService, NAVIGATOR_TOKEN, navigatorFactory } from '@backbase/ui-ang/services';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@backbase/ui-ang/tooltip-directive';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\n/**\n * @name EllipsisComponent\n *\n * @description\n * Component that wraps text and shows ellipsis in case text does not fit.\n */\n\n/** @dynamic */\n\nfunction EllipsisComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.text);\n  }\n}\n\nfunction EllipsisComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"bb-ellipsis--single-line\": a0,\n    \"bb-ellipsis--line-clamp\": a1\n  };\n};\n\nconst _c1 = [\"*\"];\n\nclass EllipsisComponent {\n  constructor(browserService) {\n    this.browserService = browserService;\n    this.isOpen = false;\n    /**\n     * Specifies the events that should trigger the tooltip (space separated strings). Defaults to 'click'.\n     */\n\n    this.tooltipTriggers = 'click';\n    this._lineClamp = 0;\n  }\n  /**\n   * Specifies after what text line apply truncating\n   */\n\n\n  set lineClamp(value) {\n    this._lineClamp = Math.max(0, Math.floor(value));\n  }\n\n  get lineClamp() {\n    return this._lineClamp;\n  }\n\n  get isIE() {\n    return this.browserService.browserIsMSIE();\n  }\n\n  onMouseEnter(event) {\n    const target = event.target;\n\n    if (target.offsetWidth < target.scrollWidth) {\n      this.isOpen = true;\n    }\n  }\n\n  onMouseLeave() {\n    this.isOpen = false;\n  }\n\n}\n\nEllipsisComponent.ɵfac = function EllipsisComponent_Factory(t) {\n  return new (t || EllipsisComponent)(i0.ɵɵdirectiveInject(i1.BrowserService));\n};\n\nEllipsisComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: EllipsisComponent,\n  selectors: [[\"bb-ellipsis-ui\"]],\n  inputs: {\n    text: \"text\",\n    tooltipTriggers: \"tooltipTriggers\",\n    lineClamp: \"lineClamp\"\n  },\n  features: [i0.ɵɵProvidersFeature([BrowserService, {\n    provide: NAVIGATOR_TOKEN,\n    useFactory: navigatorFactory\n  }])],\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 13,\n  consts: [[1, \"bb-ellipsis\", 3, \"ngClass\", \"bbTooltip\", \"triggers\", \"disableTooltip\", \"mouseenter\", \"mouseleave\"], [4, \"ngIf\"]],\n  template: function EllipsisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"mouseenter\", function EllipsisComponent_Template_div_mouseenter_0_listener($event) {\n        return ctx.onMouseEnter($event);\n      })(\"mouseleave\", function EllipsisComponent_Template_div_mouseleave_0_listener() {\n        return ctx.onMouseLeave();\n      });\n      i0.ɵɵtemplate(1, EllipsisComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n      i0.ɵɵtemplate(2, EllipsisComponent_ng_container_2_Template, 2, 0, \"ng-container\", 1);\n      i0.ɵɵelement(3, \"div\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"-webkit-line-clamp\", ctx.lineClamp || \"none\")(\"line-clamp\", ctx.lineClamp || \"none\");\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(10, _c0, !ctx.lineClamp || ctx.isIE, ctx.lineClamp && !ctx.isIE))(\"bbTooltip\", ctx.text)(\"triggers\", ctx.tooltipTriggers)(\"disableTooltip\", !ctx.isOpen);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.text);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.text);\n    }\n  },\n  directives: [i2.NgClass, i3.TooltipDirective, i2.NgIf],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EllipsisComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-ellipsis-ui',\n      templateUrl: './ellipsis.component.html',\n      providers: [BrowserService, {\n        provide: NAVIGATOR_TOKEN,\n        useFactory: navigatorFactory\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i1.BrowserService\n    }];\n  }, {\n    text: [{\n      type: Input\n    }],\n    tooltipTriggers: [{\n      type: Input\n    }],\n    lineClamp: [{\n      type: Input,\n      args: ['lineClamp']\n    }]\n  });\n})();\n\nclass IsContentTruncatedDirective {\n  constructor(elementRef, cd) {\n    this.elementRef = elementRef;\n    this.cd = cd;\n  }\n\n  ngAfterViewInit() {\n    if (!this.hostRef.setIsContentTruncated) {\n      throw new Error('\"hostRef\" should implement \"CheckContentTruncationBehaviour\" interface to set truncation status');\n    }\n\n    setTimeout(() => {\n      this.setIsContentTruncatedInParentComponent();\n    });\n  }\n\n  setIsContentTruncatedInParentComponent() {\n    const isContentTruncated = this.isContentTruncated(this.elementRef.nativeElement);\n    this.hostRef.setIsContentTruncated(isContentTruncated);\n    this.cd.markForCheck();\n  }\n\n  isContentTruncated({\n    offsetHeight,\n    scrollHeight\n  }) {\n    return offsetHeight < scrollHeight;\n  }\n\n}\n\nIsContentTruncatedDirective.ɵfac = function IsContentTruncatedDirective_Factory(t) {\n  return new (t || IsContentTruncatedDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nIsContentTruncatedDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: IsContentTruncatedDirective,\n  selectors: [[\"\", \"bbIsContentTruncated\", \"\"]],\n  inputs: {\n    hostRef: \"hostRef\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IsContentTruncatedDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbIsContentTruncated]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    hostRef: [{\n      type: Input\n    }]\n  });\n})();\n\nconst directives = [IsContentTruncatedDirective];\n\nclass EllipsisModule {}\n\nEllipsisModule.ɵfac = function EllipsisModule_Factory(t) {\n  return new (t || EllipsisModule)();\n};\n\nEllipsisModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: EllipsisModule\n});\nEllipsisModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[TooltipModule, CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EllipsisModule, [{\n    type: NgModule,\n    args: [{\n      imports: [TooltipModule, CommonModule],\n      declarations: [EllipsisComponent, ...directives],\n      exports: [EllipsisComponent, ...directives]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { EllipsisComponent, EllipsisModule, IsContentTruncatedDirective };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-ellipsis.js"],"names":["i0","Component","Input","Directive","NgModule","i1","BrowserService","NAVIGATOR_TOKEN","navigatorFactory","i2","CommonModule","i3","TooltipModule","EllipsisComponent","constructor","browserService","isOpen","tooltipTriggers","_lineClamp","lineClamp","value","Math","max","floor","isIE","browserIsMSIE","onMouseEnter","event","target","offsetWidth","scrollWidth","onMouseLeave","ɵfac","ɵcmp","provide","useFactory","NgClass","TooltipDirective","NgIf","type","args","selector","templateUrl","providers","text","IsContentTruncatedDirective","elementRef","cd","ngAfterViewInit","hostRef","setIsContentTruncated","Error","setTimeout","setIsContentTruncatedInParentComponent","isContentTruncated","nativeElement","markForCheck","offsetHeight","scrollHeight","ElementRef","ChangeDetectorRef","ɵdir","directives","EllipsisModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, Input, Directive, NgModule } from '@angular/core';\nimport * as i1 from '@backbase/ui-ang/services';\nimport { BrowserService, NAVIGATOR_TOKEN, navigatorFactory } from '@backbase/ui-ang/services';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@backbase/ui-ang/tooltip-directive';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\n\n/**\n * @name EllipsisComponent\n *\n * @description\n * Component that wraps text and shows ellipsis in case text does not fit.\n */\n/** @dynamic */\nclass EllipsisComponent {\n    constructor(browserService) {\n        this.browserService = browserService;\n        this.isOpen = false;\n        /**\n         * Specifies the events that should trigger the tooltip (space separated strings). Defaults to 'click'.\n         */\n        this.tooltipTriggers = 'click';\n        this._lineClamp = 0;\n    }\n    /**\n     * Specifies after what text line apply truncating\n     */\n    set lineClamp(value) {\n        this._lineClamp = Math.max(0, Math.floor(value));\n    }\n    get lineClamp() {\n        return this._lineClamp;\n    }\n    get isIE() {\n        return this.browserService.browserIsMSIE();\n    }\n    onMouseEnter(event) {\n        const target = event.target;\n        if (target.offsetWidth < target.scrollWidth) {\n            this.isOpen = true;\n        }\n    }\n    onMouseLeave() {\n        this.isOpen = false;\n    }\n}\nEllipsisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: EllipsisComponent, deps: [{ token: i1.BrowserService }], target: i0.ɵɵFactoryTarget.Component });\nEllipsisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: EllipsisComponent, selector: \"bb-ellipsis-ui\", inputs: { text: \"text\", tooltipTriggers: \"tooltipTriggers\", lineClamp: \"lineClamp\" }, providers: [BrowserService, { provide: NAVIGATOR_TOKEN, useFactory: navigatorFactory }], ngImport: i0, template: \"<div\\n  class=\\\"bb-ellipsis\\\"\\n  [ngClass]=\\\"{\\n    'bb-ellipsis--single-line': !lineClamp || isIE,\\n    'bb-ellipsis--line-clamp': lineClamp && !isIE\\n  }\\\"\\n  [style.-webkit-line-clamp]=\\\"lineClamp || 'none'\\\"\\n  [style.line-clamp]=\\\"lineClamp || 'none'\\\"\\n  [bbTooltip]=\\\"text\\\"\\n  [triggers]=\\\"tooltipTriggers\\\"\\n  [disableTooltip]=\\\"!isOpen\\\"\\n  (mouseenter)=\\\"onMouseEnter($event)\\\"\\n  (mouseleave)=\\\"onMouseLeave()\\\"\\n>\\n  <ng-container *ngIf=\\\"text\\\">{{ text }}</ng-container>\\n  <ng-container *ngIf=\\\"!text\\\"><ng-content></ng-content></ng-container>\\n  <div></div>\\n  <!--fix for safari: removal of display standard tooltip -->\\n</div>\\n\", directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3.TooltipDirective, selector: \"[bbTooltip]\", inputs: [\"bbTooltip\", \"triggers\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: EllipsisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-ellipsis-ui',\n                    templateUrl: './ellipsis.component.html',\n                    providers: [BrowserService, { provide: NAVIGATOR_TOKEN, useFactory: navigatorFactory }],\n                }]\n        }], ctorParameters: function () { return [{ type: i1.BrowserService }]; }, propDecorators: { text: [{\n                type: Input\n            }], tooltipTriggers: [{\n                type: Input\n            }], lineClamp: [{\n                type: Input,\n                args: ['lineClamp']\n            }] } });\n\nclass IsContentTruncatedDirective {\n    constructor(elementRef, cd) {\n        this.elementRef = elementRef;\n        this.cd = cd;\n    }\n    ngAfterViewInit() {\n        if (!this.hostRef.setIsContentTruncated) {\n            throw new Error('\"hostRef\" should implement \"CheckContentTruncationBehaviour\" interface to set truncation status');\n        }\n        setTimeout(() => {\n            this.setIsContentTruncatedInParentComponent();\n        });\n    }\n    setIsContentTruncatedInParentComponent() {\n        const isContentTruncated = this.isContentTruncated(this.elementRef.nativeElement);\n        this.hostRef.setIsContentTruncated(isContentTruncated);\n        this.cd.markForCheck();\n    }\n    isContentTruncated({ offsetHeight, scrollHeight }) {\n        return offsetHeight < scrollHeight;\n    }\n}\nIsContentTruncatedDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: IsContentTruncatedDirective, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\nIsContentTruncatedDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: IsContentTruncatedDirective, selector: \"[bbIsContentTruncated]\", inputs: { hostRef: \"hostRef\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: IsContentTruncatedDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbIsContentTruncated]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { hostRef: [{\n                type: Input\n            }] } });\n\nconst directives = [IsContentTruncatedDirective];\nclass EllipsisModule {\n}\nEllipsisModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: EllipsisModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nEllipsisModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: EllipsisModule, declarations: [EllipsisComponent, IsContentTruncatedDirective], imports: [TooltipModule, CommonModule], exports: [EllipsisComponent, IsContentTruncatedDirective] });\nEllipsisModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: EllipsisModule, imports: [[TooltipModule, CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: EllipsisModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [TooltipModule, CommonModule],\n                    declarations: [EllipsisComponent, ...directives],\n                    exports: [EllipsisComponent, ...directives],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EllipsisComponent, EllipsisModule, IsContentTruncatedDirective };\n"]},"metadata":{},"sourceType":"module"}