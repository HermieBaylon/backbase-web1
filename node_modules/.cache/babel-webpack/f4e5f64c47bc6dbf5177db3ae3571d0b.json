{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\nconst BatchStatus = {\n  OPEN: 'OPEN',\n  CLOSED: 'CLOSED',\n  DRAFT: 'DRAFT',\n  INVALID: 'INVALID',\n  VALID: 'VALID',\n  ENTERED: 'ENTERED',\n  REJECTED: 'REJECTED',\n  CANCELLED: 'CANCELLED',\n  READY: 'READY',\n  ACKNOWLEDGED: 'ACKNOWLEDGED',\n  DOWNLOADING: 'DOWNLOADING',\n  ACCEPTED: 'ACCEPTED',\n  PROCESSED: 'PROCESSED'\n};\nconst BatchTemplateStatus = {\n  DRAFT: 'DRAFT',\n  AVAILABLE: 'AVAILABLE'\n};\nconst CreditDebitIndicator = {\n  CREDIT: 'CREDIT',\n  DEBIT: 'DEBIT'\n};\nconst CreditDebitMixedIndicator = {\n  CREDIT: 'CREDIT',\n  DEBIT: 'DEBIT',\n  MIXED: 'MIXED'\n};\nconst SchemeNames = {\n  IBAN: 'IBAN',\n  BBAN: 'BBAN',\n  ID: 'ID',\n  EXTERNALID: 'EXTERNAL_ID',\n  EMAIL: 'EMAIL',\n  MOBILE: 'MOBILE'\n};\nconst PAYMENT_BATCH_TEMPLATE_BASE_PATH = new InjectionToken('PAYMENT_BATCH_TEMPLATE_BASE_PATH');\nconst COLLECTION_FORMATS = {\n  'csv': ',',\n  'tsv': '   ',\n  'ssv': ' ',\n  'pipes': '|'\n};\n\nclass PaymentBatchTemplateConfiguration {\n  constructor(configurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n    this.encoder = configurationParameters.encoder;\n\n    if (configurationParameters.credentials) {\n      this.credentials = configurationParameters.credentials;\n    } else {\n      this.credentials = {};\n    }\n  }\n\n  selectHeaderContentType(contentTypes) {\n    if (contentTypes.length === 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n\n    return type;\n  }\n\n  selectHeaderAccept(accepts) {\n    if (accepts.length === 0) {\n      return undefined;\n    }\n\n    const type = accepts.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return accepts[0];\n    }\n\n    return type;\n  }\n\n  isJsonMime(mime) {\n    const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n    return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n  }\n\n  lookupCredential(key) {\n    const value = this.credentials[key];\n    return typeof value === 'function' ? value() : value;\n  }\n\n}\n\nconst CONFIG_TOKEN = new InjectionToken('api-data-module PaymentBatchTemplateConfiguration');\n\nclass PaymentBatchTemplateApiModule {\n  constructor(parentModule, http, dataModulesManager, config) {\n    if (parentModule) {\n      throw new Error('PaymentBatchTemplateApiModule is already loaded. Import in your base AppModule only.');\n    }\n\n    if (!http) {\n      throw new Error('You need to import the HttpClientModule in your AppModule! \\n' + 'See also https://github.com/angular/angular/issues/20575');\n    }\n\n    if (dataModulesManager) {\n      dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n        apiRoot: '',\n        servicePath: config.basePath || '',\n        headers: {}\n      });\n    }\n  }\n\n  static forRoot(configurationFactory) {\n    return {\n      ngModule: PaymentBatchTemplateApiModule,\n      providers: [{\n        provide: PaymentBatchTemplateConfiguration,\n        useFactory: configurationFactory\n      }]\n    };\n  }\n\n}\n\nPaymentBatchTemplateApiModule.ɵfac = function PaymentBatchTemplateApiModule_Factory(t) {\n  return new (t || PaymentBatchTemplateApiModule)(i0.ɵɵinject(PaymentBatchTemplateApiModule, 12), i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DataModulesManager, 8), i0.ɵɵinject(PaymentBatchTemplateConfiguration));\n};\n\nPaymentBatchTemplateApiModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PaymentBatchTemplateApiModule\n});\nPaymentBatchTemplateApiModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [],\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaymentBatchTemplateApiModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [],\n      exports: [],\n      providers: []\n    }]\n  }], function () {\n    return [{\n      type: PaymentBatchTemplateApiModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: i1.HttpClient,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2.DataModulesManager,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: PaymentBatchTemplateConfiguration\n    }];\n  }, null);\n})();\n\nclass CustomHttpParameterCodec {\n  encodeKey(k) {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v) {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k) {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v) {\n    return decodeURIComponent(v);\n  }\n\n}\n\nclass BatchTemplatesHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new PaymentBatchTemplateConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  createBatchOrderFromTemplate(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n\n    if (_batchTemplateId === null || _batchTemplateId === undefined) {\n      throw new Error('Required parameter batchTemplateId was null or undefined when calling createBatchOrderFromTemplate.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-order`, null, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  createBatchOrderFromTemplateUrl(requestParameters) {\n    const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n\n    if (_batchTemplateId === null || _batchTemplateId === undefined) {\n      throw new Error('Required parameter batchTemplateId was null or undefined when calling createBatchOrderFromTemplate.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-order`;\n  }\n\n  deleteBatchTemplateById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n\n    if (_batchTemplateId === null || _batchTemplateId === undefined) {\n      throw new Error('Required parameter batchTemplateId was null or undefined when calling deleteBatchTemplateById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deleteBatchTemplateByIdUrl(requestParameters) {\n    const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n\n    if (_batchTemplateId === null || _batchTemplateId === undefined) {\n      throw new Error('Required parameter batchTemplateId was null or undefined when calling deleteBatchTemplateById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}`;\n  }\n\n  deleteBatchTemplatePaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n\n    if (_batchTemplateId === null || _batchTemplateId === undefined) {\n      throw new Error('Required parameter batchTemplateId was null or undefined when calling deleteBatchTemplatePaymentById.');\n    }\n\n    const _batchTemplatePaymentId = requestParameters[\"batchTemplatePaymentId\"];\n\n    if (_batchTemplatePaymentId === null || _batchTemplatePaymentId === undefined) {\n      throw new Error('Required parameter batchTemplatePaymentId was null or undefined when calling deleteBatchTemplatePaymentById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-template-payments/${encodeURIComponent(String(_batchTemplatePaymentId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deleteBatchTemplatePaymentByIdUrl(requestParameters) {\n    const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n\n    if (_batchTemplateId === null || _batchTemplateId === undefined) {\n      throw new Error('Required parameter batchTemplateId was null or undefined when calling deleteBatchTemplatePaymentById.');\n    }\n\n    const _batchTemplatePaymentId = requestParameters[\"batchTemplatePaymentId\"];\n\n    if (_batchTemplatePaymentId === null || _batchTemplatePaymentId === undefined) {\n      throw new Error('Required parameter batchTemplatePaymentId was null or undefined when calling deleteBatchTemplatePaymentById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-template-payments/${encodeURIComponent(String(_batchTemplatePaymentId))}`;\n  }\n\n  getBatchTemplatePaymentsById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n\n    if (_batchTemplateId === null || _batchTemplateId === undefined) {\n      throw new Error('Required parameter batchTemplateId was null or undefined when calling getBatchTemplatePaymentsById.');\n    }\n\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    const _privilegesToCheck = requestParameters[\"privilegesToCheck\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    if (_privilegesToCheck) {\n      _privilegesToCheck.forEach(element => {\n        queryParameters = this.addToHttpParams(queryParameters, element, 'privilegesToCheck');\n      });\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-template-payments`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getBatchTemplatePaymentsByIdUrl(requestParameters) {\n    const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n\n    if (_batchTemplateId === null || _batchTemplateId === undefined) {\n      throw new Error('Required parameter batchTemplateId was null or undefined when calling getBatchTemplatePaymentsById.');\n    }\n\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    const _privilegesToCheck = requestParameters[\"privilegesToCheck\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    if (_privilegesToCheck) {\n      _privilegesToCheck.forEach(element => {\n        queryParameters = this.addToHttpParams(queryParameters, element, 'privilegesToCheck');\n      });\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-template-payments${queryString ? `?${queryString}` : ''}`;\n  }\n\n  getBatchTemplates(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _query = requestParameters[\"query\"];\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    const _batchType = requestParameters[\"batchType\"];\n    const _creditDebitMixedIndicator = requestParameters[\"creditDebitMixedIndicator\"];\n    const _privilegesToCheck = requestParameters[\"privilegesToCheck\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_query !== undefined && _query !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    if (_batchType !== undefined && _batchType !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _batchType, 'batchType');\n    }\n\n    if (_creditDebitMixedIndicator !== undefined && _creditDebitMixedIndicator !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _creditDebitMixedIndicator, 'creditDebitMixedIndicator');\n    }\n\n    if (_privilegesToCheck) {\n      _privilegesToCheck.forEach(element => {\n        queryParameters = this.addToHttpParams(queryParameters, element, 'privilegesToCheck');\n      });\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/batch-templates`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getBatchTemplatesUrl(requestParameters) {\n    const _query = requestParameters[\"query\"];\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    const _batchType = requestParameters[\"batchType\"];\n    const _creditDebitMixedIndicator = requestParameters[\"creditDebitMixedIndicator\"];\n    const _privilegesToCheck = requestParameters[\"privilegesToCheck\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_query !== undefined && _query !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    if (_batchType !== undefined && _batchType !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _batchType, 'batchType');\n    }\n\n    if (_creditDebitMixedIndicator !== undefined && _creditDebitMixedIndicator !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _creditDebitMixedIndicator, 'creditDebitMixedIndicator');\n    }\n\n    if (_privilegesToCheck) {\n      _privilegesToCheck.forEach(element => {\n        queryParameters = this.addToHttpParams(queryParameters, element, 'privilegesToCheck');\n      });\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v1/batch-templates${queryString ? `?${queryString}` : ''}`;\n  }\n\n  postBatchTemplatePayments(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n\n    if (_batchTemplateId === null || _batchTemplateId === undefined) {\n      throw new Error('Required parameter batchTemplateId was null or undefined when calling postBatchTemplatePayments.');\n    }\n\n    const _batchTemplatePaymentsPostRequest = requestParameters[\"batchTemplatePaymentsPostRequest\"];\n\n    if (_batchTemplatePaymentsPostRequest === null || _batchTemplatePaymentsPostRequest === undefined) {\n      throw new Error('Required parameter batchTemplatePaymentsPostRequest was null or undefined when calling postBatchTemplatePayments.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-template-payments`, _batchTemplatePaymentsPostRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postBatchTemplatePaymentsUrl(requestParameters) {\n    const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n\n    if (_batchTemplateId === null || _batchTemplateId === undefined) {\n      throw new Error('Required parameter batchTemplateId was null or undefined when calling postBatchTemplatePayments.');\n    }\n\n    const _batchTemplatePaymentsPostRequest = requestParameters[\"batchTemplatePaymentsPostRequest\"];\n\n    if (_batchTemplatePaymentsPostRequest === null || _batchTemplatePaymentsPostRequest === undefined) {\n      throw new Error('Required parameter batchTemplatePaymentsPostRequest was null or undefined when calling postBatchTemplatePayments.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-template-payments`;\n  }\n\n  postBatchTemplates(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _draftOf = requestParameters[\"draftOf\"];\n    const _copyFrom = requestParameters[\"copyFrom\"];\n    const _name = requestParameters[\"name\"];\n    const _batchTemplatesPostRequest = requestParameters[\"batchTemplatesPostRequest\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_draftOf !== undefined && _draftOf !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _draftOf, 'draftOf');\n    }\n\n    if (_copyFrom !== undefined && _copyFrom !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _copyFrom, 'copyFrom');\n    }\n\n    if (_name !== undefined && _name !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _name, 'name');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v1/batch-templates`, _batchTemplatesPostRequest, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postBatchTemplatesUrl(requestParameters) {\n    const _draftOf = requestParameters[\"draftOf\"];\n    const _copyFrom = requestParameters[\"copyFrom\"];\n    const _name = requestParameters[\"name\"];\n    const _batchTemplatesPostRequest = requestParameters[\"batchTemplatesPostRequest\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_draftOf !== undefined && _draftOf !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _draftOf, 'draftOf');\n    }\n\n    if (_copyFrom !== undefined && _copyFrom !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _copyFrom, 'copyFrom');\n    }\n\n    if (_name !== undefined && _name !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _name, 'name');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v1/batch-templates${queryString ? `?${queryString}` : ''}`;\n  }\n\n  postBatchTemplatesFromAttributes(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchTemplatesAttributesPostRequest = requestParameters[\"batchTemplatesAttributesPostRequest\"];\n\n    if (_batchTemplatesAttributesPostRequest === null || _batchTemplatesAttributesPostRequest === undefined) {\n      throw new Error('Required parameter batchTemplatesAttributesPostRequest was null or undefined when calling postBatchTemplatesFromAttributes.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v1/batch-templates/from-attributes`, _batchTemplatesAttributesPostRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postBatchTemplatesFromAttributesUrl(requestParameters) {\n    const _batchTemplatesAttributesPostRequest = requestParameters[\"batchTemplatesAttributesPostRequest\"];\n\n    if (_batchTemplatesAttributesPostRequest === null || _batchTemplatesAttributesPostRequest === undefined) {\n      throw new Error('Required parameter batchTemplatesAttributesPostRequest was null or undefined when calling postBatchTemplatesFromAttributes.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v1/batch-templates/from-attributes`;\n  }\n\n  putBatchTemplatePaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n\n    if (_batchTemplateId === null || _batchTemplateId === undefined) {\n      throw new Error('Required parameter batchTemplateId was null or undefined when calling putBatchTemplatePaymentById.');\n    }\n\n    const _batchTemplatePaymentId = requestParameters[\"batchTemplatePaymentId\"];\n\n    if (_batchTemplatePaymentId === null || _batchTemplatePaymentId === undefined) {\n      throw new Error('Required parameter batchTemplatePaymentId was null or undefined when calling putBatchTemplatePaymentById.');\n    }\n\n    const _batchTemplatePaymentsPutRequest = requestParameters[\"batchTemplatePaymentsPutRequest\"];\n\n    if (_batchTemplatePaymentsPutRequest === null || _batchTemplatePaymentsPutRequest === undefined) {\n      throw new Error('Required parameter batchTemplatePaymentsPutRequest was null or undefined when calling putBatchTemplatePaymentById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-template-payments/${encodeURIComponent(String(_batchTemplatePaymentId))}`, _batchTemplatePaymentsPutRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putBatchTemplatePaymentByIdUrl(requestParameters) {\n    const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n\n    if (_batchTemplateId === null || _batchTemplateId === undefined) {\n      throw new Error('Required parameter batchTemplateId was null or undefined when calling putBatchTemplatePaymentById.');\n    }\n\n    const _batchTemplatePaymentId = requestParameters[\"batchTemplatePaymentId\"];\n\n    if (_batchTemplatePaymentId === null || _batchTemplatePaymentId === undefined) {\n      throw new Error('Required parameter batchTemplatePaymentId was null or undefined when calling putBatchTemplatePaymentById.');\n    }\n\n    const _batchTemplatePaymentsPutRequest = requestParameters[\"batchTemplatePaymentsPutRequest\"];\n\n    if (_batchTemplatePaymentsPutRequest === null || _batchTemplatePaymentsPutRequest === undefined) {\n      throw new Error('Required parameter batchTemplatePaymentsPutRequest was null or undefined when calling putBatchTemplatePaymentById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-template-payments/${encodeURIComponent(String(_batchTemplatePaymentId))}`;\n  }\n\n  updateBatchTemplateById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n\n    if (_batchTemplateId === null || _batchTemplateId === undefined) {\n      throw new Error('Required parameter batchTemplateId was null or undefined when calling updateBatchTemplateById.');\n    }\n\n    const _draftTemplateId = requestParameters[\"draftTemplateId\"];\n    const _batchTemplatesPutRequest = requestParameters[\"batchTemplatesPutRequest\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_draftTemplateId !== undefined && _draftTemplateId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _draftTemplateId, 'draftTemplateId');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}`, _batchTemplatesPutRequest, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  updateBatchTemplateByIdUrl(requestParameters) {\n    const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n\n    if (_batchTemplateId === null || _batchTemplateId === undefined) {\n      throw new Error('Required parameter batchTemplateId was null or undefined when calling updateBatchTemplateById.');\n    }\n\n    const _draftTemplateId = requestParameters[\"draftTemplateId\"];\n    const _batchTemplatesPutRequest = requestParameters[\"batchTemplatesPutRequest\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_draftTemplateId !== undefined && _draftTemplateId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _draftTemplateId, 'draftTemplateId');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}${queryString ? `?${queryString}` : ''}`;\n  }\n\n  updateBatchTemplateStatusById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n\n    if (_batchTemplateId === null || _batchTemplateId === undefined) {\n      throw new Error('Required parameter batchTemplateId was null or undefined when calling updateBatchTemplateStatusById.');\n    }\n\n    const _batchTemplatesStatusUpdateRequest = requestParameters[\"batchTemplatesStatusUpdateRequest\"];\n\n    if (_batchTemplatesStatusUpdateRequest === null || _batchTemplatesStatusUpdateRequest === undefined) {\n      throw new Error('Required parameter batchTemplatesStatusUpdateRequest was null or undefined when calling updateBatchTemplateStatusById.');\n    }\n\n    const _dryRun = requestParameters[\"dryRun\"];\n    const _intendedCreditTransactionsCount = requestParameters[\"intendedCreditTransactionsCount\"];\n    const _intendedDebitTransactionsCount = requestParameters[\"intendedDebitTransactionsCount\"];\n    const _intendedCreditAmount = requestParameters[\"intendedCreditAmount\"];\n    const _intendedDebitAmount = requestParameters[\"intendedDebitAmount\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_dryRun !== undefined && _dryRun !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _dryRun, 'dryRun');\n    }\n\n    if (_intendedCreditTransactionsCount !== undefined && _intendedCreditTransactionsCount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedCreditTransactionsCount, 'intendedCreditTransactionsCount');\n    }\n\n    if (_intendedDebitTransactionsCount !== undefined && _intendedDebitTransactionsCount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedDebitTransactionsCount, 'intendedDebitTransactionsCount');\n    }\n\n    if (_intendedCreditAmount !== undefined && _intendedCreditAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedCreditAmount, 'intendedCreditAmount');\n    }\n\n    if (_intendedDebitAmount !== undefined && _intendedDebitAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedDebitAmount, 'intendedDebitAmount');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/status`, _batchTemplatesStatusUpdateRequest, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  updateBatchTemplateStatusByIdUrl(requestParameters) {\n    const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n\n    if (_batchTemplateId === null || _batchTemplateId === undefined) {\n      throw new Error('Required parameter batchTemplateId was null or undefined when calling updateBatchTemplateStatusById.');\n    }\n\n    const _batchTemplatesStatusUpdateRequest = requestParameters[\"batchTemplatesStatusUpdateRequest\"];\n\n    if (_batchTemplatesStatusUpdateRequest === null || _batchTemplatesStatusUpdateRequest === undefined) {\n      throw new Error('Required parameter batchTemplatesStatusUpdateRequest was null or undefined when calling updateBatchTemplateStatusById.');\n    }\n\n    const _dryRun = requestParameters[\"dryRun\"];\n    const _intendedCreditTransactionsCount = requestParameters[\"intendedCreditTransactionsCount\"];\n    const _intendedDebitTransactionsCount = requestParameters[\"intendedDebitTransactionsCount\"];\n    const _intendedCreditAmount = requestParameters[\"intendedCreditAmount\"];\n    const _intendedDebitAmount = requestParameters[\"intendedDebitAmount\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_dryRun !== undefined && _dryRun !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _dryRun, 'dryRun');\n    }\n\n    if (_intendedCreditTransactionsCount !== undefined && _intendedCreditTransactionsCount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedCreditTransactionsCount, 'intendedCreditTransactionsCount');\n    }\n\n    if (_intendedDebitTransactionsCount !== undefined && _intendedDebitTransactionsCount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedDebitTransactionsCount, 'intendedDebitTransactionsCount');\n    }\n\n    if (_intendedCreditAmount !== undefined && _intendedCreditAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedCreditAmount, 'intendedCreditAmount');\n    }\n\n    if (_intendedDebitAmount !== undefined && _intendedDebitAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedDebitAmount, 'intendedDebitAmount');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/status${queryString ? `?${queryString}` : ''}`;\n  }\n\n  validateBatchTemplate(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n\n    if (_batchTemplateId === null || _batchTemplateId === undefined) {\n      throw new Error('Required parameter batchTemplateId was null or undefined when calling validateBatchTemplate.');\n    }\n\n    const _intendedCreditTransactionsCount = requestParameters[\"intendedCreditTransactionsCount\"];\n    const _intendedDebitTransactionsCount = requestParameters[\"intendedDebitTransactionsCount\"];\n    const _intendedCreditAmount = requestParameters[\"intendedCreditAmount\"];\n    const _intendedDebitAmount = requestParameters[\"intendedDebitAmount\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_intendedCreditTransactionsCount !== undefined && _intendedCreditTransactionsCount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedCreditTransactionsCount, 'intendedCreditTransactionsCount');\n    }\n\n    if (_intendedDebitTransactionsCount !== undefined && _intendedDebitTransactionsCount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedDebitTransactionsCount, 'intendedDebitTransactionsCount');\n    }\n\n    if (_intendedCreditAmount !== undefined && _intendedCreditAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedCreditAmount, 'intendedCreditAmount');\n    }\n\n    if (_intendedDebitAmount !== undefined && _intendedDebitAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedDebitAmount, 'intendedDebitAmount');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/validation-errors`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  validateBatchTemplateUrl(requestParameters) {\n    const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n\n    if (_batchTemplateId === null || _batchTemplateId === undefined) {\n      throw new Error('Required parameter batchTemplateId was null or undefined when calling validateBatchTemplate.');\n    }\n\n    const _intendedCreditTransactionsCount = requestParameters[\"intendedCreditTransactionsCount\"];\n    const _intendedDebitTransactionsCount = requestParameters[\"intendedDebitTransactionsCount\"];\n    const _intendedCreditAmount = requestParameters[\"intendedCreditAmount\"];\n    const _intendedDebitAmount = requestParameters[\"intendedDebitAmount\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_intendedCreditTransactionsCount !== undefined && _intendedCreditTransactionsCount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedCreditTransactionsCount, 'intendedCreditTransactionsCount');\n    }\n\n    if (_intendedDebitTransactionsCount !== undefined && _intendedDebitTransactionsCount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedDebitTransactionsCount, 'intendedDebitTransactionsCount');\n    }\n\n    if (_intendedCreditAmount !== undefined && _intendedCreditAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedCreditAmount, 'intendedCreditAmount');\n    }\n\n    if (_intendedDebitAmount !== undefined && _intendedDebitAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _intendedDebitAmount, 'intendedDebitAmount');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/validation-errors${queryString ? `?${queryString}` : ''}`;\n  }\n\n}\n\nBatchTemplatesHttpService.ɵfac = function BatchTemplatesHttpService_Factory(t) {\n  return new (t || BatchTemplatesHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(PAYMENT_BATCH_TEMPLATE_BASE_PATH, 8), i0.ɵɵinject(PaymentBatchTemplateConfiguration, 8));\n};\n\nBatchTemplatesHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BatchTemplatesHttpService,\n  factory: BatchTemplatesHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BatchTemplatesHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [PAYMENT_BATCH_TEMPLATE_BASE_PATH]\n      }]\n    }, {\n      type: PaymentBatchTemplateConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst BatchTemplatesHttpServiceCreateBatchOrderFromTemplateMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-order\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"id\": \"c1263fd6-8bd3-4a0b-be02-5db5cb1d6d06\",\n      \"name\": \"Europe branches cash distribution\",\n      \"type\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n      \"status\": \"DRAFT\",\n      \"creditDebitMixedIndicator\": \"CREDIT\",\n      \"totalCreditTransactionsCount\": 120,\n      \"totalCreditInstructedAmount\": {\n        \"amount\": \"322038.00\",\n        \"currencyCode\": \"USD\"\n      },\n      \"entryClass\": \"CCD\",\n      \"account\": {\n        \"name\": \"Main Current\",\n        \"identification\": {\n          \"identification\": \"4902331374\",\n          \"schemeName\": \"BBAN\"\n        }\n      },\n      \"companyId\": \"1800948594\",\n      \"companyName\": \"Your Company\",\n      \"bankBranchCode\": \"113105452\"\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchTemplatesHttpServiceDeleteBatchTemplateByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchTemplatesHttpServiceDeleteBatchTemplatePaymentByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments/{batchTemplatePaymentId}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch template not found\",\n      \"errors\": []\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch template payment not found\",\n      \"errors\": []\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict error\",\n      \"errors\": [{\n        \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n        \"key\": \"transactions.api.billingstatus.transaction\",\n        \"context\": {\n          \"billingStatus\": \"BILLED\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchTemplatesHttpServiceGetBatchTemplatePaymentsByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"batchTemplatePayments\": [{\n        \"id\": \"6c357c28-6714-11e7-907b-a6006ad3dcd0\",\n        \"counterpartyName\": \"A. Hamers\",\n        \"counterpartyAccountNumber\": \"5802354374\",\n        \"counterpartyBankBranchCode\": \"214105452\",\n        \"creditDebitIndicator\": \"DEBIT\",\n        \"instructedAmount\": {\n          \"amount\": \"4102.00\",\n          \"currencyCode\": \"USD\"\n        },\n        \"description\": \"Salary Mar 2021 empl.no:902713\"\n      }],\n      \"totalBatchTemplatePayments\": 1,\n      \"batchTemplate\": {\n        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"name\": \"Internal transfers Acme corp\",\n        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n        \"createdAt\": \"2019-05-10T10:29:10Z\",\n        \"createdBy\": \"U00243\",\n        \"canApply\": true,\n        \"canDelete\": true,\n        \"canEdit\": true,\n        \"canDuplicate\": true,\n        \"details\": {\n          \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n          \"batchName\": \"Europe branches cash distribution\",\n          \"creditDebitMixedIndicator\": \"CREDIT\",\n          \"totalCreditTransactionsCount\": 120,\n          \"totalCreditInstructedAmount\": {\n            \"amount\": \"4102.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"entryClass\": \"CCD\",\n          \"originatorAccount\": {\n            \"name\": \"Main Current\",\n            \"identification\": {\n              \"identification\": \"4902331374\",\n              \"schemeName\": \"BBAN\"\n            }\n          },\n          \"companyId\": \"1800948594\",\n          \"companyName\": \"Your Company\",\n          \"bankBranchCode\": \"113105452\"\n        }\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchTemplatesHttpServiceGetBatchTemplatesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/batch-templates\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"batchTemplates\": [{\n        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"name\": \"Internal transfers Acme corp\",\n        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n        \"createdAt\": \"2019-05-10T10:29:10Z\",\n        \"createdBy\": \"Ulli Ulrich\",\n        \"updatedAt\": \"2021-05-10T10:29:10Z\",\n        \"updatedBy\": \"Jinnu Ulrich\",\n        \"canApply\": true,\n        \"canDelete\": true,\n        \"canEdit\": true,\n        \"canDuplicate\": true,\n        \"details\": {\n          \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n          \"batchName\": \"Europe branches cash distribution\",\n          \"creditDebitMixedIndicator\": \"CREDIT\",\n          \"totalCreditTransactionsCount\": 120,\n          \"totalCreditInstructedAmount\": {\n            \"amount\": \"322038.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"entryClass\": \"CCD\",\n          \"originatorAccount\": {\n            \"name\": \"Main Current\",\n            \"identification\": {\n              \"identification\": \"4902331374\",\n              \"schemeName\": \"BBAN\"\n            }\n          },\n          \"companyId\": \"1800948594\",\n          \"companyName\": \"Your Company\",\n          \"bankBranchCode\": \"113105452\"\n        }\n      }],\n      \"totalBatchTemplates\": 1,\n      \"creditDebitMixedIndicator\": \"CREDIT\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchTemplatesHttpServicePostBatchTemplatePaymentsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"id\": \"6c357c28-6714-11e7-907b-a6006ad3dcd0\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict error\",\n      \"errors\": [{\n        \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n        \"key\": \"transactions.api.billingstatus.transaction\",\n        \"context\": {\n          \"billingStatus\": \"BILLED\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch template not found\",\n      \"errors\": []\n    }\n  }]\n}]);\nconst BatchTemplatesHttpServicePostBatchTemplatesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/batch-templates\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"batchTemplate\": {\n        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"name\": \"Internal transfers Acme corp\",\n        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n        \"status\": \"AVAILABLE\",\n        \"createdAt\": \"2019-05-10T10:29:10Z\",\n        \"createdBy\": \"Uli Ulrich\",\n        \"details\": {\n          \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n          \"batchName\": \"Europe branches cash distribution\",\n          \"creditDebitMixedIndicator\": \"CREDIT\",\n          \"totalCreditTransactionsCount\": 120,\n          \"totalCreditInstructedAmount\": {\n            \"amount\": \"322038.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"entryClass\": \"CCD\",\n          \"originatorAccount\": {\n            \"name\": \"Main Current\",\n            \"identification\": {\n              \"identification\": \"4902331374\",\n              \"schemeName\": \"BBAN\"\n            }\n          },\n          \"companyId\": \"1800948594\",\n          \"companyName\": \"Your Company\",\n          \"bankBranchCode\": \"113105452\"\n        }\n      }\n    }\n  }, {\n    status: 201,\n    body: {\n      \"batchTemplate\": {\n        \"id\": \"7c341c49-6344-22e7-907b-b6006ad3ecd0\",\n        \"name\": \"Internal transfers Acme corp\",\n        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n        \"status\": \"DRAFT\",\n        \"details\": {\n          \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n          \"batchName\": \"Europe branches cash distribution\",\n          \"creditDebitMixedIndicator\": \"CREDIT\",\n          \"totalCreditTransactionsCount\": 120,\n          \"totalCreditInstructedAmount\": {\n            \"amount\": \"322038.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"entryClass\": \"CCD\",\n          \"originatorAccount\": {\n            \"name\": \"Main Current\",\n            \"identification\": {\n              \"identification\": \"4902331374\",\n              \"schemeName\": \"BBAN\"\n            }\n          },\n          \"companyId\": \"1800948594\",\n          \"companyName\": \"Your Company\",\n          \"bankBranchCode\": \"113105452\"\n        }\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchTemplatesHttpServicePostBatchTemplatesFromAttributesMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/batch-templates/from-attributes\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"id\": \"7c341c49-6344-22e7-907b-b6006ad3ecd0\",\n      \"status\": \"DRAFT\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchTemplatesHttpServicePutBatchTemplatePaymentByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments/{batchTemplatePaymentId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"6c357c28-6714-11e7-907b-a6006ad3dcd0\",\n      \"counterpartyName\": \"A. Hamers\",\n      \"counterpartyAccountNumber\": \"5802354374\",\n      \"counterpartyBankBranchCode\": \"214105452\",\n      \"creditDebitIndicator\": \"CREDIT\",\n      \"instructedAmount\": {\n        \"amount\": \"4102.00\",\n        \"currencyCode\": \"USD\"\n      },\n      \"description\": \"Salary Mar 2021 empl.no:902713\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch template not found\",\n      \"errors\": []\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch template payment not found\",\n      \"errors\": []\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict error\",\n      \"errors\": [{\n        \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n        \"key\": \"transactions.api.billingstatus.transaction\",\n        \"context\": {\n          \"billingStatus\": \"BILLED\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchTemplatesHttpServiceUpdateBatchTemplateByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"batchTemplate\": {\n        \"id\": \"7c341c49-6344-22e7-907b-b6006ad3ecd0\",\n        \"name\": \"Internal transfers Acme corp\",\n        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n        \"status\": \"DRAFT\",\n        \"details\": {\n          \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n          \"batchName\": \"Europe branches cash distribution\",\n          \"creditDebitMixedIndicator\": \"CREDIT\",\n          \"totalCreditTransactionsCount\": 120,\n          \"totalCreditInstructedAmount\": {\n            \"amount\": \"322038.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"entryClass\": \"CCD\",\n          \"originatorAccount\": {\n            \"name\": \"Main Current\",\n            \"identification\": {\n              \"identification\": \"4902331374\",\n              \"schemeName\": \"BBAN\"\n            }\n          },\n          \"companyId\": \"1800948594\",\n          \"companyName\": \"Your Company\",\n          \"bankBranchCode\": \"113105452\"\n        }\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"batchTemplate\": {\n        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"name\": \"Internal transfers Acme corp\",\n        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n        \"status\": \"AVAILABLE\",\n        \"createdAt\": \"2019-05-10T10:29:10Z\",\n        \"createdBy\": \"Ulli Ulrich\",\n        \"updatedAt\": \"2021-05-10T10:29:10Z\",\n        \"updatedBy\": \"Jinnu Ulrich\",\n        \"details\": {\n          \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n          \"batchName\": \"Europe branches cash distribution\",\n          \"creditDebitMixedIndicator\": \"CREDIT\",\n          \"totalCreditTransactionsCount\": 120,\n          \"totalCreditInstructedAmount\": {\n            \"amount\": \"322038.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"entryClass\": \"CCD\",\n          \"originatorAccount\": {\n            \"name\": \"Main Current\",\n            \"identification\": {\n              \"identification\": \"4902331374\",\n              \"schemeName\": \"BBAN\"\n            }\n          },\n          \"companyId\": \"1800948594\",\n          \"companyName\": \"Your Company\",\n          \"bankBranchCode\": \"113105452\"\n        }\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict error\",\n      \"errors\": [{\n        \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n        \"key\": \"transactions.api.billingstatus.transaction\",\n        \"context\": {\n          \"billingStatus\": \"BILLED\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchTemplatesHttpServiceUpdateBatchTemplateStatusByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/status\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"batchTemplate\": {\n        \"id\": \"7c341c49-6344-22e7-907b-b6006ad3ecd0\",\n        \"name\": \"Internal transfers Acme corp\",\n        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n        \"status\": \"DRAFT\",\n        \"details\": {\n          \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n          \"batchName\": \"Europe branches cash distribution\",\n          \"creditDebitMixedIndicator\": \"CREDIT\",\n          \"totalCreditTransactionsCount\": 120,\n          \"totalCreditInstructedAmount\": {\n            \"amount\": \"322038.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"entryClass\": \"CCD\",\n          \"originatorAccount\": {\n            \"name\": \"Main Current\",\n            \"identification\": {\n              \"identification\": \"4902331374\",\n              \"schemeName\": \"BBAN\"\n            }\n          },\n          \"companyId\": \"1800948594\",\n          \"companyName\": \"Your Company\",\n          \"bankBranchCode\": \"113105452\"\n        }\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict error\",\n      \"errors\": [{\n        \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n        \"key\": \"transactions.api.billingstatus.transaction\",\n        \"context\": {\n          \"billingStatus\": \"BILLED\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchTemplatesHttpServiceValidateBatchTemplateMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/validation-errors\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"message\": \"Total credit transactions count {{totalCreditTransactionsCount}} does not match the intended total credit transactions count {{intendedTotalCreditTransactionsCount}}.\",\n      \"key\": \"TotalCreditTransactionsCountMismatch\",\n      \"context\": {\n        \"intendedTotalCreditTransactionsCount\": \"10000\",\n        \"totalCreditTransactionsCount\": \"2\"\n      }\n    }]\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict error\",\n      \"errors\": [{\n        \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n        \"key\": \"transactions.api.billingstatus.transaction\",\n        \"context\": {\n          \"billingStatus\": \"BILLED\"\n        }\n      }]\n    }\n  }]\n}]);\nconst BatchTemplatesHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-order\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"id\": \"c1263fd6-8bd3-4a0b-be02-5db5cb1d6d06\",\n      \"name\": \"Europe branches cash distribution\",\n      \"type\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n      \"status\": \"DRAFT\",\n      \"creditDebitMixedIndicator\": \"CREDIT\",\n      \"totalCreditTransactionsCount\": 120,\n      \"totalCreditInstructedAmount\": {\n        \"amount\": \"322038.00\",\n        \"currencyCode\": \"USD\"\n      },\n      \"entryClass\": \"CCD\",\n      \"account\": {\n        \"name\": \"Main Current\",\n        \"identification\": {\n          \"identification\": \"4902331374\",\n          \"schemeName\": \"BBAN\"\n        }\n      },\n      \"companyId\": \"1800948594\",\n      \"companyName\": \"Your Company\",\n      \"bankBranchCode\": \"113105452\"\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments/{batchTemplatePaymentId}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch template not found\",\n      \"errors\": []\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch template payment not found\",\n      \"errors\": []\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict error\",\n      \"errors\": [{\n        \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n        \"key\": \"transactions.api.billingstatus.transaction\",\n        \"context\": {\n          \"billingStatus\": \"BILLED\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"batchTemplatePayments\": [{\n        \"id\": \"6c357c28-6714-11e7-907b-a6006ad3dcd0\",\n        \"counterpartyName\": \"A. Hamers\",\n        \"counterpartyAccountNumber\": \"5802354374\",\n        \"counterpartyBankBranchCode\": \"214105452\",\n        \"creditDebitIndicator\": \"DEBIT\",\n        \"instructedAmount\": {\n          \"amount\": \"4102.00\",\n          \"currencyCode\": \"USD\"\n        },\n        \"description\": \"Salary Mar 2021 empl.no:902713\"\n      }],\n      \"totalBatchTemplatePayments\": 1,\n      \"batchTemplate\": {\n        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"name\": \"Internal transfers Acme corp\",\n        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n        \"createdAt\": \"2019-05-10T10:29:10Z\",\n        \"createdBy\": \"U00243\",\n        \"canApply\": true,\n        \"canDelete\": true,\n        \"canEdit\": true,\n        \"canDuplicate\": true,\n        \"details\": {\n          \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n          \"batchName\": \"Europe branches cash distribution\",\n          \"creditDebitMixedIndicator\": \"CREDIT\",\n          \"totalCreditTransactionsCount\": 120,\n          \"totalCreditInstructedAmount\": {\n            \"amount\": \"4102.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"entryClass\": \"CCD\",\n          \"originatorAccount\": {\n            \"name\": \"Main Current\",\n            \"identification\": {\n              \"identification\": \"4902331374\",\n              \"schemeName\": \"BBAN\"\n            }\n          },\n          \"companyId\": \"1800948594\",\n          \"companyName\": \"Your Company\",\n          \"bankBranchCode\": \"113105452\"\n        }\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/batch-templates\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"batchTemplates\": [{\n        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"name\": \"Internal transfers Acme corp\",\n        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n        \"createdAt\": \"2019-05-10T10:29:10Z\",\n        \"createdBy\": \"Ulli Ulrich\",\n        \"updatedAt\": \"2021-05-10T10:29:10Z\",\n        \"updatedBy\": \"Jinnu Ulrich\",\n        \"canApply\": true,\n        \"canDelete\": true,\n        \"canEdit\": true,\n        \"canDuplicate\": true,\n        \"details\": {\n          \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n          \"batchName\": \"Europe branches cash distribution\",\n          \"creditDebitMixedIndicator\": \"CREDIT\",\n          \"totalCreditTransactionsCount\": 120,\n          \"totalCreditInstructedAmount\": {\n            \"amount\": \"322038.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"entryClass\": \"CCD\",\n          \"originatorAccount\": {\n            \"name\": \"Main Current\",\n            \"identification\": {\n              \"identification\": \"4902331374\",\n              \"schemeName\": \"BBAN\"\n            }\n          },\n          \"companyId\": \"1800948594\",\n          \"companyName\": \"Your Company\",\n          \"bankBranchCode\": \"113105452\"\n        }\n      }],\n      \"totalBatchTemplates\": 1,\n      \"creditDebitMixedIndicator\": \"CREDIT\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"id\": \"6c357c28-6714-11e7-907b-a6006ad3dcd0\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict error\",\n      \"errors\": [{\n        \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n        \"key\": \"transactions.api.billingstatus.transaction\",\n        \"context\": {\n          \"billingStatus\": \"BILLED\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch template not found\",\n      \"errors\": []\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/batch-templates\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"batchTemplate\": {\n        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"name\": \"Internal transfers Acme corp\",\n        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n        \"status\": \"AVAILABLE\",\n        \"createdAt\": \"2019-05-10T10:29:10Z\",\n        \"createdBy\": \"Uli Ulrich\",\n        \"details\": {\n          \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n          \"batchName\": \"Europe branches cash distribution\",\n          \"creditDebitMixedIndicator\": \"CREDIT\",\n          \"totalCreditTransactionsCount\": 120,\n          \"totalCreditInstructedAmount\": {\n            \"amount\": \"322038.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"entryClass\": \"CCD\",\n          \"originatorAccount\": {\n            \"name\": \"Main Current\",\n            \"identification\": {\n              \"identification\": \"4902331374\",\n              \"schemeName\": \"BBAN\"\n            }\n          },\n          \"companyId\": \"1800948594\",\n          \"companyName\": \"Your Company\",\n          \"bankBranchCode\": \"113105452\"\n        }\n      }\n    }\n  }, {\n    status: 201,\n    body: {\n      \"batchTemplate\": {\n        \"id\": \"7c341c49-6344-22e7-907b-b6006ad3ecd0\",\n        \"name\": \"Internal transfers Acme corp\",\n        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n        \"status\": \"DRAFT\",\n        \"details\": {\n          \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n          \"batchName\": \"Europe branches cash distribution\",\n          \"creditDebitMixedIndicator\": \"CREDIT\",\n          \"totalCreditTransactionsCount\": 120,\n          \"totalCreditInstructedAmount\": {\n            \"amount\": \"322038.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"entryClass\": \"CCD\",\n          \"originatorAccount\": {\n            \"name\": \"Main Current\",\n            \"identification\": {\n              \"identification\": \"4902331374\",\n              \"schemeName\": \"BBAN\"\n            }\n          },\n          \"companyId\": \"1800948594\",\n          \"companyName\": \"Your Company\",\n          \"bankBranchCode\": \"113105452\"\n        }\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/batch-templates/from-attributes\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"id\": \"7c341c49-6344-22e7-907b-b6006ad3ecd0\",\n      \"status\": \"DRAFT\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments/{batchTemplatePaymentId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"6c357c28-6714-11e7-907b-a6006ad3dcd0\",\n      \"counterpartyName\": \"A. Hamers\",\n      \"counterpartyAccountNumber\": \"5802354374\",\n      \"counterpartyBankBranchCode\": \"214105452\",\n      \"creditDebitIndicator\": \"CREDIT\",\n      \"instructedAmount\": {\n        \"amount\": \"4102.00\",\n        \"currencyCode\": \"USD\"\n      },\n      \"description\": \"Salary Mar 2021 empl.no:902713\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch template not found\",\n      \"errors\": []\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Batch template payment not found\",\n      \"errors\": []\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict error\",\n      \"errors\": [{\n        \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n        \"key\": \"transactions.api.billingstatus.transaction\",\n        \"context\": {\n          \"billingStatus\": \"BILLED\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"batchTemplate\": {\n        \"id\": \"7c341c49-6344-22e7-907b-b6006ad3ecd0\",\n        \"name\": \"Internal transfers Acme corp\",\n        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n        \"status\": \"DRAFT\",\n        \"details\": {\n          \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n          \"batchName\": \"Europe branches cash distribution\",\n          \"creditDebitMixedIndicator\": \"CREDIT\",\n          \"totalCreditTransactionsCount\": 120,\n          \"totalCreditInstructedAmount\": {\n            \"amount\": \"322038.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"entryClass\": \"CCD\",\n          \"originatorAccount\": {\n            \"name\": \"Main Current\",\n            \"identification\": {\n              \"identification\": \"4902331374\",\n              \"schemeName\": \"BBAN\"\n            }\n          },\n          \"companyId\": \"1800948594\",\n          \"companyName\": \"Your Company\",\n          \"bankBranchCode\": \"113105452\"\n        }\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"batchTemplate\": {\n        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n        \"name\": \"Internal transfers Acme corp\",\n        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n        \"status\": \"AVAILABLE\",\n        \"createdAt\": \"2019-05-10T10:29:10Z\",\n        \"createdBy\": \"Ulli Ulrich\",\n        \"updatedAt\": \"2021-05-10T10:29:10Z\",\n        \"updatedBy\": \"Jinnu Ulrich\",\n        \"details\": {\n          \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n          \"batchName\": \"Europe branches cash distribution\",\n          \"creditDebitMixedIndicator\": \"CREDIT\",\n          \"totalCreditTransactionsCount\": 120,\n          \"totalCreditInstructedAmount\": {\n            \"amount\": \"322038.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"entryClass\": \"CCD\",\n          \"originatorAccount\": {\n            \"name\": \"Main Current\",\n            \"identification\": {\n              \"identification\": \"4902331374\",\n              \"schemeName\": \"BBAN\"\n            }\n          },\n          \"companyId\": \"1800948594\",\n          \"companyName\": \"Your Company\",\n          \"bankBranchCode\": \"113105452\"\n        }\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict error\",\n      \"errors\": [{\n        \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n        \"key\": \"transactions.api.billingstatus.transaction\",\n        \"context\": {\n          \"billingStatus\": \"BILLED\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/status\",\n  method: \"PUT\",\n  responses: [{\n    status: 200,\n    body: {\n      \"batchTemplate\": {\n        \"id\": \"7c341c49-6344-22e7-907b-b6006ad3ecd0\",\n        \"name\": \"Internal transfers Acme corp\",\n        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n        \"status\": \"DRAFT\",\n        \"details\": {\n          \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n          \"batchName\": \"Europe branches cash distribution\",\n          \"creditDebitMixedIndicator\": \"CREDIT\",\n          \"totalCreditTransactionsCount\": 120,\n          \"totalCreditInstructedAmount\": {\n            \"amount\": \"322038.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"entryClass\": \"CCD\",\n          \"originatorAccount\": {\n            \"name\": \"Main Current\",\n            \"identification\": {\n              \"identification\": \"4902331374\",\n              \"schemeName\": \"BBAN\"\n            }\n          },\n          \"companyId\": \"1800948594\",\n          \"companyName\": \"Your Company\",\n          \"bankBranchCode\": \"113105452\"\n        }\n      }\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict error\",\n      \"errors\": [{\n        \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n        \"key\": \"transactions.api.billingstatus.transaction\",\n        \"context\": {\n          \"billingStatus\": \"BILLED\"\n        }\n      }]\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/validation-errors\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"message\": \"Total credit transactions count {{totalCreditTransactionsCount}} does not match the intended total credit transactions count {{intendedTotalCreditTransactionsCount}}.\",\n      \"key\": \"TotalCreditTransactionsCountMismatch\",\n      \"context\": {\n        \"intendedTotalCreditTransactionsCount\": \"10000\",\n        \"totalCreditTransactionsCount\": \"2\"\n      }\n    }]\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 409,\n    body: {\n      \"message\": \"Conflict error\",\n      \"errors\": [{\n        \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n        \"key\": \"transactions.api.billingstatus.transaction\",\n        \"context\": {\n          \"billingStatus\": \"BILLED\"\n        }\n      }]\n    }\n  }]\n}]);\nexport { BatchStatus, BatchTemplateStatus, BatchTemplatesHttpService, BatchTemplatesHttpServiceCreateBatchOrderFromTemplateMocksProvider, BatchTemplatesHttpServiceDeleteBatchTemplateByIdMocksProvider, BatchTemplatesHttpServiceDeleteBatchTemplatePaymentByIdMocksProvider, BatchTemplatesHttpServiceGetBatchTemplatePaymentsByIdMocksProvider, BatchTemplatesHttpServiceGetBatchTemplatesMocksProvider, BatchTemplatesHttpServiceMocksProvider, BatchTemplatesHttpServicePostBatchTemplatePaymentsMocksProvider, BatchTemplatesHttpServicePostBatchTemplatesFromAttributesMocksProvider, BatchTemplatesHttpServicePostBatchTemplatesMocksProvider, BatchTemplatesHttpServicePutBatchTemplatePaymentByIdMocksProvider, BatchTemplatesHttpServiceUpdateBatchTemplateByIdMocksProvider, BatchTemplatesHttpServiceUpdateBatchTemplateStatusByIdMocksProvider, BatchTemplatesHttpServiceValidateBatchTemplateMocksProvider, COLLECTION_FORMATS, CONFIG_TOKEN, CreditDebitIndicator, CreditDebitMixedIndicator, PAYMENT_BATCH_TEMPLATE_BASE_PATH, PaymentBatchTemplateApiModule, PaymentBatchTemplateConfiguration, SchemeNames };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/payment-batch-template-http-ang/fesm2015/backbase-payment-batch-template-http-ang.js"],"names":["i0","InjectionToken","NgModule","Optional","SkipSelf","Injectable","Inject","i1","HttpHeaders","HttpParams","i2","createMocks","BatchStatus","OPEN","CLOSED","DRAFT","INVALID","VALID","ENTERED","REJECTED","CANCELLED","READY","ACKNOWLEDGED","DOWNLOADING","ACCEPTED","PROCESSED","BatchTemplateStatus","AVAILABLE","CreditDebitIndicator","CREDIT","DEBIT","CreditDebitMixedIndicator","MIXED","SchemeNames","IBAN","BBAN","ID","EXTERNALID","EMAIL","MOBILE","PAYMENT_BATCH_TEMPLATE_BASE_PATH","COLLECTION_FORMATS","PaymentBatchTemplateConfiguration","constructor","configurationParameters","apiKeys","username","password","accessToken","basePath","withCredentials","encoder","credentials","selectHeaderContentType","contentTypes","length","undefined","type","find","x","isJsonMime","selectHeaderAccept","accepts","mime","jsonMime","RegExp","test","toLowerCase","lookupCredential","key","value","CONFIG_TOKEN","PaymentBatchTemplateApiModule","parentModule","http","dataModulesManager","config","Error","setModuleConfig","apiRoot","servicePath","headers","forRoot","configurationFactory","ngModule","providers","provide","useFactory","ɵfac","HttpClient","DataModulesManager","ɵmod","ɵinj","args","imports","declarations","exports","decorators","CustomHttpParameterCodec","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeURIComponent","decodeValue","BatchTemplatesHttpService","httpClient","configuration","defaultHeaders","addToHttpParams","httpParams","Date","addToHttpParamsRecursive","Array","isArray","forEach","elem","append","toISOString","substr","Object","keys","createBatchOrderFromTemplate","requestParameters","observe","reportProgress","options","_batchTemplateId","httpHeaderAcceptSelected","httpHeaderAccept","httpHeaderAccepts","set","responseType","startsWith","post","String","createBatchOrderFromTemplateUrl","deleteBatchTemplateById","delete","deleteBatchTemplateByIdUrl","deleteBatchTemplatePaymentById","_batchTemplatePaymentId","deleteBatchTemplatePaymentByIdUrl","getBatchTemplatePaymentsById","_from","_size","_privilegesToCheck","queryParameters","element","get","params","getBatchTemplatePaymentsByIdUrl","queryString","toString","getBatchTemplates","_query","_batchType","_creditDebitMixedIndicator","getBatchTemplatesUrl","postBatchTemplatePayments","_batchTemplatePaymentsPostRequest","consumes","httpContentTypeSelected","postBatchTemplatePaymentsUrl","postBatchTemplates","_draftOf","_copyFrom","_name","_batchTemplatesPostRequest","postBatchTemplatesUrl","postBatchTemplatesFromAttributes","_batchTemplatesAttributesPostRequest","postBatchTemplatesFromAttributesUrl","putBatchTemplatePaymentById","_batchTemplatePaymentsPutRequest","put","putBatchTemplatePaymentByIdUrl","updateBatchTemplateById","_draftTemplateId","_batchTemplatesPutRequest","updateBatchTemplateByIdUrl","updateBatchTemplateStatusById","_batchTemplatesStatusUpdateRequest","_dryRun","_intendedCreditTransactionsCount","_intendedDebitTransactionsCount","_intendedCreditAmount","_intendedDebitAmount","updateBatchTemplateStatusByIdUrl","validateBatchTemplate","validateBatchTemplateUrl","ɵprov","providedIn","BatchTemplatesHttpServiceCreateBatchOrderFromTemplateMocksProvider","urlPattern","method","responses","status","body","BatchTemplatesHttpServiceDeleteBatchTemplateByIdMocksProvider","BatchTemplatesHttpServiceDeleteBatchTemplatePaymentByIdMocksProvider","BatchTemplatesHttpServiceGetBatchTemplatePaymentsByIdMocksProvider","BatchTemplatesHttpServiceGetBatchTemplatesMocksProvider","BatchTemplatesHttpServicePostBatchTemplatePaymentsMocksProvider","BatchTemplatesHttpServicePostBatchTemplatesMocksProvider","BatchTemplatesHttpServicePostBatchTemplatesFromAttributesMocksProvider","BatchTemplatesHttpServicePutBatchTemplatePaymentByIdMocksProvider","BatchTemplatesHttpServiceUpdateBatchTemplateByIdMocksProvider","BatchTemplatesHttpServiceUpdateBatchTemplateStatusByIdMocksProvider","BatchTemplatesHttpServiceValidateBatchTemplateMocksProvider","BatchTemplatesHttpServiceMocksProvider"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\n\nconst BatchStatus = {\n    OPEN: 'OPEN',\n    CLOSED: 'CLOSED',\n    DRAFT: 'DRAFT',\n    INVALID: 'INVALID',\n    VALID: 'VALID',\n    ENTERED: 'ENTERED',\n    REJECTED: 'REJECTED',\n    CANCELLED: 'CANCELLED',\n    READY: 'READY',\n    ACKNOWLEDGED: 'ACKNOWLEDGED',\n    DOWNLOADING: 'DOWNLOADING',\n    ACCEPTED: 'ACCEPTED',\n    PROCESSED: 'PROCESSED'\n};\n\nconst BatchTemplateStatus = {\n    DRAFT: 'DRAFT',\n    AVAILABLE: 'AVAILABLE'\n};\n\nconst CreditDebitIndicator = {\n    CREDIT: 'CREDIT',\n    DEBIT: 'DEBIT'\n};\n\nconst CreditDebitMixedIndicator = {\n    CREDIT: 'CREDIT',\n    DEBIT: 'DEBIT',\n    MIXED: 'MIXED'\n};\n\nconst SchemeNames = {\n    IBAN: 'IBAN',\n    BBAN: 'BBAN',\n    ID: 'ID',\n    EXTERNALID: 'EXTERNAL_ID',\n    EMAIL: 'EMAIL',\n    MOBILE: 'MOBILE'\n};\n\nconst PAYMENT_BATCH_TEMPLATE_BASE_PATH = new InjectionToken('PAYMENT_BATCH_TEMPLATE_BASE_PATH');\nconst COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n};\n\nclass PaymentBatchTemplateConfiguration {\n    constructor(configurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n    selectHeaderContentType(contentTypes) {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n        const type = contentTypes.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n    selectHeaderAccept(accepts) {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n        const type = accepts.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n    lookupCredential(key) {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\nconst CONFIG_TOKEN = new InjectionToken('api-data-module PaymentBatchTemplateConfiguration');\n\nclass PaymentBatchTemplateApiModule {\n    constructor(parentModule, http, dataModulesManager, config) {\n        if (parentModule) {\n            throw new Error('PaymentBatchTemplateApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n                'See also https://github.com/angular/angular/issues/20575');\n        }\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n    static forRoot(configurationFactory) {\n        return {\n            ngModule: PaymentBatchTemplateApiModule,\n            providers: [{ provide: PaymentBatchTemplateConfiguration, useFactory: configurationFactory }]\n        };\n    }\n}\nPaymentBatchTemplateApiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentBatchTemplateApiModule, deps: [{ token: PaymentBatchTemplateApiModule, optional: true, skipSelf: true }, { token: i1.HttpClient, optional: true }, { token: i2.DataModulesManager, optional: true }, { token: PaymentBatchTemplateConfiguration }], target: i0.ɵɵFactoryTarget.NgModule });\nPaymentBatchTemplateApiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentBatchTemplateApiModule });\nPaymentBatchTemplateApiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentBatchTemplateApiModule, providers: [], imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentBatchTemplateApiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [],\n                    exports: [],\n                    providers: []\n                }]\n        }], ctorParameters: function () { return [{ type: PaymentBatchTemplateApiModule, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DataModulesManager, decorators: [{\n                    type: Optional\n                }] }, { type: PaymentBatchTemplateConfiguration }]; } });\n\nclass CustomHttpParameterCodec {\n    encodeKey(k) {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v) {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k) {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v) {\n        return decodeURIComponent(v);\n    }\n}\n\nclass BatchTemplatesHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new PaymentBatchTemplateConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    createBatchOrderFromTemplate(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n        if (_batchTemplateId === null || _batchTemplateId === undefined) {\n            throw new Error('Required parameter batchTemplateId was null or undefined when calling createBatchOrderFromTemplate.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-order`, null, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    createBatchOrderFromTemplateUrl(requestParameters) {\n        const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n        if (_batchTemplateId === null || _batchTemplateId === undefined) {\n            throw new Error('Required parameter batchTemplateId was null or undefined when calling createBatchOrderFromTemplate.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-order`;\n    }\n    deleteBatchTemplateById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n        if (_batchTemplateId === null || _batchTemplateId === undefined) {\n            throw new Error('Required parameter batchTemplateId was null or undefined when calling deleteBatchTemplateById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deleteBatchTemplateByIdUrl(requestParameters) {\n        const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n        if (_batchTemplateId === null || _batchTemplateId === undefined) {\n            throw new Error('Required parameter batchTemplateId was null or undefined when calling deleteBatchTemplateById.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}`;\n    }\n    deleteBatchTemplatePaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n        if (_batchTemplateId === null || _batchTemplateId === undefined) {\n            throw new Error('Required parameter batchTemplateId was null or undefined when calling deleteBatchTemplatePaymentById.');\n        }\n        const _batchTemplatePaymentId = requestParameters[\"batchTemplatePaymentId\"];\n        if (_batchTemplatePaymentId === null || _batchTemplatePaymentId === undefined) {\n            throw new Error('Required parameter batchTemplatePaymentId was null or undefined when calling deleteBatchTemplatePaymentById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-template-payments/${encodeURIComponent(String(_batchTemplatePaymentId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deleteBatchTemplatePaymentByIdUrl(requestParameters) {\n        const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n        if (_batchTemplateId === null || _batchTemplateId === undefined) {\n            throw new Error('Required parameter batchTemplateId was null or undefined when calling deleteBatchTemplatePaymentById.');\n        }\n        const _batchTemplatePaymentId = requestParameters[\"batchTemplatePaymentId\"];\n        if (_batchTemplatePaymentId === null || _batchTemplatePaymentId === undefined) {\n            throw new Error('Required parameter batchTemplatePaymentId was null or undefined when calling deleteBatchTemplatePaymentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-template-payments/${encodeURIComponent(String(_batchTemplatePaymentId))}`;\n    }\n    getBatchTemplatePaymentsById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n        if (_batchTemplateId === null || _batchTemplateId === undefined) {\n            throw new Error('Required parameter batchTemplateId was null or undefined when calling getBatchTemplatePaymentsById.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _privilegesToCheck = requestParameters[\"privilegesToCheck\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        if (_privilegesToCheck) {\n            _privilegesToCheck.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters, element, 'privilegesToCheck');\n            });\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-template-payments`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getBatchTemplatePaymentsByIdUrl(requestParameters) {\n        const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n        if (_batchTemplateId === null || _batchTemplateId === undefined) {\n            throw new Error('Required parameter batchTemplateId was null or undefined when calling getBatchTemplatePaymentsById.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _privilegesToCheck = requestParameters[\"privilegesToCheck\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        if (_privilegesToCheck) {\n            _privilegesToCheck.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters, element, 'privilegesToCheck');\n            });\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-template-payments${queryString ? `?${queryString}` : ''}`;\n    }\n    getBatchTemplates(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _batchType = requestParameters[\"batchType\"];\n        const _creditDebitMixedIndicator = requestParameters[\"creditDebitMixedIndicator\"];\n        const _privilegesToCheck = requestParameters[\"privilegesToCheck\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_query !== undefined && _query !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        if (_batchType !== undefined && _batchType !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _batchType, 'batchType');\n        }\n        if (_creditDebitMixedIndicator !== undefined && _creditDebitMixedIndicator !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _creditDebitMixedIndicator, 'creditDebitMixedIndicator');\n        }\n        if (_privilegesToCheck) {\n            _privilegesToCheck.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters, element, 'privilegesToCheck');\n            });\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/batch-templates`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getBatchTemplatesUrl(requestParameters) {\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _batchType = requestParameters[\"batchType\"];\n        const _creditDebitMixedIndicator = requestParameters[\"creditDebitMixedIndicator\"];\n        const _privilegesToCheck = requestParameters[\"privilegesToCheck\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_query !== undefined && _query !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        if (_batchType !== undefined && _batchType !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _batchType, 'batchType');\n        }\n        if (_creditDebitMixedIndicator !== undefined && _creditDebitMixedIndicator !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _creditDebitMixedIndicator, 'creditDebitMixedIndicator');\n        }\n        if (_privilegesToCheck) {\n            _privilegesToCheck.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters, element, 'privilegesToCheck');\n            });\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/batch-templates${queryString ? `?${queryString}` : ''}`;\n    }\n    postBatchTemplatePayments(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n        if (_batchTemplateId === null || _batchTemplateId === undefined) {\n            throw new Error('Required parameter batchTemplateId was null or undefined when calling postBatchTemplatePayments.');\n        }\n        const _batchTemplatePaymentsPostRequest = requestParameters[\"batchTemplatePaymentsPostRequest\"];\n        if (_batchTemplatePaymentsPostRequest === null || _batchTemplatePaymentsPostRequest === undefined) {\n            throw new Error('Required parameter batchTemplatePaymentsPostRequest was null or undefined when calling postBatchTemplatePayments.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-template-payments`, _batchTemplatePaymentsPostRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postBatchTemplatePaymentsUrl(requestParameters) {\n        const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n        if (_batchTemplateId === null || _batchTemplateId === undefined) {\n            throw new Error('Required parameter batchTemplateId was null or undefined when calling postBatchTemplatePayments.');\n        }\n        const _batchTemplatePaymentsPostRequest = requestParameters[\"batchTemplatePaymentsPostRequest\"];\n        if (_batchTemplatePaymentsPostRequest === null || _batchTemplatePaymentsPostRequest === undefined) {\n            throw new Error('Required parameter batchTemplatePaymentsPostRequest was null or undefined when calling postBatchTemplatePayments.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-template-payments`;\n    }\n    postBatchTemplates(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _draftOf = requestParameters[\"draftOf\"];\n        const _copyFrom = requestParameters[\"copyFrom\"];\n        const _name = requestParameters[\"name\"];\n        const _batchTemplatesPostRequest = requestParameters[\"batchTemplatesPostRequest\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_draftOf !== undefined && _draftOf !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _draftOf, 'draftOf');\n        }\n        if (_copyFrom !== undefined && _copyFrom !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _copyFrom, 'copyFrom');\n        }\n        if (_name !== undefined && _name !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _name, 'name');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v1/batch-templates`, _batchTemplatesPostRequest, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postBatchTemplatesUrl(requestParameters) {\n        const _draftOf = requestParameters[\"draftOf\"];\n        const _copyFrom = requestParameters[\"copyFrom\"];\n        const _name = requestParameters[\"name\"];\n        const _batchTemplatesPostRequest = requestParameters[\"batchTemplatesPostRequest\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_draftOf !== undefined && _draftOf !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _draftOf, 'draftOf');\n        }\n        if (_copyFrom !== undefined && _copyFrom !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _copyFrom, 'copyFrom');\n        }\n        if (_name !== undefined && _name !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _name, 'name');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/batch-templates${queryString ? `?${queryString}` : ''}`;\n    }\n    postBatchTemplatesFromAttributes(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchTemplatesAttributesPostRequest = requestParameters[\"batchTemplatesAttributesPostRequest\"];\n        if (_batchTemplatesAttributesPostRequest === null || _batchTemplatesAttributesPostRequest === undefined) {\n            throw new Error('Required parameter batchTemplatesAttributesPostRequest was null or undefined when calling postBatchTemplatesFromAttributes.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v1/batch-templates/from-attributes`, _batchTemplatesAttributesPostRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postBatchTemplatesFromAttributesUrl(requestParameters) {\n        const _batchTemplatesAttributesPostRequest = requestParameters[\"batchTemplatesAttributesPostRequest\"];\n        if (_batchTemplatesAttributesPostRequest === null || _batchTemplatesAttributesPostRequest === undefined) {\n            throw new Error('Required parameter batchTemplatesAttributesPostRequest was null or undefined when calling postBatchTemplatesFromAttributes.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/batch-templates/from-attributes`;\n    }\n    putBatchTemplatePaymentById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n        if (_batchTemplateId === null || _batchTemplateId === undefined) {\n            throw new Error('Required parameter batchTemplateId was null or undefined when calling putBatchTemplatePaymentById.');\n        }\n        const _batchTemplatePaymentId = requestParameters[\"batchTemplatePaymentId\"];\n        if (_batchTemplatePaymentId === null || _batchTemplatePaymentId === undefined) {\n            throw new Error('Required parameter batchTemplatePaymentId was null or undefined when calling putBatchTemplatePaymentById.');\n        }\n        const _batchTemplatePaymentsPutRequest = requestParameters[\"batchTemplatePaymentsPutRequest\"];\n        if (_batchTemplatePaymentsPutRequest === null || _batchTemplatePaymentsPutRequest === undefined) {\n            throw new Error('Required parameter batchTemplatePaymentsPutRequest was null or undefined when calling putBatchTemplatePaymentById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-template-payments/${encodeURIComponent(String(_batchTemplatePaymentId))}`, _batchTemplatePaymentsPutRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putBatchTemplatePaymentByIdUrl(requestParameters) {\n        const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n        if (_batchTemplateId === null || _batchTemplateId === undefined) {\n            throw new Error('Required parameter batchTemplateId was null or undefined when calling putBatchTemplatePaymentById.');\n        }\n        const _batchTemplatePaymentId = requestParameters[\"batchTemplatePaymentId\"];\n        if (_batchTemplatePaymentId === null || _batchTemplatePaymentId === undefined) {\n            throw new Error('Required parameter batchTemplatePaymentId was null or undefined when calling putBatchTemplatePaymentById.');\n        }\n        const _batchTemplatePaymentsPutRequest = requestParameters[\"batchTemplatePaymentsPutRequest\"];\n        if (_batchTemplatePaymentsPutRequest === null || _batchTemplatePaymentsPutRequest === undefined) {\n            throw new Error('Required parameter batchTemplatePaymentsPutRequest was null or undefined when calling putBatchTemplatePaymentById.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/batch-template-payments/${encodeURIComponent(String(_batchTemplatePaymentId))}`;\n    }\n    updateBatchTemplateById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n        if (_batchTemplateId === null || _batchTemplateId === undefined) {\n            throw new Error('Required parameter batchTemplateId was null or undefined when calling updateBatchTemplateById.');\n        }\n        const _draftTemplateId = requestParameters[\"draftTemplateId\"];\n        const _batchTemplatesPutRequest = requestParameters[\"batchTemplatesPutRequest\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_draftTemplateId !== undefined && _draftTemplateId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _draftTemplateId, 'draftTemplateId');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}`, _batchTemplatesPutRequest, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    updateBatchTemplateByIdUrl(requestParameters) {\n        const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n        if (_batchTemplateId === null || _batchTemplateId === undefined) {\n            throw new Error('Required parameter batchTemplateId was null or undefined when calling updateBatchTemplateById.');\n        }\n        const _draftTemplateId = requestParameters[\"draftTemplateId\"];\n        const _batchTemplatesPutRequest = requestParameters[\"batchTemplatesPutRequest\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_draftTemplateId !== undefined && _draftTemplateId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _draftTemplateId, 'draftTemplateId');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}${queryString ? `?${queryString}` : ''}`;\n    }\n    updateBatchTemplateStatusById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n        if (_batchTemplateId === null || _batchTemplateId === undefined) {\n            throw new Error('Required parameter batchTemplateId was null or undefined when calling updateBatchTemplateStatusById.');\n        }\n        const _batchTemplatesStatusUpdateRequest = requestParameters[\"batchTemplatesStatusUpdateRequest\"];\n        if (_batchTemplatesStatusUpdateRequest === null || _batchTemplatesStatusUpdateRequest === undefined) {\n            throw new Error('Required parameter batchTemplatesStatusUpdateRequest was null or undefined when calling updateBatchTemplateStatusById.');\n        }\n        const _dryRun = requestParameters[\"dryRun\"];\n        const _intendedCreditTransactionsCount = requestParameters[\"intendedCreditTransactionsCount\"];\n        const _intendedDebitTransactionsCount = requestParameters[\"intendedDebitTransactionsCount\"];\n        const _intendedCreditAmount = requestParameters[\"intendedCreditAmount\"];\n        const _intendedDebitAmount = requestParameters[\"intendedDebitAmount\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_dryRun !== undefined && _dryRun !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _dryRun, 'dryRun');\n        }\n        if (_intendedCreditTransactionsCount !== undefined && _intendedCreditTransactionsCount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedCreditTransactionsCount, 'intendedCreditTransactionsCount');\n        }\n        if (_intendedDebitTransactionsCount !== undefined && _intendedDebitTransactionsCount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedDebitTransactionsCount, 'intendedDebitTransactionsCount');\n        }\n        if (_intendedCreditAmount !== undefined && _intendedCreditAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedCreditAmount, 'intendedCreditAmount');\n        }\n        if (_intendedDebitAmount !== undefined && _intendedDebitAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedDebitAmount, 'intendedDebitAmount');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/status`, _batchTemplatesStatusUpdateRequest, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    updateBatchTemplateStatusByIdUrl(requestParameters) {\n        const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n        if (_batchTemplateId === null || _batchTemplateId === undefined) {\n            throw new Error('Required parameter batchTemplateId was null or undefined when calling updateBatchTemplateStatusById.');\n        }\n        const _batchTemplatesStatusUpdateRequest = requestParameters[\"batchTemplatesStatusUpdateRequest\"];\n        if (_batchTemplatesStatusUpdateRequest === null || _batchTemplatesStatusUpdateRequest === undefined) {\n            throw new Error('Required parameter batchTemplatesStatusUpdateRequest was null or undefined when calling updateBatchTemplateStatusById.');\n        }\n        const _dryRun = requestParameters[\"dryRun\"];\n        const _intendedCreditTransactionsCount = requestParameters[\"intendedCreditTransactionsCount\"];\n        const _intendedDebitTransactionsCount = requestParameters[\"intendedDebitTransactionsCount\"];\n        const _intendedCreditAmount = requestParameters[\"intendedCreditAmount\"];\n        const _intendedDebitAmount = requestParameters[\"intendedDebitAmount\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_dryRun !== undefined && _dryRun !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _dryRun, 'dryRun');\n        }\n        if (_intendedCreditTransactionsCount !== undefined && _intendedCreditTransactionsCount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedCreditTransactionsCount, 'intendedCreditTransactionsCount');\n        }\n        if (_intendedDebitTransactionsCount !== undefined && _intendedDebitTransactionsCount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedDebitTransactionsCount, 'intendedDebitTransactionsCount');\n        }\n        if (_intendedCreditAmount !== undefined && _intendedCreditAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedCreditAmount, 'intendedCreditAmount');\n        }\n        if (_intendedDebitAmount !== undefined && _intendedDebitAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedDebitAmount, 'intendedDebitAmount');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/status${queryString ? `?${queryString}` : ''}`;\n    }\n    validateBatchTemplate(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n        if (_batchTemplateId === null || _batchTemplateId === undefined) {\n            throw new Error('Required parameter batchTemplateId was null or undefined when calling validateBatchTemplate.');\n        }\n        const _intendedCreditTransactionsCount = requestParameters[\"intendedCreditTransactionsCount\"];\n        const _intendedDebitTransactionsCount = requestParameters[\"intendedDebitTransactionsCount\"];\n        const _intendedCreditAmount = requestParameters[\"intendedCreditAmount\"];\n        const _intendedDebitAmount = requestParameters[\"intendedDebitAmount\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_intendedCreditTransactionsCount !== undefined && _intendedCreditTransactionsCount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedCreditTransactionsCount, 'intendedCreditTransactionsCount');\n        }\n        if (_intendedDebitTransactionsCount !== undefined && _intendedDebitTransactionsCount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedDebitTransactionsCount, 'intendedDebitTransactionsCount');\n        }\n        if (_intendedCreditAmount !== undefined && _intendedCreditAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedCreditAmount, 'intendedCreditAmount');\n        }\n        if (_intendedDebitAmount !== undefined && _intendedDebitAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedDebitAmount, 'intendedDebitAmount');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/validation-errors`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    validateBatchTemplateUrl(requestParameters) {\n        const _batchTemplateId = requestParameters[\"batchTemplateId\"];\n        if (_batchTemplateId === null || _batchTemplateId === undefined) {\n            throw new Error('Required parameter batchTemplateId was null or undefined when calling validateBatchTemplate.');\n        }\n        const _intendedCreditTransactionsCount = requestParameters[\"intendedCreditTransactionsCount\"];\n        const _intendedDebitTransactionsCount = requestParameters[\"intendedDebitTransactionsCount\"];\n        const _intendedCreditAmount = requestParameters[\"intendedCreditAmount\"];\n        const _intendedDebitAmount = requestParameters[\"intendedDebitAmount\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_intendedCreditTransactionsCount !== undefined && _intendedCreditTransactionsCount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedCreditTransactionsCount, 'intendedCreditTransactionsCount');\n        }\n        if (_intendedDebitTransactionsCount !== undefined && _intendedDebitTransactionsCount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedDebitTransactionsCount, 'intendedDebitTransactionsCount');\n        }\n        if (_intendedCreditAmount !== undefined && _intendedCreditAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedCreditAmount, 'intendedCreditAmount');\n        }\n        if (_intendedDebitAmount !== undefined && _intendedDebitAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _intendedDebitAmount, 'intendedDebitAmount');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/batch-templates/${encodeURIComponent(String(_batchTemplateId))}/validation-errors${queryString ? `?${queryString}` : ''}`;\n    }\n}\nBatchTemplatesHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BatchTemplatesHttpService, deps: [{ token: i1.HttpClient }, { token: PAYMENT_BATCH_TEMPLATE_BASE_PATH, optional: true }, { token: PaymentBatchTemplateConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nBatchTemplatesHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BatchTemplatesHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: BatchTemplatesHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [PAYMENT_BATCH_TEMPLATE_BASE_PATH]\n                }] }, { type: PaymentBatchTemplateConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst BatchTemplatesHttpServiceCreateBatchOrderFromTemplateMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-order\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"id\": \"c1263fd6-8bd3-4a0b-be02-5db5cb1d6d06\",\n                    \"name\": \"Europe branches cash distribution\",\n                    \"type\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n                    \"status\": \"DRAFT\",\n                    \"creditDebitMixedIndicator\": \"CREDIT\",\n                    \"totalCreditTransactionsCount\": 120,\n                    \"totalCreditInstructedAmount\": {\n                        \"amount\": \"322038.00\",\n                        \"currencyCode\": \"USD\"\n                    },\n                    \"entryClass\": \"CCD\",\n                    \"account\": {\n                        \"name\": \"Main Current\",\n                        \"identification\": {\n                            \"identification\": \"4902331374\",\n                            \"schemeName\": \"BBAN\"\n                        }\n                    },\n                    \"companyId\": \"1800948594\",\n                    \"companyName\": \"Your Company\",\n                    \"bankBranchCode\": \"113105452\"\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchTemplatesHttpServiceDeleteBatchTemplateByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchTemplatesHttpServiceDeleteBatchTemplatePaymentByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments/{batchTemplatePaymentId}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch template not found\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch template payment not found\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict error\",\n                    \"errors\": [{\n                            \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n                            \"key\": \"transactions.api.billingstatus.transaction\",\n                            \"context\": {\n                                \"billingStatus\": \"BILLED\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchTemplatesHttpServiceGetBatchTemplatePaymentsByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"batchTemplatePayments\": [{\n                            \"id\": \"6c357c28-6714-11e7-907b-a6006ad3dcd0\",\n                            \"counterpartyName\": \"A. Hamers\",\n                            \"counterpartyAccountNumber\": \"5802354374\",\n                            \"counterpartyBankBranchCode\": \"214105452\",\n                            \"creditDebitIndicator\": \"DEBIT\",\n                            \"instructedAmount\": {\n                                \"amount\": \"4102.00\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"description\": \"Salary Mar 2021 empl.no:902713\"\n                        }],\n                    \"totalBatchTemplatePayments\": 1,\n                    \"batchTemplate\": {\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"name\": \"Internal transfers Acme corp\",\n                        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                        \"createdAt\": \"2019-05-10T10:29:10Z\",\n                        \"createdBy\": \"U00243\",\n                        \"canApply\": true,\n                        \"canDelete\": true,\n                        \"canEdit\": true,\n                        \"canDuplicate\": true,\n                        \"details\": {\n                            \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n                            \"batchName\": \"Europe branches cash distribution\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"totalCreditTransactionsCount\": 120,\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"4102.00\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"entryClass\": \"CCD\",\n                            \"originatorAccount\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": {\n                                    \"identification\": \"4902331374\",\n                                    \"schemeName\": \"BBAN\"\n                                }\n                            },\n                            \"companyId\": \"1800948594\",\n                            \"companyName\": \"Your Company\",\n                            \"bankBranchCode\": \"113105452\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchTemplatesHttpServiceGetBatchTemplatesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/batch-templates\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"batchTemplates\": [{\n                            \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                            \"name\": \"Internal transfers Acme corp\",\n                            \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                            \"createdAt\": \"2019-05-10T10:29:10Z\",\n                            \"createdBy\": \"Ulli Ulrich\",\n                            \"updatedAt\": \"2021-05-10T10:29:10Z\",\n                            \"updatedBy\": \"Jinnu Ulrich\",\n                            \"canApply\": true,\n                            \"canDelete\": true,\n                            \"canEdit\": true,\n                            \"canDuplicate\": true,\n                            \"details\": {\n                                \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n                                \"batchName\": \"Europe branches cash distribution\",\n                                \"creditDebitMixedIndicator\": \"CREDIT\",\n                                \"totalCreditTransactionsCount\": 120,\n                                \"totalCreditInstructedAmount\": {\n                                    \"amount\": \"322038.00\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"entryClass\": \"CCD\",\n                                \"originatorAccount\": {\n                                    \"name\": \"Main Current\",\n                                    \"identification\": {\n                                        \"identification\": \"4902331374\",\n                                        \"schemeName\": \"BBAN\"\n                                    }\n                                },\n                                \"companyId\": \"1800948594\",\n                                \"companyName\": \"Your Company\",\n                                \"bankBranchCode\": \"113105452\"\n                            }\n                        }],\n                    \"totalBatchTemplates\": 1,\n                    \"creditDebitMixedIndicator\": \"CREDIT\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchTemplatesHttpServicePostBatchTemplatePaymentsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"id\": \"6c357c28-6714-11e7-907b-a6006ad3dcd0\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict error\",\n                    \"errors\": [{\n                            \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n                            \"key\": \"transactions.api.billingstatus.transaction\",\n                            \"context\": {\n                                \"billingStatus\": \"BILLED\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch template not found\",\n                    \"errors\": []\n                }\n            },\n        ]\n    }]);\nconst BatchTemplatesHttpServicePostBatchTemplatesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/batch-templates\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"batchTemplate\": {\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"name\": \"Internal transfers Acme corp\",\n                        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                        \"status\": \"AVAILABLE\",\n                        \"createdAt\": \"2019-05-10T10:29:10Z\",\n                        \"createdBy\": \"Uli Ulrich\",\n                        \"details\": {\n                            \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n                            \"batchName\": \"Europe branches cash distribution\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"totalCreditTransactionsCount\": 120,\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"322038.00\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"entryClass\": \"CCD\",\n                            \"originatorAccount\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": {\n                                    \"identification\": \"4902331374\",\n                                    \"schemeName\": \"BBAN\"\n                                }\n                            },\n                            \"companyId\": \"1800948594\",\n                            \"companyName\": \"Your Company\",\n                            \"bankBranchCode\": \"113105452\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 201,\n                body: {\n                    \"batchTemplate\": {\n                        \"id\": \"7c341c49-6344-22e7-907b-b6006ad3ecd0\",\n                        \"name\": \"Internal transfers Acme corp\",\n                        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                        \"status\": \"DRAFT\",\n                        \"details\": {\n                            \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n                            \"batchName\": \"Europe branches cash distribution\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"totalCreditTransactionsCount\": 120,\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"322038.00\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"entryClass\": \"CCD\",\n                            \"originatorAccount\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": {\n                                    \"identification\": \"4902331374\",\n                                    \"schemeName\": \"BBAN\"\n                                }\n                            },\n                            \"companyId\": \"1800948594\",\n                            \"companyName\": \"Your Company\",\n                            \"bankBranchCode\": \"113105452\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchTemplatesHttpServicePostBatchTemplatesFromAttributesMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/batch-templates/from-attributes\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"id\": \"7c341c49-6344-22e7-907b-b6006ad3ecd0\",\n                    \"status\": \"DRAFT\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchTemplatesHttpServicePutBatchTemplatePaymentByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments/{batchTemplatePaymentId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"6c357c28-6714-11e7-907b-a6006ad3dcd0\",\n                    \"counterpartyName\": \"A. Hamers\",\n                    \"counterpartyAccountNumber\": \"5802354374\",\n                    \"counterpartyBankBranchCode\": \"214105452\",\n                    \"creditDebitIndicator\": \"CREDIT\",\n                    \"instructedAmount\": {\n                        \"amount\": \"4102.00\",\n                        \"currencyCode\": \"USD\"\n                    },\n                    \"description\": \"Salary Mar 2021 empl.no:902713\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch template not found\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch template payment not found\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict error\",\n                    \"errors\": [{\n                            \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n                            \"key\": \"transactions.api.billingstatus.transaction\",\n                            \"context\": {\n                                \"billingStatus\": \"BILLED\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchTemplatesHttpServiceUpdateBatchTemplateByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"batchTemplate\": {\n                        \"id\": \"7c341c49-6344-22e7-907b-b6006ad3ecd0\",\n                        \"name\": \"Internal transfers Acme corp\",\n                        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                        \"status\": \"DRAFT\",\n                        \"details\": {\n                            \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n                            \"batchName\": \"Europe branches cash distribution\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"totalCreditTransactionsCount\": 120,\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"322038.00\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"entryClass\": \"CCD\",\n                            \"originatorAccount\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": {\n                                    \"identification\": \"4902331374\",\n                                    \"schemeName\": \"BBAN\"\n                                }\n                            },\n                            \"companyId\": \"1800948594\",\n                            \"companyName\": \"Your Company\",\n                            \"bankBranchCode\": \"113105452\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"batchTemplate\": {\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"name\": \"Internal transfers Acme corp\",\n                        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                        \"status\": \"AVAILABLE\",\n                        \"createdAt\": \"2019-05-10T10:29:10Z\",\n                        \"createdBy\": \"Ulli Ulrich\",\n                        \"updatedAt\": \"2021-05-10T10:29:10Z\",\n                        \"updatedBy\": \"Jinnu Ulrich\",\n                        \"details\": {\n                            \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n                            \"batchName\": \"Europe branches cash distribution\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"totalCreditTransactionsCount\": 120,\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"322038.00\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"entryClass\": \"CCD\",\n                            \"originatorAccount\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": {\n                                    \"identification\": \"4902331374\",\n                                    \"schemeName\": \"BBAN\"\n                                }\n                            },\n                            \"companyId\": \"1800948594\",\n                            \"companyName\": \"Your Company\",\n                            \"bankBranchCode\": \"113105452\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict error\",\n                    \"errors\": [{\n                            \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n                            \"key\": \"transactions.api.billingstatus.transaction\",\n                            \"context\": {\n                                \"billingStatus\": \"BILLED\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchTemplatesHttpServiceUpdateBatchTemplateStatusByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/status\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"batchTemplate\": {\n                        \"id\": \"7c341c49-6344-22e7-907b-b6006ad3ecd0\",\n                        \"name\": \"Internal transfers Acme corp\",\n                        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                        \"status\": \"DRAFT\",\n                        \"details\": {\n                            \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n                            \"batchName\": \"Europe branches cash distribution\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"totalCreditTransactionsCount\": 120,\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"322038.00\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"entryClass\": \"CCD\",\n                            \"originatorAccount\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": {\n                                    \"identification\": \"4902331374\",\n                                    \"schemeName\": \"BBAN\"\n                                }\n                            },\n                            \"companyId\": \"1800948594\",\n                            \"companyName\": \"Your Company\",\n                            \"bankBranchCode\": \"113105452\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict error\",\n                    \"errors\": [{\n                            \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n                            \"key\": \"transactions.api.billingstatus.transaction\",\n                            \"context\": {\n                                \"billingStatus\": \"BILLED\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchTemplatesHttpServiceValidateBatchTemplateMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/validation-errors\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"message\": \"Total credit transactions count {{totalCreditTransactionsCount}} does not match the intended total credit transactions count {{intendedTotalCreditTransactionsCount}}.\",\n                        \"key\": \"TotalCreditTransactionsCountMismatch\",\n                        \"context\": {\n                            \"intendedTotalCreditTransactionsCount\": \"10000\",\n                            \"totalCreditTransactionsCount\": \"2\"\n                        }\n                    }]\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict error\",\n                    \"errors\": [{\n                            \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n                            \"key\": \"transactions.api.billingstatus.transaction\",\n                            \"context\": {\n                                \"billingStatus\": \"BILLED\"\n                            }\n                        }]\n                }\n            },\n        ]\n    }]);\nconst BatchTemplatesHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-order\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"id\": \"c1263fd6-8bd3-4a0b-be02-5db5cb1d6d06\",\n                    \"name\": \"Europe branches cash distribution\",\n                    \"type\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n                    \"status\": \"DRAFT\",\n                    \"creditDebitMixedIndicator\": \"CREDIT\",\n                    \"totalCreditTransactionsCount\": 120,\n                    \"totalCreditInstructedAmount\": {\n                        \"amount\": \"322038.00\",\n                        \"currencyCode\": \"USD\"\n                    },\n                    \"entryClass\": \"CCD\",\n                    \"account\": {\n                        \"name\": \"Main Current\",\n                        \"identification\": {\n                            \"identification\": \"4902331374\",\n                            \"schemeName\": \"BBAN\"\n                        }\n                    },\n                    \"companyId\": \"1800948594\",\n                    \"companyName\": \"Your Company\",\n                    \"bankBranchCode\": \"113105452\"\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments/{batchTemplatePaymentId}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch template not found\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch template payment not found\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict error\",\n                    \"errors\": [{\n                            \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n                            \"key\": \"transactions.api.billingstatus.transaction\",\n                            \"context\": {\n                                \"billingStatus\": \"BILLED\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"batchTemplatePayments\": [{\n                            \"id\": \"6c357c28-6714-11e7-907b-a6006ad3dcd0\",\n                            \"counterpartyName\": \"A. Hamers\",\n                            \"counterpartyAccountNumber\": \"5802354374\",\n                            \"counterpartyBankBranchCode\": \"214105452\",\n                            \"creditDebitIndicator\": \"DEBIT\",\n                            \"instructedAmount\": {\n                                \"amount\": \"4102.00\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"description\": \"Salary Mar 2021 empl.no:902713\"\n                        }],\n                    \"totalBatchTemplatePayments\": 1,\n                    \"batchTemplate\": {\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"name\": \"Internal transfers Acme corp\",\n                        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                        \"createdAt\": \"2019-05-10T10:29:10Z\",\n                        \"createdBy\": \"U00243\",\n                        \"canApply\": true,\n                        \"canDelete\": true,\n                        \"canEdit\": true,\n                        \"canDuplicate\": true,\n                        \"details\": {\n                            \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n                            \"batchName\": \"Europe branches cash distribution\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"totalCreditTransactionsCount\": 120,\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"4102.00\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"entryClass\": \"CCD\",\n                            \"originatorAccount\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": {\n                                    \"identification\": \"4902331374\",\n                                    \"schemeName\": \"BBAN\"\n                                }\n                            },\n                            \"companyId\": \"1800948594\",\n                            \"companyName\": \"Your Company\",\n                            \"bankBranchCode\": \"113105452\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/batch-templates\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"batchTemplates\": [{\n                            \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                            \"name\": \"Internal transfers Acme corp\",\n                            \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                            \"createdAt\": \"2019-05-10T10:29:10Z\",\n                            \"createdBy\": \"Ulli Ulrich\",\n                            \"updatedAt\": \"2021-05-10T10:29:10Z\",\n                            \"updatedBy\": \"Jinnu Ulrich\",\n                            \"canApply\": true,\n                            \"canDelete\": true,\n                            \"canEdit\": true,\n                            \"canDuplicate\": true,\n                            \"details\": {\n                                \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n                                \"batchName\": \"Europe branches cash distribution\",\n                                \"creditDebitMixedIndicator\": \"CREDIT\",\n                                \"totalCreditTransactionsCount\": 120,\n                                \"totalCreditInstructedAmount\": {\n                                    \"amount\": \"322038.00\",\n                                    \"currencyCode\": \"USD\"\n                                },\n                                \"entryClass\": \"CCD\",\n                                \"originatorAccount\": {\n                                    \"name\": \"Main Current\",\n                                    \"identification\": {\n                                        \"identification\": \"4902331374\",\n                                        \"schemeName\": \"BBAN\"\n                                    }\n                                },\n                                \"companyId\": \"1800948594\",\n                                \"companyName\": \"Your Company\",\n                                \"bankBranchCode\": \"113105452\"\n                            }\n                        }],\n                    \"totalBatchTemplates\": 1,\n                    \"creditDebitMixedIndicator\": \"CREDIT\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"id\": \"6c357c28-6714-11e7-907b-a6006ad3dcd0\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict error\",\n                    \"errors\": [{\n                            \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n                            \"key\": \"transactions.api.billingstatus.transaction\",\n                            \"context\": {\n                                \"billingStatus\": \"BILLED\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch template not found\",\n                    \"errors\": []\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/batch-templates\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"batchTemplate\": {\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"name\": \"Internal transfers Acme corp\",\n                        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                        \"status\": \"AVAILABLE\",\n                        \"createdAt\": \"2019-05-10T10:29:10Z\",\n                        \"createdBy\": \"Uli Ulrich\",\n                        \"details\": {\n                            \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n                            \"batchName\": \"Europe branches cash distribution\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"totalCreditTransactionsCount\": 120,\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"322038.00\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"entryClass\": \"CCD\",\n                            \"originatorAccount\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": {\n                                    \"identification\": \"4902331374\",\n                                    \"schemeName\": \"BBAN\"\n                                }\n                            },\n                            \"companyId\": \"1800948594\",\n                            \"companyName\": \"Your Company\",\n                            \"bankBranchCode\": \"113105452\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 201,\n                body: {\n                    \"batchTemplate\": {\n                        \"id\": \"7c341c49-6344-22e7-907b-b6006ad3ecd0\",\n                        \"name\": \"Internal transfers Acme corp\",\n                        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                        \"status\": \"DRAFT\",\n                        \"details\": {\n                            \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n                            \"batchName\": \"Europe branches cash distribution\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"totalCreditTransactionsCount\": 120,\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"322038.00\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"entryClass\": \"CCD\",\n                            \"originatorAccount\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": {\n                                    \"identification\": \"4902331374\",\n                                    \"schemeName\": \"BBAN\"\n                                }\n                            },\n                            \"companyId\": \"1800948594\",\n                            \"companyName\": \"Your Company\",\n                            \"bankBranchCode\": \"113105452\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/batch-templates/from-attributes\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"id\": \"7c341c49-6344-22e7-907b-b6006ad3ecd0\",\n                    \"status\": \"DRAFT\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/batch-template-payments/{batchTemplatePaymentId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"6c357c28-6714-11e7-907b-a6006ad3dcd0\",\n                    \"counterpartyName\": \"A. Hamers\",\n                    \"counterpartyAccountNumber\": \"5802354374\",\n                    \"counterpartyBankBranchCode\": \"214105452\",\n                    \"creditDebitIndicator\": \"CREDIT\",\n                    \"instructedAmount\": {\n                        \"amount\": \"4102.00\",\n                        \"currencyCode\": \"USD\"\n                    },\n                    \"description\": \"Salary Mar 2021 empl.no:902713\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch template not found\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Batch template payment not found\",\n                    \"errors\": []\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict error\",\n                    \"errors\": [{\n                            \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n                            \"key\": \"transactions.api.billingstatus.transaction\",\n                            \"context\": {\n                                \"billingStatus\": \"BILLED\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"batchTemplate\": {\n                        \"id\": \"7c341c49-6344-22e7-907b-b6006ad3ecd0\",\n                        \"name\": \"Internal transfers Acme corp\",\n                        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                        \"status\": \"DRAFT\",\n                        \"details\": {\n                            \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n                            \"batchName\": \"Europe branches cash distribution\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"totalCreditTransactionsCount\": 120,\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"322038.00\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"entryClass\": \"CCD\",\n                            \"originatorAccount\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": {\n                                    \"identification\": \"4902331374\",\n                                    \"schemeName\": \"BBAN\"\n                                }\n                            },\n                            \"companyId\": \"1800948594\",\n                            \"companyName\": \"Your Company\",\n                            \"bankBranchCode\": \"113105452\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"batchTemplate\": {\n                        \"id\": \"7d341c28-6714-11e7-907b-a6006ad3dba0\",\n                        \"name\": \"Internal transfers Acme corp\",\n                        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                        \"status\": \"AVAILABLE\",\n                        \"createdAt\": \"2019-05-10T10:29:10Z\",\n                        \"createdBy\": \"Ulli Ulrich\",\n                        \"updatedAt\": \"2021-05-10T10:29:10Z\",\n                        \"updatedBy\": \"Jinnu Ulrich\",\n                        \"details\": {\n                            \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n                            \"batchName\": \"Europe branches cash distribution\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"totalCreditTransactionsCount\": 120,\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"322038.00\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"entryClass\": \"CCD\",\n                            \"originatorAccount\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": {\n                                    \"identification\": \"4902331374\",\n                                    \"schemeName\": \"BBAN\"\n                                }\n                            },\n                            \"companyId\": \"1800948594\",\n                            \"companyName\": \"Your Company\",\n                            \"bankBranchCode\": \"113105452\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict error\",\n                    \"errors\": [{\n                            \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n                            \"key\": \"transactions.api.billingstatus.transaction\",\n                            \"context\": {\n                                \"billingStatus\": \"BILLED\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/status\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"batchTemplate\": {\n                        \"id\": \"7c341c49-6344-22e7-907b-b6006ad3ecd0\",\n                        \"name\": \"Internal transfers Acme corp\",\n                        \"serviceAgreementId\": \"d6fdc581-1306-412a-9e40-86d851190acf\",\n                        \"status\": \"DRAFT\",\n                        \"details\": {\n                            \"batchType\": \"INTRACOMPANY_PAYMENT_CREDIT_USA\",\n                            \"batchName\": \"Europe branches cash distribution\",\n                            \"creditDebitMixedIndicator\": \"CREDIT\",\n                            \"totalCreditTransactionsCount\": 120,\n                            \"totalCreditInstructedAmount\": {\n                                \"amount\": \"322038.00\",\n                                \"currencyCode\": \"USD\"\n                            },\n                            \"entryClass\": \"CCD\",\n                            \"originatorAccount\": {\n                                \"name\": \"Main Current\",\n                                \"identification\": {\n                                    \"identification\": \"4902331374\",\n                                    \"schemeName\": \"BBAN\"\n                                }\n                            },\n                            \"companyId\": \"1800948594\",\n                            \"companyName\": \"Your Company\",\n                            \"bankBranchCode\": \"113105452\"\n                        }\n                    }\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict error\",\n                    \"errors\": [{\n                            \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n                            \"key\": \"transactions.api.billingstatus.transaction\",\n                            \"context\": {\n                                \"billingStatus\": \"BILLED\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/batch-templates/{batchTemplateId}/validation-errors\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"message\": \"Total credit transactions count {{totalCreditTransactionsCount}} does not match the intended total credit transactions count {{intendedTotalCreditTransactionsCount}}.\",\n                        \"key\": \"TotalCreditTransactionsCountMismatch\",\n                        \"context\": {\n                            \"intendedTotalCreditTransactionsCount\": \"10000\",\n                            \"totalCreditTransactionsCount\": \"2\"\n                        }\n                    }]\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 409,\n                body: {\n                    \"message\": \"Conflict error\",\n                    \"errors\": [{\n                            \"message\": \"The request could not be completed due to a conflict with the current state of the resource.\",\n                            \"key\": \"transactions.api.billingstatus.transaction\",\n                            \"context\": {\n                                \"billingStatus\": \"BILLED\"\n                            }\n                        }]\n                }\n            },\n        ]\n    },\n]);\n\nexport { BatchStatus, BatchTemplateStatus, BatchTemplatesHttpService, BatchTemplatesHttpServiceCreateBatchOrderFromTemplateMocksProvider, BatchTemplatesHttpServiceDeleteBatchTemplateByIdMocksProvider, BatchTemplatesHttpServiceDeleteBatchTemplatePaymentByIdMocksProvider, BatchTemplatesHttpServiceGetBatchTemplatePaymentsByIdMocksProvider, BatchTemplatesHttpServiceGetBatchTemplatesMocksProvider, BatchTemplatesHttpServiceMocksProvider, BatchTemplatesHttpServicePostBatchTemplatePaymentsMocksProvider, BatchTemplatesHttpServicePostBatchTemplatesFromAttributesMocksProvider, BatchTemplatesHttpServicePostBatchTemplatesMocksProvider, BatchTemplatesHttpServicePutBatchTemplatePaymentByIdMocksProvider, BatchTemplatesHttpServiceUpdateBatchTemplateByIdMocksProvider, BatchTemplatesHttpServiceUpdateBatchTemplateStatusByIdMocksProvider, BatchTemplatesHttpServiceValidateBatchTemplateMocksProvider, COLLECTION_FORMATS, CONFIG_TOKEN, CreditDebitIndicator, CreditDebitMixedIndicator, PAYMENT_BATCH_TEMPLATE_BASE_PATH, PaymentBatchTemplateApiModule, PaymentBatchTemplateConfiguration, SchemeNames };\n"]},"metadata":{},"sourceType":"module"}