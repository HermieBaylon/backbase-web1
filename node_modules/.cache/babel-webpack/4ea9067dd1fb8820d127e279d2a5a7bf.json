{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\nconst CredentialType = {\n  TEXT: 'TEXT',\n  PASSWORD: 'PASSWORD'\n};\nconst FINANCIAL_INSTITUTION_MANAGER_BASE_PATH = new InjectionToken('FINANCIAL_INSTITUTION_MANAGER_BASE_PATH');\nconst COLLECTION_FORMATS = {\n  'csv': ',',\n  'tsv': '   ',\n  'ssv': ' ',\n  'pipes': '|'\n};\n\nclass FinancialInstitutionManagerConfiguration {\n  constructor(configurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n    this.encoder = configurationParameters.encoder;\n\n    if (configurationParameters.credentials) {\n      this.credentials = configurationParameters.credentials;\n    } else {\n      this.credentials = {};\n    }\n  }\n\n  selectHeaderContentType(contentTypes) {\n    if (contentTypes.length === 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n\n    return type;\n  }\n\n  selectHeaderAccept(accepts) {\n    if (accepts.length === 0) {\n      return undefined;\n    }\n\n    const type = accepts.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return accepts[0];\n    }\n\n    return type;\n  }\n\n  isJsonMime(mime) {\n    const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n    return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n  }\n\n  lookupCredential(key) {\n    const value = this.credentials[key];\n    return typeof value === 'function' ? value() : value;\n  }\n\n}\n\nconst CONFIG_TOKEN = new InjectionToken('api-data-module FinancialInstitutionManagerConfiguration');\n\nclass FinancialInstitutionManagerApiModule {\n  constructor(parentModule, http, dataModulesManager, config) {\n    if (parentModule) {\n      throw new Error('FinancialInstitutionManagerApiModule is already loaded. Import in your base AppModule only.');\n    }\n\n    if (!http) {\n      throw new Error('You need to import the HttpClientModule in your AppModule! \\n' + 'See also https://github.com/angular/angular/issues/20575');\n    }\n\n    if (dataModulesManager) {\n      dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n        apiRoot: '',\n        servicePath: config.basePath || '',\n        headers: {}\n      });\n    }\n  }\n\n  static forRoot(configurationFactory) {\n    return {\n      ngModule: FinancialInstitutionManagerApiModule,\n      providers: [{\n        provide: FinancialInstitutionManagerConfiguration,\n        useFactory: configurationFactory\n      }]\n    };\n  }\n\n}\n\nFinancialInstitutionManagerApiModule.ɵfac = function FinancialInstitutionManagerApiModule_Factory(t) {\n  return new (t || FinancialInstitutionManagerApiModule)(i0.ɵɵinject(FinancialInstitutionManagerApiModule, 12), i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DataModulesManager, 8), i0.ɵɵinject(FinancialInstitutionManagerConfiguration));\n};\n\nFinancialInstitutionManagerApiModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FinancialInstitutionManagerApiModule\n});\nFinancialInstitutionManagerApiModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [],\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FinancialInstitutionManagerApiModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [],\n      exports: [],\n      providers: []\n    }]\n  }], function () {\n    return [{\n      type: FinancialInstitutionManagerApiModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: i1.HttpClient,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2.DataModulesManager,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: FinancialInstitutionManagerConfiguration\n    }];\n  }, null);\n})();\n\nclass CustomHttpParameterCodec {\n  encodeKey(k) {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v) {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k) {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v) {\n    return decodeURIComponent(v);\n  }\n\n}\n\nclass FinancialInstitutionManagerClientHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new FinancialInstitutionManagerConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  getFinancialInstitutions(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _ids = requestParameters[\"ids\"];\n    const _from = requestParameters[\"from\"];\n    const _cursor = requestParameters[\"cursor\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_ids) {\n      _ids.forEach(element => {\n        queryParameters = this.addToHttpParams(queryParameters, element, 'ids');\n      });\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_cursor !== undefined && _cursor !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/financial-institutions`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getFinancialInstitutionsUrl(requestParameters) {\n    const _ids = requestParameters[\"ids\"];\n    const _from = requestParameters[\"from\"];\n    const _cursor = requestParameters[\"cursor\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_ids) {\n      _ids.forEach(element => {\n        queryParameters = this.addToHttpParams(queryParameters, element, 'ids');\n      });\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_cursor !== undefined && _cursor !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v1/financial-institutions${queryString ? `?${queryString}` : ''}`;\n  }\n\n}\n\nFinancialInstitutionManagerClientHttpService.ɵfac = function FinancialInstitutionManagerClientHttpService_Factory(t) {\n  return new (t || FinancialInstitutionManagerClientHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(FINANCIAL_INSTITUTION_MANAGER_BASE_PATH, 8), i0.ɵɵinject(FinancialInstitutionManagerConfiguration, 8));\n};\n\nFinancialInstitutionManagerClientHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: FinancialInstitutionManagerClientHttpService,\n  factory: FinancialInstitutionManagerClientHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FinancialInstitutionManagerClientHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [FINANCIAL_INSTITUTION_MANAGER_BASE_PATH]\n      }]\n    }, {\n      type: FinancialInstitutionManagerConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst FinancialInstitutionManagerClientHttpServiceGetFinancialInstitutionsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/financial-institutions\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"financialInstitutions\": [{\n        \"id\": 1,\n        \"externalId\": \"11da7d70-ed15-11ea-adc1-0242ac120002\",\n        \"name\": \"ABN Amro\",\n        \"logo\": \"https://landportal.org/sites/landportal.org/files/styles/220heightmax/public/abn-amro-logo-vertikaal.png\",\n        \"credentials\": [{\n          \"name\": \"username\",\n          \"label\": \"Username\",\n          \"type\": \"TEXT\"\n        }, {\n          \"name\": \"password\",\n          \"label\": \"Password\",\n          \"type\": \"PASSWORD\"\n        }]\n      }, {\n        \"id\": 2,\n        \"externalId\": \"b149f34b-de04-4d79-83f6-9605d698a7b5\",\n        \"name\": \"ING\",\n        \"logo\": \"https://www.ing.com/static/ingdotcompresentation/static/images/ING_lion_RGB_200x200.png\",\n        \"credentials\": [{\n          \"name\": \"username\",\n          \"label\": \"Username\",\n          \"type\": \"TEXT\"\n        }, {\n          \"name\": \"password\",\n          \"label\": \"Password\",\n          \"type\": \"PASSWORD\"\n        }]\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst FinancialInstitutionManagerClientHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/financial-institutions\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"financialInstitutions\": [{\n        \"id\": 1,\n        \"externalId\": \"11da7d70-ed15-11ea-adc1-0242ac120002\",\n        \"name\": \"ABN Amro\",\n        \"logo\": \"https://landportal.org/sites/landportal.org/files/styles/220heightmax/public/abn-amro-logo-vertikaal.png\",\n        \"credentials\": [{\n          \"name\": \"username\",\n          \"label\": \"Username\",\n          \"type\": \"TEXT\"\n        }, {\n          \"name\": \"password\",\n          \"label\": \"Password\",\n          \"type\": \"PASSWORD\"\n        }]\n      }, {\n        \"id\": 2,\n        \"externalId\": \"b149f34b-de04-4d79-83f6-9605d698a7b5\",\n        \"name\": \"ING\",\n        \"logo\": \"https://www.ing.com/static/ingdotcompresentation/static/images/ING_lion_RGB_200x200.png\",\n        \"credentials\": [{\n          \"name\": \"username\",\n          \"label\": \"Username\",\n          \"type\": \"TEXT\"\n        }, {\n          \"name\": \"password\",\n          \"label\": \"Password\",\n          \"type\": \"PASSWORD\"\n        }]\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nexport { COLLECTION_FORMATS, CONFIG_TOKEN, CredentialType, FINANCIAL_INSTITUTION_MANAGER_BASE_PATH, FinancialInstitutionManagerApiModule, FinancialInstitutionManagerClientHttpService, FinancialInstitutionManagerClientHttpServiceGetFinancialInstitutionsMocksProvider, FinancialInstitutionManagerClientHttpServiceMocksProvider, FinancialInstitutionManagerConfiguration };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/financial-institution-manager-http-ang/fesm2015/backbase-financial-institution-manager-http-ang.js"],"names":["i0","InjectionToken","NgModule","Optional","SkipSelf","Injectable","Inject","i1","HttpHeaders","HttpParams","i2","createMocks","CredentialType","TEXT","PASSWORD","FINANCIAL_INSTITUTION_MANAGER_BASE_PATH","COLLECTION_FORMATS","FinancialInstitutionManagerConfiguration","constructor","configurationParameters","apiKeys","username","password","accessToken","basePath","withCredentials","encoder","credentials","selectHeaderContentType","contentTypes","length","undefined","type","find","x","isJsonMime","selectHeaderAccept","accepts","mime","jsonMime","RegExp","test","toLowerCase","lookupCredential","key","value","CONFIG_TOKEN","FinancialInstitutionManagerApiModule","parentModule","http","dataModulesManager","config","Error","setModuleConfig","apiRoot","servicePath","headers","forRoot","configurationFactory","ngModule","providers","provide","useFactory","ɵfac","HttpClient","DataModulesManager","ɵmod","ɵinj","args","imports","declarations","exports","decorators","CustomHttpParameterCodec","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeURIComponent","decodeValue","FinancialInstitutionManagerClientHttpService","httpClient","configuration","defaultHeaders","addToHttpParams","httpParams","Date","addToHttpParamsRecursive","Array","isArray","forEach","elem","append","toISOString","substr","Object","keys","getFinancialInstitutions","requestParameters","observe","reportProgress","options","_ids","_from","_cursor","_size","queryParameters","element","httpHeaderAcceptSelected","httpHeaderAccept","httpHeaderAccepts","set","responseType","startsWith","get","params","getFinancialInstitutionsUrl","queryString","toString","ɵprov","providedIn","FinancialInstitutionManagerClientHttpServiceGetFinancialInstitutionsMocksProvider","urlPattern","method","responses","status","body","FinancialInstitutionManagerClientHttpServiceMocksProvider"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\n\nconst CredentialType = {\n    TEXT: 'TEXT',\n    PASSWORD: 'PASSWORD'\n};\n\nconst FINANCIAL_INSTITUTION_MANAGER_BASE_PATH = new InjectionToken('FINANCIAL_INSTITUTION_MANAGER_BASE_PATH');\nconst COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n};\n\nclass FinancialInstitutionManagerConfiguration {\n    constructor(configurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n    selectHeaderContentType(contentTypes) {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n        const type = contentTypes.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n    selectHeaderAccept(accepts) {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n        const type = accepts.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n    lookupCredential(key) {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\nconst CONFIG_TOKEN = new InjectionToken('api-data-module FinancialInstitutionManagerConfiguration');\n\nclass FinancialInstitutionManagerApiModule {\n    constructor(parentModule, http, dataModulesManager, config) {\n        if (parentModule) {\n            throw new Error('FinancialInstitutionManagerApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n                'See also https://github.com/angular/angular/issues/20575');\n        }\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n    static forRoot(configurationFactory) {\n        return {\n            ngModule: FinancialInstitutionManagerApiModule,\n            providers: [{ provide: FinancialInstitutionManagerConfiguration, useFactory: configurationFactory }]\n        };\n    }\n}\nFinancialInstitutionManagerApiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: FinancialInstitutionManagerApiModule, deps: [{ token: FinancialInstitutionManagerApiModule, optional: true, skipSelf: true }, { token: i1.HttpClient, optional: true }, { token: i2.DataModulesManager, optional: true }, { token: FinancialInstitutionManagerConfiguration }], target: i0.ɵɵFactoryTarget.NgModule });\nFinancialInstitutionManagerApiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: FinancialInstitutionManagerApiModule });\nFinancialInstitutionManagerApiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: FinancialInstitutionManagerApiModule, providers: [], imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: FinancialInstitutionManagerApiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [],\n                    exports: [],\n                    providers: []\n                }]\n        }], ctorParameters: function () { return [{ type: FinancialInstitutionManagerApiModule, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DataModulesManager, decorators: [{\n                    type: Optional\n                }] }, { type: FinancialInstitutionManagerConfiguration }]; } });\n\nclass CustomHttpParameterCodec {\n    encodeKey(k) {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v) {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k) {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v) {\n        return decodeURIComponent(v);\n    }\n}\n\nclass FinancialInstitutionManagerClientHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new FinancialInstitutionManagerConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    getFinancialInstitutions(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _ids = requestParameters[\"ids\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_ids) {\n            _ids.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters, element, 'ids');\n            });\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/financial-institutions`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getFinancialInstitutionsUrl(requestParameters) {\n        const _ids = requestParameters[\"ids\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_ids) {\n            _ids.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters, element, 'ids');\n            });\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/financial-institutions${queryString ? `?${queryString}` : ''}`;\n    }\n}\nFinancialInstitutionManagerClientHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: FinancialInstitutionManagerClientHttpService, deps: [{ token: i1.HttpClient }, { token: FINANCIAL_INSTITUTION_MANAGER_BASE_PATH, optional: true }, { token: FinancialInstitutionManagerConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nFinancialInstitutionManagerClientHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: FinancialInstitutionManagerClientHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: FinancialInstitutionManagerClientHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FINANCIAL_INSTITUTION_MANAGER_BASE_PATH]\n                }] }, { type: FinancialInstitutionManagerConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst FinancialInstitutionManagerClientHttpServiceGetFinancialInstitutionsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/financial-institutions\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"financialInstitutions\": [{\n                            \"id\": 1,\n                            \"externalId\": \"11da7d70-ed15-11ea-adc1-0242ac120002\",\n                            \"name\": \"ABN Amro\",\n                            \"logo\": \"https://landportal.org/sites/landportal.org/files/styles/220heightmax/public/abn-amro-logo-vertikaal.png\",\n                            \"credentials\": [{\n                                    \"name\": \"username\",\n                                    \"label\": \"Username\",\n                                    \"type\": \"TEXT\"\n                                }, {\n                                    \"name\": \"password\",\n                                    \"label\": \"Password\",\n                                    \"type\": \"PASSWORD\"\n                                }]\n                        }, {\n                            \"id\": 2,\n                            \"externalId\": \"b149f34b-de04-4d79-83f6-9605d698a7b5\",\n                            \"name\": \"ING\",\n                            \"logo\": \"https://www.ing.com/static/ingdotcompresentation/static/images/ING_lion_RGB_200x200.png\",\n                            \"credentials\": [{\n                                    \"name\": \"username\",\n                                    \"label\": \"Username\",\n                                    \"type\": \"TEXT\"\n                                }, {\n                                    \"name\": \"password\",\n                                    \"label\": \"Password\",\n                                    \"type\": \"PASSWORD\"\n                                }]\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst FinancialInstitutionManagerClientHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v1/financial-institutions\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"financialInstitutions\": [{\n                            \"id\": 1,\n                            \"externalId\": \"11da7d70-ed15-11ea-adc1-0242ac120002\",\n                            \"name\": \"ABN Amro\",\n                            \"logo\": \"https://landportal.org/sites/landportal.org/files/styles/220heightmax/public/abn-amro-logo-vertikaal.png\",\n                            \"credentials\": [{\n                                    \"name\": \"username\",\n                                    \"label\": \"Username\",\n                                    \"type\": \"TEXT\"\n                                }, {\n                                    \"name\": \"password\",\n                                    \"label\": \"Password\",\n                                    \"type\": \"PASSWORD\"\n                                }]\n                        }, {\n                            \"id\": 2,\n                            \"externalId\": \"b149f34b-de04-4d79-83f6-9605d698a7b5\",\n                            \"name\": \"ING\",\n                            \"logo\": \"https://www.ing.com/static/ingdotcompresentation/static/images/ING_lion_RGB_200x200.png\",\n                            \"credentials\": [{\n                                    \"name\": \"username\",\n                                    \"label\": \"Username\",\n                                    \"type\": \"TEXT\"\n                                }, {\n                                    \"name\": \"password\",\n                                    \"label\": \"Password\",\n                                    \"type\": \"PASSWORD\"\n                                }]\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n]);\n\nexport { COLLECTION_FORMATS, CONFIG_TOKEN, CredentialType, FINANCIAL_INSTITUTION_MANAGER_BASE_PATH, FinancialInstitutionManagerApiModule, FinancialInstitutionManagerClientHttpService, FinancialInstitutionManagerClientHttpServiceGetFinancialInstitutionsMocksProvider, FinancialInstitutionManagerClientHttpServiceMocksProvider, FinancialInstitutionManagerConfiguration };\n"]},"metadata":{},"sourceType":"module"}