{"ast":null,"code":"import * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@ng-bootstrap/ng-bootstrap';\nimport { NgbPaginationConfig, NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\nimport * as i2 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\n/**\n * @name PaginatorComponent\n *\n * @description\n * A component that displays page numbers and allows to customize them in several ways.\n */\n\nfunction PaginatorComponent_ngb_pagination_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 9);\n    i0.ɵɵi18n(3, 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const page_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(page_r7);\n    i0.ɵɵadvance(2);\n    i0.ɵɵi18nExp(page_r7);\n    i0.ɵɵi18nApply(3);\n  }\n}\n\nfunction PaginatorComponent_ngb_pagination_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-icon-ui\", 11);\n  }\n}\n\nfunction PaginatorComponent_ngb_pagination_0_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-icon-ui\", 12);\n  }\n}\n\nfunction PaginatorComponent_ngb_pagination_0_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-icon-ui\", 13);\n  }\n}\n\nfunction PaginatorComponent_ngb_pagination_0_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-icon-ui\", 14);\n  }\n}\n\nfunction PaginatorComponent_ngb_pagination_0_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"...\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PaginatorComponent_ngb_pagination_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ngb-pagination\", 1);\n    i0.ɵɵlistener(\"pageChange\", function PaginatorComponent_ngb_pagination_0_Template_ngb_pagination_pageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onPageChange($event);\n    });\n    i0.ɵɵtemplate(1, PaginatorComponent_ngb_pagination_0_ng_template_1_Template, 4, 2, \"ng-template\", 2);\n    i0.ɵɵtemplate(2, PaginatorComponent_ngb_pagination_0_ng_template_2_Template, 1, 0, \"ng-template\", 3);\n    i0.ɵɵtemplate(3, PaginatorComponent_ngb_pagination_0_ng_template_3_Template, 1, 0, \"ng-template\", 4);\n    i0.ɵɵtemplate(4, PaginatorComponent_ngb_pagination_0_ng_template_4_Template, 1, 0, \"ng-template\", 5);\n    i0.ɵɵtemplate(5, PaginatorComponent_ngb_pagination_0_ng_template_5_Template, 1, 0, \"ng-template\", 6);\n    i0.ɵɵtemplate(6, PaginatorComponent_ngb_pagination_0_ng_template_6_Template, 2, 0, \"ng-template\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"boundaryLinks\", ctx_r0.boundaryLinks)(\"collectionSize\", ctx_r0.totalItems)(\"directionLinks\", ctx_r0.directionLinks)(\"maxSize\", ctx_r0.maxNavPages)(\"pageSize\", ctx_r0.itemsPerPage)(\"page\", ctx_r0.page + 1)(\"rotate\", true);\n  }\n}\n\nclass PaginatorComponent {\n  constructor() {\n    /**\n     * The current page.\n     *\n     * bb-paginator-ui is 0-indexed, but ngb-pagination is 1-indexed.  Correct inputs by adding 1.\n     */\n    this.page = 1;\n    /**\n     * If `true`, the \"First\" and \"Last\" page links are shown.\n     */\n\n    this.boundaryLinks = false;\n    /**\n     * If `true`, the \"Next\" and \"Previous\" page links are shown.\n     */\n\n    this.directionLinks = false;\n    /**\n     * The number of items in your paginated collection.\n     *\n     * Note, that this is not the number of pages. Page numbers are calculated dynamically based on\n     * `totalItems` and `itemsPerPage`.\n     */\n\n    this.totalItems = 0;\n    /**\n     * The number of items per page.\n     */\n\n    this.itemsPerPage = 10;\n    /**\n     * The maximum number of pages to display.\n     */\n\n    this.maxNavPages = 5;\n    /**\n     * An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n     *\n     * Event payload is the number of the newly selected page.\n     *\n     * bb-paginator-ui is 0-indexed, but ngb-pagination is 1-indexed. Correct outputs by subtracting 1.\n     */\n\n    this.pageChange = new EventEmitter();\n  }\n\n  onPageChange(page) {\n    this.pageChange.emit(page - 1);\n  }\n\n}\n\nPaginatorComponent.ɵfac = function PaginatorComponent_Factory(t) {\n  return new (t || PaginatorComponent)();\n};\n\nPaginatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PaginatorComponent,\n  selectors: [[\"bb-pagination-ui\"]],\n  inputs: {\n    page: \"page\",\n    boundaryLinks: \"boundaryLinks\",\n    directionLinks: \"directionLinks\",\n    totalItems: \"totalItems\",\n    itemsPerPage: \"itemsPerPage\",\n    maxNavPages: \"maxNavPages\"\n  },\n  outputs: {\n    pageChange: \"pageChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([NgbPaginationConfig])],\n  decls: 1,\n  vars: 1,\n  consts: function () {\n    let i18n_0;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Link Label for Screen Reader\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_PAGINATION_JS___1 = goog.getMsg(\"page {$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_0 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_UI_ANG_FESM2015_BACKBASE_UI_ANG_PAGINATION_JS___1;\n    } else {\n      i18n_0 = $localize`:Link Label for Screen Reader@@bb-pagination-ui.pagination.link.number:page ${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n    }\n\n    return [[\"class\", \"d-flex justify-content-center bb-pagination\", 3, \"boundaryLinks\", \"collectionSize\", \"directionLinks\", \"maxSize\", \"pageSize\", \"page\", \"rotate\", \"pageChange\", 4, \"ngIf\"], [1, \"d-flex\", \"justify-content-center\", \"bb-pagination\", 3, \"boundaryLinks\", \"collectionSize\", \"directionLinks\", \"maxSize\", \"pageSize\", \"page\", \"rotate\", \"pageChange\"], [\"ngbPaginationNumber\", \"\"], [\"ngbPaginationFirst\", \"\"], [\"ngbPaginationPrevious\", \"\"], [\"ngbPaginationNext\", \"\"], [\"ngbPaginationLast\", \"\"], [\"ngbPaginationEllipsis\", \"\"], [\"aria-hidden\", \"true\"], [1, \"sr-only\"], i18n_0, [\"data-role\", \"pagination-icon-first\", \"size\", \"md\", \"name\", \"first-page\"], [\"data-role\", \"pagination-icon-previous\", \"size\", \"md\", \"name\", \"chevron-left\"], [\"data-role\", \"pagination-icon-next\", \"size\", \"md\", \"name\", \"chevron-right\"], [\"data-role\", \"pagination-icon-last\", \"size\", \"md\", \"name\", \"last-page\"], [\"data-role\", \"pagination-ellipsis\", 1, \"bb-pagination__ellipsis\"]];\n  },\n  template: function PaginatorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PaginatorComponent_ngb_pagination_0_Template, 7, 7, \"ngb-pagination\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", +ctx.itemsPerPage < +ctx.totalItems);\n    }\n  },\n  directives: [i3.NgIf, i1.NgbPagination, i1.NgbPaginationNumber, i1.NgbPaginationFirst, i1.NgbPaginationPrevious, i1.NgbPaginationNext, i1.NgbPaginationLast, i1.NgbPaginationEllipsis, i2.IconComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaginatorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-pagination-ui',\n      templateUrl: './pagination.component.html',\n      providers: [NgbPaginationConfig]\n    }]\n  }], null, {\n    page: [{\n      type: Input\n    }],\n    boundaryLinks: [{\n      type: Input\n    }],\n    directionLinks: [{\n      type: Input\n    }],\n    totalItems: [{\n      type: Input\n    }],\n    itemsPerPage: [{\n      type: Input\n    }],\n    maxNavPages: [{\n      type: Input\n    }],\n    pageChange: [{\n      type: Output\n    }]\n  });\n})();\n\nclass PaginationModule {}\n\nPaginationModule.ɵfac = function PaginationModule_Factory(t) {\n  return new (t || PaginationModule)();\n};\n\nPaginationModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PaginationModule\n});\nPaginationModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, NgbPaginationModule, IconModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaginationModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, NgbPaginationModule, IconModule],\n      declarations: [PaginatorComponent],\n      exports: [PaginatorComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { PaginationModule, PaginatorComponent, PaginationModule as PaginatorModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-pagination.js"],"names":["i3","CommonModule","i0","EventEmitter","Component","Input","Output","NgModule","i1","NgbPaginationConfig","NgbPaginationModule","i2","IconModule","PaginatorComponent","constructor","page","boundaryLinks","directionLinks","totalItems","itemsPerPage","maxNavPages","pageChange","onPageChange","emit","ɵfac","ɵcmp","NgIf","NgbPagination","NgbPaginationNumber","NgbPaginationFirst","NgbPaginationPrevious","NgbPaginationNext","NgbPaginationLast","NgbPaginationEllipsis","IconComponent","type","args","selector","templateUrl","providers","PaginationModule","ɵmod","ɵinj","imports","declarations","exports","PaginatorModule"],"mappings":"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","sourcesContent":["import * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@ng-bootstrap/ng-bootstrap';\nimport { NgbPaginationConfig, NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\nimport * as i2 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\n\n/**\n * @name PaginatorComponent\n *\n * @description\n * A component that displays page numbers and allows to customize them in several ways.\n */\nclass PaginatorComponent {\n    constructor() {\n        /**\n         * The current page.\n         *\n         * bb-paginator-ui is 0-indexed, but ngb-pagination is 1-indexed.  Correct inputs by adding 1.\n         */\n        this.page = 1;\n        /**\n         * If `true`, the \"First\" and \"Last\" page links are shown.\n         */\n        this.boundaryLinks = false;\n        /**\n         * If `true`, the \"Next\" and \"Previous\" page links are shown.\n         */\n        this.directionLinks = false;\n        /**\n         * The number of items in your paginated collection.\n         *\n         * Note, that this is not the number of pages. Page numbers are calculated dynamically based on\n         * `totalItems` and `itemsPerPage`.\n         */\n        this.totalItems = 0;\n        /**\n         * The number of items per page.\n         */\n        this.itemsPerPage = 10;\n        /**\n         * The maximum number of pages to display.\n         */\n        this.maxNavPages = 5;\n        /**\n         * An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n         *\n         * Event payload is the number of the newly selected page.\n         *\n         * bb-paginator-ui is 0-indexed, but ngb-pagination is 1-indexed. Correct outputs by subtracting 1.\n         */\n        this.pageChange = new EventEmitter();\n    }\n    onPageChange(page) {\n        this.pageChange.emit(page - 1);\n    }\n}\nPaginatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PaginatorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPaginatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: PaginatorComponent, selector: \"bb-pagination-ui\", inputs: { page: \"page\", boundaryLinks: \"boundaryLinks\", directionLinks: \"directionLinks\", totalItems: \"totalItems\", itemsPerPage: \"itemsPerPage\", maxNavPages: \"maxNavPages\" }, outputs: { pageChange: \"pageChange\" }, providers: [NgbPaginationConfig], ngImport: i0, template: \"<ngb-pagination\\n  (pageChange)=\\\"onPageChange($event)\\\"\\n  *ngIf=\\\"+itemsPerPage < +totalItems\\\"\\n  [boundaryLinks]=\\\"boundaryLinks\\\"\\n  [collectionSize]=\\\"totalItems\\\"\\n  [directionLinks]=\\\"directionLinks\\\"\\n  [maxSize]=\\\"maxNavPages\\\"\\n  [pageSize]=\\\"itemsPerPage\\\"\\n  [page]=\\\"page + 1\\\"\\n  [rotate]=\\\"true\\\"\\n  class=\\\"d-flex justify-content-center bb-pagination\\\"\\n>\\n  <ng-template ngbPaginationNumber let-page>\\n    <span aria-hidden=\\\"true\\\">{{ page }}</span>\\n    <span class=\\\"sr-only\\\" i18n=\\\"Link Label for Screen Reader@@bb-pagination-ui.pagination.link.number\\\"\\n      >page {{ page }}</span\\n    >\\n  </ng-template>\\n  <ng-template ngbPaginationFirst>\\n    <bb-icon-ui data-role=\\\"pagination-icon-first\\\" size=\\\"md\\\" name=\\\"first-page\\\"></bb-icon-ui>\\n  </ng-template>\\n  <ng-template ngbPaginationPrevious>\\n    <bb-icon-ui data-role=\\\"pagination-icon-previous\\\" size=\\\"md\\\" name=\\\"chevron-left\\\"></bb-icon-ui>\\n  </ng-template>\\n  <ng-template ngbPaginationNext>\\n    <bb-icon-ui data-role=\\\"pagination-icon-next\\\" size=\\\"md\\\" name=\\\"chevron-right\\\"></bb-icon-ui>\\n  </ng-template>\\n  <ng-template ngbPaginationLast>\\n    <bb-icon-ui data-role=\\\"pagination-icon-last\\\" size=\\\"md\\\" name=\\\"last-page\\\"></bb-icon-ui>\\n  </ng-template>\\n  <ng-template ngbPaginationEllipsis>\\n    <span class=\\\"bb-pagination__ellipsis\\\" data-role=\\\"pagination-ellipsis\\\">...</span>\\n  </ng-template>\\n</ngb-pagination>\\n\", components: [{ type: i1.NgbPagination, selector: \"ngb-pagination\", inputs: [\"page\", \"disabled\", \"boundaryLinks\", \"directionLinks\", \"ellipses\", \"maxSize\", \"pageSize\", \"rotate\", \"size\", \"collectionSize\"], outputs: [\"pageChange\"] }, { type: i2.IconComponent, selector: \"bb-icon-ui\", inputs: [\"name\", \"inverse\", \"size\", \"color\", \"animate\", \"aria-label\", \"cropped\", \"backgroundType\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgbPaginationNumber, selector: \"ng-template[ngbPaginationNumber]\" }, { type: i1.NgbPaginationFirst, selector: \"ng-template[ngbPaginationFirst]\" }, { type: i1.NgbPaginationPrevious, selector: \"ng-template[ngbPaginationPrevious]\" }, { type: i1.NgbPaginationNext, selector: \"ng-template[ngbPaginationNext]\" }, { type: i1.NgbPaginationLast, selector: \"ng-template[ngbPaginationLast]\" }, { type: i1.NgbPaginationEllipsis, selector: \"ng-template[ngbPaginationEllipsis]\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PaginatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-pagination-ui',\n                    templateUrl: './pagination.component.html',\n                    providers: [NgbPaginationConfig],\n                }]\n        }], propDecorators: { page: [{\n                type: Input\n            }], boundaryLinks: [{\n                type: Input\n            }], directionLinks: [{\n                type: Input\n            }], totalItems: [{\n                type: Input\n            }], itemsPerPage: [{\n                type: Input\n            }], maxNavPages: [{\n                type: Input\n            }], pageChange: [{\n                type: Output\n            }] } });\n\nclass PaginationModule {\n}\nPaginationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PaginationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPaginationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PaginationModule, declarations: [PaginatorComponent], imports: [CommonModule, NgbPaginationModule, IconModule], exports: [PaginatorComponent] });\nPaginationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PaginationModule, imports: [[CommonModule, NgbPaginationModule, IconModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PaginationModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, NgbPaginationModule, IconModule],\n                    declarations: [PaginatorComponent],\n                    exports: [PaginatorComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PaginationModule, PaginatorComponent, PaginationModule as PaginatorModule };\n"]},"metadata":{},"sourceType":"module"}