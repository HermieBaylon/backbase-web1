{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\nconst PresentationAmortizationPaymentStatus = {\n  Scheduled: 'Scheduled',\n  Overdue: 'Overdue'\n};\nconst PresentationFrequency = {\n  Weekly: 'Weekly',\n  Biweekly: 'Biweekly',\n  Twicemonthly: 'Twicemonthly',\n  Monthly: 'Monthly',\n  Fourweeks: 'Fourweeks',\n  Bimonthly: 'Bimonthly',\n  Quarterly: 'Quarterly',\n  Semiannually: 'Semiannually',\n  Annually: 'Annually',\n  Maturity: 'Maturity'\n};\nconst PresentationLoanStatus = {\n  Active: 'Active',\n  Inactive: 'Inactive',\n  Pending: 'Pending'\n};\nconst PresentationOperationType = {\n  Credit: 'Credit',\n  Debit: 'Debit'\n};\nconst PresentationPaymentAmountCalculationType = {\n  CustomAmount: 'CustomAmount',\n  PayOffAmount: 'PayOffAmount'\n};\nconst PresentationTermUnit = {\n  Day: 'Day',\n  Week: 'Week',\n  Month: 'Month',\n  Year: 'Year'\n};\nconst LOANS_BASE_PATH = new InjectionToken('LOANS_BASE_PATH');\nconst COLLECTION_FORMATS = {\n  'csv': ',',\n  'tsv': '   ',\n  'ssv': ' ',\n  'pipes': '|'\n};\n\nclass LoansConfiguration {\n  constructor(configurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n    this.encoder = configurationParameters.encoder;\n\n    if (configurationParameters.credentials) {\n      this.credentials = configurationParameters.credentials;\n    } else {\n      this.credentials = {};\n    }\n  }\n\n  selectHeaderContentType(contentTypes) {\n    if (contentTypes.length === 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n\n    return type;\n  }\n\n  selectHeaderAccept(accepts) {\n    if (accepts.length === 0) {\n      return undefined;\n    }\n\n    const type = accepts.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return accepts[0];\n    }\n\n    return type;\n  }\n\n  isJsonMime(mime) {\n    const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n    return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n  }\n\n  lookupCredential(key) {\n    const value = this.credentials[key];\n    return typeof value === 'function' ? value() : value;\n  }\n\n}\n\nconst CONFIG_TOKEN = new InjectionToken('api-data-module LoansConfiguration');\n\nclass LoansApiModule {\n  constructor(parentModule, http, dataModulesManager, config) {\n    if (parentModule) {\n      throw new Error('LoansApiModule is already loaded. Import in your base AppModule only.');\n    }\n\n    if (!http) {\n      throw new Error('You need to import the HttpClientModule in your AppModule! \\n' + 'See also https://github.com/angular/angular/issues/20575');\n    }\n\n    if (dataModulesManager) {\n      dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n        apiRoot: '',\n        servicePath: config.basePath || '',\n        headers: {}\n      });\n    }\n  }\n\n  static forRoot(configurationFactory) {\n    return {\n      ngModule: LoansApiModule,\n      providers: [{\n        provide: LoansConfiguration,\n        useFactory: configurationFactory\n      }]\n    };\n  }\n\n}\n\nLoansApiModule.ɵfac = function LoansApiModule_Factory(t) {\n  return new (t || LoansApiModule)(i0.ɵɵinject(LoansApiModule, 12), i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DataModulesManager, 8), i0.ɵɵinject(LoansConfiguration));\n};\n\nLoansApiModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LoansApiModule\n});\nLoansApiModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [],\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoansApiModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [],\n      exports: [],\n      providers: []\n    }]\n  }], function () {\n    return [{\n      type: LoansApiModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: i1.HttpClient,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2.DataModulesManager,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: LoansConfiguration\n    }];\n  }, null);\n})();\n\nclass CustomHttpParameterCodec {\n  encodeKey(k) {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v) {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k) {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v) {\n    return decodeURIComponent(v);\n  }\n\n}\n\nclass LoansHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new LoansConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  downloadDocumentByLoanIdAndDocumentId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _loanId = requestParameters[\"loanId\"];\n\n    if (_loanId === null || _loanId === undefined) {\n      throw new Error('Required parameter loanId was null or undefined when calling downloadDocumentByLoanIdAndDocumentId.');\n    }\n\n    const _documentId = requestParameters[\"documentId\"];\n\n    if (_documentId === null || _documentId === undefined) {\n      throw new Error('Required parameter documentId was null or undefined when calling downloadDocumentByLoanIdAndDocumentId.');\n    }\n\n    const _inline = requestParameters[\"inline\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_inline !== undefined && _inline !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _inline, 'inline');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['binary/octet-stream', 'application/pdf', 'text/plain', 'text/csv', 'application/rtf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/xml', 'image/png', 'image/jpeg', 'image/gif', 'image/tiff', 'application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/documents/${encodeURIComponent(String(_documentId))}`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  downloadDocumentByLoanIdAndDocumentIdUrl(requestParameters) {\n    const _loanId = requestParameters[\"loanId\"];\n\n    if (_loanId === null || _loanId === undefined) {\n      throw new Error('Required parameter loanId was null or undefined when calling downloadDocumentByLoanIdAndDocumentId.');\n    }\n\n    const _documentId = requestParameters[\"documentId\"];\n\n    if (_documentId === null || _documentId === undefined) {\n      throw new Error('Required parameter documentId was null or undefined when calling downloadDocumentByLoanIdAndDocumentId.');\n    }\n\n    const _inline = requestParameters[\"inline\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_inline !== undefined && _inline !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _inline, 'inline');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/documents/${encodeURIComponent(String(_documentId))}${queryString ? `?${queryString}` : ''}`;\n  }\n\n  getAmortizationPayment(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _loanId = requestParameters[\"loanId\"];\n\n    if (_loanId === null || _loanId === undefined) {\n      throw new Error('Required parameter loanId was null or undefined when calling getAmortizationPayment.');\n    }\n\n    const _amortizationPaymentId = requestParameters[\"amortizationPaymentId\"];\n\n    if (_amortizationPaymentId === null || _amortizationPaymentId === undefined) {\n      throw new Error('Required parameter amortizationPaymentId was null or undefined when calling getAmortizationPayment.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/amortization-schedule/${encodeURIComponent(String(_amortizationPaymentId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getAmortizationPaymentUrl(requestParameters) {\n    const _loanId = requestParameters[\"loanId\"];\n\n    if (_loanId === null || _loanId === undefined) {\n      throw new Error('Required parameter loanId was null or undefined when calling getAmortizationPayment.');\n    }\n\n    const _amortizationPaymentId = requestParameters[\"amortizationPaymentId\"];\n\n    if (_amortizationPaymentId === null || _amortizationPaymentId === undefined) {\n      throw new Error('Required parameter amortizationPaymentId was null or undefined when calling getAmortizationPayment.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/amortization-schedule/${encodeURIComponent(String(_amortizationPaymentId))}`;\n  }\n\n  getAmortizationSchedule(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _loanId = requestParameters[\"loanId\"];\n\n    if (_loanId === null || _loanId === undefined) {\n      throw new Error('Required parameter loanId was null or undefined when calling getAmortizationSchedule.');\n    }\n\n    const _status = requestParameters[\"status\"];\n    const _fromAmount = requestParameters[\"fromAmount\"];\n    const _toAmount = requestParameters[\"toAmount\"];\n    const _fromDate = requestParameters[\"fromDate\"];\n    const _toDate = requestParameters[\"toDate\"];\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    const _sort = requestParameters[\"sort\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_status !== undefined && _status !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _status, 'status');\n    }\n\n    if (_fromAmount !== undefined && _fromAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _fromAmount, 'fromAmount');\n    }\n\n    if (_toAmount !== undefined && _toAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _toAmount, 'toAmount');\n    }\n\n    if (_fromDate !== undefined && _fromDate !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _fromDate, 'fromDate');\n    }\n\n    if (_toDate !== undefined && _toDate !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _toDate, 'toDate');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    if (_sort !== undefined && _sort !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _sort, 'sort');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/amortization-schedule`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getAmortizationScheduleUrl(requestParameters) {\n    const _loanId = requestParameters[\"loanId\"];\n\n    if (_loanId === null || _loanId === undefined) {\n      throw new Error('Required parameter loanId was null or undefined when calling getAmortizationSchedule.');\n    }\n\n    const _status = requestParameters[\"status\"];\n    const _fromAmount = requestParameters[\"fromAmount\"];\n    const _toAmount = requestParameters[\"toAmount\"];\n    const _fromDate = requestParameters[\"fromDate\"];\n    const _toDate = requestParameters[\"toDate\"];\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    const _sort = requestParameters[\"sort\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_status !== undefined && _status !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _status, 'status');\n    }\n\n    if (_fromAmount !== undefined && _fromAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _fromAmount, 'fromAmount');\n    }\n\n    if (_toAmount !== undefined && _toAmount !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _toAmount, 'toAmount');\n    }\n\n    if (_fromDate !== undefined && _fromDate !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _fromDate, 'fromDate');\n    }\n\n    if (_toDate !== undefined && _toDate !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _toDate, 'toDate');\n    }\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    if (_sort !== undefined && _sort !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _sort, 'sort');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/amortization-schedule${queryString ? `?${queryString}` : ''}`;\n  }\n\n  getLoanById(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _loanId = requestParameters[\"loanId\"];\n\n    if (_loanId === null || _loanId === undefined) {\n      throw new Error('Required parameter loanId was null or undefined when calling getLoanById.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getLoanByIdUrl(requestParameters) {\n    const _loanId = requestParameters[\"loanId\"];\n\n    if (_loanId === null || _loanId === undefined) {\n      throw new Error('Required parameter loanId was null or undefined when calling getLoanById.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}`;\n  }\n\n  getLoans(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/loans`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getLoansUrl(requestParameters) {\n    const _from = requestParameters[\"from\"];\n    const _size = requestParameters[\"size\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_from !== undefined && _from !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n    }\n\n    if (_size !== undefined && _size !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v1/loans${queryString ? `?${queryString}` : ''}`;\n  }\n\n  headLoans(observe = 'body', reportProgress = false, options) {\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.head(`${this.configuration.basePath}/client-api/v1/loans`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  headLoansUrl() {\n    return `${this.configuration.basePath}/client-api/v1/loans`;\n  }\n\n}\n\nLoansHttpService.ɵfac = function LoansHttpService_Factory(t) {\n  return new (t || LoansHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(LOANS_BASE_PATH, 8), i0.ɵɵinject(LoansConfiguration, 8));\n};\n\nLoansHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: LoansHttpService,\n  factory: LoansHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoansHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [LOANS_BASE_PATH]\n      }]\n    }, {\n      type: LoansConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst LoansHttpServiceDownloadDocumentByLoanIdAndDocumentIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/loans/{loanId}/documents/{documentId}\",\n  method: \"GET\",\n  responses: [{\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst LoansHttpServiceGetAmortizationPaymentMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/loans/{loanId}/amortization-schedule/{amortizationPaymentId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"$schema\": \"../schemas/amortization-payment.yaml\",\n      \"id\": \"829d1713-8c65-4366-98c2-65a518255365\",\n      \"paymentDate\": \"2020-07-24T00:00:00Z\",\n      \"currencyCode\": \"USD\",\n      \"paymentAmount\": \"40000.00000\",\n      \"interest\": \"0.00000\",\n      \"principal\": \"4000.00000\",\n      \"endingPrincipalBalance\": \"40000.00000\",\n      \"status\": \"Overdue\",\n      \"paymentType\": \"principal-only\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"principal\": \"principal\",\n      \"interest\": \"interest\",\n      \"endingPrincipalBalance\": \"endingPrincipalBalance\",\n      \"id\": \"id\",\n      \"paymentDate\": \"2000-01-23T04:56:07.000+00:00\",\n      \"paymentAmount\": \"paymentAmount\",\n      \"currencyCode\": \"currencyCode\",\n      \"paymentType\": \"paymentType\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst LoansHttpServiceGetAmortizationScheduleMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/loans/{loanId}/amortization-schedule\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"$schema\": \"../schemas/amortization-schedule.yaml\",\n      \"payments\": [{\n        \"id\": \"829d1713-8c65-4366-98c2-65a518255365\",\n        \"paymentDate\": \"2020-07-24T00:00:00Z\",\n        \"currencyCode\": \"USD\",\n        \"paymentAmount\": \"40000.00000\",\n        \"interest\": \"0.00000\",\n        \"principal\": \"4000.00000\",\n        \"endingPrincipalBalance\": \"40000.00000\",\n        \"status\": \"Overdue\",\n        \"paymentType\": \"principal-only\"\n      }, {\n        \"id\": \"522c5077-8fdc-43c0-bc71-d59bb66ea8ce\",\n        \"paymentDate\": \"2020-08-24T00:00:00Z\",\n        \"currencyCode\": \"USD\",\n        \"paymentAmount\": \"8000.00000\",\n        \"endingPrincipalBalance\": \"32000.00000\",\n        \"status\": \"Scheduled\",\n        \"paymentType\": \"interest-only\"\n      }, {\n        \"id\": \"9f4c565d-ffab-4ca1-9094-ee0d53a08782\",\n        \"paymentDate\": \"2020-09-24T00:00:00Z\",\n        \"currencyCode\": \"USD\",\n        \"paymentAmount\": \"32001.00000\",\n        \"interest\": \"1\",\n        \"principal\": \"32000.00000\",\n        \"endingPrincipalBalance\": \"0.00000\",\n        \"status\": \"Scheduled\",\n        \"paymentType\": \"principal-and-interest\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst LoansHttpServiceGetLoanByIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/loans/{loanId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"$schema\": \"../schemas/loan.yaml\",\n      \"id\": \"9ed25bae-11eb-4840-b4fc-37bbe2e5f9c9\",\n      \"loanType\": \"LineOfCredit\",\n      \"name\": \"AnyBank Credit Line 1\",\n      \"accountNumber\": \"096010415 000789 CL01\",\n      \"contractNumber\": \"ATV-676097\",\n      \"loanStatus\": \"Active\",\n      \"currencyCode\": \"USD\",\n      \"nextRepaymentDate\": \"2021-09-13T17:00:00.000Z\",\n      \"nextRepaymentAmount\": \"200.00000\",\n      \"availableBalance\": \"690.37000\",\n      \"outstandingAmount\": \"1954.94000\",\n      \"creditLimit\": \"2456.98000\",\n      \"drawnAmount\": \"1766.61000\",\n      \"feesDue\": \"100.00000\",\n      \"interestDue\": \"88.33000\",\n      \"interestRate\": \"5.00000\",\n      \"isOverdue\": false,\n      \"overduePaymentsCount\": 0,\n      \"branchCode\": \"001\",\n      \"startDate\": \"1996-10-23T17:00:00.000Z\",\n      \"endDate\": \"2022-04-16T17:00:00.000Z\",\n      \"borrower\": [\"John a. Doen\", \"M. Joaveni\", \"Robert Kan\", \"Kamal Terrell\"],\n      \"defaultSettlementAccountId\": \"801b785e-c063-457c-bc12-82386f3ebc2d\",\n      \"defaultSettlementAccountNumber\": \"•••• •••• ••• 4568\",\n      \"defaultSettlementAccountName\": \"Prestige Operating Account\",\n      \"documents\": [{\n        \"documentId\": \"uid_00001\",\n        \"name\": \"Loan Contract\",\n        \"contentType\": \"application/pdf\"\n      }],\n      \"isFullyRepaid\": false,\n      \"termUnit\": \"Year\",\n      \"termCount\": 26,\n      \"paymentFrequency\": \"Bimonthly\",\n      \"interestPaymentFrequency\": \"Biweekly\",\n      \"collateral\": [{\n        \"type\": \"Real estate\",\n        \"currentValue\": \"100\",\n        \"currencyCode\": \"EUR\",\n        \"specification\": \"300 Park Avenue 15th Floor, New York, NY 10022\",\n        \"nextRevaluationDate\": \"2021-02-28\"\n      }],\n      \"escrow\": {\n        \"totalAmount\": \"100\",\n        \"insurance\": \"50\",\n        \"fees\": \"30\",\n        \"tax\": \"20\",\n        \"pmi\": \"10\",\n        \"other\": \"5\"\n      },\n      \"paymentOptions\": {\n        \"paymentOptions\": [{\n          \"name\": \"LoanPayment\",\n          \"operationType\": \"Credit\",\n          \"allowed\": true,\n          \"errorCodes\": []\n        }, {\n          \"name\": \"LoanAdvance\",\n          \"operationType\": \"Debit\",\n          \"allowed\": true,\n          \"errorCodes\": []\n        }]\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"nextRepaymentAmount\": \"nextRepaymentAmount\",\n      \"defaultSettlementAccountId\": \"defaultSettlementAccountId\",\n      \"loanType\": \"loanType\",\n      \"outstandingAmount\": \"outstandingAmount\",\n      \"inArrearsDate\": \"2000-01-23T04:56:07.000+00:00\",\n      \"endDate\": \"2000-01-23T04:56:07.000+00:00\",\n      \"documents\": [{\n        \"name\": \"name\",\n        \"documentId\": \"documentId\",\n        \"contentType\": \"contentType\"\n      }, {\n        \"name\": \"name\",\n        \"documentId\": \"documentId\",\n        \"contentType\": \"contentType\"\n      }],\n      \"termCount\": 6,\n      \"availableBalance\": \"availableBalance\",\n      \"drawnAmount\": \"drawnAmount\",\n      \"paymentOptions\": {\n        \"paymentOptions\": [{\n          \"allowed\": true,\n          \"errorCodes\": [\"errorCodes\", \"errorCodes\"],\n          \"name\": \"name\"\n        }, {\n          \"allowed\": true,\n          \"errorCodes\": [\"errorCodes\", \"errorCodes\"],\n          \"name\": \"name\"\n        }]\n      },\n      \"defaultSettlementAccountName\": \"defaultSettlementAccountName\",\n      \"nextRepaymentDate\": \"2000-01-23T04:56:07.000+00:00\",\n      \"alias\": \"alias\",\n      \"creditLimit\": \"creditLimit\",\n      \"escrow\": {\n        \"insurance\": \"insurance\",\n        \"totalAmount\": \"totalAmount\",\n        \"fees\": \"fees\",\n        \"other\": \"other\",\n        \"tax\": \"tax\",\n        \"pmi\": \"pmi\"\n      },\n      \"isFullyRepaid\": true,\n      \"id\": \"id\",\n      \"overduePaymentsCount\": 0,\n      \"feesDue\": \"feesDue\",\n      \"defaultSettlementAccountNumber\": \"defaultSettlementAccountNumber\",\n      \"interestRate\": \"interestRate\",\n      \"borrower\": [\"borrower\", \"borrower\"],\n      \"contractNumber\": \"contractNumber\",\n      \"accountNumber\": \"accountNumber\",\n      \"inArrearsAmount\": \"inArrearsAmount\",\n      \"branchCode\": \"branchCode\",\n      \"isOverdue\": true,\n      \"interestDue\": \"interestDue\",\n      \"name\": \"name\",\n      \"collateral\": [{\n        \"specification\": \"specification\",\n        \"nextRevaluationDate\": \"2000-01-23\",\n        \"type\": \"type\",\n        \"currencyCode\": \"currencyCode\",\n        \"currentValue\": \"currentValue\"\n      }, {\n        \"specification\": \"specification\",\n        \"nextRevaluationDate\": \"2000-01-23\",\n        \"type\": \"type\",\n        \"currencyCode\": \"currencyCode\",\n        \"currentValue\": \"currentValue\"\n      }],\n      \"currencyCode\": \"currencyCode\",\n      \"paidAmount\": \"paidAmount\",\n      \"startDate\": \"2000-01-23T04:56:07.000+00:00\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst LoansHttpServiceGetLoansMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/loans\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"$schema\": \"../schemas/loans.yaml\",\n      \"loans\": [{\n        \"id\": \"9ed25bae-11eb-4840-b4fc-37bbe2e5f9c9\",\n        \"loanType\": \"LineOfCredit\",\n        \"name\": \"Line of credit 1\",\n        \"accountNumber\": \"NL98RABO5242052503\",\n        \"loanStatus\": \"Pending\",\n        \"currencyCode\": \"EUR\",\n        \"paymentOptions\": {\n          \"paymentOptions\": [{\n            \"name\": \"LoanPayment\",\n            \"operationType\": \"Credit\",\n            \"allowed\": true,\n            \"errorCodes\": []\n          }, {\n            \"name\": \"LoanAdvance\",\n            \"operationType\": \"Debit\",\n            \"allowed\": true,\n            \"errorCodes\": []\n          }]\n        }\n      }, {\n        \"id\": \"764ac5bb-f462-412f-8aee-a218737e1d2a\",\n        \"name\": \"Term loan 1\",\n        \"loanType\": \"TermLoan\",\n        \"accountNumber\": \"NL88ABNA4242739303\",\n        \"loanStatus\": \"Active\",\n        \"currencyCode\": \"EUR\",\n        \"paidAmount\": \"55567.23\",\n        \"outstandingAmount\": \"54432.77\",\n        \"paymentOptions\": {\n          \"paymentOptions\": [{\n            \"name\": \"LoanPayment\",\n            \"operationType\": \"Credit\",\n            \"allowed\": true,\n            \"errorCodes\": []\n          }]\n        }\n      }, {\n        \"id\": \"7688bd60-dfad-45ba-b1ce-abc6e9ea5208\",\n        \"loanType\": \"Mortgage\",\n        \"name\": \"Mortgage 1\",\n        \"accountNumber\": \"MR3731835513862558214883344\",\n        \"loanStatus\": \"Inactive\",\n        \"currencyCode\": \"MRU\",\n        \"paymentOptions\": {\n          \"paymentOptions\": [{\n            \"name\": \"LoanPayment\",\n            \"operationType\": \"Credit\",\n            \"allowed\": false,\n            \"errorCodes\": [\"not.allowed.for.inactive.loan\"]\n          }, {\n            \"name\": \"LoanAdvance\",\n            \"operationType\": \"Debit\",\n            \"allowed\": false,\n            \"errorCodes\": [\"not.allowed.for.inactive.loan\"]\n          }]\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst LoansHttpServiceHeadLoansMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/loans\",\n  method: \"HEAD\",\n  responses: [{\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst LoansHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/loans/{loanId}/documents/{documentId}\",\n  method: \"GET\",\n  responses: [{\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/loans/{loanId}/amortization-schedule/{amortizationPaymentId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"$schema\": \"../schemas/amortization-payment.yaml\",\n      \"id\": \"829d1713-8c65-4366-98c2-65a518255365\",\n      \"paymentDate\": \"2020-07-24T00:00:00Z\",\n      \"currencyCode\": \"USD\",\n      \"paymentAmount\": \"40000.00000\",\n      \"interest\": \"0.00000\",\n      \"principal\": \"4000.00000\",\n      \"endingPrincipalBalance\": \"40000.00000\",\n      \"status\": \"Overdue\",\n      \"paymentType\": \"principal-only\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"principal\": \"principal\",\n      \"interest\": \"interest\",\n      \"endingPrincipalBalance\": \"endingPrincipalBalance\",\n      \"id\": \"id\",\n      \"paymentDate\": \"2000-01-23T04:56:07.000+00:00\",\n      \"paymentAmount\": \"paymentAmount\",\n      \"currencyCode\": \"currencyCode\",\n      \"paymentType\": \"paymentType\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/loans/{loanId}/amortization-schedule\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"$schema\": \"../schemas/amortization-schedule.yaml\",\n      \"payments\": [{\n        \"id\": \"829d1713-8c65-4366-98c2-65a518255365\",\n        \"paymentDate\": \"2020-07-24T00:00:00Z\",\n        \"currencyCode\": \"USD\",\n        \"paymentAmount\": \"40000.00000\",\n        \"interest\": \"0.00000\",\n        \"principal\": \"4000.00000\",\n        \"endingPrincipalBalance\": \"40000.00000\",\n        \"status\": \"Overdue\",\n        \"paymentType\": \"principal-only\"\n      }, {\n        \"id\": \"522c5077-8fdc-43c0-bc71-d59bb66ea8ce\",\n        \"paymentDate\": \"2020-08-24T00:00:00Z\",\n        \"currencyCode\": \"USD\",\n        \"paymentAmount\": \"8000.00000\",\n        \"endingPrincipalBalance\": \"32000.00000\",\n        \"status\": \"Scheduled\",\n        \"paymentType\": \"interest-only\"\n      }, {\n        \"id\": \"9f4c565d-ffab-4ca1-9094-ee0d53a08782\",\n        \"paymentDate\": \"2020-09-24T00:00:00Z\",\n        \"currencyCode\": \"USD\",\n        \"paymentAmount\": \"32001.00000\",\n        \"interest\": \"1\",\n        \"principal\": \"32000.00000\",\n        \"endingPrincipalBalance\": \"0.00000\",\n        \"status\": \"Scheduled\",\n        \"paymentType\": \"principal-and-interest\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/loans/{loanId}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"$schema\": \"../schemas/loan.yaml\",\n      \"id\": \"9ed25bae-11eb-4840-b4fc-37bbe2e5f9c9\",\n      \"loanType\": \"LineOfCredit\",\n      \"name\": \"AnyBank Credit Line 1\",\n      \"accountNumber\": \"096010415 000789 CL01\",\n      \"contractNumber\": \"ATV-676097\",\n      \"loanStatus\": \"Active\",\n      \"currencyCode\": \"USD\",\n      \"nextRepaymentDate\": \"2021-09-13T17:00:00.000Z\",\n      \"nextRepaymentAmount\": \"200.00000\",\n      \"availableBalance\": \"690.37000\",\n      \"outstandingAmount\": \"1954.94000\",\n      \"creditLimit\": \"2456.98000\",\n      \"drawnAmount\": \"1766.61000\",\n      \"feesDue\": \"100.00000\",\n      \"interestDue\": \"88.33000\",\n      \"interestRate\": \"5.00000\",\n      \"isOverdue\": false,\n      \"overduePaymentsCount\": 0,\n      \"branchCode\": \"001\",\n      \"startDate\": \"1996-10-23T17:00:00.000Z\",\n      \"endDate\": \"2022-04-16T17:00:00.000Z\",\n      \"borrower\": [\"John a. Doen\", \"M. Joaveni\", \"Robert Kan\", \"Kamal Terrell\"],\n      \"defaultSettlementAccountId\": \"801b785e-c063-457c-bc12-82386f3ebc2d\",\n      \"defaultSettlementAccountNumber\": \"•••• •••• ••• 4568\",\n      \"defaultSettlementAccountName\": \"Prestige Operating Account\",\n      \"documents\": [{\n        \"documentId\": \"uid_00001\",\n        \"name\": \"Loan Contract\",\n        \"contentType\": \"application/pdf\"\n      }],\n      \"isFullyRepaid\": false,\n      \"termUnit\": \"Year\",\n      \"termCount\": 26,\n      \"paymentFrequency\": \"Bimonthly\",\n      \"interestPaymentFrequency\": \"Biweekly\",\n      \"collateral\": [{\n        \"type\": \"Real estate\",\n        \"currentValue\": \"100\",\n        \"currencyCode\": \"EUR\",\n        \"specification\": \"300 Park Avenue 15th Floor, New York, NY 10022\",\n        \"nextRevaluationDate\": \"2021-02-28\"\n      }],\n      \"escrow\": {\n        \"totalAmount\": \"100\",\n        \"insurance\": \"50\",\n        \"fees\": \"30\",\n        \"tax\": \"20\",\n        \"pmi\": \"10\",\n        \"other\": \"5\"\n      },\n      \"paymentOptions\": {\n        \"paymentOptions\": [{\n          \"name\": \"LoanPayment\",\n          \"operationType\": \"Credit\",\n          \"allowed\": true,\n          \"errorCodes\": []\n        }, {\n          \"name\": \"LoanAdvance\",\n          \"operationType\": \"Debit\",\n          \"allowed\": true,\n          \"errorCodes\": []\n        }]\n      }\n    }\n  }, {\n    status: 200,\n    body: {\n      \"nextRepaymentAmount\": \"nextRepaymentAmount\",\n      \"defaultSettlementAccountId\": \"defaultSettlementAccountId\",\n      \"loanType\": \"loanType\",\n      \"outstandingAmount\": \"outstandingAmount\",\n      \"inArrearsDate\": \"2000-01-23T04:56:07.000+00:00\",\n      \"endDate\": \"2000-01-23T04:56:07.000+00:00\",\n      \"documents\": [{\n        \"name\": \"name\",\n        \"documentId\": \"documentId\",\n        \"contentType\": \"contentType\"\n      }, {\n        \"name\": \"name\",\n        \"documentId\": \"documentId\",\n        \"contentType\": \"contentType\"\n      }],\n      \"termCount\": 6,\n      \"availableBalance\": \"availableBalance\",\n      \"drawnAmount\": \"drawnAmount\",\n      \"paymentOptions\": {\n        \"paymentOptions\": [{\n          \"allowed\": true,\n          \"errorCodes\": [\"errorCodes\", \"errorCodes\"],\n          \"name\": \"name\"\n        }, {\n          \"allowed\": true,\n          \"errorCodes\": [\"errorCodes\", \"errorCodes\"],\n          \"name\": \"name\"\n        }]\n      },\n      \"defaultSettlementAccountName\": \"defaultSettlementAccountName\",\n      \"nextRepaymentDate\": \"2000-01-23T04:56:07.000+00:00\",\n      \"alias\": \"alias\",\n      \"creditLimit\": \"creditLimit\",\n      \"escrow\": {\n        \"insurance\": \"insurance\",\n        \"totalAmount\": \"totalAmount\",\n        \"fees\": \"fees\",\n        \"other\": \"other\",\n        \"tax\": \"tax\",\n        \"pmi\": \"pmi\"\n      },\n      \"isFullyRepaid\": true,\n      \"id\": \"id\",\n      \"overduePaymentsCount\": 0,\n      \"feesDue\": \"feesDue\",\n      \"defaultSettlementAccountNumber\": \"defaultSettlementAccountNumber\",\n      \"interestRate\": \"interestRate\",\n      \"borrower\": [\"borrower\", \"borrower\"],\n      \"contractNumber\": \"contractNumber\",\n      \"accountNumber\": \"accountNumber\",\n      \"inArrearsAmount\": \"inArrearsAmount\",\n      \"branchCode\": \"branchCode\",\n      \"isOverdue\": true,\n      \"interestDue\": \"interestDue\",\n      \"name\": \"name\",\n      \"collateral\": [{\n        \"specification\": \"specification\",\n        \"nextRevaluationDate\": \"2000-01-23\",\n        \"type\": \"type\",\n        \"currencyCode\": \"currencyCode\",\n        \"currentValue\": \"currentValue\"\n      }, {\n        \"specification\": \"specification\",\n        \"nextRevaluationDate\": \"2000-01-23\",\n        \"type\": \"type\",\n        \"currencyCode\": \"currencyCode\",\n        \"currentValue\": \"currentValue\"\n      }],\n      \"currencyCode\": \"currencyCode\",\n      \"paidAmount\": \"paidAmount\",\n      \"startDate\": \"2000-01-23T04:56:07.000+00:00\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/loans\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"$schema\": \"../schemas/loans.yaml\",\n      \"loans\": [{\n        \"id\": \"9ed25bae-11eb-4840-b4fc-37bbe2e5f9c9\",\n        \"loanType\": \"LineOfCredit\",\n        \"name\": \"Line of credit 1\",\n        \"accountNumber\": \"NL98RABO5242052503\",\n        \"loanStatus\": \"Pending\",\n        \"currencyCode\": \"EUR\",\n        \"paymentOptions\": {\n          \"paymentOptions\": [{\n            \"name\": \"LoanPayment\",\n            \"operationType\": \"Credit\",\n            \"allowed\": true,\n            \"errorCodes\": []\n          }, {\n            \"name\": \"LoanAdvance\",\n            \"operationType\": \"Debit\",\n            \"allowed\": true,\n            \"errorCodes\": []\n          }]\n        }\n      }, {\n        \"id\": \"764ac5bb-f462-412f-8aee-a218737e1d2a\",\n        \"name\": \"Term loan 1\",\n        \"loanType\": \"TermLoan\",\n        \"accountNumber\": \"NL88ABNA4242739303\",\n        \"loanStatus\": \"Active\",\n        \"currencyCode\": \"EUR\",\n        \"paidAmount\": \"55567.23\",\n        \"outstandingAmount\": \"54432.77\",\n        \"paymentOptions\": {\n          \"paymentOptions\": [{\n            \"name\": \"LoanPayment\",\n            \"operationType\": \"Credit\",\n            \"allowed\": true,\n            \"errorCodes\": []\n          }]\n        }\n      }, {\n        \"id\": \"7688bd60-dfad-45ba-b1ce-abc6e9ea5208\",\n        \"loanType\": \"Mortgage\",\n        \"name\": \"Mortgage 1\",\n        \"accountNumber\": \"MR3731835513862558214883344\",\n        \"loanStatus\": \"Inactive\",\n        \"currencyCode\": \"MRU\",\n        \"paymentOptions\": {\n          \"paymentOptions\": [{\n            \"name\": \"LoanPayment\",\n            \"operationType\": \"Credit\",\n            \"allowed\": false,\n            \"errorCodes\": [\"not.allowed.for.inactive.loan\"]\n          }, {\n            \"name\": \"LoanAdvance\",\n            \"operationType\": \"Debit\",\n            \"allowed\": false,\n            \"errorCodes\": [\"not.allowed.for.inactive.loan\"]\n          }]\n        }\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v1/loans\",\n  method: \"HEAD\",\n  responses: [{\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\n\nclass PaymentHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new LoansConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  calculatePaymentAmount(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _loanId = requestParameters[\"loanId\"];\n\n    if (_loanId === null || _loanId === undefined) {\n      throw new Error('Required parameter loanId was null or undefined when calling calculatePaymentAmount.');\n    }\n\n    const _presentationCalculatePaymentAmountRequest = requestParameters[\"presentationCalculatePaymentAmountRequest\"];\n\n    if (_presentationCalculatePaymentAmountRequest === null || _presentationCalculatePaymentAmountRequest === undefined) {\n      throw new Error('Required parameter presentationCalculatePaymentAmountRequest was null or undefined when calling calculatePaymentAmount.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/calculate-payment-amount`, _presentationCalculatePaymentAmountRequest, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  calculatePaymentAmountUrl(requestParameters) {\n    const _loanId = requestParameters[\"loanId\"];\n\n    if (_loanId === null || _loanId === undefined) {\n      throw new Error('Required parameter loanId was null or undefined when calling calculatePaymentAmount.');\n    }\n\n    const _presentationCalculatePaymentAmountRequest = requestParameters[\"presentationCalculatePaymentAmountRequest\"];\n\n    if (_presentationCalculatePaymentAmountRequest === null || _presentationCalculatePaymentAmountRequest === undefined) {\n      throw new Error('Required parameter presentationCalculatePaymentAmountRequest was null or undefined when calling calculatePaymentAmount.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/calculate-payment-amount`;\n  }\n\n}\n\nPaymentHttpService.ɵfac = function PaymentHttpService_Factory(t) {\n  return new (t || PaymentHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(LOANS_BASE_PATH, 8), i0.ɵɵinject(LoansConfiguration, 8));\n};\n\nPaymentHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PaymentHttpService,\n  factory: PaymentHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaymentHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [LOANS_BASE_PATH]\n      }]\n    }, {\n      type: LoansConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst PaymentHttpServiceCalculatePaymentAmountMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/loans/{loanId}/calculate-payment-amount\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"$schema\": \"../schemas/calculated-payment-amount.yaml\",\n      \"paymentOption\": \"LOAN_PAYMENT\",\n      \"paymentDate\": \"2021-12-22\",\n      \"currentPaymentAmount\": \"100.00000\",\n      \"fees\": [{\n        \"feeType\": \"Transaction fee\",\n        \"amount\": \"11.00000\",\n        \"sameTransaction\": false\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst PaymentHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/loans/{loanId}/calculate-payment-amount\",\n  method: \"POST\",\n  responses: [{\n    status: 200,\n    body: {\n      \"$schema\": \"../schemas/calculated-payment-amount.yaml\",\n      \"paymentOption\": \"LOAN_PAYMENT\",\n      \"paymentDate\": \"2021-12-22\",\n      \"currentPaymentAmount\": \"100.00000\",\n      \"fees\": [{\n        \"feeType\": \"Transaction fee\",\n        \"amount\": \"11.00000\",\n        \"sameTransaction\": false\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\n\nclass PaymentOptionsHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new LoansConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  getPaymentOptions(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _loanId = requestParameters[\"loanId\"];\n\n    if (_loanId === null || _loanId === undefined) {\n      throw new Error('Required parameter loanId was null or undefined when calling getPaymentOptions.');\n    }\n\n    const _operationType = requestParameters[\"operationType\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_operationType) {\n      _operationType.forEach(element => {\n        queryParameters = this.addToHttpParams(queryParameters, element, 'operationType');\n      });\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/payment-options`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getPaymentOptionsUrl(requestParameters) {\n    const _loanId = requestParameters[\"loanId\"];\n\n    if (_loanId === null || _loanId === undefined) {\n      throw new Error('Required parameter loanId was null or undefined when calling getPaymentOptions.');\n    }\n\n    const _operationType = requestParameters[\"operationType\"];\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_operationType) {\n      _operationType.forEach(element => {\n        queryParameters = this.addToHttpParams(queryParameters, element, 'operationType');\n      });\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/payment-options${queryString ? `?${queryString}` : ''}`;\n  }\n\n}\n\nPaymentOptionsHttpService.ɵfac = function PaymentOptionsHttpService_Factory(t) {\n  return new (t || PaymentOptionsHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(LOANS_BASE_PATH, 8), i0.ɵɵinject(LoansConfiguration, 8));\n};\n\nPaymentOptionsHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PaymentOptionsHttpService,\n  factory: PaymentOptionsHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaymentOptionsHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [LOANS_BASE_PATH]\n      }]\n    }, {\n      type: LoansConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst PaymentOptionsHttpServiceGetPaymentOptionsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/loans/{loanId}/payment-options\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"$schema\": \"../schemas/payment-options.yaml\",\n      \"paymentOptions\": [{\n        \"name\": \"LoanPayment\",\n        \"operationType\": \"Credit\",\n        \"allowed\": true\n      }, {\n        \"name\": \"LoanAdvance\",\n        \"operationType\": \"Debit\",\n        \"allowed\": false,\n        \"errorCodes\": [\"draw.amount.is.not.allowed\"]\n      }]\n    }\n  }, {\n    status: 200,\n    body: {\n      \"paymentOptions\": [{\n        \"allowed\": true,\n        \"errorCodes\": [\"errorCodes\", \"errorCodes\"],\n        \"name\": \"name\"\n      }, {\n        \"allowed\": true,\n        \"errorCodes\": [\"errorCodes\", \"errorCodes\"],\n        \"name\": \"name\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst PaymentOptionsHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v1/loans/{loanId}/payment-options\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"$schema\": \"../schemas/payment-options.yaml\",\n      \"paymentOptions\": [{\n        \"name\": \"LoanPayment\",\n        \"operationType\": \"Credit\",\n        \"allowed\": true\n      }, {\n        \"name\": \"LoanAdvance\",\n        \"operationType\": \"Debit\",\n        \"allowed\": false,\n        \"errorCodes\": [\"draw.amount.is.not.allowed\"]\n      }]\n    }\n  }, {\n    status: 200,\n    body: {\n      \"paymentOptions\": [{\n        \"allowed\": true,\n        \"errorCodes\": [\"errorCodes\", \"errorCodes\"],\n        \"name\": \"name\"\n      }, {\n        \"allowed\": true,\n        \"errorCodes\": [\"errorCodes\", \"errorCodes\"],\n        \"name\": \"name\"\n      }]\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nexport { COLLECTION_FORMATS, CONFIG_TOKEN, LOANS_BASE_PATH, LoansApiModule, LoansConfiguration, LoansHttpService, LoansHttpServiceDownloadDocumentByLoanIdAndDocumentIdMocksProvider, LoansHttpServiceGetAmortizationPaymentMocksProvider, LoansHttpServiceGetAmortizationScheduleMocksProvider, LoansHttpServiceGetLoanByIdMocksProvider, LoansHttpServiceGetLoansMocksProvider, LoansHttpServiceHeadLoansMocksProvider, LoansHttpServiceMocksProvider, PaymentHttpService, PaymentHttpServiceCalculatePaymentAmountMocksProvider, PaymentHttpServiceMocksProvider, PaymentOptionsHttpService, PaymentOptionsHttpServiceGetPaymentOptionsMocksProvider, PaymentOptionsHttpServiceMocksProvider, PresentationAmortizationPaymentStatus, PresentationFrequency, PresentationLoanStatus, PresentationOperationType, PresentationPaymentAmountCalculationType, PresentationTermUnit };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/loans-http-ang/fesm2015/backbase-loans-http-ang.js"],"names":["i0","InjectionToken","NgModule","Optional","SkipSelf","Injectable","Inject","i1","HttpHeaders","HttpParams","i2","createMocks","PresentationAmortizationPaymentStatus","Scheduled","Overdue","PresentationFrequency","Weekly","Biweekly","Twicemonthly","Monthly","Fourweeks","Bimonthly","Quarterly","Semiannually","Annually","Maturity","PresentationLoanStatus","Active","Inactive","Pending","PresentationOperationType","Credit","Debit","PresentationPaymentAmountCalculationType","CustomAmount","PayOffAmount","PresentationTermUnit","Day","Week","Month","Year","LOANS_BASE_PATH","COLLECTION_FORMATS","LoansConfiguration","constructor","configurationParameters","apiKeys","username","password","accessToken","basePath","withCredentials","encoder","credentials","selectHeaderContentType","contentTypes","length","undefined","type","find","x","isJsonMime","selectHeaderAccept","accepts","mime","jsonMime","RegExp","test","toLowerCase","lookupCredential","key","value","CONFIG_TOKEN","LoansApiModule","parentModule","http","dataModulesManager","config","Error","setModuleConfig","apiRoot","servicePath","headers","forRoot","configurationFactory","ngModule","providers","provide","useFactory","ɵfac","HttpClient","DataModulesManager","ɵmod","ɵinj","args","imports","declarations","exports","decorators","CustomHttpParameterCodec","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeURIComponent","decodeValue","LoansHttpService","httpClient","configuration","defaultHeaders","addToHttpParams","httpParams","Date","addToHttpParamsRecursive","Array","isArray","forEach","elem","append","toISOString","substr","Object","keys","downloadDocumentByLoanIdAndDocumentId","requestParameters","observe","reportProgress","options","_loanId","_documentId","_inline","queryParameters","httpHeaderAcceptSelected","httpHeaderAccept","httpHeaderAccepts","set","responseType","startsWith","get","String","params","downloadDocumentByLoanIdAndDocumentIdUrl","queryString","toString","getAmortizationPayment","_amortizationPaymentId","getAmortizationPaymentUrl","getAmortizationSchedule","_status","_fromAmount","_toAmount","_fromDate","_toDate","_from","_size","_sort","getAmortizationScheduleUrl","getLoanById","getLoanByIdUrl","getLoans","getLoansUrl","headLoans","head","headLoansUrl","ɵprov","providedIn","LoansHttpServiceDownloadDocumentByLoanIdAndDocumentIdMocksProvider","urlPattern","method","responses","status","body","LoansHttpServiceGetAmortizationPaymentMocksProvider","LoansHttpServiceGetAmortizationScheduleMocksProvider","LoansHttpServiceGetLoanByIdMocksProvider","LoansHttpServiceGetLoansMocksProvider","LoansHttpServiceHeadLoansMocksProvider","LoansHttpServiceMocksProvider","PaymentHttpService","calculatePaymentAmount","_presentationCalculatePaymentAmountRequest","consumes","httpContentTypeSelected","post","calculatePaymentAmountUrl","PaymentHttpServiceCalculatePaymentAmountMocksProvider","PaymentHttpServiceMocksProvider","PaymentOptionsHttpService","getPaymentOptions","_operationType","element","getPaymentOptionsUrl","PaymentOptionsHttpServiceGetPaymentOptionsMocksProvider","PaymentOptionsHttpServiceMocksProvider"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\n\nconst PresentationAmortizationPaymentStatus = {\n    Scheduled: 'Scheduled',\n    Overdue: 'Overdue'\n};\n\nconst PresentationFrequency = {\n    Weekly: 'Weekly',\n    Biweekly: 'Biweekly',\n    Twicemonthly: 'Twicemonthly',\n    Monthly: 'Monthly',\n    Fourweeks: 'Fourweeks',\n    Bimonthly: 'Bimonthly',\n    Quarterly: 'Quarterly',\n    Semiannually: 'Semiannually',\n    Annually: 'Annually',\n    Maturity: 'Maturity'\n};\n\nconst PresentationLoanStatus = {\n    Active: 'Active',\n    Inactive: 'Inactive',\n    Pending: 'Pending'\n};\n\nconst PresentationOperationType = {\n    Credit: 'Credit',\n    Debit: 'Debit'\n};\n\nconst PresentationPaymentAmountCalculationType = {\n    CustomAmount: 'CustomAmount',\n    PayOffAmount: 'PayOffAmount'\n};\n\nconst PresentationTermUnit = {\n    Day: 'Day',\n    Week: 'Week',\n    Month: 'Month',\n    Year: 'Year'\n};\n\nconst LOANS_BASE_PATH = new InjectionToken('LOANS_BASE_PATH');\nconst COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n};\n\nclass LoansConfiguration {\n    constructor(configurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n    selectHeaderContentType(contentTypes) {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n        const type = contentTypes.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n    selectHeaderAccept(accepts) {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n        const type = accepts.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n    lookupCredential(key) {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\nconst CONFIG_TOKEN = new InjectionToken('api-data-module LoansConfiguration');\n\nclass LoansApiModule {\n    constructor(parentModule, http, dataModulesManager, config) {\n        if (parentModule) {\n            throw new Error('LoansApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n                'See also https://github.com/angular/angular/issues/20575');\n        }\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n    static forRoot(configurationFactory) {\n        return {\n            ngModule: LoansApiModule,\n            providers: [{ provide: LoansConfiguration, useFactory: configurationFactory }]\n        };\n    }\n}\nLoansApiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: LoansApiModule, deps: [{ token: LoansApiModule, optional: true, skipSelf: true }, { token: i1.HttpClient, optional: true }, { token: i2.DataModulesManager, optional: true }, { token: LoansConfiguration }], target: i0.ɵɵFactoryTarget.NgModule });\nLoansApiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: LoansApiModule });\nLoansApiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: LoansApiModule, providers: [], imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: LoansApiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [],\n                    exports: [],\n                    providers: []\n                }]\n        }], ctorParameters: function () { return [{ type: LoansApiModule, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DataModulesManager, decorators: [{\n                    type: Optional\n                }] }, { type: LoansConfiguration }]; } });\n\nclass CustomHttpParameterCodec {\n    encodeKey(k) {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v) {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k) {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v) {\n        return decodeURIComponent(v);\n    }\n}\n\nclass LoansHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new LoansConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    downloadDocumentByLoanIdAndDocumentId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling downloadDocumentByLoanIdAndDocumentId.');\n        }\n        const _documentId = requestParameters[\"documentId\"];\n        if (_documentId === null || _documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling downloadDocumentByLoanIdAndDocumentId.');\n        }\n        const _inline = requestParameters[\"inline\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_inline !== undefined && _inline !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _inline, 'inline');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'binary/octet-stream',\n                'application/pdf',\n                'text/plain',\n                'text/csv',\n                'application/rtf',\n                'application/msword',\n                'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n                'application/vnd.ms-excel',\n                'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                'application/xml',\n                'image/png',\n                'image/jpeg',\n                'image/gif',\n                'image/tiff',\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/documents/${encodeURIComponent(String(_documentId))}`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    downloadDocumentByLoanIdAndDocumentIdUrl(requestParameters) {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling downloadDocumentByLoanIdAndDocumentId.');\n        }\n        const _documentId = requestParameters[\"documentId\"];\n        if (_documentId === null || _documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling downloadDocumentByLoanIdAndDocumentId.');\n        }\n        const _inline = requestParameters[\"inline\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_inline !== undefined && _inline !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _inline, 'inline');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/documents/${encodeURIComponent(String(_documentId))}${queryString ? `?${queryString}` : ''}`;\n    }\n    getAmortizationPayment(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling getAmortizationPayment.');\n        }\n        const _amortizationPaymentId = requestParameters[\"amortizationPaymentId\"];\n        if (_amortizationPaymentId === null || _amortizationPaymentId === undefined) {\n            throw new Error('Required parameter amortizationPaymentId was null or undefined when calling getAmortizationPayment.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/amortization-schedule/${encodeURIComponent(String(_amortizationPaymentId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getAmortizationPaymentUrl(requestParameters) {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling getAmortizationPayment.');\n        }\n        const _amortizationPaymentId = requestParameters[\"amortizationPaymentId\"];\n        if (_amortizationPaymentId === null || _amortizationPaymentId === undefined) {\n            throw new Error('Required parameter amortizationPaymentId was null or undefined when calling getAmortizationPayment.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/amortization-schedule/${encodeURIComponent(String(_amortizationPaymentId))}`;\n    }\n    getAmortizationSchedule(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling getAmortizationSchedule.');\n        }\n        const _status = requestParameters[\"status\"];\n        const _fromAmount = requestParameters[\"fromAmount\"];\n        const _toAmount = requestParameters[\"toAmount\"];\n        const _fromDate = requestParameters[\"fromDate\"];\n        const _toDate = requestParameters[\"toDate\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _sort = requestParameters[\"sort\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_status !== undefined && _status !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _status, 'status');\n        }\n        if (_fromAmount !== undefined && _fromAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _fromAmount, 'fromAmount');\n        }\n        if (_toAmount !== undefined && _toAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _toAmount, 'toAmount');\n        }\n        if (_fromDate !== undefined && _fromDate !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _fromDate, 'fromDate');\n        }\n        if (_toDate !== undefined && _toDate !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _toDate, 'toDate');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        if (_sort !== undefined && _sort !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _sort, 'sort');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/amortization-schedule`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getAmortizationScheduleUrl(requestParameters) {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling getAmortizationSchedule.');\n        }\n        const _status = requestParameters[\"status\"];\n        const _fromAmount = requestParameters[\"fromAmount\"];\n        const _toAmount = requestParameters[\"toAmount\"];\n        const _fromDate = requestParameters[\"fromDate\"];\n        const _toDate = requestParameters[\"toDate\"];\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _sort = requestParameters[\"sort\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_status !== undefined && _status !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _status, 'status');\n        }\n        if (_fromAmount !== undefined && _fromAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _fromAmount, 'fromAmount');\n        }\n        if (_toAmount !== undefined && _toAmount !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _toAmount, 'toAmount');\n        }\n        if (_fromDate !== undefined && _fromDate !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _fromDate, 'fromDate');\n        }\n        if (_toDate !== undefined && _toDate !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _toDate, 'toDate');\n        }\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        if (_sort !== undefined && _sort !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _sort, 'sort');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/amortization-schedule${queryString ? `?${queryString}` : ''}`;\n    }\n    getLoanById(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling getLoanById.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getLoanByIdUrl(requestParameters) {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling getLoanById.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}`;\n    }\n    getLoans(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/loans`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getLoansUrl(requestParameters) {\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_from !== undefined && _from !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/loans${queryString ? `?${queryString}` : ''}`;\n    }\n    headLoans(observe = 'body', reportProgress = false, options) {\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.head(`${this.configuration.basePath}/client-api/v1/loans`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    headLoansUrl() {\n        return `${this.configuration.basePath}/client-api/v1/loans`;\n    }\n}\nLoansHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: LoansHttpService, deps: [{ token: i1.HttpClient }, { token: LOANS_BASE_PATH, optional: true }, { token: LoansConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nLoansHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: LoansHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: LoansHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LOANS_BASE_PATH]\n                }] }, { type: LoansConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst LoansHttpServiceDownloadDocumentByLoanIdAndDocumentIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/loans/{loanId}/documents/{documentId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst LoansHttpServiceGetAmortizationPaymentMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/loans/{loanId}/amortization-schedule/{amortizationPaymentId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"$schema\": \"../schemas/amortization-payment.yaml\",\n                    \"id\": \"829d1713-8c65-4366-98c2-65a518255365\",\n                    \"paymentDate\": \"2020-07-24T00:00:00Z\",\n                    \"currencyCode\": \"USD\",\n                    \"paymentAmount\": \"40000.00000\",\n                    \"interest\": \"0.00000\",\n                    \"principal\": \"4000.00000\",\n                    \"endingPrincipalBalance\": \"40000.00000\",\n                    \"status\": \"Overdue\",\n                    \"paymentType\": \"principal-only\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"principal\": \"principal\",\n                    \"interest\": \"interest\",\n                    \"endingPrincipalBalance\": \"endingPrincipalBalance\",\n                    \"id\": \"id\",\n                    \"paymentDate\": \"2000-01-23T04:56:07.000+00:00\",\n                    \"paymentAmount\": \"paymentAmount\",\n                    \"currencyCode\": \"currencyCode\",\n                    \"paymentType\": \"paymentType\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst LoansHttpServiceGetAmortizationScheduleMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/loans/{loanId}/amortization-schedule\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"$schema\": \"../schemas/amortization-schedule.yaml\",\n                    \"payments\": [{\n                            \"id\": \"829d1713-8c65-4366-98c2-65a518255365\",\n                            \"paymentDate\": \"2020-07-24T00:00:00Z\",\n                            \"currencyCode\": \"USD\",\n                            \"paymentAmount\": \"40000.00000\",\n                            \"interest\": \"0.00000\",\n                            \"principal\": \"4000.00000\",\n                            \"endingPrincipalBalance\": \"40000.00000\",\n                            \"status\": \"Overdue\",\n                            \"paymentType\": \"principal-only\"\n                        }, {\n                            \"id\": \"522c5077-8fdc-43c0-bc71-d59bb66ea8ce\",\n                            \"paymentDate\": \"2020-08-24T00:00:00Z\",\n                            \"currencyCode\": \"USD\",\n                            \"paymentAmount\": \"8000.00000\",\n                            \"endingPrincipalBalance\": \"32000.00000\",\n                            \"status\": \"Scheduled\",\n                            \"paymentType\": \"interest-only\"\n                        }, {\n                            \"id\": \"9f4c565d-ffab-4ca1-9094-ee0d53a08782\",\n                            \"paymentDate\": \"2020-09-24T00:00:00Z\",\n                            \"currencyCode\": \"USD\",\n                            \"paymentAmount\": \"32001.00000\",\n                            \"interest\": \"1\",\n                            \"principal\": \"32000.00000\",\n                            \"endingPrincipalBalance\": \"0.00000\",\n                            \"status\": \"Scheduled\",\n                            \"paymentType\": \"principal-and-interest\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst LoansHttpServiceGetLoanByIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/loans/{loanId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"$schema\": \"../schemas/loan.yaml\",\n                    \"id\": \"9ed25bae-11eb-4840-b4fc-37bbe2e5f9c9\",\n                    \"loanType\": \"LineOfCredit\",\n                    \"name\": \"AnyBank Credit Line 1\",\n                    \"accountNumber\": \"096010415 000789 CL01\",\n                    \"contractNumber\": \"ATV-676097\",\n                    \"loanStatus\": \"Active\",\n                    \"currencyCode\": \"USD\",\n                    \"nextRepaymentDate\": \"2021-09-13T17:00:00.000Z\",\n                    \"nextRepaymentAmount\": \"200.00000\",\n                    \"availableBalance\": \"690.37000\",\n                    \"outstandingAmount\": \"1954.94000\",\n                    \"creditLimit\": \"2456.98000\",\n                    \"drawnAmount\": \"1766.61000\",\n                    \"feesDue\": \"100.00000\",\n                    \"interestDue\": \"88.33000\",\n                    \"interestRate\": \"5.00000\",\n                    \"isOverdue\": false,\n                    \"overduePaymentsCount\": 0,\n                    \"branchCode\": \"001\",\n                    \"startDate\": \"1996-10-23T17:00:00.000Z\",\n                    \"endDate\": \"2022-04-16T17:00:00.000Z\",\n                    \"borrower\": [\"John a. Doen\", \"M. Joaveni\", \"Robert Kan\", \"Kamal Terrell\"],\n                    \"defaultSettlementAccountId\": \"801b785e-c063-457c-bc12-82386f3ebc2d\",\n                    \"defaultSettlementAccountNumber\": \"•••• •••• ••• 4568\",\n                    \"defaultSettlementAccountName\": \"Prestige Operating Account\",\n                    \"documents\": [{\n                            \"documentId\": \"uid_00001\",\n                            \"name\": \"Loan Contract\",\n                            \"contentType\": \"application/pdf\"\n                        }],\n                    \"isFullyRepaid\": false,\n                    \"termUnit\": \"Year\",\n                    \"termCount\": 26,\n                    \"paymentFrequency\": \"Bimonthly\",\n                    \"interestPaymentFrequency\": \"Biweekly\",\n                    \"collateral\": [{\n                            \"type\": \"Real estate\",\n                            \"currentValue\": \"100\",\n                            \"currencyCode\": \"EUR\",\n                            \"specification\": \"300 Park Avenue 15th Floor, New York, NY 10022\",\n                            \"nextRevaluationDate\": \"2021-02-28\"\n                        }],\n                    \"escrow\": {\n                        \"totalAmount\": \"100\",\n                        \"insurance\": \"50\",\n                        \"fees\": \"30\",\n                        \"tax\": \"20\",\n                        \"pmi\": \"10\",\n                        \"other\": \"5\"\n                    },\n                    \"paymentOptions\": {\n                        \"paymentOptions\": [{\n                                \"name\": \"LoanPayment\",\n                                \"operationType\": \"Credit\",\n                                \"allowed\": true,\n                                \"errorCodes\": []\n                            }, {\n                                \"name\": \"LoanAdvance\",\n                                \"operationType\": \"Debit\",\n                                \"allowed\": true,\n                                \"errorCodes\": []\n                            }]\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"nextRepaymentAmount\": \"nextRepaymentAmount\",\n                    \"defaultSettlementAccountId\": \"defaultSettlementAccountId\",\n                    \"loanType\": \"loanType\",\n                    \"outstandingAmount\": \"outstandingAmount\",\n                    \"inArrearsDate\": \"2000-01-23T04:56:07.000+00:00\",\n                    \"endDate\": \"2000-01-23T04:56:07.000+00:00\",\n                    \"documents\": [{\n                            \"name\": \"name\",\n                            \"documentId\": \"documentId\",\n                            \"contentType\": \"contentType\"\n                        }, {\n                            \"name\": \"name\",\n                            \"documentId\": \"documentId\",\n                            \"contentType\": \"contentType\"\n                        }],\n                    \"termCount\": 6,\n                    \"availableBalance\": \"availableBalance\",\n                    \"drawnAmount\": \"drawnAmount\",\n                    \"paymentOptions\": {\n                        \"paymentOptions\": [{\n                                \"allowed\": true,\n                                \"errorCodes\": [\"errorCodes\", \"errorCodes\"],\n                                \"name\": \"name\"\n                            }, {\n                                \"allowed\": true,\n                                \"errorCodes\": [\"errorCodes\", \"errorCodes\"],\n                                \"name\": \"name\"\n                            }]\n                    },\n                    \"defaultSettlementAccountName\": \"defaultSettlementAccountName\",\n                    \"nextRepaymentDate\": \"2000-01-23T04:56:07.000+00:00\",\n                    \"alias\": \"alias\",\n                    \"creditLimit\": \"creditLimit\",\n                    \"escrow\": {\n                        \"insurance\": \"insurance\",\n                        \"totalAmount\": \"totalAmount\",\n                        \"fees\": \"fees\",\n                        \"other\": \"other\",\n                        \"tax\": \"tax\",\n                        \"pmi\": \"pmi\"\n                    },\n                    \"isFullyRepaid\": true,\n                    \"id\": \"id\",\n                    \"overduePaymentsCount\": 0,\n                    \"feesDue\": \"feesDue\",\n                    \"defaultSettlementAccountNumber\": \"defaultSettlementAccountNumber\",\n                    \"interestRate\": \"interestRate\",\n                    \"borrower\": [\"borrower\", \"borrower\"],\n                    \"contractNumber\": \"contractNumber\",\n                    \"accountNumber\": \"accountNumber\",\n                    \"inArrearsAmount\": \"inArrearsAmount\",\n                    \"branchCode\": \"branchCode\",\n                    \"isOverdue\": true,\n                    \"interestDue\": \"interestDue\",\n                    \"name\": \"name\",\n                    \"collateral\": [{\n                            \"specification\": \"specification\",\n                            \"nextRevaluationDate\": \"2000-01-23\",\n                            \"type\": \"type\",\n                            \"currencyCode\": \"currencyCode\",\n                            \"currentValue\": \"currentValue\"\n                        }, {\n                            \"specification\": \"specification\",\n                            \"nextRevaluationDate\": \"2000-01-23\",\n                            \"type\": \"type\",\n                            \"currencyCode\": \"currencyCode\",\n                            \"currentValue\": \"currentValue\"\n                        }],\n                    \"currencyCode\": \"currencyCode\",\n                    \"paidAmount\": \"paidAmount\",\n                    \"startDate\": \"2000-01-23T04:56:07.000+00:00\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst LoansHttpServiceGetLoansMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/loans\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"$schema\": \"../schemas/loans.yaml\",\n                    \"loans\": [{\n                            \"id\": \"9ed25bae-11eb-4840-b4fc-37bbe2e5f9c9\",\n                            \"loanType\": \"LineOfCredit\",\n                            \"name\": \"Line of credit 1\",\n                            \"accountNumber\": \"NL98RABO5242052503\",\n                            \"loanStatus\": \"Pending\",\n                            \"currencyCode\": \"EUR\",\n                            \"paymentOptions\": {\n                                \"paymentOptions\": [{\n                                        \"name\": \"LoanPayment\",\n                                        \"operationType\": \"Credit\",\n                                        \"allowed\": true,\n                                        \"errorCodes\": []\n                                    }, {\n                                        \"name\": \"LoanAdvance\",\n                                        \"operationType\": \"Debit\",\n                                        \"allowed\": true,\n                                        \"errorCodes\": []\n                                    }]\n                            }\n                        }, {\n                            \"id\": \"764ac5bb-f462-412f-8aee-a218737e1d2a\",\n                            \"name\": \"Term loan 1\",\n                            \"loanType\": \"TermLoan\",\n                            \"accountNumber\": \"NL88ABNA4242739303\",\n                            \"loanStatus\": \"Active\",\n                            \"currencyCode\": \"EUR\",\n                            \"paidAmount\": \"55567.23\",\n                            \"outstandingAmount\": \"54432.77\",\n                            \"paymentOptions\": {\n                                \"paymentOptions\": [{\n                                        \"name\": \"LoanPayment\",\n                                        \"operationType\": \"Credit\",\n                                        \"allowed\": true,\n                                        \"errorCodes\": []\n                                    }]\n                            }\n                        }, {\n                            \"id\": \"7688bd60-dfad-45ba-b1ce-abc6e9ea5208\",\n                            \"loanType\": \"Mortgage\",\n                            \"name\": \"Mortgage 1\",\n                            \"accountNumber\": \"MR3731835513862558214883344\",\n                            \"loanStatus\": \"Inactive\",\n                            \"currencyCode\": \"MRU\",\n                            \"paymentOptions\": {\n                                \"paymentOptions\": [{\n                                        \"name\": \"LoanPayment\",\n                                        \"operationType\": \"Credit\",\n                                        \"allowed\": false,\n                                        \"errorCodes\": [\"not.allowed.for.inactive.loan\"]\n                                    }, {\n                                        \"name\": \"LoanAdvance\",\n                                        \"operationType\": \"Debit\",\n                                        \"allowed\": false,\n                                        \"errorCodes\": [\"not.allowed.for.inactive.loan\"]\n                                    }]\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst LoansHttpServiceHeadLoansMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/loans\",\n        method: \"HEAD\",\n        responses: [\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst LoansHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v1/loans/{loanId}/documents/{documentId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/loans/{loanId}/amortization-schedule/{amortizationPaymentId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"$schema\": \"../schemas/amortization-payment.yaml\",\n                    \"id\": \"829d1713-8c65-4366-98c2-65a518255365\",\n                    \"paymentDate\": \"2020-07-24T00:00:00Z\",\n                    \"currencyCode\": \"USD\",\n                    \"paymentAmount\": \"40000.00000\",\n                    \"interest\": \"0.00000\",\n                    \"principal\": \"4000.00000\",\n                    \"endingPrincipalBalance\": \"40000.00000\",\n                    \"status\": \"Overdue\",\n                    \"paymentType\": \"principal-only\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"principal\": \"principal\",\n                    \"interest\": \"interest\",\n                    \"endingPrincipalBalance\": \"endingPrincipalBalance\",\n                    \"id\": \"id\",\n                    \"paymentDate\": \"2000-01-23T04:56:07.000+00:00\",\n                    \"paymentAmount\": \"paymentAmount\",\n                    \"currencyCode\": \"currencyCode\",\n                    \"paymentType\": \"paymentType\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/loans/{loanId}/amortization-schedule\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"$schema\": \"../schemas/amortization-schedule.yaml\",\n                    \"payments\": [{\n                            \"id\": \"829d1713-8c65-4366-98c2-65a518255365\",\n                            \"paymentDate\": \"2020-07-24T00:00:00Z\",\n                            \"currencyCode\": \"USD\",\n                            \"paymentAmount\": \"40000.00000\",\n                            \"interest\": \"0.00000\",\n                            \"principal\": \"4000.00000\",\n                            \"endingPrincipalBalance\": \"40000.00000\",\n                            \"status\": \"Overdue\",\n                            \"paymentType\": \"principal-only\"\n                        }, {\n                            \"id\": \"522c5077-8fdc-43c0-bc71-d59bb66ea8ce\",\n                            \"paymentDate\": \"2020-08-24T00:00:00Z\",\n                            \"currencyCode\": \"USD\",\n                            \"paymentAmount\": \"8000.00000\",\n                            \"endingPrincipalBalance\": \"32000.00000\",\n                            \"status\": \"Scheduled\",\n                            \"paymentType\": \"interest-only\"\n                        }, {\n                            \"id\": \"9f4c565d-ffab-4ca1-9094-ee0d53a08782\",\n                            \"paymentDate\": \"2020-09-24T00:00:00Z\",\n                            \"currencyCode\": \"USD\",\n                            \"paymentAmount\": \"32001.00000\",\n                            \"interest\": \"1\",\n                            \"principal\": \"32000.00000\",\n                            \"endingPrincipalBalance\": \"0.00000\",\n                            \"status\": \"Scheduled\",\n                            \"paymentType\": \"principal-and-interest\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/loans/{loanId}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"$schema\": \"../schemas/loan.yaml\",\n                    \"id\": \"9ed25bae-11eb-4840-b4fc-37bbe2e5f9c9\",\n                    \"loanType\": \"LineOfCredit\",\n                    \"name\": \"AnyBank Credit Line 1\",\n                    \"accountNumber\": \"096010415 000789 CL01\",\n                    \"contractNumber\": \"ATV-676097\",\n                    \"loanStatus\": \"Active\",\n                    \"currencyCode\": \"USD\",\n                    \"nextRepaymentDate\": \"2021-09-13T17:00:00.000Z\",\n                    \"nextRepaymentAmount\": \"200.00000\",\n                    \"availableBalance\": \"690.37000\",\n                    \"outstandingAmount\": \"1954.94000\",\n                    \"creditLimit\": \"2456.98000\",\n                    \"drawnAmount\": \"1766.61000\",\n                    \"feesDue\": \"100.00000\",\n                    \"interestDue\": \"88.33000\",\n                    \"interestRate\": \"5.00000\",\n                    \"isOverdue\": false,\n                    \"overduePaymentsCount\": 0,\n                    \"branchCode\": \"001\",\n                    \"startDate\": \"1996-10-23T17:00:00.000Z\",\n                    \"endDate\": \"2022-04-16T17:00:00.000Z\",\n                    \"borrower\": [\"John a. Doen\", \"M. Joaveni\", \"Robert Kan\", \"Kamal Terrell\"],\n                    \"defaultSettlementAccountId\": \"801b785e-c063-457c-bc12-82386f3ebc2d\",\n                    \"defaultSettlementAccountNumber\": \"•••• •••• ••• 4568\",\n                    \"defaultSettlementAccountName\": \"Prestige Operating Account\",\n                    \"documents\": [{\n                            \"documentId\": \"uid_00001\",\n                            \"name\": \"Loan Contract\",\n                            \"contentType\": \"application/pdf\"\n                        }],\n                    \"isFullyRepaid\": false,\n                    \"termUnit\": \"Year\",\n                    \"termCount\": 26,\n                    \"paymentFrequency\": \"Bimonthly\",\n                    \"interestPaymentFrequency\": \"Biweekly\",\n                    \"collateral\": [{\n                            \"type\": \"Real estate\",\n                            \"currentValue\": \"100\",\n                            \"currencyCode\": \"EUR\",\n                            \"specification\": \"300 Park Avenue 15th Floor, New York, NY 10022\",\n                            \"nextRevaluationDate\": \"2021-02-28\"\n                        }],\n                    \"escrow\": {\n                        \"totalAmount\": \"100\",\n                        \"insurance\": \"50\",\n                        \"fees\": \"30\",\n                        \"tax\": \"20\",\n                        \"pmi\": \"10\",\n                        \"other\": \"5\"\n                    },\n                    \"paymentOptions\": {\n                        \"paymentOptions\": [{\n                                \"name\": \"LoanPayment\",\n                                \"operationType\": \"Credit\",\n                                \"allowed\": true,\n                                \"errorCodes\": []\n                            }, {\n                                \"name\": \"LoanAdvance\",\n                                \"operationType\": \"Debit\",\n                                \"allowed\": true,\n                                \"errorCodes\": []\n                            }]\n                    }\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"nextRepaymentAmount\": \"nextRepaymentAmount\",\n                    \"defaultSettlementAccountId\": \"defaultSettlementAccountId\",\n                    \"loanType\": \"loanType\",\n                    \"outstandingAmount\": \"outstandingAmount\",\n                    \"inArrearsDate\": \"2000-01-23T04:56:07.000+00:00\",\n                    \"endDate\": \"2000-01-23T04:56:07.000+00:00\",\n                    \"documents\": [{\n                            \"name\": \"name\",\n                            \"documentId\": \"documentId\",\n                            \"contentType\": \"contentType\"\n                        }, {\n                            \"name\": \"name\",\n                            \"documentId\": \"documentId\",\n                            \"contentType\": \"contentType\"\n                        }],\n                    \"termCount\": 6,\n                    \"availableBalance\": \"availableBalance\",\n                    \"drawnAmount\": \"drawnAmount\",\n                    \"paymentOptions\": {\n                        \"paymentOptions\": [{\n                                \"allowed\": true,\n                                \"errorCodes\": [\"errorCodes\", \"errorCodes\"],\n                                \"name\": \"name\"\n                            }, {\n                                \"allowed\": true,\n                                \"errorCodes\": [\"errorCodes\", \"errorCodes\"],\n                                \"name\": \"name\"\n                            }]\n                    },\n                    \"defaultSettlementAccountName\": \"defaultSettlementAccountName\",\n                    \"nextRepaymentDate\": \"2000-01-23T04:56:07.000+00:00\",\n                    \"alias\": \"alias\",\n                    \"creditLimit\": \"creditLimit\",\n                    \"escrow\": {\n                        \"insurance\": \"insurance\",\n                        \"totalAmount\": \"totalAmount\",\n                        \"fees\": \"fees\",\n                        \"other\": \"other\",\n                        \"tax\": \"tax\",\n                        \"pmi\": \"pmi\"\n                    },\n                    \"isFullyRepaid\": true,\n                    \"id\": \"id\",\n                    \"overduePaymentsCount\": 0,\n                    \"feesDue\": \"feesDue\",\n                    \"defaultSettlementAccountNumber\": \"defaultSettlementAccountNumber\",\n                    \"interestRate\": \"interestRate\",\n                    \"borrower\": [\"borrower\", \"borrower\"],\n                    \"contractNumber\": \"contractNumber\",\n                    \"accountNumber\": \"accountNumber\",\n                    \"inArrearsAmount\": \"inArrearsAmount\",\n                    \"branchCode\": \"branchCode\",\n                    \"isOverdue\": true,\n                    \"interestDue\": \"interestDue\",\n                    \"name\": \"name\",\n                    \"collateral\": [{\n                            \"specification\": \"specification\",\n                            \"nextRevaluationDate\": \"2000-01-23\",\n                            \"type\": \"type\",\n                            \"currencyCode\": \"currencyCode\",\n                            \"currentValue\": \"currentValue\"\n                        }, {\n                            \"specification\": \"specification\",\n                            \"nextRevaluationDate\": \"2000-01-23\",\n                            \"type\": \"type\",\n                            \"currencyCode\": \"currencyCode\",\n                            \"currentValue\": \"currentValue\"\n                        }],\n                    \"currencyCode\": \"currencyCode\",\n                    \"paidAmount\": \"paidAmount\",\n                    \"startDate\": \"2000-01-23T04:56:07.000+00:00\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/loans\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"$schema\": \"../schemas/loans.yaml\",\n                    \"loans\": [{\n                            \"id\": \"9ed25bae-11eb-4840-b4fc-37bbe2e5f9c9\",\n                            \"loanType\": \"LineOfCredit\",\n                            \"name\": \"Line of credit 1\",\n                            \"accountNumber\": \"NL98RABO5242052503\",\n                            \"loanStatus\": \"Pending\",\n                            \"currencyCode\": \"EUR\",\n                            \"paymentOptions\": {\n                                \"paymentOptions\": [{\n                                        \"name\": \"LoanPayment\",\n                                        \"operationType\": \"Credit\",\n                                        \"allowed\": true,\n                                        \"errorCodes\": []\n                                    }, {\n                                        \"name\": \"LoanAdvance\",\n                                        \"operationType\": \"Debit\",\n                                        \"allowed\": true,\n                                        \"errorCodes\": []\n                                    }]\n                            }\n                        }, {\n                            \"id\": \"764ac5bb-f462-412f-8aee-a218737e1d2a\",\n                            \"name\": \"Term loan 1\",\n                            \"loanType\": \"TermLoan\",\n                            \"accountNumber\": \"NL88ABNA4242739303\",\n                            \"loanStatus\": \"Active\",\n                            \"currencyCode\": \"EUR\",\n                            \"paidAmount\": \"55567.23\",\n                            \"outstandingAmount\": \"54432.77\",\n                            \"paymentOptions\": {\n                                \"paymentOptions\": [{\n                                        \"name\": \"LoanPayment\",\n                                        \"operationType\": \"Credit\",\n                                        \"allowed\": true,\n                                        \"errorCodes\": []\n                                    }]\n                            }\n                        }, {\n                            \"id\": \"7688bd60-dfad-45ba-b1ce-abc6e9ea5208\",\n                            \"loanType\": \"Mortgage\",\n                            \"name\": \"Mortgage 1\",\n                            \"accountNumber\": \"MR3731835513862558214883344\",\n                            \"loanStatus\": \"Inactive\",\n                            \"currencyCode\": \"MRU\",\n                            \"paymentOptions\": {\n                                \"paymentOptions\": [{\n                                        \"name\": \"LoanPayment\",\n                                        \"operationType\": \"Credit\",\n                                        \"allowed\": false,\n                                        \"errorCodes\": [\"not.allowed.for.inactive.loan\"]\n                                    }, {\n                                        \"name\": \"LoanAdvance\",\n                                        \"operationType\": \"Debit\",\n                                        \"allowed\": false,\n                                        \"errorCodes\": [\"not.allowed.for.inactive.loan\"]\n                                    }]\n                            }\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v1/loans\",\n        method: \"HEAD\",\n        responses: [\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n]);\n\nclass PaymentHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new LoansConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    calculatePaymentAmount(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling calculatePaymentAmount.');\n        }\n        const _presentationCalculatePaymentAmountRequest = requestParameters[\"presentationCalculatePaymentAmountRequest\"];\n        if (_presentationCalculatePaymentAmountRequest === null || _presentationCalculatePaymentAmountRequest === undefined) {\n            throw new Error('Required parameter presentationCalculatePaymentAmountRequest was null or undefined when calling calculatePaymentAmount.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/calculate-payment-amount`, _presentationCalculatePaymentAmountRequest, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    calculatePaymentAmountUrl(requestParameters) {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling calculatePaymentAmount.');\n        }\n        const _presentationCalculatePaymentAmountRequest = requestParameters[\"presentationCalculatePaymentAmountRequest\"];\n        if (_presentationCalculatePaymentAmountRequest === null || _presentationCalculatePaymentAmountRequest === undefined) {\n            throw new Error('Required parameter presentationCalculatePaymentAmountRequest was null or undefined when calling calculatePaymentAmount.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/calculate-payment-amount`;\n    }\n}\nPaymentHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentHttpService, deps: [{ token: i1.HttpClient }, { token: LOANS_BASE_PATH, optional: true }, { token: LoansConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nPaymentHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LOANS_BASE_PATH]\n                }] }, { type: LoansConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst PaymentHttpServiceCalculatePaymentAmountMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/loans/{loanId}/calculate-payment-amount\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"$schema\": \"../schemas/calculated-payment-amount.yaml\",\n                    \"paymentOption\": \"LOAN_PAYMENT\",\n                    \"paymentDate\": \"2021-12-22\",\n                    \"currentPaymentAmount\": \"100.00000\",\n                    \"fees\": [{\n                            \"feeType\": \"Transaction fee\",\n                            \"amount\": \"11.00000\",\n                            \"sameTransaction\": false\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst PaymentHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v1/loans/{loanId}/calculate-payment-amount\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"$schema\": \"../schemas/calculated-payment-amount.yaml\",\n                    \"paymentOption\": \"LOAN_PAYMENT\",\n                    \"paymentDate\": \"2021-12-22\",\n                    \"currentPaymentAmount\": \"100.00000\",\n                    \"fees\": [{\n                            \"feeType\": \"Transaction fee\",\n                            \"amount\": \"11.00000\",\n                            \"sameTransaction\": false\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n]);\n\nclass PaymentOptionsHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new LoansConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    getPaymentOptions(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling getPaymentOptions.');\n        }\n        const _operationType = requestParameters[\"operationType\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_operationType) {\n            _operationType.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters, element, 'operationType');\n            });\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/payment-options`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getPaymentOptionsUrl(requestParameters) {\n        const _loanId = requestParameters[\"loanId\"];\n        if (_loanId === null || _loanId === undefined) {\n            throw new Error('Required parameter loanId was null or undefined when calling getPaymentOptions.');\n        }\n        const _operationType = requestParameters[\"operationType\"];\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_operationType) {\n            _operationType.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters, element, 'operationType');\n            });\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/loans/${encodeURIComponent(String(_loanId))}/payment-options${queryString ? `?${queryString}` : ''}`;\n    }\n}\nPaymentOptionsHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentOptionsHttpService, deps: [{ token: i1.HttpClient }, { token: LOANS_BASE_PATH, optional: true }, { token: LoansConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nPaymentOptionsHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentOptionsHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: PaymentOptionsHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LOANS_BASE_PATH]\n                }] }, { type: LoansConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst PaymentOptionsHttpServiceGetPaymentOptionsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v1/loans/{loanId}/payment-options\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"$schema\": \"../schemas/payment-options.yaml\",\n                    \"paymentOptions\": [{\n                            \"name\": \"LoanPayment\",\n                            \"operationType\": \"Credit\",\n                            \"allowed\": true\n                        }, {\n                            \"name\": \"LoanAdvance\",\n                            \"operationType\": \"Debit\",\n                            \"allowed\": false,\n                            \"errorCodes\": [\"draw.amount.is.not.allowed\"]\n                        }]\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"paymentOptions\": [{\n                            \"allowed\": true,\n                            \"errorCodes\": [\"errorCodes\", \"errorCodes\"],\n                            \"name\": \"name\"\n                        }, {\n                            \"allowed\": true,\n                            \"errorCodes\": [\"errorCodes\", \"errorCodes\"],\n                            \"name\": \"name\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst PaymentOptionsHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v1/loans/{loanId}/payment-options\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"$schema\": \"../schemas/payment-options.yaml\",\n                    \"paymentOptions\": [{\n                            \"name\": \"LoanPayment\",\n                            \"operationType\": \"Credit\",\n                            \"allowed\": true\n                        }, {\n                            \"name\": \"LoanAdvance\",\n                            \"operationType\": \"Debit\",\n                            \"allowed\": false,\n                            \"errorCodes\": [\"draw.amount.is.not.allowed\"]\n                        }]\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"paymentOptions\": [{\n                            \"allowed\": true,\n                            \"errorCodes\": [\"errorCodes\", \"errorCodes\"],\n                            \"name\": \"name\"\n                        }, {\n                            \"allowed\": true,\n                            \"errorCodes\": [\"errorCodes\", \"errorCodes\"],\n                            \"name\": \"name\"\n                        }]\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n]);\n\nexport { COLLECTION_FORMATS, CONFIG_TOKEN, LOANS_BASE_PATH, LoansApiModule, LoansConfiguration, LoansHttpService, LoansHttpServiceDownloadDocumentByLoanIdAndDocumentIdMocksProvider, LoansHttpServiceGetAmortizationPaymentMocksProvider, LoansHttpServiceGetAmortizationScheduleMocksProvider, LoansHttpServiceGetLoanByIdMocksProvider, LoansHttpServiceGetLoansMocksProvider, LoansHttpServiceHeadLoansMocksProvider, LoansHttpServiceMocksProvider, PaymentHttpService, PaymentHttpServiceCalculatePaymentAmountMocksProvider, PaymentHttpServiceMocksProvider, PaymentOptionsHttpService, PaymentOptionsHttpServiceGetPaymentOptionsMocksProvider, PaymentOptionsHttpServiceMocksProvider, PresentationAmortizationPaymentStatus, PresentationFrequency, PresentationLoanStatus, PresentationOperationType, PresentationPaymentAmountCalculationType, PresentationTermUnit };\n"]},"metadata":{},"sourceType":"module"}