{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Pipe, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { getValue } from '@backbase/accounts-transactions-journeys-shared-util-transform-ang';\n/**\n * Converts value to a number\n * {{ 'value' | bbToNumber }}\n */\n\nclass ToNumberPipe {\n  transform(value) {\n    return Number(value === null || value === void 0 ? void 0 : value.toString().replace(/[^\\d.-]/g, ''));\n  }\n\n}\n/** @nocollapse */\n\n\nToNumberPipe.ɵfac = function ToNumberPipe_Factory(t) {\n  return new (t || ToNumberPipe)();\n};\n/** @nocollapse */\n\n\nToNumberPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"bbToNumber\",\n  type: ToNumberPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToNumberPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'bbToNumber'\n    }]\n  }], null, null);\n})();\n\nconst pipes$4 = [ToNumberPipe];\n\nclass ToNumberPipeModule {}\n/** @nocollapse */\n\n\nToNumberPipeModule.ɵfac = function ToNumberPipeModule_Factory(t) {\n  return new (t || ToNumberPipeModule)();\n};\n/** @nocollapse */\n\n\nToNumberPipeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ToNumberPipeModule\n});\n/** @nocollapse */\n\nToNumberPipeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToNumberPipeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [...pipes$4],\n      exports: [...pipes$4]\n    }]\n  }], null, null);\n})();\n/**\n * Converts value to array\n * {{ 'value' | bbToArray }}\n */\n\n\nclass ToArrayPipe {\n  transform(value) {\n    return Array.isArray(value) ? value : [value];\n  }\n\n}\n/** @nocollapse */\n\n\nToArrayPipe.ɵfac = function ToArrayPipe_Factory(t) {\n  return new (t || ToArrayPipe)();\n};\n/** @nocollapse */\n\n\nToArrayPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"bbToArray\",\n  type: ToArrayPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToArrayPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'bbToArray'\n    }]\n  }], null, null);\n})();\n\nconst pipes$3 = [ToArrayPipe];\n\nclass ToArrayPipeModule {}\n/** @nocollapse */\n\n\nToArrayPipeModule.ɵfac = function ToArrayPipeModule_Factory(t) {\n  return new (t || ToArrayPipeModule)();\n};\n/** @nocollapse */\n\n\nToArrayPipeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ToArrayPipeModule\n});\n/** @nocollapse */\n\nToArrayPipeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToArrayPipeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [...pipes$3],\n      exports: [...pipes$3]\n    }]\n  }], null, null);\n})();\n/**\n * Splits array of items into chunks\n * {{ [1, 2, 3, 4] | bbSplitArray:2 }}\n */\n\n\nclass SplitArrayPipe {\n  transform(array, chunkSize) {\n    const chunks = [];\n\n    for (let i = 0; i < array.length; i += chunkSize) {\n      chunks.push(array.slice(i, i + chunkSize));\n    }\n\n    return chunks;\n  }\n\n}\n/** @nocollapse */\n\n\nSplitArrayPipe.ɵfac = function SplitArrayPipe_Factory(t) {\n  return new (t || SplitArrayPipe)();\n};\n/** @nocollapse */\n\n\nSplitArrayPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"bbSplitArray\",\n  type: SplitArrayPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplitArrayPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'bbSplitArray'\n    }]\n  }], null, null);\n})();\n\nconst pipes$2 = [SplitArrayPipe];\n\nclass SplitArrayPipeModule {}\n/** @nocollapse */\n\n\nSplitArrayPipeModule.ɵfac = function SplitArrayPipeModule_Factory(t) {\n  return new (t || SplitArrayPipeModule)();\n};\n/** @nocollapse */\n\n\nSplitArrayPipeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SplitArrayPipeModule\n});\n/** @nocollapse */\n\nSplitArrayPipeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplitArrayPipeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [...pipes$2],\n      exports: [...pipes$2]\n    }]\n  }], null, null);\n})();\n/**\n * Gets a value from the object\n * {{ { key: 'value' } | bbGetValue:'key' }}\n */\n\n\nclass GetValuePipe {\n  transform(item, key) {\n    return getValue(item, key);\n  }\n\n}\n/** @nocollapse */\n\n\nGetValuePipe.ɵfac = function GetValuePipe_Factory(t) {\n  return new (t || GetValuePipe)();\n};\n/** @nocollapse */\n\n\nGetValuePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"bbGetValue\",\n  type: GetValuePipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GetValuePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'bbGetValue'\n    }]\n  }], null, null);\n})();\n\nconst pipes$1 = [GetValuePipe];\n\nclass GetValuePipeModule {}\n/** @nocollapse */\n\n\nGetValuePipeModule.ɵfac = function GetValuePipeModule_Factory(t) {\n  return new (t || GetValuePipeModule)();\n};\n/** @nocollapse */\n\n\nGetValuePipeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: GetValuePipeModule\n});\n/** @nocollapse */\n\nGetValuePipeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GetValuePipeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [...pipes$1],\n      exports: [...pipes$1]\n    }]\n  }], null, null);\n})();\n/**\n * Gets decimals count\n * {{ 12.4 | bbGetDecimalsCount }}\n */\n\n\nclass GetDecimalsCountPipe {\n  transform(value) {\n    var _a, _b;\n\n    return (_b = (_a = value === null || value === void 0 ? void 0 : value.toString().split('.')[1]) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n  }\n\n}\n/** @nocollapse */\n\n\nGetDecimalsCountPipe.ɵfac = function GetDecimalsCountPipe_Factory(t) {\n  return new (t || GetDecimalsCountPipe)();\n};\n/** @nocollapse */\n\n\nGetDecimalsCountPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"bbGetDecimalsCount\",\n  type: GetDecimalsCountPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GetDecimalsCountPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'bbGetDecimalsCount'\n    }]\n  }], null, null);\n})();\n\nconst pipes = [GetDecimalsCountPipe];\n\nclass GetDecimalsCountModule {}\n/** @nocollapse */\n\n\nGetDecimalsCountModule.ɵfac = function GetDecimalsCountModule_Factory(t) {\n  return new (t || GetDecimalsCountModule)();\n};\n/** @nocollapse */\n\n\nGetDecimalsCountModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: GetDecimalsCountModule\n});\n/** @nocollapse */\n\nGetDecimalsCountModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GetDecimalsCountModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [...pipes],\n      exports: [...pipes]\n    }]\n  }], null, null);\n})();\n\nconst pipeModules = [ToNumberPipeModule, ToArrayPipeModule, SplitArrayPipeModule, GetValuePipeModule, GetDecimalsCountModule];\n\nclass SharedUiTransformModule {}\n/** @nocollapse */\n\n\nSharedUiTransformModule.ɵfac = function SharedUiTransformModule_Factory(t) {\n  return new (t || SharedUiTransformModule)();\n};\n/** @nocollapse */\n\n\nSharedUiTransformModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SharedUiTransformModule\n});\n/** @nocollapse */\n\nSharedUiTransformModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ...pipeModules], ToNumberPipeModule, ToArrayPipeModule, SplitArrayPipeModule, GetValuePipeModule, GetDecimalsCountModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SharedUiTransformModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ...pipeModules],\n      exports: [...pipeModules]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { GetDecimalsCountModule, GetDecimalsCountPipe, GetValuePipe, GetValuePipeModule, SharedUiTransformModule, SplitArrayPipe, SplitArrayPipeModule, ToArrayPipe, ToArrayPipeModule, ToNumberPipe, ToNumberPipeModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/accounts-transactions-journeys-shared-ui-transform-ang/fesm2015/backbase-accounts-transactions-journeys-shared-ui-transform-ang.js"],"names":["i0","Pipe","NgModule","CommonModule","getValue","ToNumberPipe","transform","value","Number","toString","replace","ɵfac","ɵpipe","type","args","name","pipes$4","ToNumberPipeModule","ɵmod","ɵinj","imports","declarations","exports","ToArrayPipe","Array","isArray","pipes$3","ToArrayPipeModule","SplitArrayPipe","array","chunkSize","chunks","i","length","push","slice","pipes$2","SplitArrayPipeModule","GetValuePipe","item","key","pipes$1","GetValuePipeModule","GetDecimalsCountPipe","_a","_b","split","pipes","GetDecimalsCountModule","pipeModules","SharedUiTransformModule"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Pipe, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { getValue } from '@backbase/accounts-transactions-journeys-shared-util-transform-ang';\n\n/**\n * Converts value to a number\n * {{ 'value' | bbToNumber }}\n */\nclass ToNumberPipe {\n    transform(value) {\n        return Number(value === null || value === void 0 ? void 0 : value.toString().replace(/[^\\d.-]/g, ''));\n    }\n}\n/** @nocollapse */ ToNumberPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ToNumberPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\n/** @nocollapse */ ToNumberPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ToNumberPipe, name: \"bbToNumber\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ToNumberPipe, decorators: [{\n            type: Pipe,\n            args: [{ name: 'bbToNumber' }]\n        }] });\n\nconst pipes$4 = [ToNumberPipe];\nclass ToNumberPipeModule {\n}\n/** @nocollapse */ ToNumberPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ToNumberPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ ToNumberPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ToNumberPipeModule, declarations: [ToNumberPipe], imports: [CommonModule], exports: [ToNumberPipe] });\n/** @nocollapse */ ToNumberPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ToNumberPipeModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ToNumberPipeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [...pipes$4],\n                    exports: [...pipes$4],\n                }]\n        }] });\n\n/**\n * Converts value to array\n * {{ 'value' | bbToArray }}\n */\nclass ToArrayPipe {\n    transform(value) {\n        return Array.isArray(value) ? value : [value];\n    }\n}\n/** @nocollapse */ ToArrayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ToArrayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\n/** @nocollapse */ ToArrayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ToArrayPipe, name: \"bbToArray\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ToArrayPipe, decorators: [{\n            type: Pipe,\n            args: [{ name: 'bbToArray' }]\n        }] });\n\nconst pipes$3 = [ToArrayPipe];\nclass ToArrayPipeModule {\n}\n/** @nocollapse */ ToArrayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ToArrayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ ToArrayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ToArrayPipeModule, declarations: [ToArrayPipe], imports: [CommonModule], exports: [ToArrayPipe] });\n/** @nocollapse */ ToArrayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ToArrayPipeModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ToArrayPipeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [...pipes$3],\n                    exports: [...pipes$3],\n                }]\n        }] });\n\n/**\n * Splits array of items into chunks\n * {{ [1, 2, 3, 4] | bbSplitArray:2 }}\n */\nclass SplitArrayPipe {\n    transform(array, chunkSize) {\n        const chunks = [];\n        for (let i = 0; i < array.length; i += chunkSize) {\n            chunks.push(array.slice(i, i + chunkSize));\n        }\n        return chunks;\n    }\n}\n/** @nocollapse */ SplitArrayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SplitArrayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\n/** @nocollapse */ SplitArrayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SplitArrayPipe, name: \"bbSplitArray\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SplitArrayPipe, decorators: [{\n            type: Pipe,\n            args: [{ name: 'bbSplitArray' }]\n        }] });\n\nconst pipes$2 = [SplitArrayPipe];\nclass SplitArrayPipeModule {\n}\n/** @nocollapse */ SplitArrayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SplitArrayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ SplitArrayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SplitArrayPipeModule, declarations: [SplitArrayPipe], imports: [CommonModule], exports: [SplitArrayPipe] });\n/** @nocollapse */ SplitArrayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SplitArrayPipeModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SplitArrayPipeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [...pipes$2],\n                    exports: [...pipes$2],\n                }]\n        }] });\n\n/**\n * Gets a value from the object\n * {{ { key: 'value' } | bbGetValue:'key' }}\n */\nclass GetValuePipe {\n    transform(item, key) {\n        return getValue(item, key);\n    }\n}\n/** @nocollapse */ GetValuePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GetValuePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\n/** @nocollapse */ GetValuePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GetValuePipe, name: \"bbGetValue\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GetValuePipe, decorators: [{\n            type: Pipe,\n            args: [{ name: 'bbGetValue' }]\n        }] });\n\nconst pipes$1 = [GetValuePipe];\nclass GetValuePipeModule {\n}\n/** @nocollapse */ GetValuePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GetValuePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ GetValuePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GetValuePipeModule, declarations: [GetValuePipe], imports: [CommonModule], exports: [GetValuePipe] });\n/** @nocollapse */ GetValuePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GetValuePipeModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GetValuePipeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [...pipes$1],\n                    exports: [...pipes$1],\n                }]\n        }] });\n\n/**\n * Gets decimals count\n * {{ 12.4 | bbGetDecimalsCount }}\n */\nclass GetDecimalsCountPipe {\n    transform(value) {\n        var _a, _b;\n        return (_b = (_a = value === null || value === void 0 ? void 0 : value.toString().split('.')[1]) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n    }\n}\n/** @nocollapse */ GetDecimalsCountPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GetDecimalsCountPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\n/** @nocollapse */ GetDecimalsCountPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GetDecimalsCountPipe, name: \"bbGetDecimalsCount\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GetDecimalsCountPipe, decorators: [{\n            type: Pipe,\n            args: [{ name: 'bbGetDecimalsCount' }]\n        }] });\n\nconst pipes = [GetDecimalsCountPipe];\nclass GetDecimalsCountModule {\n}\n/** @nocollapse */ GetDecimalsCountModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GetDecimalsCountModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ GetDecimalsCountModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GetDecimalsCountModule, declarations: [GetDecimalsCountPipe], imports: [CommonModule], exports: [GetDecimalsCountPipe] });\n/** @nocollapse */ GetDecimalsCountModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GetDecimalsCountModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GetDecimalsCountModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [...pipes],\n                    exports: [...pipes],\n                }]\n        }] });\n\nconst pipeModules = [\n    ToNumberPipeModule,\n    ToArrayPipeModule,\n    SplitArrayPipeModule,\n    GetValuePipeModule,\n    GetDecimalsCountModule,\n];\nclass SharedUiTransformModule {\n}\n/** @nocollapse */ SharedUiTransformModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedUiTransformModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ SharedUiTransformModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedUiTransformModule, imports: [CommonModule, ToNumberPipeModule,\n        ToArrayPipeModule,\n        SplitArrayPipeModule,\n        GetValuePipeModule,\n        GetDecimalsCountModule], exports: [ToNumberPipeModule,\n        ToArrayPipeModule,\n        SplitArrayPipeModule,\n        GetValuePipeModule,\n        GetDecimalsCountModule] });\n/** @nocollapse */ SharedUiTransformModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedUiTransformModule, imports: [[CommonModule, ...pipeModules], ToNumberPipeModule,\n        ToArrayPipeModule,\n        SplitArrayPipeModule,\n        GetValuePipeModule,\n        GetDecimalsCountModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedUiTransformModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, ...pipeModules],\n                    exports: [...pipeModules],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GetDecimalsCountModule, GetDecimalsCountPipe, GetValuePipe, GetValuePipeModule, SharedUiTransformModule, SplitArrayPipe, SplitArrayPipeModule, ToArrayPipe, ToArrayPipeModule, ToNumberPipe, ToNumberPipeModule };\n"]},"metadata":{},"sourceType":"module"}