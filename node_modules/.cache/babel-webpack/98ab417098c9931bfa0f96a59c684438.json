{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Pipe, NgModule } from '@angular/core';\nimport { AsYouType, parsePhoneNumber } from '@backbase/phone-number-lib';\n/**\n * @name PhoneNumberFormatPipe\n *\n * @description\n * Pipe for formatting phone numbers to various international formats\n */\n\nclass PhoneNumberPipe {\n  /**\n   * @name PhoneNumberFormatPipe#transform\n   * @param value - the phone number string to transform\n   * @param countryCode - the two letter CDLR code for the country to format to\n   * @param isInputElement - whether the value was entered in an input element\n   *\n   * @description\n   * Formats a phone number to any entered country code international format\n   */\n  transform(value, countryCode, isInputElement) {\n    try {\n      if (isInputElement) {\n        value = new AsYouType(countryCode).input(value.toString());\n      }\n\n      return parsePhoneNumber(value.toString(), countryCode).formatInternational();\n    } catch (e) {\n      return value.toString();\n    }\n  }\n\n}\n\nPhoneNumberPipe.ɵfac = function PhoneNumberPipe_Factory(t) {\n  return new (t || PhoneNumberPipe)();\n};\n\nPhoneNumberPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"phoneNumber\",\n  type: PhoneNumberPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PhoneNumberPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'phoneNumber'\n    }]\n  }], null, null);\n})();\n\nclass PhoneNumberModule {}\n\nPhoneNumberModule.ɵfac = function PhoneNumberModule_Factory(t) {\n  return new (t || PhoneNumberModule)();\n};\n\nPhoneNumberModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PhoneNumberModule\n});\nPhoneNumberModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PhoneNumberModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [PhoneNumberPipe],\n      exports: [PhoneNumberPipe]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { PhoneNumberModule, PhoneNumberPipe };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-phone-number-format-pipe.js"],"names":["CommonModule","i0","Pipe","NgModule","AsYouType","parsePhoneNumber","PhoneNumberPipe","transform","value","countryCode","isInputElement","input","toString","formatInternational","e","ɵfac","ɵpipe","type","args","name","PhoneNumberModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"AAAA,SAASA,YAAT,QAA6B,iBAA7B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,eAA/B;AACA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,4BAA5C;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,eAAN,CAAsB;AAClB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,SAAS,CAACC,KAAD,EAAQC,WAAR,EAAqBC,cAArB,EAAqC;AAC1C,QAAI;AACA,UAAIA,cAAJ,EAAoB;AAChBF,QAAAA,KAAK,GAAG,IAAIJ,SAAJ,CAAcK,WAAd,EAA2BE,KAA3B,CAAiCH,KAAK,CAACI,QAAN,EAAjC,CAAR;AACH;;AACD,aAAOP,gBAAgB,CAACG,KAAK,CAACI,QAAN,EAAD,EAAmBH,WAAnB,CAAhB,CAAgDI,mBAAhD,EAAP;AACH,KALD,CAMA,OAAOC,CAAP,EAAU;AACN,aAAON,KAAK,CAACI,QAAN,EAAP;AACH;AACJ;;AApBiB;;AAsBtBN,eAAe,CAACS,IAAhB;AAAA,mBAA6GT,eAA7G;AAAA;;AACAA,eAAe,CAACU,KAAhB,kBADmGf,EACnG;AAAA;AAAA,QAA2GK,eAA3G;AAAA;AAAA;;AACA;AAAA,qDAFmGL,EAEnG,mBAA4FK,eAA5F,EAAyH,CAAC;AAC9GW,IAAAA,IAAI,EAAEf,IADwG;AAE9GgB,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,IAAI,EAAE;AADP,KAAD;AAFwG,GAAD,CAAzH;AAAA;;AAOA,MAAMC,iBAAN,CAAwB;;AAExBA,iBAAiB,CAACL,IAAlB;AAAA,mBAA+GK,iBAA/G;AAAA;;AACAA,iBAAiB,CAACC,IAAlB,kBAZmGpB,EAYnG;AAAA,QAAgHmB;AAAhH;AACAA,iBAAiB,CAACE,IAAlB,kBAbmGrB,EAanG;AAAA,YAA6I,CAACD,YAAD,CAA7I;AAAA;;AACA;AAAA,qDAdmGC,EAcnG,mBAA4FmB,iBAA5F,EAA2H,CAAC;AAChHH,IAAAA,IAAI,EAAEd,QAD0G;AAEhHe,IAAAA,IAAI,EAAE,CAAC;AACCK,MAAAA,OAAO,EAAE,CAACvB,YAAD,CADV;AAECwB,MAAAA,YAAY,EAAE,CAAClB,eAAD,CAFf;AAGCmB,MAAAA,OAAO,EAAE,CAACnB,eAAD;AAHV,KAAD;AAF0G,GAAD,CAA3H;AAAA;AASA;AACA;AACA;;;AAEA,SAASc,iBAAT,EAA4Bd,eAA5B","sourcesContent":["import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Pipe, NgModule } from '@angular/core';\nimport { AsYouType, parsePhoneNumber } from '@backbase/phone-number-lib';\n\n/**\n * @name PhoneNumberFormatPipe\n *\n * @description\n * Pipe for formatting phone numbers to various international formats\n */\nclass PhoneNumberPipe {\n    /**\n     * @name PhoneNumberFormatPipe#transform\n     * @param value - the phone number string to transform\n     * @param countryCode - the two letter CDLR code for the country to format to\n     * @param isInputElement - whether the value was entered in an input element\n     *\n     * @description\n     * Formats a phone number to any entered country code international format\n     */\n    transform(value, countryCode, isInputElement) {\n        try {\n            if (isInputElement) {\n                value = new AsYouType(countryCode).input(value.toString());\n            }\n            return parsePhoneNumber(value.toString(), countryCode).formatInternational();\n        }\n        catch (e) {\n            return value.toString();\n        }\n    }\n}\nPhoneNumberPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PhoneNumberPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nPhoneNumberPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PhoneNumberPipe, name: \"phoneNumber\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PhoneNumberPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'phoneNumber',\n                }]\n        }] });\n\nclass PhoneNumberModule {\n}\nPhoneNumberModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PhoneNumberModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPhoneNumberModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PhoneNumberModule, declarations: [PhoneNumberPipe], imports: [CommonModule], exports: [PhoneNumberPipe] });\nPhoneNumberModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PhoneNumberModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PhoneNumberModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [PhoneNumberPipe],\n                    exports: [PhoneNumberPipe],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PhoneNumberModule, PhoneNumberPipe };\n"]},"metadata":{},"sourceType":"module"}