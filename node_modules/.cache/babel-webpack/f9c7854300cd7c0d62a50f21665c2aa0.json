{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport * as i2 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i3 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\n/**\n * @name PeriodSelectorComponent\n *\n * @description\n * Component that selects a period.\n */\n\nconst _c0 = function (a0) {\n  return {\n    disabled: a0\n  };\n};\n\nclass PeriodSelectorComponent {\n  constructor(datePipe) {\n    this.datePipe = datePipe;\n    this.combinedFormatters = {\n      title: date => this.datePipe.transform(date, 'MMMM') || '',\n      start: date => this.datePipe.transform(date, 'mediumDate') || '',\n      end: date => this.datePipe.transform(date, 'mediumDate') || ''\n    };\n    /**\n     * Period step\n     */\n\n    this.period = 'month';\n    /**\n     * EventEmitter for triggering a periodChange event.\n     */\n\n    this.periodChange = new EventEmitter();\n  }\n  /**\n   * Custom date period formatter.\n   */\n\n\n  set periodFormatters(formatters) {\n    this.combinedFormatters = Object.assign(this.combinedFormatters, formatters);\n  }\n\n  get isLastPeriod() {\n    if (!this.periodStart) {\n      return true;\n    }\n\n    const now = new Date();\n    return now.getFullYear() === this.periodStart.getFullYear() && now.getMonth() === this.periodStart.getMonth();\n  }\n\n  ngOnInit() {\n    if (typeof this.periodStart === 'undefined' || typeof this.periodEnd === 'undefined') {\n      throw new Error('`periodStart`, and `periodEnd` inputs are required in `bb-period-selector-ui` component');\n    }\n\n    this.setFormattedValues();\n  }\n\n  setFormattedValues() {\n    this.formattedTitle = this.combinedFormatters.title(this.periodStart);\n    this.formattedStart = this.combinedFormatters.start(this.periodStart);\n    this.formattedEnd = this.combinedFormatters.end(this.periodEnd);\n  }\n\n  changePeriod(next) {\n    if (!this.periodStart || next && this.isLastPeriod) {\n      return;\n    }\n\n    this.periodStart.setMonth(this.periodStart.getMonth() + (next ? 1 : -1));\n    this.periodEnd = this.isLastPeriod ? new Date(this.periodStart.getFullYear(), this.periodStart.getMonth(), new Date().getDate(), 23, 59, 59, 999) : new Date(this.periodStart.getFullYear(), this.periodStart.getMonth() + 1, 0, 23, 59, 59, 999);\n    this.setFormattedValues();\n    this.periodChange.emit({\n      start: this.periodStart,\n      end: this.periodEnd\n    });\n  }\n\n}\n\nPeriodSelectorComponent.ɵfac = function PeriodSelectorComponent_Factory(t) {\n  return new (t || PeriodSelectorComponent)(i0.ɵɵdirectiveInject(i1.DatePipe));\n};\n\nPeriodSelectorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PeriodSelectorComponent,\n  selectors: [[\"bb-period-selector-ui\"]],\n  inputs: {\n    periodStart: \"periodStart\",\n    periodEnd: \"periodEnd\",\n    periodFormatters: \"periodFormatters\",\n    period: \"period\"\n  },\n  outputs: {\n    periodChange: \"periodChange\"\n  },\n  decls: 16,\n  vars: 7,\n  consts: [[1, \"bb-period-selector\"], [\"bbButton\", \"\", \"circle\", \"\\u201Ctrue\\u201D\", \"color\", \"link-dark\", \"size\", \"sm\", 3, \"click\"], [\"size\", \"md\", \"name\", \"chevron-left\"], [1, \"bb-period-selector__date\"], [1, \"bb-period-selector__month\"], [1, \"bb-period-selector__period\"], [\"bbButton\", \"\", \"color\", \"link-dark\", \"size\", \"sm\", 3, \"circle\", \"ngClass\", \"click\"], [\"size\", \"md\", \"name\", \"chevron-right\"]],\n  template: function PeriodSelectorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\");\n      i0.ɵɵelementStart(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function PeriodSelectorComponent_Template_button_click_2_listener() {\n        return ctx.changePeriod(false);\n      });\n      i0.ɵɵelement(3, \"bb-icon-ui\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5);\n      i0.ɵɵelementStart(8, \"time\");\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(10, \" - \");\n      i0.ɵɵelementStart(11, \"time\");\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\");\n      i0.ɵɵelementStart(14, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function PeriodSelectorComponent_Template_button_click_14_listener() {\n        return ctx.changePeriod(true);\n      });\n      i0.ɵɵelement(15, \"bb-icon-ui\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(ctx.formattedTitle);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.formattedStart);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.formattedEnd);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"circle\", true)(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.isLastPeriod));\n    }\n  },\n  directives: [i3.ButtonDirective, i2.IconComponent, i1.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PeriodSelectorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-period-selector-ui',\n      templateUrl: './period-selector.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i1.DatePipe\n    }];\n  }, {\n    periodStart: [{\n      type: Input\n    }],\n    periodEnd: [{\n      type: Input\n    }],\n    periodFormatters: [{\n      type: Input\n    }],\n    period: [{\n      type: Input\n    }],\n    periodChange: [{\n      type: Output\n    }]\n  });\n})();\n\nclass PeriodSelectorModule {}\n\nPeriodSelectorModule.ɵfac = function PeriodSelectorModule_Factory(t) {\n  return new (t || PeriodSelectorModule)();\n};\n\nPeriodSelectorModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PeriodSelectorModule\n});\nPeriodSelectorModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [DatePipe],\n  imports: [[CommonModule, IconModule, ButtonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PeriodSelectorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, IconModule, ButtonModule],\n      declarations: [PeriodSelectorComponent],\n      exports: [PeriodSelectorComponent],\n      providers: [DatePipe]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { PeriodSelectorComponent, PeriodSelectorModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-period-selector.js"],"names":["i0","EventEmitter","Component","ChangeDetectionStrategy","Input","Output","NgModule","i1","CommonModule","DatePipe","i2","IconModule","i3","ButtonModule","PeriodSelectorComponent","constructor","datePipe","combinedFormatters","title","date","transform","start","end","period","periodChange","periodFormatters","formatters","Object","assign","isLastPeriod","periodStart","now","Date","getFullYear","getMonth","ngOnInit","periodEnd","Error","setFormattedValues","formattedTitle","formattedStart","formattedEnd","changePeriod","next","setMonth","getDate","emit","ɵfac","ɵcmp","ButtonDirective","IconComponent","NgClass","type","args","selector","templateUrl","changeDetection","OnPush","PeriodSelectorModule","ɵmod","ɵinj","imports","declarations","exports","providers"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport * as i2 from '@backbase/ui-ang/icon';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport * as i3 from '@backbase/ui-ang/button';\nimport { ButtonModule } from '@backbase/ui-ang/button';\n\n/**\n * @name PeriodSelectorComponent\n *\n * @description\n * Component that selects a period.\n */\nclass PeriodSelectorComponent {\n    constructor(datePipe) {\n        this.datePipe = datePipe;\n        this.combinedFormatters = {\n            title: (date) => this.datePipe.transform(date, 'MMMM') || '',\n            start: (date) => this.datePipe.transform(date, 'mediumDate') || '',\n            end: (date) => this.datePipe.transform(date, 'mediumDate') || '',\n        };\n        /**\n         * Period step\n         */\n        this.period = 'month';\n        /**\n         * EventEmitter for triggering a periodChange event.\n         */\n        this.periodChange = new EventEmitter();\n    }\n    /**\n     * Custom date period formatter.\n     */\n    set periodFormatters(formatters) {\n        this.combinedFormatters = Object.assign(this.combinedFormatters, formatters);\n    }\n    get isLastPeriod() {\n        if (!this.periodStart) {\n            return true;\n        }\n        const now = new Date();\n        return now.getFullYear() === this.periodStart.getFullYear() && now.getMonth() === this.periodStart.getMonth();\n    }\n    ngOnInit() {\n        if (typeof this.periodStart === 'undefined' || typeof this.periodEnd === 'undefined') {\n            throw new Error('`periodStart`, and `periodEnd` inputs are required in `bb-period-selector-ui` component');\n        }\n        this.setFormattedValues();\n    }\n    setFormattedValues() {\n        this.formattedTitle = this.combinedFormatters.title(this.periodStart);\n        this.formattedStart = this.combinedFormatters.start(this.periodStart);\n        this.formattedEnd = this.combinedFormatters.end(this.periodEnd);\n    }\n    changePeriod(next) {\n        if (!this.periodStart || (next && this.isLastPeriod)) {\n            return;\n        }\n        this.periodStart.setMonth(this.periodStart.getMonth() + (next ? 1 : -1));\n        this.periodEnd = this.isLastPeriod\n            ? new Date(this.periodStart.getFullYear(), this.periodStart.getMonth(), new Date().getDate(), 23, 59, 59, 999)\n            : new Date(this.periodStart.getFullYear(), this.periodStart.getMonth() + 1, 0, 23, 59, 59, 999);\n        this.setFormattedValues();\n        this.periodChange.emit({\n            start: this.periodStart,\n            end: this.periodEnd,\n        });\n    }\n}\nPeriodSelectorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PeriodSelectorComponent, deps: [{ token: i1.DatePipe }], target: i0.ɵɵFactoryTarget.Component });\nPeriodSelectorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: PeriodSelectorComponent, selector: \"bb-period-selector-ui\", inputs: { periodStart: \"periodStart\", periodEnd: \"periodEnd\", periodFormatters: \"periodFormatters\", period: \"period\" }, outputs: { periodChange: \"periodChange\" }, ngImport: i0, template: \"<div class=\\\"bb-period-selector\\\">\\n  <div>\\n    <button bbButton circle=\\\"\\u201Ctrue\\u201D\\\" (click)=\\\"changePeriod(false)\\\" color=\\\"link-dark\\\" size=\\\"sm\\\">\\n      <bb-icon-ui size=\\\"md\\\" name=\\\"chevron-left\\\"></bb-icon-ui>\\n    </button>\\n  </div>\\n  <div class=\\\"bb-period-selector__date\\\">\\n    <div class=\\\"bb-period-selector__month\\\">{{ formattedTitle }}</div>\\n    <div class=\\\"bb-period-selector__period\\\">\\n      <time>{{ formattedStart }}</time> - <time>{{ formattedEnd }}</time>\\n    </div>\\n  </div>\\n  <div>\\n    <button\\n      bbButton\\n      [circle]=\\\"true\\\"\\n      (click)=\\\"changePeriod(true)\\\"\\n      [ngClass]=\\\"{ disabled: isLastPeriod }\\\"\\n      color=\\\"link-dark\\\"\\n      size=\\\"sm\\\"\\n    >\\n      <bb-icon-ui size=\\\"md\\\" name=\\\"chevron-right\\\"></bb-icon-ui>\\n    </button>\\n  </div>\\n</div>\\n\", components: [{ type: i2.IconComponent, selector: \"bb-icon-ui\", inputs: [\"name\", \"inverse\", \"size\", \"color\", \"animate\", \"aria-label\", \"cropped\", \"backgroundType\"] }], directives: [{ type: i3.ButtonDirective, selector: \"button[bbButton]\", inputs: [\"type\", \"color\", \"buttonSize\", \"block\", \"circle\"] }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PeriodSelectorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-period-selector-ui',\n                    templateUrl: './period-selector.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: i1.DatePipe }]; }, propDecorators: { periodStart: [{\n                type: Input\n            }], periodEnd: [{\n                type: Input\n            }], periodFormatters: [{\n                type: Input\n            }], period: [{\n                type: Input\n            }], periodChange: [{\n                type: Output\n            }] } });\n\nclass PeriodSelectorModule {\n}\nPeriodSelectorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PeriodSelectorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPeriodSelectorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PeriodSelectorModule, declarations: [PeriodSelectorComponent], imports: [CommonModule, IconModule, ButtonModule], exports: [PeriodSelectorComponent] });\nPeriodSelectorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PeriodSelectorModule, providers: [DatePipe], imports: [[CommonModule, IconModule, ButtonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PeriodSelectorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, IconModule, ButtonModule],\n                    declarations: [PeriodSelectorComponent],\n                    exports: [PeriodSelectorComponent],\n                    providers: [DatePipe],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PeriodSelectorComponent, PeriodSelectorModule };\n"]},"metadata":{},"sourceType":"module"}