{"ast":null,"code":"import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, Input, NgModule } from '@angular/core';\n/**\n * @name LogoComponent\n *\n * @description\n * Component that displays the company logo.\n */\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"bb-logo--emblem\": a0,\n    \"bb-logo--inverse\": a1\n  };\n};\n\nclass LogoComponent {\n  constructor() {\n    /**\n     * The type of the logo.  Defaults to 'full'.\n     */\n    this.type = 'full';\n    /**\n     * Flag to indicate whether to use the inverse colors or not.  Defaults to false.\n     */\n\n    this.isInverse = false;\n  }\n  /**\n   * @name LogoComponent#isEmblem\n   * @returns Whether this component should show the emblem only or the full logo.\n   *\n   * @description\n   * Returns whether this component should show the emblem only or the full logo.\n   */\n\n\n  get isEmblem() {\n    return this.type === 'emblem';\n  }\n\n  ngOnInit() {}\n\n}\n\nLogoComponent.ɵfac = function LogoComponent_Factory(t) {\n  return new (t || LogoComponent)();\n};\n\nLogoComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LogoComponent,\n  selectors: [[\"bb-logo-ui\"]],\n  inputs: {\n    type: \"type\",\n    isInverse: \"isInverse\"\n  },\n  decls: 1,\n  vars: 4,\n  consts: [[1, \"bb-logo\", 3, \"ngClass\"]],\n  template: function LogoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(1, _c0, ctx.isEmblem, ctx.isInverse));\n    }\n  },\n  directives: [i1.NgClass],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LogoComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-logo-ui',\n      templateUrl: './logo.component.html'\n    }]\n  }], function () {\n    return [];\n  }, {\n    type: [{\n      type: Input\n    }],\n    isInverse: [{\n      type: Input\n    }]\n  });\n})();\n\nclass LogoModule {}\n\nLogoModule.ɵfac = function LogoModule_Factory(t) {\n  return new (t || LogoModule)();\n};\n\nLogoModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LogoModule\n});\nLogoModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LogoModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [LogoComponent],\n      exports: [LogoComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { LogoComponent, LogoModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-logo.js"],"names":["i1","CommonModule","i0","Component","Input","NgModule","LogoComponent","constructor","type","isInverse","isEmblem","ngOnInit","ɵfac","ɵcmp","NgClass","args","selector","templateUrl","LogoModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,iBAApB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,QAA3B,QAA2C,eAA3C;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AACA,MAAMC,aAAN,CAAoB;AAChBC,EAAAA,WAAW,GAAG;AACV;AACR;AACA;AACQ,SAAKC,IAAL,GAAY,MAAZ;AACA;AACR;AACA;;AACQ,SAAKC,SAAL,GAAiB,KAAjB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACgB,MAARC,QAAQ,GAAG;AACX,WAAO,KAAKF,IAAL,KAAc,QAArB;AACH;;AACDG,EAAAA,QAAQ,GAAG,CAAG;;AArBE;;AAuBpBL,aAAa,CAACM,IAAd;AAAA,mBAA2GN,aAA3G;AAAA;;AACAA,aAAa,CAACO,IAAd,kBADiGX,EACjG;AAAA,QAA+FI,aAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADiGJ,MAAAA,EACgH,uBAAjN;AAAA;;AAAA;AADiGA,MAAAA,EAC6I,uBAD7IA,EAC6I,sDAA9O;AAAA;AAAA;AAAA,eAA0WF,EAAE,CAACc,OAA7W;AAAA;AAAA;;AACA;AAAA,qDAFiGZ,EAEjG,mBAA4FI,aAA5F,EAAuH,CAAC;AAC5GE,IAAAA,IAAI,EAAEL,SADsG;AAE5GY,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,QAAQ,EAAE,YADX;AAECC,MAAAA,WAAW,EAAE;AAFd,KAAD;AAFsG,GAAD,CAAvH,EAM4B,YAAY;AAAE,WAAO,EAAP;AAAY,GANtD,EAMwE;AAAET,IAAAA,IAAI,EAAE,CAAC;AACjEA,MAAAA,IAAI,EAAEJ;AAD2D,KAAD,CAAR;AAExDK,IAAAA,SAAS,EAAE,CAAC;AACZD,MAAAA,IAAI,EAAEJ;AADM,KAAD;AAF6C,GANxE;AAAA;;AAYA,MAAMc,UAAN,CAAiB;;AAEjBA,UAAU,CAACN,IAAX;AAAA,mBAAwGM,UAAxG;AAAA;;AACAA,UAAU,CAACC,IAAX,kBAjBiGjB,EAiBjG;AAAA,QAAyGgB;AAAzG;AACAA,UAAU,CAACE,IAAX,kBAlBiGlB,EAkBjG;AAAA,YAA+H,CAACD,YAAD,CAA/H;AAAA;;AACA;AAAA,qDAnBiGC,EAmBjG,mBAA4FgB,UAA5F,EAAoH,CAAC;AACzGV,IAAAA,IAAI,EAAEH,QADmG;AAEzGU,IAAAA,IAAI,EAAE,CAAC;AACCM,MAAAA,OAAO,EAAE,CAACpB,YAAD,CADV;AAECqB,MAAAA,YAAY,EAAE,CAAChB,aAAD,CAFf;AAGCiB,MAAAA,OAAO,EAAE,CAACjB,aAAD;AAHV,KAAD;AAFmG,GAAD,CAApH;AAAA;AASA;AACA;AACA;;;AAEA,SAASA,aAAT,EAAwBY,UAAxB","sourcesContent":["import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, Input, NgModule } from '@angular/core';\n\n/**\n * @name LogoComponent\n *\n * @description\n * Component that displays the company logo.\n */\nclass LogoComponent {\n    constructor() {\n        /**\n         * The type of the logo.  Defaults to 'full'.\n         */\n        this.type = 'full';\n        /**\n         * Flag to indicate whether to use the inverse colors or not.  Defaults to false.\n         */\n        this.isInverse = false;\n    }\n    /**\n     * @name LogoComponent#isEmblem\n     * @returns Whether this component should show the emblem only or the full logo.\n     *\n     * @description\n     * Returns whether this component should show the emblem only or the full logo.\n     */\n    get isEmblem() {\n        return this.type === 'emblem';\n    }\n    ngOnInit() { }\n}\nLogoComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LogoComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nLogoComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LogoComponent, selector: \"bb-logo-ui\", inputs: { type: \"type\", isInverse: \"isInverse\" }, ngImport: i0, template: \"<div\\n  class=\\\"bb-logo\\\"\\n  [ngClass]=\\\"{\\n    'bb-logo--emblem': isEmblem,\\n    'bb-logo--inverse': isInverse\\n  }\\\"\\n></div>\\n\", directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LogoComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-logo-ui',\n                    templateUrl: './logo.component.html',\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { type: [{\n                type: Input\n            }], isInverse: [{\n                type: Input\n            }] } });\n\nclass LogoModule {\n}\nLogoModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LogoModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLogoModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LogoModule, declarations: [LogoComponent], imports: [CommonModule], exports: [LogoComponent] });\nLogoModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LogoModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LogoModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [LogoComponent],\n                    exports: [LogoComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LogoComponent, LogoModule };\n"]},"metadata":{},"sourceType":"module"}