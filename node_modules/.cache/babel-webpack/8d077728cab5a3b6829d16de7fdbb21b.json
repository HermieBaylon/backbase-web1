{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\nvar IdstandingorderPostRequestBody;\n\n(function (IdstandingorderPostRequestBody) {\n  IdstandingorderPostRequestBody.FrequencyEnum = {\n    MONTHLY: 'MONTHLY',\n    WEEKLY: 'WEEKLY',\n    DAILY: 'DAILY'\n  };\n})(IdstandingorderPostRequestBody || (IdstandingorderPostRequestBody = {}));\n\nconst SAVING_GOALS_BASE_PATH = new InjectionToken('SAVING_GOALS_BASE_PATH');\nconst COLLECTION_FORMATS = {\n  'csv': ',',\n  'tsv': '   ',\n  'ssv': ' ',\n  'pipes': '|'\n};\n\nclass SavingGoalsConfiguration {\n  constructor(configurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n    this.encoder = configurationParameters.encoder;\n\n    if (configurationParameters.credentials) {\n      this.credentials = configurationParameters.credentials;\n    } else {\n      this.credentials = {};\n    }\n  }\n\n  selectHeaderContentType(contentTypes) {\n    if (contentTypes.length === 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n\n    return type;\n  }\n\n  selectHeaderAccept(accepts) {\n    if (accepts.length === 0) {\n      return undefined;\n    }\n\n    const type = accepts.find(x => this.isJsonMime(x));\n\n    if (type === undefined) {\n      return accepts[0];\n    }\n\n    return type;\n  }\n\n  isJsonMime(mime) {\n    const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n    return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n  }\n\n  lookupCredential(key) {\n    const value = this.credentials[key];\n    return typeof value === 'function' ? value() : value;\n  }\n\n}\n\nconst CONFIG_TOKEN = new InjectionToken('api-data-module SavingGoalsConfiguration');\n\nclass SavingGoalsApiModule {\n  constructor(parentModule, http, dataModulesManager, config) {\n    if (parentModule) {\n      throw new Error('SavingGoalsApiModule is already loaded. Import in your base AppModule only.');\n    }\n\n    if (!http) {\n      throw new Error('You need to import the HttpClientModule in your AppModule! \\n' + 'See also https://github.com/angular/angular/issues/20575');\n    }\n\n    if (dataModulesManager) {\n      dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n        apiRoot: '',\n        servicePath: config.basePath || '',\n        headers: {}\n      });\n    }\n  }\n\n  static forRoot(configurationFactory) {\n    return {\n      ngModule: SavingGoalsApiModule,\n      providers: [{\n        provide: SavingGoalsConfiguration,\n        useFactory: configurationFactory\n      }]\n    };\n  }\n\n}\n\nSavingGoalsApiModule.ɵfac = function SavingGoalsApiModule_Factory(t) {\n  return new (t || SavingGoalsApiModule)(i0.ɵɵinject(SavingGoalsApiModule, 12), i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DataModulesManager, 8), i0.ɵɵinject(SavingGoalsConfiguration));\n};\n\nSavingGoalsApiModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SavingGoalsApiModule\n});\nSavingGoalsApiModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [],\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SavingGoalsApiModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [],\n      exports: [],\n      providers: []\n    }]\n  }], function () {\n    return [{\n      type: SavingGoalsApiModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: i1.HttpClient,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2.DataModulesManager,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: SavingGoalsConfiguration\n    }];\n  }, null);\n})();\n\nclass CustomHttpParameterCodec {\n  encodeKey(k) {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v) {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k) {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v) {\n    return decodeURIComponent(v);\n  }\n\n}\n\nclass SavinggoalsHttpService {\n  constructor(httpClient, basePath, configuration) {\n    this.httpClient = httpClient;\n    this.basePath = '';\n    this.defaultHeaders = new HttpHeaders();\n    this.configuration = new SavingGoalsConfiguration();\n\n    if (configuration) {\n      this.configuration = configuration;\n    }\n\n    if (typeof this.configuration.basePath !== 'string') {\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n\n      this.configuration.basePath = basePath;\n    }\n\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  addToHttpParams(httpParams, value, key) {\n    if (typeof value === \"object\" && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    return httpParams;\n  }\n\n  addToHttpParamsRecursive(httpParams, value, key) {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n        } else {\n          throw Error(\"key may not be null if value is Date\");\n        }\n      } else {\n        Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error(\"key may not be null if value is not object or array\");\n    }\n\n    return httpParams;\n  }\n\n  deleteId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling deleteId.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/savinggoals/${encodeURIComponent(String(_id))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  deleteIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling deleteId.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/savinggoals/${encodeURIComponent(String(_id))}`;\n  }\n\n  getId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getId.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/savinggoals/${encodeURIComponent(String(_id))}`, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getId.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/savinggoals/${encodeURIComponent(String(_id))}`;\n  }\n\n  getSavingGoals(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _arrangementId = requestParameters[\"arrangementId\"];\n\n    if (_arrangementId === null || _arrangementId === undefined) {\n      throw new Error('Required parameter arrangementId was null or undefined when calling getSavingGoals.');\n    }\n\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_arrangementId !== undefined && _arrangementId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _arrangementId, 'arrangementId');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/savinggoals`, {\n      params: queryParameters,\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  getSavingGoalsUrl(requestParameters) {\n    const _arrangementId = requestParameters[\"arrangementId\"];\n\n    if (_arrangementId === null || _arrangementId === undefined) {\n      throw new Error('Required parameter arrangementId was null or undefined when calling getSavingGoals.');\n    }\n\n    let queryParameters = new HttpParams({\n      encoder: this.encoder\n    });\n\n    if (_arrangementId !== undefined && _arrangementId !== null) {\n      queryParameters = this.addToHttpParams(queryParameters, _arrangementId, 'arrangementId');\n    }\n\n    const queryString = queryParameters.toString();\n    return `${this.configuration.basePath}/client-api/v2/savinggoals${queryString ? `?${queryString}` : ''}`;\n  }\n\n  postIdstandingorder(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling postIdstandingorder.');\n    }\n\n    const _idstandingorderPostRequestBody = requestParameters[\"idstandingorderPostRequestBody\"];\n\n    if (_idstandingorderPostRequestBody === null || _idstandingorderPostRequestBody === undefined) {\n      throw new Error('Required parameter idstandingorderPostRequestBody was null or undefined when calling postIdstandingorder.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/savinggoals/${encodeURIComponent(String(_id))}/standing-order`, _idstandingorderPostRequestBody, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postIdstandingorderUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling postIdstandingorder.');\n    }\n\n    const _idstandingorderPostRequestBody = requestParameters[\"idstandingorderPostRequestBody\"];\n\n    if (_idstandingorderPostRequestBody === null || _idstandingorderPostRequestBody === undefined) {\n      throw new Error('Required parameter idstandingorderPostRequestBody was null or undefined when calling postIdstandingorder.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/savinggoals/${encodeURIComponent(String(_id))}/standing-order`;\n  }\n\n  postSavingGoals(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _savingGoalsPostRequestBody = requestParameters[\"savingGoalsPostRequestBody\"];\n\n    if (_savingGoalsPostRequestBody === null || _savingGoalsPostRequestBody === undefined) {\n      throw new Error('Required parameter savingGoalsPostRequestBody was null or undefined when calling postSavingGoals.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/savinggoals`, _savingGoalsPostRequestBody, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  postSavingGoalsUrl(requestParameters) {\n    const _savingGoalsPostRequestBody = requestParameters[\"savingGoalsPostRequestBody\"];\n\n    if (_savingGoalsPostRequestBody === null || _savingGoalsPostRequestBody === undefined) {\n      throw new Error('Required parameter savingGoalsPostRequestBody was null or undefined when calling postSavingGoals.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/savinggoals`;\n  }\n\n  putId(requestParameters, observe = 'body', reportProgress = false, options) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling putId.');\n    }\n\n    const _idPutRequestBody = requestParameters[\"idPutRequestBody\"];\n\n    if (_idPutRequestBody === null || _idPutRequestBody === undefined) {\n      throw new Error('Required parameter idPutRequestBody was null or undefined when calling putId.');\n    }\n\n    let headers = this.defaultHeaders;\n    let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n\n    if (httpHeaderAcceptSelected === undefined) {\n      const httpHeaderAccepts = ['application/json'];\n      httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n\n    if (httpHeaderAcceptSelected !== undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    const consumes = ['application/json'];\n    const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n\n    if (httpContentTypeSelected !== undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    let responseType = 'json';\n\n    if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n      responseType = 'text';\n    }\n\n    return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/savinggoals/${encodeURIComponent(String(_id))}`, _idPutRequestBody, {\n      responseType: responseType,\n      withCredentials: this.configuration.withCredentials,\n      headers: headers,\n      observe: observe,\n      reportProgress: reportProgress\n    });\n  }\n\n  putIdUrl(requestParameters) {\n    const _id = requestParameters[\"id\"];\n\n    if (_id === null || _id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling putId.');\n    }\n\n    const _idPutRequestBody = requestParameters[\"idPutRequestBody\"];\n\n    if (_idPutRequestBody === null || _idPutRequestBody === undefined) {\n      throw new Error('Required parameter idPutRequestBody was null or undefined when calling putId.');\n    }\n\n    return `${this.configuration.basePath}/client-api/v2/savinggoals/${encodeURIComponent(String(_id))}`;\n  }\n\n}\n\nSavinggoalsHttpService.ɵfac = function SavinggoalsHttpService_Factory(t) {\n  return new (t || SavinggoalsHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(SAVING_GOALS_BASE_PATH, 8), i0.ɵɵinject(SavingGoalsConfiguration, 8));\n};\n\nSavinggoalsHttpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SavinggoalsHttpService,\n  factory: SavinggoalsHttpService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SavinggoalsHttpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [SAVING_GOALS_BASE_PATH]\n      }]\n    }, {\n      type: SavingGoalsConfiguration,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst SavinggoalsHttpServiceDeleteIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/savinggoals/{id}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst SavinggoalsHttpServiceGetIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/savinggoals/{id}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"1955e686-d31e-4216-b3dd-5d66161d536b\",\n      \"goalName\": \"Holiday to Hawaii\",\n      \"goalAmount\": {\n        \"amount\": \"2000.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n      \"amountProgress\": {\n        \"amount\": \"550.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"progressPercentage\": 27.5,\n      \"performancePercentage\": 27.5,\n      \"timePercentage\": 50.5,\n      \"amountRemaining\": {\n        \"amount\": \"1450.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"startDate\": \"2017-02-28\",\n      \"endDate\": \"2019-02-28\",\n      \"initialAmount\": {\n        \"amount\": \"10.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"recipeId\": \"65b5c1b7-17e0-435f-a828-e2f6afec26a9\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"arrangementId\": \"arrangementId\",\n      \"goalAmount\": {\n        \"amount\": \"amount\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"endDate\": \"2000-01-23\",\n      \"recipeId\": \"recipeId\",\n      \"goalName\": \"goalName\",\n      \"amountRemaining\": {\n        \"amount\": \"amount\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"initialAmount\": {\n        \"amount\": \"amount\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"progressPercentage\": 0.8008281904610115,\n      \"performancePercentage\": 6.027456183070403,\n      \"amountProgress\": {\n        \"amount\": \"amount\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"id\": \"id\",\n      \"timePercentage\": 1.4658129805029452,\n      \"startDate\": \"2000-01-23\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst SavinggoalsHttpServiceGetSavingGoalsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/savinggoals\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"id\": \"1955e686-d31e-4216-b3dd-5d66161d536b\",\n      \"goalName\": \"Holiday to Hawaii\",\n      \"goalAmount\": {\n        \"amount\": \"2000.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n      \"amountProgress\": {\n        \"amount\": \"550.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"progressPercentage\": 27.5,\n      \"performancePercentage\": 27.5,\n      \"timePercentage\": 50.5,\n      \"amountRemaining\": {\n        \"amount\": \"1450.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"startDate\": \"2017-02-28\",\n      \"endDate\": \"2019-02-28\",\n      \"initialAmount\": {\n        \"amount\": \"10.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"recipeId\": \"65b5c1b7-17e0-435f-a828-e2f6afec26a9\"\n    }]\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst SavinggoalsHttpServicePostIdstandingorderMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/savinggoals/{id}/standing-order\",\n  method: \"POST\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst SavinggoalsHttpServicePostSavingGoalsMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/savinggoals\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d77161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst SavinggoalsHttpServicePutIdMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/savinggoals/{id}\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nconst SavinggoalsHttpServiceMocksProvider = createMocks([{\n  urlPattern: \"/client-api/v2/savinggoals/{id}\",\n  method: \"DELETE\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/savinggoals/{id}\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: {\n      \"id\": \"1955e686-d31e-4216-b3dd-5d66161d536b\",\n      \"goalName\": \"Holiday to Hawaii\",\n      \"goalAmount\": {\n        \"amount\": \"2000.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n      \"amountProgress\": {\n        \"amount\": \"550.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"progressPercentage\": 27.5,\n      \"performancePercentage\": 27.5,\n      \"timePercentage\": 50.5,\n      \"amountRemaining\": {\n        \"amount\": \"1450.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"startDate\": \"2017-02-28\",\n      \"endDate\": \"2019-02-28\",\n      \"initialAmount\": {\n        \"amount\": \"10.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"recipeId\": \"65b5c1b7-17e0-435f-a828-e2f6afec26a9\"\n    }\n  }, {\n    status: 200,\n    body: {\n      \"arrangementId\": \"arrangementId\",\n      \"goalAmount\": {\n        \"amount\": \"amount\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"additions\": {\n        \"key\": \"additions\"\n      },\n      \"endDate\": \"2000-01-23\",\n      \"recipeId\": \"recipeId\",\n      \"goalName\": \"goalName\",\n      \"amountRemaining\": {\n        \"amount\": \"amount\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"initialAmount\": {\n        \"amount\": \"amount\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"progressPercentage\": 0.8008281904610115,\n      \"performancePercentage\": 6.027456183070403,\n      \"amountProgress\": {\n        \"amount\": \"amount\",\n        \"additions\": {\n          \"key\": \"additions\"\n        },\n        \"currencyCode\": \"currencyCode\"\n      },\n      \"id\": \"id\",\n      \"timePercentage\": 1.4658129805029452,\n      \"startDate\": \"2000-01-23\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/savinggoals\",\n  method: \"GET\",\n  responses: [{\n    status: 200,\n    body: [{\n      \"id\": \"1955e686-d31e-4216-b3dd-5d66161d536b\",\n      \"goalName\": \"Holiday to Hawaii\",\n      \"goalAmount\": {\n        \"amount\": \"2000.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n      \"amountProgress\": {\n        \"amount\": \"550.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"progressPercentage\": 27.5,\n      \"performancePercentage\": 27.5,\n      \"timePercentage\": 50.5,\n      \"amountRemaining\": {\n        \"amount\": \"1450.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"startDate\": \"2017-02-28\",\n      \"endDate\": \"2019-02-28\",\n      \"initialAmount\": {\n        \"amount\": \"10.00\",\n        \"currencyCode\": \"EUR\"\n      },\n      \"recipeId\": \"65b5c1b7-17e0-435f-a828-e2f6afec26a9\"\n    }]\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/savinggoals/{id}/standing-order\",\n  method: \"POST\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/savinggoals\",\n  method: \"POST\",\n  responses: [{\n    status: 201,\n    body: {\n      \"id\": \"0955e686-d31e-4216-b3dd-5d77161d536d\"\n    }\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}, {\n  urlPattern: \"/client-api/v2/savinggoals/{id}\",\n  method: \"PUT\",\n  responses: [{\n    status: 204,\n    body: \"\"\n  }, {\n    status: 400,\n    body: {\n      \"message\": \"Bad Request\",\n      \"errors\": [{\n        \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n        \"key\": \"common.api.shoesize\",\n        \"context\": {\n          \"max\": \"50\",\n          \"min\": \"1\"\n        }\n      }]\n    }\n  }, {\n    status: 401,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to invalid credentials.\",\n        \"key\": \"common.api.token\",\n        \"context\": {\n          \"accessToken\": \"expired\"\n        }\n      }]\n    }\n  }, {\n    status: 403,\n    body: {\n      \"message\": \"Access to requested resource denied.\",\n      \"errors\": [{\n        \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n        \"key\": \"common.api.quota\",\n        \"context\": {\n          \"quota\": \"someQuota\"\n        }\n      }]\n    }\n  }, {\n    status: 404,\n    body: {\n      \"message\": \"Resource not found.\",\n      \"errors\": [{\n        \"message\": \"Unable to find the resource requested resource: {resource}.\",\n        \"key\": \"common.api.resource\",\n        \"context\": {\n          \"resource\": \"aResource\"\n        }\n      }]\n    }\n  }, {\n    status: 500,\n    body: {\n      \"message\": \"Description of error\"\n    }\n  }]\n}]);\nexport { COLLECTION_FORMATS, CONFIG_TOKEN, IdstandingorderPostRequestBody, SAVING_GOALS_BASE_PATH, SavingGoalsApiModule, SavingGoalsConfiguration, SavinggoalsHttpService, SavinggoalsHttpServiceDeleteIdMocksProvider, SavinggoalsHttpServiceGetIdMocksProvider, SavinggoalsHttpServiceGetSavingGoalsMocksProvider, SavinggoalsHttpServiceMocksProvider, SavinggoalsHttpServicePostIdstandingorderMocksProvider, SavinggoalsHttpServicePostSavingGoalsMocksProvider, SavinggoalsHttpServicePutIdMocksProvider };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/saving-goals-http-ang/fesm2015/backbase-saving-goals-http-ang.js"],"names":["i0","InjectionToken","NgModule","Optional","SkipSelf","Injectable","Inject","i1","HttpHeaders","HttpParams","i2","createMocks","IdstandingorderPostRequestBody","FrequencyEnum","MONTHLY","WEEKLY","DAILY","SAVING_GOALS_BASE_PATH","COLLECTION_FORMATS","SavingGoalsConfiguration","constructor","configurationParameters","apiKeys","username","password","accessToken","basePath","withCredentials","encoder","credentials","selectHeaderContentType","contentTypes","length","undefined","type","find","x","isJsonMime","selectHeaderAccept","accepts","mime","jsonMime","RegExp","test","toLowerCase","lookupCredential","key","value","CONFIG_TOKEN","SavingGoalsApiModule","parentModule","http","dataModulesManager","config","Error","setModuleConfig","apiRoot","servicePath","headers","forRoot","configurationFactory","ngModule","providers","provide","useFactory","ɵfac","HttpClient","DataModulesManager","ɵmod","ɵinj","args","imports","declarations","exports","decorators","CustomHttpParameterCodec","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeURIComponent","decodeValue","SavinggoalsHttpService","httpClient","configuration","defaultHeaders","addToHttpParams","httpParams","Date","addToHttpParamsRecursive","Array","isArray","forEach","elem","append","toISOString","substr","Object","keys","deleteId","requestParameters","observe","reportProgress","options","_id","httpHeaderAcceptSelected","httpHeaderAccept","httpHeaderAccepts","set","responseType","startsWith","delete","String","deleteIdUrl","getId","get","getIdUrl","getSavingGoals","_arrangementId","queryParameters","params","getSavingGoalsUrl","queryString","toString","postIdstandingorder","_idstandingorderPostRequestBody","consumes","httpContentTypeSelected","post","postIdstandingorderUrl","postSavingGoals","_savingGoalsPostRequestBody","postSavingGoalsUrl","putId","_idPutRequestBody","put","putIdUrl","ɵprov","providedIn","SavinggoalsHttpServiceDeleteIdMocksProvider","urlPattern","method","responses","status","body","SavinggoalsHttpServiceGetIdMocksProvider","SavinggoalsHttpServiceGetSavingGoalsMocksProvider","SavinggoalsHttpServicePostIdstandingorderMocksProvider","SavinggoalsHttpServicePostSavingGoalsMocksProvider","SavinggoalsHttpServicePutIdMocksProvider","SavinggoalsHttpServiceMocksProvider"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,SAASC,cAAT,EAAyBC,QAAzB,EAAmCC,QAAnC,EAA6CC,QAA7C,EAAuDC,UAAvD,EAAmEC,MAAnE,QAAiF,eAAjF;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,sBAAxC;AACA,OAAO,KAAKC,EAAZ,MAAoB,oCAApB;AACA,SAASC,WAAT,QAA4B,oCAA5B;AAEA,IAAIC,8BAAJ;;AACA,CAAC,UAAUA,8BAAV,EAA0C;AACvCA,EAAAA,8BAA8B,CAACC,aAA/B,GAA+C;AAC3CC,IAAAA,OAAO,EAAE,SADkC;AAE3CC,IAAAA,MAAM,EAAE,QAFmC;AAG3CC,IAAAA,KAAK,EAAE;AAHoC,GAA/C;AAKH,CAND,EAMGJ,8BAA8B,KAAKA,8BAA8B,GAAG,EAAtC,CANjC;;AAQA,MAAMK,sBAAsB,GAAG,IAAIhB,cAAJ,CAAmB,wBAAnB,CAA/B;AACA,MAAMiB,kBAAkB,GAAG;AACvB,SAAO,GADgB;AAEvB,SAAO,KAFgB;AAGvB,SAAO,GAHgB;AAIvB,WAAS;AAJc,CAA3B;;AAOA,MAAMC,wBAAN,CAA+B;AAC3BC,EAAAA,WAAW,CAACC,uBAAuB,GAAG,EAA3B,EAA+B;AACtC,SAAKC,OAAL,GAAeD,uBAAuB,CAACC,OAAvC;AACA,SAAKC,QAAL,GAAgBF,uBAAuB,CAACE,QAAxC;AACA,SAAKC,QAAL,GAAgBH,uBAAuB,CAACG,QAAxC;AACA,SAAKC,WAAL,GAAmBJ,uBAAuB,CAACI,WAA3C;AACA,SAAKC,QAAL,GAAgBL,uBAAuB,CAACK,QAAxC;AACA,SAAKC,eAAL,GAAuBN,uBAAuB,CAACM,eAA/C;AACA,SAAKC,OAAL,GAAeP,uBAAuB,CAACO,OAAvC;;AACA,QAAIP,uBAAuB,CAACQ,WAA5B,EAAyC;AACrC,WAAKA,WAAL,GAAmBR,uBAAuB,CAACQ,WAA3C;AACH,KAFD,MAGK;AACD,WAAKA,WAAL,GAAmB,EAAnB;AACH;AACJ;;AACDC,EAAAA,uBAAuB,CAACC,YAAD,EAAe;AAClC,QAAIA,YAAY,CAACC,MAAb,KAAwB,CAA5B,EAA+B;AAC3B,aAAOC,SAAP;AACH;;AACD,UAAMC,IAAI,GAAGH,YAAY,CAACI,IAAb,CAAmBC,CAAD,IAAO,KAAKC,UAAL,CAAgBD,CAAhB,CAAzB,CAAb;;AACA,QAAIF,IAAI,KAAKD,SAAb,EAAwB;AACpB,aAAOF,YAAY,CAAC,CAAD,CAAnB;AACH;;AACD,WAAOG,IAAP;AACH;;AACDI,EAAAA,kBAAkB,CAACC,OAAD,EAAU;AACxB,QAAIA,OAAO,CAACP,MAAR,KAAmB,CAAvB,EAA0B;AACtB,aAAOC,SAAP;AACH;;AACD,UAAMC,IAAI,GAAGK,OAAO,CAACJ,IAAR,CAAcC,CAAD,IAAO,KAAKC,UAAL,CAAgBD,CAAhB,CAApB,CAAb;;AACA,QAAIF,IAAI,KAAKD,SAAb,EAAwB;AACpB,aAAOM,OAAO,CAAC,CAAD,CAAd;AACH;;AACD,WAAOL,IAAP;AACH;;AACDG,EAAAA,UAAU,CAACG,IAAD,EAAO;AACb,UAAMC,QAAQ,GAAG,IAAIC,MAAJ,CAAW,+DAAX,EAA4E,GAA5E,CAAjB;AACA,WAAOF,IAAI,KAAK,IAAT,KAAkBC,QAAQ,CAACE,IAAT,CAAcH,IAAd,KAAuBA,IAAI,CAACI,WAAL,OAAuB,6BAAhE,CAAP;AACH;;AACDC,EAAAA,gBAAgB,CAACC,GAAD,EAAM;AAClB,UAAMC,KAAK,GAAG,KAAKlB,WAAL,CAAiBiB,GAAjB,CAAd;AACA,WAAO,OAAOC,KAAP,KAAiB,UAAjB,GACDA,KAAK,EADJ,GAEDA,KAFN;AAGH;;AA7C0B;;AA+C/B,MAAMC,YAAY,GAAG,IAAI/C,cAAJ,CAAmB,0CAAnB,CAArB;;AAEA,MAAMgD,oBAAN,CAA2B;AACvB7B,EAAAA,WAAW,CAAC8B,YAAD,EAAeC,IAAf,EAAqBC,kBAArB,EAAyCC,MAAzC,EAAiD;AACxD,QAAIH,YAAJ,EAAkB;AACd,YAAM,IAAII,KAAJ,CAAU,6EAAV,CAAN;AACH;;AACD,QAAI,CAACH,IAAL,EAAW;AACP,YAAM,IAAIG,KAAJ,CAAU,kEACZ,0DADE,CAAN;AAEH;;AACD,QAAIF,kBAAJ,EAAwB;AACpBA,MAAAA,kBAAkB,CAACG,eAAnB,CAAmCP,YAAnC,EAAiD;AAC7CQ,QAAAA,OAAO,EAAE,EADoC;AAE7CC,QAAAA,WAAW,EAAEJ,MAAM,CAAC3B,QAAP,IAAmB,EAFa;AAG7CgC,QAAAA,OAAO,EAAE;AAHoC,OAAjD;AAKH;AACJ;;AACa,SAAPC,OAAO,CAACC,oBAAD,EAAuB;AACjC,WAAO;AACHC,MAAAA,QAAQ,EAAEZ,oBADP;AAEHa,MAAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA,OAAO,EAAE5C,wBAAX;AAAqC6C,QAAAA,UAAU,EAAEJ;AAAjD,OAAD;AAFR,KAAP;AAIH;;AAtBsB;;AAwB3BX,oBAAoB,CAACgB,IAArB;AAAA,mBAAkHhB,oBAAlH,EAAwGjD,EAAxG,UAAwJiD,oBAAxJ,OAAwGjD,EAAxG,UAAyNO,EAAE,CAAC2D,UAA5N,MAAwGlE,EAAxG,UAAmQU,EAAE,CAACyD,kBAAtQ,MAAwGnE,EAAxG,UAAqTmB,wBAArT;AAAA;;AACA8B,oBAAoB,CAACmB,IAArB,kBADwGpE,EACxG;AAAA,QAAmHiD;AAAnH;AACAA,oBAAoB,CAACoB,IAArB,kBAFwGrE,EAExG;AAAA,aAAoJ,EAApJ;AAAA,YAAkK,EAAlK;AAAA;;AACA;AAAA,qDAHwGA,EAGxG,mBAA4FiD,oBAA5F,EAA8H,CAAC;AACnHf,IAAAA,IAAI,EAAEhC,QAD6G;AAEnHoE,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,OAAO,EAAE,EADV;AAECC,MAAAA,YAAY,EAAE,EAFf;AAGCC,MAAAA,OAAO,EAAE,EAHV;AAICX,MAAAA,SAAS,EAAE;AAJZ,KAAD;AAF6G,GAAD,CAA9H,EAQ4B,YAAY;AAAE,WAAO,CAAC;AAAE5B,MAAAA,IAAI,EAAEe,oBAAR;AAA8ByB,MAAAA,UAAU,EAAE,CAAC;AACzExC,QAAAA,IAAI,EAAE/B;AADmE,OAAD,EAEzE;AACC+B,QAAAA,IAAI,EAAE9B;AADP,OAFyE;AAA1C,KAAD,EAI3B;AAAE8B,MAAAA,IAAI,EAAE3B,EAAE,CAAC2D,UAAX;AAAuBQ,MAAAA,UAAU,EAAE,CAAC;AACtCxC,QAAAA,IAAI,EAAE/B;AADgC,OAAD;AAAnC,KAJ2B,EAM3B;AAAE+B,MAAAA,IAAI,EAAExB,EAAE,CAACyD,kBAAX;AAA+BO,MAAAA,UAAU,EAAE,CAAC;AAC9CxC,QAAAA,IAAI,EAAE/B;AADwC,OAAD;AAA3C,KAN2B,EAQ3B;AAAE+B,MAAAA,IAAI,EAAEf;AAAR,KAR2B,CAAP;AAQkB,GAhB5D;AAAA;;AAkBA,MAAMwD,wBAAN,CAA+B;AAC3BC,EAAAA,SAAS,CAACC,CAAD,EAAI;AACT,WAAOC,kBAAkB,CAACD,CAAD,CAAzB;AACH;;AACDE,EAAAA,WAAW,CAACC,CAAD,EAAI;AACX,WAAOF,kBAAkB,CAACE,CAAD,CAAzB;AACH;;AACDC,EAAAA,SAAS,CAACJ,CAAD,EAAI;AACT,WAAOK,kBAAkB,CAACL,CAAD,CAAzB;AACH;;AACDM,EAAAA,WAAW,CAACH,CAAD,EAAI;AACX,WAAOE,kBAAkB,CAACF,CAAD,CAAzB;AACH;;AAZ0B;;AAe/B,MAAMI,sBAAN,CAA6B;AACzBhE,EAAAA,WAAW,CAACiE,UAAD,EAAa3D,QAAb,EAAuB4D,aAAvB,EAAsC;AAC7C,SAAKD,UAAL,GAAkBA,UAAlB;AACA,SAAK3D,QAAL,GAAgB,EAAhB;AACA,SAAK6D,cAAL,GAAsB,IAAI/E,WAAJ,EAAtB;AACA,SAAK8E,aAAL,GAAqB,IAAInE,wBAAJ,EAArB;;AACA,QAAImE,aAAJ,EAAmB;AACf,WAAKA,aAAL,GAAqBA,aAArB;AACH;;AACD,QAAI,OAAO,KAAKA,aAAL,CAAmB5D,QAA1B,KAAuC,QAA3C,EAAqD;AACjD,UAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAC9BA,QAAAA,QAAQ,GAAG,KAAKA,QAAhB;AACH;;AACD,WAAK4D,aAAL,CAAmB5D,QAAnB,GAA8BA,QAA9B;AACH;;AACD,SAAKE,OAAL,GAAe,KAAK0D,aAAL,CAAmB1D,OAAnB,IAA8B,IAAI+C,wBAAJ,EAA7C;AACH;;AACDa,EAAAA,eAAe,CAACC,UAAD,EAAa1C,KAAb,EAAoBD,GAApB,EAAyB;AACpC,QAAI,OAAOC,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,YAAY2C,IAAjB,KAA0B,KAA3D,EAAkE;AAC9DD,MAAAA,UAAU,GAAG,KAAKE,wBAAL,CAA8BF,UAA9B,EAA0C1C,KAA1C,CAAb;AACH,KAFD,MAGK;AACD0C,MAAAA,UAAU,GAAG,KAAKE,wBAAL,CAA8BF,UAA9B,EAA0C1C,KAA1C,EAAiDD,GAAjD,CAAb;AACH;;AACD,WAAO2C,UAAP;AACH;;AACDE,EAAAA,wBAAwB,CAACF,UAAD,EAAa1C,KAAb,EAAoBD,GAApB,EAAyB;AAC7C,QAAIC,KAAK,IAAI,IAAb,EAAmB;AACf,aAAO0C,UAAP;AACH;;AACD,QAAI,OAAO1C,KAAP,KAAiB,QAArB,EAA+B;AAC3B,UAAI6C,KAAK,CAACC,OAAN,CAAc9C,KAAd,CAAJ,EAA0B;AACtBA,QAAAA,KAAK,CAAC+C,OAAN,CAAcC,IAAI,IAAIN,UAAU,GAAG,KAAKE,wBAAL,CAA8BF,UAA9B,EAA0CM,IAA1C,EAAgDjD,GAAhD,CAAnC;AACH,OAFD,MAGK,IAAIC,KAAK,YAAY2C,IAArB,EAA2B;AAC5B,YAAI5C,GAAG,IAAI,IAAX,EAAiB;AACb2C,UAAAA,UAAU,GAAGA,UAAU,CAACO,MAAX,CAAkBlD,GAAlB,EAAuBC,KAAK,CAACkD,WAAN,GAAoBC,MAApB,CAA2B,CAA3B,EAA8B,EAA9B,CAAvB,CAAb;AACH,SAFD,MAGK;AACD,gBAAM5C,KAAK,CAAC,sCAAD,CAAX;AACH;AACJ,OAPI,MAQA;AACD6C,QAAAA,MAAM,CAACC,IAAP,CAAYrD,KAAZ,EAAmB+C,OAAnB,CAA2BjB,CAAC,IAAIY,UAAU,GAAG,KAAKE,wBAAL,CAA8BF,UAA9B,EAA0C1C,KAAK,CAAC8B,CAAD,CAA/C,EAAoD/B,GAAG,IAAI,IAAP,GAAe,GAAEA,GAAI,IAAG+B,CAAE,EAA1B,GAA8BA,CAAlF,CAA7C;AACH;AACJ,KAfD,MAgBK,IAAI/B,GAAG,IAAI,IAAX,EAAiB;AAClB2C,MAAAA,UAAU,GAAGA,UAAU,CAACO,MAAX,CAAkBlD,GAAlB,EAAuBC,KAAvB,CAAb;AACH,KAFI,MAGA;AACD,YAAMO,KAAK,CAAC,qDAAD,CAAX;AACH;;AACD,WAAOmC,UAAP;AACH;;AACDY,EAAAA,QAAQ,CAACC,iBAAD,EAAoBC,OAAO,GAAG,MAA9B,EAAsCC,cAAc,GAAG,KAAvD,EAA8DC,OAA9D,EAAuE;AAC3E,UAAMC,GAAG,GAAGJ,iBAAiB,CAAC,IAAD,CAA7B;;AACA,QAAII,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKzE,SAA5B,EAAuC;AACnC,YAAM,IAAIqB,KAAJ,CAAU,oEAAV,CAAN;AACH;;AACD,QAAII,OAAO,GAAG,KAAK6B,cAAnB;AACA,QAAIoB,wBAAwB,GAAGF,OAAO,IAAIA,OAAO,CAACG,gBAAlD;;AACA,QAAID,wBAAwB,KAAK1E,SAAjC,EAA4C;AACxC,YAAM4E,iBAAiB,GAAG,CACtB,kBADsB,CAA1B;AAGAF,MAAAA,wBAAwB,GAAG,KAAKrB,aAAL,CAAmBhD,kBAAnB,CAAsCuE,iBAAtC,CAA3B;AACH;;AACD,QAAIF,wBAAwB,KAAK1E,SAAjC,EAA4C;AACxCyB,MAAAA,OAAO,GAAGA,OAAO,CAACoD,GAAR,CAAY,QAAZ,EAAsBH,wBAAtB,CAAV;AACH;;AACD,QAAII,YAAY,GAAG,MAAnB;;AACA,QAAIJ,wBAAwB,IAAIA,wBAAwB,CAACK,UAAzB,CAAoC,MAApC,CAAhC,EAA6E;AACzED,MAAAA,YAAY,GAAG,MAAf;AACH;;AACD,WAAO,KAAK1B,UAAL,CAAgB4B,MAAhB,CAAwB,GAAE,KAAK3B,aAAL,CAAmB5D,QAAS,8BAA6BoD,kBAAkB,CAACoC,MAAM,CAACR,GAAD,CAAP,CAAc,EAAnH,EAAsH;AACzHK,MAAAA,YAAY,EAAEA,YAD2G;AAEzHpF,MAAAA,eAAe,EAAE,KAAK2D,aAAL,CAAmB3D,eAFqF;AAGzH+B,MAAAA,OAAO,EAAEA,OAHgH;AAIzH6C,MAAAA,OAAO,EAAEA,OAJgH;AAKzHC,MAAAA,cAAc,EAAEA;AALyG,KAAtH,CAAP;AAOH;;AACDW,EAAAA,WAAW,CAACb,iBAAD,EAAoB;AAC3B,UAAMI,GAAG,GAAGJ,iBAAiB,CAAC,IAAD,CAA7B;;AACA,QAAII,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKzE,SAA5B,EAAuC;AACnC,YAAM,IAAIqB,KAAJ,CAAU,oEAAV,CAAN;AACH;;AACD,WAAQ,GAAE,KAAKgC,aAAL,CAAmB5D,QAAS,8BAA6BoD,kBAAkB,CAACoC,MAAM,CAACR,GAAD,CAAP,CAAc,EAAnG;AACH;;AACDU,EAAAA,KAAK,CAACd,iBAAD,EAAoBC,OAAO,GAAG,MAA9B,EAAsCC,cAAc,GAAG,KAAvD,EAA8DC,OAA9D,EAAuE;AACxE,UAAMC,GAAG,GAAGJ,iBAAiB,CAAC,IAAD,CAA7B;;AACA,QAAII,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKzE,SAA5B,EAAuC;AACnC,YAAM,IAAIqB,KAAJ,CAAU,iEAAV,CAAN;AACH;;AACD,QAAII,OAAO,GAAG,KAAK6B,cAAnB;AACA,QAAIoB,wBAAwB,GAAGF,OAAO,IAAIA,OAAO,CAACG,gBAAlD;;AACA,QAAID,wBAAwB,KAAK1E,SAAjC,EAA4C;AACxC,YAAM4E,iBAAiB,GAAG,CACtB,kBADsB,CAA1B;AAGAF,MAAAA,wBAAwB,GAAG,KAAKrB,aAAL,CAAmBhD,kBAAnB,CAAsCuE,iBAAtC,CAA3B;AACH;;AACD,QAAIF,wBAAwB,KAAK1E,SAAjC,EAA4C;AACxCyB,MAAAA,OAAO,GAAGA,OAAO,CAACoD,GAAR,CAAY,QAAZ,EAAsBH,wBAAtB,CAAV;AACH;;AACD,QAAII,YAAY,GAAG,MAAnB;;AACA,QAAIJ,wBAAwB,IAAIA,wBAAwB,CAACK,UAAzB,CAAoC,MAApC,CAAhC,EAA6E;AACzED,MAAAA,YAAY,GAAG,MAAf;AACH;;AACD,WAAO,KAAK1B,UAAL,CAAgBgC,GAAhB,CAAqB,GAAE,KAAK/B,aAAL,CAAmB5D,QAAS,8BAA6BoD,kBAAkB,CAACoC,MAAM,CAACR,GAAD,CAAP,CAAc,EAAhH,EAAmH;AACtHK,MAAAA,YAAY,EAAEA,YADwG;AAEtHpF,MAAAA,eAAe,EAAE,KAAK2D,aAAL,CAAmB3D,eAFkF;AAGtH+B,MAAAA,OAAO,EAAEA,OAH6G;AAItH6C,MAAAA,OAAO,EAAEA,OAJ6G;AAKtHC,MAAAA,cAAc,EAAEA;AALsG,KAAnH,CAAP;AAOH;;AACDc,EAAAA,QAAQ,CAAChB,iBAAD,EAAoB;AACxB,UAAMI,GAAG,GAAGJ,iBAAiB,CAAC,IAAD,CAA7B;;AACA,QAAII,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKzE,SAA5B,EAAuC;AACnC,YAAM,IAAIqB,KAAJ,CAAU,iEAAV,CAAN;AACH;;AACD,WAAQ,GAAE,KAAKgC,aAAL,CAAmB5D,QAAS,8BAA6BoD,kBAAkB,CAACoC,MAAM,CAACR,GAAD,CAAP,CAAc,EAAnG;AACH;;AACDa,EAAAA,cAAc,CAACjB,iBAAD,EAAoBC,OAAO,GAAG,MAA9B,EAAsCC,cAAc,GAAG,KAAvD,EAA8DC,OAA9D,EAAuE;AACjF,UAAMe,cAAc,GAAGlB,iBAAiB,CAAC,eAAD,CAAxC;;AACA,QAAIkB,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAKvF,SAAlD,EAA6D;AACzD,YAAM,IAAIqB,KAAJ,CAAU,qFAAV,CAAN;AACH;;AACD,QAAImE,eAAe,GAAG,IAAIhH,UAAJ,CAAe;AAAEmB,MAAAA,OAAO,EAAE,KAAKA;AAAhB,KAAf,CAAtB;;AACA,QAAI4F,cAAc,KAAKvF,SAAnB,IAAgCuF,cAAc,KAAK,IAAvD,EAA6D;AACzDC,MAAAA,eAAe,GAAG,KAAKjC,eAAL,CAAqBiC,eAArB,EAAsCD,cAAtC,EAAsD,eAAtD,CAAlB;AACH;;AACD,QAAI9D,OAAO,GAAG,KAAK6B,cAAnB;AACA,QAAIoB,wBAAwB,GAAGF,OAAO,IAAIA,OAAO,CAACG,gBAAlD;;AACA,QAAID,wBAAwB,KAAK1E,SAAjC,EAA4C;AACxC,YAAM4E,iBAAiB,GAAG,CACtB,kBADsB,CAA1B;AAGAF,MAAAA,wBAAwB,GAAG,KAAKrB,aAAL,CAAmBhD,kBAAnB,CAAsCuE,iBAAtC,CAA3B;AACH;;AACD,QAAIF,wBAAwB,KAAK1E,SAAjC,EAA4C;AACxCyB,MAAAA,OAAO,GAAGA,OAAO,CAACoD,GAAR,CAAY,QAAZ,EAAsBH,wBAAtB,CAAV;AACH;;AACD,QAAII,YAAY,GAAG,MAAnB;;AACA,QAAIJ,wBAAwB,IAAIA,wBAAwB,CAACK,UAAzB,CAAoC,MAApC,CAAhC,EAA6E;AACzED,MAAAA,YAAY,GAAG,MAAf;AACH;;AACD,WAAO,KAAK1B,UAAL,CAAgBgC,GAAhB,CAAqB,GAAE,KAAK/B,aAAL,CAAmB5D,QAAS,4BAAnD,EAAgF;AACnFgG,MAAAA,MAAM,EAAED,eAD2E;AAEnFV,MAAAA,YAAY,EAAEA,YAFqE;AAGnFpF,MAAAA,eAAe,EAAE,KAAK2D,aAAL,CAAmB3D,eAH+C;AAInF+B,MAAAA,OAAO,EAAEA,OAJ0E;AAKnF6C,MAAAA,OAAO,EAAEA,OAL0E;AAMnFC,MAAAA,cAAc,EAAEA;AANmE,KAAhF,CAAP;AAQH;;AACDmB,EAAAA,iBAAiB,CAACrB,iBAAD,EAAoB;AACjC,UAAMkB,cAAc,GAAGlB,iBAAiB,CAAC,eAAD,CAAxC;;AACA,QAAIkB,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAKvF,SAAlD,EAA6D;AACzD,YAAM,IAAIqB,KAAJ,CAAU,qFAAV,CAAN;AACH;;AACD,QAAImE,eAAe,GAAG,IAAIhH,UAAJ,CAAe;AAAEmB,MAAAA,OAAO,EAAE,KAAKA;AAAhB,KAAf,CAAtB;;AACA,QAAI4F,cAAc,KAAKvF,SAAnB,IAAgCuF,cAAc,KAAK,IAAvD,EAA6D;AACzDC,MAAAA,eAAe,GAAG,KAAKjC,eAAL,CAAqBiC,eAArB,EAAsCD,cAAtC,EAAsD,eAAtD,CAAlB;AACH;;AACD,UAAMI,WAAW,GAAGH,eAAe,CAACI,QAAhB,EAApB;AACA,WAAQ,GAAE,KAAKvC,aAAL,CAAmB5D,QAAS,6BAA4BkG,WAAW,GAAI,IAAGA,WAAY,EAAnB,GAAuB,EAAG,EAAvG;AACH;;AACDE,EAAAA,mBAAmB,CAACxB,iBAAD,EAAoBC,OAAO,GAAG,MAA9B,EAAsCC,cAAc,GAAG,KAAvD,EAA8DC,OAA9D,EAAuE;AACtF,UAAMC,GAAG,GAAGJ,iBAAiB,CAAC,IAAD,CAA7B;;AACA,QAAII,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKzE,SAA5B,EAAuC;AACnC,YAAM,IAAIqB,KAAJ,CAAU,+EAAV,CAAN;AACH;;AACD,UAAMyE,+BAA+B,GAAGzB,iBAAiB,CAAC,gCAAD,CAAzD;;AACA,QAAIyB,+BAA+B,KAAK,IAApC,IAA4CA,+BAA+B,KAAK9F,SAApF,EAA+F;AAC3F,YAAM,IAAIqB,KAAJ,CAAU,2GAAV,CAAN;AACH;;AACD,QAAII,OAAO,GAAG,KAAK6B,cAAnB;AACA,QAAIoB,wBAAwB,GAAGF,OAAO,IAAIA,OAAO,CAACG,gBAAlD;;AACA,QAAID,wBAAwB,KAAK1E,SAAjC,EAA4C;AACxC,YAAM4E,iBAAiB,GAAG,CACtB,kBADsB,CAA1B;AAGAF,MAAAA,wBAAwB,GAAG,KAAKrB,aAAL,CAAmBhD,kBAAnB,CAAsCuE,iBAAtC,CAA3B;AACH;;AACD,QAAIF,wBAAwB,KAAK1E,SAAjC,EAA4C;AACxCyB,MAAAA,OAAO,GAAGA,OAAO,CAACoD,GAAR,CAAY,QAAZ,EAAsBH,wBAAtB,CAAV;AACH;;AACD,UAAMqB,QAAQ,GAAG,CACb,kBADa,CAAjB;AAGA,UAAMC,uBAAuB,GAAG,KAAK3C,aAAL,CAAmBxD,uBAAnB,CAA2CkG,QAA3C,CAAhC;;AACA,QAAIC,uBAAuB,KAAKhG,SAAhC,EAA2C;AACvCyB,MAAAA,OAAO,GAAGA,OAAO,CAACoD,GAAR,CAAY,cAAZ,EAA4BmB,uBAA5B,CAAV;AACH;;AACD,QAAIlB,YAAY,GAAG,MAAnB;;AACA,QAAIJ,wBAAwB,IAAIA,wBAAwB,CAACK,UAAzB,CAAoC,MAApC,CAAhC,EAA6E;AACzED,MAAAA,YAAY,GAAG,MAAf;AACH;;AACD,WAAO,KAAK1B,UAAL,CAAgB6C,IAAhB,CAAsB,GAAE,KAAK5C,aAAL,CAAmB5D,QAAS,8BAA6BoD,kBAAkB,CAACoC,MAAM,CAACR,GAAD,CAAP,CAAc,iBAAjH,EAAmIqB,+BAAnI,EAAoK;AACvKhB,MAAAA,YAAY,EAAEA,YADyJ;AAEvKpF,MAAAA,eAAe,EAAE,KAAK2D,aAAL,CAAmB3D,eAFmI;AAGvK+B,MAAAA,OAAO,EAAEA,OAH8J;AAIvK6C,MAAAA,OAAO,EAAEA,OAJ8J;AAKvKC,MAAAA,cAAc,EAAEA;AALuJ,KAApK,CAAP;AAOH;;AACD2B,EAAAA,sBAAsB,CAAC7B,iBAAD,EAAoB;AACtC,UAAMI,GAAG,GAAGJ,iBAAiB,CAAC,IAAD,CAA7B;;AACA,QAAII,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKzE,SAA5B,EAAuC;AACnC,YAAM,IAAIqB,KAAJ,CAAU,+EAAV,CAAN;AACH;;AACD,UAAMyE,+BAA+B,GAAGzB,iBAAiB,CAAC,gCAAD,CAAzD;;AACA,QAAIyB,+BAA+B,KAAK,IAApC,IAA4CA,+BAA+B,KAAK9F,SAApF,EAA+F;AAC3F,YAAM,IAAIqB,KAAJ,CAAU,2GAAV,CAAN;AACH;;AACD,WAAQ,GAAE,KAAKgC,aAAL,CAAmB5D,QAAS,8BAA6BoD,kBAAkB,CAACoC,MAAM,CAACR,GAAD,CAAP,CAAc,iBAAnG;AACH;;AACD0B,EAAAA,eAAe,CAAC9B,iBAAD,EAAoBC,OAAO,GAAG,MAA9B,EAAsCC,cAAc,GAAG,KAAvD,EAA8DC,OAA9D,EAAuE;AAClF,UAAM4B,2BAA2B,GAAG/B,iBAAiB,CAAC,4BAAD,CAArD;;AACA,QAAI+B,2BAA2B,KAAK,IAAhC,IAAwCA,2BAA2B,KAAKpG,SAA5E,EAAuF;AACnF,YAAM,IAAIqB,KAAJ,CAAU,mGAAV,CAAN;AACH;;AACD,QAAII,OAAO,GAAG,KAAK6B,cAAnB;AACA,QAAIoB,wBAAwB,GAAGF,OAAO,IAAIA,OAAO,CAACG,gBAAlD;;AACA,QAAID,wBAAwB,KAAK1E,SAAjC,EAA4C;AACxC,YAAM4E,iBAAiB,GAAG,CACtB,kBADsB,CAA1B;AAGAF,MAAAA,wBAAwB,GAAG,KAAKrB,aAAL,CAAmBhD,kBAAnB,CAAsCuE,iBAAtC,CAA3B;AACH;;AACD,QAAIF,wBAAwB,KAAK1E,SAAjC,EAA4C;AACxCyB,MAAAA,OAAO,GAAGA,OAAO,CAACoD,GAAR,CAAY,QAAZ,EAAsBH,wBAAtB,CAAV;AACH;;AACD,UAAMqB,QAAQ,GAAG,CACb,kBADa,CAAjB;AAGA,UAAMC,uBAAuB,GAAG,KAAK3C,aAAL,CAAmBxD,uBAAnB,CAA2CkG,QAA3C,CAAhC;;AACA,QAAIC,uBAAuB,KAAKhG,SAAhC,EAA2C;AACvCyB,MAAAA,OAAO,GAAGA,OAAO,CAACoD,GAAR,CAAY,cAAZ,EAA4BmB,uBAA5B,CAAV;AACH;;AACD,QAAIlB,YAAY,GAAG,MAAnB;;AACA,QAAIJ,wBAAwB,IAAIA,wBAAwB,CAACK,UAAzB,CAAoC,MAApC,CAAhC,EAA6E;AACzED,MAAAA,YAAY,GAAG,MAAf;AACH;;AACD,WAAO,KAAK1B,UAAL,CAAgB6C,IAAhB,CAAsB,GAAE,KAAK5C,aAAL,CAAmB5D,QAAS,4BAApD,EAAiF2G,2BAAjF,EAA8G;AACjHtB,MAAAA,YAAY,EAAEA,YADmG;AAEjHpF,MAAAA,eAAe,EAAE,KAAK2D,aAAL,CAAmB3D,eAF6E;AAGjH+B,MAAAA,OAAO,EAAEA,OAHwG;AAIjH6C,MAAAA,OAAO,EAAEA,OAJwG;AAKjHC,MAAAA,cAAc,EAAEA;AALiG,KAA9G,CAAP;AAOH;;AACD8B,EAAAA,kBAAkB,CAAChC,iBAAD,EAAoB;AAClC,UAAM+B,2BAA2B,GAAG/B,iBAAiB,CAAC,4BAAD,CAArD;;AACA,QAAI+B,2BAA2B,KAAK,IAAhC,IAAwCA,2BAA2B,KAAKpG,SAA5E,EAAuF;AACnF,YAAM,IAAIqB,KAAJ,CAAU,mGAAV,CAAN;AACH;;AACD,WAAQ,GAAE,KAAKgC,aAAL,CAAmB5D,QAAS,4BAAtC;AACH;;AACD6G,EAAAA,KAAK,CAACjC,iBAAD,EAAoBC,OAAO,GAAG,MAA9B,EAAsCC,cAAc,GAAG,KAAvD,EAA8DC,OAA9D,EAAuE;AACxE,UAAMC,GAAG,GAAGJ,iBAAiB,CAAC,IAAD,CAA7B;;AACA,QAAII,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKzE,SAA5B,EAAuC;AACnC,YAAM,IAAIqB,KAAJ,CAAU,iEAAV,CAAN;AACH;;AACD,UAAMkF,iBAAiB,GAAGlC,iBAAiB,CAAC,kBAAD,CAA3C;;AACA,QAAIkC,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAKvG,SAAxD,EAAmE;AAC/D,YAAM,IAAIqB,KAAJ,CAAU,+EAAV,CAAN;AACH;;AACD,QAAII,OAAO,GAAG,KAAK6B,cAAnB;AACA,QAAIoB,wBAAwB,GAAGF,OAAO,IAAIA,OAAO,CAACG,gBAAlD;;AACA,QAAID,wBAAwB,KAAK1E,SAAjC,EAA4C;AACxC,YAAM4E,iBAAiB,GAAG,CACtB,kBADsB,CAA1B;AAGAF,MAAAA,wBAAwB,GAAG,KAAKrB,aAAL,CAAmBhD,kBAAnB,CAAsCuE,iBAAtC,CAA3B;AACH;;AACD,QAAIF,wBAAwB,KAAK1E,SAAjC,EAA4C;AACxCyB,MAAAA,OAAO,GAAGA,OAAO,CAACoD,GAAR,CAAY,QAAZ,EAAsBH,wBAAtB,CAAV;AACH;;AACD,UAAMqB,QAAQ,GAAG,CACb,kBADa,CAAjB;AAGA,UAAMC,uBAAuB,GAAG,KAAK3C,aAAL,CAAmBxD,uBAAnB,CAA2CkG,QAA3C,CAAhC;;AACA,QAAIC,uBAAuB,KAAKhG,SAAhC,EAA2C;AACvCyB,MAAAA,OAAO,GAAGA,OAAO,CAACoD,GAAR,CAAY,cAAZ,EAA4BmB,uBAA5B,CAAV;AACH;;AACD,QAAIlB,YAAY,GAAG,MAAnB;;AACA,QAAIJ,wBAAwB,IAAIA,wBAAwB,CAACK,UAAzB,CAAoC,MAApC,CAAhC,EAA6E;AACzED,MAAAA,YAAY,GAAG,MAAf;AACH;;AACD,WAAO,KAAK1B,UAAL,CAAgBoD,GAAhB,CAAqB,GAAE,KAAKnD,aAAL,CAAmB5D,QAAS,8BAA6BoD,kBAAkB,CAACoC,MAAM,CAACR,GAAD,CAAP,CAAc,EAAhH,EAAmH8B,iBAAnH,EAAsI;AACzIzB,MAAAA,YAAY,EAAEA,YAD2H;AAEzIpF,MAAAA,eAAe,EAAE,KAAK2D,aAAL,CAAmB3D,eAFqG;AAGzI+B,MAAAA,OAAO,EAAEA,OAHgI;AAIzI6C,MAAAA,OAAO,EAAEA,OAJgI;AAKzIC,MAAAA,cAAc,EAAEA;AALyH,KAAtI,CAAP;AAOH;;AACDkC,EAAAA,QAAQ,CAACpC,iBAAD,EAAoB;AACxB,UAAMI,GAAG,GAAGJ,iBAAiB,CAAC,IAAD,CAA7B;;AACA,QAAII,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKzE,SAA5B,EAAuC;AACnC,YAAM,IAAIqB,KAAJ,CAAU,iEAAV,CAAN;AACH;;AACD,UAAMkF,iBAAiB,GAAGlC,iBAAiB,CAAC,kBAAD,CAA3C;;AACA,QAAIkC,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAKvG,SAAxD,EAAmE;AAC/D,YAAM,IAAIqB,KAAJ,CAAU,+EAAV,CAAN;AACH;;AACD,WAAQ,GAAE,KAAKgC,aAAL,CAAmB5D,QAAS,8BAA6BoD,kBAAkB,CAACoC,MAAM,CAACR,GAAD,CAAP,CAAc,EAAnG;AACH;;AAtTwB;;AAwT7BtB,sBAAsB,CAACnB,IAAvB;AAAA,mBAAoHmB,sBAApH,EA5VwGpF,EA4VxG,UAA4JO,EAAE,CAAC2D,UAA/J,GA5VwGlE,EA4VxG,UAAsLiB,sBAAtL,MA5VwGjB,EA4VxG,UAAyOmB,wBAAzO;AAAA;;AACAiE,sBAAsB,CAACuD,KAAvB,kBA7VwG3I,EA6VxG;AAAA,SAAwHoF,sBAAxH;AAAA,WAAwHA,sBAAxH;AAAA,cAA4J;AAA5J;;AACA;AAAA,qDA9VwGpF,EA8VxG,mBAA4FoF,sBAA5F,EAAgI,CAAC;AACrHlD,IAAAA,IAAI,EAAE7B,UAD+G;AAErHiE,IAAAA,IAAI,EAAE,CAAC;AACCsE,MAAAA,UAAU,EAAE;AADb,KAAD;AAF+G,GAAD,CAAhI,EAK4B,YAAY;AAAE,WAAO,CAAC;AAAE1G,MAAAA,IAAI,EAAE3B,EAAE,CAAC2D;AAAX,KAAD,EAA0B;AAAEhC,MAAAA,IAAI,EAAED,SAAR;AAAmByC,MAAAA,UAAU,EAAE,CAAC;AACvFxC,QAAAA,IAAI,EAAE/B;AADiF,OAAD,EAEvF;AACC+B,QAAAA,IAAI,EAAE5B,MADP;AAECgE,QAAAA,IAAI,EAAE,CAACrD,sBAAD;AAFP,OAFuF;AAA/B,KAA1B,EAK3B;AAAEiB,MAAAA,IAAI,EAAEf,wBAAR;AAAkCuD,MAAAA,UAAU,EAAE,CAAC;AACjDxC,QAAAA,IAAI,EAAE/B;AAD2C,OAAD;AAA9C,KAL2B,CAAP;AAOlB,GAZxB;AAAA;;AAcA,MAAM0I,2CAA2C,GAAGlI,WAAW,CAAC,CAAC;AACzDmI,EAAAA,UAAU,EAAE,iCAD6C;AAEzDC,EAAAA,MAAM,EAAE,QAFiD;AAGzDC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AAFV,GADO,EAKP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,aADT;AAEF,gBAAU,CAAC;AACH,mBAAW,kDADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,iBAAO,IADA;AAEP,iBAAO;AAFA;AAHR,OAAD;AAFR;AAFV,GALO,EAmBP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,oDADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,yBAAe;AADR;AAHR,OAAD;AAFR;AAFV,GAnBO,EAgCP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,sEADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,mBAAS;AADF;AAHR,OAAD;AAFR;AAFV,GAhCO,EA6CP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,qBADT;AAEF,gBAAU,CAAC;AACH,mBAAW,6DADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,sBAAY;AADL;AAHR,OAAD;AAFR;AAFV,GA7CO,EA0DP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW;AADT;AAFV,GA1DO;AAH8C,CAAD,CAAD,CAA/D;AAqEA,MAAMC,wCAAwC,GAAGxI,WAAW,CAAC,CAAC;AACtDmI,EAAAA,UAAU,EAAE,iCAD0C;AAEtDC,EAAAA,MAAM,EAAE,KAF8C;AAGtDC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,YAAM,sCADJ;AAEF,kBAAY,mBAFV;AAGF,oBAAc;AACV,kBAAU,SADA;AAEV,wBAAgB;AAFN,OAHZ;AAOF,uBAAiB,sCAPf;AAQF,wBAAkB;AACd,kBAAU,QADI;AAEd,wBAAgB;AAFF,OARhB;AAYF,4BAAsB,IAZpB;AAaF,+BAAyB,IAbvB;AAcF,wBAAkB,IAdhB;AAeF,yBAAmB;AACf,kBAAU,SADK;AAEf,wBAAgB;AAFD,OAfjB;AAmBF,mBAAa,YAnBX;AAoBF,iBAAW,YApBT;AAqBF,uBAAiB;AACb,kBAAU,OADG;AAEb,wBAAgB;AAFH,OArBf;AAyBF,kBAAY;AAzBV;AAFV,GADO,EA+BP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,uBAAiB,eADf;AAEF,oBAAc;AACV,kBAAU,QADA;AAEV,qBAAa;AACT,iBAAO;AADE,SAFH;AAKV,wBAAgB;AALN,OAFZ;AASF,mBAAa;AACT,eAAO;AADE,OATX;AAYF,iBAAW,YAZT;AAaF,kBAAY,UAbV;AAcF,kBAAY,UAdV;AAeF,yBAAmB;AACf,kBAAU,QADK;AAEf,qBAAa;AACT,iBAAO;AADE,SAFE;AAKf,wBAAgB;AALD,OAfjB;AAsBF,uBAAiB;AACb,kBAAU,QADG;AAEb,qBAAa;AACT,iBAAO;AADE,SAFA;AAKb,wBAAgB;AALH,OAtBf;AA6BF,4BAAsB,kBA7BpB;AA8BF,+BAAyB,iBA9BvB;AA+BF,wBAAkB;AACd,kBAAU,QADI;AAEd,qBAAa;AACT,iBAAO;AADE,SAFC;AAKd,wBAAgB;AALF,OA/BhB;AAsCF,YAAM,IAtCJ;AAuCF,wBAAkB,kBAvChB;AAwCF,mBAAa;AAxCX;AAFV,GA/BO,EA4EP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,aADT;AAEF,gBAAU,CAAC;AACH,mBAAW,kDADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,iBAAO,IADA;AAEP,iBAAO;AAFA;AAHR,OAAD;AAFR;AAFV,GA5EO,EA0FP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,oDADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,yBAAe;AADR;AAHR,OAAD;AAFR;AAFV,GA1FO,EAuGP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,sEADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,mBAAS;AADF;AAHR,OAAD;AAFR;AAFV,GAvGO,EAoHP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,qBADT;AAEF,gBAAU,CAAC;AACH,mBAAW,6DADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,sBAAY;AADL;AAHR,OAAD;AAFR;AAFV,GApHO,EAiIP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW;AADT;AAFV,GAjIO;AAH2C,CAAD,CAAD,CAA5D;AA4IA,MAAME,iDAAiD,GAAGzI,WAAW,CAAC,CAAC;AAC/DmI,EAAAA,UAAU,EAAE,4BADmD;AAE/DC,EAAAA,MAAM,EAAE,KAFuD;AAG/DC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE,CAAC;AACC,YAAM,sCADP;AAEC,kBAAY,mBAFb;AAGC,oBAAc;AACV,kBAAU,SADA;AAEV,wBAAgB;AAFN,OAHf;AAOC,uBAAiB,sCAPlB;AAQC,wBAAkB;AACd,kBAAU,QADI;AAEd,wBAAgB;AAFF,OARnB;AAYC,4BAAsB,IAZvB;AAaC,+BAAyB,IAb1B;AAcC,wBAAkB,IAdnB;AAeC,yBAAmB;AACf,kBAAU,SADK;AAEf,wBAAgB;AAFD,OAfpB;AAmBC,mBAAa,YAnBd;AAoBC,iBAAW,YApBZ;AAqBC,uBAAiB;AACb,kBAAU,OADG;AAEb,wBAAgB;AAFH,OArBlB;AAyBC,kBAAY;AAzBb,KAAD;AAFV,GADO,EA+BP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,aADT;AAEF,gBAAU,CAAC;AACH,mBAAW,kDADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,iBAAO,IADA;AAEP,iBAAO;AAFA;AAHR,OAAD;AAFR;AAFV,GA/BO,EA6CP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,oDADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,yBAAe;AADR;AAHR,OAAD;AAFR;AAFV,GA7CO,EA0DP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,sEADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,mBAAS;AADF;AAHR,OAAD;AAFR;AAFV,GA1DO,EAuEP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW;AADT;AAFV,GAvEO;AAHoD,CAAD,CAAD,CAArE;AAkFA,MAAMG,sDAAsD,GAAG1I,WAAW,CAAC,CAAC;AACpEmI,EAAAA,UAAU,EAAE,gDADwD;AAEpEC,EAAAA,MAAM,EAAE,MAF4D;AAGpEC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AAFV,GADO,EAKP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,aADT;AAEF,gBAAU,CAAC;AACH,mBAAW,kDADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,iBAAO,IADA;AAEP,iBAAO;AAFA;AAHR,OAAD;AAFR;AAFV,GALO,EAmBP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,oDADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,yBAAe;AADR;AAHR,OAAD;AAFR;AAFV,GAnBO,EAgCP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,sEADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,mBAAS;AADF;AAHR,OAAD;AAFR;AAFV,GAhCO,EA6CP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,qBADT;AAEF,gBAAU,CAAC;AACH,mBAAW,6DADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,sBAAY;AADL;AAHR,OAAD;AAFR;AAFV,GA7CO,EA0DP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW;AADT;AAFV,GA1DO;AAHyD,CAAD,CAAD,CAA1E;AAqEA,MAAMI,kDAAkD,GAAG3I,WAAW,CAAC,CAAC;AAChEmI,EAAAA,UAAU,EAAE,4BADoD;AAEhEC,EAAAA,MAAM,EAAE,MAFwD;AAGhEC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,YAAM;AADJ;AAFV,GADO,EAOP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,aADT;AAEF,gBAAU,CAAC;AACH,mBAAW,kDADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,iBAAO,IADA;AAEP,iBAAO;AAFA;AAHR,OAAD;AAFR;AAFV,GAPO,EAqBP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,oDADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,yBAAe;AADR;AAHR,OAAD;AAFR;AAFV,GArBO,EAkCP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,sEADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,mBAAS;AADF;AAHR,OAAD;AAFR;AAFV,GAlCO,EA+CP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW;AADT;AAFV,GA/CO;AAHqD,CAAD,CAAD,CAAtE;AA0DA,MAAMK,wCAAwC,GAAG5I,WAAW,CAAC,CAAC;AACtDmI,EAAAA,UAAU,EAAE,iCAD0C;AAEtDC,EAAAA,MAAM,EAAE,KAF8C;AAGtDC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AAFV,GADO,EAKP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,aADT;AAEF,gBAAU,CAAC;AACH,mBAAW,kDADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,iBAAO,IADA;AAEP,iBAAO;AAFA;AAHR,OAAD;AAFR;AAFV,GALO,EAmBP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,oDADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,yBAAe;AADR;AAHR,OAAD;AAFR;AAFV,GAnBO,EAgCP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,sEADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,mBAAS;AADF;AAHR,OAAD;AAFR;AAFV,GAhCO,EA6CP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,qBADT;AAEF,gBAAU,CAAC;AACH,mBAAW,6DADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,sBAAY;AADL;AAHR,OAAD;AAFR;AAFV,GA7CO,EA0DP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW;AADT;AAFV,GA1DO;AAH2C,CAAD,CAAD,CAA5D;AAqEA,MAAMM,mCAAmC,GAAG7I,WAAW,CAAC,CACpD;AACImI,EAAAA,UAAU,EAAE,iCADhB;AAEIC,EAAAA,MAAM,EAAE,QAFZ;AAGIC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AAFV,GADO,EAKP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,aADT;AAEF,gBAAU,CAAC;AACH,mBAAW,kDADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,iBAAO,IADA;AAEP,iBAAO;AAFA;AAHR,OAAD;AAFR;AAFV,GALO,EAmBP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,oDADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,yBAAe;AADR;AAHR,OAAD;AAFR;AAFV,GAnBO,EAgCP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,sEADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,mBAAS;AADF;AAHR,OAAD;AAFR;AAFV,GAhCO,EA6CP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,qBADT;AAEF,gBAAU,CAAC;AACH,mBAAW,6DADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,sBAAY;AADL;AAHR,OAAD;AAFR;AAFV,GA7CO,EA0DP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW;AADT;AAFV,GA1DO;AAHf,CADoD,EAsEpD;AACIJ,EAAAA,UAAU,EAAE,iCADhB;AAEIC,EAAAA,MAAM,EAAE,KAFZ;AAGIC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,YAAM,sCADJ;AAEF,kBAAY,mBAFV;AAGF,oBAAc;AACV,kBAAU,SADA;AAEV,wBAAgB;AAFN,OAHZ;AAOF,uBAAiB,sCAPf;AAQF,wBAAkB;AACd,kBAAU,QADI;AAEd,wBAAgB;AAFF,OARhB;AAYF,4BAAsB,IAZpB;AAaF,+BAAyB,IAbvB;AAcF,wBAAkB,IAdhB;AAeF,yBAAmB;AACf,kBAAU,SADK;AAEf,wBAAgB;AAFD,OAfjB;AAmBF,mBAAa,YAnBX;AAoBF,iBAAW,YApBT;AAqBF,uBAAiB;AACb,kBAAU,OADG;AAEb,wBAAgB;AAFH,OArBf;AAyBF,kBAAY;AAzBV;AAFV,GADO,EA+BP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,uBAAiB,eADf;AAEF,oBAAc;AACV,kBAAU,QADA;AAEV,qBAAa;AACT,iBAAO;AADE,SAFH;AAKV,wBAAgB;AALN,OAFZ;AASF,mBAAa;AACT,eAAO;AADE,OATX;AAYF,iBAAW,YAZT;AAaF,kBAAY,UAbV;AAcF,kBAAY,UAdV;AAeF,yBAAmB;AACf,kBAAU,QADK;AAEf,qBAAa;AACT,iBAAO;AADE,SAFE;AAKf,wBAAgB;AALD,OAfjB;AAsBF,uBAAiB;AACb,kBAAU,QADG;AAEb,qBAAa;AACT,iBAAO;AADE,SAFA;AAKb,wBAAgB;AALH,OAtBf;AA6BF,4BAAsB,kBA7BpB;AA8BF,+BAAyB,iBA9BvB;AA+BF,wBAAkB;AACd,kBAAU,QADI;AAEd,qBAAa;AACT,iBAAO;AADE,SAFC;AAKd,wBAAgB;AALF,OA/BhB;AAsCF,YAAM,IAtCJ;AAuCF,wBAAkB,kBAvChB;AAwCF,mBAAa;AAxCX;AAFV,GA/BO,EA4EP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,aADT;AAEF,gBAAU,CAAC;AACH,mBAAW,kDADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,iBAAO,IADA;AAEP,iBAAO;AAFA;AAHR,OAAD;AAFR;AAFV,GA5EO,EA0FP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,oDADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,yBAAe;AADR;AAHR,OAAD;AAFR;AAFV,GA1FO,EAuGP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,sEADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,mBAAS;AADF;AAHR,OAAD;AAFR;AAFV,GAvGO,EAoHP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,qBADT;AAEF,gBAAU,CAAC;AACH,mBAAW,6DADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,sBAAY;AADL;AAHR,OAAD;AAFR;AAFV,GApHO,EAiIP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW;AADT;AAFV,GAjIO;AAHf,CAtEoD,EAkNpD;AACIJ,EAAAA,UAAU,EAAE,4BADhB;AAEIC,EAAAA,MAAM,EAAE,KAFZ;AAGIC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE,CAAC;AACC,YAAM,sCADP;AAEC,kBAAY,mBAFb;AAGC,oBAAc;AACV,kBAAU,SADA;AAEV,wBAAgB;AAFN,OAHf;AAOC,uBAAiB,sCAPlB;AAQC,wBAAkB;AACd,kBAAU,QADI;AAEd,wBAAgB;AAFF,OARnB;AAYC,4BAAsB,IAZvB;AAaC,+BAAyB,IAb1B;AAcC,wBAAkB,IAdnB;AAeC,yBAAmB;AACf,kBAAU,SADK;AAEf,wBAAgB;AAFD,OAfpB;AAmBC,mBAAa,YAnBd;AAoBC,iBAAW,YApBZ;AAqBC,uBAAiB;AACb,kBAAU,OADG;AAEb,wBAAgB;AAFH,OArBlB;AAyBC,kBAAY;AAzBb,KAAD;AAFV,GADO,EA+BP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,aADT;AAEF,gBAAU,CAAC;AACH,mBAAW,kDADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,iBAAO,IADA;AAEP,iBAAO;AAFA;AAHR,OAAD;AAFR;AAFV,GA/BO,EA6CP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,oDADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,yBAAe;AADR;AAHR,OAAD;AAFR;AAFV,GA7CO,EA0DP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,sEADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,mBAAS;AADF;AAHR,OAAD;AAFR;AAFV,GA1DO,EAuEP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW;AADT;AAFV,GAvEO;AAHf,CAlNoD,EAoSpD;AACIJ,EAAAA,UAAU,EAAE,gDADhB;AAEIC,EAAAA,MAAM,EAAE,MAFZ;AAGIC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AAFV,GADO,EAKP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,aADT;AAEF,gBAAU,CAAC;AACH,mBAAW,kDADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,iBAAO,IADA;AAEP,iBAAO;AAFA;AAHR,OAAD;AAFR;AAFV,GALO,EAmBP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,oDADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,yBAAe;AADR;AAHR,OAAD;AAFR;AAFV,GAnBO,EAgCP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,sEADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,mBAAS;AADF;AAHR,OAAD;AAFR;AAFV,GAhCO,EA6CP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,qBADT;AAEF,gBAAU,CAAC;AACH,mBAAW,6DADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,sBAAY;AADL;AAHR,OAAD;AAFR;AAFV,GA7CO,EA0DP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW;AADT;AAFV,GA1DO;AAHf,CApSoD,EAyWpD;AACIJ,EAAAA,UAAU,EAAE,4BADhB;AAEIC,EAAAA,MAAM,EAAE,MAFZ;AAGIC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,YAAM;AADJ;AAFV,GADO,EAOP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,aADT;AAEF,gBAAU,CAAC;AACH,mBAAW,kDADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,iBAAO,IADA;AAEP,iBAAO;AAFA;AAHR,OAAD;AAFR;AAFV,GAPO,EAqBP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,oDADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,yBAAe;AADR;AAHR,OAAD;AAFR;AAFV,GArBO,EAkCP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,sEADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,mBAAS;AADF;AAHR,OAAD;AAFR;AAFV,GAlCO,EA+CP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW;AADT;AAFV,GA/CO;AAHf,CAzWoD,EAmapD;AACIJ,EAAAA,UAAU,EAAE,iCADhB;AAEIC,EAAAA,MAAM,EAAE,KAFZ;AAGIC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AAFV,GADO,EAKP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,aADT;AAEF,gBAAU,CAAC;AACH,mBAAW,kDADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,iBAAO,IADA;AAEP,iBAAO;AAFA;AAHR,OAAD;AAFR;AAFV,GALO,EAmBP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,oDADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,yBAAe;AADR;AAHR,OAAD;AAFR;AAFV,GAnBO,EAgCP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,sCADT;AAEF,gBAAU,CAAC;AACH,mBAAW,sEADR;AAEH,eAAO,kBAFJ;AAGH,mBAAW;AACP,mBAAS;AADF;AAHR,OAAD;AAFR;AAFV,GAhCO,EA6CP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW,qBADT;AAEF,gBAAU,CAAC;AACH,mBAAW,6DADR;AAEH,eAAO,qBAFJ;AAGH,mBAAW;AACP,sBAAY;AADL;AAHR,OAAD;AAFR;AAFV,GA7CO,EA0DP;AACID,IAAAA,MAAM,EAAE,GADZ;AAEIC,IAAAA,IAAI,EAAE;AACF,iBAAW;AADT;AAFV,GA1DO;AAHf,CAnaoD,CAAD,CAAvD;AA0eA,SAAShI,kBAAT,EAA6B8B,YAA7B,EAA2CpC,8BAA3C,EAA2EK,sBAA3E,EAAmGgC,oBAAnG,EAAyH9B,wBAAzH,EAAmJiE,sBAAnJ,EAA2KyD,2CAA3K,EAAwNM,wCAAxN,EAAkQC,iDAAlQ,EAAqTI,mCAArT,EAA0VH,sDAA1V,EAAkZC,kDAAlZ,EAAscC,wCAAtc","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule, Optional, SkipSelf, Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i2 from '@backbase/foundation-ang/data-http';\nimport { createMocks } from '@backbase/foundation-ang/data-http';\n\nvar IdstandingorderPostRequestBody;\n(function (IdstandingorderPostRequestBody) {\n    IdstandingorderPostRequestBody.FrequencyEnum = {\n        MONTHLY: 'MONTHLY',\n        WEEKLY: 'WEEKLY',\n        DAILY: 'DAILY'\n    };\n})(IdstandingorderPostRequestBody || (IdstandingorderPostRequestBody = {}));\n\nconst SAVING_GOALS_BASE_PATH = new InjectionToken('SAVING_GOALS_BASE_PATH');\nconst COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n};\n\nclass SavingGoalsConfiguration {\n    constructor(configurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n    selectHeaderContentType(contentTypes) {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n        const type = contentTypes.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n    selectHeaderAccept(accepts) {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n        const type = accepts.find((x) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n    lookupCredential(key) {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\nconst CONFIG_TOKEN = new InjectionToken('api-data-module SavingGoalsConfiguration');\n\nclass SavingGoalsApiModule {\n    constructor(parentModule, http, dataModulesManager, config) {\n        if (parentModule) {\n            throw new Error('SavingGoalsApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n                'See also https://github.com/angular/angular/issues/20575');\n        }\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n    static forRoot(configurationFactory) {\n        return {\n            ngModule: SavingGoalsApiModule,\n            providers: [{ provide: SavingGoalsConfiguration, useFactory: configurationFactory }]\n        };\n    }\n}\nSavingGoalsApiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: SavingGoalsApiModule, deps: [{ token: SavingGoalsApiModule, optional: true, skipSelf: true }, { token: i1.HttpClient, optional: true }, { token: i2.DataModulesManager, optional: true }, { token: SavingGoalsConfiguration }], target: i0.ɵɵFactoryTarget.NgModule });\nSavingGoalsApiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: SavingGoalsApiModule });\nSavingGoalsApiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: SavingGoalsApiModule, providers: [], imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: SavingGoalsApiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [],\n                    exports: [],\n                    providers: []\n                }]\n        }], ctorParameters: function () { return [{ type: SavingGoalsApiModule, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DataModulesManager, decorators: [{\n                    type: Optional\n                }] }, { type: SavingGoalsConfiguration }]; } });\n\nclass CustomHttpParameterCodec {\n    encodeKey(k) {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v) {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k) {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v) {\n        return decodeURIComponent(v);\n    }\n}\n\nclass SavinggoalsHttpService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = '';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new SavingGoalsConfiguration();\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n    addToHttpParams(httpParams, value, key) {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        }\n        else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n    addToHttpParamsRecursive(httpParams, value, key) {\n        if (value == null) {\n            return httpParams;\n        }\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            }\n            else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString().substr(0, 10));\n                }\n                else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            }\n            else {\n                Object.keys(value).forEach(k => httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        }\n        else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        }\n        else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n    deleteId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteId.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.delete(`${this.configuration.basePath}/client-api/v2/savinggoals/${encodeURIComponent(String(_id))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    deleteIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/savinggoals/${encodeURIComponent(String(_id))}`;\n    }\n    getId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getId.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/savinggoals/${encodeURIComponent(String(_id))}`, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/savinggoals/${encodeURIComponent(String(_id))}`;\n    }\n    getSavingGoals(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _arrangementId = requestParameters[\"arrangementId\"];\n        if (_arrangementId === null || _arrangementId === undefined) {\n            throw new Error('Required parameter arrangementId was null or undefined when calling getSavingGoals.');\n        }\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_arrangementId !== undefined && _arrangementId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _arrangementId, 'arrangementId');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v2/savinggoals`, {\n            params: queryParameters,\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    getSavingGoalsUrl(requestParameters) {\n        const _arrangementId = requestParameters[\"arrangementId\"];\n        if (_arrangementId === null || _arrangementId === undefined) {\n            throw new Error('Required parameter arrangementId was null or undefined when calling getSavingGoals.');\n        }\n        let queryParameters = new HttpParams({ encoder: this.encoder });\n        if (_arrangementId !== undefined && _arrangementId !== null) {\n            queryParameters = this.addToHttpParams(queryParameters, _arrangementId, 'arrangementId');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/savinggoals${queryString ? `?${queryString}` : ''}`;\n    }\n    postIdstandingorder(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling postIdstandingorder.');\n        }\n        const _idstandingorderPostRequestBody = requestParameters[\"idstandingorderPostRequestBody\"];\n        if (_idstandingorderPostRequestBody === null || _idstandingorderPostRequestBody === undefined) {\n            throw new Error('Required parameter idstandingorderPostRequestBody was null or undefined when calling postIdstandingorder.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/savinggoals/${encodeURIComponent(String(_id))}/standing-order`, _idstandingorderPostRequestBody, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postIdstandingorderUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling postIdstandingorder.');\n        }\n        const _idstandingorderPostRequestBody = requestParameters[\"idstandingorderPostRequestBody\"];\n        if (_idstandingorderPostRequestBody === null || _idstandingorderPostRequestBody === undefined) {\n            throw new Error('Required parameter idstandingorderPostRequestBody was null or undefined when calling postIdstandingorder.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/savinggoals/${encodeURIComponent(String(_id))}/standing-order`;\n    }\n    postSavingGoals(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _savingGoalsPostRequestBody = requestParameters[\"savingGoalsPostRequestBody\"];\n        if (_savingGoalsPostRequestBody === null || _savingGoalsPostRequestBody === undefined) {\n            throw new Error('Required parameter savingGoalsPostRequestBody was null or undefined when calling postSavingGoals.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.post(`${this.configuration.basePath}/client-api/v2/savinggoals`, _savingGoalsPostRequestBody, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    postSavingGoalsUrl(requestParameters) {\n        const _savingGoalsPostRequestBody = requestParameters[\"savingGoalsPostRequestBody\"];\n        if (_savingGoalsPostRequestBody === null || _savingGoalsPostRequestBody === undefined) {\n            throw new Error('Required parameter savingGoalsPostRequestBody was null or undefined when calling postSavingGoals.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/savinggoals`;\n    }\n    putId(requestParameters, observe = 'body', reportProgress = false, options) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putId.');\n        }\n        const _idPutRequestBody = requestParameters[\"idPutRequestBody\"];\n        if (_idPutRequestBody === null || _idPutRequestBody === undefined) {\n            throw new Error('Required parameter idPutRequestBody was null or undefined when calling putId.');\n        }\n        let headers = this.defaultHeaders;\n        let httpHeaderAcceptSelected = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            const httpHeaderAccepts = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        let responseType = 'json';\n        if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n        return this.httpClient.put(`${this.configuration.basePath}/client-api/v2/savinggoals/${encodeURIComponent(String(_id))}`, _idPutRequestBody, {\n            responseType: responseType,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    putIdUrl(requestParameters) {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putId.');\n        }\n        const _idPutRequestBody = requestParameters[\"idPutRequestBody\"];\n        if (_idPutRequestBody === null || _idPutRequestBody === undefined) {\n            throw new Error('Required parameter idPutRequestBody was null or undefined when calling putId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/savinggoals/${encodeURIComponent(String(_id))}`;\n    }\n}\nSavinggoalsHttpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: SavinggoalsHttpService, deps: [{ token: i1.HttpClient }, { token: SAVING_GOALS_BASE_PATH, optional: true }, { token: SavingGoalsConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nSavinggoalsHttpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: SavinggoalsHttpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.15\", ngImport: i0, type: SavinggoalsHttpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [SAVING_GOALS_BASE_PATH]\n                }] }, { type: SavingGoalsConfiguration, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst SavinggoalsHttpServiceDeleteIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/savinggoals/{id}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst SavinggoalsHttpServiceGetIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/savinggoals/{id}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"1955e686-d31e-4216-b3dd-5d66161d536b\",\n                    \"goalName\": \"Holiday to Hawaii\",\n                    \"goalAmount\": {\n                        \"amount\": \"2000.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n                    \"amountProgress\": {\n                        \"amount\": \"550.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"progressPercentage\": 27.5,\n                    \"performancePercentage\": 27.5,\n                    \"timePercentage\": 50.5,\n                    \"amountRemaining\": {\n                        \"amount\": \"1450.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"startDate\": \"2017-02-28\",\n                    \"endDate\": \"2019-02-28\",\n                    \"initialAmount\": {\n                        \"amount\": \"10.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"recipeId\": \"65b5c1b7-17e0-435f-a828-e2f6afec26a9\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"arrangementId\": \"arrangementId\",\n                    \"goalAmount\": {\n                        \"amount\": \"amount\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"endDate\": \"2000-01-23\",\n                    \"recipeId\": \"recipeId\",\n                    \"goalName\": \"goalName\",\n                    \"amountRemaining\": {\n                        \"amount\": \"amount\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"initialAmount\": {\n                        \"amount\": \"amount\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"progressPercentage\": 0.8008281904610115,\n                    \"performancePercentage\": 6.027456183070403,\n                    \"amountProgress\": {\n                        \"amount\": \"amount\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"id\": \"id\",\n                    \"timePercentage\": 1.4658129805029452,\n                    \"startDate\": \"2000-01-23\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst SavinggoalsHttpServiceGetSavingGoalsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/savinggoals\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"id\": \"1955e686-d31e-4216-b3dd-5d66161d536b\",\n                        \"goalName\": \"Holiday to Hawaii\",\n                        \"goalAmount\": {\n                            \"amount\": \"2000.00\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n                        \"amountProgress\": {\n                            \"amount\": \"550.00\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"progressPercentage\": 27.5,\n                        \"performancePercentage\": 27.5,\n                        \"timePercentage\": 50.5,\n                        \"amountRemaining\": {\n                            \"amount\": \"1450.00\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"startDate\": \"2017-02-28\",\n                        \"endDate\": \"2019-02-28\",\n                        \"initialAmount\": {\n                            \"amount\": \"10.00\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"recipeId\": \"65b5c1b7-17e0-435f-a828-e2f6afec26a9\"\n                    }]\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst SavinggoalsHttpServicePostIdstandingorderMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/savinggoals/{id}/standing-order\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst SavinggoalsHttpServicePostSavingGoalsMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/savinggoals\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d77161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst SavinggoalsHttpServicePutIdMocksProvider = createMocks([{\n        urlPattern: \"/client-api/v2/savinggoals/{id}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    }]);\nconst SavinggoalsHttpServiceMocksProvider = createMocks([\n    {\n        urlPattern: \"/client-api/v2/savinggoals/{id}\",\n        method: \"DELETE\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/savinggoals/{id}\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: {\n                    \"id\": \"1955e686-d31e-4216-b3dd-5d66161d536b\",\n                    \"goalName\": \"Holiday to Hawaii\",\n                    \"goalAmount\": {\n                        \"amount\": \"2000.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n                    \"amountProgress\": {\n                        \"amount\": \"550.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"progressPercentage\": 27.5,\n                    \"performancePercentage\": 27.5,\n                    \"timePercentage\": 50.5,\n                    \"amountRemaining\": {\n                        \"amount\": \"1450.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"startDate\": \"2017-02-28\",\n                    \"endDate\": \"2019-02-28\",\n                    \"initialAmount\": {\n                        \"amount\": \"10.00\",\n                        \"currencyCode\": \"EUR\"\n                    },\n                    \"recipeId\": \"65b5c1b7-17e0-435f-a828-e2f6afec26a9\"\n                }\n            },\n            {\n                status: 200,\n                body: {\n                    \"arrangementId\": \"arrangementId\",\n                    \"goalAmount\": {\n                        \"amount\": \"amount\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"additions\": {\n                        \"key\": \"additions\"\n                    },\n                    \"endDate\": \"2000-01-23\",\n                    \"recipeId\": \"recipeId\",\n                    \"goalName\": \"goalName\",\n                    \"amountRemaining\": {\n                        \"amount\": \"amount\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"initialAmount\": {\n                        \"amount\": \"amount\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"progressPercentage\": 0.8008281904610115,\n                    \"performancePercentage\": 6.027456183070403,\n                    \"amountProgress\": {\n                        \"amount\": \"amount\",\n                        \"additions\": {\n                            \"key\": \"additions\"\n                        },\n                        \"currencyCode\": \"currencyCode\"\n                    },\n                    \"id\": \"id\",\n                    \"timePercentage\": 1.4658129805029452,\n                    \"startDate\": \"2000-01-23\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/savinggoals\",\n        method: \"GET\",\n        responses: [\n            {\n                status: 200,\n                body: [{\n                        \"id\": \"1955e686-d31e-4216-b3dd-5d66161d536b\",\n                        \"goalName\": \"Holiday to Hawaii\",\n                        \"goalAmount\": {\n                            \"amount\": \"2000.00\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"arrangementId\": \"3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\",\n                        \"amountProgress\": {\n                            \"amount\": \"550.00\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"progressPercentage\": 27.5,\n                        \"performancePercentage\": 27.5,\n                        \"timePercentage\": 50.5,\n                        \"amountRemaining\": {\n                            \"amount\": \"1450.00\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"startDate\": \"2017-02-28\",\n                        \"endDate\": \"2019-02-28\",\n                        \"initialAmount\": {\n                            \"amount\": \"10.00\",\n                            \"currencyCode\": \"EUR\"\n                        },\n                        \"recipeId\": \"65b5c1b7-17e0-435f-a828-e2f6afec26a9\"\n                    }]\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/savinggoals/{id}/standing-order\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/savinggoals\",\n        method: \"POST\",\n        responses: [\n            {\n                status: 201,\n                body: {\n                    \"id\": \"0955e686-d31e-4216-b3dd-5d77161d536d\"\n                }\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n    {\n        urlPattern: \"/client-api/v2/savinggoals/{id}\",\n        method: \"PUT\",\n        responses: [\n            {\n                status: 204,\n                body: \"\"\n            },\n            {\n                status: 400,\n                body: {\n                    \"message\": \"Bad Request\",\n                    \"errors\": [{\n                            \"message\": \"Value Exceeded. Must be between {min} and {max}.\",\n                            \"key\": \"common.api.shoesize\",\n                            \"context\": {\n                                \"max\": \"50\",\n                                \"min\": \"1\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 401,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to invalid credentials.\",\n                            \"key\": \"common.api.token\",\n                            \"context\": {\n                                \"accessToken\": \"expired\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 403,\n                body: {\n                    \"message\": \"Access to requested resource denied.\",\n                    \"errors\": [{\n                            \"message\": \"Resource access denied due to an insufficient user quota of {quota}.\",\n                            \"key\": \"common.api.quota\",\n                            \"context\": {\n                                \"quota\": \"someQuota\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 404,\n                body: {\n                    \"message\": \"Resource not found.\",\n                    \"errors\": [{\n                            \"message\": \"Unable to find the resource requested resource: {resource}.\",\n                            \"key\": \"common.api.resource\",\n                            \"context\": {\n                                \"resource\": \"aResource\"\n                            }\n                        }]\n                }\n            },\n            {\n                status: 500,\n                body: {\n                    \"message\": \"Description of error\"\n                }\n            },\n        ]\n    },\n]);\n\nexport { COLLECTION_FORMATS, CONFIG_TOKEN, IdstandingorderPostRequestBody, SAVING_GOALS_BASE_PATH, SavingGoalsApiModule, SavingGoalsConfiguration, SavinggoalsHttpService, SavinggoalsHttpServiceDeleteIdMocksProvider, SavinggoalsHttpServiceGetIdMocksProvider, SavinggoalsHttpServiceGetSavingGoalsMocksProvider, SavinggoalsHttpServiceMocksProvider, SavinggoalsHttpServicePostIdstandingorderMocksProvider, SavinggoalsHttpServicePostSavingGoalsMocksProvider, SavinggoalsHttpServicePutIdMocksProvider };\n"]},"metadata":{},"sourceType":"module"}