{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, Optional, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotificationsCommonModule } from '@backbase/notifications-common-ang';\nimport * as i2 from '@backbase/notifications-popups-widget-ang';\nimport { NotificationsPopupsWidgetModule } from '@backbase/notifications-popups-widget-ang';\nimport '@angular/localize/init';\nimport * as i2$1 from '@backbase/notifications-badge-widget-ang';\nimport { NotificationsBadgeWidgetModule } from '@backbase/notifications-badge-widget-ang';\n\nclass NotificationsCommunicationService {\n  notificationNavigation(_payload) {}\n\n  openNotificationSettings() {}\n\n}\n/* eslint-disable max-len */\n\n\nconst titles = {\n  noCommunicationServiceProvidedError: $localize`:@@notifications-badge.communication-service-not-provided-error:CommunicationService is not provided`\n};\n\nclass NotificationsPopupsComponent {\n  constructor(communicationService) {\n    this.communicationService = communicationService;\n  }\n  /**\n   * Method that emits navigation data and triggers navigation.\n   */\n\n\n  navigate(navigationData) {\n    if (this.communicationService) {\n      this.communicationService.notificationNavigation(navigationData);\n    } else {\n      this.showNoCommunicationServiceProvidedError();\n    }\n  }\n\n  showNoCommunicationServiceProvidedError() {\n    console.warn(titles.noCommunicationServiceProvidedError);\n  }\n\n}\n/** @nocollapse */\n\n\nNotificationsPopupsComponent.ɵfac = function NotificationsPopupsComponent_Factory(t) {\n  return new (t || NotificationsPopupsComponent)(i0.ɵɵdirectiveInject(NotificationsCommunicationService, 8));\n};\n/** @nocollapse */\n\n\nNotificationsPopupsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NotificationsPopupsComponent,\n  selectors: [[\"bb-notifications-popups\"]],\n  inputs: {\n    origins: \"origins\",\n    severityLevels: \"severityLevels\",\n    pollingInterval: \"pollingInterval\",\n    allowedRoutes: \"allowedRoutes\",\n    autofocus: \"autofocus\",\n    displayShowMoreButtonInPopup: \"displayShowMoreButtonInPopup\",\n    popupMessageLineAmount: \"popupMessageLineAmount\"\n  },\n  decls: 1,\n  vars: 7,\n  consts: [[3, \"origins\", \"severityLevels\", \"pollingInterval\", \"allowedRoutes\", \"autofocus\", \"displayShowMoreButtonInPopup\", \"popupMessageLineAmount\", \"notificationRouting\"]],\n  template: function NotificationsPopupsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"bb-notifications-popups-widget\", 0);\n      i0.ɵɵlistener(\"notificationRouting\", function NotificationsPopupsComponent_Template_bb_notifications_popups_widget_notificationRouting_0_listener($event) {\n        return ctx.navigate($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"origins\", ctx.origins)(\"severityLevels\", ctx.severityLevels)(\"pollingInterval\", ctx.pollingInterval)(\"allowedRoutes\", ctx.allowedRoutes)(\"autofocus\", ctx.autofocus)(\"displayShowMoreButtonInPopup\", ctx.displayShowMoreButtonInPopup)(\"popupMessageLineAmount\", ctx.popupMessageLineAmount);\n    }\n  },\n  directives: [i2.NotificationsPopupsWidgetComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NotificationsPopupsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-notifications-popups',\n      templateUrl: './notifications-popups.component.html'\n    }]\n  }], function () {\n    return [{\n      type: NotificationsCommunicationService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    origins: [{\n      type: Input\n    }],\n    severityLevels: [{\n      type: Input\n    }],\n    pollingInterval: [{\n      type: Input\n    }],\n    allowedRoutes: [{\n      type: Input\n    }],\n    autofocus: [{\n      type: Input\n    }],\n    displayShowMoreButtonInPopup: [{\n      type: Input\n    }],\n    popupMessageLineAmount: [{\n      type: Input\n    }]\n  });\n})();\n\nconst modules$1 = [NotificationsCommonModule, NotificationsPopupsWidgetModule];\n\nclass NotificationsPopupsModule {}\n/** @nocollapse */\n\n\nNotificationsPopupsModule.ɵfac = function NotificationsPopupsModule_Factory(t) {\n  return new (t || NotificationsPopupsModule)();\n};\n/** @nocollapse */\n\n\nNotificationsPopupsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NotificationsPopupsModule\n});\n/** @nocollapse */\n\nNotificationsPopupsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ...modules$1]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NotificationsPopupsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ...modules$1],\n      declarations: [NotificationsPopupsComponent],\n      exports: [NotificationsPopupsComponent]\n    }]\n  }], null, null);\n})();\n\nclass NotificationsBadgeComponent {\n  constructor(communicationService) {\n    this.communicationService = communicationService;\n  }\n  /**\n   * Method that emits event to open Notification Preferences.\n   */\n\n\n  openNotificationSettings() {\n    if (this.communicationService) {\n      this.communicationService.openNotificationSettings();\n    } else {\n      this.showNoCommunicationServiceProvidedError();\n    }\n  }\n  /**\n   * Method that emits navigation data and triggers navigation.\n   */\n\n\n  navigate(navigationData) {\n    if (this.communicationService) {\n      this.communicationService.notificationNavigation(navigationData);\n    } else {\n      this.showNoCommunicationServiceProvidedError();\n    }\n  }\n\n  showNoCommunicationServiceProvidedError() {\n    console.warn(titles.noCommunicationServiceProvidedError);\n  }\n\n}\n/** @nocollapse */\n\n\nNotificationsBadgeComponent.ɵfac = function NotificationsBadgeComponent_Factory(t) {\n  return new (t || NotificationsBadgeComponent)(i0.ɵɵdirectiveInject(NotificationsCommunicationService, 8));\n};\n/** @nocollapse */\n\n\nNotificationsBadgeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NotificationsBadgeComponent,\n  selectors: [[\"bb-notifications-badge\"]],\n  inputs: {\n    preselectedNotification: \"preselectedNotification\",\n    notificationsMessageLineAmount: \"notificationsMessageLineAmount\",\n    displayRelativeTime: \"displayRelativeTime\",\n    displayShowMoreButtonInBadge: \"displayShowMoreButtonInBadge\",\n    allowedRoutes: \"allowedRoutes\",\n    displaySettingsButton: \"displaySettingsButton\",\n    pageSize: \"pageSize\",\n    origins: \"origins\",\n    severityLevels: \"severityLevels\",\n    unreadCountUpdateInterval: \"unreadCountUpdateInterval\",\n    dateFormat: \"dateFormat\"\n  },\n  decls: 1,\n  vars: 11,\n  consts: [[3, \"preselectedNotification\", \"notificationsMessageLineAmount\", \"displayRelativeTime\", \"displayShowMoreButtonInBadge\", \"allowedRoutes\", \"displaySettingsButton\", \"pageSize\", \"origins\", \"severityLevels\", \"dateFormat\", \"unreadCountUpdateInterval\", \"notificationsSettingsOpened\", \"notificationRouting\"]],\n  template: function NotificationsBadgeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"bb-notifications-badge-widget\", 0);\n      i0.ɵɵlistener(\"notificationsSettingsOpened\", function NotificationsBadgeComponent_Template_bb_notifications_badge_widget_notificationsSettingsOpened_0_listener() {\n        return ctx.openNotificationSettings();\n      })(\"notificationRouting\", function NotificationsBadgeComponent_Template_bb_notifications_badge_widget_notificationRouting_0_listener($event) {\n        return ctx.navigate($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"preselectedNotification\", ctx.preselectedNotification)(\"notificationsMessageLineAmount\", ctx.notificationsMessageLineAmount)(\"displayRelativeTime\", ctx.displayRelativeTime)(\"displayShowMoreButtonInBadge\", ctx.displayShowMoreButtonInBadge)(\"allowedRoutes\", ctx.allowedRoutes)(\"displaySettingsButton\", ctx.displaySettingsButton)(\"pageSize\", ctx.pageSize)(\"origins\", ctx.origins)(\"severityLevels\", ctx.severityLevels)(\"dateFormat\", ctx.dateFormat)(\"unreadCountUpdateInterval\", ctx.unreadCountUpdateInterval);\n    }\n  },\n  directives: [i2$1.NotificationsBadgeWidgetComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NotificationsBadgeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-notifications-badge',\n      templateUrl: './notifications-badge.component.html'\n    }]\n  }], function () {\n    return [{\n      type: NotificationsCommunicationService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    preselectedNotification: [{\n      type: Input\n    }],\n    notificationsMessageLineAmount: [{\n      type: Input\n    }],\n    displayRelativeTime: [{\n      type: Input\n    }],\n    displayShowMoreButtonInBadge: [{\n      type: Input\n    }],\n    allowedRoutes: [{\n      type: Input\n    }],\n    displaySettingsButton: [{\n      type: Input\n    }],\n    pageSize: [{\n      type: Input\n    }],\n    origins: [{\n      type: Input\n    }],\n    severityLevels: [{\n      type: Input\n    }],\n    unreadCountUpdateInterval: [{\n      type: Input\n    }],\n    dateFormat: [{\n      type: Input\n    }]\n  });\n})();\n\nconst modules = [NotificationsCommonModule, NotificationsBadgeWidgetModule];\n\nclass NotificationsBadgeModule {}\n/** @nocollapse */\n\n\nNotificationsBadgeModule.ɵfac = function NotificationsBadgeModule_Factory(t) {\n  return new (t || NotificationsBadgeModule)();\n};\n/** @nocollapse */\n\n\nNotificationsBadgeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NotificationsBadgeModule\n});\n/** @nocollapse */\n\nNotificationsBadgeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ...modules]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NotificationsBadgeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ...modules],\n      declarations: [NotificationsBadgeComponent],\n      exports: [NotificationsBadgeComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NotificationsBadgeComponent, NotificationsBadgeModule, NotificationsCommunicationService, NotificationsPopupsComponent, NotificationsPopupsModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/notifications-ang/fesm2015/backbase-notifications-ang.js"],"names":["i0","Component","Optional","Input","NgModule","CommonModule","NotificationsCommonModule","i2","NotificationsPopupsWidgetModule","i2$1","NotificationsBadgeWidgetModule","NotificationsCommunicationService","notificationNavigation","_payload","openNotificationSettings","titles","noCommunicationServiceProvidedError","$localize","NotificationsPopupsComponent","constructor","communicationService","navigate","navigationData","showNoCommunicationServiceProvidedError","console","warn","ɵfac","ɵcmp","NotificationsPopupsWidgetComponent","type","args","selector","templateUrl","decorators","origins","severityLevels","pollingInterval","allowedRoutes","autofocus","displayShowMoreButtonInPopup","popupMessageLineAmount","modules$1","NotificationsPopupsModule","ɵmod","ɵinj","imports","declarations","exports","NotificationsBadgeComponent","NotificationsBadgeWidgetComponent","preselectedNotification","notificationsMessageLineAmount","displayRelativeTime","displayShowMoreButtonInBadge","displaySettingsButton","pageSize","unreadCountUpdateInterval","dateFormat","modules","NotificationsBadgeModule"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, Optional, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotificationsCommonModule } from '@backbase/notifications-common-ang';\nimport * as i2 from '@backbase/notifications-popups-widget-ang';\nimport { NotificationsPopupsWidgetModule } from '@backbase/notifications-popups-widget-ang';\nimport '@angular/localize/init';\nimport * as i2$1 from '@backbase/notifications-badge-widget-ang';\nimport { NotificationsBadgeWidgetModule } from '@backbase/notifications-badge-widget-ang';\n\nclass NotificationsCommunicationService {\n    notificationNavigation(_payload) { }\n    openNotificationSettings() { }\n}\n\n/* eslint-disable max-len */\nconst titles = {\n    noCommunicationServiceProvidedError: $localize `:@@notifications-badge.communication-service-not-provided-error:CommunicationService is not provided`,\n};\n\nclass NotificationsPopupsComponent {\n    constructor(communicationService) {\n        this.communicationService = communicationService;\n    }\n    /**\n     * Method that emits navigation data and triggers navigation.\n     */\n    navigate(navigationData) {\n        if (this.communicationService) {\n            this.communicationService.notificationNavigation(navigationData);\n        }\n        else {\n            this.showNoCommunicationServiceProvidedError();\n        }\n    }\n    showNoCommunicationServiceProvidedError() {\n        console.warn(titles.noCommunicationServiceProvidedError);\n    }\n}\n/** @nocollapse */ NotificationsPopupsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationsPopupsComponent, deps: [{ token: NotificationsCommunicationService, optional: true }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ NotificationsPopupsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: NotificationsPopupsComponent, selector: \"bb-notifications-popups\", inputs: { origins: \"origins\", severityLevels: \"severityLevels\", pollingInterval: \"pollingInterval\", allowedRoutes: \"allowedRoutes\", autofocus: \"autofocus\", displayShowMoreButtonInPopup: \"displayShowMoreButtonInPopup\", popupMessageLineAmount: \"popupMessageLineAmount\" }, ngImport: i0, template: \"<bb-notifications-popups-widget\\n  [origins]=\\\"origins\\\"\\n  [severityLevels]=\\\"severityLevels\\\"\\n  [pollingInterval]=\\\"pollingInterval\\\"\\n  [allowedRoutes]=\\\"allowedRoutes\\\"\\n  [autofocus]=\\\"autofocus\\\"\\n  [displayShowMoreButtonInPopup]=\\\"displayShowMoreButtonInPopup\\\"\\n  [popupMessageLineAmount]=\\\"popupMessageLineAmount\\\"\\n  (notificationRouting)=\\\"navigate($event)\\\"\\n></bb-notifications-popups-widget>\\n\", components: [{ type: i2.NotificationsPopupsWidgetComponent, selector: \"bb-notifications-popups-widget\", inputs: [\"origins\", \"severityLevels\", \"pollingInterval\", \"allowedRoutes\", \"autofocus\", \"displayShowMoreButtonInPopup\", \"popupMessageLineAmount\"], outputs: [\"notificationRouting\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationsPopupsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-notifications-popups',\n                    templateUrl: './notifications-popups.component.html',\n                }]\n        }], ctorParameters: function () { return [{ type: NotificationsCommunicationService, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { origins: [{\n                type: Input\n            }], severityLevels: [{\n                type: Input\n            }], pollingInterval: [{\n                type: Input\n            }], allowedRoutes: [{\n                type: Input\n            }], autofocus: [{\n                type: Input\n            }], displayShowMoreButtonInPopup: [{\n                type: Input\n            }], popupMessageLineAmount: [{\n                type: Input\n            }] } });\n\nconst modules$1 = [NotificationsCommonModule, NotificationsPopupsWidgetModule];\nclass NotificationsPopupsModule {\n}\n/** @nocollapse */ NotificationsPopupsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationsPopupsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ NotificationsPopupsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationsPopupsModule, declarations: [NotificationsPopupsComponent], imports: [CommonModule, NotificationsCommonModule, NotificationsPopupsWidgetModule], exports: [NotificationsPopupsComponent] });\n/** @nocollapse */ NotificationsPopupsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationsPopupsModule, imports: [[CommonModule, ...modules$1]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationsPopupsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, ...modules$1],\n                    declarations: [NotificationsPopupsComponent],\n                    exports: [NotificationsPopupsComponent],\n                }]\n        }] });\n\nclass NotificationsBadgeComponent {\n    constructor(communicationService) {\n        this.communicationService = communicationService;\n    }\n    /**\n     * Method that emits event to open Notification Preferences.\n     */\n    openNotificationSettings() {\n        if (this.communicationService) {\n            this.communicationService.openNotificationSettings();\n        }\n        else {\n            this.showNoCommunicationServiceProvidedError();\n        }\n    }\n    /**\n     * Method that emits navigation data and triggers navigation.\n     */\n    navigate(navigationData) {\n        if (this.communicationService) {\n            this.communicationService.notificationNavigation(navigationData);\n        }\n        else {\n            this.showNoCommunicationServiceProvidedError();\n        }\n    }\n    showNoCommunicationServiceProvidedError() {\n        console.warn(titles.noCommunicationServiceProvidedError);\n    }\n}\n/** @nocollapse */ NotificationsBadgeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationsBadgeComponent, deps: [{ token: NotificationsCommunicationService, optional: true }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ NotificationsBadgeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: NotificationsBadgeComponent, selector: \"bb-notifications-badge\", inputs: { preselectedNotification: \"preselectedNotification\", notificationsMessageLineAmount: \"notificationsMessageLineAmount\", displayRelativeTime: \"displayRelativeTime\", displayShowMoreButtonInBadge: \"displayShowMoreButtonInBadge\", allowedRoutes: \"allowedRoutes\", displaySettingsButton: \"displaySettingsButton\", pageSize: \"pageSize\", origins: \"origins\", severityLevels: \"severityLevels\", unreadCountUpdateInterval: \"unreadCountUpdateInterval\", dateFormat: \"dateFormat\" }, ngImport: i0, template: \"<bb-notifications-badge-widget\\n  [preselectedNotification]=\\\"preselectedNotification\\\"\\n  [notificationsMessageLineAmount]=\\\"notificationsMessageLineAmount\\\"\\n  [displayRelativeTime]=\\\"displayRelativeTime\\\"\\n  [displayShowMoreButtonInBadge]=\\\"displayShowMoreButtonInBadge\\\"\\n  [allowedRoutes]=\\\"allowedRoutes\\\"\\n  [displaySettingsButton]=\\\"displaySettingsButton\\\"\\n  [pageSize]=\\\"pageSize\\\"\\n  [origins]=\\\"origins\\\"\\n  [severityLevels]=\\\"severityLevels\\\"\\n  [dateFormat]=\\\"dateFormat\\\"\\n  [unreadCountUpdateInterval]=\\\"unreadCountUpdateInterval\\\"\\n  (notificationsSettingsOpened)=\\\"openNotificationSettings()\\\"\\n  (notificationRouting)=\\\"navigate($event)\\\"\\n></bb-notifications-badge-widget>\\n\", components: [{ type: i2$1.NotificationsBadgeWidgetComponent, selector: \"bb-notifications-badge-widget\", inputs: [\"preselectedNotification\", \"notificationsMessageLineAmount\", \"displayRelativeTime\", \"displayShowMoreButtonInBadge\", \"allowedRoutes\", \"displaySettingsButton\", \"pageSize\", \"origins\", \"severityLevels\", \"unreadCountUpdateInterval\", \"dateFormat\"], outputs: [\"notificationsSettingsOpened\", \"notificationRouting\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationsBadgeComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-notifications-badge',\n                    templateUrl: './notifications-badge.component.html',\n                }]\n        }], ctorParameters: function () { return [{ type: NotificationsCommunicationService, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { preselectedNotification: [{\n                type: Input\n            }], notificationsMessageLineAmount: [{\n                type: Input\n            }], displayRelativeTime: [{\n                type: Input\n            }], displayShowMoreButtonInBadge: [{\n                type: Input\n            }], allowedRoutes: [{\n                type: Input\n            }], displaySettingsButton: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], origins: [{\n                type: Input\n            }], severityLevels: [{\n                type: Input\n            }], unreadCountUpdateInterval: [{\n                type: Input\n            }], dateFormat: [{\n                type: Input\n            }] } });\n\nconst modules = [NotificationsCommonModule, NotificationsBadgeWidgetModule];\nclass NotificationsBadgeModule {\n}\n/** @nocollapse */ NotificationsBadgeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationsBadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ NotificationsBadgeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationsBadgeModule, declarations: [NotificationsBadgeComponent], imports: [CommonModule, NotificationsCommonModule, NotificationsBadgeWidgetModule], exports: [NotificationsBadgeComponent] });\n/** @nocollapse */ NotificationsBadgeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationsBadgeModule, imports: [[CommonModule, ...modules]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotificationsBadgeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, ...modules],\n                    declarations: [NotificationsBadgeComponent],\n                    exports: [NotificationsBadgeComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NotificationsBadgeComponent, NotificationsBadgeModule, NotificationsCommunicationService, NotificationsPopupsComponent, NotificationsPopupsModule };\n"]},"metadata":{},"sourceType":"module"}