{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i1 from '@ng-select/ng-select';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { Subject } from 'rxjs';\nimport { filter, distinctUntilChanged, debounceTime, map } from 'rxjs/operators';\nimport { InputBaseComponent, BaseClassesModule } from '@backbase/ui-ang/base-classes'; // TODO: set a generic that extends to SelectListItemBase once Ivy check types step supports correctly types\n\nconst _c0 = [\"select\"];\n\nfunction SelectListComponent_label_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"for\", ctx_r0.id)(\"data-role\", \"select-list-ui-label\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.label);\n  }\n}\n\nfunction SelectListComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ng-select\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function SelectListComponent_ng_container_1_Template_ng_select_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onValueChange($event);\n    })(\"search\", function SelectListComponent_ng_container_1_Template_ng_select_search_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onSearch($event);\n    })(\"blur\", function SelectListComponent_ng_container_1_Template_ng_select_blur_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onBlur($event);\n    })(\"focus\", function SelectListComponent_ng_container_1_Template_ng_select_focus_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onFocus($event);\n    })(\"clear\", function SelectListComponent_ng_container_1_Template_ng_select_clear_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.clear.emit();\n    });\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"items\", i0.ɵɵpipeBind1(2, 14, ctx_r1.filteredItems$))(\"hideSelected\", true)(\"maxSelectedItems\", ctx_r1.maxSelectedItems)(\"multiple\", ctx_r1.multiple)(\"minTermLength\", ctx_r1.minTermLength)(\"typeahead\", ctx_r1.typeaheadInput$)(\"virtualScroll\", true)(\"placeholder\", ctx_r1.placeholder)(\"ngModel\", ctx_r1.value)(\"loading\", ctx_r1.loading)(\"labelForId\", ctx_r1.id);\n    i0.ɵɵattribute(\"data-role\", ctx_r1.id)(\"aria-label\", ctx_r1.ariaLabel)(\"aria-labelledby\", ctx_r1.ariaLabelledby);\n  }\n}\n\nfunction SelectListComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ng-select\", 4, 5);\n    i0.ɵɵlistener(\"ngModelChange\", function SelectListComponent_ng_template_2_Template_ng_select_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onValueChange($event);\n    })(\"search\", function SelectListComponent_ng_template_2_Template_ng_select_search_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.onSearch($event);\n    })(\"blur\", function SelectListComponent_ng_template_2_Template_ng_select_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.onBlur($event);\n    })(\"focus\", function SelectListComponent_ng_template_2_Template_ng_select_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.onFocus($event);\n    })(\"clear\", function SelectListComponent_ng_template_2_Template_ng_select_clear_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.clear.emit();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"items\", ctx_r3.items)(\"hideSelected\", true)(\"maxSelectedItems\", ctx_r3.maxSelectedItems)(\"multiple\", ctx_r3.multiple)(\"minTermLength\", ctx_r3.minTermLength)(\"virtualScroll\", true)(\"placeholder\", ctx_r3.placeholder)(\"ngModel\", ctx_r3.value)(\"loading\", ctx_r3.loading)(\"labelForId\", ctx_r3.id);\n    i0.ɵɵattribute(\"data-role\", ctx_r3.id)(\"aria-label\", ctx_r3.ariaLabel)(\"aria-labelledby\", ctx_r3.ariaLabelledby);\n  }\n}\n\nclass SelectListComponent extends InputBaseComponent {\n  constructor() {\n    super(...arguments);\n    /**\n     * Flag to determine if the data in the list is loading\n     */\n\n    this.loading = false;\n    /**\n     * Placeholder text to display in the input\n     * */\n\n    this.placeholder = '';\n    /**\n     * Minimum number of characters required before searching for items\n     * */\n\n    this.minTermLength = 2;\n    /**\n     * Maximum number of selected items, 'none' means unlimited\n     */\n\n    this.maxSelectedItems = 'none';\n    /**\n     * Flag to determine if the list allows multiple selection.\n     * */\n\n    this.multiple = false;\n    /**\n     * A list of items to select from based on the input text.\n     * */\n\n    this.items = [];\n    /**\n     * Flag to determine if typeahead should be used to filter the items list.\n     * If enabled the items list can not be updated asynchonously as the filtering\n     * and the underlying data will get out of sync.\n     */\n\n    this.filterEnabled = true;\n    /**\n     * Output to capture value change event.\n     */\n\n    this.valueChange = this._valueChange;\n    /**\n     * Emitter when search is performed. Outputs search term\n     */\n\n    this.search = new EventEmitter();\n    /**\n     * Emitter when clear is performed.\n     */\n\n    this.clear = new EventEmitter();\n    /**\n     * Delay in ms between autocomplete updates.\n     * */\n\n    this.DEBOUNCE_TIME_MS = 500;\n    /**\n     * Observable of the typeahead input\n     */\n\n    this.typeaheadInput$ = new Subject();\n    /**\n     * Observable of the filtered items\n     */\n\n    this.filteredItems$ = this.typeaheadInput$.pipe(filter(term => term !== null && term.length >= this.minTermLength), distinctUntilChanged(), debounceTime(this.DEBOUNCE_TIME_MS), map(term => this.items.filter(({\n      name\n    }) => name.toLowerCase().includes(term.toLowerCase()))));\n  }\n\n  writeValue(inputValue) {\n    if (inputValue !== null) {\n      super.writeValue(inputValue);\n    } else {\n      this.value = inputValue;\n      this.cd.markForCheck();\n    }\n  }\n\n  onSearch(event) {\n    const searchTerm = typeof event === 'string' ? event : event.term;\n\n    if (searchTerm.length >= this.minTermLength) {\n      this.search.emit(searchTerm);\n    }\n  }\n\n  ngOnChanges(changes) {\n    var _a, _b, _c, _d;\n\n    if (((_b = (_a = changes === null || changes === void 0 ? void 0 : changes.items) === null || _a === void 0 ? void 0 : _a.currentValue) === null || _b === void 0 ? void 0 : _b.length) > 0 && ((_c = this.ngSelect) === null || _c === void 0 ? void 0 : _c.isOpen) === false && ((_d = this.ngSelect) === null || _d === void 0 ? void 0 : _d.searchTerm)) {\n      this.ngSelect.isOpen = true;\n    }\n  }\n\n}\n\nSelectListComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵSelectListComponent_BaseFactory;\n  return function SelectListComponent_Factory(t) {\n    return (ɵSelectListComponent_BaseFactory || (ɵSelectListComponent_BaseFactory = i0.ɵɵgetInheritedFactory(SelectListComponent)))(t || SelectListComponent);\n  };\n}();\n\nSelectListComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SelectListComponent,\n  selectors: [[\"bb-select-list-ui\"]],\n  viewQuery: function SelectListComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ngSelect = _t.first);\n    }\n  },\n  inputs: {\n    loading: \"loading\",\n    placeholder: \"placeholder\",\n    minTermLength: \"minTermLength\",\n    maxSelectedItems: \"maxSelectedItems\",\n    multiple: \"multiple\",\n    items: \"items\",\n    filterEnabled: \"filterEnabled\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    search: \"search\",\n    clear: \"clear\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    multi: true,\n    useExisting: forwardRef(() => SelectListComponent)\n  }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 4,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"filterDisabled\", \"\"], [\"bindLabel\", \"name\", 1, \"bb-select-list\", 3, \"items\", \"hideSelected\", \"maxSelectedItems\", \"multiple\", \"minTermLength\", \"typeahead\", \"virtualScroll\", \"placeholder\", \"ngModel\", \"loading\", \"labelForId\", \"ngModelChange\", \"search\", \"blur\", \"focus\", \"clear\"], [\"bindLabel\", \"name\", 1, \"bb-select-list\", 3, \"items\", \"hideSelected\", \"maxSelectedItems\", \"multiple\", \"minTermLength\", \"virtualScroll\", \"placeholder\", \"ngModel\", \"loading\", \"labelForId\", \"ngModelChange\", \"search\", \"blur\", \"focus\", \"clear\"], [\"select\", \"\"]],\n  template: function SelectListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SelectListComponent_label_0_Template, 2, 3, \"label\", 0);\n      i0.ɵɵtemplate(1, SelectListComponent_ng_container_1_Template, 3, 16, \"ng-container\", 1);\n      i0.ɵɵtemplate(2, SelectListComponent_ng_template_2_Template, 2, 13, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(3);\n\n      i0.ɵɵproperty(\"ngIf\", ctx.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.filterEnabled)(\"ngIfElse\", _r2);\n    }\n  },\n  directives: [i2.NgIf, i1.NgSelectComponent, i3.NgControlStatus, i3.NgModel],\n  pipes: [i2.AsyncPipe],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectListComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-select-list-ui',\n      templateUrl: './select-list.component.html',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        multi: true,\n        useExisting: forwardRef(() => SelectListComponent)\n      }]\n    }]\n  }], null, {\n    ngSelect: [{\n      type: ViewChild,\n      args: ['select']\n    }],\n    loading: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    minTermLength: [{\n      type: Input\n    }],\n    maxSelectedItems: [{\n      type: Input\n    }],\n    multiple: [{\n      type: Input\n    }],\n    items: [{\n      type: Input\n    }],\n    filterEnabled: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    search: [{\n      type: Output\n    }],\n    clear: [{\n      type: Output\n    }]\n  });\n})();\n\nclass SelectListModule {}\n\nSelectListModule.ɵfac = function SelectListModule_Factory(t) {\n  return new (t || SelectListModule)();\n};\n\nSelectListModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SelectListModule\n});\nSelectListModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, NgSelectModule, FormsModule, ReactiveFormsModule, BaseClassesModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectListModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, NgSelectModule, FormsModule, ReactiveFormsModule, BaseClassesModule],\n      declarations: [SelectListComponent],\n      exports: [SelectListComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { SelectListComponent, SelectListModule };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-select-list.js"],"names":["i0","EventEmitter","forwardRef","Component","ViewChild","Input","Output","NgModule","i2","CommonModule","i3","NG_VALUE_ACCESSOR","FormsModule","ReactiveFormsModule","i1","NgSelectModule","Subject","filter","distinctUntilChanged","debounceTime","map","InputBaseComponent","BaseClassesModule","SelectListComponent","constructor","arguments","loading","placeholder","minTermLength","maxSelectedItems","multiple","items","filterEnabled","valueChange","_valueChange","search","clear","DEBOUNCE_TIME_MS","typeaheadInput$","filteredItems$","pipe","term","length","name","toLowerCase","includes","writeValue","inputValue","value","cd","markForCheck","onSearch","event","searchTerm","emit","ngOnChanges","changes","_a","_b","_c","_d","currentValue","ngSelect","isOpen","ɵfac","ɵcmp","provide","multi","useExisting","NgIf","NgSelectComponent","NgControlStatus","NgModel","AsyncPipe","type","args","selector","templateUrl","providers","SelectListModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i1 from '@ng-select/ng-select';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { Subject } from 'rxjs';\nimport { filter, distinctUntilChanged, debounceTime, map } from 'rxjs/operators';\nimport { InputBaseComponent, BaseClassesModule } from '@backbase/ui-ang/base-classes';\n\n// TODO: set a generic that extends to SelectListItemBase once Ivy check types step supports correctly types\nclass SelectListComponent extends InputBaseComponent {\n    constructor() {\n        super(...arguments);\n        /**\n         * Flag to determine if the data in the list is loading\n         */\n        this.loading = false;\n        /**\n         * Placeholder text to display in the input\n         * */\n        this.placeholder = '';\n        /**\n         * Minimum number of characters required before searching for items\n         * */\n        this.minTermLength = 2;\n        /**\n         * Maximum number of selected items, 'none' means unlimited\n         */\n        this.maxSelectedItems = 'none';\n        /**\n         * Flag to determine if the list allows multiple selection.\n         * */\n        this.multiple = false;\n        /**\n         * A list of items to select from based on the input text.\n         * */\n        this.items = [];\n        /**\n         * Flag to determine if typeahead should be used to filter the items list.\n         * If enabled the items list can not be updated asynchonously as the filtering\n         * and the underlying data will get out of sync.\n         */\n        this.filterEnabled = true;\n        /**\n         * Output to capture value change event.\n         */\n        this.valueChange = this._valueChange;\n        /**\n         * Emitter when search is performed. Outputs search term\n         */\n        this.search = new EventEmitter();\n        /**\n         * Emitter when clear is performed.\n         */\n        this.clear = new EventEmitter();\n        /**\n         * Delay in ms between autocomplete updates.\n         * */\n        this.DEBOUNCE_TIME_MS = 500;\n        /**\n         * Observable of the typeahead input\n         */\n        this.typeaheadInput$ = new Subject();\n        /**\n         * Observable of the filtered items\n         */\n        this.filteredItems$ = this.typeaheadInput$.pipe(filter((term) => term !== null && term.length >= this.minTermLength), distinctUntilChanged(), debounceTime(this.DEBOUNCE_TIME_MS), map((term) => this.items.filter(({ name }) => name.toLowerCase().includes(term.toLowerCase()))));\n    }\n    writeValue(inputValue) {\n        if (inputValue !== null) {\n            super.writeValue(inputValue);\n        }\n        else {\n            this.value = inputValue;\n            this.cd.markForCheck();\n        }\n    }\n    onSearch(event) {\n        const searchTerm = typeof event === 'string' ? event : event.term;\n        if (searchTerm.length >= this.minTermLength) {\n            this.search.emit(searchTerm);\n        }\n    }\n    ngOnChanges(changes) {\n        var _a, _b, _c, _d;\n        if (((_b = (_a = changes === null || changes === void 0 ? void 0 : changes.items) === null || _a === void 0 ? void 0 : _a.currentValue) === null || _b === void 0 ? void 0 : _b.length) > 0 && ((_c = this.ngSelect) === null || _c === void 0 ? void 0 : _c.isOpen) === false && ((_d = this.ngSelect) === null || _d === void 0 ? void 0 : _d.searchTerm)) {\n            this.ngSelect.isOpen = true;\n        }\n    }\n}\nSelectListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectListComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nSelectListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SelectListComponent, selector: \"bb-select-list-ui\", inputs: { loading: \"loading\", placeholder: \"placeholder\", minTermLength: \"minTermLength\", maxSelectedItems: \"maxSelectedItems\", multiple: \"multiple\", items: \"items\", filterEnabled: \"filterEnabled\" }, outputs: { valueChange: \"valueChange\", search: \"search\", clear: \"clear\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            multi: true,\n            useExisting: forwardRef(() => SelectListComponent),\n        },\n    ], viewQueries: [{ propertyName: \"ngSelect\", first: true, predicate: [\"select\"], descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<label *ngIf=\\\"label\\\" [attr.for]=\\\"id\\\" [attr.data-role]=\\\"'select-list-ui-label'\\\">{{ label }}</label>\\n<ng-container *ngIf=\\\"filterEnabled; else filterDisabled\\\">\\n  <ng-select\\n    class=\\\"bb-select-list\\\"\\n    bindLabel=\\\"name\\\"\\n    [items]=\\\"filteredItems$ | async\\\"\\n    [hideSelected]=\\\"true\\\"\\n    [maxSelectedItems]=\\\"maxSelectedItems\\\"\\n    [multiple]=\\\"multiple\\\"\\n    [minTermLength]=\\\"minTermLength\\\"\\n    [typeahead]=\\\"typeaheadInput$\\\"\\n    [virtualScroll]=\\\"true\\\"\\n    [placeholder]=\\\"placeholder\\\"\\n    [attr.data-role]=\\\"id\\\"\\n    [ngModel]=\\\"value\\\"\\n    [loading]=\\\"loading\\\"\\n    (ngModelChange)=\\\"onValueChange($event)\\\"\\n    (search)=\\\"onSearch($event)\\\"\\n    [labelForId]=\\\"id\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n    (blur)=\\\"onBlur($event)\\\"\\n    (focus)=\\\"onFocus($event)\\\"\\n    (clear)=\\\"clear.emit()\\\"\\n  >\\n  </ng-select>\\n</ng-container>\\n\\n<ng-template #filterDisabled>\\n  <ng-select\\n    #select\\n    class=\\\"bb-select-list\\\"\\n    bindLabel=\\\"name\\\"\\n    [items]=\\\"items\\\"\\n    [hideSelected]=\\\"true\\\"\\n    [maxSelectedItems]=\\\"maxSelectedItems\\\"\\n    [multiple]=\\\"multiple\\\"\\n    [minTermLength]=\\\"minTermLength\\\"\\n    [virtualScroll]=\\\"true\\\"\\n    [placeholder]=\\\"placeholder\\\"\\n    [attr.data-role]=\\\"id\\\"\\n    [ngModel]=\\\"value\\\"\\n    [loading]=\\\"loading\\\"\\n    (ngModelChange)=\\\"onValueChange($event)\\\"\\n    (search)=\\\"onSearch($event)\\\"\\n    [labelForId]=\\\"id\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n    (blur)=\\\"onBlur($event)\\\"\\n    (focus)=\\\"onFocus($event)\\\"\\n    (clear)=\\\"clear.emit()\\\"\\n  >\\n  </ng-select>\\n</ng-template>\\n\", components: [{ type: i1.NgSelectComponent, selector: \"ng-select\", inputs: [\"markFirst\", \"dropdownPosition\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"bufferAmount\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\", \"bindLabel\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"virtualScroll\", \"openOnEnter\", \"appendTo\", \"bindValue\", \"appearance\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"tabIndex\", \"typeahead\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], pipes: { \"async\": i2.AsyncPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectListComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-select-list-ui',\n                    templateUrl: './select-list.component.html',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            multi: true,\n                            useExisting: forwardRef(() => SelectListComponent),\n                        },\n                    ],\n                }]\n        }], propDecorators: { ngSelect: [{\n                type: ViewChild,\n                args: ['select']\n            }], loading: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], minTermLength: [{\n                type: Input\n            }], maxSelectedItems: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], items: [{\n                type: Input\n            }], filterEnabled: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], search: [{\n                type: Output\n            }], clear: [{\n                type: Output\n            }] } });\n\nclass SelectListModule {\n}\nSelectListModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSelectListModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectListModule, declarations: [SelectListComponent], imports: [CommonModule, NgSelectModule, FormsModule, ReactiveFormsModule, BaseClassesModule], exports: [SelectListComponent] });\nSelectListModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectListModule, imports: [[CommonModule, NgSelectModule, FormsModule, ReactiveFormsModule, BaseClassesModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectListModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, NgSelectModule, FormsModule, ReactiveFormsModule, BaseClassesModule],\n                    declarations: [SelectListComponent],\n                    exports: [SelectListComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SelectListComponent, SelectListModule };\n"]},"metadata":{},"sourceType":"module"}