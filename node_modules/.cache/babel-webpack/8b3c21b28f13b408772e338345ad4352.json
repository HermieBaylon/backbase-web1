{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Component, Input, EventEmitter, Inject, Output, Directive, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$3 from '@backbase/foundation-ang/core';\nimport { BbTemplate, BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport * as i12 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i4 from '@backbase/ui-ang/account-selector';\nimport { AccountSelectorModule } from '@backbase/ui-ang/account-selector';\nimport * as i5 from '@backbase/ui-ang/input-checkbox';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport { ProductItemBasicAccountComponent, ProductItemBasicAccountModule } from '@backbase/ui-ang/product-item-basic-account';\nimport * as i7 from '@backbase/ui-ang/empty-state';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport * as i8 from '@backbase/ui-ang/loading-indicator';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport * as i10 from '@backbase/ui-ang/ellipsis';\nimport { EllipsisModule } from '@backbase/ui-ang/ellipsis';\nimport * as i2 from '@backbase/ui-ang/amount';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport * as i1$1 from '@backbase/product-summary-ui';\nimport { ProductItemCustomModule, ProductKindModule, AccountStateModule, ProductNumberModule } from '@backbase/product-summary-ui';\nimport * as i3$1 from '@backbase/product-summary-common-ang';\nimport { cacheRequest, isProductVisible, ResponsiveContainerComponent, getRouteParameter, getAccountAlias, hasExternalInfo, processErrorMessages, modelItemToBoolean, ValidationModule, DatePipeModule, ProductsExternalInfoService } from '@backbase/product-summary-common-ang';\nimport { BehaviorSubject, combineLatest, of, Subject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, catchError, tap, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@backbase/data-ang/arrangements';\nimport { PUBSUB } from '@backbase/foundation-ang/web-sdk';\nimport * as i1$2 from '@angular/router';\n\nfunction ProductSummaryAccountSelectorItemComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelement(1, \"div\", 13);\n    i0.ɵɵelement(2, \"bb-product-summary-account-logo\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"logoSrc\", ctx_r0.showExternalInfo && ctx_r0.externalLogo)(\"productKindName\", ctx_r0.type);\n  }\n}\n\nfunction ProductSummaryAccountSelectorItemComponent_bb_product_item_custom_title_ui_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-product-item-custom-title-ui\", 15);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"showExternalTitle\", true)(\"externalTitle\", ctx_r1.showExternalInfo && ctx_r1.externalName);\n  }\n}\n\nfunction ProductSummaryAccountSelectorItemComponent_ng_container_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ProductSummaryAccountSelectorItemComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ProductSummaryAccountSelectorItemComponent_ng_container_7_ng_container_1_Template, 1, 0, \"ng-container\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.customProductItemBasicAccountTitle == null ? null : ctx_r2.customProductItemBasicAccountTitle.templateRef)(\"ngTemplateOutletContext\", ctx_r2.hostRef);\n  }\n}\n\nfunction ProductSummaryAccountSelectorItemComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 17);\n  }\n}\n\nfunction ProductSummaryAccountSelectorItemComponent_ng_container_10_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ProductSummaryAccountSelectorItemComponent_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ProductSummaryAccountSelectorItemComponent_ng_container_10_ng_container_1_Template, 1, 0, \"ng-container\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.customProductItemBasicAccountDetailsFormatter == null ? null : ctx_r4.customProductItemBasicAccountDetailsFormatter.templateRef)(\"ngTemplateOutletContext\", ctx_r4.hostRef);\n  }\n}\n\nfunction ProductSummaryAccountSelectorItemComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-product-item-custom-title-ui\", 18);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"title\", ctx_r6.title)(\"showLogo\", ctx_r6.isCollapsedView)(\"logoSrc\", ctx_r6.showExternalInfo && ctx_r6.externalLogo)(\"logoKind\", ctx_r6.type)(\"showExternalTitle\", ctx_r6.showExternalInfo && ctx_r6.isCollapsedView)(\"externalTitle\", ctx_r6.showExternalInfo && ctx_r6.externalName)(\"productNumber\", ctx_r6.productNumber)(\"productNumberType\", ctx_r6.productNumberType)(\"state\", ctx_r6.status);\n  }\n}\n\nfunction ProductSummaryAccountSelectorItemComponent_ng_template_13_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"bbDateUpdatedAgo\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, ctx_r12.externalSyncDate), \" \");\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"bb-text-align-right\": a0,\n    \"bb-text-align-left\": a1\n  };\n};\n\nfunction ProductSummaryAccountSelectorItemComponent_ng_template_13_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵelement(1, \"bb-amount-ui\", 21);\n    i0.ɵɵtemplate(2, ProductSummaryAccountSelectorItemComponent_ng_template_13_div_0_div_2_Template, 3, 3, \"div\", 22);\n    i0.ɵɵpipe(3, \"bbIsDefined\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(7, _c0, !ctx_r11.isCollapsedView, ctx_r11.isCollapsedView));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"amount\", ctx_r11.amount)(\"currency\", ctx_r11.currency)(\"mapCurrency\", ctx_r11.showCurrencySymbol);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.showExternalInfo && i0.ɵɵpipeBind1(3, 5, ctx_r11.externalSyncDate));\n  }\n}\n\nfunction ProductSummaryAccountSelectorItemComponent_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ProductSummaryAccountSelectorItemComponent_ng_template_13_div_0_Template, 4, 10, \"div\", 19);\n    i0.ɵɵpipe(1, \"bbIsDefined\");\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx_r8.amount));\n  }\n}\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"bb-stack__item--push-right\": a0,\n    \"bb-stack__item--push-left\": a1\n  };\n};\n\nfunction ProductSummaryAccountSelectorWidgetComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementContainer(1, 8);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const accounts_r8 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"bbHostRef\", ctx_r0.hostRef)(\"bbTemplateContext\", accounts_r8);\n  }\n}\n\nfunction ProductSummaryAccountSelectorWidgetComponent_ng_template_2_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 13);\n  }\n\n  if (rf & 2) {\n    const item_r14 = ctx.item;\n    const hostRef_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"bbHostRef\", hostRef_r9)(\"bbTemplateContext\", item_r14);\n  }\n}\n\nconst _c4 = function (a0, a1) {\n  return {\n    items: a0,\n    accounts: a1\n  };\n};\n\nfunction ProductSummaryAccountSelectorWidgetComponent_ng_template_2_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 14);\n  }\n\n  if (rf & 2) {\n    const items_r16 = ctx.items;\n    const ctx_r17 = i0.ɵɵnextContext();\n    const hostRef_r9 = ctx_r17.$implicit;\n    const accounts_r10 = ctx_r17.context;\n    i0.ɵɵproperty(\"bbHostRef\", hostRef_r9)(\"bbTemplateContext\", i0.ɵɵpureFunction2(2, _c4, items_r16, accounts_r10));\n  }\n}\n\nfunction ProductSummaryAccountSelectorWidgetComponent_ng_template_2_ng_template_6_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 16);\n    i0.ɵɵelementStart(2, \"div\", 17);\n    i0.ɵɵelementStart(3, \"bb-input-checkbox-ui\", 18);\n    i0.ɵɵlistener(\"click\", function ProductSummaryAccountSelectorWidgetComponent_ng_template_2_ng_template_6_ng_container_0_Template_bb_input_checkbox_ui_click_3_listener($event) {\n      return $event.preventDefault();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 19);\n    i0.ɵɵelementContainer(5, 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext();\n    const index_r20 = ctx_r24.index;\n    const item$_r19 = ctx_r24.item$;\n    const item_r18 = ctx_r24.item;\n    const hostRef_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"id\", index_r20)(\"ngModel\", item$_r19.selected);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"bbHostRef\", hostRef_r9)(\"bbTemplateContext\", item_r18);\n  }\n}\n\nfunction ProductSummaryAccountSelectorWidgetComponent_ng_template_2_ng_template_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementContainer(1, 13);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r18 = i0.ɵɵnextContext().item;\n    const hostRef_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"bbHostRef\", hostRef_r9)(\"bbTemplateContext\", item_r18);\n  }\n}\n\nfunction ProductSummaryAccountSelectorWidgetComponent_ng_template_2_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ProductSummaryAccountSelectorWidgetComponent_ng_template_2_ng_template_6_ng_container_0_Template, 6, 4, \"ng-container\", 15);\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵtemplate(2, ProductSummaryAccountSelectorWidgetComponent_ng_template_2_ng_template_6_ng_container_2_Template, 2, 2, \"ng-container\", 15);\n    i0.ɵɵpipe(3, \"async\");\n  }\n\n  if (rf & 2) {\n    const hostRef_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, hostRef_r9.multiple));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 4, hostRef_r9.multiple) === false);\n  }\n}\n\nfunction ProductSummaryAccountSelectorWidgetComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"bb-account-selector-ui\", 9);\n    i0.ɵɵlistener(\"change\", function ProductSummaryAccountSelectorWidgetComponent_ng_template_2_Template_bb_account_selector_ui_change_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r30);\n      const hostRef_r9 = restoredCtx.$implicit;\n      return hostRef_r9.onAccountSelected($event);\n    });\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵpipe(3, \"async\");\n    i0.ɵɵtemplate(4, ProductSummaryAccountSelectorWidgetComponent_ng_template_2_ng_template_4_Template, 1, 2, \"ng-template\", 10);\n    i0.ɵɵtemplate(5, ProductSummaryAccountSelectorWidgetComponent_ng_template_2_ng_template_5_Template, 1, 5, \"ng-template\", 11);\n    i0.ɵɵtemplate(6, ProductSummaryAccountSelectorWidgetComponent_ng_template_2_ng_template_6_Template, 4, 6, \"ng-template\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const hostRef_r9 = ctx.$implicit;\n    const accounts_r10 = ctx.context;\n    i0.ɵɵproperty(\"items\", accounts_r10)(\"dropdownPosition\", \"bottom\")(\"selectedItems\", hostRef_r9.accountSelected)(\"multiple\", i0.ɵɵpipeBind1(1, 8, hostRef_r9.multiple))(\"closeOnSelect\", i0.ɵɵpipeBind1(2, 10, hostRef_r9.multiple) === false)(\"filterItems\", i0.ɵɵpipeBind1(3, 12, hostRef_r9.filterItems))(\"compareItemsWith\", hostRef_r9.compareProductsById.bind(hostRef_r9))(\"searchFunc\", hostRef_r9.isInProductAlias.bind(hostRef_r9));\n  }\n}\n\nfunction ProductSummaryAccountSelectorWidgetComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-product-summary-account-selector-item\", 20);\n    i0.ɵɵpipe(1, \"bbProductNumberValue\");\n    i0.ɵɵpipe(2, \"bbProductNumberType\");\n  }\n\n  if (rf & 2) {\n    const hostRef_r31 = ctx.$implicit;\n    const item_r32 = ctx.context;\n    i0.ɵɵproperty(\"type\", item_r32 == null ? null : item_r32.productKindName)(\"title\", hostRef_r31.getAlias(item_r32))(\"amount\", hostRef_r31.getProductBalance(item_r32))(\"currency\", item_r32 == null ? null : item_r32.currency)(\"status\", item_r32 == null ? null : item_r32.state == null ? null : item_r32.state.state)(\"productNumber\", i0.ɵɵpipeBind1(1, 12, item_r32))(\"productNumberType\", i0.ɵɵpipeBind1(2, 14, item_r32))(\"showExternalInfo\", hostRef_r31.hasExternalInfo(item_r32))(\"externalLogo\", item_r32 == null ? null : item_r32.financialInstitution == null ? null : item_r32.financialInstitution.logo)(\"externalName\", item_r32 == null ? null : item_r32.financialInstitution == null ? null : item_r32.financialInstitution.name)(\"externalSyncDate\", hostRef_r31.getExternalInfoSyncDate(item_r32))(\"isCollapsedView\", hostRef_r31.responsiveView === \"mobile\");\n  }\n}\n\nfunction ProductSummaryAccountSelectorWidgetComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 21);\n    i0.ɵɵelement(1, \"div\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"bbHostRef\", ctx_r4.hostRef);\n  }\n}\n\nfunction ProductSummaryAccountSelectorWidgetComponent_ng_template_6_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"bb-empty-state-ui\", 23);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const error_r37 = ctx.ngIf;\n    const hostRef_r33 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"subtitle\", hostRef_r33.processErrorMessages(error_r37.messages));\n  }\n}\n\nfunction ProductSummaryAccountSelectorWidgetComponent_ng_template_6_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"bb-loading-indicator-ui\", 24);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"text\", \"Loading Accounts...\");\n  }\n}\n\nfunction ProductSummaryAccountSelectorWidgetComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ProductSummaryAccountSelectorWidgetComponent_ng_template_6_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵtemplate(2, ProductSummaryAccountSelectorWidgetComponent_ng_template_6_ng_template_2_Template, 1, 1, \"ng-template\", null, 22, i0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    const hostRef_r33 = ctx.$implicit;\n\n    const _r35 = i0.ɵɵreference(3);\n\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, hostRef_r33.error))(\"ngIfElse\", _r35);\n  }\n}\n\nfunction ProductSummaryAccountSelectorWidgetComponent_ng_template_8_bb_account_state_ui_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"bb-account-state-ui\", 26);\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵi18n(4, 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const hostRef_r39 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"isDisplayingAlert\", i0.ɵɵpipeBind1(1, 3, hostRef_r39.showAccountState$) && i0.ɵɵpipeBind1(2, 5, hostRef_r39.multiple) === false)(\"item\", hostRef_r39.selectedAccountState);\n    i0.ɵɵadvance(4);\n    i0.ɵɵi18nExp(hostRef_r39.selectedAccountState == null ? null : hostRef_r39.selectedAccountState.severity);\n    i0.ɵɵi18nApply(4);\n  }\n}\n\nfunction ProductSummaryAccountSelectorWidgetComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ProductSummaryAccountSelectorWidgetComponent_ng_template_8_bb_account_state_ui_0_Template, 5, 7, \"bb-account-state-ui\", 25);\n  }\n\n  if (rf & 2) {\n    const hostRef_r39 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", hostRef_r39.selectedAccountState);\n  }\n}\n\nfunction ProductSummaryAccountSelectorWidgetComponent_ng_template_9_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\", 33);\n    i0.ɵɵi18n(3, 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const items_r43 = i0.ɵɵnextContext().context.items;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", items_r43.length, \" \");\n  }\n}\n\nfunction ProductSummaryAccountSelectorWidgetComponent_ng_template_9_ng_template_6_ng_container_1_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 37);\n    i0.ɵɵtext(1, \", \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ProductSummaryAccountSelectorWidgetComponent_ng_template_9_ng_template_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 33);\n    i0.ɵɵtext(2);\n    i0.ɵɵtemplate(3, ProductSummaryAccountSelectorWidgetComponent_ng_template_9_ng_template_6_ng_container_1_span_3_Template, 2, 0, \"span\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r50 = ctx.$implicit;\n    const i_r51 = ctx.index;\n    const ctx_r53 = i0.ɵɵnextContext(2);\n    const hostRef_r42 = ctx_r53.$implicit;\n    const items_r43 = ctx_r53.context.items;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(hostRef_r42.getAlias(item_r50));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r51 !== items_r43.length - 1);\n  }\n}\n\nfunction ProductSummaryAccountSelectorWidgetComponent_ng_template_9_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"bb-ellipsis-ui\");\n    i0.ɵɵtemplate(1, ProductSummaryAccountSelectorWidgetComponent_ng_template_9_ng_template_6_ng_container_1_Template, 4, 2, \"ng-container\", 35);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const items_r43 = i0.ɵɵnextContext().context.items;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", items_r43);\n  }\n}\n\nfunction ProductSummaryAccountSelectorWidgetComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵelementStart(1, \"div\", 29);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵi18n(3, 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 31);\n    i0.ɵɵtemplate(5, ProductSummaryAccountSelectorWidgetComponent_ng_template_9_ng_container_5_Template, 4, 1, \"ng-container\", 0);\n    i0.ɵɵtemplate(6, ProductSummaryAccountSelectorWidgetComponent_ng_template_9_ng_template_6_Template, 2, 1, \"ng-template\", null, 32, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const items_r43 = ctx.context.items;\n    const accounts_r44 = ctx.context.accounts;\n\n    const _r46 = i0.ɵɵreference(7);\n\n    i0.ɵɵadvance(3);\n    i0.ɵɵi18nExp(items_r43.length)(accounts_r44.length === items_r43.length ? \"All\" : items_r43.length);\n    i0.ɵɵi18nApply(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", accounts_r44.length === items_r43.length)(\"ngIfElse\", _r46);\n  }\n}\n\nclass ProductKindsBadRequest {\n  constructor(response) {\n    this.response = response;\n    this.kind = 'ProductKindsBadRequest';\n    this.messages = ((response.error || {}).errors || []).map(e => e.message);\n  }\n\n}\n\nclass ProductKindsUnknownError {\n  constructor(response) {\n    this.response = response;\n    this.kind = 'ProductKindsUnknownError';\n    this.messages = [response.message];\n  }\n\n}\n\nclass ProductKindsAccessDenied {\n  constructor(response) {\n    this.response = response;\n    this.kind = 'ProductKindsAccessDenied';\n    this.messages = ((response.error || {}).errors || []).map(e => e.message);\n  }\n\n}\n\nconst parseError = error => {\n  if (error.error instanceof ErrorEvent) {\n    return new ProductKindsUnknownError(error);\n  } else {\n    switch (error.status) {\n      case 400:\n        return new ProductKindsBadRequest(error);\n\n      case 403:\n        return new ProductKindsAccessDenied(error);\n\n      case 401:\n        return new ProductKindsAccessDenied(error);\n\n      default:\n        return new ProductKindsUnknownError(error);\n    }\n  }\n};\n\nconst defaultListParams = {};\n/**\n * Service for fetching and storing accounts and properties from model.xml\n *\n * This service relies on providers from `ProductSummaryAccountSelectorWidgetModule`.\n *\n * @see ProductSummaryAccountSelectorWidgetModule\n *\n * @usageNotes\n *\n * ### Ensure the ProductSummaryAccountSelectorWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ProductSummaryAccountSelectorWidgetModule,\n *   ],\n * })\n * export class MyWidgetModule {}\n * ```\n *\n * ### Inject this service into your component\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ProductSummaryService],\n * })\n *  export class MyComponent {\n * ```\n */\n\nclass ProductSummaryService {\n  /**\n   * Constructor\n   *\n   * @param productSummaryDataService\n   */\n  constructor(productSummaryDataService) {\n    this.productSummaryDataService = productSummaryDataService;\n    /**\n     * Used to store the error occured during loading of accounts\n     */\n\n    this.error = new BehaviorSubject(undefined);\n    this.listParams = new BehaviorSubject(defaultListParams);\n    this.listRefresh = new BehaviorSubject(false);\n    /**\n     * List of accounts fetched from the server\n     */\n\n    this.accountsList = combineLatest([this.listParams.pipe(distinctUntilChanged()), this.listRefresh]).pipe(cacheRequest(([params]) => this.getProductSummary(params)));\n  }\n  /**\n   * Refreshes the list of accounts\n   */\n\n\n  refreshAccountsList() {\n    this.listRefresh.next(true);\n  }\n  /**\n   * @internal\n   */\n\n\n  ngOnDestroy() {\n    this.error.complete();\n  }\n\n  getProductSummary(params) {\n    return this.productSummaryDataService.getProductSummary(params).pipe(map(res => this.responseToProductList(res)), catchError(error => {\n      this.error.next(parseError(error));\n      return of(undefined);\n    }));\n  }\n\n  extractProducts(memo, {\n    products\n  }) {\n    return memo.concat(products);\n  }\n\n  toProductKindList(res) {\n    return Object.entries(res).filter(([key]) => key !== 'aggregatedBalance').map(([kind, value]) => {\n      if (Array.isArray(value)) {\n        value.products = value.reduce(this.extractProducts, []);\n      }\n\n      let products = [];\n\n      if (value.products && Array.isArray(value.products)) {\n        products = value.products.filter(isProductVisible).map(product => Object.assign(Object.assign({}, product), {\n          kind\n        }));\n      }\n\n      return {\n        products\n      };\n    });\n  }\n\n  responseToProductList(res) {\n    return this.toProductKindList(res).reduce(this.extractProducts, []);\n  }\n\n}\n\nProductSummaryService.ɵfac = function ProductSummaryService_Factory(t) {\n  return new (t || ProductSummaryService)(i0.ɵɵinject(i1.ProductSummaryHttpService));\n};\n\nProductSummaryService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ProductSummaryService,\n  factory: ProductSummaryService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductSummaryService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.ProductSummaryHttpService\n    }];\n  }, null);\n})(); // These tokens can be used to change configuration at app level\n\n\nconst BB_PRDSUM_ACCOUNT_SELECTOR_CONFIG_TOKEN = new InjectionToken('BB_PRDSUM_ACCOUNT_SELECTOR_CONFIG_TOKEN');\nconst productSummaryAccountSelectorDefaults = {\n  notToDisplayStateList: ['Active', 'Open'],\n  states: [{\n    stateName: 'Active',\n    severity: 'info'\n  }, {\n    stateName: 'Inactive',\n    severity: 'warning'\n  }, {\n    stateName: 'Closed',\n    severity: 'error'\n  }, {\n    stateName: 'Open',\n    severity: 'info'\n  }]\n};\nconst productSummaryAccountSelectorConfigProviders = [{\n  provide: BB_PRDSUM_ACCOUNT_SELECTOR_CONFIG_TOKEN,\n  useValue: productSummaryAccountSelectorDefaults\n}];\nconst WidgetProperty = {\n  MULTIPLE: 'multiple',\n  FILTER_ITEMS: 'filterItems',\n  SHOW_ACCOUNT_STATE: 'showAccountState',\n  EVENT_REFRESH_ACCOUNT_LIST: 'event.refreshAccountsList',\n  OUTPUT_SELECTED_ACCOUNT: 'output.selectedAccount'\n};\n/**\n * Displays account overview in account selector\n *\n * @usageNotes\n *\n * ### Display details\n *\n * ```html\n * <bb-product-summary-account-selector-item\n *   [title]=\"'My Account'\"\n *   [amount]=\"12345\"\n *   [currency]=\"'EUR'\"\n *   [productNumber]=\"'12345678'\"\n *   [productNumberType]=\"'iban'\"\n * ></bb-product-summary-account-selector-item>\n * ```\n *\n * @ngModule ProductSummaryAccountSelectorWidgetModule\n */\n\nclass ProductSummaryAccountSelectorItemComponent extends ProductItemBasicAccountComponent {\n  constructor() {\n    super(...arguments);\n    /**\n     * Whether to show in mobile or desktop view\n     *\n     * @default false\n     */\n\n    this.isCollapsedView = false;\n    /**\n     * Whether to show external product information\n     *\n     * @default false\n     */\n\n    this.showExternalInfo = false;\n  }\n\n}\n\nProductSummaryAccountSelectorItemComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵProductSummaryAccountSelectorItemComponent_BaseFactory;\n  return function ProductSummaryAccountSelectorItemComponent_Factory(t) {\n    return (ɵProductSummaryAccountSelectorItemComponent_BaseFactory || (ɵProductSummaryAccountSelectorItemComponent_BaseFactory = i0.ɵɵgetInheritedFactory(ProductSummaryAccountSelectorItemComponent)))(t || ProductSummaryAccountSelectorItemComponent);\n  };\n}();\n\nProductSummaryAccountSelectorItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ProductSummaryAccountSelectorItemComponent,\n  selectors: [[\"bb-product-summary-account-selector-item\"]],\n  inputs: {\n    isCollapsedView: \"isCollapsedView\",\n    productNumberType: \"productNumberType\",\n    showExternalInfo: \"showExternalInfo\",\n    externalLogo: \"externalLogo\",\n    externalName: \"externalName\",\n    externalSyncDate: \"externalSyncDate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 15,\n  vars: 13,\n  consts: [[1, \"bb-product-item\", \"bb-product-item-basic-account-ui\", \"product-item\"], [1, \"bb-stack\", \"product-item-content\"], [\"class\", \"bb-stack__item bb-stack__item--align-top\", 4, \"ngIf\"], [1, \"bb-stack__item\", \"bb-stack__item--fill\", \"bb-account-info\"], [3, \"showExternalTitle\", \"externalTitle\", 4, \"ngIf\"], [1, \"bb-stack\", \"bb-stack--wrap\"], [1, \"bb-stack__item\", \"bb-product-item__title\"], [4, \"ngIf\", \"ngIfElse\"], [\"class\", \"bb-stack__break bb-stack__break--up\", 4, \"ngIf\"], [1, \"bb-stack__item\", \"bb-stack__item--push-right\", \"bb-stack__item--spacing-none\", \"bb-product-item__details\", 3, \"ngClass\"], [\"defaultProductItemBasicAccountTitle\", \"\"], [\"defaultProductItemBasicAccountDetailsFormatter\", \"\"], [1, \"bb-stack__item\", \"bb-stack__item--align-top\"], [1, \"bb-block\", \"bb-block--xs\"], [\"iconColor\", \"secondary\", 3, \"logoSrc\", \"productKindName\"], [3, \"showExternalTitle\", \"externalTitle\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"bb-stack__break\", \"bb-stack__break--up\"], [3, \"title\", \"showLogo\", \"logoSrc\", \"logoKind\", \"showExternalTitle\", \"externalTitle\", \"productNumber\", \"productNumberType\", \"state\"], [3, \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\"], [1, \"bb-highlight\", \"bb-product-item__amount\", 3, \"amount\", \"currency\", \"mapCurrency\"], [\"class\", \"bb-text-support bb-subtitle\", 4, \"ngIf\"], [1, \"bb-text-support\", \"bb-subtitle\"]],\n  template: function ProductSummaryAccountSelectorItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵtemplate(2, ProductSummaryAccountSelectorItemComponent_div_2_Template, 3, 2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtemplate(4, ProductSummaryAccountSelectorItemComponent_bb_product_item_custom_title_ui_4_Template, 1, 2, \"bb-product-item-custom-title-ui\", 4);\n      i0.ɵɵelementStart(5, \"div\", 5);\n      i0.ɵɵelementStart(6, \"div\", 6);\n      i0.ɵɵtemplate(7, ProductSummaryAccountSelectorItemComponent_ng_container_7_Template, 2, 2, \"ng-container\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, ProductSummaryAccountSelectorItemComponent_div_8_Template, 1, 0, \"div\", 8);\n      i0.ɵɵelementStart(9, \"div\", 9);\n      i0.ɵɵtemplate(10, ProductSummaryAccountSelectorItemComponent_ng_container_10_Template, 2, 2, \"ng-container\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, ProductSummaryAccountSelectorItemComponent_ng_template_11_Template, 1, 9, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(13, ProductSummaryAccountSelectorItemComponent_ng_template_13_Template, 2, 3, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r5 = i0.ɵɵreference(12);\n\n      const _r7 = i0.ɵɵreference(14);\n\n      i0.ɵɵclassProp(\"active\", ctx.active);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isCollapsedView);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showExternalInfo && !ctx.isCollapsedView);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.customProductItemBasicAccountTitle)(\"ngIfElse\", _r5);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isCollapsedView);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(10, _c1, !ctx.isCollapsedView, ctx.isCollapsedView));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.customProductItemBasicAccountDetailsFormatter)(\"ngIfElse\", _r7);\n    }\n  },\n  directives: [i3.NgIf, i3.NgClass, i1$1.ProductSummaryAccountLogoComponent, i1$1.ProductItemCustomTitleComponent, i3.NgTemplateOutlet, i2.AmountComponent],\n  pipes: [i3$1.IsDefinedPipe, i3$1.DateUpdatedAgoPipe],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductSummaryAccountSelectorItemComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-product-summary-account-selector-item',\n      templateUrl: './product-summary-account-selector-item.component.html'\n    }]\n  }], null, {\n    isCollapsedView: [{\n      type: Input\n    }],\n    productNumberType: [{\n      type: Input\n    }],\n    showExternalInfo: [{\n      type: Input\n    }],\n    externalLogo: [{\n      type: Input\n    }],\n    externalName: [{\n      type: Input\n    }],\n    externalSyncDate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A widget for selecting a user's Account (Retail).\n *\n * @usageNotes\n *\n * ### Include this widget in your `AppModule`:\n *\n * ```typescript\n * @NgModule({\n *   imports: [\n *     ProductSummaryAccountSelectorWidgetModule,\n *   ],\n *   ...\n * })\n * export class AppModule {}\n * ```\n *\n * ### Include this widget (standalone model)\n *\n * ```typescript\n * export const environment: Environment = {\n *   ...\n *   bootstrap: {\n *     pageModel: {\n *       name: 'root',\n *       properties: {},\n *       children: [\n *         {\n *           name: 'account-list',\n *           properties: {\n *             classId: 'ProductSummaryAccountSelectorWidgetComponent',\n *           },\n *         },\n *       ],\n *     },\n *   },\n * };\n * ```\n *\n * ### Communicate the selected account ID when it changes (standalone model)\n *\n * Using the `RouteParam` communication transport:\n *\n * ```typescript\n * export const environment: Environment = {\n *   ...\n *   bootstrap: {\n *     pageModel: {\n *       name: 'root',\n *       properties: {},\n *       children: [\n *         {\n *           name: 'account-list',\n *           properties: {\n *             classId: 'ProductSummaryAccountSelectorWidgetComponent',\n *             'output.selectedAccount': 'navigation:account-selector-product-details-container',\n *           },\n *         },\n *         {\n *           name: 'my-widget',\n *           properties: {\n *             classId: 'MyWidgetComponent',\n *             'input.selectedAccountId': RouteParam.toProperty('selectedAccount'),\n *           },\n *         },\n *       ],\n *     },\n *   },\n * };\n * ```\n *\n * @ngModule ProductSummaryAccountSelectorWidgetModule\n */\n\n\nclass ProductSummaryAccountSelectorWidgetComponent extends ResponsiveContainerComponent {\n  /**\n   * Constructor\n   *\n   * @param route\n   * @param service\n   * @param productsExternalInfoService\n   * @param element\n   * @param changeDetector\n   * @param eventBusService\n   * @param settings\n   */\n  constructor(route, service, productsExternalInfoService, element, changeDetector, eventBusService, settings) {\n    super(element, changeDetector);\n    this.route = route;\n    this.service = service;\n    this.productsExternalInfoService = productsExternalInfoService;\n    this.element = element;\n    this.changeDetector = changeDetector;\n    this.eventBusService = eventBusService;\n    this.settings = settings;\n    this.hostRef = this;\n    /**\n     * Subject for the garbage collector\n     */\n\n    this.gc$ = new Subject();\n    /**\n     * The ID or IDs (a comma separated list) of the selected account\n     * taken from the selectedAccount route param\n     */\n\n    this.productId = getRouteParameter(this.route, 'selectedAccount');\n    /**\n     * Used to display the error occured during loading of accounts\n     */\n\n    this.error = this.service.error;\n    /**\n     * A method to return the alias of the given account\n     */\n\n    this.getAlias = getAccountAlias;\n    /**\n     * Returns true if product has external info\n     */\n\n    this.hasExternalInfo = hasExternalInfo;\n    this.registeredRefreshAccountsListEvents = [];\n    this.refreshAccountsListHandler = this.refreshAccountsList.bind(this);\n    /**\n     * The list of accounts to display in the dropdown.\n     */\n\n    this.accounts = new Observable(subscriber => {\n      const subscriptions = [];\n      subscriptions.push(this.service.accountsList.subscribe(products => {\n        subscriber.next(products);\n\n        if (products === null || products === void 0 ? void 0 : products.some(hasExternalInfo)) {\n          subscriptions.push(this.productsExternalInfoService.getProductsWithExternalInfo(products).subscribe(productsWithExternalData => subscriber.next(productsWithExternalData), subscriber.error));\n        }\n      }, subscriber.error));\n      return () => subscriptions.forEach(subscription => subscription.unsubscribe());\n    }).pipe(tap(accounts => this.accountsList.next(accounts)));\n    this.accountsList = new Subject();\n    /**\n     * Select multiple accounts\n     * Set to `true` to allow the bank customer to select more than one arrangement at a time.\n     */\n\n    this.multiple = new BehaviorSubject(false);\n    /**\n     * Enables bank customers to filter the arrangements that are presented in the dropdown.\n     * Set to `true` to show Filter. Set to `false` to show Search.\n     */\n\n    this.filterItems = new BehaviorSubject(true);\n    /**\n     * Defines whether the account status is displayed for the selected account\n     */\n\n    this.showAccountState$ = new BehaviorSubject(true);\n    /**\n     * Emits the ID of the account selected by the bank customer as a string.\n     */\n\n    this.selectedAccount = new EventEmitter();\n    /**\n     * An event emitter to extend payload with product kind\n     */\n\n    this.selectedKind = new EventEmitter();\n    /**\n     * The method processed error messages to display in the template.\n     */\n\n    this.processErrorMessages = processErrorMessages;\n  }\n  /**\n   * Comma separated list of event names to subscribe to perform accounts refresh\n   */\n\n\n  set refreshAccountListEvent(value) {\n    this.clearRefreshAccountsListEvents();\n\n    if (value) {\n      this.registeredRefreshAccountsListEvents = value.replace(/ /g, '').split(',');\n      this.registeredRefreshAccountsListEvents.forEach(eventName => {\n        this.eventBusService.subscribe(eventName, this.refreshAccountsListHandler);\n      });\n    }\n  }\n\n  set multipleValue(value) {\n    this.multiple.next(modelItemToBoolean(value));\n  }\n\n  set filterItemsValue(value) {\n    this.filterItems.next(modelItemToBoolean(value));\n  }\n\n  set showAccountStateValue(value) {\n    this.showAccountState$.next(modelItemToBoolean(value));\n  }\n\n  refreshAccountsList() {\n    this.service.refreshAccountsList();\n  }\n\n  clearRefreshAccountsListEvents() {\n    this.registeredRefreshAccountsListEvents.forEach(eventName => {\n      this.eventBusService.unsubscribe(eventName, this.refreshAccountsListHandler);\n    });\n    this.registeredRefreshAccountsListEvents = [];\n  }\n\n  combineLatestSub() {\n    return combineLatest(this.accountsList, this.productId, this.multiple).pipe(takeUntil(this.gc$)).subscribe(([accounts, productId, multiple]) => {\n      if (accounts) {\n        this.selectedAccountState = undefined;\n\n        if (multiple) {\n          const productIdArray = productId.split(',');\n          this.accountSelected = accounts ? accounts.filter(account => account.id === undefined || productIdArray.includes(account.id)) : [];\n          this.selectedAccountState = this.mapAccountState(this.accountSelected[0]);\n        } else {\n          this.accountSelected = accounts ? accounts.find(product => product.id === productId) : undefined;\n          this.selectedAccountState = this.mapAccountState(this.accountSelected);\n        }\n      }\n\n      this.changeDetector.markForCheck();\n    });\n  }\n  /**\n   * @internal\n   */\n\n\n  ngOnInit() {\n    this.combineLatestSub();\n  }\n  /**\n   * Cleanups just before Angular destroys the component.\n   *\n   * @internal\n   */\n\n\n  ngOnDestroy() {\n    this.clearRefreshAccountsListEvents();\n    this.gc$.next();\n    this.gc$.complete();\n  }\n  /**\n   * Maps product state to AccountState\n   *\n   * @param item\n   */\n\n\n  mapAccountState(item) {\n    if (item && item.state && item.state.state) {\n      const productState = item.state.state;\n      return this.settings.states.find(value => productState.toLocaleLowerCase() === value.stateName.toLocaleLowerCase() && !this.settings.notToDisplayStateList.includes(productState));\n    }\n\n    return undefined;\n  }\n  /**\n   * Event handler for the `change` event of `bb-account-selector-ui`\n   * emits a string of comma-separated account ids to `selectedAccount` and `selectedKind`\n   *\n   * @param item\n   */\n\n\n  onAccountSelected(item) {\n    if (!this.isProduct(item)) {\n      // this checking here is because of a bug in `ng-select`.\n      // `ng-select` in multi-select mode if its 'filter' was changed\n      // sends \"onClose\" an Event object instead of the real elements\n      return;\n    }\n\n    this.selectedAccountState = undefined;\n    this.accountSelected = item;\n\n    if (Array.isArray(item)) {\n      this.selectedAccountState = this.mapAccountState(item[0]);\n      this.selectedAccount.emit(item.map(account => account.id).join(','));\n      this.selectedKind.emit(item.map(account => account.kind).join(','));\n    } else {\n      this.selectedAccountState = this.mapAccountState(item);\n      this.selectedAccount.emit(item.id);\n      this.selectedKind.emit(item.kind);\n    }\n  }\n  /**\n   * Comparing given Products by `id` property.\n   */\n\n\n  compareProductsById(product1, product2) {\n    return this.isProduct(product1) && this.isProduct(product2) && product1.id === product2.id;\n  }\n  /**\n   * Returns `true` if product alias includes `value`, otherwise `false`\n   */\n\n\n  isInProductAlias(value, product) {\n    const searchTerm = value.toLowerCase();\n    const productAlias = (this.getAlias(product) || '').toLowerCase();\n    return productAlias.includes(searchTerm);\n  }\n  /**\n   * Returns balance for the given product\n   */\n\n\n  getProductBalance(product) {\n    var _a, _b;\n\n    return (_b = (_a = product.bookedBalance) !== null && _a !== void 0 ? _a : product.principalAmount) !== null && _b !== void 0 ? _b : product.currentInvestmentValue;\n  }\n  /**\n   * Returns sync date of external info for the given product\n   */\n\n\n  getExternalInfoSyncDate(product) {\n    return hasExternalInfo(product) ? product === null || product === void 0 ? void 0 : product.lastSyncDate : undefined;\n  }\n\n  isProduct(item) {\n    if (Array.isArray(item) && item.length === 0) {\n      return true; // handles the case with an empty array input (when all the items are unselected in multiple mode)\n    }\n\n    const product = Array.isArray(item) ? item[0] : item;\n    return typeof product === 'object' && 'id' in product;\n  }\n\n}\n\nProductSummaryAccountSelectorWidgetComponent.ɵfac = function ProductSummaryAccountSelectorWidgetComponent_Factory(t) {\n  return new (t || ProductSummaryAccountSelectorWidgetComponent)(i0.ɵɵdirectiveInject(i1$2.ActivatedRoute), i0.ɵɵdirectiveInject(ProductSummaryService), i0.ɵɵdirectiveInject(i3$1.ProductsExternalInfoService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PUBSUB), i0.ɵɵdirectiveInject(BB_PRDSUM_ACCOUNT_SELECTOR_CONFIG_TOKEN));\n};\n\nProductSummaryAccountSelectorWidgetComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ProductSummaryAccountSelectorWidgetComponent,\n  selectors: [[\"bb-product-summary-account-selector-widget\"]],\n  inputs: {\n    refreshAccountListEvent: [\"event.refreshAccountsList\", \"refreshAccountListEvent\"],\n    multipleValue: [\"multiple\", \"multipleValue\"],\n    filterItemsValue: [\"filterItems\", \"filterItemsValue\"],\n    showAccountStateValue: [\"showAccountState\", \"showAccountStateValue\"]\n  },\n  outputs: {\n    selectedAccount: \"selectedAccount\",\n    selectedKind: \"selectedKind\"\n  },\n  features: [i0.ɵɵProvidersFeature([ProductSummaryService]), i0.ɵɵInheritDefinitionFeature],\n  decls: 10,\n  vars: 5,\n  consts: function () {\n    let i18n_2;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Select Accounts placeholder\n       *       \n       * @meaning Select Account(s)\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_FESM2015_BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_JS__3 = goog.getMsg(\"Select Account(s)\");\n      i18n_2 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_FESM2015_BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_JS__3;\n    } else {\n      i18n_2 = $localize`:Select Account(s)|Select Accounts placeholder\n      @@product-summary-account-selector.empty.state.placeholder:Select Account(s)`;\n    }\n\n    let i18n_6;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_FESM2015_BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_JS___7 = goog.getMsg(\"{VAR_SELECT, select, warning {This account is temporarily\\n        inactive. For more info please contact your bank.} error {This account is permanently disabled. For more info please\\n        contact your bank.}}\");\n      i18n_6 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_FESM2015_BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_JS___7;\n    } else {\n      i18n_6 = $localize`{VAR_SELECT, select, warning {This account is temporarily\n        inactive. For more info please contact your bank.} error {This account is permanently disabled. For more info please\n        contact your bank.}}`;\n    }\n\n    i18n_6 = i0.ɵɵi18nPostprocess(i18n_6, {\n      \"VAR_SELECT\": \"\\uFFFD0\\uFFFD\"\n    });\n    let i18n_5;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_FESM2015_BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_JS___8 = goog.getMsg(\" {$icu} \", {\n        \"icu\": i18n_6\n      });\n      i18n_5 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_FESM2015_BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_JS___8;\n    } else {\n      i18n_5 = $localize`:@@product-summary-account-selector.account-state.message: ${i18n_6}:ICU: `;\n    }\n\n    let i18n_10;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_FESM2015_BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_JS__11 = goog.getMsg(\"{VAR_PLURAL, plural, =1 {1 account selected} other {{INTERPOLATION} accounts selected}}\");\n      i18n_10 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_FESM2015_BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_JS__11;\n    } else {\n      i18n_10 = $localize`{VAR_PLURAL, plural, =1 {1 account selected} other {{INTERPOLATION} accounts selected}}`;\n    }\n\n    i18n_10 = i0.ɵɵi18nPostprocess(i18n_10, {\n      \"VAR_PLURAL\": \"\\uFFFD0\\uFFFD\",\n      \"INTERPOLATION\": \"\\uFFFD1\\uFFFD\"\n    });\n    let i18n_9;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Selected Accounts multi label \n       * @meaning Selected Accounts\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_FESM2015_BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_JS__12 = goog.getMsg(\" {$icu} \", {\n        \"icu\": i18n_10\n      });\n      i18n_9 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_FESM2015_BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_JS__12;\n    } else {\n      i18n_9 = $localize`:Selected Accounts|Selected Accounts multi label @@bb-product-summary-account-selector.multi.label: ${i18n_10}:ICU: `;\n    }\n\n    let i18n_13;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc All Selected Accounts label \n       * @meaning All Selected Accounts\n       */\n      const MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_FESM2015_BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_JS___14 = goog.getMsg(\" accounts \");\n      i18n_13 = MSG_C__USERS_HBAYLON_DOCUMENTS_WEST_MONROE_PROJECTS_BACKBASE2_WEB_RETAIL_USA_WEB_NODE_MODULES__BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_FESM2015_BACKBASE_PRODUCT_SUMMARY_ACCOUNT_SELECTOR_WIDGET_ANG_JS___14;\n    } else {\n      i18n_13 = $localize`:All Selected Accounts|All Selected Accounts label @@product-summary-account-selector.allSelectedAccounts.label: accounts `;\n    }\n\n    return [[4, \"ngIf\", \"ngIfElse\"], [\"bbAccountSelectorDropdownCustomizable\", \"\"], [\"bbAccountSelectorItemCustomizable\", \"\"], [\"loadingTemplate\", \"\"], [\"bbAccountSelectorLoadingCustomizable\", \"\"], [\"bbAccountSelectorStateCustomizable\", \"\", 3, \"bbHostRef\"], [\"bbAccountSelectorStateCustomizable\", \"\"], [\"bbAccountSelectorMultiSelectedItemsCustomizable\", \"\"], [\"bbAccountSelectorDropdownCustomizable\", \"\", 3, \"bbHostRef\", \"bbTemplateContext\"], [\"data-role\", \"accountSelector\", \"placeholder\", i18n_2, 1, \"bb-product-summary-account-selector\", 3, \"items\", \"dropdownPosition\", \"selectedItems\", \"multiple\", \"closeOnSelect\", \"filterItems\", \"compareItemsWith\", \"searchFunc\", \"change\"], [\"bbCustomSingleSelectedItemLabel\", \"\"], [\"bbCustomMultiSelectedItemsLabel\", \"\"], [\"bbCustomOptionItem\", \"\"], [\"bbAccountSelectorItemCustomizable\", \"\", 3, \"bbHostRef\", \"bbTemplateContext\"], [\"bbAccountSelectorMultiSelectedItemsCustomizable\", \"\", 3, \"bbHostRef\", \"bbTemplateContext\"], [4, \"ngIf\"], [1, \"bb-stack\"], [1, \"bb-stack__item\", \"bb-product-item__details\"], [3, \"id\", \"ngModel\", \"click\"], [1, \"bb-stack__item\", \"bb-stack__item--fill\", \"bb-ellipsis\", \"bb-ellipsis--single-line\"], [3, \"type\", \"title\", \"amount\", \"currency\", \"status\", \"productNumber\", \"productNumberType\", \"showExternalInfo\", \"externalLogo\", \"externalName\", \"externalSyncDate\", \"isCollapsedView\"], [\"bbAccountSelectorLoadingCustomizable\", \"\", 3, \"bbHostRef\"], [\"loading\", \"\"], [\"title\", \"\", \"iconModifier\", \"error\", \"iconSize\", \"xxl\", \"iconColor\", \"gray\", \"iconClasses\", \"text-muted\", 3, \"subtitle\"], [3, \"text\"], [3, \"isDisplayingAlert\", \"item\", 4, \"ngIf\"], [3, \"isDisplayingAlert\", \"item\"], i18n_5, [1, \"bb-account-selector__selected\"], [1, \"bb-account-selector__selected-accounts-number\", \"bb-text-bold\"], i18n_9, [1, \"bb-account-selector__selected-accounts\", \"bb-text-subtitle\"], [\"selectedAccountsTemplate\", \"\"], [1, \"bb-account-selector__selected-account\"], i18n_13, [4, \"ngFor\", \"ngForOf\"], [\"class\", \"bb-account-selector__selected-account-separator\", 4, \"ngIf\"], [1, \"bb-account-selector__selected-account-separator\"]];\n  },\n  template: function ProductSummaryAccountSelectorWidgetComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ProductSummaryAccountSelectorWidgetComponent_ng_container_0_Template, 2, 2, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, ProductSummaryAccountSelectorWidgetComponent_ng_template_2_Template, 7, 14, \"ng-template\", 1);\n      i0.ɵɵtemplate(3, ProductSummaryAccountSelectorWidgetComponent_ng_template_3_Template, 3, 16, \"ng-template\", 2);\n      i0.ɵɵtemplate(4, ProductSummaryAccountSelectorWidgetComponent_ng_template_4_Template, 2, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(6, ProductSummaryAccountSelectorWidgetComponent_ng_template_6_Template, 4, 4, \"ng-template\", 4);\n      i0.ɵɵelementContainer(7, 5);\n      i0.ɵɵtemplate(8, ProductSummaryAccountSelectorWidgetComponent_ng_template_8_Template, 1, 1, \"ng-template\", 6);\n      i0.ɵɵtemplate(9, ProductSummaryAccountSelectorWidgetComponent_ng_template_9_Template, 8, 4, \"ng-template\", 7);\n    }\n\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(5);\n\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 3, ctx.accounts))(\"ngIfElse\", _r3);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"bbHostRef\", ctx.hostRef);\n    }\n  },\n  directives: function () {\n    return [i3.NgIf, ProductSummaryAccountSelectorDropdownCustomizableDirective, ProductSummaryAccountSelectorItemCustomizableDirective, ProductSummaryAccountSelectorLoadingCustomizableDirective, ProductSummaryAccountSelectorStateCustomizableDirective, ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective, i4.AccountSelectorComponent, i4.CustomSingleSelectedItemLabelDirective, i4.CustomMultiSelectedItemsLabelDirective, i4.CustomOptionItemDirective, i5.InputCheckboxComponent, i12.NgControlStatus, i12.NgModel, ProductSummaryAccountSelectorItemComponent, i7.EmptyStateComponent, i8.LoadingIndicatorComponent, i1$1.AccountStateComponent, i10.EllipsisComponent, i3.NgForOf];\n  },\n  pipes: function () {\n    return [i3.AsyncPipe, i3$1.ProductNumberValuePipe, i3$1.ProductNumberTypePipe];\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductSummaryAccountSelectorWidgetComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bb-product-summary-account-selector-widget',\n      templateUrl: 'product-summary-account-selector-widget.component.html',\n      providers: [ProductSummaryService]\n    }]\n  }], function () {\n    return [{\n      type: i1$2.ActivatedRoute\n    }, {\n      type: ProductSummaryService\n    }, {\n      type: i3$1.ProductsExternalInfoService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PUBSUB]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [BB_PRDSUM_ACCOUNT_SELECTOR_CONFIG_TOKEN]\n      }]\n    }];\n  }, {\n    refreshAccountListEvent: [{\n      type: Input,\n      args: [WidgetProperty.EVENT_REFRESH_ACCOUNT_LIST]\n    }],\n    multipleValue: [{\n      type: Input,\n      args: [WidgetProperty.MULTIPLE]\n    }],\n    filterItemsValue: [{\n      type: Input,\n      args: [WidgetProperty.FILTER_ITEMS]\n    }],\n    showAccountStateValue: [{\n      type: Input,\n      args: [WidgetProperty.SHOW_ACCOUNT_STATE]\n    }],\n    selectedAccount: [{\n      type: Output\n    }],\n    selectedKind: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * This is an extension slot to be used for customizing the entire selector\n *\n * @usageNotes\n *\n * ### Customize the account selector\n *\n * ```html\n * <ng-template\n *   bbAccountSelectorDropdownCustomizable\n *   let-hostRef\n *   let-accounts=\"context\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryAccountSelectorWidgetModule\n */\n\n\nclass ProductSummaryAccountSelectorDropdownCustomizableDirective extends BbTemplate {}\n\nProductSummaryAccountSelectorDropdownCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵProductSummaryAccountSelectorDropdownCustomizableDirective_BaseFactory;\n  return function ProductSummaryAccountSelectorDropdownCustomizableDirective_Factory(t) {\n    return (ɵProductSummaryAccountSelectorDropdownCustomizableDirective_BaseFactory || (ɵProductSummaryAccountSelectorDropdownCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ProductSummaryAccountSelectorDropdownCustomizableDirective)))(t || ProductSummaryAccountSelectorDropdownCustomizableDirective);\n  };\n}();\n\nProductSummaryAccountSelectorDropdownCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ProductSummaryAccountSelectorDropdownCustomizableDirective,\n  selectors: [[\"\", \"bbAccountSelectorDropdownCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductSummaryAccountSelectorDropdownCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbAccountSelectorDropdownCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * This is an extension slot to be used for customizing an account selector item\n * This slot is used for displaying items in the dropdown list and\n * in the selected account (single-select only)\n *\n * @usageNotes\n *\n * ### Customize an account selector item\n *\n * ```html\n *  <ng-template\n *    bbAccountSelectorItemCustomizable\n *    let-hostRef\n *    let-item=\"context\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryAccountSelectorWidgetModule\n */\n\n\nclass ProductSummaryAccountSelectorItemCustomizableDirective extends BbTemplate {}\n\nProductSummaryAccountSelectorItemCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵProductSummaryAccountSelectorItemCustomizableDirective_BaseFactory;\n  return function ProductSummaryAccountSelectorItemCustomizableDirective_Factory(t) {\n    return (ɵProductSummaryAccountSelectorItemCustomizableDirective_BaseFactory || (ɵProductSummaryAccountSelectorItemCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ProductSummaryAccountSelectorItemCustomizableDirective)))(t || ProductSummaryAccountSelectorItemCustomizableDirective);\n  };\n}();\n\nProductSummaryAccountSelectorItemCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ProductSummaryAccountSelectorItemCustomizableDirective,\n  selectors: [[\"\", \"bbAccountSelectorItemCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductSummaryAccountSelectorItemCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbAccountSelectorItemCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * This is an extension slot to be used for customizing selected accounts\n * in multi-select mode\n *\n * @usageNotes\n *\n * ### Customize the selected accounts\n *\n * ```html\n * <ng-template\n *   bbAccountSelectorMultiSelectedItemsCustomizable\n *   let-hostRef\n *   let-items=\"context.items\"\n *   let-accounts=\"context.accounts\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryAccountSelectorWidgetModule\n */\n\n\nclass ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective extends BbTemplate {}\n\nProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective_BaseFactory;\n  return function ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective_Factory(t) {\n    return (ɵProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective_BaseFactory || (ɵProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective)))(t || ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective);\n  };\n}();\n\nProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective,\n  selectors: [[\"\", \"bbAccountSelectorMultiSelectedItemsCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbAccountSelectorMultiSelectedItemsCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * This is an extension slot to be used for customizing the loader\n *\n * @usageNotes\n *\n * ### Customize the account selector\n *\n * ```html\n * <ng-template\n *   bbAccountSelectorLoadingCustomizable\n *   let-hostRef>\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryAccountSelectorWidgetModule\n */\n\n\nclass ProductSummaryAccountSelectorLoadingCustomizableDirective extends BbTemplate {}\n\nProductSummaryAccountSelectorLoadingCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵProductSummaryAccountSelectorLoadingCustomizableDirective_BaseFactory;\n  return function ProductSummaryAccountSelectorLoadingCustomizableDirective_Factory(t) {\n    return (ɵProductSummaryAccountSelectorLoadingCustomizableDirective_BaseFactory || (ɵProductSummaryAccountSelectorLoadingCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ProductSummaryAccountSelectorLoadingCustomizableDirective)))(t || ProductSummaryAccountSelectorLoadingCustomizableDirective);\n  };\n}();\n\nProductSummaryAccountSelectorLoadingCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ProductSummaryAccountSelectorLoadingCustomizableDirective,\n  selectors: [[\"\", \"bbAccountSelectorLoadingCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductSummaryAccountSelectorLoadingCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbAccountSelectorLoadingCustomizable]'\n    }]\n  }], null, null);\n})();\n/**\n * This is an extension slot to be used for customizing the state of the selected account\n *\n * @usageNotes\n *\n * ### Customize the account state\n *\n * ```html\n * <ng-template\n *   bbAccountSelectorStateCustomizable\n *   let-hostRef>\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryAccountSelectorWidgetModule\n */\n\n\nclass ProductSummaryAccountSelectorStateCustomizableDirective extends BbTemplate {}\n\nProductSummaryAccountSelectorStateCustomizableDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵProductSummaryAccountSelectorStateCustomizableDirective_BaseFactory;\n  return function ProductSummaryAccountSelectorStateCustomizableDirective_Factory(t) {\n    return (ɵProductSummaryAccountSelectorStateCustomizableDirective_BaseFactory || (ɵProductSummaryAccountSelectorStateCustomizableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ProductSummaryAccountSelectorStateCustomizableDirective)))(t || ProductSummaryAccountSelectorStateCustomizableDirective);\n  };\n}();\n\nProductSummaryAccountSelectorStateCustomizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ProductSummaryAccountSelectorStateCustomizableDirective,\n  selectors: [[\"\", \"bbAccountSelectorStateCustomizable\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductSummaryAccountSelectorStateCustomizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbAccountSelectorStateCustomizable]'\n    }]\n  }], null, null);\n})();\n\nconst components = [ProductSummaryAccountSelectorWidgetComponent, ProductSummaryAccountSelectorItemComponent];\nconst directives = [ProductSummaryAccountSelectorDropdownCustomizableDirective, ProductSummaryAccountSelectorItemCustomizableDirective, ProductSummaryAccountSelectorLoadingCustomizableDirective, ProductSummaryAccountSelectorStateCustomizableDirective, ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective];\nconst uiModules = [ProductItemCustomModule, ProductKindModule, AccountStateModule, AccountSelectorModule, InputCheckboxModule, ProductItemBasicAccountModule, EmptyStateModule, LoadingIndicatorModule, EllipsisModule, ProductNumberModule, AmountModule, ValidationModule, DatePipeModule];\nconst services = [ProductsExternalInfoService];\n/**\n * Exports the Widgets and UI components for displaying of the account selector. (Retail banking)\n *\n * The following widgets are included in this module:\n *  - `ProductSummaryAccountSelectorWidgetComponent`\n *\n * @see ProductSummaryAccountSelectorWidgetComponent\n *\n * @usageNotes\n *\n * ### Include the exported widgets in your `AppModule`:\n *\n * ```typescript\n * @NgModule({\n *   imports: [\n *     ProductSummaryAccountSelectorWidgetModule ,\n *   ],\n *   ...\n * })\n * export class AppModule {}\n * ```\n */\n\nclass ProductSummaryAccountSelectorWidgetModule {}\n\nProductSummaryAccountSelectorWidgetModule.ɵfac = function ProductSummaryAccountSelectorWidgetModule_Factory(t) {\n  return new (t || ProductSummaryAccountSelectorWidgetModule)();\n};\n\nProductSummaryAccountSelectorWidgetModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ProductSummaryAccountSelectorWidgetModule\n});\nProductSummaryAccountSelectorWidgetModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [...services, ...productSummaryAccountSelectorConfigProviders],\n  imports: [[CommonModule, FormsModule, BackbaseCoreModule.withConfig({\n    classMap: {\n      ProductSummaryAccountSelectorWidgetComponent\n    }\n  }), ...uiModules], ProductItemCustomModule, ProductKindModule, AccountStateModule, AccountSelectorModule, InputCheckboxModule, ProductItemBasicAccountModule, EmptyStateModule, LoadingIndicatorModule, EllipsisModule, ProductNumberModule, AmountModule, ValidationModule, DatePipeModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProductSummaryAccountSelectorWidgetModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, BackbaseCoreModule.withConfig({\n        classMap: {\n          ProductSummaryAccountSelectorWidgetComponent\n        }\n      }), ...uiModules],\n      declarations: [...components, ...directives],\n      exports: [...components, ...directives, ...uiModules],\n      providers: [...services, ...productSummaryAccountSelectorConfigProviders]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BB_PRDSUM_ACCOUNT_SELECTOR_CONFIG_TOKEN, ProductKindsAccessDenied, ProductKindsBadRequest, ProductKindsUnknownError, ProductSummaryAccountSelectorDropdownCustomizableDirective, ProductSummaryAccountSelectorItemComponent, ProductSummaryAccountSelectorItemCustomizableDirective, ProductSummaryAccountSelectorLoadingCustomizableDirective, ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective, ProductSummaryAccountSelectorStateCustomizableDirective, ProductSummaryAccountSelectorWidgetComponent, ProductSummaryAccountSelectorWidgetModule, ProductSummaryService, WidgetProperty, productSummaryAccountSelectorConfigProviders, productSummaryAccountSelectorDefaults };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/product-summary-account-selector-widget-ang/fesm2015/backbase-product-summary-account-selector-widget-ang.js"],"names":["i0","Injectable","InjectionToken","Component","Input","EventEmitter","Inject","Output","Directive","NgModule","i3","CommonModule","i1$3","BbTemplate","BackbaseCoreModule","i12","FormsModule","i4","AccountSelectorModule","i5","InputCheckboxModule","ProductItemBasicAccountComponent","ProductItemBasicAccountModule","i7","EmptyStateModule","i8","LoadingIndicatorModule","i10","EllipsisModule","i2","AmountModule","i1$1","ProductItemCustomModule","ProductKindModule","AccountStateModule","ProductNumberModule","i3$1","cacheRequest","isProductVisible","ResponsiveContainerComponent","getRouteParameter","getAccountAlias","hasExternalInfo","processErrorMessages","modelItemToBoolean","ValidationModule","DatePipeModule","ProductsExternalInfoService","BehaviorSubject","combineLatest","of","Subject","Observable","distinctUntilChanged","map","catchError","tap","takeUntil","i1","PUBSUB","i1$2","ProductKindsBadRequest","constructor","response","kind","messages","error","errors","e","message","ProductKindsUnknownError","ProductKindsAccessDenied","parseError","ErrorEvent","status","defaultListParams","ProductSummaryService","productSummaryDataService","undefined","listParams","listRefresh","accountsList","pipe","params","getProductSummary","refreshAccountsList","next","ngOnDestroy","complete","res","responseToProductList","extractProducts","memo","products","concat","toProductKindList","Object","entries","filter","key","value","Array","isArray","reduce","product","assign","ɵfac","ProductSummaryHttpService","ɵprov","type","BB_PRDSUM_ACCOUNT_SELECTOR_CONFIG_TOKEN","productSummaryAccountSelectorDefaults","notToDisplayStateList","states","stateName","severity","productSummaryAccountSelectorConfigProviders","provide","useValue","WidgetProperty","MULTIPLE","FILTER_ITEMS","SHOW_ACCOUNT_STATE","EVENT_REFRESH_ACCOUNT_LIST","OUTPUT_SELECTED_ACCOUNT","ProductSummaryAccountSelectorItemComponent","arguments","isCollapsedView","showExternalInfo","ɵcmp","NgIf","NgClass","ProductSummaryAccountLogoComponent","ProductItemCustomTitleComponent","NgTemplateOutlet","AmountComponent","IsDefinedPipe","DateUpdatedAgoPipe","args","selector","templateUrl","productNumberType","externalLogo","externalName","externalSyncDate","ProductSummaryAccountSelectorWidgetComponent","route","service","productsExternalInfoService","element","changeDetector","eventBusService","settings","hostRef","gc$","productId","getAlias","registeredRefreshAccountsListEvents","refreshAccountsListHandler","bind","accounts","subscriber","subscriptions","push","subscribe","some","getProductsWithExternalInfo","productsWithExternalData","forEach","subscription","unsubscribe","multiple","filterItems","showAccountState$","selectedAccount","selectedKind","refreshAccountListEvent","clearRefreshAccountsListEvents","replace","split","eventName","multipleValue","filterItemsValue","showAccountStateValue","combineLatestSub","selectedAccountState","productIdArray","accountSelected","account","id","includes","mapAccountState","find","markForCheck","ngOnInit","item","state","productState","toLocaleLowerCase","onAccountSelected","isProduct","emit","join","compareProductsById","product1","product2","isInProductAlias","searchTerm","toLowerCase","productAlias","getProductBalance","_a","_b","bookedBalance","principalAmount","currentInvestmentValue","getExternalInfoSyncDate","lastSyncDate","length","ActivatedRoute","ElementRef","ChangeDetectorRef","ProductSummaryAccountSelectorDropdownCustomizableDirective","ProductSummaryAccountSelectorItemCustomizableDirective","ProductSummaryAccountSelectorLoadingCustomizableDirective","ProductSummaryAccountSelectorStateCustomizableDirective","ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective","AccountSelectorComponent","CustomSingleSelectedItemLabelDirective","CustomMultiSelectedItemsLabelDirective","CustomOptionItemDirective","InputCheckboxComponent","NgControlStatus","NgModel","EmptyStateComponent","LoadingIndicatorComponent","AccountStateComponent","EllipsisComponent","NgForOf","AsyncPipe","ProductNumberValuePipe","ProductNumberTypePipe","providers","decorators","ɵdir","components","directives","uiModules","services","ProductSummaryAccountSelectorWidgetModule","ɵmod","ɵinj","withConfig","classMap","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Component, Input, EventEmitter, Inject, Output, Directive, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$3 from '@backbase/foundation-ang/core';\nimport { BbTemplate, BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport * as i12 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i4 from '@backbase/ui-ang/account-selector';\nimport { AccountSelectorModule } from '@backbase/ui-ang/account-selector';\nimport * as i5 from '@backbase/ui-ang/input-checkbox';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport { ProductItemBasicAccountComponent, ProductItemBasicAccountModule } from '@backbase/ui-ang/product-item-basic-account';\nimport * as i7 from '@backbase/ui-ang/empty-state';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport * as i8 from '@backbase/ui-ang/loading-indicator';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport * as i10 from '@backbase/ui-ang/ellipsis';\nimport { EllipsisModule } from '@backbase/ui-ang/ellipsis';\nimport * as i2 from '@backbase/ui-ang/amount';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport * as i1$1 from '@backbase/product-summary-ui';\nimport { ProductItemCustomModule, ProductKindModule, AccountStateModule, ProductNumberModule } from '@backbase/product-summary-ui';\nimport * as i3$1 from '@backbase/product-summary-common-ang';\nimport { cacheRequest, isProductVisible, ResponsiveContainerComponent, getRouteParameter, getAccountAlias, hasExternalInfo, processErrorMessages, modelItemToBoolean, ValidationModule, DatePipeModule, ProductsExternalInfoService } from '@backbase/product-summary-common-ang';\nimport { BehaviorSubject, combineLatest, of, Subject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, catchError, tap, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@backbase/data-ang/arrangements';\nimport { PUBSUB } from '@backbase/foundation-ang/web-sdk';\nimport * as i1$2 from '@angular/router';\n\nclass ProductKindsBadRequest {\n    constructor(response) {\n        this.response = response;\n        this.kind = 'ProductKindsBadRequest';\n        this.messages = ((response.error || {}).errors || []).map((e) => e.message);\n    }\n}\nclass ProductKindsUnknownError {\n    constructor(response) {\n        this.response = response;\n        this.kind = 'ProductKindsUnknownError';\n        this.messages = [response.message];\n    }\n}\nclass ProductKindsAccessDenied {\n    constructor(response) {\n        this.response = response;\n        this.kind = 'ProductKindsAccessDenied';\n        this.messages = ((response.error || {}).errors || []).map((e) => e.message);\n    }\n}\nconst parseError = (error) => {\n    if (error.error instanceof ErrorEvent) {\n        return new ProductKindsUnknownError(error);\n    }\n    else {\n        switch (error.status) {\n            case 400:\n                return new ProductKindsBadRequest(error);\n            case 403:\n                return new ProductKindsAccessDenied(error);\n            case 401:\n                return new ProductKindsAccessDenied(error);\n            default:\n                return new ProductKindsUnknownError(error);\n        }\n    }\n};\n\nconst defaultListParams = {};\n/**\n * Service for fetching and storing accounts and properties from model.xml\n *\n * This service relies on providers from `ProductSummaryAccountSelectorWidgetModule`.\n *\n * @see ProductSummaryAccountSelectorWidgetModule\n *\n * @usageNotes\n *\n * ### Ensure the ProductSummaryAccountSelectorWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ProductSummaryAccountSelectorWidgetModule,\n *   ],\n * })\n * export class MyWidgetModule {}\n * ```\n *\n * ### Inject this service into your component\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ProductSummaryService],\n * })\n *  export class MyComponent {\n * ```\n */\nclass ProductSummaryService {\n    /**\n     * Constructor\n     *\n     * @param productSummaryDataService\n     */\n    constructor(productSummaryDataService) {\n        this.productSummaryDataService = productSummaryDataService;\n        /**\n         * Used to store the error occured during loading of accounts\n         */\n        this.error = new BehaviorSubject(undefined);\n        this.listParams = new BehaviorSubject(defaultListParams);\n        this.listRefresh = new BehaviorSubject(false);\n        /**\n         * List of accounts fetched from the server\n         */\n        this.accountsList = combineLatest([\n            this.listParams.pipe(distinctUntilChanged()),\n            this.listRefresh,\n        ]).pipe(cacheRequest(([params]) => this.getProductSummary(params)));\n    }\n    /**\n     * Refreshes the list of accounts\n     */\n    refreshAccountsList() {\n        this.listRefresh.next(true);\n    }\n    /**\n     * @internal\n     */\n    ngOnDestroy() {\n        this.error.complete();\n    }\n    getProductSummary(params) {\n        return this.productSummaryDataService.getProductSummary(params).pipe(map((res) => this.responseToProductList(res)), catchError((error) => {\n            this.error.next(parseError(error));\n            return of(undefined);\n        }));\n    }\n    extractProducts(memo, { products }) {\n        return memo.concat(products);\n    }\n    toProductKindList(res) {\n        return Object.entries(res)\n            .filter(([key]) => key !== 'aggregatedBalance')\n            .map(([kind, value]) => {\n            if (Array.isArray(value)) {\n                value.products = value.reduce(this.extractProducts, []);\n            }\n            let products = [];\n            if (value.products && Array.isArray(value.products)) {\n                products = value.products.filter(isProductVisible).map((product) => (Object.assign(Object.assign({}, product), { kind })));\n            }\n            return { products };\n        });\n    }\n    responseToProductList(res) {\n        return this.toProductKindList(res).reduce(this.extractProducts, []);\n    }\n}\nProductSummaryService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryService, deps: [{ token: i1.ProductSummaryHttpService }], target: i0.ɵɵFactoryTarget.Injectable });\nProductSummaryService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.ProductSummaryHttpService }]; } });\n\n// These tokens can be used to change configuration at app level\nconst BB_PRDSUM_ACCOUNT_SELECTOR_CONFIG_TOKEN = new InjectionToken('BB_PRDSUM_ACCOUNT_SELECTOR_CONFIG_TOKEN');\nconst productSummaryAccountSelectorDefaults = {\n    notToDisplayStateList: ['Active', 'Open'],\n    states: [\n        {\n            stateName: 'Active',\n            severity: 'info',\n        },\n        {\n            stateName: 'Inactive',\n            severity: 'warning',\n        },\n        {\n            stateName: 'Closed',\n            severity: 'error',\n        },\n        {\n            stateName: 'Open',\n            severity: 'info',\n        },\n    ],\n};\nconst productSummaryAccountSelectorConfigProviders = [\n    {\n        provide: BB_PRDSUM_ACCOUNT_SELECTOR_CONFIG_TOKEN,\n        useValue: productSummaryAccountSelectorDefaults,\n    },\n];\n\nconst WidgetProperty = {\n    MULTIPLE: 'multiple',\n    FILTER_ITEMS: 'filterItems',\n    SHOW_ACCOUNT_STATE: 'showAccountState',\n    EVENT_REFRESH_ACCOUNT_LIST: 'event.refreshAccountsList',\n    OUTPUT_SELECTED_ACCOUNT: 'output.selectedAccount',\n};\n\n/**\n * Displays account overview in account selector\n *\n * @usageNotes\n *\n * ### Display details\n *\n * ```html\n * <bb-product-summary-account-selector-item\n *   [title]=\"'My Account'\"\n *   [amount]=\"12345\"\n *   [currency]=\"'EUR'\"\n *   [productNumber]=\"'12345678'\"\n *   [productNumberType]=\"'iban'\"\n * ></bb-product-summary-account-selector-item>\n * ```\n *\n * @ngModule ProductSummaryAccountSelectorWidgetModule\n */\nclass ProductSummaryAccountSelectorItemComponent extends ProductItemBasicAccountComponent {\n    constructor() {\n        super(...arguments);\n        /**\n         * Whether to show in mobile or desktop view\n         *\n         * @default false\n         */\n        this.isCollapsedView = false;\n        /**\n         * Whether to show external product information\n         *\n         * @default false\n         */\n        this.showExternalInfo = false;\n    }\n}\nProductSummaryAccountSelectorItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryAccountSelectorItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nProductSummaryAccountSelectorItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ProductSummaryAccountSelectorItemComponent, selector: \"bb-product-summary-account-selector-item\", inputs: { isCollapsedView: \"isCollapsedView\", productNumberType: \"productNumberType\", showExternalInfo: \"showExternalInfo\", externalLogo: \"externalLogo\", externalName: \"externalName\", externalSyncDate: \"externalSyncDate\" }, usesInheritance: true, ngImport: i0, template: \"<div [class.active]=\\\"active\\\" class=\\\"bb-product-item bb-product-item-basic-account-ui product-item\\\">\\n  <div class=\\\"bb-stack product-item-content\\\">\\n    <div *ngIf=\\\"!isCollapsedView\\\" class=\\\"bb-stack__item bb-stack__item--align-top\\\">\\n      <div class=\\\"bb-block bb-block--xs\\\"></div>\\n      <bb-product-summary-account-logo\\n        [logoSrc]=\\\"showExternalInfo && externalLogo\\\"\\n        [productKindName]=\\\"type\\\"\\n        iconColor=\\\"secondary\\\"\\n      ></bb-product-summary-account-logo>\\n    </div>\\n    <div class=\\\"bb-stack__item bb-stack__item--fill bb-account-info\\\">\\n      <bb-product-item-custom-title-ui\\n        *ngIf=\\\"showExternalInfo && !isCollapsedView\\\"\\n        [showExternalTitle]=\\\"true\\\"\\n        [externalTitle]=\\\"showExternalInfo && externalName\\\"\\n      ></bb-product-item-custom-title-ui>\\n      <div class=\\\"bb-stack bb-stack--wrap\\\">\\n        <div class=\\\"bb-stack__item bb-product-item__title\\\">\\n          <ng-container *ngIf=\\\"customProductItemBasicAccountTitle; else defaultProductItemBasicAccountTitle\\\">\\n            <ng-container\\n              *ngTemplateOutlet=\\\"customProductItemBasicAccountTitle?.templateRef; context: hostRef\\\"\\n            ></ng-container>\\n          </ng-container>\\n        </div>\\n        <div *ngIf=\\\"isCollapsedView\\\" class=\\\"bb-stack__break bb-stack__break--up\\\"></div>\\n        <div\\n          class=\\\"bb-stack__item bb-stack__item--push-right bb-stack__item--spacing-none bb-product-item__details\\\"\\n          [ngClass]=\\\"{\\n            'bb-stack__item--push-right': !isCollapsedView,\\n            'bb-stack__item--push-left': isCollapsedView\\n          }\\\"\\n        >\\n          <ng-container\\n            *ngIf=\\\"customProductItemBasicAccountDetailsFormatter; else defaultProductItemBasicAccountDetailsFormatter\\\"\\n          >\\n            <ng-container\\n              *ngTemplateOutlet=\\\"customProductItemBasicAccountDetailsFormatter?.templateRef; context: hostRef\\\"\\n            ></ng-container>\\n          </ng-container>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #defaultProductItemBasicAccountTitle>\\n  <bb-product-item-custom-title-ui\\n    [title]=\\\"title\\\"\\n    [showLogo]=\\\"isCollapsedView\\\"\\n    [logoSrc]=\\\"showExternalInfo && externalLogo\\\"\\n    [logoKind]=\\\"type\\\"\\n    [showExternalTitle]=\\\"showExternalInfo && isCollapsedView\\\"\\n    [externalTitle]=\\\"showExternalInfo && externalName\\\"\\n    [productNumber]=\\\"productNumber\\\"\\n    [productNumberType]=\\\"productNumberType\\\"\\n    [state]=\\\"status\\\"\\n  ></bb-product-item-custom-title-ui>\\n</ng-template>\\n\\n<ng-template #defaultProductItemBasicAccountDetailsFormatter>\\n  <div\\n    *ngIf=\\\"amount | bbIsDefined\\\"\\n    [ngClass]=\\\"{\\n      'bb-text-align-right': !isCollapsedView,\\n      'bb-text-align-left': isCollapsedView\\n    }\\\"\\n  >\\n    <bb-amount-ui\\n      class=\\\"bb-highlight bb-product-item__amount\\\"\\n      [amount]=\\\"amount\\\"\\n      [currency]=\\\"currency\\\"\\n      [mapCurrency]=\\\"showCurrencySymbol\\\"\\n    ></bb-amount-ui>\\n    <div *ngIf=\\\"showExternalInfo && (externalSyncDate | bbIsDefined)\\\" class=\\\"bb-text-support bb-subtitle\\\">\\n      {{ externalSyncDate! | bbDateUpdatedAgo }}\\n    </div>\\n  </div>\\n</ng-template>\\n\", components: [{ type: i1$1.ProductSummaryAccountLogoComponent, selector: \"bb-product-summary-account-logo\", inputs: [\"logoSrc\", \"productKindName\", \"defaultProductKindName\", \"iconColor\", \"iconSize\", \"logoSize\"] }, { type: i1$1.ProductItemCustomTitleComponent, selector: \"bb-product-item-custom-title-ui\", inputs: [\"title\", \"titleInteractive\", \"showLogo\", \"logoSrc\", \"logoKind\", \"showExternalTitle\", \"externalTitle\", \"favorite\", \"favoriteIconColor\", \"productNumber\", \"productNumberType\", \"state\"], outputs: [\"selectCustomTitle\"] }, { type: i2.AmountComponent, selector: \"bb-amount-ui\", inputs: [\"currency\", \"showPlusSign\", \"mapCurrency\", \"showPercent\", \"abbreviate\", \"decimalPlaces\", \"trailingZeroes\", \"amount\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], pipes: { \"bbIsDefined\": i3$1.IsDefinedPipe, \"bbDateUpdatedAgo\": i3$1.DateUpdatedAgoPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryAccountSelectorItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-product-summary-account-selector-item',\n                    templateUrl: './product-summary-account-selector-item.component.html',\n                }]\n        }], propDecorators: { isCollapsedView: [{\n                type: Input\n            }], productNumberType: [{\n                type: Input\n            }], showExternalInfo: [{\n                type: Input\n            }], externalLogo: [{\n                type: Input\n            }], externalName: [{\n                type: Input\n            }], externalSyncDate: [{\n                type: Input\n            }] } });\n\n/**\n * A widget for selecting a user's Account (Retail).\n *\n * @usageNotes\n *\n * ### Include this widget in your `AppModule`:\n *\n * ```typescript\n * @NgModule({\n *   imports: [\n *     ProductSummaryAccountSelectorWidgetModule,\n *   ],\n *   ...\n * })\n * export class AppModule {}\n * ```\n *\n * ### Include this widget (standalone model)\n *\n * ```typescript\n * export const environment: Environment = {\n *   ...\n *   bootstrap: {\n *     pageModel: {\n *       name: 'root',\n *       properties: {},\n *       children: [\n *         {\n *           name: 'account-list',\n *           properties: {\n *             classId: 'ProductSummaryAccountSelectorWidgetComponent',\n *           },\n *         },\n *       ],\n *     },\n *   },\n * };\n * ```\n *\n * ### Communicate the selected account ID when it changes (standalone model)\n *\n * Using the `RouteParam` communication transport:\n *\n * ```typescript\n * export const environment: Environment = {\n *   ...\n *   bootstrap: {\n *     pageModel: {\n *       name: 'root',\n *       properties: {},\n *       children: [\n *         {\n *           name: 'account-list',\n *           properties: {\n *             classId: 'ProductSummaryAccountSelectorWidgetComponent',\n *             'output.selectedAccount': 'navigation:account-selector-product-details-container',\n *           },\n *         },\n *         {\n *           name: 'my-widget',\n *           properties: {\n *             classId: 'MyWidgetComponent',\n *             'input.selectedAccountId': RouteParam.toProperty('selectedAccount'),\n *           },\n *         },\n *       ],\n *     },\n *   },\n * };\n * ```\n *\n * @ngModule ProductSummaryAccountSelectorWidgetModule\n */\nclass ProductSummaryAccountSelectorWidgetComponent extends ResponsiveContainerComponent {\n    /**\n     * Constructor\n     *\n     * @param route\n     * @param service\n     * @param productsExternalInfoService\n     * @param element\n     * @param changeDetector\n     * @param eventBusService\n     * @param settings\n     */\n    constructor(route, service, productsExternalInfoService, element, changeDetector, eventBusService, settings) {\n        super(element, changeDetector);\n        this.route = route;\n        this.service = service;\n        this.productsExternalInfoService = productsExternalInfoService;\n        this.element = element;\n        this.changeDetector = changeDetector;\n        this.eventBusService = eventBusService;\n        this.settings = settings;\n        this.hostRef = this;\n        /**\n         * Subject for the garbage collector\n         */\n        this.gc$ = new Subject();\n        /**\n         * The ID or IDs (a comma separated list) of the selected account\n         * taken from the selectedAccount route param\n         */\n        this.productId = getRouteParameter(this.route, 'selectedAccount');\n        /**\n         * Used to display the error occured during loading of accounts\n         */\n        this.error = this.service.error;\n        /**\n         * A method to return the alias of the given account\n         */\n        this.getAlias = getAccountAlias;\n        /**\n         * Returns true if product has external info\n         */\n        this.hasExternalInfo = hasExternalInfo;\n        this.registeredRefreshAccountsListEvents = [];\n        this.refreshAccountsListHandler = this.refreshAccountsList.bind(this);\n        /**\n         * The list of accounts to display in the dropdown.\n         */\n        this.accounts = new Observable(subscriber => {\n            const subscriptions = [];\n            subscriptions.push(this.service.accountsList.subscribe(products => {\n                subscriber.next(products);\n                if (products === null || products === void 0 ? void 0 : products.some(hasExternalInfo)) {\n                    subscriptions.push(this.productsExternalInfoService\n                        .getProductsWithExternalInfo(products)\n                        .subscribe(productsWithExternalData => subscriber.next(productsWithExternalData), subscriber.error));\n                }\n            }, subscriber.error));\n            return () => subscriptions.forEach(subscription => subscription.unsubscribe());\n        }).pipe(tap(accounts => this.accountsList.next(accounts)));\n        this.accountsList = new Subject();\n        /**\n         * Select multiple accounts\n         * Set to `true` to allow the bank customer to select more than one arrangement at a time.\n         */\n        this.multiple = new BehaviorSubject(false);\n        /**\n         * Enables bank customers to filter the arrangements that are presented in the dropdown.\n         * Set to `true` to show Filter. Set to `false` to show Search.\n         */\n        this.filterItems = new BehaviorSubject(true);\n        /**\n         * Defines whether the account status is displayed for the selected account\n         */\n        this.showAccountState$ = new BehaviorSubject(true);\n        /**\n         * Emits the ID of the account selected by the bank customer as a string.\n         */\n        this.selectedAccount = new EventEmitter();\n        /**\n         * An event emitter to extend payload with product kind\n         */\n        this.selectedKind = new EventEmitter();\n        /**\n         * The method processed error messages to display in the template.\n         */\n        this.processErrorMessages = processErrorMessages;\n    }\n    /**\n     * Comma separated list of event names to subscribe to perform accounts refresh\n     */\n    set refreshAccountListEvent(value) {\n        this.clearRefreshAccountsListEvents();\n        if (value) {\n            this.registeredRefreshAccountsListEvents = value.replace(/ /g, '').split(',');\n            this.registeredRefreshAccountsListEvents.forEach(eventName => {\n                this.eventBusService.subscribe(eventName, this.refreshAccountsListHandler);\n            });\n        }\n    }\n    set multipleValue(value) {\n        this.multiple.next(modelItemToBoolean(value));\n    }\n    set filterItemsValue(value) {\n        this.filterItems.next(modelItemToBoolean(value));\n    }\n    set showAccountStateValue(value) {\n        this.showAccountState$.next(modelItemToBoolean(value));\n    }\n    refreshAccountsList() {\n        this.service.refreshAccountsList();\n    }\n    clearRefreshAccountsListEvents() {\n        this.registeredRefreshAccountsListEvents.forEach(eventName => {\n            this.eventBusService.unsubscribe(eventName, this.refreshAccountsListHandler);\n        });\n        this.registeredRefreshAccountsListEvents = [];\n    }\n    combineLatestSub() {\n        return combineLatest(this.accountsList, this.productId, this.multiple)\n            .pipe(takeUntil(this.gc$))\n            .subscribe(([accounts, productId, multiple]) => {\n            if (accounts) {\n                this.selectedAccountState = undefined;\n                if (multiple) {\n                    const productIdArray = productId.split(',');\n                    this.accountSelected = accounts\n                        ? accounts.filter((account) => account.id === undefined || productIdArray.includes(account.id))\n                        : [];\n                    this.selectedAccountState = this.mapAccountState(this.accountSelected[0]);\n                }\n                else {\n                    this.accountSelected = accounts ? accounts.find((product) => product.id === productId) : undefined;\n                    this.selectedAccountState = this.mapAccountState(this.accountSelected);\n                }\n            }\n            this.changeDetector.markForCheck();\n        });\n    }\n    /**\n     * @internal\n     */\n    ngOnInit() {\n        this.combineLatestSub();\n    }\n    /**\n     * Cleanups just before Angular destroys the component.\n     *\n     * @internal\n     */\n    ngOnDestroy() {\n        this.clearRefreshAccountsListEvents();\n        this.gc$.next();\n        this.gc$.complete();\n    }\n    /**\n     * Maps product state to AccountState\n     *\n     * @param item\n     */\n    mapAccountState(item) {\n        if (item && item.state && item.state.state) {\n            const productState = item.state.state;\n            return this.settings.states.find(value => productState.toLocaleLowerCase() === value.stateName.toLocaleLowerCase() &&\n                !this.settings.notToDisplayStateList.includes(productState));\n        }\n        return undefined;\n    }\n    /**\n     * Event handler for the `change` event of `bb-account-selector-ui`\n     * emits a string of comma-separated account ids to `selectedAccount` and `selectedKind`\n     *\n     * @param item\n     */\n    onAccountSelected(item) {\n        if (!this.isProduct(item)) {\n            // this checking here is because of a bug in `ng-select`.\n            // `ng-select` in multi-select mode if its 'filter' was changed\n            // sends \"onClose\" an Event object instead of the real elements\n            return;\n        }\n        this.selectedAccountState = undefined;\n        this.accountSelected = item;\n        if (Array.isArray(item)) {\n            this.selectedAccountState = this.mapAccountState(item[0]);\n            this.selectedAccount.emit(item.map(account => account.id).join(','));\n            this.selectedKind.emit(item.map(account => account.kind).join(','));\n        }\n        else {\n            this.selectedAccountState = this.mapAccountState(item);\n            this.selectedAccount.emit(item.id);\n            this.selectedKind.emit(item.kind);\n        }\n    }\n    /**\n     * Comparing given Products by `id` property.\n     */\n    compareProductsById(product1, product2) {\n        return this.isProduct(product1) && this.isProduct(product2) && product1.id === product2.id;\n    }\n    /**\n     * Returns `true` if product alias includes `value`, otherwise `false`\n     */\n    isInProductAlias(value, product) {\n        const searchTerm = value.toLowerCase();\n        const productAlias = (this.getAlias(product) || '').toLowerCase();\n        return productAlias.includes(searchTerm);\n    }\n    /**\n     * Returns balance for the given product\n     */\n    getProductBalance(product) {\n        var _a, _b;\n        return (_b = (_a = product.bookedBalance) !== null && _a !== void 0 ? _a : product.principalAmount) !== null && _b !== void 0 ? _b : product.currentInvestmentValue;\n    }\n    /**\n     * Returns sync date of external info for the given product\n     */\n    getExternalInfoSyncDate(product) {\n        return hasExternalInfo(product) ? product === null || product === void 0 ? void 0 : product.lastSyncDate : undefined;\n    }\n    isProduct(item) {\n        if (Array.isArray(item) && item.length === 0) {\n            return true; // handles the case with an empty array input (when all the items are unselected in multiple mode)\n        }\n        const product = Array.isArray(item) ? item[0] : item;\n        return typeof product === 'object' && 'id' in product;\n    }\n}\nProductSummaryAccountSelectorWidgetComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryAccountSelectorWidgetComponent, deps: [{ token: i1$2.ActivatedRoute }, { token: ProductSummaryService }, { token: i3$1.ProductsExternalInfoService }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: PUBSUB }, { token: BB_PRDSUM_ACCOUNT_SELECTOR_CONFIG_TOKEN }], target: i0.ɵɵFactoryTarget.Component });\nProductSummaryAccountSelectorWidgetComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ProductSummaryAccountSelectorWidgetComponent, selector: \"bb-product-summary-account-selector-widget\", inputs: { refreshAccountListEvent: [\"event.refreshAccountsList\", \"refreshAccountListEvent\"], multipleValue: [\"multiple\", \"multipleValue\"], filterItemsValue: [\"filterItems\", \"filterItemsValue\"], showAccountStateValue: [\"showAccountState\", \"showAccountStateValue\"] }, outputs: { selectedAccount: \"selectedAccount\", selectedKind: \"selectedKind\" }, providers: [ProductSummaryService], usesInheritance: true, ngImport: i0, template: \"<ng-container *ngIf=\\\"accounts | async as accounts; else loadingTemplate\\\">\\n  <ng-container\\n    bbAccountSelectorDropdownCustomizable\\n    [bbHostRef]=\\\"hostRef\\\"\\n    [bbTemplateContext]=\\\"accounts\\\"\\n>\\n  </ng-container>\\n</ng-container>\\n\\n<!-- Account Selector Dropdown template -->\\n<ng-template\\n  bbAccountSelectorDropdownCustomizable\\n  let-hostRef\\n  let-accounts=\\\"context\\\"\\n>\\n  <bb-account-selector-ui\\n    class=\\\"bb-product-summary-account-selector\\\"\\n    [items]=\\\"accounts\\\"\\n    [dropdownPosition]=\\\"'bottom'\\\"\\n    [selectedItems]=\\\"hostRef.accountSelected\\\"\\n    [multiple]=\\\"hostRef.multiple | async\\\"\\n    [closeOnSelect]=\\\"(hostRef.multiple | async) === false\\\"\\n    (change)=\\\"hostRef.onAccountSelected($event)\\\"\\n    [filterItems]=\\\"hostRef.filterItems | async\\\"\\n    [compareItemsWith]=\\\"hostRef.compareProductsById.bind(hostRef)\\\"\\n    [searchFunc]=\\\"hostRef.isInProductAlias.bind(hostRef)\\\"\\n    data-role=\\\"accountSelector\\\"\\n    placeholder=\\\"Select Account(s)\\\"\\n    i18n-placeholder=\\\"Select Account(s)|Select Accounts placeholder\\n      @@product-summary-account-selector.empty.state.placeholder\\\"\\n  >\\n    <ng-template\\n      bbCustomSingleSelectedItemLabel\\n      let-item=\\\"item\\\"\\n    >\\n      <ng-container\\n        bbAccountSelectorItemCustomizable\\n        [bbHostRef]=\\\"hostRef\\\"\\n        [bbTemplateContext]=\\\"item\\\"\\n      >\\n      </ng-container>\\n    </ng-template>\\n\\n    <ng-template\\n      bbCustomMultiSelectedItemsLabel\\n      let-items=\\\"items\\\">\\n      <ng-container\\n        bbAccountSelectorMultiSelectedItemsCustomizable\\n        [bbHostRef]=\\\"hostRef\\\"\\n        [bbTemplateContext]=\\\"{items: items, accounts: accounts}\\\">\\n      </ng-container>\\n    </ng-template>\\n\\n    <ng-template\\n      bbCustomOptionItem\\n      let-item=\\\"item\\\"\\n      let-item$=\\\"item$\\\"\\n      let-index=\\\"index\\\"\\n    >\\n      <ng-container *ngIf=\\\"hostRef.multiple | async\\\">\\n        <div class=\\\"bb-stack\\\">\\n          <div class=\\\"bb-stack__item bb-product-item__details\\\">\\n            <bb-input-checkbox-ui\\n              [id]=\\\"index\\\"\\n              [ngModel]=\\\"item$.selected\\\"\\n              (click)=\\\"$event.preventDefault()\\\"\\n            >\\n            </bb-input-checkbox-ui>\\n          </div>\\n          <div class=\\\"bb-stack__item bb-stack__item--fill bb-ellipsis bb-ellipsis--single-line\\\">\\n            <ng-container\\n              bbAccountSelectorItemCustomizable\\n              [bbHostRef]=\\\"hostRef\\\"\\n              [bbTemplateContext]=\\\"item\\\"\\n            >\\n            </ng-container>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"(hostRef.multiple | async) === false\\\">\\n        <ng-container\\n          bbAccountSelectorItemCustomizable\\n          [bbHostRef]=\\\"hostRef\\\"\\n          [bbTemplateContext]=\\\"item\\\"\\n        >\\n        </ng-container>\\n      </ng-container>\\n    </ng-template>\\n  </bb-account-selector-ui>\\n</ng-template>\\n\\n<!-- Product summary account selector item template -->\\n<ng-template\\n  bbAccountSelectorItemCustomizable\\n  let-hostRef\\n  let-item=\\\"context\\\"\\n>\\n  <bb-product-summary-account-selector-item\\n    [type]=\\\"item?.productKindName\\\"\\n    [title]=\\\"hostRef.getAlias(item)\\\"\\n    [amount]=\\\"hostRef.getProductBalance(item)\\\"\\n    [currency]=\\\"item?.currency\\\"\\n    [status]=\\\"item?.state?.state\\\"\\n    [productNumber]=\\\"item | bbProductNumberValue\\\"\\n    [productNumberType]=\\\"item | bbProductNumberType\\\"\\n    [showExternalInfo]=\\\"hostRef.hasExternalInfo(item)\\\"\\n    [externalLogo]=\\\"item?.financialInstitution?.logo\\\"\\n    [externalName]=\\\"item?.financialInstitution?.name\\\"\\n    [externalSyncDate]=\\\"hostRef.getExternalInfoSyncDate(item)\\\"\\n    [isCollapsedView]=\\\"hostRef.responsiveView === 'mobile'\\\"\\n  ></bb-product-summary-account-selector-item>\\n</ng-template>\\n\\n<!-- Product summary loading template -->\\n<ng-template #loadingTemplate>\\n  <ng-container\\n    bbAccountSelectorLoadingCustomizable\\n    [bbHostRef]=\\\"hostRef\\\"\\n  >\\n    <div></div>\\n  </ng-container>\\n</ng-template>\\n\\n<ng-template\\n  bbAccountSelectorLoadingCustomizable\\n  let-hostRef\\n>\\n  <ng-container *ngIf=\\\"hostRef.error | async as error; else loading\\\">\\n    <bb-empty-state-ui\\n      title=\\\"\\\"\\n      [subtitle]=\\\"hostRef.processErrorMessages(error.messages)\\\"\\n      iconModifier=\\\"error\\\"\\n      iconSize=\\\"xxl\\\"\\n      iconColor=\\\"gray\\\"\\n      iconClasses=\\\"text-muted\\\"\\n    ></bb-empty-state-ui>\\n  </ng-container>\\n  <ng-template #loading>\\n    <bb-loading-indicator-ui\\n      i18n-text=\\\"@@product.details.loadingAccounts\\\"\\n      [text]=\\\"'Loading Accounts...'\\\"\\n    ></bb-loading-indicator-ui>\\n  </ng-template>\\n</ng-template>\\n\\n<ng-container\\n  bbAccountSelectorStateCustomizable\\n  [bbHostRef]=\\\"hostRef\\\"\\n>\\n</ng-container>\\n\\n<ng-template\\n  bbAccountSelectorStateCustomizable\\n  let-hostRef\\n>\\n  <bb-account-state-ui\\n    *ngIf=\\\"hostRef.selectedAccountState\\\"\\n    [isDisplayingAlert]=\\\"(hostRef.showAccountState$ | async) && ((hostRef.multiple | async) === false)\\\"\\n    [item]=\\\"hostRef.selectedAccountState\\\"\\n  >\\n  <span i18n=\\\"@@product-summary-account-selector.account-state.message\\\">\\n      {hostRef.selectedAccountState?.severity, select, warning {This account is temporarily\\n        inactive. For more info please contact your bank.} error {This account is permanently disabled. For more info please\\n        contact your bank.}}\\n  </span>\\n  </bb-account-state-ui>\\n</ng-template>\\n\\n<ng-template\\n  bbAccountSelectorMultiSelectedItemsCustomizable\\n  let-hostRef\\n  let-items=\\\"context.items\\\"\\n  let-accounts=\\\"context.accounts\\\"\\n>\\n  <div class=\\\"bb-account-selector__selected\\\">\\n    <div class=\\\"bb-account-selector__selected-accounts-number bb-text-bold\\\">\\n      <span i18n=\\\"Selected Accounts|Selected Accounts multi label @@bb-product-summary-account-selector.multi.label\\\">\\n        { items.length, plural, =1 {1 account selected} other {{{accounts.length === items.length ? 'All' : items.length}} accounts selected}}\\n      </span>\\n    </div>\\n    <div class=\\\"bb-account-selector__selected-accounts bb-text-subtitle\\\">\\n      <ng-container *ngIf=\\\"accounts.length === items.length; else selectedAccountsTemplate\\\">\\n        {{ items.length }}\\n        <span\\n          i18n=\\\"\\n             All Selected Accounts|All Selected Accounts label @@product-summary-account-selector.allSelectedAccounts.label\\n          \\\"\\n          class=\\\"bb-account-selector__selected-account\\\"\\n        >\\n          accounts\\n        </span>\\n      </ng-container>\\n      <ng-template #selectedAccountsTemplate>\\n        <bb-ellipsis-ui>\\n          <ng-container *ngFor=\\\"let item of items; let i = index\\\">\\n                <span class=\\\"bb-account-selector__selected-account\\\"\\n                >{{ hostRef.getAlias(item)\\n                  }}<span *ngIf=\\\"i !== items.length - 1\\\" class=\\\"bb-account-selector__selected-account-separator\\\">, </span>\\n                </span>\\n          </ng-container>\\n        </bb-ellipsis-ui>\\n      </ng-template>\\n    </div>\\n  </div>\\n</ng-template>\\n\", components: [{ type: i0.forwardRef(function () { return i4.AccountSelectorComponent; }), selector: \"bb-account-selector-ui\", inputs: [\"items\", \"disabled\", \"notFoundText\", \"showError\", \"productNumberFormat\", \"selectedItems\", \"multiple\", \"closeOnSelect\", \"searchable\", \"clearable\", \"placeholder\", \"loading\", \"dropdownPosition\", \"disableScrollEnd\", \"highlight\", \"filterItems\", \"markFirst\", \"internalFiltering\", \"virtualScroll\", \"required\", \"typeahead\", \"minTermLength\", \"typeToSearchText\", \"aria-describedby\", \"aria-labelledby\", \"aria-invalid\", \"searchFunc\", \"showCurrencySymbol\", \"showBankBranchCode\", \"groupByFn\", \"groupValueFn\", \"size\", \"compareItemsWith\"], outputs: [\"search\", \"clearSearch\", \"scroll\", \"scrollToEnd\", \"remove\", \"change\", \"filterChange\", \"focus\", \"blur\"] }, { type: i0.forwardRef(function () { return i5.InputCheckboxComponent; }), selector: \"bb-input-checkbox-ui\", inputs: [\"indeterminate\"], outputs: [\"indeterminateChange\"] }, { type: i0.forwardRef(function () { return ProductSummaryAccountSelectorItemComponent; }), selector: \"bb-product-summary-account-selector-item\", inputs: [\"isCollapsedView\", \"productNumberType\", \"showExternalInfo\", \"externalLogo\", \"externalName\", \"externalSyncDate\"] }, { type: i0.forwardRef(function () { return i7.EmptyStateComponent; }), selector: \"bb-empty-state-ui\", inputs: [\"title\", \"subtitle\", \"showIcon\", \"iconClasses\", \"iconModifier\", \"iconSize\", \"iconColor\"] }, { type: i0.forwardRef(function () { return i8.LoadingIndicatorComponent; }), selector: \"bb-loading-indicator-ui\", inputs: [\"text\", \"loaderSize\", \"showDelay\", \"hasBackground\", \"inline\"] }, { type: i0.forwardRef(function () { return i1$1.AccountStateComponent; }), selector: \"bb-account-state-ui\", inputs: [\"isDisplayingAlert\", \"item\"] }, { type: i0.forwardRef(function () { return i10.EllipsisComponent; }), selector: \"bb-ellipsis-ui\", inputs: [\"text\", \"tooltipTriggers\", \"lineClamp\"] }], directives: [{ type: i0.forwardRef(function () { return i3.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i0.forwardRef(function () { return ProductSummaryAccountSelectorDropdownCustomizableDirective; }), selector: \"[bbAccountSelectorDropdownCustomizable]\" }, { type: i0.forwardRef(function () { return i4.CustomSingleSelectedItemLabelDirective; }), selector: \"ng-template[bbCustomSingleSelectedItemLabel]\" }, { type: i0.forwardRef(function () { return ProductSummaryAccountSelectorItemCustomizableDirective; }), selector: \"[bbAccountSelectorItemCustomizable]\" }, { type: i0.forwardRef(function () { return i4.CustomMultiSelectedItemsLabelDirective; }), selector: \"ng-template[bbCustomMultiSelectedItemsLabel]\" }, { type: i0.forwardRef(function () { return ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective; }), selector: \"[bbAccountSelectorMultiSelectedItemsCustomizable]\" }, { type: i0.forwardRef(function () { return i4.CustomOptionItemDirective; }), selector: \"ng-template[bbCustomOptionItem]\" }, { type: i0.forwardRef(function () { return i12.NgControlStatus; }), selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i0.forwardRef(function () { return i12.NgModel; }), selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i0.forwardRef(function () { return ProductSummaryAccountSelectorLoadingCustomizableDirective; }), selector: \"[bbAccountSelectorLoadingCustomizable]\" }, { type: i0.forwardRef(function () { return ProductSummaryAccountSelectorStateCustomizableDirective; }), selector: \"[bbAccountSelectorStateCustomizable]\" }, { type: i0.forwardRef(function () { return i3.NgForOf; }), selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], pipes: { \"async\": i0.forwardRef(function () { return i3.AsyncPipe; }), \"bbProductNumberValue\": i0.forwardRef(function () { return i3$1.ProductNumberValuePipe; }), \"bbProductNumberType\": i0.forwardRef(function () { return i3$1.ProductNumberTypePipe; }) } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryAccountSelectorWidgetComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bb-product-summary-account-selector-widget',\n                    templateUrl: 'product-summary-account-selector-widget.component.html',\n                    providers: [ProductSummaryService],\n                }]\n        }], ctorParameters: function () { return [{ type: i1$2.ActivatedRoute }, { type: ProductSummaryService }, { type: i3$1.ProductsExternalInfoService }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PUBSUB]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [BB_PRDSUM_ACCOUNT_SELECTOR_CONFIG_TOKEN]\n                }] }]; }, propDecorators: { refreshAccountListEvent: [{\n                type: Input,\n                args: [WidgetProperty.EVENT_REFRESH_ACCOUNT_LIST]\n            }], multipleValue: [{\n                type: Input,\n                args: [WidgetProperty.MULTIPLE]\n            }], filterItemsValue: [{\n                type: Input,\n                args: [WidgetProperty.FILTER_ITEMS]\n            }], showAccountStateValue: [{\n                type: Input,\n                args: [WidgetProperty.SHOW_ACCOUNT_STATE]\n            }], selectedAccount: [{\n                type: Output\n            }], selectedKind: [{\n                type: Output\n            }] } });\n/**\n * This is an extension slot to be used for customizing the entire selector\n *\n * @usageNotes\n *\n * ### Customize the account selector\n *\n * ```html\n * <ng-template\n *   bbAccountSelectorDropdownCustomizable\n *   let-hostRef\n *   let-accounts=\"context\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryAccountSelectorWidgetModule\n */\nclass ProductSummaryAccountSelectorDropdownCustomizableDirective extends BbTemplate {\n}\nProductSummaryAccountSelectorDropdownCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryAccountSelectorDropdownCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nProductSummaryAccountSelectorDropdownCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ProductSummaryAccountSelectorDropdownCustomizableDirective, selector: \"[bbAccountSelectorDropdownCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryAccountSelectorDropdownCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbAccountSelectorDropdownCustomizable]',\n                }]\n        }] });\n/**\n * This is an extension slot to be used for customizing an account selector item\n * This slot is used for displaying items in the dropdown list and\n * in the selected account (single-select only)\n *\n * @usageNotes\n *\n * ### Customize an account selector item\n *\n * ```html\n *  <ng-template\n *    bbAccountSelectorItemCustomizable\n *    let-hostRef\n *    let-item=\"context\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryAccountSelectorWidgetModule\n */\nclass ProductSummaryAccountSelectorItemCustomizableDirective extends BbTemplate {\n}\nProductSummaryAccountSelectorItemCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryAccountSelectorItemCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nProductSummaryAccountSelectorItemCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ProductSummaryAccountSelectorItemCustomizableDirective, selector: \"[bbAccountSelectorItemCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryAccountSelectorItemCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbAccountSelectorItemCustomizable]',\n                }]\n        }] });\n/**\n * This is an extension slot to be used for customizing selected accounts\n * in multi-select mode\n *\n * @usageNotes\n *\n * ### Customize the selected accounts\n *\n * ```html\n * <ng-template\n *   bbAccountSelectorMultiSelectedItemsCustomizable\n *   let-hostRef\n *   let-items=\"context.items\"\n *   let-accounts=\"context.accounts\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryAccountSelectorWidgetModule\n */\nclass ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective extends BbTemplate {\n}\nProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective, selector: \"[bbAccountSelectorMultiSelectedItemsCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbAccountSelectorMultiSelectedItemsCustomizable]',\n                }]\n        }] });\n/**\n * This is an extension slot to be used for customizing the loader\n *\n * @usageNotes\n *\n * ### Customize the account selector\n *\n * ```html\n * <ng-template\n *   bbAccountSelectorLoadingCustomizable\n *   let-hostRef>\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryAccountSelectorWidgetModule\n */\nclass ProductSummaryAccountSelectorLoadingCustomizableDirective extends BbTemplate {\n}\nProductSummaryAccountSelectorLoadingCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryAccountSelectorLoadingCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nProductSummaryAccountSelectorLoadingCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ProductSummaryAccountSelectorLoadingCustomizableDirective, selector: \"[bbAccountSelectorLoadingCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryAccountSelectorLoadingCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbAccountSelectorLoadingCustomizable]',\n                }]\n        }] });\n/**\n * This is an extension slot to be used for customizing the state of the selected account\n *\n * @usageNotes\n *\n * ### Customize the account state\n *\n * ```html\n * <ng-template\n *   bbAccountSelectorStateCustomizable\n *   let-hostRef>\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryAccountSelectorWidgetModule\n */\nclass ProductSummaryAccountSelectorStateCustomizableDirective extends BbTemplate {\n}\nProductSummaryAccountSelectorStateCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryAccountSelectorStateCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nProductSummaryAccountSelectorStateCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ProductSummaryAccountSelectorStateCustomizableDirective, selector: \"[bbAccountSelectorStateCustomizable]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryAccountSelectorStateCustomizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bbAccountSelectorStateCustomizable]',\n                }]\n        }] });\n\nconst components = [ProductSummaryAccountSelectorWidgetComponent, ProductSummaryAccountSelectorItemComponent];\nconst directives = [\n    ProductSummaryAccountSelectorDropdownCustomizableDirective,\n    ProductSummaryAccountSelectorItemCustomizableDirective,\n    ProductSummaryAccountSelectorLoadingCustomizableDirective,\n    ProductSummaryAccountSelectorStateCustomizableDirective,\n    ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective,\n];\nconst uiModules = [\n    ProductItemCustomModule,\n    ProductKindModule,\n    AccountStateModule,\n    AccountSelectorModule,\n    InputCheckboxModule,\n    ProductItemBasicAccountModule,\n    EmptyStateModule,\n    LoadingIndicatorModule,\n    EllipsisModule,\n    ProductNumberModule,\n    AmountModule,\n    ValidationModule,\n    DatePipeModule,\n];\nconst services = [ProductsExternalInfoService];\n/**\n * Exports the Widgets and UI components for displaying of the account selector. (Retail banking)\n *\n * The following widgets are included in this module:\n *  - `ProductSummaryAccountSelectorWidgetComponent`\n *\n * @see ProductSummaryAccountSelectorWidgetComponent\n *\n * @usageNotes\n *\n * ### Include the exported widgets in your `AppModule`:\n *\n * ```typescript\n * @NgModule({\n *   imports: [\n *     ProductSummaryAccountSelectorWidgetModule ,\n *   ],\n *   ...\n * })\n * export class AppModule {}\n * ```\n */\nclass ProductSummaryAccountSelectorWidgetModule {\n}\nProductSummaryAccountSelectorWidgetModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryAccountSelectorWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nProductSummaryAccountSelectorWidgetModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryAccountSelectorWidgetModule, declarations: [ProductSummaryAccountSelectorWidgetComponent, ProductSummaryAccountSelectorItemComponent, ProductSummaryAccountSelectorDropdownCustomizableDirective,\n        ProductSummaryAccountSelectorItemCustomizableDirective,\n        ProductSummaryAccountSelectorLoadingCustomizableDirective,\n        ProductSummaryAccountSelectorStateCustomizableDirective,\n        ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective], imports: [CommonModule,\n        FormsModule, i1$3.BackbaseCoreModule, ProductItemCustomModule,\n        ProductKindModule,\n        AccountStateModule,\n        AccountSelectorModule,\n        InputCheckboxModule,\n        ProductItemBasicAccountModule,\n        EmptyStateModule,\n        LoadingIndicatorModule,\n        EllipsisModule,\n        ProductNumberModule,\n        AmountModule,\n        ValidationModule,\n        DatePipeModule], exports: [ProductSummaryAccountSelectorWidgetComponent, ProductSummaryAccountSelectorItemComponent, ProductSummaryAccountSelectorDropdownCustomizableDirective,\n        ProductSummaryAccountSelectorItemCustomizableDirective,\n        ProductSummaryAccountSelectorLoadingCustomizableDirective,\n        ProductSummaryAccountSelectorStateCustomizableDirective,\n        ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective, ProductItemCustomModule,\n        ProductKindModule,\n        AccountStateModule,\n        AccountSelectorModule,\n        InputCheckboxModule,\n        ProductItemBasicAccountModule,\n        EmptyStateModule,\n        LoadingIndicatorModule,\n        EllipsisModule,\n        ProductNumberModule,\n        AmountModule,\n        ValidationModule,\n        DatePipeModule] });\nProductSummaryAccountSelectorWidgetModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryAccountSelectorWidgetModule, providers: [...services, ...productSummaryAccountSelectorConfigProviders], imports: [[\n            CommonModule,\n            FormsModule,\n            BackbaseCoreModule.withConfig({\n                classMap: { ProductSummaryAccountSelectorWidgetComponent },\n            }),\n            ...uiModules,\n        ], ProductItemCustomModule,\n        ProductKindModule,\n        AccountStateModule,\n        AccountSelectorModule,\n        InputCheckboxModule,\n        ProductItemBasicAccountModule,\n        EmptyStateModule,\n        LoadingIndicatorModule,\n        EllipsisModule,\n        ProductNumberModule,\n        AmountModule,\n        ValidationModule,\n        DatePipeModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ProductSummaryAccountSelectorWidgetModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        BackbaseCoreModule.withConfig({\n                            classMap: { ProductSummaryAccountSelectorWidgetComponent },\n                        }),\n                        ...uiModules,\n                    ],\n                    declarations: [...components, ...directives],\n                    exports: [...components, ...directives, ...uiModules],\n                    providers: [...services, ...productSummaryAccountSelectorConfigProviders],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BB_PRDSUM_ACCOUNT_SELECTOR_CONFIG_TOKEN, ProductKindsAccessDenied, ProductKindsBadRequest, ProductKindsUnknownError, ProductSummaryAccountSelectorDropdownCustomizableDirective, ProductSummaryAccountSelectorItemComponent, ProductSummaryAccountSelectorItemCustomizableDirective, ProductSummaryAccountSelectorLoadingCustomizableDirective, ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective, ProductSummaryAccountSelectorStateCustomizableDirective, ProductSummaryAccountSelectorWidgetComponent, ProductSummaryAccountSelectorWidgetModule, ProductSummaryService, WidgetProperty, productSummaryAccountSelectorConfigProviders, productSummaryAccountSelectorDefaults };\n"]},"metadata":{},"sourceType":"module"}