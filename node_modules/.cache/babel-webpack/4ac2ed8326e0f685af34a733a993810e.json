{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, ContentChildren, NgModule, Injectable, Optional, Inject } from '@angular/core';\nimport * as i1$1 from '@backbase/ui-ang/media-query-lib';\nimport { MediaQueryModule } from '@backbase/ui-ang/media-query-lib';\nimport * as i1 from '@angular/router';\nimport { NavigationEnd, RouterLinkActive } from '@angular/router';\nimport { filter, switchMap, first, withLatestFrom, map, distinctUntilChanged, shareReplay, tap } from 'rxjs/operators';\nimport { Subject, of, EMPTY, merge } from 'rxjs';\nconst LAYOUT_CONFIG_TOKEN = new InjectionToken('injectable token for LayoutService');\n\nclass LayoutNavDropdownDirective {\n  constructor(router, ngZone) {\n    this.router = router;\n    this.ngZone = ngZone;\n    this.isActive = false;\n  }\n\n  ngAfterContentInit() {\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd), switchMap(_ => this.ngZone.onStable.pipe(first()))).subscribe(() => {\n      this.ngZone.run(() => {\n        if (this.routerLinks) {\n          this.isActive = this.routerLinks.toArray().some(navLink => navLink.isActive);\n        }\n      });\n    });\n  }\n\n}\n\nLayoutNavDropdownDirective.ɵfac = function LayoutNavDropdownDirective_Factory(t) {\n  return new (t || LayoutNavDropdownDirective)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nLayoutNavDropdownDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LayoutNavDropdownDirective,\n  selectors: [[\"\", \"bbLayoutNavDropdown\", \"\"]],\n  contentQueries: function LayoutNavDropdownDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, RouterLinkActive, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.routerLinks = _t);\n    }\n  },\n  exportAs: [\"bbLayoutNavDropdown\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayoutNavDropdownDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bbLayoutNavDropdown]',\n      exportAs: 'bbLayoutNavDropdown'\n    }]\n  }], function () {\n    return [{\n      type: i1.Router\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    routerLinks: [{\n      type: ContentChildren,\n      args: [RouterLinkActive, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n\nclass LayoutModule {\n  static forRoot(config) {\n    return {\n      ngModule: LayoutModule,\n      providers: [{\n        provide: LAYOUT_CONFIG_TOKEN,\n        useValue: config\n      }]\n    };\n  }\n\n}\n\nLayoutModule.ɵfac = function LayoutModule_Factory(t) {\n  return new (t || LayoutModule)();\n};\n\nLayoutModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LayoutModule\n});\nLayoutModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, MediaQueryModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayoutModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MediaQueryModule],\n      declarations: [LayoutNavDropdownDirective],\n      exports: [LayoutNavDropdownDirective]\n    }]\n  }], null, null);\n})();\n/**\n * ## Navigation Type Horizontal\n * - On large desktop show the menu in the topbar. On mobile show a side menu\n *\n * ## Navigation Type Vertical\n * - On large desktop, show the sidebar. Toggling collapses the nav items into icons.\n * - On tablet and small desktop, collapse the nav items into icons. Toggling shows the full nav items.\n * - On mobile, don't collapse the sidebar, but hide it. Toggling shows the sidebar.\n */\n\n\nclass LayoutService {\n  constructor(mediaQueryService, router, config) {\n    this.mediaQueryService = mediaQueryService;\n    this.router = router;\n    this.config = config;\n    this.isHighResolutionViewSubject = new Subject();\n    this.isHighResolutionView$ = this.isHighResolutionViewSubject.asObservable();\n    this.manuallyExpanded$ = new Subject();\n    this.isNavExpanded = false;\n    /**\n     * Default breakpoint used by business\n     */\n\n    if (!this.config) {\n      this.config = {\n        collapseBreakpoint: 'xl'\n      };\n    }\n    /**\n     * Observing the changes for screen resize\n     */\n\n\n    const isLowResolutionView$ = this.mediaQueryService.isMediaBreakpointMatches('max-width', this.config.collapseBreakpoint);\n    /**\n     * In mobile view after navigation to another route the sidebar should collapse\n     */\n\n    const collapseOnRouterNav$ = this.router.events.pipe(filter(event => event instanceof NavigationEnd), withLatestFrom(isLowResolutionView$), switchMap(([, isLowResolutionView]) => isLowResolutionView ? of(false) : EMPTY));\n    this.navigationExpanded$ = merge(isLowResolutionView$.pipe(map(isLowResolutionView => {\n      this.isHighResolutionViewSubject.next(!isLowResolutionView);\n      return !isLowResolutionView;\n    })), collapseOnRouterNav$, this.manuallyExpanded$).pipe(distinctUntilChanged(), shareReplay({\n      bufferSize: 1,\n      refCount: true\n    }), tap(isExpanded => {\n      this.isNavExpanded = isExpanded;\n    }));\n  }\n  /**\n   * Toggling navigation visibility\n   */\n\n\n  toggleNav() {\n    this.isNavExpanded = !this.isNavExpanded;\n    this.manuallyExpanded$.next(this.isNavExpanded);\n  }\n\n}\n\nLayoutService.ɵfac = function LayoutService_Factory(t) {\n  return new (t || LayoutService)(i0.ɵɵinject(i1$1.MediaQueryService), i0.ɵɵinject(i1.Router), i0.ɵɵinject(LAYOUT_CONFIG_TOKEN, 8));\n};\n\nLayoutService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: LayoutService,\n  factory: LayoutService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayoutService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1$1.MediaQueryService\n    }, {\n      type: i1.Router\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [LAYOUT_CONFIG_TOKEN]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { LayoutModule, LayoutNavDropdownDirective, LayoutService };","map":{"version":3,"sources":["C:/Users/hbaylon/Documents/West Monroe/Projects/Backbase2/web/retail-usa-web/node_modules/@backbase/ui-ang/fesm2015/backbase-ui-ang-layout.js"],"names":["CommonModule","i0","InjectionToken","Directive","ContentChildren","NgModule","Injectable","Optional","Inject","i1$1","MediaQueryModule","i1","NavigationEnd","RouterLinkActive","filter","switchMap","first","withLatestFrom","map","distinctUntilChanged","shareReplay","tap","Subject","of","EMPTY","merge","LAYOUT_CONFIG_TOKEN","LayoutNavDropdownDirective","constructor","router","ngZone","isActive","ngAfterContentInit","events","pipe","event","_","onStable","subscribe","run","routerLinks","toArray","some","navLink","ɵfac","Router","NgZone","ɵdir","type","args","selector","exportAs","descendants","LayoutModule","forRoot","config","ngModule","providers","provide","useValue","ɵmod","ɵinj","imports","declarations","exports","LayoutService","mediaQueryService","isHighResolutionViewSubject","isHighResolutionView$","asObservable","manuallyExpanded$","isNavExpanded","collapseBreakpoint","isLowResolutionView$","isMediaBreakpointMatches","collapseOnRouterNav$","isLowResolutionView","navigationExpanded$","next","bufferSize","refCount","isExpanded","toggleNav","MediaQueryService","ɵprov","providedIn","undefined","decorators"],"mappings":"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","sourcesContent":["import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, ContentChildren, NgModule, Injectable, Optional, Inject } from '@angular/core';\nimport * as i1$1 from '@backbase/ui-ang/media-query-lib';\nimport { MediaQueryModule } from '@backbase/ui-ang/media-query-lib';\nimport * as i1 from '@angular/router';\nimport { NavigationEnd, RouterLinkActive } from '@angular/router';\nimport { filter, switchMap, first, withLatestFrom, map, distinctUntilChanged, shareReplay, tap } from 'rxjs/operators';\nimport { Subject, of, EMPTY, merge } from 'rxjs';\n\nconst LAYOUT_CONFIG_TOKEN = new InjectionToken('injectable token for LayoutService');\n\nclass LayoutNavDropdownDirective {\n    constructor(router, ngZone) {\n        this.router = router;\n        this.ngZone = ngZone;\n        this.isActive = false;\n    }\n    ngAfterContentInit() {\n        this.router.events\n            .pipe(filter((event) => event instanceof NavigationEnd), switchMap((_) => this.ngZone.onStable.pipe(first())))\n            .subscribe(() => {\n            this.ngZone.run(() => {\n                if (this.routerLinks) {\n                    this.isActive = this.routerLinks.toArray().some((navLink) => navLink.isActive);\n                }\n            });\n        });\n    }\n}\nLayoutNavDropdownDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LayoutNavDropdownDirective, deps: [{ token: i1.Router }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nLayoutNavDropdownDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LayoutNavDropdownDirective, selector: \"[bbLayoutNavDropdown]\", queries: [{ propertyName: \"routerLinks\", predicate: RouterLinkActive, descendants: true }], exportAs: [\"bbLayoutNavDropdown\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LayoutNavDropdownDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[bbLayoutNavDropdown]', exportAs: 'bbLayoutNavDropdown' }]\n        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i0.NgZone }]; }, propDecorators: { routerLinks: [{\n                type: ContentChildren,\n                args: [RouterLinkActive, { descendants: true }]\n            }] } });\n\nclass LayoutModule {\n    static forRoot(config) {\n        return { ngModule: LayoutModule, providers: [{ provide: LAYOUT_CONFIG_TOKEN, useValue: config }] };\n    }\n}\nLayoutModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LayoutModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLayoutModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LayoutModule, declarations: [LayoutNavDropdownDirective], imports: [CommonModule, MediaQueryModule], exports: [LayoutNavDropdownDirective] });\nLayoutModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LayoutModule, imports: [[CommonModule, MediaQueryModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LayoutModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MediaQueryModule],\n                    declarations: [LayoutNavDropdownDirective],\n                    exports: [LayoutNavDropdownDirective],\n                }]\n        }] });\n\n/**\n * ## Navigation Type Horizontal\n * - On large desktop show the menu in the topbar. On mobile show a side menu\n *\n * ## Navigation Type Vertical\n * - On large desktop, show the sidebar. Toggling collapses the nav items into icons.\n * - On tablet and small desktop, collapse the nav items into icons. Toggling shows the full nav items.\n * - On mobile, don't collapse the sidebar, but hide it. Toggling shows the sidebar.\n */\nclass LayoutService {\n    constructor(mediaQueryService, router, config) {\n        this.mediaQueryService = mediaQueryService;\n        this.router = router;\n        this.config = config;\n        this.isHighResolutionViewSubject = new Subject();\n        this.isHighResolutionView$ = this.isHighResolutionViewSubject.asObservable();\n        this.manuallyExpanded$ = new Subject();\n        this.isNavExpanded = false;\n        /**\n         * Default breakpoint used by business\n         */\n        if (!this.config) {\n            this.config = { collapseBreakpoint: 'xl' };\n        }\n        /**\n         * Observing the changes for screen resize\n         */\n        const isLowResolutionView$ = this.mediaQueryService.isMediaBreakpointMatches('max-width', this.config.collapseBreakpoint);\n        /**\n         * In mobile view after navigation to another route the sidebar should collapse\n         */\n        const collapseOnRouterNav$ = this.router.events.pipe(filter((event) => event instanceof NavigationEnd), withLatestFrom(isLowResolutionView$), switchMap(([, isLowResolutionView]) => (isLowResolutionView ? of(false) : EMPTY)));\n        this.navigationExpanded$ = merge(isLowResolutionView$.pipe(map((isLowResolutionView) => {\n            this.isHighResolutionViewSubject.next(!isLowResolutionView);\n            return !isLowResolutionView;\n        })), collapseOnRouterNav$, this.manuallyExpanded$).pipe(distinctUntilChanged(), shareReplay({ bufferSize: 1, refCount: true }), tap((isExpanded) => {\n            this.isNavExpanded = isExpanded;\n        }));\n    }\n    /**\n     * Toggling navigation visibility\n     */\n    toggleNav() {\n        this.isNavExpanded = !this.isNavExpanded;\n        this.manuallyExpanded$.next(this.isNavExpanded);\n    }\n}\nLayoutService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LayoutService, deps: [{ token: i1$1.MediaQueryService }, { token: i1.Router }, { token: LAYOUT_CONFIG_TOKEN, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nLayoutService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LayoutService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LayoutService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.MediaQueryService }, { type: i1.Router }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LAYOUT_CONFIG_TOKEN]\n                }] }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LayoutModule, LayoutNavDropdownDirective, LayoutService };\n"]},"metadata":{},"sourceType":"module"}